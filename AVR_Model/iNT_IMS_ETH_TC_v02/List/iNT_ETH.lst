
AVRASM ver. 2.1.30  C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm Mon Jan 25 17:16:04 2016

C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 358a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 41fc 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 420d 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 4209 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 4205 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3fa6 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 4226 	JMP  _timer3_ovf_isr
000048 940c 40c8 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 4242 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 40d4 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 40f2 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 2e30
000077 3432
000078 0062      	.DB  0x30,0x2E,0x32,0x34,0x62,0x0
                 _tempTable:
000079 0000
00007a c2a0
00007b 0000
00007c c28c      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0x8C,0xC2
00007d 0000
00007e c270
00007f 0000
000080 c248      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0x48,0xC2
000081 0000
000082 c220
000083 0000
000084 c1f0      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0xF0,0xC1
000085 0000
000086 c1a0
000087 0000
000088 c120      	.DB  0x0,0x0,0xA0,0xC1,0x0,0x0,0x20,0xC1
000089 0000
00008a 0000
00008b 0000
00008c 4120      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x41
00008d 0000
00008e 41a0
00008f 0000
000090 41f0      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0xF0,0x41
000091 0000
000092 4220
000093 0000
000094 4248      	.DB  0x0,0x0,0x20,0x42,0x0,0x0,0x48,0x42
000095 0000
000096 4270      	.DB  0x0,0x0,0x70,0x42
                 _adcTable:
000097 6333
000098 4391
000099 85fa
00009a 439a      	.DB  0x33,0x63,0x91,0x43,0xFA,0x85,0x9A,0x43
00009b 5c05
00009c 43a3
00009d e979
00009e 43ab      	.DB  0x5,0x5C,0xA3,0x43,0x79,0xE9,0xAB,0x43
00009f 3237
0000a0 43b4
0000a1 39a0
0000a2 43bc      	.DB  0x37,0x32,0xB4,0x43,0xA0,0x39,0xBC,0x43
0000a3 030f
0000a4 43c4
0000a5 917f
0000a6 43cb      	.DB  0xF,0x3,0xC4,0x43,0x7F,0x91,0xCB,0x43
0000a7 e7ab
0000a8 43d2
0000a9 0810
0000aa 43da      	.DB  0xAB,0xE7,0xD2,0x43,0x10,0x8,0xDA,0x43
0000ab f4fb
0000ac 43e0
0000ad b08d
0000ae 43e7      	.DB  0xFB,0xF4,0xE0,0x43,0x8D,0xB0,0xE7,0x43
0000af 3cc6
0000b0 43ee
0000b1 9b99
0000b2 43f4      	.DB  0xC6,0x3C,0xEE,0x43,0x99,0x9B,0xF4,0x43
0000b3 ceb5
0000b4 43fa      	.DB  0xB5,0xCE,0xFA,0x43
                 _error_msg:
0000b5 4dae
0000b6 0000
0000b7 4daf
0000b8 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
0000b9 4dbb
0000ba 0000
0000bb 4dc6
0000bc 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
0000bd 4dd3
0000be 0000
0000bf 4dde
0000c0 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
0000c1 4de9
0000c2 0000
0000c3 4df9
0000c4 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
0000c5 4e03
0000c6 0000
0000c7 4e0c
0000c8 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
0000c9 4e1e
0000ca 0000
0000cb 4e31
0000cc 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
0000cd 4e42
0000ce 0000
0000cf 4e51
0000d0 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
0000d1 4e62
0000d2 0000
0000d3 4e72
0000d4 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
0000d5 4324
0000d6 444d
0000d7 4453
0000d8 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
0000d9 4324
0000da 444d
0000db 4152
0000dc 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000dd 4324
0000de 444d
0000df 4c43
0000e0 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000e1 4324
0000e2 444d
0000e3 5653
0000e4 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000e5 4324
0000e6 444d
0000e7 4e53
0000e8 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000e9 4324
0000ea 444d
0000eb 4544
0000ec 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000ed 4324
0000ee 444d
0000ef 4444
0000f0 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000f1 4324
0000f2 444d
0000f3 5353
0000f4 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000f5 4324
0000f6 444d
0000f7 5352
0000f8 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _cmdGetADCSensor:
0000f9 4324
0000fa 444d
0000fb 4147
0000fc 0053      	.DB  0x24,0x43,0x4D,0x44,0x47,0x41,0x53,0x0
                 _k1:
0000fd 2220
0000fe 2b2a
0000ff 5b2c
000100 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
000101 7f7c
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1238): warning: .cseg .db misalignment - padding zero byte
000102 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
000103 0000
000104 0000      	.DW  0,0
                 
                 _0x3:
000105 0000
000106 0000
000107 0000
000108 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000109 0000
00010a 0a3d
00010b 3fd7
00010c 0000      	.DB  0x0,0x0,0x3D,0xA,0xD7,0x3F,0x0,0x0
00010d 0000
00010e 0000
00010f 0000
000110 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000111 0000
000112 0000
000113 0000
000114 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000115 0000
000116 0000
000117 0000
000118 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000119 0000
00011a 0000
00011b 0000
00011c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011d 0000
00011e 0000
00011f 0000
000120 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000121 0000
000122 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1252): warning: .cseg .db misalignment - padding zero byte
000123 0000      	.DB  0x0,0x0,0x0,0x0,0x0
                 _0xA5:
000124 ffff
000125 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
000126 0a0d
000127 2d2d
000128 2d2d
000129 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00012a 4920
00012b 696e
00012c 6974
00012d 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
00012e 4320
00012f 6d6f
000130 6c70
000131 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
000132 2065
000133 2d2d
000134 2d2d
000135 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000136 0a0d
000137 4300
000138 6e6f
000139 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
00013a 7463
00013b 3a20
00013c 6320
00013d 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
00013e 6174
00013f 7463
000140 742e
000141 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
000142 6e61
000143 6740
000144 616d
000145 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000146 632e
000147 6d6f
000148 0a0d
000149 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
00014a 616d
00014b 6e69
00014c 203e
00014d 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
00014e 5374
00014f 6e65
000150 6f73
000151 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000152 6e6f
000153 6966
000154 2867
000155 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000156 2029
000157 7265
000158 6f72
000159 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
00015a 000a
00015b 6d3c
00015c 6961
00015d 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
00015e 6120
00015f 6464
000160 6553
000161 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
000162 726f
000163 6144
000164 6174
000165 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000166 7565
000167 2865
000168 6425
000169 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
00016a 312e
00016b 2966
00016c 6620
00016d 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
00016e 656c
00016f 0d64
000170 000a
000171 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
000172 6961
000173 3e6e
000174 7520
000175 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000176 7461
000177 5365
000178 6174
000179 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00017a 2873
00017b 2029
00017c 6166
00017d 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00017e 6465
00017f 0a0d
000180 3c00
000181 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
000182 6e69
000183 203e
000184 706f
000185 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000186 7461
000187 6e69
000188 2067
000189 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
00018a 6564
00018b 6520
00018c 7272
00018d 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
00018e 2121
00018f 5b20
000190 7830
000191 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
000192 5832
000193 0d5d
000194 000a
000195 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000196 6961
000197 3e6e
000198 5320
000199 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
00019a 6572
00019b 6461
00019c 654d
00019d 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
00019e 7972
00019f 6552
0001a0 616d
0001a1 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
0001a2 2928
0001a3 6620
0001a4 6961
0001a5 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0001a6 0d64
0001a7 000a
0001a8 6d3c
0001a9 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
0001aa 3e6e
0001ab 5b20
0001ac 6544
0001ad 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
0001ae 6563
0001af 6420
0001b0 7369
0001b1 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
0001b2 656c
0001b3 205d
0001b4 545b
0001b5 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
0001b6 2d45
0001b7 5d4b
0001b8 2420
0001b9 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
0001ba 5344
0001bb 534e
0001bc 4e20
0001bd 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
0001be 5820
0001bf 582e
0001c0 2058
0001c1 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
0001c2 2020
0001c3 2020
0001c4 2020
0001c5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001c6 2020
0001c7 2020
0001c8 2020
0001c9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ca 0d20
0001cb 3c00
0001cc 616d
0001cd 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
0001ce 203e
0001cf 445b
0001d0 7665
0001d1 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
0001d2 2065
0001d3 6964
0001d4 6173
0001d5 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
0001d6 5d65
0001d7 5b20
0001d8 5954
0001d9 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
0001da 4b2d
0001db 205d
0001dc 4324
0001dd 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
0001de 4e53
0001df 2053
0001e0 6425
0001e1 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
0001e2 2520
0001e3 2066
0001e4 2020
0001e5 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
0001e6 2020
0001e7 2020
0001e8 2020
0001e9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ea 2020
0001eb 2020
0001ec 2020
0001ed 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ee 000d
0001ef 6d3c
0001f0 6961
0001f1 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001f2 5b20
0001f3 6544
0001f4 6976
0001f5 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001f6 6420
0001f7 7369
0001f8 6261
0001f9 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001fa 205d
0001fb 545b
0001fc 5059
0001fd 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001fe 5d4b
0001ff 2420
000200 4d43
000201 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
000202 534e
000203 2520
000204 2064
000205 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
000206 6964
000207 6373
000208 6e6f
000209 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
00020a 7463
00020b 6465
00020c 2020
00020d 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
00020e 2020
00020f 2020
000210 2020
000211 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
000212 3c00
000213 616d
000214 6e69
000215 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000216 445b
000217 7665
000218 6369
000219 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
00021a 6964
00021b 6173
00021c 6c62
00021d 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
00021e 5b20
00021f 4d54
000220 4345
000221 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
000222 2020
000223 2020
000224 2020
000225 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000226 2020
000227 2020
000228 2020
000229 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022a 2020
00022b 2020
00022c 2020
00022d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022e 2020
00022f 2020
000230 2020
000231 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000232 2020
000233 2020
000234 2020
000235 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
000236 6d3c
000237 6961
000238 3e6e
000239 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
00023a 6544
00023b 6976
00023c 6563
00023d 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
00023e 7369
00023f 6261
000240 656c
000241 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
000242 505b
000243 3154
000244 3030
000245 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
000246 2020
000247 2020
000248 2020
000249 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024a 2020
00024b 2020
00024c 2020
00024d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024e 2020
00024f 2020
000250 2020
000251 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000252 2020
000253 2020
000254 2020
000255 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000256 2020
000257 2020
000258 0d20
000259 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
00025a 616d
00025b 6e69
00025c 203e
00025d 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
00025e 7665
00025f 6369
000260 2065
000261 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
000262 6173
000263 6c62
000264 5d65
000265 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000266 4552
000267 4553
000268 5652
000269 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
00026a 205d
00026b 2020
00026c 2020
00026d 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00026e 2020
00026f 2020
000270 2020
000271 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000272 2020
000273 2020
000274 2020
000275 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000276 2020
000277 2020
000278 2020
000279 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00027a 2020
00027b 2020
00027c 000d
00027d 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
00027e 6470
00027f 7461
000280 5365
000281 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
000282 7574
000283 3e73
000284 4520
000285 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000286 725f
000287 7473
000288 745f
000289 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
00028a 7265
00028b 7420
00028c 6d69
00028d 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
00028e 656c
00028f 7466
000290 3d20
000291 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
000292 646c
000293 2528
000294 586c
000295 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000296 000a
000297 0a0d
000298 653c
000299 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00029a 746e
00029b 6143
00029c 7470
00029d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00029e 3e65
00029f 2120
0002a0 2121
0002a1 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0002a2 2121
0002a3 2121
0002a4 2121
0002a5 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
0002a6 6e6f
0002a7 7469
0002a8 726f
0002a9 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
0002aa 646f
0002ab 2065
0002ac 2121
0002ad 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
0002ae 0d21
0002af 000a
0002b0 0a0d
0002b1 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
0002b2 6576
0002b3 746e
0002b4 6143
0002b5 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0002b6 7275
0002b7 3e65
0002b8 2120
0002b9 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0002ba 2121
0002bb 2121
0002bc 2121
0002bd 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002be 4d20
0002bf 6961
0002c0 746e
0002c1 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0002c2 6e61
0002c3 6563
0002c4 4920
0002c5 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
0002c6 7250
0002c7 676f
0002c8 6572
0002c9 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
0002ca 2120
0002cb 2121
0002cc 2121
0002cd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002ce 3c00
0002cf 7665
0002d0 6e65
0002d1 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002d2 7061
0002d3 7574
0002d4 6572
0002d5 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002d6 6461
0002d7 4564
0002d8 6576
0002d9 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
0002da 7551
0002db 7565
0002dc 2865
0002dd 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
0002de 6166
0002df 6c69
0002e0 6465
0002e1 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0002e2 0d00
0002e3 3c0a
0002e4 7665
0002e5 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002e6 4374
0002e7 7061
0002e8 7574
0002e9 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002ea 203e
0002eb 2121
0002ec 2121
0002ed 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002ee 2121
0002ef 2121
0002f0 2021
0002f1 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002f2 6e69
0002f3 5020
0002f4 776f
0002f5 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002f6 4420
0002f7 776f
0002f8 206e
0002f9 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002fa 2121
0002fb 0d21
0002fc 000a
0002fd 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002fe 653c
0002ff 6576
000300 746e
000301 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
000302 7470
000303 7275
000304 3e65
000305 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
000306 2121
000307 2121
000308 2121
000309 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00030a 2121
00030b 4d20
00030c 6961
00030d 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
00030e 6f50
00030f 6577
000310 2072
000311 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
000312 2120
000313 2121
000314 2121
000315 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000316 0d00
000317 3c0a
000318 7665
000319 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
00031a 4374
00031b 7061
00031c 7574
00031d 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00031e 203e
00031f 2121
000320 2121
000321 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000322 2121
000323 2121
000324 2021
000325 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
000326 7474
000327 7265
000328 2079
000329 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
00032a 2077
00032b 2121
00032c 2121
00032d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00032e 000a
00032f 0a0d
000330 653c
000331 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000332 746e
000333 6143
000334 7470
000335 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000336 3e65
000337 2120
000338 2121
000339 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00033a 2121
00033b 2121
00033c 2121
00033d 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
00033e 7461
00033f 6574
000340 7972
000341 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
000342 204b
000343 2121
000344 2121
000345 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000346 000a
000347 0a0d
000348 653c
000349 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00034a 746e
00034b 6143
00034c 7470
00034d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00034e 3e65
00034f 2120
000350 2121
000351 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000352 2121
000353 2121
000354 2121
000355 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000356 6d65
000357 726f
000358 2079
000359 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
00035a 2077
00035b 2121
00035c 2121
00035d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00035e 000a
00035f 0a0d
000360 653c
000361 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000362 746e
000363 6143
000364 7470
000365 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000366 3e65
000367 2120
000368 2121
000369 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00036a 2121
00036b 2121
00036c 2121
00036d 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
00036e 6d65
00036f 726f
000370 2079
000371 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
000372 6f72
000373 2072
000374 2121
000375 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000376 0d21
000377 000a
000378 0a0d
000379 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00037a 6576
00037b 746e
00037c 6143
00037d 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
00037e 7275
00037f 3e65
000380 2120
000381 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
000382 2121
000383 2121
000384 2121
000385 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000386 4d20
000387 6d65
000388 726f
000389 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
00038a 4b4f
00038b 2120
00038c 2121
00038d 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
00038e 0a0d
00038f 0d00
000390 3c0a
000391 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000392 6e65
000393 4374
000394 7061
000395 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000396 6572
000397 203e
000398 2121
000399 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
00039a 2121
00039b 2121
00039c 2121
00039d 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
00039e 6944
00039f 206e
0003a0 6425
0003a1 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
0003a2 7369
0003a3 6e69
0003a4 2067
0003a5 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
0003a6 2121
0003a7 0d21
0003a8 000a
0003a9 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0003aa 653c
0003ab 6576
0003ac 746e
0003ad 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0003ae 7470
0003af 7275
0003b0 3e65
0003b1 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0003b2 2121
0003b3 2121
0003b4 2121
0003b5 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0003b6 2121
0003b7 4420
0003b8 6e69
0003b9 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
0003ba 2064
0003bb 6146
0003bc 6c6c
0003bd 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
0003be 2067
0003bf 2121
0003c0 2121
0003c1 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0003c2 000a
0003c3 0a0d
0003c4 653c
0003c5 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0003c6 746e
0003c7 6143
0003c8 7470
0003c9 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0003ca 3e65
0003cb 2120
0003cc 2121
0003cd 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0003ce 2121
0003cf 2121
0003d0 2121
0003d1 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
0003d2 4f52
0003d3 4542
0003d4 2520
0003d5 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
0003d6 4944
0003d7 4353
0003d8 4e4f
0003d9 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
0003da 5443
0003db 2120
0003dc 2121
0003dd 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
0003de 0a0d
0003df 4100
0003e0 314c
0003e1 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
0003e2 6431
0003e3 0d00
0003e4 3c0a
0003e5 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
0003e6 6e65
0003e7 4374
0003e8 7061
0003e9 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
0003ea 6572
0003eb 203e
0003ec 2121
0003ed 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
0003ee 2121
0003ef 2121
0003f0 2121
0003f1 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003f2 5250
0003f3 424f
0003f4 2045
0003f5 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003f6 4320
0003f7 4e4f
0003f8 454e
0003f9 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003fa 2120
0003fb 2121
0003fc 2121
0003fd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003fe 4100
0003ff 304c
000400 2532
000401 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
000402 0d00
000403 3c0a
000404 7665
000405 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000406 4374
000407 7061
000408 7574
000409 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00040a 203e
00040b 2121
00040c 2121
00040d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00040e 2121
00040f 2121
000410 2021
000411 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000412 424f
000413 2045
000414 6425
000415 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000416 6d65
000417 6570
000418 6172
000419 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00041a 6572
00041b 4520
00041c 5252
00041d 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
00041e 2120
00041f 2121
000420 2121
000421 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000422 0d00
000423 3c0a
000424 7665
000425 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000426 4374
000427 7061
000428 7574
000429 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00042a 203e
00042b 2121
00042c 2121
00042d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00042e 2121
00042f 2121
000430 2021
000431 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000432 424f
000433 2045
000434 6425
000435 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000436 6d65
000437 6570
000438 6172
000439 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00043a 6572
00043b 4f20
00043c 204b
00043d 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
00043e 2121
00043f 0d21
000440 000a
000441 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
000442 6174
000443 7574
000444 5273
000445 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000446 726f
000447 3e74
000448 5220
000449 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
00044a 524f
00044b 5f54
00044c 4953
00044d 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
00044e 454c
00044f 6d20
000450 646f
000451 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000452 6f6e
000453 2074
000454 7573
000455 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000456 726f
000457 6574
000458 2064
000459 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
00045a 0d74
00045b 000a
00045c 733c
00045d 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00045e 7574
00045f 5273
000460 7065
000461 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000462 3e74
000463 5220
000464 5045
000465 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000466 5f54
000467 554d
000468 544c
000469 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
00046a 454c
00046b 6d20
00046c 646f
00046d 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00046e 6f6e
00046f 2074
000470 7573
000471 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000472 726f
000473 6574
000474 2064
000475 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000476 0d74
000477 000a
000478 733c
000479 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00047a 7574
00047b 5273
00047c 7065
00047d 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00047e 3e74
00047f 6d20
000480 6c61
000481 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
000482 2063
000483 6166
000484 6c69
000485 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000486 2820
000487 6425
000488 6220
000489 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
00048a 7365
00048b 0d29
00048c 000a
00048d 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
00048e 6174
00048f 7574
000490 5273
000491 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000492 726f
000493 3e74
000494 6720
000495 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000496 6544
000497 6976
000498 6563
000499 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
00049a 7461
00049b 2865
00049c 2029
00049d 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
00049e 6c69
00049f 6465
0004a0 0a0d
0004a1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0004a2 7473
0004a3 7461
0004a4 7375
0004a5 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
0004a6 6f70
0004a7 7472
0004a8 203e
0004a9 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
0004aa 7461
0004ab 7375
0004ac 7220
0004ad 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
0004ae 726f
0004af 2074
0004b0 6361
0004b1 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
0004b2 7520
0004b3 6b6e
0004b4 6f6e
0004b5 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0004b6 5b20
0004b7 7830
0004b8 3025
0004b9 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0004ba 0d5d
0004bb 000a
0004bc 733c
0004bd 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
0004be 7574
0004bf 5273
0004c0 7065
0004c1 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
0004c2 3e74
0004c3 4520
0004c4 4854
0004c5 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0004c6 6e65
0004c7 5364
0004c8 6174
0004c9 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
0004ca 5273
0004cb 7065
0004cc 726f
0004cd 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0004ce 646d
0004cf 2928
0004d0 6620
0004d1 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
0004d2 656c
0004d3 0d64
0004d4 000a
0004d5 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
0004d6 6e65
0004d7 6f73
0004d8 4472
0004d9 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0004da 5261
0004db 7065
0004dc 726f
0004dd 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0004de 5b20
0004df 6c25
0004e0 5d64
0004e1 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
0004e2 5d64
0004e3 255b
0004e4 322e
0004e5 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
0004e6 0a0d
0004e7 0d00
0004e8 3c0a
0004e9 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
0004ea 736e
0004eb 726f
0004ec 6144
0004ed 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004ee 6552
0004ef 6f70
0004f0 7472
0004f1 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004f2 3d3d
0004f3 203d
0004f4 5245
0004f5 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004f6 2052
0004f7 4e49
0004f8 4f46
0004f9 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004fa 4954
0004fb 4e4f
0004fc 4920
0004fd 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004fe 4554
0004ff 504d
000500 5120
000501 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
000502 4555
000503 3d20
000504 3d3d
000505 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
000506 3c00
000507 6573
000508 736e
000509 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00050a 6144
00050b 6174
00050c 6552
00050d 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
00050e 7472
00050f 203e
000510 5445
000511 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
000512 6573
000513 646e
000514 6144
000515 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
000516 6552
000517 6f70
000518 7472
000519 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00051a 2864
00051b 2029
00051c 6166
00051d 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00051e 6465
00051f 0a0d
000520 3c00
000521 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
000522 6e65
000523 5274
000524 7065
000525 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000526 3e74
000527 5b20
000528 6c25
000529 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
00052a 305b
00052b 2578
00052c 3230
00052d 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00052e 305b
00052f 2578
000530 3230
000531 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000532 0a0d
000533 0d00
000534 3c0a
000535 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000536 6e65
000537 5274
000538 7065
000539 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
00053a 3e74
00053b 3d20
00053c 3d3d
00053d 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
00053e 5252
00053f 524f
000540 4920
000541 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
000542 4d4f
000543 5441
000544 4f49
000545 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000546 4e49
000547 5420
000548 4d45
000549 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
00054a 5551
00054b 5545
00054c 2045
00054d 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
00054e 0d3d
00054f 000a
000550 653c
000551 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
000552 746e
000553 6552
000554 6f70
000555 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000556 203e
000557 5445
000558 5f48
000559 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
00055a 646e
00055b 7645
00055c 6e65
00055d 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
00055e 7065
00055f 726f
000560 4374
000561 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000562 2928
000563 6620
000564 6961
000565 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000566 0d64
000567 000a
000568 733c
000569 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00056a 6f73
00056b 4472
00056c 7461
00056d 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
00056e 7661
00056f 3e65
000570 7420
000571 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
000572 5b65
000573 6c25
000574 5d64
000575 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000576 5b68
000577 6425
000578 2c5d
000579 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
00057a 5b6c
00057b 2e25
00057c 6632
00057d 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
00057e 000a
00057f 0a0d
000580 733c
000581 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
000582 6f73
000583 4472
000584 7461
000585 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000586 7661
000587 3e65
000588 3d20
000589 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
00058a 4520
00058b 5252
00058c 524f
00058d 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
00058e 464e
00058f 4d4f
000590 5441
000591 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
000592 204e
000593 4e49
000594 5420
000595 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000596 2050
000597 5551
000598 5545
000599 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
00059a 3d3d
00059b 0d3d
00059c 000a
00059d 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
00059e 6e65
00059f 6f73
0005a0 4472
0005a1 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0005a2 5361
0005a3 7661
0005a4 3e65
0005a5 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
0005a6 474f
0005a7 6f5f
0005a8 6570
0005a9 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
0005aa 6c69
0005ab 2865
0005ac 7325
0005ad 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0005ae 6166
0005af 6c69
0005b0 6465
0005b1 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
0005b2 6f63
0005b3 6c75
0005b4 6e64
0005b5 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
0005b6 7320
0005b7 7661
0005b8 2065
0005b9 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
0005ba 0d67
0005bb 000a
0005bc 733c
0005bd 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0005be 6f73
0005bf 4472
0005c0 7461
0005c1 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
0005c2 7661
0005c3 3e65
0005c4 4c20
0005c5 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005c6 695f
0005c7 736e
0005c8 7265
0005c9 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
0005ca 7461
0005cb 2861
0005cc 2029
0005cd 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
0005ce 6c69
0005cf 6465
0005d0 0a0d
0005d1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0005d2 6573
0005d3 736e
0005d4 726f
0005d5 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0005d6 6174
0005d7 6153
0005d8 6576
0005d9 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0005da 4f4c
0005db 5f47
0005dc 6c63
0005dd 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
0005de 4665
0005df 6c69
0005e0 2865
0005e1 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
0005e2 6166
0005e3 6c69
0005e4 6465
0005e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0005e6 3c00
0005e7 6573
0005e8 736e
0005e9 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0005ea 6144
0005eb 6174
0005ec 6153
0005ed 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
0005ee 203e
0005ef 6144
0005f0 6174
0005f1 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005f2 676f
0005f3 6920
0005f4 2073
0005f5 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005f6 2074
0005f7 6d65
0005f8 7470
0005f9 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005fa 000a
0005fb 653c
0005fc 6576
0005fd 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005fe 6153
0005ff 6576
000600 203e
000601 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
000602 656d
000603 255b
000604 646c
000605 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000606 6469
000607 305b
000608 2578
000609 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
00060a 5d58
00060b 732c
00060c 6174
00060d 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00060e 7830
00060f 3025
000610 5832
000611 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000612 000a
000613 0a0d
000614 653c
000615 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000616 746e
000617 6153
000618 6576
000619 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
00061a 3d3d
00061b 203d
00061c 5245
00061d 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
00061e 2052
00061f 4e49
000620 4f46
000621 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
000622 4954
000623 4e4f
000624 4920
000625 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
000626 4554
000627 504d
000628 5120
000629 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
00062a 4555
00062b 3d20
00062c 3d3d
00062d 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
00062e 3c00
00062f 7665
000630 6e65
000631 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000632 7661
000633 3e65
000634 4c20
000635 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000636 6f5f
000637 6570
000638 466e
000639 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
00063a 2865
00063b 7325
00063c 2029
00063d 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
00063e 6c69
00063f 6465
000640 202c
000641 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
000642 6c75
000643 6e64
000644 7427
000645 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
000646 7661
000647 2065
000648 6f6c
000649 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
00064a 000a
00064b 653c
00064c 6576
00064d 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
00064e 6153
00064f 6576
000650 203e
000651 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
000652 5f47
000653 6e69
000654 6573
000655 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000656 7645
000657 6e65
000658 2874
000659 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
00065a 6166
00065b 6c69
00065c 6465
00065d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00065e 3c00
00065f 7665
000660 6e65
000661 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000662 7661
000663 3e65
000664 4c20
000665 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000666 635f
000667 6f6c
000668 6573
000669 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
00066a 656c
00066b 2928
00066c 6620
00066d 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00066e 656c
00066f 0d64
000670 000a
000671 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
000672 6576
000673 746e
000674 6153
000675 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000676 203e
000677 7645
000678 6e65
000679 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00067a 6f4c
00067b 2067
00067c 7369
00067d 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
00067e 746f
00067f 6520
000680 706d
000681 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
000682 0a0d
000683 3c00
000684 6f6c
000685 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000686 7065
000687 726f
000688 3e74
000689 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
00068a 6568
00068b 6b63
00068c 4420
00068d 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
00068e 2061
00068f 6f4c
000690 2067
000691 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000692 7369
000693 0d74
000694 000a
000695 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000696 676f
000697 6552
000698 6f70
000699 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00069a 203e
00069b 4f4c
00069c 5f47
00069d 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
00069e 6e65
00069f 6946
0006a0 656c
0006a1 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
0006a2 2973
0006a3 6620
0006a4 6961
0006a5 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0006a6 0d64
0006a7 000a
0006a8 6c3c
0006a9 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
0006aa 6552
0006ab 6f70
0006ac 7472
0006ad 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0006ae 4f4c
0006af 5f47
0006b0 6572
0006b1 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0006b2 6144
0006b3 6174
0006b4 2528
0006b5 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
0006b6 6620
0006b7 6961
0006b8 656c
0006b9 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006ba 000a
0006bb 6c3c
0006bc 676f
0006bd 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006be 6f70
0006bf 7472
0006c0 203e
0006c1 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0006c2 5f47
0006c3 6572
0006c4 6461
0006c5 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0006c6 6174
0006c7 2928
0006c8 4c20
0006c9 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
0006ca 6520
0006cb 706d
0006cc 7974
0006cd 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
0006ce 0d00
0006cf 3c0a
0006d0 6f6c
0006d1 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
0006d2 7065
0006d3 726f
0006d4 3e74
0006d5 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
0006d6 3d3d
0006d7 4520
0006d8 5252
0006d9 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
0006da 4920
0006db 464e
0006dc 4d4f
0006dd 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
0006de 4f49
0006df 204e
0006e0 4e49
0006e1 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
0006e2 2073
0006e3 3d3d
0006e4 0d3d
0006e5 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
0006e6 6c3c
0006e7 676f
0006e8 6552
0006e9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006ea 7472
0006eb 203e
0006ec 6144
0006ed 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
0006ee 6f4c
0006ef 2067
0006f0 6f66
0006f1 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006f2 2064
0006f3 6974
0006f4 656d
0006f5 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006f6 646c
0006f7 2c5d
0006f8 6863
0006f9 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006fa 5d64
0006fb 762c
0006fc 6c61
0006fd 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006fe 322e
0006ff 5d66
000700 0a0d
000701 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
000702 6f6c
000703 5267
000704 7065
000705 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
000706 3e74
000707 4520
000708 4854
000709 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
00070a 6e65
00070b 4464
00070c 7461
00070d 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
00070e 7065
00070f 726f
000710 4374
000711 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000712 2928
000713 6620
000714 6961
000715 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000716 0d64
000717 000a
000718 6c3c
000719 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00071a 6552
00071b 6f70
00071c 7472
00071d 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00071e 6144
00071f 6174
000720 6f4c
000721 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
000722 6573
000723 746e
000724 6620
000725 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
000726 656d
000727 4449
000728 305b
000729 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
00072a 3230
00072b 5d58
00072c 6c20
00072d 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
00072e 4449
00072f 305b
000730 2578
000731 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
000732 5d58
000733 0a0d
000734 3c00
000735 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
000736 5267
000737 7065
000738 726f
000739 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00073a 4c20
00073b 474f
00073c 635f
00073d 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
00073e 6573
00073f 6946
000740 656c
000741 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
000742 6620
000743 6961
000744 656c
000745 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
000746 000a
000747 6c3c
000748 676f
000749 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00074a 6f70
00074b 7472
00074c 203e
00074d 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
00074e 6365
00074f 206b
000750 7645
000751 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
000752 2074
000753 6f4c
000754 2067
000755 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000756 7369
000757 0d74
000758 000a
000759 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
00075a 676f
00075b 6552
00075c 6f70
00075d 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00075e 203e
00075f 4f4c
000760 5f47
000761 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
000762 6461
000763 7645
000764 6e65
000765 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000766 2029
000767 6166
000768 6c69
000769 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00076a 0a0d
00076b 3c00
00076c 6f6c
00076d 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00076e 7065
00076f 726f
000770 3e74
000771 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
000772 474f
000773 725f
000774 6165
000775 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000776 6576
000777 746e
000778 2928
000779 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
00077a 676f
00077b 6520
00077c 706d
00077d 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
00077e 0a0d
00077f 3c00
000780 6f6c
000781 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000782 7065
000783 726f
000784 3e74
000785 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000786 6576
000787 746e
000788 6f4c
000789 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
00078a 6f66
00078b 6e75
00078c 2064
00078d 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
00078e 656d
00078f 255b
000790 646c
000791 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000792 6469
000793 305b
000794 2578
000795 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000796 5d58
000797 732c
000798 6174
000799 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00079a 7830
00079b 3025
00079c 5832
00079d 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00079e 000a
00079f 6c3c
0007a0 676f
0007a1 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007a2 6f70
0007a3 7472
0007a4 203e
0007a5 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
0007a6 5f48
0007a7 6573
0007a8 646e
0007a9 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
0007aa 6e65
0007ab 5274
0007ac 7065
0007ad 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
0007ae 4374
0007af 646d
0007b0 2928
0007b1 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
0007b2 6961
0007b3 656c
0007b4 0d64
0007b5 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0007b6 6c3c
0007b7 676f
0007b8 6552
0007b9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0007ba 7472
0007bb 203e
0007bc 7645
0007bd 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
0007be 4c74
0007bf 676f
0007c0 7320
0007c1 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
0007c2 2074
0007c3 7266
0007c4 6d61
0007c5 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
0007c6 5b44
0007c7 7830
0007c8 3025
0007c9 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0007ca 205d
0007cb 6f6c
0007cc 4967
0007cd 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
0007ce 7830
0007cf 3025
0007d0 5832
0007d1 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0007d2 000a
0007d3 6c3c
0007d4 676f
0007d5 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007d6 6f70
0007d7 7472
0007d8 203e
0007d9 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0007da 5f47
0007db 6c63
0007dc 736f
0007dd 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0007de 6c69
0007df 2865
0007e0 7325
0007e1 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0007e2 6166
0007e3 6c69
0007e4 6465
0007e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1688): warning: .cseg .db misalignment - padding zero byte
0007e6 0000      	.DB  0x0
                 _0x20000:
0007e7 0a0d
0007e8 6f50
0007e9 6577
0007ea 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0007eb 6e6f
0007ec 5220
0007ed 7365
0007ee 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007ef 0a0d
0007f0 0d00
0007f1 450a
0007f2 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007f3 7265
0007f4 616e
0007f5 206c
0007f6 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007f7 6573
0007f8 0d74
0007f9 000a
0007fa 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007fb 7242
0007fc 776f
0007fd 2d6e
0007fe 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007ff 2074
000800 6552
000801 6573
000802 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
000803 000a
000804 0a0d
000805 6157
000806 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
000807 6468
000808 676f
000809 5220
00080a 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
00080b 7465
00080c 0a0d
00080d 0d00
00080e 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
00080f 4154
000810 2047
000811 6552
000812 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
000813 0d74
000814 000a
000815 693c
000816 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
000817 6974
000818 6c61
000819 735f
00081a 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
00081b 6574
00081c 3e6d
00081d 4c20
00081e 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
00081f 695f
000820 696e
000821 2874
000822 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
000823 6166
000824 6c69
000825 6465
000826 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000827 3c00
000828 6e69
000829 7469
00082a 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
00082b 5f6c
00082c 7973
00082d 7473
00082e 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
00082f 203e
000830 4453
000831 695f
000832 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
000833 2874
000834 2029
000835 6166
000836 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000837 6465
000838 0a0d
000839 4900
00083a 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
00083b 6974
00083c 6c61
00083d 4420
00083e 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
00083f 6369
000840 2065
000841 6f43
000842 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
000843 656c
000844 6574
000845 2064
000846 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
000847 2d20
000848 0020
000849 3025
00084a 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
00084b 252d
00084c 3230
00084d 2d64
00084e 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
00084f 6432
000850 2520
000851 3230
000852 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000853 3025
000854 6432
000855 253a
000856 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000857 0d64
000858 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
000859 0a0d
00085a 2121
00085b 2121
00085c 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
00085d 2121
00085e 2121
00085f 2121
000860 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000861 2121
000862 2121
000863 2121
000864 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000865 2121
000866 2121
000867 2121
000868 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000869 2121
00086a 2121
00086b 2121
00086c 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00086d 0a0d
00086e 2100
00086f 2121
000870 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
000871 2121
000872 4520
000873 6874
000874 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
000875 6675
000876 6566
000877 2072
000878 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
000879 7265
00087a 6c66
00087b 776f
00087c 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
00087d 2121
00087e 2121
00087f 2121
000880 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1730): warning: .cseg .db misalignment - padding zero byte
000881 0000      	.DB  0x0
                 _0x60000:
000882 543c
000883 4d49
000884 5245
000885 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000886 7465
000887 6954
000888 656d
000889 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
00088a 4520
00088b 5252
00088c 203a
00088d 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
00088e 6972
00088f 646f
000890 3d20
000891 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
000892 0a0d
000893 3c00
000894 4954
000895 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000896 5f52
000897 6573
000898 5474
000899 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
00089a 7265
00089b 203e
00089c 6162
00089d 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
00089e 6f43
00089f 6e75
0008a0 6574
0008a1 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
0008a2 6c25
0008a3 5d64
0008a4 2b20
0008a5 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
0008a6 7265
0008a7 6f69
0008a8 5b64
0008a9 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
0008aa 5d64
0008ab 3d20
0008ac 2520
0008ad 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
0008ae 4f20
0008af 4556
0008b0 4652
0008b1 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
0008b2 2157
0008b3 0d21
0008b4 000a
0008b5 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
0008b6 5444
0008b7 203e
0008b8 6157
0008b9 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
0008ba 4468
0008bb 676f
0008bc 5420
0008bd 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0008be 7265
0008bf 5220
0008c0 7365
0008c1 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0008c2 2121
0008c3 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1748): warning: .cseg .db misalignment - padding zero byte
0008c4 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0008c5 ffff      	.DB  0xFF,0xFF
                 _0x80000:
0008c6 493c
0008c7 5f4f
0008c8 656b
0008c9 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008ca 6568
0008cb 6b63
0008cc 203e
0008cd 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008ce 2079
0008cf 4f4d
0008d0 4544
0008d1 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0008d2 3c00
0008d3 4f49
0008d4 6b5f
0008d5 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008d6 6843
0008d7 6365
0008d8 3e6b
0008d9 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008da 7965
0008db 5520
0008dc 0d50
0008dd 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0008de 493c
0008df 5f4f
0008e0 656b
0008e1 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008e2 6568
0008e3 6b63
0008e4 203e
0008e5 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008e6 2079
0008e7 4f44
0008e8 4e57
0008e9 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0008ea 3c00
0008eb 4f49
0008ec 6b5f
0008ed 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008ee 6843
0008ef 6365
0008f0 3e6b
0008f1 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008f2 7965
0008f3 4f20
0008f4 0d4b
0008f5 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008f6 6e49
0008f7 7469
0008f8 6169
0008f9 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008fa 697a
0008fb 676e
0008fc 4120
0008fd 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008fe 2e2e
0008ff 0020
000900 4b4f
000901 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1768): warning: .cseg .db misalignment - padding zero byte
000902 0000      	.DB  0x0
                 _0xC0003:
000903 0063
000904 0000
000905 0063
000906 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
000907 0063
000908 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
000909 5f63
00090a 6974
00090b 656d
00090c 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
00090d 646c
00090e 205d
00090f 2026
000910 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
000911 6974
000912 656d
000913 255b
000914 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
000915 205d
000916 3e3d
000917 6420
000918 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
000919 5b66
00091a 6c25
00091b 5d64
00091c 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
00091d 3e00
00091e 203e
00091f 5452
000920 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
000921 6573
000922 4274
000923 6e69
000924 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
000925 2079
000926 5452
000927 2043
000928 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
000929 636e
00092a 0d2e
00092b 000a
00092c 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
00092d 4354
00092e 735f
00092f 7465
000930 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
000931 6574
000932 6954
000933 656d
000934 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
000935 6954
000936 656d
000937 6f7a
000938 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
000939 6f20
00093a 7475
00093b 6f20
00093c 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
00093d 6172
00093e 676e
00093f 2065
000940 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000941 642b
000942 0d29
000943 000a
000944 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
000945 2e6e
000946 0020
000947 7554
000948 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
000949 0020
00094a 6557
00094b 2e64
00094c 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
00094d 6854
00094e 2e75
00094f 0020
000950 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
000951 2e69
000952 0020
000953 6153
000954 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
000955 0020
000956 7553
000957 2e6e
000958 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
000959 255b
00095a 5d64
00095b 3025
00095c 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
00095d 252d
00095e 3230
00095f 2d64
000960 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000961 6432
000962 2520
000963 3230
000964 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000965 3025
000966 6432
000967 253a
000968 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000969 0d64
00096a 000a
00096b 7552
00096c 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
00096d 6e69
00096e 2067
00096f 6977
000970 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
000971 5320
000972 7379
000973 6574
000974 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
000975 6c43
000976 636f
000977 206b
000978 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1801): warning: .cseg .db misalignment - padding zero byte
000979 0000      	.DB  0x0
                 _0xE0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1803): warning: .cseg .db misalignment - padding zero byte
00097a 0001      	.DB  0x1
                 _0xE0004:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1805): warning: .cseg .db misalignment - padding zero byte
00097b 0001      	.DB  0x1
                 _0xE0005:
00097c 0101
00097d 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1807): warning: .cseg .db misalignment - padding zero byte
00097e 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
00097f 0101
000980 0101
000981 0101
000982 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000983 0101
000984 0101
000985 0101
000986 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000987 0101
000988 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1812): warning: .cseg .db misalignment - padding zero byte
000989 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1814): warning: .cseg .db misalignment - padding zero byte
00098a 0001      	.DB  0x1
                 _0xE0009:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1816): warning: .cseg .db misalignment - padding zero byte
00098b 0001      	.DB  0x1
                 _0xE000A:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1818): warning: .cseg .db misalignment - padding zero byte
00098c 0001      	.DB  0x1
                 _0xE0000:
00098d 673c
00098e 7465
00098f 7250
000990 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
000991 7265
000992 6974
000993 7365
000994 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
000995 666e
000996 6769
000997 203e
000998 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000999 6320
00099a 6e6f
00099b 6966
00099c 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
00099d 6172
00099e 6974
00099f 6e6f
0009a0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
0009a1 7375
0009a2 2065
0009a3 6564
0009a4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
0009a5 6c75
0009a6 0d74
0009a7 000a
0009a8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
0009a9 7465
0009aa 704f
0009ab 7265
0009ac 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009ad 6e69
0009ae 4367
0009af 6e6f
0009b0 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009b1 3e67
0009b2 6e20
0009b3 206f
0009b4 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
0009b5 666e
0009b6 6769
0009b7 7275
0009b8 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
0009b9 6f69
0009ba 2c6e
0009bb 7520
0009bc 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0009bd 6420
0009be 6665
0009bf 7561
0009c0 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0009c1 0a0d
0009c2 3c00
0009c3 6567
0009c4 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0009c5 6570
0009c6 6172
0009c7 6974
0009c8 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0009c9 6f43
0009ca 666e
0009cb 6769
0009cc 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009cd 6f6d
0009ce 6564
0009cf 2020
0009d0 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0009d1 2020
0009d2 2020
0009d3 2020
0009d4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009d5 3e3e
0009d6 3020
0009d7 2578
0009d8 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0009d9 0d58
0009da 000a
0009db 673c
0009dc 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0009dd 704f
0009de 7265
0009df 7461
0009e0 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0009e1 4367
0009e2 6e6f
0009e3 6966
0009e4 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009e5 6420
0009e6 7665
0009e7 6369
0009e8 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0009e9 616e
0009ea 6c62
0009eb 2065
0009ec 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009ed 3e20
0009ee 203e
0009ef 7830
0009f0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009f1 5832
0009f2 0a0d
0009f3 3c00
0009f4 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009f5 4f74
0009f6 6570
0009f7 6172
0009f8 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009f9 676e
0009fa 6f43
0009fb 666e
0009fc 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009fd 203e
0009fe 6c61
0009ff 7261
000a00 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
000a01 616e
000a02 6c62
000a03 2065
000a04 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000a05 2020
000a06 3e3e
000a07 3020
000a08 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000a09 3230
000a0a 0d58
000a0b 000a
000a0c 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
000a0d 7465
000a0e 704f
000a0f 7265
000a10 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000a11 6e69
000a12 4367
000a13 6e6f
000a14 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
000a15 3e67
000a16 7320
000a17 6e65
000a18 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
000a19 4572
000a1a 616e
000a1b 6c62
000a1c 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000a1d 2020
000a1e 3e20
000a1f 203e
000a20 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000a21 7830
000a22 3025
000a23 5832
000a24 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000a25 673c
000a26 7465
000a27 6553
000a28 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
000a29 726f
000a2a 6f43
000a2b 666e
000a2c 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a2d 203e
000a2e 6573
000a2f 736e
000a30 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000a31 6320
000a32 6168
000a33 6e6e
000a34 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a35 6f20
000a36 7475
000a37 6f20
000a38 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a39 6172
000a3a 676e
000a3b 2065
000a3c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a3d 2964
000a3e 0a0d
000a3f 3c00
000a40 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a41 5374
000a42 6e65
000a43 6f73
000a44 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000a45 6e6f
000a46 6966
000a47 3e67
000a48 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
000a49 206f
000a4a 6f63
000a4b 666e
000a4c 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000a4d 7275
000a4e 7461
000a4f 6f69
000a50 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a51 7520
000a52 6573
000a53 6420
000a54 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a55 7561
000a56 746c
000a57 0a0d
000a58 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a59 6567
000a5a 4174
000a5b 7875
000a5c 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a5d 436e
000a5e 6e6f
000a5f 6966
000a60 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a61 6420
000a62 6769
000a63 7469
000a64 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a65 6920
000a66 706e
000a67 7475
000a68 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a69 6168
000a6a 6e6e
000a6b 6c65
000a6c 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a6d 7475
000a6e 6f20
000a6f 2066
000a70 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a71 676e
000a72 2065
000a73 2528
000a74 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a75 0a0d
000a76 3c00
000a77 6567
000a78 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a79 7875
000a7a 6944
000a7b 436e
000a7c 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a7d 6966
000a7e 3e67
000a7f 6e20
000a80 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a81 6f63
000a82 666e
000a83 6769
000a84 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a85 7461
000a86 6f69
000a87 2c6e
000a88 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a89 6573
000a8a 6420
000a8b 6665
000a8c 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a8d 746c
000a8e 0a0d
000a8f 3c00
000a90 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a91 4174
000a92 7875
000a93 6f44
000a94 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a95 6f43
000a96 666e
000a97 6769
000a98 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a99 6964
000a9a 6967
000a9b 6174
000a9c 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a9d 756f
000a9e 7074
000a9f 7475
000aa0 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000aa1 6168
000aa2 6e6e
000aa3 6c65
000aa4 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000aa5 7475
000aa6 6f20
000aa7 2066
000aa8 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000aa9 676e
000aaa 2065
000aab 2528
000aac 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000aad 0a0d
000aae 3c00
000aaf 6567
000ab0 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000ab1 7875
000ab2 6f44
000ab3 7475
000ab4 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000ab5 666e
000ab6 6769
000ab7 203e
000ab8 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000ab9 6320
000aba 6e6f
000abb 6966
000abc 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000abd 6172
000abe 6974
000abf 6e6f
000ac0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000ac1 7375
000ac2 2065
000ac3 6564
000ac4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000ac5 6c75
000ac6 0d74
000ac7 000a
000ac8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000ac9 7465
000aca 7541
000acb 4478
000acc 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000acd 4374
000ace 6e6f
000acf 6966
000ad0 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000ad1 2d20
000ad2 202d
000ad3 4843
000ad4 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000ad5 2064
000ad6 2d2d
000ad7 0d20
000ad8 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000ad9 673c
000ada 7465
000adb 7541
000adc 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000add 756f
000ade 4374
000adf 6e6f
000ae0 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000ae1 3e67
000ae2 6520
000ae3 616e
000ae4 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000ae5 2065
000ae6 2020
000ae7 2020
000ae8 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000ae9 2020
000aea 305b
000aeb 2578
000aec 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000aed 5d58
000aee 0a0d
000aef 3c00
000af0 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000af1 4174
000af2 7875
000af3 6f44
000af4 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000af5 6f43
000af6 666e
000af7 6769
000af8 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000af9 7473
000afa 7461
000afb 4f65
000afc 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000afd 6576
000afe 746e
000aff 2020
000b00 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000b01 7830
000b02 3025
000b03 5832
000b04 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000b05 000a
000b06 673c
000b07 7465
000b08 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000b09 4478
000b0a 756f
000b0b 4374
000b0c 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000b0d 6966
000b0e 3e67
000b0f 6e20
000b10 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000b11 6562
000b12 4572
000b13 5376
000b14 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000b15 2020
000b16 2020
000b17 255b
000b18 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b19 3e2d
000b1a 3c00
000b1b 6567
000b1c 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000b1d 7875
000b1e 6941
000b1f 436e
000b20 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000b21 6966
000b22 3e67
000b23 6120
000b24 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000b25 6f6c
000b26 2067
000b27 6e69
000b28 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000b29 2074
000b2a 6863
000b2b 6e61
000b2c 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000b2d 206c
000b2e 756f
000b2f 2074
000b30 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000b31 7220
000b32 6e61
000b33 6567
000b34 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000b35 6425
000b36 0d29
000b37 000a
000b38 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000b39 7465
000b3a 7541
000b3b 4178
000b3c 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000b3d 6f43
000b3e 666e
000b3f 6769
000b40 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b41 6f6e
000b42 6320
000b43 6e6f
000b44 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b45 7567
000b46 6172
000b47 6974
000b48 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b49 202c
000b4a 7375
000b4b 2065
000b4c 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b4d 6166
000b4e 6c75
000b4f 0d74
000b50 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b51 673c
000b52 7465
000b53 7541
000b54 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b55 756f
000b56 4374
000b57 6e6f
000b58 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b59 3e67
000b5a 6120
000b5b 616e
000b5c 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b5d 2067
000b5e 756f
000b5f 7074
000b60 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b61 6320
000b62 6168
000b63 6e6e
000b64 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b65 6f20
000b66 7475
000b67 6f20
000b68 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b69 6172
000b6a 676e
000b6b 2065
000b6c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b6d 2964
000b6e 0a0d
000b6f 3c00
000b70 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b71 4174
000b72 7875
000b73 6f41
000b74 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b75 6f43
000b76 666e
000b77 6769
000b78 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b79 6f6e
000b7a 6320
000b7b 6e6f
000b7c 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b7d 7567
000b7e 6172
000b7f 6974
000b80 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b81 202c
000b82 7375
000b83 2065
000b84 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b85 6166
000b86 6c75
000b87 0d74
000b88 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b89 673c
000b8a 7465
000b8b 7542
000b8c 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b8d 7265
000b8e 6f43
000b8f 666e
000b90 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b91 203e
000b92 6f6e
000b93 6320
000b94 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b95 6966
000b96 7567
000b97 6172
000b98 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b99 6e6f
000b9a 202c
000b9b 7375
000b9c 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b9d 6564
000b9e 6166
000b9f 6c75
000ba0 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000ba1 000a
000ba2 673c
000ba3 7465
000ba4 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000ba5 7a7a
000ba6 7265
000ba7 6f43
000ba8 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000ba9 6769
000baa 203e
000bab 6e65
000bac 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000bad 656c
000bae 2020
000baf 2020
000bb0 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000bb1 2020
000bb2 2020
000bb3 2020
000bb4 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000bb5 305b
000bb6 2578
000bb7 3230
000bb8 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000bb9 0a0d
000bba 3c00
000bbb 6567
000bbc 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000bbd 7a75
000bbe 657a
000bbf 4372
000bc0 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000bc1 6966
000bc2 3e67
000bc3 6520
000bc4 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000bc5 746e
000bc6 6f53
000bc7 7275
000bc8 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000bc9 754e
000bca 626d
000bcb 7265
000bcc 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000bcd 5b3e
000bce 6425
000bcf 0d5d
000bd0 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000bd1 673c
000bd2 7465
000bd3 7542
000bd4 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000bd5 7265
000bd6 6f43
000bd7 666e
000bd8 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000bd9 203e
000bda 7665
000bdb 6e65
000bdc 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000bdd 756f
000bde 6372
000bdf 2065
000be0 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000be1 2020
000be2 2020
000be3 3e3e
000be4 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000be5 6567
000be6 4574
000be7 766e
000be8 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000be9 7261
000bea 436d
000beb 6e6f
000bec 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000bed 3e67
000bee 6e20
000bef 206f
000bf0 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000bf1 666e
000bf2 6769
000bf3 7275
000bf4 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000bf5 6f69
000bf6 2c6e
000bf7 7520
000bf8 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000bf9 6420
000bfa 6665
000bfb 7561
000bfc 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000bfd 0a0d
000bfe 3c00
000bff 6567
000c00 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c01 766e
000c02 6c41
000c03 7261
000c04 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c05 6e6f
000c06 6966
000c07 3e67
000c08 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c09 6d73
000c0a 5352
000c0b 4953
000c0c 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000c0d 6576
000c0e 206c
000c0f 2020
000c10 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c11 2020
000c12 2020
000c13 255b
000c14 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c15 0a0d
000c16 3c00
000c17 6567
000c18 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c19 766e
000c1a 6c41
000c1b 7261
000c1c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c1d 6e6f
000c1e 6966
000c1f 3e67
000c20 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c21 6d73
000c22 7243
000c23 6465
000c24 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000c25 6142
000c26 616c
000c27 636e
000c28 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000c29 2020
000c2a 2020
000c2b 255b
000c2c 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c2d 0a0d
000c2e 3c00
000c2f 6567
000c30 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c31 766e
000c32 6c41
000c33 7261
000c34 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c35 6e6f
000c36 6966
000c37 3e67
000c38 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000c39 7461
000c3a 6574
000c3b 7972
000c3c 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000c3d 6576
000c3e 206c
000c3f 2020
000c40 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c41 2020
000c42 2020
000c43 255b
000c44 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c45 0a0d
000c46 3c00
000c47 6567
000c48 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c49 766e
000c4a 6c41
000c4b 7261
000c4c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c4d 6e6f
000c4e 6966
000c4f 3e67
000c50 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c51 6d6f
000c52 536d
000c53 6769
000c54 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c55 4c6c
000c56 7665
000c57 6c65
000c58 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c59 2020
000c5a 2020
000c5b 255b
000c5c 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c5d 0a0d
000c5e 3c00
000c5f 6567
000c60 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c61 766e
000c62 6c41
000c63 7261
000c64 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c65 6e6f
000c66 6966
000c67 3e67
000c68 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c69 6d6f
000c6a 4c6d
000c6b 736f
000c6c 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c6d 6c65
000c6e 7961
000c6f 2020
000c70 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c71 2020
000c72 2020
000c73 255b
000c74 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c75 0a0d
000c76 3c00
000c77 6567
000c78 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c79 766e
000c7a 6c41
000c7b 7261
000c7c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c7d 6e6f
000c7e 6966
000c7f 3e67
000c80 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c81 6d65
000c82 726f
000c83 4d79
000c84 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c85 2020
000c86 2020
000c87 2020
000c88 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c89 2020
000c8a 2020
000c8b 255b
000c8c 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c8d 0a0d
000c8e 3c00
000c8f 6567
000c90 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c91 6174
000c92 7574
000c93 5273
000c94 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c95 726f
000c96 4374
000c97 6e6f
000c98 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c99 3e67
000c9a 6e20
000c9b 206f
000c9c 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c9d 666e
000c9e 6769
000c9f 7275
000ca0 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000ca1 6f69
000ca2 2c6e
000ca3 7520
000ca4 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000ca5 6420
000ca6 6665
000ca7 7561
000ca8 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000ca9 0a0d
000caa 3c00
000cab 6567
000cac 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000cad 6174
000cae 7574
000caf 5273
000cb0 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000cb1 726f
000cb2 4374
000cb3 6e6f
000cb4 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000cb5 3e67
000cb6 6120
000cb7 6363
000cb8 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000cb9 2020
000cba 2020
000cbb 2020
000cbc 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000cbd 7830
000cbe 3025
000cbf 5832
000cc0 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000cc1 000a
000cc2 673c
000cc3 7465
000cc4 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000cc5 7461
000cc6 7375
000cc7 6552
000cc8 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000cc9 7472
000cca 6f43
000ccb 666e
000ccc 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000ccd 203e
000cce 6e69
000ccf 7674
000cd0 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000cd1 2020
000cd2 2020
000cd3 2020
000cd4 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000cd5 5d64
000cd6 0a0d
000cd7 3c00
000cd8 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000cd9 4f74
000cda 6570
000cdb 6172
000cdc 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000cdd 676e
000cde 6f43
000cdf 666e
000ce0 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000ce1 203e
000ce2 7245
000ce3 6f72
000ce4 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000ce5 6f20
000ce6 6570
000ce7 6172
000ce8 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000ce9 676e
000cea 6d20
000ceb 646f
000cec 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000ced 6e69
000cee 6176
000cef 696c
000cf0 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000cf1 305b
000cf2 2578
000cf3 3230
000cf4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000cf5 0a0d
000cf6 0d00
000cf7 200a
000cf8 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000cf9 6564
000cfa 2020
000cfb 2020
000cfc 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000cfd 2020
000cfe 2020
000cff 2020
000d00 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d01 3020
000d02 2578
000d03 3230
000d04 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000d05 0a0d
000d06 6420
000d07 7665
000d08 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000d09 4565
000d0a 616e
000d0b 6c62
000d0c 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000d0d 2020
000d0e 3e20
000d0f 203e
000d10 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000d11 3025
000d12 5832
000d13 0d00
000d14 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000d15 6c61
000d16 7261
000d17 456d
000d18 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000d19 6c62
000d1a 2065
000d1b 2020
000d1c 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000d1d 3e3e
000d1e 3020
000d1f 2578
000d20 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000d21 0058
000d22 0a0d
000d23 7320
000d24 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000d25 6f73
000d26 4572
000d27 616e
000d28 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000d29 2065
000d2a 2020
000d2b 3e20
000d2c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d2d 3c00
000d2e 6573
000d2f 5374
000d30 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000d31 6f73
000d32 4372
000d33 6e6f
000d34 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000d35 3e67
000d36 4520
000d37 5252
000d38 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000d39 6863
000d3a 6e61
000d3b 656e
000d3c 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000d3d 756f
000d3e 2074
000d3f 666f
000d40 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000d41 6e61
000d42 6567
000d43 0a0d
000d44 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000d45 6573
000d46 5374
000d47 6e65
000d48 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000d49 4372
000d4a 6e6f
000d4b 6966
000d4c 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d4d 4520
000d4e 5252
000d4f 203a
000d50 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d51 706d
000d52 696c
000d53 676e
000d54 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d55 6574
000d56 6320
000d57 756f
000d58 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d59 276e
000d5a 2074
000d5b 6562
000d5c 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d5d 7465
000d5e 7420
000d5f 206f
000d60 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d61 000a
000d62 0a0d
000d63 7320
000d64 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d65 6c70
000d66 6e69
000d67 5267
000d68 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d69 2065
000d6a 2020
000d6b 3e20
000d6c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d6d 7830
000d6e 3025
000d6f 5834
000d70 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d71 200a
000d72 6572
000d73 634f
000d74 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d75 7272
000d76 6e65
000d77 6563
000d78 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d79 2020
000d7a 3e3e
000d7b 3020
000d7c 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d7d 3430
000d7e 0058
000d7f 0a0d
000d80 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d81 6d69
000d82 5365
000d83 6174
000d84 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d85 6f48
000d86 7275
000d87 2020
000d88 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d89 203e
000d8a 7830
000d8b 3025
000d8c 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d8d 0d00
000d8e 200a
000d8f 6974
000d90 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d91 7453
000d92 7261
000d93 4d74
000d94 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d95 2020
000d96 2020
000d97 3e3e
000d98 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d99 2578
000d9a 3230
000d9b 0058
000d9c 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d9d 7420
000d9e 6d69
000d9f 5365
000da0 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000da1 4870
000da2 756f
000da3 2072
000da4 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000da5 3e20
000da6 203e
000da7 7830
000da8 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000da9 5832
000daa 0d00
000dab 200a
000dac 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000dad 656d
000dae 7453
000daf 706f
000db0 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000db1 206e
000db2 2020
000db3 2020
000db4 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000db5 3020
000db6 2578
000db7 3230
000db8 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000db9 0a0d
000dba 6c20
000dbb 776f
000dbc 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000dbd 694c
000dbe 696d
000dbf 2074
000dc0 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000dc1 2020
000dc2 3e20
000dc3 203e
000dc4 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000dc5 5b20
000dc6 3025
000dc7 6c34
000dc8 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000dc9 0d00
000dca 200a
000dcb 6f6c
000dcc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000dcd 4472
000dce 6c65
000dcf 7961
000dd0 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000dd1 2020
000dd2 2020
000dd3 3e3e
000dd4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dd5 2064
000dd6 255b
000dd7 3230
000dd8 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000dd9 0d00
000dda 200a
000ddb 6f6c
000ddc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000ddd 4572
000dde 7478
000ddf 6572
000de0 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000de1 2020
000de2 2020
000de3 3e3e
000de4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000de5 2066
000de6 255b
000de7 3430
000de8 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000de9 005d
000dea 0a0d
000deb 7520
000dec 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000ded 7265
000dee 694c
000def 696d
000df0 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000df1 2020
000df2 2020
000df3 3e20
000df4 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000df5 6625
000df6 5b20
000df7 3025
000df8 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000df9 5d58
000dfa 0d00
000dfb 200a
000dfc 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000dfd 6570
000dfe 4472
000dff 6c65
000e00 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000e01 2020
000e02 2020
000e03 2020
000e04 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000e05 2520
000e06 2064
000e07 255b
000e08 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000e09 5d58
000e0a 0d00
000e0b 200a
000e0c 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000e0d 6570
000e0e 4572
000e0f 7478
000e10 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000e11 656d
000e12 2020
000e13 2020
000e14 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000e15 2520
000e16 2066
000e17 255b
000e18 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000e19 586c
000e1a 005d
000e1b 0a0d
000e1c 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000e1d 6168
000e1e 6e6e
000e1f 6c65
000e20 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000e21 2020
000e22 2020
000e23 2020
000e24 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e25 203e
000e26 255b
000e27 5d64
000e28 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000e29 200a
000e2a 6863
000e2b 6e61
000e2c 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000e2d 456c
000e2e 616e
000e2f 6c62
000e30 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000e31 2020
000e32 3e3e
000e33 3020
000e34 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e35 3230
000e36 0058
000e37 0a0d
000e38 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000e39 616c
000e3a 6d72
000e3b 6544
000e3c 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000e3d 2079
000e3e 2020
000e3f 2020
000e40 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e41 203e
000e42 6425
000e43 0d00
000e44 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000e45 6573
000e46 4174
000e47 7875
000e48 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000e49 7475
000e4a 6f43
000e4b 666e
000e4c 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000e4d 203e
000e4e 6843
000e4f 6e61
000e50 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e51 206c
000e52 7245
000e53 6f72
000e54 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e55 0d21
000e56 000a
000e57 0a0d
000e58 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e59 7465
000e5a 7541
000e5b 4478
000e5c 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e5d 4374
000e5e 6e6f
000e5f 6966
000e60 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e61 6520
000e62 6576
000e63 746e
000e64 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e65 7275
000e66 6563
000e67 754e
000e68 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e69 7265
000e6a 6920
000e6b 2073
000e6c 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e6d 206f
000e6e 6f6c
000e6f 676e
000e70 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e71 6425
000e72 2129
000e73 0d21
000e74 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e75 0a0d
000e76 6320
000e77 6168
000e78 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e79 6c65
000e7a 2020
000e7b 2020
000e7c 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e7d 2020
000e7e 2020
000e7f 3e20
000e80 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e81 255b
000e82 5d64
000e83 0d00
000e84 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e85 6863
000e86 6e61
000e87 656e
000e88 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e89 616e
000e8a 6c62
000e8b 2065
000e8c 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e8d 2020
000e8e 3e3e
000e8f 3020
000e90 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e91 3230
000e92 0058
000e93 0a0d
000e94 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e95 6174
000e96 6574
000e97 6e4f
000e98 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e99 6e65
000e9a 2074
000e9b 2020
000e9c 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e9d 3e20
000e9e 203e
000e9f 7830
000ea0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000ea1 5832
000ea2 0d00
000ea3 200a
000ea4 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000ea5 6e65
000ea6 5374
000ea7 756f
000ea8 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000ea9 4e65
000eaa 6d75
000eab 6562
000eac 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000ead 3e3e
000eae 2520
000eaf 0064
000eb0 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000eb1 6520
000eb2 6576
000eb3 746e
000eb4 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000eb5 7275
000eb6 6563
000eb7 2020
000eb8 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000eb9 2020
000eba 3e20
000ebb 203e
000ebc 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000ebd 200a
000ebe 6c61
000ebf 7261
000ec0 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000ec1 7665
000ec2 6c65
000ec3 2020
000ec4 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000ec5 2020
000ec6 3e3e
000ec7 2520
000ec8 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000ec9 0a0d
000eca 733c
000ecb 7465
000ecc 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000ecd 4178
000ece 756f
000ecf 4374
000ed0 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000ed1 6966
000ed2 3e67
000ed3 4320
000ed4 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000ed5 6e6e
000ed6 6c65
000ed7 4520
000ed8 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000ed9 726f
000eda 2121
000edb 0a0d
000edc 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000edd 3c0a
000ede 6573
000edf 4174
000ee0 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000ee1 6f41
000ee2 7475
000ee3 6f43
000ee4 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000ee5 6769
000ee6 203e
000ee7 7665
000ee8 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000ee9 5374
000eea 756f
000eeb 6372
000eec 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000eed 6d75
000eee 6562
000eef 2072
000ef0 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000ef1 7420
000ef2 6f6f
000ef3 6c20
000ef4 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000ef5 2067
000ef6 2528
000ef7 2964
000ef8 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ef9 0a0d
000efa 0d00
000efb 200a
000efc 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000efd 6576
000efe 4f6c
000eff 456e
000f00 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000f01 746e
000f02 2020
000f03 2020
000f04 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000f05 3e3e
000f06 2520
000f07 0066
000f08 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000f09 733c
000f0a 7465
000f0b 7542
000f0c 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000f0d 7265
000f0e 6f43
000f0f 666e
000f10 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000f11 203e
000f12 7665
000f13 6e65
000f14 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000f15 756f
000f16 6372
000f17 4e65
000f18 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000f19 6562
000f1a 2072
000f1b 7369
000f1c 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000f1d 6f6f
000f1e 6c20
000f1f 6e6f
000f20 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000f21 2528
000f22 2964
000f23 2121
000f24 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000f25 0d00
000f26 200a
000f27 6e65
000f28 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000f29 656c
000f2a 2020
000f2b 2020
000f2c 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000f2d 2020
000f2e 2020
000f2f 2020
000f30 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f31 3020
000f32 2578
000f33 3230
000f34 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000f35 0a0d
000f36 6520
000f37 6576
000f38 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000f39 6f53
000f3a 7275
000f3b 6563
000f3c 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000f3d 2020
000f3e 2020
000f3f 3e20
000f40 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000f41 0a0d
000f42 6720
000f43 6d73
000f44 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000f45 4953
000f46 654c
000f47 6576
000f48 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000f49 2020
000f4a 2020
000f4b 3e3e
000f4c 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000f4d 2066
000f4e 4264
000f4f 0d00
000f50 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f51 7367
000f52 436d
000f53 6572
000f54 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f55 4274
000f56 6c61
000f57 6e61
000f58 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f59 3e20
000f5a 203e
000f5b 6425
000f5c 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f5d 6861
000f5e 0074
000f5f 0a0d
000f60 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f61 7461
000f62 6574
000f63 7972
000f64 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f65 6576
000f66 206c
000f67 2020
000f68 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f69 3e3e
000f6a 2520
000f6b 2066
000f6c 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f6d 746c
000f6e 0073
000f6f 0a0d
000f70 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f71 6d6f
000f72 536d
000f73 6769
000f74 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f75 4c6c
000f76 7665
000f77 6c65
000f78 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f79 3e3e
000f7a 2520
000f7b 2066
000f7c 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f7d 0d00
000f7e 200a
000f7f 6f63
000f80 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f81 6f4c
000f82 7473
000f83 6544
000f84 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f85 2079
000f86 2020
000f87 3e20
000f88 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f89 6425
000f8a 7320
000f8b 6365
000f8c 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f8d 200a
000f8e 656d
000f8f 6f6d
000f90 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f91 694d
000f92 206e
000f93 2020
000f94 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f95 2020
000f96 3e20
000f97 203e
000f98 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f99 4d20
000f9a 2e42
000f9b 0d00
000f9c 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f9d 6361
000f9e 6d63
000f9f 2020
000fa0 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000fa1 3e20
000fa2 203e
000fa3 6625
000fa4 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000fa5 0042
000fa6 0a0d
000fa7 6920
000fa8 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000fa9 2076
000faa 2020
000fab 2020
000fac 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000fad 2520
000fae 2064
000faf 6142
000fb0 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000fb1 3c00
000fb2 616d
000fb3 6e69
000fb4 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000fb5 6567
000fb6 5374
000fb7 6e65
000fb8 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000fb9 4372
000fba 6e6f
000fbb 6966
000fbc 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000fbd 6425
000fbe 2029
000fbf 7265
000fc0 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000fc1 0d72
000fc2 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000fc3 453c
000fc4 4854
000fc5 735f
000fc6 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fc7 4e64
000fc8 6361
000fc9 3e6b
000fca 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000fcb 6e65
000fcc 6964
000fcd 676e
000fce 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000fcf 0a0d
000fd0 3c00
000fd1 5445
000fd2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fd3 6573
000fd4 646e
000fd5 7453
000fd6 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fd7 7375
000fd8 6552
000fd9 7571
000fda 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000fdb 4174
000fdc 6b63
000fdd 203e
000fde 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000fdf 646e
000fe0 6e69
000fe1 2e67
000fe2 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000fe3 000a
000fe4 453c
000fe5 4854
000fe6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fe7 6e65
000fe8 5364
000fe9 6174
000fea 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000feb 5273
000fec 7065
000fed 726f
000fee 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fef 646d
000ff0 203e
000ff1 7266
000ff2 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000ff3 4c65
000ff4 6e65
000ff5 7420
000ff6 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000ff7 6c20
000ff8 6e6f
000ff9 2067
000ffa 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000ffb 2064
000ffc 7962
000ffd 6574
000ffe 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fff 0a0d
001000 3c00
001001 5445
001002 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001003 6573
001004 646e
001005 7453
001006 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
001007 7375
001008 6552
001009 6f70
00100a 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
00100b 6d43
00100c 3e64
00100d 6d20
00100e 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
00100f 6f6c
001010 2063
001011 6166
001012 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
001013 6465
001014 2820
001015 6425
001016 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001017 7479
001018 7365
001019 0d29
00101a 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
00101b 453c
00101c 4854
00101d 735f
00101e 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00101f 4564
001020 6576
001021 746e
001022 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
001023 6f70
001024 7472
001025 6d43
001026 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
001027 5720
001028 6f72
001029 676e
00102a 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
00102b 6576
00102c 746e
00102d 7954
00102e 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
00102f 3020
001030 2578
001031 3230
001032 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
001033 000a
001034 453c
001035 4854
001036 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001037 6e65
001038 4564
001039 6576
00103a 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
00103b 6552
00103c 6f70
00103d 7472
00103e 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00103f 3e64
001040 6120
001041 6464
001042 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
001043 6e65
001044 4c74
001045 676f
001046 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
001047 7565
001048 2865
001049 7830
00104a 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
00104b 5832
00104c 252c
00104d 646c
00104e 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
00104f 2578
001050 3230
001051 2c58
001052 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
001053 3025
001054 5832
001055 2029
001056 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001057 6c69
001058 6465
001059 0a0d
00105a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00105b 5445
00105c 5f48
00105d 6573
00105e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00105f 7645
001060 6e65
001061 5274
001062 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
001063 726f
001064 4374
001065 646d
001066 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001067 6573
001068 646e
001069 6e69
00106a 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
00106b 0d2e
00106c 000a
00106d 453c
00106e 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00106f 735f
001070 6e65
001071 4364
001072 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001073 6966
001074 4d67
001075 6e61
001076 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001077 4e65
001078 6361
001079 3e6b
00107a 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
00107b 6e65
00107c 6964
00107d 676e
00107e 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
00107f 0a0d
001080 3c00
001081 5445
001082 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001083 6573
001084 646e
001085 6f43
001086 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001087 6769
001088 614d
001089 616e
00108a 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
00108b 6341
00108c 3e6b
00108d 6620
00108e 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
00108f 656d
001090 654c
001091 206e
001092 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
001093 206f
001094 6f6c
001095 676e
001096 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001097 6425
001098 6220
001099 7479
00109a 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00109b 0d29
00109c 000a
00109d 453c
00109e 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00109f 735f
0010a0 6e65
0010a1 4364
0010a2 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
0010a3 6966
0010a4 4d67
0010a5 6e61
0010a6 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
0010a7 4165
0010a8 6b63
0010a9 203e
0010aa 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
0010ab 6c6c
0010ac 636f
0010ad 6620
0010ae 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
0010af 656c
0010b0 2064
0010b1 2528
0010b2 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
0010b3 7962
0010b4 6574
0010b5 2973
0010b6 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
0010b7 3c00
0010b8 5445
0010b9 5f48
0010ba 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010bb 646e
0010bc 6f43
0010bd 666e
0010be 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
0010bf 614d
0010c0 616e
0010c1 6567
0010c2 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
0010c3 3e6b
0010c4 7320
0010c5 6e65
0010c6 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
0010c7 676e
0010c8 2e2e
0010c9 0a0d
0010ca 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
0010cb 5445
0010cc 5f48
0010cd 6573
0010ce 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010cf 6144
0010d0 6174
0010d1 6552
0010d2 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010d3 7472
0010d4 6d43
0010d5 3e64
0010d6 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
0010d7 6f72
0010d8 676e
0010d9 6420
0010da 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
0010db 5461
0010dc 7079
0010dd 2065
0010de 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
0010df 3025
0010e0 5832
0010e1 0a0d
0010e2 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
0010e3 5445
0010e4 5f48
0010e5 6573
0010e6 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010e7 6144
0010e8 6174
0010e9 6552
0010ea 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010eb 7472
0010ec 6d43
0010ed 3e64
0010ee 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010ef 6464
0010f0 6144
0010f1 6174
0010f2 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010f3 5167
0010f4 6575
0010f5 6575
0010f6 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010f7 2578
0010f8 3230
0010f9 2c58
0010fa 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010fb 2c64
0010fc 7525
0010fd 252c
0010fe 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010ff 2966
001100 6620
001101 6961
001102 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001103 0d64
001104 000a
001105 453c
001106 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001107 735f
001108 6e65
001109 4464
00110a 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
00110b 5261
00110c 7065
00110d 726f
00110e 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
00110f 646d
001110 203e
001111 6573
001112 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
001113 6e69
001114 2e67
001115 0d2e
001116 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
001117 453c
001118 4854
001119 735f
00111a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00111b 4c64
00111c 676f
00111d 614d
00111e 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
00111f 7570
001120 616c
001121 6974
001122 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
001123 6341
001124 3e6b
001125 7320
001126 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
001127 6964
001128 676e
001129 2e2e
00112a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00112b 3c00
00112c 5445
00112d 5f48
00112e 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00112f 646e
001130 654e
001131 7774
001132 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001133 4d6b
001134 6961
001135 746e
001136 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001137 6e61
001138 6563
001139 6341
00113a 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
00113b 7320
00113c 6e65
00113d 6964
00113e 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
00113f 2e2e
001140 0a0d
001141 3c00
001142 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
001143 5f48
001144 6572
001145 6f6d
001146 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
001147 6544
001148 6976
001149 6563
00114a 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
00114b 746e
00114c 6f72
00114d 416c
00114e 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
00114f 203e
001150 6573
001151 646e
001152 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
001153 2e67
001154 0d2e
001155 000a
001156 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001157 4854
001158 635f
001159 656c
00115a 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
00115b 7544
00115c 6c70
00115d 6369
00115e 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
00115f 5265
001160 7165
001161 6575
001162 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001163 6d43
001164 3e64
001165 7320
001166 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001167 6964
001168 676e
001169 2e2e
00116a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00116b 0d00
00116c 3c0a
00116d 5445
00116e 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
00116f 6863
001170 6365
001171 506b
001172 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001173 4c68
001174 676f
001175 203e
001176 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001177 203d
001178 5245
001179 4f52
00117a 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
00117b 4e49
00117c 4f46
00117d 414d
00117e 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
00117f 4e4f
001180 4920
001181 204e
001182 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
001183 4154
001184 4c20
001185 474f
001186 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001187 4555
001188 4555
001189 3d20
00118a 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
00118b 0a0d
00118c 3c00
00118d 5445
00118e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00118f 6863
001190 6365
001191 506b
001192 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001193 4c68
001194 676f
001195 203e
001196 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001197 6174
001198 6f4c
001199 2067
00119a 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
00119b 656d
00119c 255b
00119d 646c
00119e 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
00119f 6863
0011a0 255b
0011a1 5d64
0011a2 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
0011a3 6c61
0011a4 255b
0011a5 322e
0011a6 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
0011a7 0a0d
0011a8 3c00
0011a9 5445
0011aa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011ab 6863
0011ac 6365
0011ad 506b
0011ae 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011af 4c68
0011b0 676f
0011b1 203e
0011b2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011b3 5f47
0011b4 706f
0011b5 6e65
0011b6 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
0011b7 656c
0011b8 2528
0011b9 2973
0011ba 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0011bb 6961
0011bc 656c
0011bd 2c64
0011be 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0011bf 756f
0011c0 646c
0011c1 276e
0011c2 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0011c3 6173
0011c4 6576
0011c5 6c20
0011c6 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0011c7 0a0d
0011c8 3c00
0011c9 5445
0011ca 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011cb 6863
0011cc 6365
0011cd 506b
0011ce 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011cf 4c68
0011d0 676f
0011d1 203e
0011d2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011d3 5f47
0011d4 6e69
0011d5 6573
0011d6 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0011d7 6144
0011d8 6174
0011d9 2928
0011da 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0011db 6961
0011dc 656c
0011dd 0d64
0011de 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0011df 453c
0011e0 4854
0011e1 635f
0011e2 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0011e3 6b63
0011e4 7550
0011e5 6873
0011e6 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0011e7 3e67
0011e8 4c20
0011e9 474f
0011ea 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0011eb 6f6c
0011ec 6573
0011ed 6946
0011ee 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011ef 2928
0011f0 6620
0011f1 6961
0011f2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011f3 0d64
0011f4 000a
0011f5 453c
0011f6 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011f7 635f
0011f8 6568
0011f9 6b63
0011fa 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011fb 6873
0011fc 6f4c
0011fd 3e67
0011fe 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011ff 736e
001200 7265
001201 6574
001202 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
001203 6144
001204 6174
001205 4c20
001206 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
001207 0a0d
001208 0d00
001209 3c0a
00120a 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
00120b 5f48
00120c 6863
00120d 6365
00120e 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
00120f 7375
001210 4c68
001211 676f
001212 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
001213 3d3d
001214 203d
001215 5245
001216 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
001217 2052
001218 4e49
001219 4f46
00121a 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
00121b 4954
00121c 4e4f
00121d 4920
00121e 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
00121f 5645
001220 4e45
001221 2054
001222 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
001223 2047
001224 5551
001225 5545
001226 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
001227 3d3d
001228 0d3d
001229 000a
00122a 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
00122b 4854
00122c 635f
00122d 6568
00122e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00122f 7550
001230 6873
001231 6f4c
001232 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001233 4520
001234 6576
001235 746e
001236 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
001237 2067
001238 6974
001239 656d
00123a 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
00123b 646c
00123c 2c5d
00123d 6469
00123e 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
00123f 2578
001240 3230
001241 5d58
001242 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
001243 6174
001244 5b74
001245 7830
001246 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
001247 5832
001248 0d5d
001249 000a
00124a 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
00124b 4854
00124c 635f
00124d 6568
00124e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00124f 7550
001250 6873
001251 6f4c
001252 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001253 4920
001254 736e
001255 7265
001256 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001257 2064
001258 7645
001259 6e65
00125a 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00125b 6f4c
00125c 0d67
00125d 000a
00125e 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
00125f 4854
001260 725f
001261 7465
001262 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001263 736e
001264 696d
001265 3e74
001266 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001267 6361
001268 656b
001269 2074
00126a 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
00126b 2578
00126c 3230
00126d 5d58
00126e 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
00126f 7078
001270 7269
001271 6465
001272 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
001273 3c00
001274 5445
001275 5f48
001276 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001277 7274
001278 6e61
001279 6d73
00127a 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
00127b 203e
00127c 7075
00127d 6164
00127e 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
00127f 6c20
001280 676f
001281 6144
001282 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
001283 7420
001284 6d69
001285 6f65
001286 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001287 0a0d
001288 3c00
001289 5445
00128a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00128b 6572
00128c 7274
00128d 6e61
00128e 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
00128f 7469
001290 203e
001291 7075
001292 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
001293 6574
001294 6c20
001295 676f
001296 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001297 6e65
001298 2074
001299 6974
00129a 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
00129b 756f
00129c 0d74
00129d 000a
00129e 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
00129f 4854
0012a0 725f
0012a1 7465
0012a2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012a3 736e
0012a4 696d
0012a5 3e74
0012a6 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
0012a7 6d6f
0012a8 4c6d
0012a9 736f
0012aa 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
0012ab 6d69
0012ac 7265
0012ad 3d20
0012ae 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
0012af 646c
0012b0 2528
0012b1 586c
0012b2 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
0012b3 000a
0012b4 453c
0012b5 4854
0012b6 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
0012b7 7465
0012b8 6172
0012b9 736e
0012ba 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
0012bb 3e74
0012bc 4c20
0012bd 736f
0012be 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0012bf 6d69
0012c0 7265
0012c1 7420
0012c2 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0012c3 2065
0012c4 656c
0012c5 7466
0012c6 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0012c7 2520
0012c8 646c
0012c9 2528
0012ca 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0012cb 0d29
0012cc 000a
0012cd 0a0d
0012ce 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0012cf 4854
0012d0 725f
0012d1 7465
0012d2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012d3 736e
0012d4 696d
0012d5 3e74
0012d6 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0012d7 522d
0012d8 7465
0012d9 6172
0012da 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0012db 696d
0012dc 7474
0012dd 6e69
0012de 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0012df 202d
0012e0 305b
0012e1 2578
0012e2 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0012e3 5d58
0012e4 0a0d
0012e5 3c00
0012e6 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0012e7 5f48
0012e8 7270
0012e9 636f
0012ea 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0012eb 5073
0012ec 6361
0012ed 656b
0012ee 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012ef 7320
0012f0 6174
0012f1 7574
0012f2 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012f3 6572
0012f4 7571
0012f5 7365
0012f6 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012f7 6e69
0012f8 6176
0012f9 696c
0012fa 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012fb 656c
0012fc 676e
0012fd 6874
0012fe 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012ff 6425
001300 0d29
001301 000a
001302 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001303 4854
001304 705f
001305 6f72
001306 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001307 7373
001308 6150
001309 6b63
00130a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00130b 203e
00130c 6170
00130d 6c79
00130e 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
00130f 2064
001310 616d
001311 6c6c
001312 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001313 2928
001314 6620
001315 6961
001316 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001317 0d64
001318 000a
001319 453c
00131a 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00131b 705f
00131c 6f72
00131d 6563
00131e 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
00131f 6150
001320 6b63
001321 7465
001322 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001323 7473
001324 7461
001325 7375
001326 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
001327 7571
001328 7365
001329 5074
00132a 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
00132b 6573
00132c 2872
00132d 2029
00132e 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
00132f 6c69
001330 6465
001331 0a0d
001332 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001333 2d0a
001334 732d
001335 6174
001336 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
001337 5273
001338 7165
001339 6575
00133a 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00133b 6150
00133c 7372
00133d 7265
00133e 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
00133f 4320
001340 444d
001341 5b20
001342 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
001343 3025
001344 5832
001345 0d5d
001346 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001347 6361
001348 6563
001349 7373
00134a 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
00134b 6874
00134c 646f
00134d 2020
00134e 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
00134f 305b
001350 2578
001351 3230
001352 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001353 0a0d
001354 6900
001355 746e
001356 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001357 6176
001358 206c
001359 2020
00135a 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
00135b 2020
00135c 5b20
00135d 7830
00135e 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
00135f 5834
001360 205d
001361 203d
001362 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
001363 0a0d
001364 7300
001365 6174
001366 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001367 4c73
001368 7369
001369 2074
00136a 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
00136b 2020
00136c 7c20
00136d 2500
00136e 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
00136f 7c58
001370 0d00
001371 2d0a
001372 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
001373 2e2e
001374 6f44
001375 656e
001376 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001377 2d20
001378 0d2d
001379 000a
00137a 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
00137b 4854
00137c 705f
00137d 6f72
00137e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00137f 7373
001380 6150
001381 6b63
001382 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001383 203e
001384 7473
001385 7461
001386 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001387 7220
001388 7065
001389 726f
00138a 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
00138b 6e69
00138c 6176
00138d 696c
00138e 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00138f 656c
001390 676e
001391 6874
001392 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001393 6425
001394 0d29
001395 000a
001396 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001397 2d2d
001398 7473
001399 7461
00139a 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
00139b 6552
00139c 6f70
00139d 7472
00139e 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
00139f 7372
0013a0 7265
0013a1 2d2d
0013a2 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0013a3 4b43
0013a4 5b20
0013a5 7830
0013a6 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0013a7 5832
0013a8 0d5d
0013a9 000a
0013aa 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
0013ab 7869
0013ac 6954
0013ad 656d
0013ae 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
0013af 2020
0013b0 2020
0013b1 2020
0013b2 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
0013b3 2578
0013b4 3230
0013b5 5d58
0013b6 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013b7 2578
0013b8 3230
0013b9 5d58
0013ba 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bb 2578
0013bc 3230
0013bd 5d58
0013be 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bf 2578
0013c0 3230
0013c1 5d58
0013c2 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0013c3 3c00
0013c4 5445
0013c5 5f48
0013c6 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0013c7 636f
0013c8 7365
0013c9 5073
0013ca 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0013cb 656b
0013cc 3e74
0013cd 6520
0013ce 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0013cf 746e
0013d0 7220
0013d1 7065
0013d2 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0013d3 2074
0013d4 6e69
0013d5 6176
0013d6 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0013d7 2064
0013d8 656c
0013d9 676e
0013da 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0013db 2820
0013dc 6425
0013dd 0d29
0013de 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0013df 0a0d
0013e0 2d2d
0013e1 7665
0013e2 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0013e3 5274
0013e4 7065
0013e5 726f
0013e6 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0013e7 7261
0013e8 6573
0013e9 2d72
0013ea 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0013eb 4341
0013ec 204b
0013ed 305b
0013ee 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013ef 3230
0013f0 5d58
0013f1 0a0d
0013f2 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013f3 5445
0013f4 5f48
0013f5 7270
0013f6 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013f7 7365
0013f8 5073
0013f9 6361
0013fa 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013fb 3e74
0013fc 6720
0013fd 746f
0013fe 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013ff 6576
001400 746e
001401 6c20
001402 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
001403 6120
001404 6b63
001405 0a0d
001406 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
001407 6f6c
001408 5267
001409 7065
00140a 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
00140b 3e74
00140c 4c20
00140d 474f
00140e 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
00140f 6570
001410 466e
001411 6c69
001412 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
001413 7325
001414 2029
001415 6166
001416 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
001417 6465
001418 0a0d
001419 3c00
00141a 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00141b 5f47
00141c 6572
00141d 6461
00141e 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
00141f 6174
001420 203e
001421 4f4c
001422 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001423 6573
001424 4c74
001425 7361
001426 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
001427 6e65
001428 2864
001429 2029
00142a 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
00142b 6c69
00142c 6465
00142d 0a0d
00142e 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00142f 4f4c
001430 5f47
001431 6572
001432 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
001433 6144
001434 6174
001435 203e
001436 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
001437 5f47
001438 6573
001439 4c74
00143a 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
00143b 5374
00143c 6e65
00143d 2864
00143e 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
00143f 252c
001440 646c
001441 0d29
001442 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
001443 6c3c
001444 676f
001445 6552
001446 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
001447 7472
001448 203e
001449 4f4c
00144a 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00144b 6c63
00144c 736f
00144d 4665
00144e 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
00144f 2865
001450 7325
001451 2029
001452 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
001453 6c69
001454 6465
001455 0a0d
001456 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001457 5445
001458 5f48
001459 7270
00145a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00145b 7365
00145c 5073
00145d 6361
00145e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00145f 3e74
001460 4320
001461 6e6f
001462 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
001463 2067
001464 614d
001465 616e
001466 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001467 0a0d
001468 3c00
001469 5445
00146a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00146b 7270
00146c 636f
00146d 7365
00146e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00146f 6361
001470 656b
001471 3e74
001472 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
001473 6e6f
001474 6966
001475 7567
001476 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001477 6974
001478 6e6f
001479 6d20
00147a 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
00147b 6761
00147c 6d65
00147d 6e65
00147e 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
00147f 6e69
001480 6176
001481 696c
001482 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001483 656c
001484 676e
001485 6874
001486 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001487 6425
001488 0d29
001489 000a
00148a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00148b 4854
00148c 705f
00148d 6f72
00148e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00148f 7373
001490 6150
001491 6b63
001492 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001493 203e
001494 6170
001495 6c79
001496 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001497 2064
001498 616d
001499 6c6c
00149a 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00149b 2528
00149c 2964
00149d 6620
00149e 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
00149f 656c
0014a0 0d64
0014a1 000a
0014a2 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
0014a3 4854
0014a4 705f
0014a5 6f72
0014a6 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014a7 7373
0014a8 6150
0014a9 6b63
0014aa 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014ab 203e
0014ac 6f63
0014ad 666e
0014ae 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0014af 614d
0014b0 616e
0014b1 6567
0014b2 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
0014b3 7372
0014b4 7265
0014b5 2928
0014b6 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
0014b7 6961
0014b8 656c
0014b9 0d64
0014ba 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0014bb 0a0d
0014bc 2d2d
0014bd 6f63
0014be 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0014bf 6769
0014c0 614d
0014c1 616e
0014c2 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0014c3 6150
0014c4 7372
0014c5 7265
0014c6 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0014c7 4320
0014c8 444d
0014c9 5b20
0014ca 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0014cb 3025
0014cc 5832
0014cd 0d5d
0014ce 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0014cf 6361
0014d0 6463
0014d1 2020
0014d2 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0014d3 2020
0014d4 2020
0014d5 2020
0014d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014d7 305b
0014d8 2578
0014d9 3230
0014da 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0014db 0a0d
0014dc 6300
0014dd 666e
0014de 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0014df 2020
0014e0 2020
0014e1 2020
0014e2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014e3 2020
0014e4 5b20
0014e5 7830
0014e6 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0014e7 5832
0014e8 0d5d
0014e9 000a
0014ea 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014eb 4854
0014ec 705f
0014ed 6f72
0014ee 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014ef 7373
0014f0 6150
0014f1 6b63
0014f2 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014f3 203e
0014f4 6567
0014f5 4374
0014f6 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014f7 6966
0014f8 4c67
0014f9 6e65
0014fa 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014fb 6620
0014fc 6961
0014fd 656c
0014fe 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014ff 000a
001500 453c
001501 4854
001502 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001503 6f72
001504 6563
001505 7373
001506 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001507 6b63
001508 7465
001509 203e
00150a 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
00150b 6766
00150c 6452
00150d 6d20
00150e 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
00150f 6f6c
001510 2863
001511 2029
001512 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
001513 6c69
001514 6465
001515 0a0d
001516 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001517 5445
001518 5f48
001519 7270
00151a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00151b 7365
00151c 5073
00151d 6361
00151e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00151f 3e74
001520 6320
001521 6e6f
001522 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
001523 5267
001524 6165
001525 2864
001526 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
001527 6166
001528 6c69
001529 6465
00152a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00152b 3c00
00152c 5445
00152d 5f48
00152e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00152f 636f
001530 7365
001531 5073
001532 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001533 656b
001534 3e74
001535 5220
001536 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
001537 4d43
001538 2044
001539 203a
00153a 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
00153b 5f48
00153c 6573
00153d 646e
00153e 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
00153f 666e
001540 6769
001541 614d
001542 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001543 6567
001544 6341
001545 286b
001546 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
001547 6166
001548 6c69
001549 6465
00154a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00154b 3c00
00154c 5445
00154d 5f48
00154e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00154f 636f
001550 7365
001551 5073
001552 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001553 656b
001554 3e74
001555 6320
001556 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001557 5767
001558 2072
001559 616d
00155a 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
00155b 636f
00155c 2928
00155d 6620
00155e 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
00155f 656c
001560 0d64
001561 000a
001562 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001563 4854
001564 705f
001565 6f72
001566 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001567 7373
001568 6150
001569 6b63
00156a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00156b 203e
00156c 6f63
00156d 666e
00156e 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
00156f 7257
001570 7469
001571 2865
001572 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
001573 6166
001574 6c69
001575 6465
001576 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001577 5700
001578 5241
001579 204e
00157a 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
00157b 453c
00157c 4854
00157d 705f
00157e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00157f 6563
001580 7373
001581 6150
001582 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001583 7465
001584 203e
001585 5257
001586 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001587 444d
001588 3a20
001589 4520
00158a 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
00158b 735f
00158c 6e65
00158d 4364
00158e 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00158f 6966
001590 4d67
001591 6e61
001592 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001593 4165
001594 6b63
001595 2928
001596 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001597 6961
001598 656c
001599 0d64
00159a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00159b 453c
00159c 4854
00159d 705f
00159e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00159f 6563
0015a0 7373
0015a1 6150
0015a2 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0015a3 7465
0015a4 203e
0015a5 6f63
0015a6 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
0015a7 6769
0015a8 6f43
0015a9 666e
0015aa 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
0015ab 286d
0015ac 2029
0015ad 6166
0015ae 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0015af 6465
0015b0 0a0d
0015b1 3c00
0015b2 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0015b3 5f48
0015b4 7270
0015b5 636f
0015b6 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015b7 5073
0015b8 6361
0015b9 656b
0015ba 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015bb 7520
0015bc 6b6e
0015bd 6f6e
0015be 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0015bf 7420
0015c0 7079
0015c1 2065
0015c2 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0015c3 2072
0015c4 6f63
0015c5 666e
0015c6 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0015c7 3e2d
0015c8 6361
0015c9 6463
0015ca 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0015cb 7830
0015cc 3025
0015cd 5832
0015ce 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0015cf 000a
0015d0 453c
0015d1 4854
0015d2 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0015d3 6f72
0015d4 6563
0015d5 7373
0015d6 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0015d7 6b63
0015d8 7465
0015d9 203e
0015da 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0015db 6174
0015dc 7220
0015dd 7065
0015de 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0015df 2074
0015e0 6e69
0015e1 6176
0015e2 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0015e3 2064
0015e4 656c
0015e5 676e
0015e6 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0015e7 2820
0015e8 6425
0015e9 0d29
0015ea 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0015eb 0a0d
0015ec 2d2d
0015ed 6164
0015ee 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015ef 6552
0015f0 6f70
0015f1 7472
0015f2 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015f3 7372
0015f4 7265
0015f5 2d2d
0015f6 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015f7 4b43
0015f8 5b20
0015f9 7830
0015fa 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015fb 5832
0015fc 0d5d
0015fd 000a
0015fe 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015ff 4854
001600 705f
001601 6f72
001602 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001603 7373
001604 6150
001605 6b63
001606 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001607 203e
001608 6f67
001609 2074
00160a 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
00160b 6174
00160c 6c20
00160d 676f
00160e 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
00160f 6b63
001610 0a0d
001611 3c00
001612 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
001613 5f48
001614 7270
001615 636f
001616 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001617 5073
001618 6361
001619 656b
00161a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00161b 6c20
00161c 676f
00161d 6d20
00161e 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
00161f 7069
001620 6c75
001621 7461
001622 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001623 206e
001624 4328
001625 444d
001626 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
001627 6e69
001628 6176
001629 696c
00162a 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00162b 656c
00162c 676e
00162d 6874
00162e 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00162f 6425
001630 0d29
001631 000a
001632 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001633 4854
001634 705f
001635 6f72
001636 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001637 7373
001638 6150
001639 6b63
00163a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00163b 203e
00163c 6f6c
00163d 4d67
00163e 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
00163f 7069
001640 6c75
001641 7461
001642 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001643 436e
001644 646d
001645 6150
001646 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001647 7265
001648 2928
001649 6620
00164a 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
00164b 656c
00164c 0d64
00164d 000a
00164e 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00164f 2d2d
001650 6f6c
001651 4d67
001652 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001653 7069
001654 6c75
001655 7461
001656 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001657 436e
001658 646d
001659 6150
00165a 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00165b 7265
00165c 2d2d
00165d 4320
00165e 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
00165f 5b20
001660 7830
001661 3025
001662 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001663 0d5d
001664 000a
001665 5374
001666 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001667 7472
001668 2020
001669 2020
00166a 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
00166b 2020
00166c 2020
00166d 255b
00166e 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00166f 0d5d
001670 000a
001671 5374
001672 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
001673 2070
001674 2020
001675 2020
001676 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001677 2020
001678 2020
001679 255b
00167a 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00167b 0d5d
00167c 000a
00167d 453c
00167e 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00167f 705f
001680 6f72
001681 6563
001682 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001683 6150
001684 6b63
001685 7465
001686 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001687 6573
001688 4c74
001689 676f
00168a 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
00168b 696e
00168c 7570
00168d 616c
00168e 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
00168f 6353
001690 6568
001691 616d
001692 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
001693 6620
001694 6961
001695 656c
001696 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001697 000a
001698 453c
001699 4854
00169a 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
00169b 6f72
00169c 6563
00169d 7373
00169e 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
00169f 6b63
0016a0 7465
0016a1 203e
0016a2 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
0016a3 2067
0016a4 616d
0016a5 696e
0016a6 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
0016a7 616c
0016a8 6974
0016a9 6e6f
0016aa 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
0016ab 4341
0016ac 294b
0016ad 6920
0016ae 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
0016af 6c61
0016b0 6469
0016b1 6c20
0016b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0016b3 7467
0016b4 2068
0016b5 2528
0016b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0016b7 0a0d
0016b8 0d00
0016b9 2d0a
0016ba 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
0016bb 676f
0016bc 614d
0016bd 696e
0016be 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0016bf 616c
0016c0 6974
0016c1 6e6f
0016c2 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0016c3 506b
0016c4 7261
0016c5 6573
0016c6 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0016c7 202d
0016c8 4341
0016c9 204b
0016ca 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0016cb 2578
0016cc 3230
0016cd 5d58
0016ce 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0016cf 7300
0016d0 6174
0016d1 7574
0016d2 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0016d3 2020
0016d4 2020
0016d5 2020
0016d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016d7 5b20
0016d8 6c25
0016d9 5d64
0016da 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0016db 3c00
0016dc 5445
0016dd 5f48
0016de 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0016df 636f
0016e0 7365
0016e1 5073
0016e2 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0016e3 656b
0016e4 3e74
0016e5 6e20
0016e6 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0016e7 6f77
0016e8 6b72
0016e9 6d20
0016ea 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0016eb 746e
0016ec 6e65
0016ed 6e61
0016ee 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016ef 6920
0016f0 766e
0016f1 6c61
0016f2 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016f3 6c20
0016f4 6e65
0016f5 7467
0016f6 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016f7 2528
0016f8 2964
0016f9 0a0d
0016fa 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016fb 5445
0016fc 5f48
0016fd 7270
0016fe 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016ff 7365
001700 5073
001701 6361
001702 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001703 3e74
001704 6e20
001705 7465
001706 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
001707 6b72
001708 614d
001709 6e69
00170a 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00170b 616e
00170c 636e
00170d 5065
00170e 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
00170f 6573
001710 2872
001711 2029
001712 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001713 6c69
001714 6465
001715 0a0d
001716 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001717 2d0a
001718 6e2d
001719 7465
00171a 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
00171b 6b72
00171c 614d
00171d 6e69
00171e 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00171f 616e
001720 636e
001721 5065
001722 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
001723 6573
001724 2d72
001725 202d
001726 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
001727 2044
001728 305b
001729 2578
00172a 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00172b 5d58
00172c 0a0d
00172d 6300
00172e 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
00172f 2020
001730 2020
001731 2020
001732 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001733 2020
001734 2020
001735 5b20
001736 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001737 3025
001738 5832
001739 0d5d
00173a 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
00173b 6164
00173c 6174
00173d 654c
00173e 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
00173f 2020
001740 2020
001741 2020
001742 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001743 255b
001744 5d64
001745 0a0d
001746 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
001747 7461
001748 2061
001749 2d2d
00174a 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
00174b 2020
00174c 2020
00174d 2020
00174e 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
00174f 000a
001750 2d2d
001751 2d2d
001752 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
001753 2d2d
001754 0a0d
001755 3c00
001756 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001757 5f48
001758 7270
001759 636f
00175a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00175b 5073
00175c 6361
00175d 656b
00175e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00175f 7320
001760 7465
001761 6954
001762 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
001763 7953
001764 636e
001765 6353
001766 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001767 616d
001768 2928
001769 6620
00176a 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
00176b 656c
00176c 0d64
00176d 000a
00176e 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
00176f 4e52
001770 3a20
001771 3c20
001772 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
001773 5f48
001774 7270
001775 636f
001776 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001777 5073
001778 6361
001779 656b
00177a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00177b 4e20
00177c 5445
00177d 5f57
00177e 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
00177f 454d
001780 535f
001781 4e59
001782 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
001783 203a
001784 5445
001785 5f48
001786 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001787 646e
001788 654e
001789 7774
00178a 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00178b 4d6b
00178c 6961
00178d 746e
00178e 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
00178f 6e61
001790 6563
001791 6341
001792 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
001793 2029
001794 6166
001795 6c69
001796 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001797 0a0d
001798 3c00
001799 5445
00179a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00179b 7270
00179c 636f
00179d 7365
00179e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00179f 6361
0017a0 656b
0017a1 3e74
0017a2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017a3 6d65
0017a4 746f
0017a5 2065
0017a6 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
0017a7 6976
0017a8 6563
0017a9 6320
0017aa 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
0017ab 7274
0017ac 6c6f
0017ad 6920
0017ae 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
0017af 6c61
0017b0 6469
0017b1 6c20
0017b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0017b3 7467
0017b4 2068
0017b5 2528
0017b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0017b7 0a0d
0017b8 3c00
0017b9 5445
0017ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017bb 7270
0017bc 636f
0017bd 7365
0017be 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017bf 6361
0017c0 656b
0017c1 3e74
0017c2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017c3 6d65
0017c4 746f
0017c5 4465
0017c6 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0017c7 6369
0017c8 4365
0017c9 6e6f
0017ca 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0017cb 6c6f
0017cc 6150
0017cd 7372
0017ce 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0017cf 2928
0017d0 6620
0017d1 6961
0017d2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0017d3 0d64
0017d4 000a
0017d5 0a0d
0017d6 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0017d7 6572
0017d8 6f6d
0017d9 6574
0017da 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0017db 6976
0017dc 6563
0017dd 6f43
0017de 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0017df 6f72
0017e0 506c
0017e1 7261
0017e2 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0017e3 2d72
0017e4 202d
0017e5 4d43
0017e6 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0017e7 305b
0017e8 2578
0017e9 3230
0017ea 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0017eb 0a0d
0017ec 7600
0017ed 6c61
0017ee 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017ef 2020
0017f0 2020
0017f1 2020
0017f2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017f3 2020
0017f4 5b20
0017f5 6c25
0017f6 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017f7 0a0d
0017f8 3c00
0017f9 5445
0017fa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017fb 7270
0017fc 636f
0017fd 7365
0017fe 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017ff 6361
001800 656b
001801 3e74
001802 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
001803 7465
001804 6954
001805 656d
001806 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
001807 636e
001808 6353
001809 6568
00180a 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
00180b 2528
00180c 646c
00180d 2029
00180e 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
00180f 6c69
001810 6465
001811 0a0d
001812 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
001813 5241
001814 204e
001815 203a
001816 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
001817 4854
001818 705f
001819 6f72
00181a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00181b 7373
00181c 6150
00181d 6b63
00181e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00181f 203e
001820 4544
001821 4356
001822 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
001823 5f4c
001824 554d
001825 4554
001826 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
001827 414c
001828 4d52
001829 3a20
00182a 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
00182b 4854
00182c 725f
00182d 6d65
00182e 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
00182f 4465
001830 7665
001831 6369
001832 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
001833 6e6f
001834 7274
001835 6c6f
001836 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
001837 286b
001838 2029
001839 6166
00183a 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00183b 6465
00183c 0a0d
00183d 3c00
00183e 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
00183f 5f48
001840 7270
001841 636f
001842 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001843 5073
001844 6361
001845 656b
001846 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001847 6320
001848 656c
001849 7261
00184a 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
00184b 7369
00184c 2074
00184d 4341
00184e 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
00184f 6e69
001850 6176
001851 696c
001852 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001853 656c
001854 676e
001855 6874
001856 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001857 6425
001858 0d29
001859 000a
00185a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00185b 4854
00185c 705f
00185d 6f72
00185e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00185f 7373
001860 6150
001861 6b63
001862 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001863 203e
001864 6c63
001865 6165
001866 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001867 7369
001868 5074
001869 7261
00186a 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
00186b 2872
00186c 2029
00186d 6166
00186e 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00186f 6465
001870 0a0d
001871 0d00
001872 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001873 632d
001874 656c
001875 7261
001876 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001877 7473
001878 6150
001879 7372
00187a 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
00187b 2d2d
00187c 4120
00187d 4b43
00187e 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
00187f 7830
001880 3025
001881 5832
001882 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001883 000a
001884 7473
001885 7461
001886 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001887 2020
001888 2020
001889 2020
00188a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00188b 2020
00188c 305b
00188d 2578
00188e 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00188f 5d58
001890 0a0d
001891 3c00
001892 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001893 5f48
001894 7270
001895 636f
001896 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001897 5073
001898 6361
001899 656b
00189a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00189b 6320
00189c 656c
00189d 7261
00189e 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
00189f 7075
0018a0 696c
0018a1 6163
0018a2 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
0018a3 7220
0018a4 7165
0018a5 6575
0018a6 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
0018a7 2820
0018a8 4341
0018a9 294b
0018aa 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
0018ab 4355
0018ac 4543
0018ad 5353
0018ae 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
0018af 0a0d
0018b0 3c00
0018b1 5445
0018b2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0018b3 7270
0018b4 636f
0018b5 7365
0018b6 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0018b7 6361
0018b8 656b
0018b9 3e74
0018ba 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
0018bb 656c
0018bc 7261
0018bd 6420
0018be 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0018bf 696c
0018c0 6163
0018c1 6574
0018c2 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0018c3 7165
0018c4 6575
0018c5 7473
0018c6 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0018c7 4341
0018c8 294b
0018c9 4620
0018ca 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0018cb 454c
0018cc 5b44
0018cd 7830
0018ce 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0018cf 5832
0018d0 215d
0018d1 0d21
0018d2 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0018d3 453c
0018d4 4854
0018d5 705f
0018d6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018d7 6563
0018d8 7373
0018d9 6150
0018da 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018db 7465
0018dc 203e
0018dd 6e75
0018de 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0018df 776f
0018e0 206e
0018e1 7974
0018e2 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0018e3 6620
0018e4 726f
0018e5 6320
0018e6 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0018e7 6c5f
0018e8 7473
0018e9 735f
0018ea 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0018eb 633e
0018ec 646d
0018ed 5b20
0018ee 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018ef 3025
0018f0 5832
0018f1 0d5d
0018f2 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018f3 453c
0018f4 4854
0018f5 705f
0018f6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018f7 6563
0018f8 7373
0018f9 6150
0018fa 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018fb 7465
0018fc 203e
0018fd 6966
0018fe 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018ff 6177
001900 6572
001901 7520
001902 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
001903 616f
001904 2064
001905 6168
001906 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
001907 7427
001908 7320
001909 7075
00190a 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
00190b 7472
00190c 6465
00190d 7920
00190e 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
00190f 0a0d
001910 0d00
001911 3c0a
001912 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
001913 5f48
001914 7270
001915 636f
001916 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001917 5073
001918 6361
001919 656b
00191a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00191b 6920
00191c 766e
00191d 6c61
00191e 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
00191f 6620
001920 6172
001921 656d
001922 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
001923 7079
001924 2065
001925 2028
001926 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
001927 5832
001928 2920
001929 2121
00192a 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
00192b 3c00
00192c 5445
00192d 5f48
00192e 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00192f 6563
001930 7669
001931 3e65
001932 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
001933 6c61
001934 6f6c
001935 2e63
001936 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
001937 4941
001938 454c
001939 2e44
00193a 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
00193b 000a
00193c 007e
00193d 0a0d
00193e 6e69      	.DB  0xA,0x0,0x7E,0x0,0xD,0xA,0x69,0x6E
00193f 6176
001940 696c
001941 2064
001942 656c      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6C,0x65
001943 676e
001944 6874
001945 2121
001946 0a0d      	.DB  0x6E,0x67,0x74,0x68,0x21,0x21,0xD,0xA
001947 3c00
001948 5445
001949 5f48
00194a 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00194b 6563
00194c 7669
00194d 3e65
00194e 6320      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x63
00194f 6568
001950 6b63
001951 7573
001952 206d      	.DB  0x68,0x65,0x63,0x6B,0x73,0x75,0x6D,0x20
001953 7265
001954 6f72
001955 0d72
001956 000a      	.DB  0x65,0x72,0x72,0x6F,0x72,0xD,0xA,0x0
001957 453c
001958 4854
001959 735f
00195a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00195b 3e64
00195c 5720
00195d 5241
00195e 494e      	.DB  0x64,0x3E,0x20,0x57,0x41,0x52,0x4E,0x49
00195f 474e
001960 3a20
001961 5020
001962 6361      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x50,0x61,0x63
001963 656b
001964 2074
001965 7369
001966 7420      	.DB  0x6B,0x65,0x74,0x20,0x69,0x73,0x20,0x74
001967 6f6f
001968 6c20
001969 6e6f
00196a 2867      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x28
00196b 6425
00196c 6220
00196d 7479
00196e 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00196f 0d29
001970 000a
001971 453c
001972 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001973 735f
001974 6e65
001975 3e64
001976 5720      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20,0x57
001977 5241
001978 494e
001979 474e
00197a 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
00197b 4520
00197c 4854
00197d 735f
00197e 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00197f 2064
001980 616d
001981 6c6c
001982 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001983 6620
001984 6961
001985 656c
001986 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
001987 2528
001988 2964
001989 0a0d
00198a 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
00198b 5445
00198c 5f48
00198d 6573
00198e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00198f 203e
001990 5445
001991 5f48
001992 6461      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x61,0x64
001993 5764
001994 6961
001995 5174
001996 6575      	.DB  0x64,0x57,0x61,0x69,0x74,0x51,0x75,0x65
001997 6575
001998 2928
001999 6620
00199a 6961      	.DB  0x75,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00199b 656c
00199c 2064
00199d 695b
00199e 3a64      	.DB  0x6C,0x65,0x64,0x20,0x5B,0x69,0x64,0x3A
00199f 7830
0019a0 3025
0019a1 5832
0019a2 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0019a3 000a
0019a4 453c
0019a5 4854
0019a6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
0019a7 6977
0019a8 6374
0019a9 4d68
0019aa 646f      	.DB  0x77,0x69,0x74,0x63,0x68,0x4D,0x6F,0x64
0019ab 3e65
0019ac 7320
0019ad 6977
0019ae 6374      	.DB  0x65,0x3E,0x20,0x73,0x77,0x69,0x74,0x63
0019af 2068
0019b0 6f74
0019b1 4320
0019b2 6e6f      	.DB  0x68,0x20,0x74,0x6F,0x20,0x43,0x6F,0x6E
0019b3 6966
0019b4 2067
0019b5 6f6d
0019b6 6564      	.DB  0x66,0x69,0x67,0x20,0x6D,0x6F,0x64,0x65
0019b7 0a0d
0019b8 3c00
0019b9 5445
0019ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0019bb 7773
0019bc 7469
0019bd 6863
0019be 6f4d      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x4D,0x6F
0019bf 6564
0019c0 203e
0019c1 7773
0019c2 7469      	.DB  0x64,0x65,0x3E,0x20,0x73,0x77,0x69,0x74
0019c3 6863
0019c4 7420
0019c5 206f
0019c6 6f4e      	.DB  0x63,0x68,0x20,0x74,0x6F,0x20,0x4E,0x6F
0019c7 6d72
0019c8 6c61
0019c9 6d20
0019ca 646f      	.DB  0x72,0x6D,0x61,0x6C,0x20,0x6D,0x6F,0x64
0019cb 0d65
0019cc 000a
0019cd 453c
0019ce 4854      	.DB  0x65,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0019cf 675f
0019d0 7465
0019d1 6f43
0019d2 666e      	.DB  0x5F,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
0019d3 6769
0019d4 203e
0019d5 7257
0019d6 7469      	.DB  0x69,0x67,0x3E,0x20,0x57,0x72,0x69,0x74
0019d7 2065
0019d8 6f74
0019d9 7520
0019da 7261      	.DB  0x65,0x20,0x74,0x6F,0x20,0x75,0x61,0x72
0019db 2074
0019dc 2030
0019dd 003a
0019de 453c      	.DB  0x74,0x20,0x30,0x20,0x3A,0x0,0x3C,0x45
0019df 4854
0019e0 735f
0019e1 7465
0019e2 6f43      	.DB  0x54,0x48,0x5F,0x73,0x65,0x74,0x43,0x6F
0019e3 666e
0019e4 6769
0019e5 203e
0019e6 616d      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D,0x61
0019e7 6c6c
0019e8 636f
0019e9 4328
0019ea 4e4f      	.DB  0x6C,0x6C,0x6F,0x63,0x28,0x43,0x4F,0x4E
0019eb 5f46
0019ec 4552
0019ed 4441
0019ee 425f      	.DB  0x46,0x5F,0x52,0x45,0x41,0x44,0x5F,0x42
0019ef 4655
0019f0 4546
0019f1 2952
0019f2 6620      	.DB  0x55,0x46,0x46,0x45,0x52,0x29,0x20,0x66
0019f3 6961
0019f4 656c
0019f5 0d64
0019f6 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0019f7 453c
0019f8 4854
0019f9 735f
0019fa 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
0019fb 6f43
0019fc 666e
0019fd 6769
0019fe 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0019ff 7257
001a00 7469
001a01 2065
001a02 6f74      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x74,0x6F
001a03 7520
001a04 7261
001a05 2074
001a06 2030      	.DB  0x20,0x75,0x61,0x72,0x74,0x20,0x30,0x20
001a07 003a
001a08 453c
001a09 4854
001a0a 735f      	.DB  0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a0b 7465
001a0c 6f43
001a0d 666e
001a0e 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a0f 203e
001a10 6572
001a11 6461
001a12 6320      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x63
001a13 6e6f
001a14 6966
001a15 2067
001a16 7266      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x20,0x66,0x72
001a17 6d6f
001a18 4520
001a19 4854
001a1a 6d20      	.DB  0x6F,0x6D,0x20,0x45,0x54,0x48,0x20,0x6D
001a1b 646f
001a1c 6c75
001a1d 2065
001a1e 6166      	.DB  0x6F,0x64,0x75,0x6C,0x65,0x20,0x66,0x61
001a1f 6c69
001a20 6465
001a21 0a0d
001a22 2500      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x25
001a23 3230
001a24 2558
001a25 3230
001a26 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a27 3230
001a28 2558
001a29 3230
001a2a 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2b 3230
001a2c 2558
001a2d 3230
001a2e 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2f 3230
001a30 2558
001a31 3230
001a32 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a33 3230
001a34 2558
001a35 3230
001a36 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a37 3230
001a38 2558
001a39 3230
001a3a 0058      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x0
001a3b 453c
001a3c 4854
001a3d 735f
001a3e 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
001a3f 6f43
001a40 666e
001a41 6769
001a42 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
001a43 6553
001a44 2074
001a45 7453
001a46 6972      	.DB  0x53,0x65,0x74,0x20,0x53,0x74,0x72,0x69
001a47 676e
001a48 5b20
001a49 7325
001a4a 0d5d      	.DB  0x6E,0x67,0x20,0x5B,0x25,0x73,0x5D,0xD
001a4b 000a
001a4c 453c
001a4d 4854
001a4e 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a4f 7465
001a50 6f43
001a51 666e
001a52 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a53 203e
001a54 6553
001a55 7474
001a56 6e69      	.DB  0x3E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E
001a57 2067
001a58 736d
001a59 2067
001a5a 2d2d      	.DB  0x67,0x20,0x6D,0x73,0x67,0x20,0x2D,0x2D
001a5b 0d2d
001a5c 000a
001a5d 0a0d
001a5e 2d2d      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001a5f 0d2d
001a60 000a
001a61 453c
001a62 4854      	.DB  0x2D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001a63 725f
001a64 7365
001a65 7465
001a66 203e      	.DB  0x5F,0x72,0x65,0x73,0x65,0x74,0x3E,0x20
001a67 6552
001a68 6573
001a69 7474
001a6a 6e69      	.DB  0x52,0x65,0x73,0x65,0x74,0x74,0x69,0x6E
001a6b 2067
001a6c 7445
001a6d 6568
001a6e 6e72      	.DB  0x67,0x20,0x45,0x74,0x68,0x65,0x72,0x6E
001a6f 7465
001a70 4d20
001a71 646f
001a72 6c75      	.DB  0x65,0x74,0x20,0x4D,0x6F,0x64,0x75,0x6C
001a73 2c65
001a74 7020
001a75 656c
001a76 7361      	.DB  0x65,0x2C,0x20,0x70,0x6C,0x65,0x61,0x73
001a77 2065
001a78 6177
001a79 7469
001a7a 002e      	.DB  0x65,0x20,0x77,0x61,0x69,0x74,0x2E,0x0
001a7b 2e2e
001a7c 442e
001a7d 6e6f
001a7e 0d65      	.DB  0x2E,0x2E,0x2E,0x44,0x6F,0x6E,0x65,0xD
001a7f 000a      	.DB  0xA,0x0
                 _0x140000:
001a80 733c
001a81 6174
001a82 7574
001a83 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a84 7165
001a85 6575
001a86 7473
001a87 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a88 7372
001a89 7265
001a8a 203e
001a8b 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a8c 6c6c
001a8d 636f
001a8e 6620
001a8f 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a90 656c
001a91 0d64
001a92 000a
001a93 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a94 6e6f
001a95 6966
001a96 4d67
001a97 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a98 6761
001a99 5065
001a9a 7261
001a9b 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a9c 3e72
001a9d 0a0d
001a9e 3c00
001a9f 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001aa0 666e
001aa1 6769
001aa2 614d
001aa3 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001aa4 6567
001aa5 6150
001aa6 7372
001aa7 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001aa8 203e
001aa9 4552
001aaa 4441
001aab 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001aac 0d47
001aad 000a
001aae 633c
001aaf 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ab0 6966
001ab1 4d67
001ab2 6e61
001ab3 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001ab4 5065
001ab5 7261
001ab6 6573
001ab7 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001ab8 5720
001ab9 4952
001aba 4954
001abb 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001abc 0a0d
001abd 3c00
001abe 6f63
001abf 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ac0 6769
001ac1 614d
001ac2 616e
001ac3 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001ac4 6150
001ac5 7372
001ac6 7265
001ac7 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001ac8 6f63
001ac9 666e
001aca 654c
001acb 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001acc 203d
001acd 6425
001ace 0a0d
001acf 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001ad0 6f63
001ad1 666e
001ad2 6769
001ad3 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001ad4 616e
001ad5 6567
001ad6 6150
001ad7 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001ad8 7265
001ad9 203e
001ada 616d
001adb 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001adc 636f
001add 6620
001ade 6961
001adf 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001ae0 0d64
001ae1 000a
001ae2 6e3c
001ae3 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ae4 6f77
001ae5 6b72
001ae6 614d
001ae7 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ae8 6574
001ae9 616e
001aea 636e
001aeb 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001aec 7261
001aed 6573
001aee 3e72
001aef 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001af0 6c61
001af1 6f6c
001af2 2063
001af3 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001af4 6c69
001af5 6465
001af6 2820
001af7 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001af8 0d29
001af9 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001afa 673c
001afb 7465
001afc 6f43
001afd 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001afe 6769
001aff 654c
001b00 3e6e
001b01 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001b02 6b6e
001b03 6f6e
001b04 6e77
001b05 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001b06 6e6f
001b07 6966
001b08 7567
001b09 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001b0a 6974
001b0b 6e6f
001b0c 7420
001b0d 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001b0e 2065
001b0f 305b
001b10 2578
001b11 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001b12 5d58
001b13 0a0d
001b14 3c00
001b15 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001b16 666e
001b17 6769
001b18 6552
001b19 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b1a 203e
001b1b 4f43
001b1c 464e
001b1d 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001b1e 4f52
001b1f 4550
001b20 5452
001b21 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001b22 2053
001b23 616d
001b24 6c6c
001b25 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001b26 2031
001b27 6166
001b28 6c69
001b29 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001b2a 2820
001b2b 6425
001b2c 6220
001b2d 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001b2e 7365
001b2f 0d29
001b30 000a
001b31 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b32 6e6f
001b33 6966
001b34 5267
001b35 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b36 3e64
001b37 6720
001b38 7465
001b39 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b3a 706f
001b3b 7265
001b3c 6974
001b3d 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b3e 6f43
001b3f 666e
001b40 6769
001b41 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b42 6620
001b43 6961
001b44 656c
001b45 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b46 000a
001b47 0a0d
001b48 2d2d
001b49 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b4a 4552
001b4b 4441
001b4c 4320
001b4d 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b4e 5f46
001b4f 5250
001b50 504f
001b51 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b52 4954
001b53 5345
001b54 2d20
001b55 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b56 0a0d
001b57 2500
001b58 0d73
001b59 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b5a 6425
001b5b 0a0d
001b5c 3c00
001b5d 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b5e 666e
001b5f 6769
001b60 6552
001b61 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b62 203e
001b63 4f43
001b64 464e
001b65 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b66 4550
001b67 4152
001b68 4554
001b69 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b6a 6c61
001b6b 6f6c
001b6c 3163
001b6d 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b6e 6961
001b6f 656c
001b70 2064
001b71 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b72 2064
001b73 7962
001b74 6574
001b75 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b76 0a0d
001b77 3c00
001b78 6f63
001b79 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b7a 6769
001b7b 6552
001b7c 6461
001b7d 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b7e 6567
001b7f 4f74
001b80 6570
001b81 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b82 6974
001b83 676e
001b84 6f43
001b85 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b86 6769
001b87 2928
001b88 6620
001b89 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b8a 656c
001b8b 0d64
001b8c 000a
001b8d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b8e 2d2d
001b8f 202d
001b90 4552
001b91 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b92 4320
001b93 4e4f
001b94 5f46
001b95 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b96 5245
001b97 5441
001b98 2045
001b99 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b9a 0d2d
001b9b 000a
001b9c 6f6d
001b9d 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b9e 2020
001b9f 2020
001ba0 2020
001ba1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001ba2 2020
001ba3 2020
001ba4 305b
001ba5 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001ba6 3230
001ba7 5d58
001ba8 0a0d
001ba9 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001baa 7665
001bab 6369
001bac 4565
001bad 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001bae 6c62
001baf 2065
001bb0 2020
001bb1 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001bb2 7830
001bb3 3025
001bb4 5832
001bb5 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001bb6 000a
001bb7 6c61
001bb8 7261
001bb9 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001bba 616e
001bbb 6c62
001bbc 2065
001bbd 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001bbe 2020
001bbf 305b
001bc0 2578
001bc1 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001bc2 5d58
001bc3 0a0d
001bc4 7300
001bc5 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001bc6 6f73
001bc7 4572
001bc8 616e
001bc9 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001bca 2065
001bcb 2020
001bcc 0020
001bcd 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001bce 2578
001bcf 3230
001bd0 5d58
001bd1 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001bd2 6f63
001bd3 666e
001bd4 6769
001bd5 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001bd6 6461
001bd7 203e
001bd8 4f43
001bd9 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001bda 535f
001bdb 4e45
001bdc 4f53
001bdd 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bde 616d
001bdf 6c6c
001be0 636f
001be1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001be2 6166
001be3 6c69
001be4 6465
001be5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001be6 6425
001be7 6220
001be8 7479
001be9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bea 0d29
001beb 000a
001bec 633c
001bed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bee 6966
001bef 5267
001bf0 6165
001bf1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bf2 6720
001bf3 7465
001bf4 6553
001bf5 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001bf6 726f
001bf7 6f43
001bf8 666e
001bf9 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001bfa 2928
001bfb 6620
001bfc 6961
001bfd 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001bfe 0d64
001bff 000a
001c00 0a0d
001c01 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001c02 202d
001c03 4552
001c04 4441
001c05 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001c06 4e4f
001c07 5f46
001c08 4553
001c09 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001c0a 524f
001c0b 5b20
001c0c 6425
001c0d 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001c0e 2d2d
001c0f 0a0d
001c10 7300
001c11 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001c12 6c70
001c13 6e69
001c14 5267
001c15 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001c16 2065
001c17 2020
001c18 5b20
001c19 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c1a 0d5d
001c1b 000a
001c1c 6572
001c1d 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001c1e 7563
001c1f 7272
001c20 6e65
001c21 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001c22 2020
001c23 2020
001c24 305b
001c25 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c26 3430
001c27 5d58
001c28 0a0d
001c29 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001c2a 6d69
001c2b 5365
001c2c 6174
001c2d 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001c2e 6f48
001c2f 7275
001c30 2020
001c31 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c32 6425
001c33 0d5d
001c34 000a
001c35 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c36 656d
001c37 7453
001c38 7261
001c39 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c3a 6e69
001c3b 2020
001c3c 2020
001c3d 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c3e 5d64
001c3f 0a0d
001c40 7400
001c41 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c42 5365
001c43 6f74
001c44 4870
001c45 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c46 2072
001c47 2020
001c48 5b20
001c49 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c4a 0d5d
001c4b 000a
001c4c 6974
001c4d 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c4e 7453
001c4f 706f
001c50 694d
001c51 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c52 2020
001c53 2020
001c54 255b
001c55 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c56 0a0d
001c57 6c00
001c58 776f
001c59 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c5a 694c
001c5b 696d
001c5c 2074
001c5d 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c5e 2020
001c5f 5b20
001c60 6625
001c61 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c62 000a
001c63 6f6c
001c64 6577
001c65 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c66 6c65
001c67 7961
001c68 2020
001c69 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c6a 2020
001c6b 255b
001c6c 5d64
001c6d 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c6e 6c00
001c6f 776f
001c70 7265
001c71 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c72 7274
001c73 6d65
001c74 2065
001c75 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c76 5b20
001c77 6625
001c78 0d5d
001c79 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c7a 7075
001c7b 6570
001c7c 4c72
001c7d 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c7e 7469
001c7f 2020
001c80 2020
001c81 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c82 255b
001c83 5d66
001c84 0a0d
001c85 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c86 7070
001c87 7265
001c88 6544
001c89 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c8a 2079
001c8b 2020
001c8c 2020
001c8d 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c8e 6425
001c8f 0d5d
001c90 000a
001c91 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c92 6570
001c93 4572
001c94 7478
001c95 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c96 656d
001c97 2020
001c98 2020
001c99 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c9a 5d66
001c9b 0a0d
001c9c 3c00
001c9d 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c9e 666e
001c9f 6769
001ca0 6552
001ca1 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ca2 203e
001ca3 4f43
001ca4 464e
001ca5 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ca6 5855
001ca7 4944
001ca8 6d20
001ca9 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001caa 6f6c
001cab 3163
001cac 6620
001cad 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cae 656c
001caf 2064
001cb0 2528
001cb1 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cb2 7962
001cb3 6574
001cb4 2973
001cb5 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cb6 3c00
001cb7 6f63
001cb8 666e
001cb9 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001cba 6552
001cbb 6461
001cbc 203e
001cbd 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001cbe 4174
001cbf 7875
001cc0 6944
001cc1 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001cc2 6e6f
001cc3 6966
001cc4 2867
001cc5 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001cc6 6166
001cc7 6c69
001cc8 6465
001cc9 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001cca 0d00
001ccb 2d0a
001ccc 2d2d
001ccd 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001cce 4145
001ccf 2044
001cd0 4f43
001cd1 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001cd2 415f
001cd3 5855
001cd4 4944
001cd5 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001cd6 6425
001cd7 2d5d
001cd8 2d2d
001cd9 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001cda 6300
001cdb 6168
001cdc 6e6e
001cdd 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cde 6e45
001cdf 6261
001ce0 656c
001ce1 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001ce2 2020
001ce3 305b
001ce4 2578
001ce5 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001ce6 5d58
001ce7 0a0d
001ce8 6100
001ce9 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cea 6d72
001ceb 6544
001cec 616c
001ced 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cee 2020
001cef 2020
001cf0 2020
001cf1 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cf2 5d64
001cf3 0a0d
001cf4 3c00
001cf5 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001cf6 666e
001cf7 6769
001cf8 6552
001cf9 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001cfa 203e
001cfb 4f43
001cfc 464e
001cfd 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001cfe 5855
001cff 4f44
001d00 6d20
001d01 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001d02 6f6c
001d03 3163
001d04 6620
001d05 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001d06 656c
001d07 2064
001d08 2528
001d09 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001d0a 7962
001d0b 6574
001d0c 2973
001d0d 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001d0e 3c00
001d0f 6f63
001d10 666e
001d11 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001d12 6552
001d13 6461
001d14 203e
001d15 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001d16 4174
001d17 7875
001d18 6f44
001d19 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001d1a 6f43
001d1b 666e
001d1c 6769
001d1d 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001d1e 6620
001d1f 6961
001d20 656c
001d21 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001d22 000a
001d23 0a0d
001d24 2d2d
001d25 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001d26 4552
001d27 4441
001d28 4320
001d29 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001d2a 5f46
001d2b 5541
001d2c 4458
001d2d 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001d2e 255b
001d2f 5d64
001d30 2d2d
001d31 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d32 000a
001d33 6863
001d34 6e61
001d35 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d36 456c
001d37 616e
001d38 6c62
001d39 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d3a 2020
001d3b 2020
001d3c 305b
001d3d 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d3e 3230
001d3f 5d58
001d40 0a0d
001d41 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d42 6174
001d43 6574
001d44 6e4f
001d45 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d46 6e65
001d47 2074
001d48 2020
001d49 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d4a 5b20
001d4b 6425
001d4c 0d5d
001d4d 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d4e 7665
001d4f 6e65
001d50 5374
001d51 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d52 6372
001d53 4e65
001d54 6d75
001d55 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d56 2072
001d57 255b
001d58 5d64
001d59 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d5a 6500
001d5b 6576
001d5c 746e
001d5d 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d5e 7275
001d5f 6563
001d60 2020
001d61 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d62 2020
001d63 0020
001d64 633c
001d65 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d66 6966
001d67 5267
001d68 6165
001d69 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d6a 4320
001d6b 4e4f
001d6c 5f46
001d6d 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d6e 4158
001d6f 2049
001d70 616d
001d71 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d72 636f
001d73 2031
001d74 6166
001d75 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d76 6465
001d77 2820
001d78 6425
001d79 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d7a 7479
001d7b 7365
001d7c 0d29
001d7d 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d7e 633c
001d7f 6e6f
001d80 6966
001d81 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d82 6165
001d83 3e64
001d84 6720
001d85 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d86 7541
001d87 4178
001d88 6e69
001d89 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d8a 666e
001d8b 6769
001d8c 2928
001d8d 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d8e 6961
001d8f 656c
001d90 0d64
001d91 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d92 0a0d
001d93 2d2d
001d94 202d
001d95 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d96 4441
001d97 4320
001d98 4e4f
001d99 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d9a 5541
001d9b 4158
001d9c 2049
001d9d 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d9e 5d64
001d9f 2d2d
001da0 0d2d
001da1 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001da2 6c61
001da3 7261
001da4 446d
001da5 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001da6 7961
001da7 2020
001da8 2020
001da9 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001daa 5b20
001dab 6625
001dac 0d5d
001dad 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001dae 633c
001daf 6e6f
001db0 6966
001db1 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001db2 6165
001db3 3e64
001db4 4320
001db5 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001db6 5f46
001db7 5541
001db8 4158
001db9 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001dba 616d
001dbb 6c6c
001dbc 636f
001dbd 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001dbe 6166
001dbf 6c69
001dc0 6465
001dc1 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001dc2 6425
001dc3 6220
001dc4 7479
001dc5 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001dc6 0d29
001dc7 000a
001dc8 633c
001dc9 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001dca 6966
001dcb 5267
001dcc 6165
001dcd 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001dce 6720
001dcf 7465
001dd0 7541
001dd1 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001dd2 756f
001dd3 4374
001dd4 6e6f
001dd5 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001dd6 2867
001dd7 2029
001dd8 6166
001dd9 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001dda 6465
001ddb 0a0d
001ddc 0d00
001ddd 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dde 2d2d
001ddf 5220
001de0 4145
001de1 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001de2 4f43
001de3 464e
001de4 415f
001de5 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001de6 4f41
001de7 5b20
001de8 6425
001de9 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dea 2d2d
001deb 0a0d
001dec 6c00
001ded 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dee 6c65
001def 6e4f
001df0 7645
001df1 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001df2 2074
001df3 2020
001df4 2020
001df5 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001df6 6625
001df7 0d5d
001df8 000a
001df9 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001dfa 6e6f
001dfb 6966
001dfc 5267
001dfd 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001dfe 3e64
001dff 4320
001e00 4e4f
001e01 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001e02 5542
001e03 5a5a
001e04 5245
001e05 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001e06 6c61
001e07 6f6c
001e08 3163
001e09 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001e0a 6961
001e0b 656c
001e0c 2064
001e0d 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001e0e 2064
001e0f 7962
001e10 6574
001e11 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001e12 0a0d
001e13 3c00
001e14 6f63
001e15 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001e16 6769
001e17 6552
001e18 6461
001e19 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001e1a 6567
001e1b 4274
001e1c 7a75
001e1d 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001e1e 4372
001e1f 6e6f
001e20 6966
001e21 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001e22 2029
001e23 6166
001e24 6c69
001e25 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001e26 0a0d
001e27 0d00
001e28 2d0a
001e29 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001e2a 5220
001e2b 4145
001e2c 2044
001e2d 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001e2e 464e
001e2f 425f
001e30 5a55
001e31 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e32 2052
001e33 2d2d
001e34 0d2d
001e35 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e36 6e65
001e37 6261
001e38 656c
001e39 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e3a 2020
001e3b 2020
001e3c 2020
001e3d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e3e 2020
001e3f 305b
001e40 2578
001e41 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e42 5d58
001e43 0a0d
001e44 3c00
001e45 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e46 666e
001e47 6769
001e48 6552
001e49 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e4a 203e
001e4b 4f43
001e4c 464e
001e4d 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e4e 564e
001e4f 4c41
001e50 5241
001e51 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e52 616d
001e53 6c6c
001e54 636f
001e55 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e56 6166
001e57 6c69
001e58 6465
001e59 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e5a 6425
001e5b 6220
001e5c 7479
001e5d 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e5e 0d29
001e5f 000a
001e60 633c
001e61 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e62 6966
001e63 5267
001e64 6165
001e65 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e66 6720
001e67 7465
001e68 6e45
001e69 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e6a 616c
001e6b 6d72
001e6c 6f43
001e6d 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e6e 6769
001e6f 2928
001e70 6620
001e71 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e72 656c
001e73 0d64
001e74 000a
001e75 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e76 2d2d
001e77 202d
001e78 4552
001e79 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e7a 4320
001e7b 4e4f
001e7c 5f46
001e7d 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e7e 4156
001e7f 414c
001e80 4d52
001e81 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e82 2d2d
001e83 0a0d
001e84 6700
001e85 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e86 5352
001e87 4953
001e88 654c
001e89 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e8a 206c
001e8b 2020
001e8c 2020
001e8d 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e8e 6625
001e8f 0d5d
001e90 000a
001e91 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e92 436d
001e93 6572
001e94 6964
001e95 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e96 6c61
001e97 6e61
001e98 6563
001e99 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e9a 255b
001e9b 5d64
001e9c 0a0d
001e9d 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e9e 7461
001e9f 6574
001ea0 7972
001ea1 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001ea2 6576
001ea3 206c
001ea4 2020
001ea5 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001ea6 5b20
001ea7 6625
001ea8 0d5d
001ea9 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001eaa 6f63
001eab 6d6d
001eac 6953
001ead 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001eae 6c61
001eaf 654c
001eb0 6576
001eb1 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001eb2 2020
001eb3 255b
001eb4 5d66
001eb5 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001eb6 6300
001eb7 6d6f
001eb8 4c6d
001eb9 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001eba 4474
001ebb 6c65
001ebc 7961
001ebd 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001ebe 2020
001ebf 5b20
001ec0 6425
001ec1 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001ec2 000a
001ec3 656d
001ec4 6f6d
001ec5 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001ec6 694d
001ec7 206e
001ec8 2020
001ec9 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001eca 2020
001ecb 2020
001ecc 255b
001ecd 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001ece 0a0d
001ecf 3c00
001ed0 6f63
001ed1 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ed2 6769
001ed3 6552
001ed4 6461
001ed5 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ed6 4f43
001ed7 464e
001ed8 535f
001ed9 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001eda 5254
001edb 5045
001edc 524f
001edd 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001ede 616d
001edf 6c6c
001ee0 636f
001ee1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ee2 6166
001ee3 6c69
001ee4 6465
001ee5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ee6 6425
001ee7 6220
001ee8 7479
001ee9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001eea 0d29
001eeb 000a
001eec 633c
001eed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001eee 6966
001eef 5267
001ef0 6165
001ef1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001ef2 6720
001ef3 7465
001ef4 7453
001ef5 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ef6 7375
001ef7 6552
001ef8 6f70
001ef9 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001efa 6f43
001efb 666e
001efc 6769
001efd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001efe 6620
001eff 6961
001f00 656c
001f01 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001f02 000a
001f03 0a0d
001f04 2d2d
001f05 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f06 4552
001f07 4441
001f08 4320
001f09 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001f0a 5f46
001f0b 5453
001f0c 5441
001f0d 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001f0e 4f50
001f0f 5452
001f10 2d20
001f11 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001f12 0a0d
001f13 6100
001f14 6363
001f15 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001f16 2020
001f17 2020
001f18 5b20
001f19 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001f1a 3025
001f1b 5832
001f1c 0d5d
001f1d 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001f1e 6e69
001f1f 7674
001f20 2020
001f21 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001f22 2020
001f23 255b
001f24 5d64
001f25 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001f26 3c00
001f27 6f63
001f28 666e
001f29 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f2a 6552
001f2b 6461
001f2c 203e
001f2d 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001f2e 6e6b
001f2f 776f
001f30 206e
001f31 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f32 666e
001f33 6769
001f34 7275
001f35 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f36 6f69
001f37 206e
001f38 7974
001f39 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f3a 5b20
001f3b 7830
001f3c 3025
001f3d 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f3e 0d5d
001f3f 000a
001f40 0a0d
001f41 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f42 2d2d
001f43 5720
001f44 4952
001f45 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f46 4320
001f47 4e4f
001f48 4946
001f49 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f4a 6170
001f4b 6b63
001f4c 7465
001f4d 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f4e 6425
001f4f 2d29
001f50 2d2d
001f51 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f52 000a
001f53 0a0d
001f54 2d2d
001f55 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f56 7257
001f57 7469
001f58 2065
001f59 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f5a 464e
001f5b 505f
001f5c 4f52
001f5d 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f5e 5452
001f5f 4549
001f60 2053
001f61 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f62 002d
001f63 633c
001f64 6e6f
001f65 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f66 5767
001f67 6972
001f68 6574
001f69 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f6a 6573
001f6b 5074
001f6c 6f72
001f6d 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f6e 7472
001f6f 6569
001f70 4373
001f71 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f72 6966
001f73 2867
001f74 2029
001f75 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f76 6c69
001f77 6465
001f78 0a0d
001f79 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f7a 2d0a
001f7b 2d2d
001f7c 5720
001f7d 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f7e 6574
001f7f 4320
001f80 4e4f
001f81 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f82 504f
001f83 5245
001f84 5441
001f85 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f86 2d2d
001f87 002d
001f88 633c
001f89 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f8a 6966
001f8b 5767
001f8c 6972
001f8d 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f8e 203e
001f8f 6573
001f90 4f74
001f91 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f92 6172
001f93 6974
001f94 676e
001f95 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f96 666e
001f97 6769
001f98 2928
001f99 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f9a 6961
001f9b 656c
001f9c 0d64
001f9d 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f9e 0a0d
001f9f 2d2d
001fa0 202d
001fa1 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001fa2 7469
001fa3 2065
001fa4 4f43
001fa5 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001fa6 535f
001fa7 4e45
001fa8 4f53
001fa9 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001faa 2528
001fab 2964
001fac 2d20
001fad 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001fae 3c00
001faf 6f63
001fb0 666e
001fb1 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001fb2 7257
001fb3 7469
001fb4 3e65
001fb5 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001fb6 7465
001fb7 6553
001fb8 736e
001fb9 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001fba 6f43
001fbb 666e
001fbc 6769
001fbd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001fbe 6620
001fbf 6961
001fc0 656c
001fc1 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001fc2 000a
001fc3 0a0d
001fc4 2d2d
001fc5 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001fc6 7257
001fc7 7469
001fc8 2065
001fc9 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001fca 464e
001fcb 415f
001fcc 5855
001fcd 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001fce 2820
001fcf 6425
001fd0 2029
001fd1 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fd2 002d
001fd3 633c
001fd4 6e6f
001fd5 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fd6 5767
001fd7 6972
001fd8 6574
001fd9 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001fda 6573
001fdb 4174
001fdc 7875
001fdd 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fde 436e
001fdf 6e6f
001fe0 6966
001fe1 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fe2 2029
001fe3 6166
001fe4 6c69
001fe5 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fe6 0a0d
001fe7 0d00
001fe8 2d0a
001fe9 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fea 5720
001feb 6972
001fec 6574
001fed 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fee 4e4f
001fef 5f46
001ff0 5541
001ff1 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001ff2 204f
001ff3 2528
001ff4 2964
001ff5 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001ff6 2d2d
001ff7 3c00
001ff8 6f63
001ff9 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ffa 6769
001ffb 7257
001ffc 7469
001ffd 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001ffe 7320
001fff 7465
002000 7541
002001 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
002002 756f
002003 4374
002004 6e6f
002005 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
002006 2867
002007 2029
002008 6166
002009 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00200a 6465
00200b 0a0d
00200c 0d00
00200d 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00200e 2d2d
00200f 5720
002010 6972
002011 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
002012 4320
002013 4e4f
002014 5f46
002015 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
002016 4158
002017 2049
002018 2528
002019 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
00201a 2d20
00201b 2d2d
00201c 3c00
00201d 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
00201e 666e
00201f 6769
002020 7257
002021 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
002022 3e65
002023 7320
002024 7465
002025 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
002026 4178
002027 6e69
002028 6f43
002029 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
00202a 6769
00202b 2928
00202c 6620
00202d 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00202e 656c
00202f 0d64
002030 000a
002031 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002032 2d2d
002033 202d
002034 7257
002035 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002036 2065
002037 4f43
002038 464e
002039 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
00203a 5855
00203b 4f41
00203c 2820
00203d 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
00203e 2029
00203f 2d2d
002040 002d
002041 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002042 6e6f
002043 6966
002044 5767
002045 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002046 6574
002047 203e
002048 6573
002049 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
00204a 7875
00204b 6f41
00204c 7475
00204d 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
00204e 666e
00204f 6769
002050 2928
002051 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
002052 6961
002053 656c
002054 0d64
002055 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002056 0a0d
002057 2d2d
002058 202d
002059 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
00205a 7469
00205b 2065
00205c 4f43
00205d 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
00205e 425f
00205f 5a55
002060 455a
002061 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
002062 2d2d
002063 002d
002064 633c
002065 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002066 6966
002067 5767
002068 6972
002069 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
00206a 203e
00206b 6573
00206c 4274
00206d 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
00206e 657a
00206f 4372
002070 6e6f
002071 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
002072 2867
002073 2029
002074 6166
002075 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002076 6465
002077 0a0d
002078 0d00
002079 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00207a 2d2d
00207b 5720
00207c 6972
00207d 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
00207e 4320
00207f 4e4f
002080 5f46
002081 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
002082 4156
002083 414c
002084 4d52
002085 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002086 2d2d
002087 3c00
002088 6f63
002089 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
00208a 6769
00208b 7257
00208c 7469
00208d 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
00208e 7320
00208f 7465
002090 6e45
002091 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
002092 616c
002093 6d72
002094 6f43
002095 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002096 6769
002097 2928
002098 6620
002099 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00209a 656c
00209b 0d64
00209c 000a
00209d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00209e 2d2d
00209f 202d
0020a0 7257
0020a1 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
0020a2 2065
0020a3 4f43
0020a4 464e
0020a5 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
0020a6 4154
0020a7 5254
0020a8 5045
0020a9 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
0020aa 2054
0020ab 2d2d
0020ac 002d
0020ad 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
0020ae 6e6f
0020af 6966
0020b0 5767
0020b1 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
0020b2 6574
0020b3 203e
0020b4 6573
0020b5 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
0020b6 6174
0020b7 7574
0020b8 5273
0020b9 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0020ba 726f
0020bb 4374
0020bc 6e6f
0020bd 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
0020be 2867
0020bf 2029
0020c0 6166
0020c1 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0020c2 6465
0020c3 0a0d
0020c4 3c00
0020c5 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0020c6 4c74
0020c7 676f
0020c8 614d
0020c9 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0020ca 7570
0020cb 616c
0020cc 6574
0020cd 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
0020ce 6568
0020cf 616d
0020d0 203e
0020d1 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020d2 656d
0020d3 7020
0020d4 7265
0020d5 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020d6 2064
0020d7 7265
0020d8 6f72
0020d9 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020da 7473
0020db 7261
0020dc 5b74
0020dd 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020de 5d64
0020df 2d20
0020e0 7320
0020e1 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020e2 5b70
0020e3 6c25
0020e4 5d64
0020e5 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020e6 3c00
0020e7 6573
0020e8 5474
0020e9 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020ea 5365
0020eb 6e79
0020ec 5363
0020ed 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020ee 6d65
0020ef 3e61
0020f0 4720
0020f1 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020f2 3020
0020f3 5520
0020f4 696e
0020f5 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020f6 6974
0020f7 656d
0020f8 7320
0020f9 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020fa 706d
0020fb 0a0d
0020fc 3c00
0020fd 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020fe 5474
0020ff 6d69
002100 5365
002101 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
002102 5363
002103 6863
002104 6d65
002105 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
002106 5220
002107 6365
002108 6965
002109 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
00210a 2064
00210b 6974
00210c 656d
00210d 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
00210e 6e79
00210f 2e63
002110 7020
002111 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
002112 656b
002113 2074
002114 6c25
002115 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002116 000a
002117 733c
002118 7465
002119 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
00211a 656d
00211b 7953
00211c 636e
00211d 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
00211e 6568
00211f 616d
002120 203e
002121 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
002122 5f43
002123 6573
002124 4274
002125 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002126 7261
002127 2879
002128 6c25
002129 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
00212a 6620
00212b 6961
00212c 656c
00212d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00212e 000a
00212f 733c
002130 7465
002131 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
002132 6574
002133 6c41
002134 7261
002135 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002136 7020
002137 7265
002138 616d
002139 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
00213a 746e
00213b 6d20
00213c 7475
00213d 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
00213e 6c61
00213f 7261
002140 0d6d
002141 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
002142 733c
002143 7465
002144 754d
002145 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002146 6c41
002147 7261
002148 3e6d
002149 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
00214a 766e
00214b 6c61
00214c 6469
00214d 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
00214e 7265
00214f 6f69
002150 2064
002151 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
002152 646c
002153 0d29
002154 000a
002155 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002156 7465
002157 754d
002158 6574
002159 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
00215a 7261
00215b 3e6d
00215c 6d20
00215d 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
00215e 2065
00215f 6c61
002160 7261
002161 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
002162 6f66
002163 2072
002164 6c25
002165 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002166 6573
002167 6f63
002168 646e
002169 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
00216a 3c00
00216b 6573
00216c 4d74
00216d 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
00216e 4165
00216f 616c
002170 6d72
002171 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002172 4c41
002173 5241
002174 5f4d
002175 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002176 6574
002177 2528
002178 646c
002179 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
00217a 6166
00217b 6c69
00217c 6465
00217d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3357): warning: .cseg .db misalignment - padding zero byte
00217e 0000      	.DB  0x0
                 _0x18001D:
00217f 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3359): warning: .cseg .db misalignment - padding zero byte
002180 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
002181 0a0d
002182 0a0d
002183 453c
002184 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
002185 615f
002186 6464
002187 6157
002188 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002189 7551
00218a 7565
00218b 3e65
00218c 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
00218d 5241
00218e 494e
00218f 474e
002190 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
002191 5720
002192 6961
002193 2074
002194 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
002195 7565
002196 2065
002197 5546
002198 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002199 0a0d
00219a 0a0d
00219b 3c00
00219c 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
00219d 5f48
00219e 6461
00219f 5764
0021a0 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
0021a1 5174
0021a2 6575
0021a3 6575
0021a4 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
0021a5 616d
0021a6 6c6c
0021a7 636f
0021a8 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
0021a9 2964
0021aa 6620
0021ab 6961
0021ac 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0021ad 0d64
0021ae 000a
0021af 0a0d
0021b0 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
0021b1 2020
0021b2 2020
0021b3 2020
0021b4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b5 2020
0021b6 2020
0021b7 2020
0021b8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b9 2020
0021ba 2020
0021bb 2020
0021bc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021bd 2020
0021be 2020
0021bf 2020
0021c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c1 2020
0021c2 4120
0021c3 6464
0021c4 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0021c5 2820
0021c6 3025
0021c7 5832
0021c8 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0021c9 6f74
0021ca 6520
0021cb 6874
0021cc 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0021cd 6961
0021ce 5174
0021cf 6575
0021d0 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021d1 255b
0021d2 5d64
0021d3 0a0d
0021d4 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021d5 200a
0021d6 2020
0021d7 2020
0021d8 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021d9 2020
0021da 2020
0021db 2020
0021dc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021dd 2020
0021de 2020
0021df 2020
0021e0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e1 2020
0021e2 2020
0021e3 2020
0021e4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e5 2020
0021e6 2020
0021e7 2020
0021e8 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021e9 6f6d
0021ea 6576
0021eb 2064
0021ec 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021ed 3230
0021ee 2958
0021ef 7420
0021f0 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021f1 7465
0021f2 5f68
0021f3 6177
0021f4 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021f5 7551
0021f6 7565
0021f7 5b65
0021f8 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021f9 0d5d
0021fa 000a
0021fb 0a0d
0021fc 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021fd 4157
0021fe 4e52
0021ff 4e49
002200 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002201 203a
002202 5445
002203 5f48
002204 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
002205 6f6d
002206 6576
002207 6157
002208 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
002209 7551
00220a 7565
00220b 2865
00220c 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
00220d 5832
00220e 2029
00220f 6f6e
002210 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
002211 6f66
002212 6e75
002213 2164
002214 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
002215 0d0a
002216 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A001D:
002217 0000
002218 41a0
002219 0000
00221a 0000      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0x0,0x0
00221b 0000
00221c 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1A0021:
00221d ffff
00221e ffff
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3403): warning: .cseg .db misalignment - padding zero byte
00221f 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x1A0022:
002220 0000
002221 0000
002222 0000
002223 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002224 0000
002225 0000
002226 0000
002227 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002228 0000
002229 0000
00222a 0000
00222b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222c 0000
00222d 0000
00222e 0000
00222f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002230 0000
002231 0000
002232 0000
002233 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002234 0000
002235 0000
002236 0000
002237 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002238 0000
002239 0000
00223a 0000
00223b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00223c 0000
00223d 0000
00223e 0000
00223f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002240 0000
002241 0000
002242 6042
002243 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
002244 0000
002245 0000
002246 0000
002247 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002248 0000
002249 0000
00224a 0000
00224b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x1A009D:
00224c 6042
00224d 3fd5
00224e 0000
00224f 0000      	.DB  0x42,0x60,0xD5,0x3F,0x0,0x0,0x0,0x0
002250 0000
002251 0000
002252 0000
002253 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002254 0000
002255 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1A0000:
002256 695b
002257 6553
002258 736e
002259 726f      	.DB  0x5B,0x69,0x53,0x65,0x6E,0x73,0x6F,0x72
00225a 6547
00225b 5674
00225c 6c61
00225d 6575      	.DB  0x47,0x65,0x74,0x56,0x61,0x6C,0x75,0x65
00225e 645d
00225f 7461
002260 5b61
002261 6300      	.DB  0x5D,0x64,0x61,0x74,0x61,0x5B,0x0,0x63
002262 2568
002263 3a64
002264 2520
002265 3430      	.DB  0x68,0x25,0x64,0x3A,0x20,0x25,0x30,0x34
002266 2064
002267 6300
002268 2568
002269 3a64      	.DB  0x64,0x20,0x0,0x63,0x68,0x25,0x64,0x3A
00226a 2520
00226b 3430
00226c 2c64
00226d 0020      	.DB  0x20,0x25,0x30,0x34,0x64,0x2C,0x20,0x0
00226e 0d5d
00226f 000a
002270 733c
002271 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002272 6f73
002273 5272
002274 6165
002275 3e64      	.DB  0x73,0x6F,0x72,0x52,0x65,0x61,0x64,0x3E
002276 4520
002277 5252
002278 203a
002279 6863      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x63,0x68
00227a 7620
00227b 6c61
00227c 6575
00227d 6f20      	.DB  0x20,0x76,0x61,0x6C,0x75,0x65,0x20,0x6F
00227e 7475
00227f 6f20
002280 2066
002281 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
002282 676e
002283 0d65
002284 000a
002285 733c      	.DB  0x6E,0x67,0x65,0xD,0xA,0x0,0x3C,0x73
002286 6e65
002287 6f73
002288 4372
002289 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
00228a 6269
00228b 6172
00228c 6574
00228d 3e31      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x31,0x3E
00228e 4120
00228f 4f42
002290 5452
002291 203a      	.DB  0x20,0x41,0x42,0x4F,0x52,0x54,0x3A,0x20
002292 6573
002293 736e
002294 726f
002295 6320      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x20,0x63
002296 2068
002297 6425
002298 6920
002299 2073      	.DB  0x68,0x20,0x25,0x64,0x20,0x69,0x73,0x20
00229a 6964
00229b 6173
00229c 6c62
00229d 0d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0xD
00229e 000a
00229f 733c
0022a0 6e65
0022a1 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0022a2 4372
0022a3 6c61
0022a4 6269
0022a5 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
0022a6 6574
0022a7 3e31
0022a8 4120
0022a9 4f42      	.DB  0x74,0x65,0x31,0x3E,0x20,0x41,0x42,0x4F
0022aa 5452
0022ab 203a
0022ac 6573
0022ad 736e      	.DB  0x52,0x54,0x3A,0x20,0x73,0x65,0x6E,0x73
0022ae 726f
0022af 6320
0022b0 2068
0022b1 6425      	.DB  0x6F,0x72,0x20,0x63,0x68,0x20,0x25,0x64
0022b2 6520
0022b3 7272
0022b4 726f
0022b5 3028      	.DB  0x20,0x65,0x72,0x72,0x6F,0x72,0x28,0x30
0022b6 2578
0022b7 3230
0022b8 2958
0022b9 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x29,0xD,0xA
0022ba 3c00
0022bb 6573
0022bc 736e
0022bd 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0022be 6143
0022bf 696c
0022c0 7262
0022c1 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022c2 3265
0022c3 203e
0022c4 4241
0022c5 524f      	.DB  0x65,0x32,0x3E,0x20,0x41,0x42,0x4F,0x52
0022c6 3a54
0022c7 7320
0022c8 6e65
0022c9 6f73      	.DB  0x54,0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F
0022ca 2072
0022cb 6863
0022cc 2520
0022cd 2064      	.DB  0x72,0x20,0x63,0x68,0x20,0x25,0x64,0x20
0022ce 6f4e
0022cf 7320
0022d0 7465
0022d1 7020      	.DB  0x4E,0x6F,0x20,0x73,0x65,0x74,0x20,0x70
0022d2 696f
0022d3 746e
0022d4 6620
0022d5 756f      	.DB  0x6F,0x69,0x6E,0x74,0x20,0x66,0x6F,0x75
0022d6 646e
0022d7 0a0d
0022d8 3c00
0022d9 6573      	.DB  0x6E,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0022da 736e
0022db 726f
0022dc 6143
0022dd 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
0022de 7262
0022df 7461
0022e0 3265
0022e1 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
0022e2 2d2d
0022e3 4320
0022e4 4c41
0022e5 455f      	.DB  0x2D,0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45
0022e6 5458
0022e7 464f
0022e8 5346
0022e9 5445      	.DB  0x58,0x54,0x4F,0x46,0x46,0x53,0x45,0x54
0022ea 2d20
0022eb 0d2d
0022ec 000a
0022ed 733c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73
0022ee 6e65
0022ef 6f73
0022f0 4372
0022f1 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
0022f2 6269
0022f3 6172
0022f4 6574
0022f5 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
0022f6 2d20
0022f7 432d
0022f8 2d2d
0022f9 203e      	.DB  0x20,0x2D,0x2D,0x43,0x2D,0x2D,0x3E,0x20
0022fa 6625
0022fb 0a0d
0022fc 3c00
0022fd 6573      	.DB  0x25,0x66,0xD,0xA,0x0,0x3C,0x73,0x65
0022fe 736e
0022ff 726f
002300 6143
002301 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
002302 7262
002303 7461
002304 3265
002305 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
002306 2d2d
002307 4320
002308 4c41
002309 455f      	.DB  0x2D,0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45
00230a 5458
00230b 494c
00230c 454e
00230d 5241      	.DB  0x58,0x54,0x4C,0x49,0x4E,0x45,0x41,0x52
00230e 2d20
00230f 0d2d
002310 000a
002311 733c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73
002312 6e65
002313 6f73
002314 4372
002315 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
002316 6269
002317 6172
002318 6574
002319 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
00231a 2d20
00231b 422d
00231c 2d2d
00231d 203e      	.DB  0x20,0x2D,0x2D,0x42,0x2D,0x2D,0x3E,0x20
00231e 6625
00231f 0a0d
002320 3c00
002321 6573      	.DB  0x25,0x66,0xD,0xA,0x0,0x3C,0x73,0x65
002322 736e
002323 726f
002324 6143
002325 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
002326 7262
002327 7461
002328 3265
002329 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
00232a 2d2d
00232b 4320
00232c 4c41
00232d 455f      	.DB  0x2D,0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45
00232e 5458
00232f 4f50
002330 594c
002331 4f4e      	.DB  0x58,0x54,0x50,0x4F,0x4C,0x59,0x4E,0x4F
002332 494d
002333 4c41
002334 2d20
002335 0d2d      	.DB  0x4D,0x49,0x41,0x4C,0x20,0x2D,0x2D,0xD
002336 000a
002337 733c
002338 6e65
002339 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
00233a 4372
00233b 6c61
00233c 6269
00233d 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
00233e 6574
00233f 3e32
002340 2d20
002341 412d      	.DB  0x74,0x65,0x32,0x3E,0x20,0x2D,0x2D,0x41
002342 2d2d
002343 203e
002344 6625
002345 0a0d      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x66,0xD,0xA
002346 3c00
002347 6573
002348 736e
002349 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00234a 6547
00234b 4374
00234c 7275
00234d 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
00234e 746e
00234f 6553
002350 5074
002351 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
002352 746e
002353 203e
002354 6574
002355 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
002356 6552
002357 3166
002358 3d20
002359 5b20      	.DB  0x52,0x65,0x66,0x31,0x20,0x3D,0x20,0x5B
00235a 6625
00235b 5b5d
00235c 6625
00235d 0d5d      	.DB  0x25,0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD
00235e 000a
00235f 733c
002360 6e65
002361 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
002362 4772
002363 7465
002364 7543
002365 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
002366 6e65
002367 5374
002368 7465
002369 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
00236a 6e69
00236b 3e74
00236c 7420
00236d 6d65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D
00236e 5270
00236f 6665
002370 2031
002371 6f6e      	.DB  0x70,0x52,0x65,0x66,0x31,0x20,0x6E,0x6F
002372 2074
002373 6573
002374 2074
002375 305b      	.DB  0x74,0x20,0x73,0x65,0x74,0x20,0x5B,0x30
002376 302e
002377 5d30
002378 0a0d
002379 3000      	.DB  0x2E,0x30,0x30,0x5D,0xD,0xA,0x0,0x30
00237a 302e
00237b 0030
00237c 733c
00237d 6e65      	.DB  0x2E,0x30,0x30,0x0,0x3C,0x73,0x65,0x6E
00237e 6f73
00237f 4772
002380 7465
002381 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
002382 7272
002383 6e65
002384 5374
002385 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
002386 6f50
002387 6e69
002388 3e74
002389 7420      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74
00238a 6d65
00238b 5270
00238c 6665
00238d 2032      	.DB  0x65,0x6D,0x70,0x52,0x65,0x66,0x32,0x20
00238e 203d
00238f 255b
002390 5d66
002391 255b      	.DB  0x3D,0x20,0x5B,0x25,0x66,0x5D,0x5B,0x25
002392 5d66
002393 0a0d
002394 3c00
002395 6573      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
002396 736e
002397 726f
002398 6547
002399 4374      	.DB  0x6E,0x73,0x6F,0x72,0x47,0x65,0x74,0x43
00239a 7275
00239b 6572
00239c 746e
00239d 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
00239e 5074
00239f 696f
0023a0 746e
0023a1 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0023a2 6574
0023a3 706d
0023a4 6552
0023a5 3266      	.DB  0x74,0x65,0x6D,0x70,0x52,0x65,0x66,0x32
0023a6 6e20
0023a7 746f
0023a8 7320
0023a9 7465      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x73,0x65,0x74
0023aa 5b20
0023ab 2e30
0023ac 3030
0023ad 0d5d      	.DB  0x20,0x5B,0x30,0x2E,0x30,0x30,0x5D,0xD
0023ae 000a
0023af 733c
0023b0 6e65
0023b1 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0023b2 4772
0023b3 7465
0023b4 7543
0023b5 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
0023b6 6e65
0023b7 5374
0023b8 7465
0023b9 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
0023ba 6e69
0023bb 3e74
0023bc 7420
0023bd 6d65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D
0023be 5270
0023bf 6665
0023c0 2033
0023c1 203d      	.DB  0x70,0x52,0x65,0x66,0x33,0x20,0x3D,0x20
0023c2 255b
0023c3 5d66
0023c4 255b
0023c5 5d66      	.DB  0x5B,0x25,0x66,0x5D,0x5B,0x25,0x66,0x5D
0023c6 0a0d
0023c7 3c00
0023c8 6573
0023c9 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
0023ca 726f
0023cb 6547
0023cc 4374
0023cd 7275      	.DB  0x6F,0x72,0x47,0x65,0x74,0x43,0x75,0x72
0023ce 6572
0023cf 746e
0023d0 6553
0023d1 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
0023d2 696f
0023d3 746e
0023d4 203e
0023d5 6574      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74,0x65
0023d6 706d
0023d7 6552
0023d8 3366
0023d9 6e20      	.DB  0x6D,0x70,0x52,0x65,0x66,0x33,0x20,0x6E
0023da 746f
0023db 7320
0023dc 7465
0023dd 5b20      	.DB  0x6F,0x74,0x20,0x73,0x65,0x74,0x20,0x5B
0023de 2e30
0023df 3030
0023e0 0d5d
0023e1 000a      	.DB  0x30,0x2E,0x30,0x30,0x5D,0xD,0xA,0x0
0023e2 733c
0023e3 6e65
0023e4 6f73
0023e5 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
0023e6 7465
0023e7 7543
0023e8 7272
0023e9 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
0023ea 5374
0023eb 7465
0023ec 6f50
0023ed 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
0023ee 3e74
0023ef 6920
0023f0 766e
0023f1 6c61      	.DB  0x74,0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C
0023f2 6469
0023f3 7020
0023f4 7261
0023f5 6d61      	.DB  0x69,0x64,0x20,0x70,0x61,0x72,0x61,0x6D
0023f6 6574
0023f7 2072
0023f8 6e70
0023f9 2d74      	.DB  0x74,0x65,0x72,0x20,0x70,0x6E,0x74,0x2D
0023fa 5b3e
0023fb 6425
0023fc 0d5d
0023fd 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
0023fe 733c
0023ff 6e65
002400 6f73
002401 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
002402 7465
002403 7543
002404 7272
002405 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
002406 5374
002407 7465
002408 6f50
002409 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
00240a 3e74
00240b 7220
00240c 6165
00240d 2064      	.DB  0x74,0x3E,0x20,0x72,0x65,0x61,0x64,0x20
00240e 6176
00240f 286c
002410 6425
002411 2029      	.DB  0x76,0x61,0x6C,0x28,0x25,0x64,0x29,0x20
002412 203d
002413 255b
002414 5d73
002415 0a0d      	.DB  0x3D,0x20,0x5B,0x25,0x73,0x5D,0xD,0xA
002416 3c00
002417 6573
002418 736e
002419 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00241a 6547
00241b 4374
00241c 7275
00241d 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
00241e 746e
00241f 6553
002420 5074
002421 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
002422 746e
002423 203e
002424 756f
002425 2074      	.DB  0x6E,0x74,0x3E,0x20,0x6F,0x75,0x74,0x20
002426 666f
002427 6320
002428 6e6f
002429 6964      	.DB  0x6F,0x66,0x20,0x63,0x6F,0x6E,0x64,0x69
00242a 6974
00242b 6e6f
00242c 7620
00242d 6c61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x76,0x61,0x6C
00242e 7453
00242f 2072
002430 203d
002431 2527      	.DB  0x53,0x74,0x72,0x20,0x3D,0x20,0x27,0x25
002432 2773
002433 3c00
002434 6573
002435 736e      	.DB  0x73,0x27,0x0,0x3C,0x73,0x65,0x6E,0x73
002436 726f
002437 6547
002438 4374
002439 7275      	.DB  0x6F,0x72,0x47,0x65,0x74,0x43,0x75,0x72
00243a 6572
00243b 746e
00243c 6553
00243d 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
00243e 696f
00243f 746e
002440 203e
002441 7562      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x62,0x75
002442 2066
002443 6572
002444 6461
002445 5b00      	.DB  0x66,0x20,0x72,0x65,0x61,0x64,0x0,0x5B
002446 6425
002447 005d
002448 733c
002449 6e65      	.DB  0x25,0x64,0x5D,0x0,0x3C,0x73,0x65,0x6E
00244a 6f73
00244b 5372
00244c 7465
00244d 7543      	.DB  0x73,0x6F,0x72,0x53,0x65,0x74,0x43,0x75
00244e 7272
00244f 6e65
002450 5374
002451 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
002452 6f50
002453 6e69
002454 3e74
002455 4120      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x41
002456 4f42
002457 5452
002458 203a
002459 6573      	.DB  0x42,0x4F,0x52,0x54,0x3A,0x20,0x73,0x65
00245a 736e
00245b 726f
00245c 6320
00245d 2068      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x63,0x68,0x20
00245e 6425
00245f 6920
002460 2073
002461 6964      	.DB  0x25,0x64,0x20,0x69,0x73,0x20,0x64,0x69
002462 6173
002463 6c62
002464 0d65
002465 000a      	.DB  0x73,0x61,0x62,0x6C,0x65,0xD,0xA,0x0
002466 733c
002467 6e65
002468 6f73
002469 5372      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
00246a 7465
00246b 7543
00246c 7272
00246d 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
00246e 5374
00246f 7465
002470 6f50
002471 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
002472 3e74
002473 4120
002474 4f42
002475 5452      	.DB  0x74,0x3E,0x20,0x41,0x42,0x4F,0x52,0x54
002476 203a
002477 6573
002478 736e
002479 726f      	.DB  0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
00247a 6320
00247b 2068
00247c 6425
00247d 6520      	.DB  0x20,0x63,0x68,0x20,0x25,0x64,0x20,0x65
00247e 7272
00247f 726f
002480 3028
002481 2578      	.DB  0x72,0x72,0x6F,0x72,0x28,0x30,0x78,0x25
002482 3230
002483 2958
002484 0a0d
002485 3c00      	.DB  0x30,0x32,0x58,0x29,0xD,0xA,0x0,0x3C
002486 6573
002487 736e
002488 726f
002489 6553      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x53,0x65
00248a 4374
00248b 7275
00248c 6572
00248d 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
00248e 6553
00248f 5074
002490 696f
002491 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
002492 203e
002493 7562
002494 3a66
002495 5b20      	.DB  0x3E,0x20,0x62,0x75,0x66,0x3A,0x20,0x5B
002496 6425
002497 2f5d
002498 255b
002499 5d64      	.DB  0x25,0x64,0x5D,0x2F,0x5B,0x25,0x64,0x5D
00249a 255b
00249b 5d64
00249c 255b
00249d 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
00249e 255b
00249f 5d64
0024a0 255b
0024a1 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
0024a2 0a0d
0024a3 3c00
0024a4 6573
0024a5 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
0024a6 726f
0024a7 6553
0024a8 4374
0024a9 7275      	.DB  0x6F,0x72,0x53,0x65,0x74,0x43,0x75,0x72
0024aa 6572
0024ab 746e
0024ac 6553
0024ad 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
0024ae 696f
0024af 746e
0024b0 203e
0024b1 6573      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x73,0x65
0024b2 736e
0024b3 726f
0024b4 2520
0024b5 6431      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x25,0x31,0x64
0024b6 202c
0024b7 6f70
0024b8 6e69
0024b9 2074      	.DB  0x2C,0x20,0x70,0x6F,0x69,0x6E,0x74,0x20
0024ba 3125
0024bb 2c64
0024bc 7320
0024bd 7465      	.DB  0x25,0x31,0x64,0x2C,0x20,0x73,0x65,0x74
0024be 7420
0024bf 206f
0024c0 255b
0024c1 5d66      	.DB  0x20,0x74,0x6F,0x20,0x5B,0x25,0x66,0x5D
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3576): warning: .cseg .db misalignment - padding zero byte
0024c2 0000      	.DB  0x0
                 _0x1C0005:
0024c3 0000
0024c4 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
0024c5 ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
0024c6 ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3584): warning: .cseg .db misalignment - padding zero byte
0024c7 00ff      	.DB  0xFF
                 _0x1E003A:
0024c8 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
0024c9 753c
0024ca 6470
0024cb 7461
0024cc 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
0024cd 6d6f
0024ce 536d
0024cf 6174
0024d0 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
0024d1 3e73
0024d2 4c20
0024d3 736f
0024d4 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0024d5 6d69
0024d6 7265
0024d7 7420
0024d8 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0024d9 2065
0024da 656c
0024db 7466
0024dc 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0024dd 2520
0024de 646c
0024df 2528
0024e0 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0024e1 0d29
0024e2 000a
0024e3 753c
0024e4 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0024e5 7461
0024e6 4365
0024e7 6d6f
0024e8 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
0024e9 6174
0024ea 7574
0024eb 3e73
0024ec 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
0024ed 7265
0024ee 6576
0024ef 2072
0024f0 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
0024f1 6e77
0024f2 2121
0024f3 0d21
0024f4 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
0024f5 753c
0024f6 6470
0024f7 7461
0024f8 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
0024f9 6d6f
0024fa 536d
0024fb 6174
0024fc 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
0024fd 3e73
0024fe 5320
0024ff 7265
002500 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
002501 2072
002502 7055
002503 2121
002504 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
002505 000a
002506 633c
002507 6568
002508 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
002509 7250
00250a 626f
00250b 4165
00250c 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
00250d 6d72
00250e 203e
00250f 6573
002510 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
002511 726f
002512 6320
002513 6168
002514 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
002515 6c65
002516 6f20
002517 7475
002518 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
002519 2066
00251a 6172
00251b 676e
00251c 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
00251d 2528
00251e 2964
00251f 0a0d
002520 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
002521 7075
002522 6164
002523 6574
002524 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
002525 6174
002526 7453
002527 7461
002528 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
002529 203e
00252a 4241
00252b 524f
00252c 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
00252d 7320
00252e 6e65
00252f 6f73
002530 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
002531 6863
002532 6e61
002533 656e
002534 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
002535 756f
002536 2074
002537 666f
002538 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
002539 6e61
00253a 6567
00253b 2820
00253c 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
00253d 0d29
00253e 000a
00253f 753c
002540 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
002541 7461
002542 4465
002543 6e69
002544 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
002545 7461
002546 7375
002547 203e
002548 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
002549 6e61
00254a 656e
00254b 5b6c
00254c 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
00254d 205d
00254e 756f
00254f 2074
002550 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
002551 7220
002552 6e61
002553 6567
002554 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
002555 3c00
002556 6567
002557 4474
002558 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
002559 6369
00255a 5365
00255b 6174
00255c 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
00255d 203e
00255e 7473
00255f 7461
002560 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
002561 203d
002562 305b
002563 2578
002564 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
002565 5d58
002566 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3627): warning: .cseg .db misalignment - padding zero byte
002567 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
002568 ffff
002569 ffff
00256a ffff
00256b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00256c ffff
00256d ffff
00256e ffff
00256f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
002570 ffff
002571 ffff
002572 ffff
002573 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002574 ffff
002575 ffff
002576 ffff
002577 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3635): warning: .cseg .db misalignment - padding zero byte
002578 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3637): warning: .cseg .db misalignment - padding zero byte
002579 0069      	.DB  0x69
                 _0x2200C5:
00257a 6969      	.DB  0x69,0x69
                 _0x2200CF:
00257b 6969
00257c 6969
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3641): warning: .cseg .db misalignment - padding zero byte
00257d 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
00257e ffff
00257f ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3645): warning: .cseg .db misalignment - padding zero byte
002580 00ff      	.DB  0xFF
                 _0x220000:
002581 633c
002582 6568
002583 6b63
002584 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
002585 7261
002586 466d
002587 6f72
002588 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
002589 6372
00258a 203e
00258b 5347
00258c 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
00258d 6f4e
00258e 2074
00258f 7573
002590 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
002591 726f
002592 2074
002593 6579
002594 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
002595 305b
002596 2578
002597 3230
002598 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002599 0a0d
00259a 3c00
00259b 6863
00259c 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
00259d 416b
00259e 616c
00259f 6d72
0025a0 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
0025a1 6d6f
0025a2 7253
0025a3 3e63
0025a4 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
0025a5 616c
0025a6 6d72
0025a7 7253
0025a8 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
0025a9 6e75
0025aa 6e6b
0025ab 776f
0025ac 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
0025ad 305b
0025ae 2578
0025af 3230
0025b0 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0025b1 0a0d
0025b2 3c00
0025b3 6863
0025b4 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025b5 536b
0025b6 6e65
0025b7 4464
0025b8 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
0025b9 6c41
0025ba 7261
0025bb 3e6d
0025bc 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
0025bd 6168
0025be 6e6e
0025bf 6c65
0025c0 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
0025c1 7475
0025c2 6f20
0025c3 2066
0025c4 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
0025c5 676e
0025c6 2065
0025c7 255b
0025c8 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
0025c9 0a0d
0025ca 3c00
0025cb 6863
0025cc 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025cd 536b
0025ce 6e65
0025cf 4464
0025d0 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
0025d1 4161
0025d2 616c
0025d3 6d72
0025d4 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
0025d5 7250
0025d6 626f
0025d7 2065
0025d8 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
0025d9 6420
0025da 7461
0025db 4161
0025dc 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
0025dd 6d72
0025de 305b
0025df 2578
0025e0 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
0025e1 5d58
0025e2 0a0d
0025e3 3c00
0025e4 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
0025e5 5241
0025e6 5f4d
0025e7 6863
0025e8 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
0025e9 4d6b
0025ea 7475
0025eb 4565
0025ec 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
0025ed 7269
0025ee 6465
0025ef 203e
0025f0 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
0025f1 6176
0025f2 696c
0025f3 2064
0025f4 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
0025f5 6574
0025f6 6f4d
0025f7 6564
0025f8 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
0025f9 6425
0025fa 0d29
0025fb 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
0025fc 5444
0025fd 3025
0025fe 6432
0025ff 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
002600 3230
002601 2d64
002602 3025
002603 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
002604 5400
002605 254d
002606 3230
002607 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
002608 3025
002609 6432
00260a 4400
00260b 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
00260c 6431
00260d 2e25
00260e 6631
00260f 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
002610 2556
002611 6431
002612 5245
002613 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
002614 0042
002615 5644
002616 3125
002617 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
002618 5252
002619 4255
00261a 4400
00261b 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
00261c 6431
00261d 5245
00261e 4e52
00261f 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
002620 5644
002621 3125
002622 4564
002623 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
002624 4853
002625 4400
002626 2556
002627 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
002628 4544
002629 4554
00262a 5443
00262b 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
00262c 0047
00262d 4f3c
00262e 454c
00262f 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
002630 6873
002631 776f
002632 6553
002633 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
002634 726f
002635 6156
002636 756c
002637 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
002638 7320
002639 6e65
00263a 6f73
00263b 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
00263c 6425
00263d 2e5d
00263e 7473
00263f 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
002640 7375
002641 7520
002642 6b6e
002643 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
002644 6e77
002645 5b20
002646 7830
002647 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
002648 5832
002649 0d5d
00264a 000a
00264b 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
00264c 3125
00264d 4e64
00264e 412f
00264f 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
002650 3147
002651 4200
002652 304c
002653 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
002654 314c
002655 4200
002656 324c
002657 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
002658 334c
002659 4200
00265a 344c
00265b 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
00265c 4c4f
00265d 4445
00265e 735f
00265f 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
002660 4977
002661 706e
002662 7475
002663 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
002664 7461
002665 7375
002666 203e
002667 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
002668 3a52
002669 6320
00266a 2068
00266b 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
00266c 756c
00266d 2065
00266e 756f
00266f 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
002670 666f
002671 7220
002672 6e61
002673 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
002674 212e
002675 0d21
002676 000a
002677 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
002678 3125
002679 2564
00267a 6431
00267b 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
00267c 4c4f
00267d 4445
00267e 735f
00267f 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
002680 4f77
002681 7475
002682 7570
002683 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
002684 6174
002685 7574
002686 3e73
002687 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
002688 5252
002689 203a
00268a 6863
00268b 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
00268c 6c61
00268d 6575
00268e 6f20
00268f 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
002690 6f20
002691 2066
002692 6172
002693 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
002694 2e65
002695 2121
002696 0a0d
002697 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
002698 2550
002699 6431
00269a 3125
00269b 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
00269c 4353
00269d 3125
00269e 0064
00269f 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
0026a0 3125
0026a1 0064
0026a2 5a42
0026a3 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
0026a4 0064
0026a5 534d
0026a6 3125
0026a7 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
0026a8 4c41
0026a9 3125
0026aa 2564
0026ab 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
0026ac 3125
0026ad 2564
0026ae 6431
0026af 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
0026b0 2564
0026b1 6431
0026b2 3125
0026b3 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
0026b4 6431
0026b5 3125
0026b6 2564
0026b7 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
0026b8 3125
0026b9 2564
0026ba 6431
0026bb 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
0026bc 210a
0026bd 2121
0026be 2021
0026bf 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
0026c0 4445
0026c1 4520
0026c2 7272
0026c3 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
0026c4 2120
0026c5 2121
0026c6 0d21
0026c7 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
0026c8 6e49
0026c9 7469
0026ca 6169
0026cb 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0026cc 697a
0026cd 676e
0026ce 4f20
0026cf 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
0026d0 2e44
0026d1 202e
0026d2 4f00
0026d3 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
0026d4 000a      	.DB  0xA,0x0
                 _0x260003:
0026d5 3a30
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3735): warning: .cseg .db misalignment - padding zero byte
0026d6 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
0026d7 4600
0026d8 5f52
0026d9 4944
0026da 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
0026db 455f
0026dc 5252
0026dd 4600
0026de 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
0026df 4e49
0026e0 5f54
0026e1 5245
0026e2 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
0026e3 5246
0026e4 4e5f
0026e5 544f
0026e6 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
0026e7 4145
0026e8 5944
0026e9 4600
0026ea 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
0026eb 4f4e
0026ec 465f
0026ed 4c49
0026ee 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
0026ef 5246
0026f0 4e5f
0026f1 5f4f
0026f2 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
0026f3 4854
0026f4 4600
0026f5 5f52
0026f6 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
0026f7 4156
0026f8 494c
0026f9 5f44
0026fa 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
0026fb 454d
0026fc 4600
0026fd 5f52
0026fe 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
0026ff 494e
002700 4445
002701 4600
002702 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
002703 5845
002704 5349
002705 0054
002706 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
002707 495f
002708 564e
002709 4c41
00270a 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
00270b 4f5f
00270c 4a42
00270d 4345
00270e 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
00270f 5246
002710 575f
002711 4952
002712 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
002713 505f
002714 4f52
002715 4554
002716 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
002717 4445
002718 4600
002719 5f52
00271a 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
00271b 4156
00271c 494c
00271d 5f44
00271e 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
00271f 5649
002720 0045
002721 5246
002722 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
002723 544f
002724 455f
002725 414e
002726 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
002727 4445
002728 4600
002729 5f52
00272a 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
00272b 465f
00272c 4c49
00272d 5345
00272e 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
00272f 4554
002730 004d
002731 5246
002732 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
002733 464b
002734 5f53
002735 4241
002736 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
002737 4554
002738 0044
002739 5246
00273a 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
00273b 4d49
00273c 4f45
00273d 5455
00273e 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
00273f 5245
002740 3e52
002741 2520
002742 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
002743 0a0d
002744 3c00
002745 4453
002746 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
002747 6972
002748 6574
002749 6144
00274a 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
00274b 203e
00274c 4453
00274d 4320
00274e 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
00274f 2064
002750 6f6e
002751 2074
002752 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
002753 6461
002754 0d79
002755 000a
002756 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
002757 5f44
002758 7277
002759 7469
00275a 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00275b 7461
00275c 3e61
00275d 6620
00275e 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
00275f 6573
002760 6b65
002761 2528
002762 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
002763 6620
002764 6961
002765 656c
002766 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
002767 0d21
002768 000a
002769 533c
00276a 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
00276b 7277
00276c 7469
00276d 4465
00276e 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
00276f 3e61
002770 6620
002771 775f
002772 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
002773 6574
002774 2928
002775 6620
002776 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002777 656c
002778 0d64
002779 000a
00277a 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
00277b 5f44
00277c 7277
00277d 7469
00277e 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00277f 7461
002780 3e61
002781 6120
002782 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
002783 6175
002784 5f6c
002785 7277
002786 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
002787 5b65
002788 7525
002789 205d
00278a 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
00278b 6c20
00278c 6e65
00278d 255b
00278e 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
00278f 0a0d
002790 3c00
002791 4453
002792 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
002793 6165
002794 4464
002795 7461
002796 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
002797 5320
002798 2044
002799 6143
00279a 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
00279b 6e20
00279c 746f
00279d 7220
00279e 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
00279f 7964
0027a0 0a0d
0027a1 3c00
0027a2 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
0027a3 725f
0027a4 6165
0027a5 4464
0027a6 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0027a7 3e61
0027a8 6620
0027a9 6c5f
0027aa 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
0027ab 6b65
0027ac 2528
0027ad 2975
0027ae 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
0027af 6961
0027b0 656c
0027b1 2164
0027b2 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
0027b3 000a
0027b4 533c
0027b5 5f44
0027b6 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
0027b7 6461
0027b8 6144
0027b9 6174
0027ba 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
0027bb 5f66
0027bc 6572
0027bd 6461
0027be 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
0027bf 6620
0027c0 6961
0027c1 656c
0027c2 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0027c3 000a
0027c4 533c
0027c5 5f44
0027c6 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
0027c7 7469
0027c8 4465
0027c9 7461
0027ca 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
0027cb 6120
0027cc 7463
0027cd 6175
0027ce 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
0027cf 6572
0027d0 6461
0027d1 255b
0027d2 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
0027d3 2120
0027d4 203d
0027d5 656c
0027d6 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
0027d7 7525
0027d8 0d5d
0027d9 000a
0027da 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
0027db 5f44
0027dc 6572
0027dd 6461
0027de 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
0027df 6f6d
0027e0 7972
0027e1 6552
0027e2 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
0027e3 6e69
0027e4 203e
0027e5 5f66
0027e6 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
0027e7 6674
0027e8 6572
0027e9 2865
0027ea 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
0027eb 2029
0027ec 7265
0027ed 6f72
0027ee 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
0027ef 0d21
0027f0 000a
0027f1 6f4c
0027f2 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
0027f3 6163
0027f4 206c
0027f5 7264
0027f6 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
0027f7 2065
0027f8 3a30
0027f9 6d20
0027fa 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
0027fb 746e
0027fc 6465
0027fd 4520
0027fe 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
0027ff 524f
002800 0a0d
002801 4c00
002802 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
002803 6369
002804 6c61
002805 6420
002806 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
002807 6576
002808 3020
002809 203a
00280a 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
00280b 6e75
00280c 6574
00280d 2064
00280e 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
00280f 0a0d
002810 4c00
002811 676f
002812 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
002813 6c61
002814 6420
002815 6972
002816 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
002817 3020
002818 203a
002819 6e75
00281a 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
00281b 6e75
00281c 6574
00281d 2064
00281e 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
00281f 4f52
002820 0d52
002821 000a
002822 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
002823 6967
002824 6163
002825 206c
002826 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
002827 7669
002828 2065
002829 3a30
00282a 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
00282b 6d6e
00282c 756f
00282d 746e
00282e 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
00282f 4f20
002830 0d4b
002831 000a
002832 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
002833 5f44
002834 6572
002835 6f6d
002836 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
002837 3e74
002838 5320
002839 5f44
00283a 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
00283b 6f6d
00283c 6e75
00283d 2874
00283e 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
00283f 6166
002840 6c69
002841 6465
002842 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002843 3c00
002844 4453
002845 725f
002846 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
002847 756f
002848 746e
002849 203e
00284a 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
00284b 6d5f
00284c 756f
00284d 746e
00284e 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
00284f 6620
002850 6961
002851 656c
002852 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002853 000a
002854 533c
002855 5f44
002856 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
002857 6165
002858 6574
002859 6946
00285a 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
00285b 203e
00285c 4453
00285d 4320
00285e 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
00285f 2064
002860 6f6e
002861 2074
002862 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
002863 6461
002864 0d79
002865 000a
002866 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
002867 7325
002868 3c00
002869 4453
00286a 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
00286b 6572
00286c 7461
00286d 4665
00286e 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
00286f 3e65
002870 6620
002871 6f5f
002872 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
002873 286e
002874 2029
002875 6166
002876 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002877 6465
002878 0a0d
002879 3c00
00287a 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
00287b 635f
00287c 6572
00287d 7461
00287e 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
00287f 6c69
002880 3e65
002881 6620
002882 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
002883 6f6c
002884 6573
002885 2928
002886 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
002887 6961
002888 656c
002889 0d64
00288a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00288b 533c
00288c 5f44
00288d 706f
00288e 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
00288f 6946
002890 656c
002891 203e
002892 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002893 4320
002894 7261
002895 2064
002896 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002897 2074
002898 6572
002899 6461
00289a 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
00289b 000a
00289c 533c
00289d 5f44
00289e 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
00289f 6e65
0028a0 6946
0028a1 656c
0028a2 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
0028a3 5f66
0028a4 706f
0028a5 6e65
0028a6 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
0028a7 5b20
0028a8 7325
0028a9 205d
0028aa 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
0028ab 6c69
0028ac 6465
0028ad 0a0d
0028ae 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0028af 4453
0028b0 635f
0028b1 6f6c
0028b2 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
0028b3 6946
0028b4 656c
0028b5 203e
0028b6 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0028b7 4320
0028b8 7261
0028b9 2064
0028ba 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
0028bb 2074
0028bc 6572
0028bd 6461
0028be 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
0028bf 000a
0028c0 533c
0028c1 5f44
0028c2 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
0028c3 736f
0028c4 4665
0028c5 6c69
0028c6 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
0028c7 6620
0028c8 635f
0028c9 6f6c
0028ca 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
0028cb 2928
0028cc 6620
0028cd 6961
0028ce 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0028cf 0d64
0028d0 000a
0028d1 533c
0028d2 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
0028d3 6e69
0028d4 7469
0028d5 203e
0028d6 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
0028d7 7261
0028d8 2074
0028d9 6e69
0028da 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
0028db 6169
0028dc 206c
0028dd 656d
0028de 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
0028df 7972
0028e0 6320
0028e1 7261
0028e2 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
0028e3 000a
0028e4 0a0d
0028e5 533c
0028e6 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
0028e7 6e69
0028e8 7469
0028e9 203e
0028ea 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
0028eb 6e75
0028ec 6974
0028ed 676e
0028ee 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
0028ef 2044
0028f0 6143
0028f1 6472
0028f2 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
0028f3 002e
0028f4 533c
0028f5 5f44
0028f6 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
0028f7 7469
0028f8 203e
0028f9 4453
0028fa 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
0028fb 756f
0028fc 746e
0028fd 2928
0028fe 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
0028ff 6961
002900 656c
002901 0d64
002902 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002903 0a0d
002904 533c
002905 5f44
002906 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
002907 7469
002908 203e
002909 6843
00290a 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
00290b 206b
00290c 6143
00290d 6472
00290e 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
00290f 7a69
002910 2e65
002911 2e2e
002912 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
002913 4453
002914 695f
002915 696e
002916 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
002917 5320
002918 5f44
002919 6572
00291a 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
00291b 654d
00291c 6f6d
00291d 7972
00291e 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
00291f 616d
002920 6e69
002921 2928
002922 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
002923 6961
002924 656c
002925 0d64
002926 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002927 533c
002928 5f44
002929 6e69
00292a 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
00292b 203e
00292c 7246
00292d 6565
00292e 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
00292f 6170
002930 6563
002931 6f20
002932 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
002933 6f6c
002934 6967
002935 6163
002936 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
002937 7264
002938 7669
002939 2065
00293a 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
00293b 2520
00293c 756c
00293d 6b20
00293e 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
00293f 6574
002940 0d73
002941 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
002942 6164
002943 6174
002944 6c2e
002945 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
002946 7665
002947 6e65
002948 2e74
002949 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3896): warning: .cseg .db misalignment - padding zero byte
00294a 0067      	.DB  0x67
                 _0x280005:
00294b 7265
00294c 6f72
00294d 2e72
00294e 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3899): warning: .cseg .db misalignment - padding zero byte
00294f 0067      	.DB  0x67
                 _0x280006:
002950 0000
002951 0000
002952 0000
002953 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002954 ffff
002955 ffff
002956 ffff
002957 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
002958 8175
002959 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
00295a 81b4
00295b 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
00295c 4c3c
00295d 474f
00295e 695f
00295f 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
002960 7265
002961 4474
002962 7461
002963 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
002964 4c20
002965 474f
002966 675f
002967 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002968 614c
002969 7473
00296a 6e49
00296b 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
00296c 7472
00296d 2928
00296e 6620
00296f 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
002970 656c
002971 0d64
002972 000a
002973 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002974 474f
002975 695f
002976 736e
002977 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002978 4474
002979 7461
00297a 3e61
00297b 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
00297c 5f44
00297d 7277
00297e 7469
00297f 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002980 7461
002981 2861
002982 6c66
002983 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002984 2029
002985 6166
002986 6c69
002987 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002988 0a0d
002989 3c00
00298a 4f4c
00298b 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
00298c 6e69
00298d 6573
00298e 7472
00298f 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002990 6174
002991 203e
002992 4453
002993 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
002994 6972
002995 6574
002996 6144
002997 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002998 7428
002999 6d69
00299a 7365
00299b 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
00299c 706d
00299d 2029
00299e 6166
00299f 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
0029a0 6465
0029a1 0a0d
0029a2 3c00
0029a3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029a4 5f47
0029a5 6e69
0029a6 6573
0029a7 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0029a8 6144
0029a9 6174
0029aa 203e
0029ab 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0029ac 775f
0029ad 6972
0029ae 6574
0029af 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0029b0 6174
0029b1 6328
0029b2 6168
0029b3 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
0029b4 6c65
0029b5 2029
0029b6 6166
0029b7 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
0029b8 6465
0029b9 0a0d
0029ba 3c00
0029bb 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029bc 5f47
0029bd 6e69
0029be 6573
0029bf 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0029c0 6144
0029c1 6174
0029c2 203e
0029c3 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0029c4 775f
0029c5 6972
0029c6 6574
0029c7 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0029c8 6174
0029c9 7628
0029ca 6c61
0029cb 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
0029cc 2029
0029cd 6166
0029ce 6c69
0029cf 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0029d0 0a0d
0029d1 3c00
0029d2 4f4c
0029d3 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0029d4 6e69
0029d5 6573
0029d6 7472
0029d7 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
0029d8 6174
0029d9 203e
0029da 4f4c
0029db 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0029dc 6573
0029dd 4c74
0029de 7361
0029df 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
0029e0 736e
0029e1 7265
0029e2 2874
0029e3 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
0029e4 2964
0029e5 6620
0029e6 6961
0029e7 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0029e8 0d64
0029e9 000a
0029ea 4c3c
0029eb 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0029ec 725f
0029ed 6165
0029ee 4464
0029ef 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0029f0 3e61
0029f1 4c20
0029f2 474f
0029f3 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
0029f4 7465
0029f5 614c
0029f6 7473
0029f7 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
0029f8 6573
0029f9 7472
0029fa 2928
0029fb 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
0029fc 6961
0029fd 656c
0029fe 0d64
0029ff 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002a00 4c3c
002a01 474f
002a02 725f
002a03 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002a04 4464
002a05 7461
002a06 3e61
002a07 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
002a08 474f
002a09 675f
002a0a 7465
002a0b 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
002a0c 7473
002a0d 6553
002a0e 646e
002a0f 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
002a10 6620
002a11 6961
002a12 656c
002a13 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002a14 000a
002a15 4c3c
002a16 474f
002a17 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
002a18 6165
002a19 4564
002a1a 6576
002a1b 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
002a1c 203e
002a1d 616c
002a1e 7473
002a1f 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
002a20 646e
002a21 6c2f
002a22 7361
002a23 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
002a24 736e
002a25 7265
002a26 2074
002a27 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
002a28 3e2d
002a29 2520
002a2a 646c
002a2b 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
002a2c 646c
002a2d 0a0d
002a2e 3c00
002a2f 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a30 5f47
002a31 6572
002a32 6461
002a33 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a34 6174
002a35 203e
002a36 6f4c
002a37 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
002a38 6d65
002a39 7470
002a3a 2e79
002a3b 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002a3c 0d21
002a3d 000a
002a3e 443c
002a3f 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
002a40 4755
002a41 435f
002a42 656c
002a43 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
002a44 6f4c
002a45 4667
002a46 6c69
002a47 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
002a48 4c20
002a49 474f
002a4a 635f
002a4b 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
002a4c 7461
002a4d 4665
002a4e 6c69
002a4f 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002a50 7325
002a51 2029
002a52 6166
002a53 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002a54 6465
002a55 0a0d
002a56 3c00
002a57 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a58 5f47
002a59 6572
002a5a 6461
002a5b 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a5c 6174
002a5d 203e
002a5e 4453
002a5f 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
002a60 6165
002a61 4464
002a62 7461
002a63 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002a64 6c66
002a65 6761
002a66 2029
002a67 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002a68 6c69
002a69 6465
002a6a 0a0d
002a6b 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002a6c 4f4c
002a6d 5f47
002a6e 6572
002a6f 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002a70 6144
002a71 6174
002a72 203e
002a73 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a74 725f
002a75 6165
002a76 4464
002a77 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a78 2861
002a79 6974
002a7a 656d
002a7b 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a7c 6d61
002a7d 2970
002a7e 6620
002a7f 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a80 656c
002a81 0d64
002a82 000a
002a83 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a84 474f
002a85 725f
002a86 6165
002a87 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002a88 7461
002a89 3e61
002a8a 5320
002a8b 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002a8c 6572
002a8d 6461
002a8e 6144
002a8f 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a90 6328
002a91 6168
002a92 6e6e
002a93 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
002a94 2029
002a95 6166
002a96 6c69
002a97 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a98 0a0d
002a99 3c00
002a9a 4f4c
002a9b 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a9c 6572
002a9d 6461
002a9e 6144
002a9f 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002aa0 203e
002aa1 4453
002aa2 725f
002aa3 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002aa4 4464
002aa5 7461
002aa6 2861
002aa7 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002aa8 756c
002aa9 2965
002aaa 6620
002aab 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002aac 656c
002aad 0d64
002aae 000a
002aaf 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002ab0 474f
002ab1 695f
002ab2 736e
002ab3 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002ab4 4574
002ab5 6576
002ab6 746e
002ab7 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002ab8 4f4c
002ab9 5f47
002aba 6567
002abb 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002abc 7361
002abd 4974
002abe 736e
002abf 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002ac0 2874
002ac1 2029
002ac2 6166
002ac3 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002ac4 6465
002ac5 0a0d
002ac6 3c00
002ac7 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002ac8 5f47
002ac9 6e69
002aca 6573
002acb 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002acc 7645
002acd 6e65
002ace 3e74
002acf 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002ad0 5f44
002ad1 7277
002ad2 7469
002ad3 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002ad4 7461
002ad5 2861
002ad6 6c66
002ad7 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002ad8 2029
002ad9 6166
002ada 6c69
002adb 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002adc 0a0d
002add 3c00
002ade 4f4c
002adf 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002ae0 6e69
002ae1 6573
002ae2 7472
002ae3 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
002ae4 6e65
002ae5 3e74
002ae6 5320
002ae7 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002ae8 7277
002ae9 7469
002aea 4465
002aeb 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002aec 2861
002aed 6974
002aee 656d
002aef 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002af0 6d61
002af1 2970
002af2 6620
002af3 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002af4 656c
002af5 0d64
002af6 000a
002af7 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002af8 474f
002af9 695f
002afa 736e
002afb 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002afc 4574
002afd 6576
002afe 746e
002aff 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002b00 4453
002b01 775f
002b02 6972
002b03 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
002b04 6144
002b05 6174
002b06 6928
002b07 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002b08 6620
002b09 6961
002b0a 656c
002b0b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b0c 000a
002b0d 4c3c
002b0e 474f
002b0f 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b10 736e
002b11 7265
002b12 4574
002b13 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b14 746e
002b15 203e
002b16 4453
002b17 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002b18 6972
002b19 6574
002b1a 6144
002b1b 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002b1c 7328
002b1d 6174
002b1e 7574
002b1f 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002b20 6620
002b21 6961
002b22 656c
002b23 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b24 000a
002b25 4c3c
002b26 474f
002b27 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b28 736e
002b29 7265
002b2a 4574
002b2b 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b2c 746e
002b2d 203e
002b2e 4f4c
002b2f 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b30 6573
002b31 4c74
002b32 7361
002b33 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b34 736e
002b35 7265
002b36 2874
002b37 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002b38 2964
002b39 6620
002b3a 6961
002b3b 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b3c 0d64
002b3d 000a
002b3e 4c3c
002b3f 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b40 725f
002b41 6165
002b42 4564
002b43 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b44 746e
002b45 203e
002b46 4f4c
002b47 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b48 6567
002b49 4c74
002b4a 7361
002b4b 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b4c 736e
002b4d 7265
002b4e 2874
002b4f 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002b50 6166
002b51 6c69
002b52 6465
002b53 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002b54 3c00
002b55 4f4c
002b56 5f47
002b57 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002b58 6461
002b59 7645
002b5a 6e65
002b5b 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002b5c 4c20
002b5d 474f
002b5e 675f
002b5f 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002b60 614c
002b61 7473
002b62 6553
002b63 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002b64 2928
002b65 6620
002b66 6961
002b67 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b68 0d64
002b69 000a
002b6a 4c3c
002b6b 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b6c 725f
002b6d 6165
002b6e 4564
002b6f 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b70 746e
002b71 203e
002b72 6f4c
002b73 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
002b74 6d65
002b75 7470
002b76 2e79
002b77 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002b78 0d21
002b79 000a
002b7a 4c3c
002b7b 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b7c 725f
002b7d 6165
002b7e 4564
002b7f 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b80 746e
002b81 203e
002b82 4453
002b83 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002b84 6165
002b85 4464
002b86 7461
002b87 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002b88 6c66
002b89 6761
002b8a 2029
002b8b 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002b8c 6c69
002b8d 6465
002b8e 0a0d
002b8f 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002b90 4f4c
002b91 5f47
002b92 6572
002b93 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002b94 7645
002b95 6e65
002b96 3e74
002b97 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b98 5f44
002b99 6572
002b9a 6461
002b9b 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002b9c 6174
002b9d 7428
002b9e 6d69
002b9f 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002ba0 6174
002ba1 706d
002ba2 2029
002ba3 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
002ba4 6c69
002ba5 6465
002ba6 0a0d
002ba7 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002ba8 4f4c
002ba9 5f47
002baa 6572
002bab 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002bac 7645
002bad 6e65
002bae 3e74
002baf 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002bb0 5f44
002bb1 6572
002bb2 6461
002bb3 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002bb4 6174
002bb5 6928
002bb6 2964
002bb7 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002bb8 6961
002bb9 656c
002bba 0d64
002bbb 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002bbc 4c3c
002bbd 474f
002bbe 725f
002bbf 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002bc0 4564
002bc1 6576
002bc2 746e
002bc3 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002bc4 4453
002bc5 725f
002bc6 6165
002bc7 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002bc8 7461
002bc9 2861
002bca 7473
002bcb 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002bcc 7375
002bcd 2029
002bce 6166
002bcf 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002bd0 6465
002bd1 0a0d
002bd2 3c00
002bd3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002bd4 5f47
002bd5 6567
002bd6 4c74
002bd7 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002bd8 4974
002bd9 736e
002bda 7265
002bdb 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002bdc 5320
002bdd 5f44
002bde 6572
002bdf 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002be0 6144
002be1 6174
002be2 2928
002be3 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002be4 6961
002be5 656c
002be6 0d64
002be7 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002be8 4c3c
002be9 474f
002bea 675f
002beb 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002bec 614c
002bed 7473
002bee 6e49
002bef 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002bf0 7472
002bf1 203e
002bf2 6f67
002bf3 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002bf4 6c25
002bf5 0d64
002bf6 000a
002bf7 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002bf8 474f
002bf9 735f
002bfa 7465
002bfb 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002bfc 7473
002bfd 6e49
002bfe 6573
002bff 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002c00 203e
002c01 7277
002c02 7469
002c03 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c04 2067
002c05 6c25
002c06 0d64
002c07 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c08 4c3c
002c09 474f
002c0a 735f
002c0b 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c0c 614c
002c0d 7473
002c0e 6e49
002c0f 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002c10 7472
002c11 203e
002c12 4453
002c13 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002c14 6165
002c15 4464
002c16 7461
002c17 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002c18 2029
002c19 6166
002c1a 6c69
002c1b 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002c1c 0a0d
002c1d 3c00
002c1e 4f4c
002c1f 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002c20 6567
002c21 4c74
002c22 7361
002c23 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002c24 6e65
002c25 3e64
002c26 5320
002c27 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002c28 6572
002c29 6461
002c2a 6144
002c2b 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002c2c 2928
002c2d 6620
002c2e 6961
002c2f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002c30 0d64
002c31 000a
002c32 4c3c
002c33 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002c34 675f
002c35 7465
002c36 614c
002c37 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002c38 6553
002c39 646e
002c3a 203e
002c3b 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002c3c 2074
002c3d 6c25
002c3e 0d64
002c3f 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c40 4c3c
002c41 474f
002c42 735f
002c43 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c44 614c
002c45 7473
002c46 6553
002c47 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002c48 203e
002c49 7277
002c4a 7469
002c4b 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c4c 2067
002c4d 6c25
002c4e 0d64
002c4f 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c50 4c3c
002c51 474f
002c52 735f
002c53 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c54 614c
002c55 7473
002c56 6553
002c57 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002c58 203e
002c59 4453
002c5a 725f
002c5b 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002c5c 4464
002c5d 7461
002c5e 2861
002c5f 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002c60 6166
002c61 6c69
002c62 6465
002c63 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c64 3c00
002c65 4f4c
002c66 5f47
002c67 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c68 6165
002c69 6574
002c6a 6946
002c6b 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c6c 203e
002c6d 4453
002c6e 635f
002c6f 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002c70 7461
002c71 4665
002c72 6c69
002c73 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002c74 7325
002c75 2029
002c76 6166
002c77 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002c78 6465
002c79 0a0d
002c7a 3c00
002c7b 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c7c 5f47
002c7d 7263
002c7e 6165
002c7f 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c80 6946
002c81 656c
002c82 203e
002c83 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002c84 6120
002c85 726c
002c86 6165
002c87 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002c88 6520
002c89 6978
002c8a 7473
002c8b 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002c8c 3c00
002c8d 4f4c
002c8e 5f47
002c8f 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c90 6165
002c91 6574
002c92 6946
002c93 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c94 203e
002c95 7325
002c96 6320
002c97 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002c98 7461
002c99 6465
002c9a 0a0d
002c9b 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002c9c 4f4c
002c9d 5f47
002c9e 7263
002c9f 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002ca0 6574
002ca1 6946
002ca2 656c
002ca3 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002ca4 7325
002ca5 6320
002ca6 6e6f
002ca7 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002ca8 6e69
002ca9 6465
002caa 6e20
002cab 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002cac 6e69
002cad 7469
002cae 6169
002caf 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002cb0 6164
002cb1 6174
002cb2 0a0d
002cb3 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002cb4 4f4c
002cb5 5f47
002cb6 7263
002cb7 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002cb8 6574
002cb9 6946
002cba 656c
002cbb 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002cbc 4453
002cbd 6f5f
002cbe 6570
002cbf 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002cc0 6c69
002cc1 2865
002cc2 7325
002cc3 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002cc4 6166
002cc5 6c69
002cc6 6465
002cc7 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002cc8 3c00
002cc9 4f4c
002cca 5f47
002ccb 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002ccc 6165
002ccd 6574
002cce 6946
002ccf 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002cd0 203e
002cd1 7277
002cd2 7469
002cd3 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002cd4 2067
002cd5 6e69
002cd6 7469
002cd7 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002cd8 206c
002cd9 6164
002cda 6174
002cdb 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002cdc 3c00
002cdd 4f4c
002cde 5f47
002cdf 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002ce0 6165
002ce1 6574
002ce2 6946
002ce3 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002ce4 203e
002ce5 4453
002ce6 775f
002ce7 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002ce8 6574
002ce9 6144
002cea 6174
002ceb 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002cec 6620
002ced 6961
002cee 656c
002cef 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002cf0 7257
002cf1 7469
002cf2 6e69
002cf3 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002cf4 202e
002cf5 0a0d
002cf6 3c00
002cf7 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002cf8 5f47
002cf9 7263
002cfa 6165
002cfb 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002cfc 6946
002cfd 656c
002cfe 203e
002cff 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002d00 635f
002d01 6f6c
002d02 6573
002d03 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002d04 656c
002d05 2928
002d06 6620
002d07 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002d08 656c
002d09 0d64
002d0a 000a
002d0b 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002d0c 474f
002d0d 695f
002d0e 696e
002d0f 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002d10 4920
002d11 696e
002d12 6974
002d13 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002d14 6c20
002d15 676f
002d16 6620
002d17 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002d18 0d65
002d19 000a
002d1a 4c3c
002d1b 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002d1c 695f
002d1d 696e
002d1e 3e74
002d1f 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002d20 474f
002d21 635f
002d22 6572
002d23 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002d24 4665
002d25 6c69
002d26 2865
002d27 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002d28 2029
002d29 6166
002d2a 6c69
002d2b 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002d2c 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4152): warning: .cseg .db misalignment - padding zero byte
002d2d 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002d2e 0a0d
002d2f 0a0d
002d30 613c
002d31 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002d32 6144
002d33 6174
002d34 6f4c
002d35 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002d36 6575
002d37 6575
002d38 203e
002d39 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002d3a 4e52
002d3b 4e49
002d3c 2047
002d3d 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002d3e 6164
002d3f 6174
002d40 6f4c
002d41 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002d42 6575
002d43 6575
002d44 4620
002d45 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002d46 0d4c
002d47 0d0a
002d48 000a
002d49 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002d4a 613c
002d4b 6464
002d4c 6144
002d4d 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002d4e 6f4c
002d4f 5167
002d50 6575
002d51 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d52 203e
002d53 2020
002d54 2020
002d55 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d56 2020
002d57 2020
002d58 2020
002d59 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d5a 2020
002d5b 2020
002d5c 2020
002d5d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d5e 2020
002d5f 2020
002d60 6441
002d61 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002d62 2064
002d63 2528
002d64 3230
002d65 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002d66 7420
002d67 206f
002d68 6164
002d69 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002d6a 6f4c
002d6b 5167
002d6c 6575
002d6d 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d6e 255b
002d6f 5d64
002d70 4320
002d71 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002d72 746e
002d73 3d20
002d74 2520
002d75 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002d76 000a
002d77 723c
002d78 6165
002d79 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d7a 7461
002d7b 4c61
002d7c 676f
002d7d 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d7e 7565
002d7f 3e65
002d80 5720
002d81 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d82 3a4e
002d83 6420
002d84 7461
002d85 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002d86 676f
002d87 7551
002d88 7565
002d89 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002d8a 6d65
002d8b 7470
002d8c 2179
002d8d 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002d8e 000a
002d8f 723c
002d90 6165
002d91 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d92 7461
002d93 4c61
002d94 676f
002d95 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d96 7565
002d97 3e65
002d98 5720
002d99 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d9a 3a4e
002d9b 6e20
002d9c 746f
002d9d 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002d9e 756f
002d9f 646e
002da0 6920
002da1 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002da2 7830
002da3 3025
002da4 5832
002da5 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002da6 6e69
002da7 6420
002da8 7461
002da9 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002daa 676f
002dab 7551
002dac 7565
002dad 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002dae 000a
002daf 0a0d
002db0 723c
002db1 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002db2 766f
002db3 4465
002db4 7461
002db5 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002db6 676f
002db7 7551
002db8 7565
002db9 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002dba 2020
002dbb 2020
002dbc 2020
002dbd 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dbe 2020
002dbf 2020
002dc0 2020
002dc1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc2 2020
002dc3 2020
002dc4 2020
002dc5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc6 6552
002dc7 6f6d
002dc8 6576
002dc9 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002dca 2528
002dcb 3230
002dcc 2958
002dcd 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002dce 6f72
002dcf 206d
002dd0 6164
002dd1 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002dd2 6f4c
002dd3 5167
002dd4 6575
002dd5 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002dd6 255b
002dd7 5d64
002dd8 0a0d
002dd9 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002dda 6572
002ddb 6f6d
002ddc 6576
002ddd 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002dde 6174
002ddf 6f4c
002de0 5167
002de1 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002de2 6575
002de3 203e
002de4 4157
002de5 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002de6 203a
002de7 6f6e
002de8 2074
002de9 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002dea 6e75
002deb 2064
002dec 6469
002ded 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002dee 2578
002def 3230
002df0 5d58
002df1 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002df2 206e
002df3 6164
002df4 6174
002df5 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002df6 5167
002df7 6575
002df8 6575
002df9 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002dfa 0d00
002dfb 0d0a
002dfc 3c0a
002dfd 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002dfe 4564
002dff 6576
002e00 746e
002e01 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e02 5167
002e03 6575
002e04 6575
002e05 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002e06 4157
002e07 4e52
002e08 4e49
002e09 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002e0a 203a
002e0b 7665
002e0c 6e65
002e0d 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e0e 676f
002e0f 7551
002e10 7565
002e11 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002e12 5546
002e13 4c4c
002e14 0a0d
002e15 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002e16 0d00
002e17 3c0a
002e18 6461
002e19 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002e1a 6576
002e1b 746e
002e1c 6f4c
002e1d 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e1e 6575
002e1f 6575
002e20 203e
002e21 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002e22 2020
002e23 2020
002e24 2020
002e25 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e26 2020
002e27 2020
002e28 2020
002e29 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e2a 2020
002e2b 2020
002e2c 2020
002e2d 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002e2e 6564
002e2f 2064
002e30 2528
002e31 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002e32 2958
002e33 7420
002e34 206f
002e35 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002e36 6e65
002e37 4c74
002e38 676f
002e39 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002e3a 7565
002e3b 5b65
002e3c 6425
002e3d 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002e3e 6f43
002e3f 6e75
002e40 2074
002e41 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002e42 6425
002e43 0a0d
002e44 3c00
002e45 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002e46 6461
002e47 7645
002e48 6e65
002e49 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002e4a 676f
002e4b 7551
002e4c 7565
002e4d 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e4e 5720
002e4f 5241
002e50 3a4e
002e51 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002e52 6576
002e53 746e
002e54 6f4c
002e55 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e56 6575
002e57 6575
002e58 6520
002e59 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002e5a 7974
002e5b 2121
002e5c 0a0d
002e5d 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002e5e 6572
002e5f 6461
002e60 7645
002e61 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002e62 4c74
002e63 676f
002e64 7551
002e65 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002e66 3e65
002e67 5720
002e68 5241
002e69 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002e6a 6e20
002e6b 746f
002e6c 6620
002e6d 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002e6e 646e
002e6f 6920
002e70 5b64
002e71 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002e72 3025
002e73 5832
002e74 205d
002e75 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002e76 6520
002e77 6576
002e78 746e
002e79 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e7a 5167
002e7b 6575
002e7c 6575
002e7d 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e7e 0d00
002e7f 3c0a
002e80 6572
002e81 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002e82 6576
002e83 7645
002e84 6e65
002e85 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002e86 676f
002e87 7551
002e88 7565
002e89 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e8a 2020
002e8b 2020
002e8c 2020
002e8d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e8e 2020
002e8f 2020
002e90 2020
002e91 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e92 2020
002e93 2020
002e94 2020
002e95 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002e96 6f6d
002e97 6576
002e98 2064
002e99 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002e9a 3230
002e9b 2958
002e9c 6620
002e9d 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002e9e 206d
002e9f 7665
002ea0 6e65
002ea1 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002ea2 676f
002ea3 7551
002ea4 7565
002ea5 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002ea6 6425
002ea7 0d5d
002ea8 000a
002ea9 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002eaa 6d65
002eab 766f
002eac 4565
002ead 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002eae 746e
002eaf 6f4c
002eb0 5167
002eb1 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002eb2 6575
002eb3 203e
002eb4 4157
002eb5 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002eb6 203a
002eb7 6f6e
002eb8 2074
002eb9 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002eba 6e75
002ebb 2064
002ebc 6469
002ebd 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002ebe 2578
002ebf 3230
002ec0 5d58
002ec1 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002ec2 206e
002ec3 7665
002ec4 6e65
002ec5 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002ec6 676f
002ec7 7551
002ec8 7565
002ec9 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002eca 000a      	.DB  0xA,0x0
                 _0x2C0003:
002ecb 0000
002ecc 0000
002ecd 0000
002ece 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ecf 0000
002ed0 0000
002ed1 0000
002ed2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ed3 0000
002ed4 0000
002ed5 0000
002ed6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ed7 0000
002ed8 0000
002ed9 0000
002eda 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002edb 0000
002edc 0000
002edd 0000
002ede 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002edf 0000
002ee0 0000
002ee1 0000
002ee2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ee3 0000
002ee4 0000
002ee5 0000
002ee6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ee7 0000
002ee8 0000
002ee9 0000
002eea 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eeb 0000
002eec 0000
002eed 0000
002eee 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eef 0591
002ef0 058d
002ef1 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C027A:
002ef2 0000
002ef3 0000
002ef4 0000
002ef5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ef6 0000
002ef7 0000
002ef8 0000
002ef9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002efa 0000
002efb 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002efc 314d
002efd 3125
002efe 0064
002eff 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002f00 4d00
002f01 2541
002f02 6431
002f03 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002f04 2532
002f05 6431
002f06 4d00
002f07 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002f08 6431
002f09 4d00
002f0a 2534
002f0b 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002f0c 5000
002f0d 0031
002f0e 354d
002f0f 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002f10 0064
002f11 3050
002f12 3c00
002f13 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002f14 554e
002f15 705f
002f16 6f72
002f17 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002f18 7373
002f19 654b
002f1a 3e79
002f1b 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002f1c 2550
002f1d 2c73
002f1e 7325
002f1f 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002f20 2c73
002f21 5200
002f22 6165
002f23 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002f24 6d69
002f25 2c65
002f26 4400
002f27 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002f28 6c61
002f29 676f
002f2a 6567
002f2b 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002f2c 5500
002f2d 6b6e
002f2e 6f6e
002f2f 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002f30 002c
002f31 6e45
002f32 6261
002f33 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002f34 002c
002f35 6944
002f36 6173
002f37 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002f38 2c65
002f39 3c00
002f3a 454d
002f3b 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002f3c 705f
002f3d 6f72
002f3e 6563
002f3f 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002f40 654b
002f41 3e79
002f42 5620
002f43 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002f44 0073
002f45 4d3c
002f46 4e45
002f47 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002f48 7270
002f49 636f
002f4a 7365
002f4b 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002f4c 7965
002f4d 203e
002f4e 616d
002f4f 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002f50 636f
002f51 4328
002f52 4e4f
002f53 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002f54 4552
002f55 4441
002f56 425f
002f57 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002f58 4546
002f59 2952
002f5a 6620
002f5b 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002f5c 656c
002f5d 0d64
002f5e 000a
002f5f 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002f60 4e45
002f61 5f55
002f62 7270
002f63 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f64 7365
002f65 4b73
002f66 7965
002f67 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f68 5445
002f69 5f48
002f6a 6567
002f6b 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002f6c 6e6f
002f6d 6966
002f6e 2867
002f6f 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002f70 6166
002f71 6c69
002f72 6465
002f73 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002f74 3c00
002f75 454d
002f76 554e
002f77 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f78 6f72
002f79 6563
002f7a 7373
002f7b 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f7c 3e79
002f7d 4520
002f7e 4854
002f7f 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002f80 7465
002f81 6f43
002f82 666e
002f83 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002f84 2928
002f85 7320
002f86 6375
002f87 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002f88 7373
002f89 0a0d
002f8a 0d00
002f8b 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002f8c 3c0a
002f8d 454d
002f8e 554e
002f8f 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f90 6f72
002f91 6563
002f92 7373
002f93 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f94 3e79
002f95 7220
002f96 6165
002f97 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002f98 6425
002f99 205d
002f9a 2d2d
002f9b 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002f9c 000a
002f9d 4d3c
002f9e 4e45
002f9f 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002fa0 7270
002fa1 636f
002fa2 7365
002fa3 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002fa4 7965
002fa5 203e
002fa6 6567
002fa7 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002fa8 7465
002fa9 6f77
002faa 6b72
002fab 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002fac 6f66
002fad 2928
002fae 6620
002faf 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002fb0 656c
002fb1 0d64
002fb2 000a
002fb3 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002fb4 4e45
002fb5 5f55
002fb6 7270
002fb7 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002fb8 7365
002fb9 4b73
002fba 7965
002fbb 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002fbc 4e56
002fbd 7525
002fbe 252e
002fbf 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fc0 7525
002fc1 252e
002fc2 2c75
002fc3 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002fc4 252e
002fc5 2e75
002fc6 7525
002fc7 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002fc8 2c75
002fc9 7525
002fca 252e
002fcb 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002fcc 7525
002fcd 252e
002fce 2c75
002fcf 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002fd0 252e
002fd1 2e75
002fd2 7525
002fd3 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002fd4 2c75
002fd5 0a0d
002fd6 5600
002fd7 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002fd8 2e75
002fd9 7525
002fda 252e
002fdb 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fdc 7525
002fdd 252c
002fde 2e75
002fdf 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002fe0 252e
002fe1 2e75
002fe2 7525
002fe3 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002fe4 2e75
002fe5 7525
002fe6 252e
002fe7 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fe8 7525
002fe9 252c
002fea 2e75
002feb 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002fec 252e
002fed 2e75
002fee 7525
002fef 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
002ff0 4d3c
002ff1 4e45
002ff2 5f55
002ff3 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002ff4 636f
002ff5 7365
002ff6 4b73
002ff7 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002ff8 203e
002ff9 6564
002ffa 4576
002ffb 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
002ffc 6425
002ffd 205d
002ffe 6c61
002fff 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
003000 5b6e
003001 6425
003002 005d
003003 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
003004 3125
003005 0064
003006 4445
003007 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
003008 6431
003009 4500
00300a 3344
00300b 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
00300c 0064
00300d 4953
00300e 4900
00300f 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
003010 5831
003011 3125
003012 0064
003013 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
003014 3125
003015 0064
003016 4d3c
003017 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
003018 5f55
003019 7270
00301a 636f
00301b 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00301c 4b73
00301d 7965
00301e 203e
00301f 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
003020 4576
003021 206e
003022 3e2d
003023 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
003024 2544
003025 6431
003026 3125
003027 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
003028 4d3c
003029 4e45
00302a 5f55
00302b 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
00302c 636f
00302d 7365
00302e 4b73
00302f 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
003030 203e
003031 6c61
003032 456d
003033 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
003034 3e2d
003035 4520
003036 2544
003037 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
003038 3125
003039 0064
00303a 4d3c
00303b 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
00303c 5f55
00303d 7270
00303e 636f
00303f 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003040 4b73
003041 7965
003042 203e
003043 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
003044 4f74
003045 6570
003046 6172
003047 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
003048 676e
003049 6f43
00304a 666e
00304b 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
00304c 2928
00304d 6620
00304e 6961
00304f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
003050 0d64
003051 000a
003052 4c46
003053 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
003054 0049
003055 4149
003056 3125
003057 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
003058 4d53
003059 5300
00305a 0047
00305b 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
00305c 5300
00305d 2546
00305e 2e75
00305f 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
003060 252e
003061 2e75
003062 7525
003063 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
003064 2e75
003065 7525
003066 252e
003067 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003068 7525
003069 252c
00306a 2e75
00306b 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
00306c 252e
00306d 2e75
00306e 7525
00306f 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
003070 2e75
003071 7525
003072 252e
003073 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003074 7525
003075 002c
003076 4d3c
003077 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
003078 5f55
003079 7270
00307a 636f
00307b 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00307c 4b73
00307d 7965
00307e 203e
00307f 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
003080 5f48
003081 6573
003082 4374
003083 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
003084 6966
003085 2867
003086 2029
003087 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
003088 6c69
003089 6465
00308a 0d20
00308b 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
00308c 554d
00308d 3125
00308e 0064
00308f 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
003090 3125
003091 2a64
003092 5000
003093 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
003094 6431
003095 5000
003096 0035
003097 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
003098 3125
003099 2564
00309a 6431
00309b 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
00309c 454d
00309d 554e
00309e 705f
00309f 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
0030a0 6563
0030a1 7373
0030a2 654b
0030a3 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
0030a4 6e20
0030a5 7765
0030a6 7750
0030a7 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
0030a8 2026
0030a9 6f63
0030aa 666e
0030ab 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
0030ac 2064
0030ad 6f6e
0030ae 2074
0030af 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
0030b0 6374
0030b1 0d68
0030b2 000a
0030b3 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
0030b4 5600
0030b5 2544
0030b6 6431
0030b7 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
0030b8 0064
0030b9 3153
0030ba 3125
0030bb 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
0030bc 3253
0030bd 3125
0030be 0064
0030bf 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
0030c0 4d00
0030c1 2537
0030c2 6431
0030c3 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
0030c4 2541
0030c5 6431
0030c6 5300
0030c7 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
0030c8 6431
0030c9 5000
0030ca 254e
0030cb 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
0030cc 4300
0030cd 2543
0030ce 6431
0030cf 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
0030d0 2538
0030d1 6431
0030d2 4300
0030d3 2550      	.DB  0x38,0x25,0x31,0x64,0x0,0x43,0x50,0x25
0030d4 6431
0030d5 3125
0030d6 0064
0030d7 4443      	.DB  0x31,0x64,0x25,0x31,0x64,0x0,0x43,0x44
0030d8 3125
0030d9 2564
0030da 6431
0030db 6300      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x63
0030dc 6c61
0030dd 6e50
0030de 5b74
0030df 3125      	.DB  0x61,0x6C,0x50,0x6E,0x74,0x5B,0x25,0x31
0030e0 5d64
0030e1 3d20
0030e2 2520
0030e3 6431      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x31,0x64
0030e4 0a0d
0030e5 4300
0030e6 2541
0030e7 6431      	.DB  0xD,0xA,0x0,0x43,0x41,0x25,0x31,0x64
0030e8 5700
0030e9 0050
0030ea 5350
0030eb 5000      	.DB  0x0,0x57,0x50,0x0,0x50,0x53,0x0,0x50
0030ec 0034
0030ed 455b
0030ee 005d
0030ef 445b      	.DB  0x34,0x0,0x5B,0x45,0x5D,0x0,0x5B,0x44
0030f0 005d
0030f1 6e45
0030f2 6261
0030f3 656c      	.DB  0x5D,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
0030f4 4400
0030f5 7369
0030f6 6261
0030f7 656c      	.DB  0x0,0x44,0x69,0x73,0x61,0x62,0x6C,0x65
0030f8 3c00
0030f9 6873
0030fa 776f
0030fb 7250      	.DB  0x0,0x3C,0x73,0x68,0x6F,0x77,0x50,0x72
0030fc 626f
0030fd 4365
0030fe 6e6f
0030ff 6966      	.DB  0x6F,0x62,0x65,0x43,0x6F,0x6E,0x66,0x69
003100 3e67
003101 5020
003102 2543
003103 6431      	.DB  0x67,0x3E,0x20,0x50,0x43,0x25,0x31,0x64
003104 3125
003105 2564
003106 2c64
003107 7325      	.DB  0x25,0x31,0x64,0x25,0x64,0x2C,0x25,0x73
003108 252c
003109 2c73
00310a 2e25
00310b 6631      	.DB  0x2C,0x25,0x73,0x2C,0x25,0x2E,0x31,0x66
00310c 252c
00310d 2c64
00310e 2e25
00310f 6631      	.DB  0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31,0x66
003110 252c
003111 312e
003112 2c66
003113 6425      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x2C,0x25,0x64
003114 252c
003115 312e
003116 0066
003117 0a0d      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x0,0xD,0xA
003118 673c
003119 7465
00311a 635f
00311b 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
00311c 6572
00311d 746e
00311e 735f
00311f 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
003120 6c70
003121 6e69
003122 3e67
003123 7220      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x72
003124 6165
003125 206c
003126 6176
003127 756c      	.DB  0x65,0x61,0x6C,0x20,0x76,0x61,0x6C,0x75
003128 2065
003129 2528
00312a 206c
00312b 6573      	.DB  0x65,0x20,0x28,0x25,0x6C,0x20,0x73,0x65
00312c 2e63
00312d 0d29
00312e 000a
00312f 673c      	.DB  0x63,0x2E,0x29,0xD,0xA,0x0,0x3C,0x67
003130 7465
003131 635f
003132 7275
003133 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
003134 746e
003135 735f
003136 6d61
003137 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003138 6e69
003139 3e67
00313a 2520
00313b 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
00313c 7268
00313d 0d2e
00313e 000a
00313f 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
003140 7465
003141 635f
003142 7275
003143 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
003144 746e
003145 735f
003146 6d61
003147 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003148 6e69
003149 3e67
00314a 2520
00314b 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
00314c 696d
00314d 2e6e
00314e 0a0d
00314f 3c00      	.DB  0x6D,0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C
003150 6567
003151 5f74
003152 7563
003153 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
003154 6e65
003155 5f74
003156 6173
003157 706d      	.DB  0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70
003158 696c
003159 676e
00315a 203e
00315b 6425      	.DB  0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25,0x64
00315c 7320
00315d 6365
00315e 0d2e
00315f 000a      	.DB  0x20,0x73,0x65,0x63,0x2E,0xD,0xA,0x0
003160 673c
003161 7465
003162 635f
003163 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
003164 6572
003165 746e
003166 735f
003167 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
003168 6c70
003169 6e69
00316a 3e67
00316b 2520      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25
00316c 2064
00316d 696d
00316e 2e6e
00316f 2520      	.DB  0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20,0x25
003170 2064
003171 6573
003172 2e63
003173 0020      	.DB  0x64,0x20,0x73,0x65,0x63,0x2E,0x20,0x0
003174 2d2d
003175 203e
003176 6425
003177 6d20      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20,0x6D
003178 6e69
003179 0d2e
00317a 000a
00317b 673c      	.DB  0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C,0x67
00317c 7465
00317d 635f
00317e 7275
00317f 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
003180 746e
003181 735f
003182 6d61
003183 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003184 6e69
003185 3e67
003186 2520
003187 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
003188 7268
003189 202e
00318a 6425
00318b 6d20      	.DB  0x68,0x72,0x2E,0x20,0x25,0x64,0x20,0x6D
00318c 6e69
00318d 202e
00318e 6425
00318f 7320      	.DB  0x69,0x6E,0x2E,0x20,0x25,0x64,0x20,0x73
003190 6365
003191 202e
003192 2d00
003193 3e2d      	.DB  0x65,0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E
003194 2520
003195 2064
003196 7268
003197 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
003198 000a
003199 673c
00319a 7465
00319b 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
00319c 7275
00319d 6572
00319e 746e
00319f 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
0031a0 6d61
0031a1 6c70
0031a2 6e69
0031a3 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
0031a4 4320
0031a5 6e61
0031a6 7427
0031a7 5320      	.DB  0x20,0x43,0x61,0x6E,0x27,0x74,0x20,0x53
0031a8 6f68
0031a9 2e77
0031aa 0a0d
0031ab 3c00      	.DB  0x68,0x6F,0x77,0x2E,0xD,0xA,0x0,0x3C
0031ac 6567
0031ad 5f74
0031ae 7563
0031af 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
0031b0 6e65
0031b1 5f74
0031b2 7276
0031b3 6665      	.DB  0x65,0x6E,0x74,0x5F,0x76,0x72,0x65,0x66
0031b4 203e
0031b5 7276
0031b6 6665
0031b7 2528      	.DB  0x3E,0x20,0x76,0x72,0x65,0x66,0x28,0x25
0031b8 2966
0031b9 7620
0031ba 6c61
0031bb 6d54      	.DB  0x66,0x29,0x20,0x76,0x61,0x6C,0x54,0x6D
0031bc 2070
0031bd 203d
0031be 7325
0031bf 0a0d      	.DB  0x70,0x20,0x3D,0x20,0x25,0x73,0xD,0xA
0031c0 3c00
0031c1 6567
0031c2 5f74
0031c3 7563      	.DB  0x0,0x3C,0x67,0x65,0x74,0x5F,0x63,0x75
0031c4 7272
0031c5 6e65
0031c6 5f74
0031c7 7276      	.DB  0x72,0x72,0x65,0x6E,0x74,0x5F,0x76,0x72
0031c8 6665
0031c9 203e
0031ca 7562
0031cb 2066      	.DB  0x65,0x66,0x3E,0x20,0x62,0x75,0x66,0x20
0031cc 3e2d
0031cd 0020
0031ce 255b
0031cf 5d63      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x5D
0031d0 3c00
0031d1 6567
0031d2 4e74
0031d3 7465      	.DB  0x0,0x3C,0x67,0x65,0x74,0x4E,0x65,0x74
0031d4 6f77
0031d5 6b72
0031d6 6e49
0031d7 6f66      	.DB  0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F
0031d8 203e
0031d9 494c
0031da 2050
0031db 203a      	.DB  0x3E,0x20,0x4C,0x49,0x50,0x20,0x3A,0x20
0031dc 7525
0031dd 252e
0031de 2e75
0031df 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
0031e0 252e
0031e1 0d75
0031e2 000a
0031e3 673c      	.DB  0x2E,0x25,0x75,0xD,0xA,0x0,0x3C,0x67
0031e4 7465
0031e5 654e
0031e6 7774
0031e7 726f      	.DB  0x65,0x74,0x4E,0x65,0x74,0x77,0x6F,0x72
0031e8 496b
0031e9 666e
0031ea 3e6f
0031eb 4d20      	.DB  0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4D
0031ec 4b53
0031ed 3a20
0031ee 2520
0031ef 2e75      	.DB  0x53,0x4B,0x20,0x3A,0x20,0x25,0x75,0x2E
0031f0 7525
0031f1 252e
0031f2 2e75
0031f3 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
0031f4 0a0d
0031f5 3c00
0031f6 6567
0031f7 4e74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4E
0031f8 7465
0031f9 6f77
0031fa 6b72
0031fb 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
0031fc 6f66
0031fd 203e
0031fe 4744
0031ff 2057      	.DB  0x66,0x6F,0x3E,0x20,0x44,0x47,0x57,0x20
003200 203a
003201 7525
003202 252e
003203 2e75      	.DB  0x3A,0x20,0x25,0x75,0x2E,0x25,0x75,0x2E
003204 7525
003205 252e
003206 0d75
003207 000a      	.DB  0x25,0x75,0x2E,0x25,0x75,0xD,0xA,0x0
003208 673c
003209 7465
00320a 654e
00320b 7774      	.DB  0x3C,0x67,0x65,0x74,0x4E,0x65,0x74,0x77
00320c 726f
00320d 496b
00320e 666e
00320f 3e6f      	.DB  0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E
003210 5320
003211 5049
003212 3a20
003213 2520      	.DB  0x20,0x53,0x49,0x50,0x20,0x3A,0x20,0x25
003214 2e75
003215 7525
003216 252e
003217 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003218 7525
003219 0a0d
00321a 3c00
00321b 6573      	.DB  0x25,0x75,0xD,0xA,0x0,0x3C,0x73,0x65
00321c 5f74
00321d 7276
00321e 6665
00321f 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
003220 255b
003221 5d64
003222 255b
003223 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
003224 255b
003225 5d64
003226 2d20
003227 203e      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x2D,0x3E,0x20
003228 6425
003229 2d20
00322a 203e
00322b 6625      	.DB  0x25,0x64,0x20,0x2D,0x3E,0x20,0x25,0x66
00322c 0a0d
00322d 3c00
00322e 6572
00322f 6d63      	.DB  0xD,0xA,0x0,0x3C,0x72,0x65,0x63,0x6D
003230 3e70
003231 7320
003232 6372
003233 5b31      	.DB  0x70,0x3E,0x20,0x73,0x72,0x63,0x31,0x5B
003234 3025
003235 5832
003236 205d
003237 7273      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x73,0x72
003238 3263
003239 255b
00323a 3230
00323b 5d58      	.DB  0x63,0x32,0x5B,0x25,0x30,0x32,0x58,0x5D
00323c 7520
00323d 6573
00323e 5b72
00323f 3025      	.DB  0x20,0x75,0x73,0x65,0x72,0x5B,0x25,0x30
003240 5832
003241 205d
003242 6573
003243 7672      	.DB  0x32,0x58,0x5D,0x20,0x73,0x65,0x72,0x76
003244 6369
003245 5b65
003246 3025
003247 5832      	.DB  0x69,0x63,0x65,0x5B,0x25,0x30,0x32,0x58
003248 0d5d
003249 000a      	.DB  0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4487): warning: .cseg .db misalignment - padding zero byte
00324a 0009      	.DB  0x9
                 _0x2E0000:
00324b 475b
00324c 7465
00324d 4120
00324e 4344      	.DB  0x5B,0x47,0x65,0x74,0x20,0x41,0x44,0x43
00324f 6f20
003250 2066
003251 6573
003252 736e      	.DB  0x20,0x6F,0x66,0x20,0x73,0x65,0x6E,0x73
003253 726f
003254 0d5d
003255 000a
003256 0a0d      	.DB  0x6F,0x72,0x5D,0xD,0xA,0x0,0xD,0xA
003257 443c
003258 6265
003259 6775
00325a 533e      	.DB  0x3C,0x44,0x65,0x62,0x75,0x67,0x3E,0x53
00325b 7465
00325c 6143
00325d 3a6c
00325e 0d20      	.DB  0x65,0x74,0x43,0x61,0x6C,0x3A,0x20,0xD
00325f 000a
003260 6553
003261 736e
003262 726f      	.DB  0xA,0x0,0x53,0x65,0x6E,0x73,0x6F,0x72
003263 5420
003264 7079
003265 3a65
003266 6425      	.DB  0x20,0x54,0x79,0x70,0x65,0x3A,0x25,0x64
003267 0d20
003268 000a
003269 6567
00326a 2074      	.DB  0x20,0xD,0xA,0x0,0x67,0x65,0x74,0x20
00326b 6579
00326c 7261
00326d 3d20
00326e 2520      	.DB  0x79,0x65,0x61,0x72,0x20,0x3D,0x20,0x25
00326f 0d64
003270 000a
003271 6567
003272 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
003273 6f6d
003274 746e
003275 2068
003276 203d      	.DB  0x6D,0x6F,0x6E,0x74,0x68,0x20,0x3D,0x20
003277 6425
003278 0a0d
003279 6700
00327a 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
00327b 6420
00327c 7461
00327d 2065
00327e 203d      	.DB  0x20,0x64,0x61,0x74,0x65,0x20,0x3D,0x20
00327f 6425
003280 0a0d
003281 6700
003282 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
003283 6820
003284 756f
003285 2072
003286 203d      	.DB  0x20,0x68,0x6F,0x75,0x72,0x20,0x3D,0x20
003287 6425
003288 0a0d
003289 6700
00328a 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
00328b 6d20
00328c 6e69
00328d 3d20
00328e 2520      	.DB  0x20,0x6D,0x69,0x6E,0x20,0x3D,0x20,0x25
00328f 0d64
003290 000a
003291 6567
003292 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
003293 6573
003294 2063
003295 203d
003296 6425      	.DB  0x73,0x65,0x63,0x20,0x3D,0x20,0x25,0x64
003297 0a0d
003298 6700
003299 7465
00329a 7420      	.DB  0xD,0xA,0x0,0x67,0x65,0x74,0x20,0x74
00329b 6d69
00329c 7a65
00329d 6e6f
00329e 2065      	.DB  0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65,0x20
00329f 203d
0032a0 2b25
0032a1 0d64
0032a2 000a      	.DB  0x3D,0x20,0x25,0x2B,0x64,0xD,0xA,0x0
0032a3 0a0d
0032a4 443c
0032a5 4245
0032a6 4755      	.DB  0xD,0xA,0x3C,0x44,0x45,0x42,0x55,0x47
0032a7 203e
0032a8 6c41
0032a9 7261
0032aa 206d      	.DB  0x3E,0x20,0x41,0x6C,0x61,0x72,0x6D,0x20
0032ab 7453
0032ac 7461
0032ad 7375
0032ae 5220      	.DB  0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x52
0032af 7365
0032b0 7465
0032b1 2e2e
0032b2 2121      	.DB  0x65,0x73,0x65,0x74,0x2E,0x2E,0x21,0x21
0032b3 0a0d
0032b4 3c00
0032b5 4544
0032b6 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0032b7 5f47
0032b8 6c43
0032b9 6165
0032ba 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
0032bb 676f
0032bc 6946
0032bd 656c
0032be 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
0032bf 6552
0032c0 692d
0032c1 696e
0032c2 6974      	.DB  0x52,0x65,0x2D,0x69,0x6E,0x69,0x74,0x69
0032c3 7461
0032c4 2065
0032c5 6f6c
0032c6 2067      	.DB  0x61,0x74,0x65,0x20,0x6C,0x6F,0x67,0x20
0032c7 6966
0032c8 656c
0032c9 0a0d
0032ca 3c00      	.DB  0x66,0x69,0x6C,0x65,0xD,0xA,0x0,0x3C
0032cb 4544
0032cc 5542
0032cd 5f47
0032ce 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
0032cf 6165
0032d0 4c72
0032d1 676f
0032d2 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
0032d3 656c
0032d4 203e
0032d5 4f4c
0032d6 5f47      	.DB  0x6C,0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0032d7 7263
0032d8 6165
0032d9 6574
0032da 6946      	.DB  0x63,0x72,0x65,0x61,0x74,0x65,0x46,0x69
0032db 656c
0032dc 2528
0032dd 2973
0032de 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0032df 6961
0032e0 656c
0032e1 0d64
0032e2 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0032e3 443c
0032e4 4245
0032e5 4755
0032e6 735f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x73
0032e7 7465
0032e8 6552
0032e9 6c61
0032ea 7256      	.DB  0x65,0x74,0x52,0x65,0x61,0x6C,0x56,0x72
0032eb 6665
0032ec 203e
0032ed 6567
0032ee 2074      	.DB  0x65,0x66,0x3E,0x20,0x67,0x65,0x74,0x20
0032ef 6573
0032f0 2074
0032f1 7256
0032f2 6665      	.DB  0x73,0x65,0x74,0x20,0x56,0x72,0x65,0x66
0032f3 733c
0032f4 7274
0032f5 6e69
0032f6 3e67      	.DB  0x3C,0x73,0x74,0x72,0x69,0x6E,0x67,0x3E
0032f7 2520
0032f8 0d73
0032f9 000a
0032fa 443c      	.DB  0x20,0x25,0x73,0xD,0xA,0x0,0x3C,0x44
0032fb 4245
0032fc 4755
0032fd 735f
0032fe 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
0032ff 6552
003300 6c61
003301 7256
003302 6665      	.DB  0x52,0x65,0x61,0x6C,0x56,0x72,0x65,0x66
003303 203e
003304 6641
003305 6574
003306 2072      	.DB  0x3E,0x20,0x41,0x66,0x74,0x65,0x72,0x20
003307 6f63
003308 766e
003309 7265
00330a 2074      	.DB  0x63,0x6F,0x6E,0x76,0x65,0x72,0x74,0x20
00330b 203d
00330c 6625
00330d 0a0d
00330e 3c00      	.DB  0x3D,0x20,0x25,0x66,0xD,0xA,0x0,0x3C
00330f 4544
003310 5542
003311 5f47
003312 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003313 736e
003314 726f
003315 6553
003316 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
003317 7463
003318 203e
003319 6854
00331a 7369      	.DB  0x63,0x74,0x3E,0x20,0x54,0x68,0x69,0x73
00331b 5420
00331c 4d45
00331d 5f50
00331e 4553      	.DB  0x20,0x54,0x45,0x4D,0x50,0x5F,0x53,0x45
00331f 204c
003320 6f6e
003321 2074
003322 7573      	.DB  0x4C,0x20,0x6E,0x6F,0x74,0x20,0x73,0x75
003323 7070
003324 726f
003325 0d74
003326 0d0a      	.DB  0x70,0x70,0x6F,0x72,0x74,0xD,0xA,0xD
003327 000a
003328 443c
003329 4245
00332a 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
00332b 735f
00332c 6e65
00332d 6f73
00332e 5372      	.DB  0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
00332f 6c65
003330 6365
003331 3e74
003332 4420      	.DB  0x65,0x6C,0x65,0x63,0x74,0x3E,0x20,0x44
003333 7365
003334 6c65
003335 6365
003336 2074      	.DB  0x65,0x73,0x65,0x6C,0x65,0x63,0x74,0x20
003337 6573
003338 736e
003339 726f
00333a 0a0d      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0xD,0xA
00333b 0a0d
00333c 3c00
00333d 4544
00333e 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00333f 5f47
003340 6573
003341 736e
003342 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
003343 6553
003344 656c
003345 7463
003346 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
003347 6553
003348 656c
003349 7463
00334a 6465      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x65,0x64
00334b 7320
00334c 6e65
00334d 6f73
00334e 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
00334f 6425
003350 0a0d
003351 0a0d
003352 3c00      	.DB  0x25,0x64,0xD,0xA,0xD,0xA,0x0,0x3C
003353 4544
003354 5542
003355 5f47
003356 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003357 736e
003358 726f
003359 6553
00335a 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
00335b 7463
00335c 203e
00335d 5245
00335e 4f52      	.DB  0x63,0x74,0x3E,0x20,0x45,0x52,0x52,0x4F
00335f 2052
003360 203a
003361 6553
003362 656c      	.DB  0x52,0x20,0x3A,0x20,0x53,0x65,0x6C,0x65
003363 7463
003364 6e69
003365 2067
003366 6573      	.DB  0x63,0x74,0x69,0x6E,0x67,0x20,0x73,0x65
003367 736e
003368 726f
003369 5b20
00336a 6325      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x5B,0x25,0x63
00336b 5b5d
00336c 7830
00336d 3025
00336e 5832      	.DB  0x5D,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
00336f 0d5d
003370 0d0a
003371 000a
003372 443c      	.DB  0x5D,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
003373 4245
003374 4755
003375 735f
003376 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
003377 6553
003378 6972
003379 6c61
00337a 754e      	.DB  0x53,0x65,0x72,0x69,0x61,0x6C,0x4E,0x75
00337b 626d
00337c 7265
00337d 203e
00337e 6e69      	.DB  0x6D,0x62,0x65,0x72,0x3E,0x20,0x69,0x6E
00337f 6176
003380 696c
003381 2064
003382 6573      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x73,0x65
003383 7474
003384 6e69
003385 2067
003386 7473      	.DB  0x74,0x74,0x69,0x6E,0x67,0x20,0x73,0x74
003387 6972
003388 676e
003389 2820
00338a 6325      	.DB  0x72,0x69,0x6E,0x67,0x20,0x28,0x25,0x63
00338b 5b29
00338c 7830
00338d 3025
00338e 5d32      	.DB  0x29,0x5B,0x30,0x78,0x25,0x30,0x32,0x5D
00338f 0a0d
003390 3c00
003391 4544
003392 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
003393 5f47
003394 6573
003395 5374
003396 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
003397 6169
003398 4e6c
003399 6d75
00339a 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
00339b 3e72
00339c 5220
00339d 7065
00339e 616c      	.DB  0x72,0x3E,0x20,0x52,0x65,0x70,0x6C,0x61
00339f 6963
0033a0 676e
0033a1 4420
0033a2 5645      	.DB  0x63,0x69,0x6E,0x67,0x20,0x44,0x45,0x56
0033a3 4349
0033a4 5f45
0033a5 4553
0033a6 4952      	.DB  0x49,0x43,0x45,0x5F,0x53,0x45,0x52,0x49
0033a7 4c41
0033a8 2e2e
0033a9 0a0d
0033aa 3c00      	.DB  0x41,0x4C,0x2E,0x2E,0xD,0xA,0x0,0x3C
0033ab 4544
0033ac 5542
0033ad 5f47
0033ae 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033af 5374
0033b0 7265
0033b1 6169
0033b2 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
0033b3 6d75
0033b4 6562
0033b5 3e72
0033b6 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
0033b7 7465
0033b8 5320
0033b9 7274
0033ba 6e69      	.DB  0x65,0x74,0x20,0x53,0x74,0x72,0x69,0x6E
0033bb 2067
0033bc 2d2d
0033bd 203e
0033be 5b00      	.DB  0x67,0x20,0x2D,0x2D,0x3E,0x20,0x0,0x5B
0033bf 6325
0033c0 2500
0033c1 5d63
0033c2 3c00      	.DB  0x25,0x63,0x0,0x25,0x63,0x5D,0x0,0x3C
0033c3 4544
0033c4 5542
0033c5 5f47
0033c6 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033c7 5374
0033c8 7265
0033c9 6169
0033ca 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
0033cb 6d75
0033cc 6562
0033cd 3e72
0033ce 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
0033cf 6375
0033d0 6563
0033d1 7373
0033d2 2121      	.DB  0x75,0x63,0x63,0x65,0x73,0x73,0x21,0x21
0033d3 4420
0033d4 5645
0033d5 535f
0033d6 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
0033d7 4149
0033d8 204c
0033d9 3d3d
0033da 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
0033db 5b00
0033dc 3025
0033dd 5832
0033de 005d      	.DB  0x0,0x5B,0x25,0x30,0x32,0x58,0x5D,0x0
0033df 443c
0033e0 4245
0033e1 4755
0033e2 725f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x72
0033e3 6165
0033e4 5364
0033e5 7265
0033e6 6169      	.DB  0x65,0x61,0x64,0x53,0x65,0x72,0x69,0x61
0033e7 4e6c
0033e8 6d75
0033e9 6562
0033ea 3e72      	.DB  0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72,0x3E
0033eb 4420
0033ec 5645
0033ed 535f
0033ee 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
0033ef 4149
0033f0 204c
0033f1 3d3d
0033f2 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
0033f3 4700
0033f4 7465
0033f5 4420
0033f6 6265      	.DB  0x0,0x47,0x65,0x74,0x20,0x44,0x65,0x62
0033f7 6775
0033f8 5220
0033f9 7165
0033fa 3a2e      	.DB  0x75,0x67,0x20,0x52,0x65,0x71,0x2E,0x3A
0033fb 2500
0033fc 3530
0033fd 2064
0033fe 2020      	.DB  0x0,0x25,0x30,0x35,0x64,0x20,0x20,0x20
0033ff 2500
003400 3230
003401 2078
003402 2e00      	.DB  0x0,0x25,0x30,0x32,0x78,0x20,0x0,0x2E
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4599): warning: .cseg .db misalignment - padding zero byte
003403 0000      	.DB  0x0
                 _0x300003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4601): warning: .cseg .db misalignment - padding zero byte
003404 0003      	.DB  0x3
                 _0x340003:
003405 0000
003406 c120
003407 0000
003408 c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
003409 0000
00340a c220
00340b 0000
00340c c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
00340d 0000
00340e c270
00340f 0000
003410 c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
003411 0000
003412 c2a0
003413 0000
003414 c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
003415 0000
003416 c2f0
003417 0000
003418 c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
003419 0000
00341a c30c
00341b 0000
00341c c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
00341d 0000
00341e c320
00341f 0000
003420 c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
003421 0000
003422 c348
003423 8312
003424 bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
003425 8937
003426 be41
003427 0000
003428 bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
003429 0000
00342a bec0
00342b 4fdf
00342c bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
00342d 1062
00342e bf38
00342f 1062
003430 bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
003431 4189
003432 bf60
003433 b021
003434 bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
003435 b021
003436 bf82
003437 74bc
003438 bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
003439 6e98
00343a bfa2
00343b 6e98
00343c bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
00343d 5c29
00343e bfaf
00343f 1cac
003440 bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
003441 0000
003442 c348
003443 0000
003444 c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
003445 0000
003446 c2c8
003447 1cac
003448 bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
003449 6e98
00344a bfa2
00344b 4189
00344c bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
00344d 0000
00344e c2c8
00344f 0000
003450 c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
003451 0000
003452 c120
003453 4189
003454 bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
003455 4fdf
003456 bf0d
003457 8312
003458 bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
003459 0000
00345a 0000
00345b 0000
00345c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00345d 0000
00345e 0000
00345f 0000
003460 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003461 0000
003462 0000
003463 6042
003464 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
003465 0000
003466 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x34001B:
003467 0000
003468 0000
003469 0000
00346a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00346b 6042
00346c 3fd5
00346d 0000
00346e 0000      	.DB  0x42,0x60,0xD5,0x3F,0x0,0x0,0x0,0x0
                 _0x34001C:
00346f 0000
003470 0000
003471 0000
003472 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003473 1cac
003474 3e5a
003475 6042
003476 3fd5      	.DB  0xAC,0x1C,0x5A,0x3E,0x42,0x60,0xD5,0x3F
003477 0000
003478 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x34001D:
003479 0000
00347a c120
00347b 0000
00347c c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
00347d 0000
00347e c220
00347f 0000
003480 c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
003481 0000
003482 c270
003483 0000
003484 c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
003485 0000
003486 c2a0
003487 0000
003488 c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
003489 0000
00348a c2f0
00348b 0000
00348c c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
00348d 0000
00348e c30c
00348f 0000
003490 c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
003491 0000
003492 c320
003493 0000
003494 c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
003495 0000
003496 c348
003497 8312
003498 bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
003499 8937
00349a be41
00349b 0000
00349c bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
00349d 0000
00349e bec0
00349f 4fdf
0034a0 bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
0034a1 1062
0034a2 bf38
0034a3 1062
0034a4 bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
0034a5 4189
0034a6 bf60
0034a7 b021
0034a8 bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
0034a9 b021
0034aa bf82
0034ab 74bc
0034ac bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
0034ad 6e98
0034ae bfa2
0034af 6e98
0034b0 bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
0034b1 5c29
0034b2 bfaf
0034b3 1cac
0034b4 bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
0034b5 0000
0034b6 c348
0034b7 0000
0034b8 c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
0034b9 0000
0034ba c2c8
0034bb 1cac
0034bc bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
0034bd 6e98
0034be bfa2
0034bf 4189
0034c0 bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
0034c1 0000
0034c2 c2c8
0034c3 0000
0034c4 c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
0034c5 0000
0034c6 c120
0034c7 4189
0034c8 bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
0034c9 4fdf
0034ca bf0d
0034cb 8312
0034cc bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
0034cd 0000
0034ce 0000
0034cf 0000
0034d0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034d1 0000
0034d2 0000
0034d3 0000
0034d4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034d5 0000
0034d6 0000
0034d7 6042
0034d8 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
0034d9 0000
0034da 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2000060:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4662): warning: .cseg .db misalignment - padding zero byte
0034db 0001      	.DB  0x1
                 _0x2000000:
0034dc 4e2d
0034dd 4e41
0034de 4900
0034df 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4665): warning: .cseg .db misalignment - padding zero byte
0034e0 0000      	.DB  0x0
                 _0x2040003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4667): warning: .cseg .db misalignment - padding zero byte
0034e1 0001      	.DB  0x1
                 _0x2080000:
0034e2 4e2d
0034e3 4e41
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4669): warning: .cseg .db misalignment - padding zero byte
0034e4 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
0034e5 0004      	.DW  0x04
0034e6 1d8a      	.DW  0x1D8A
0034e7 0206 0000 	.DD  __HEAP_START_MARKER*2
                 
0034e9 0004      	.DW  0x04
0034ea 14e0      	.DW  _ETH_rst_timer_S0000001000
0034eb 0248 0000 	.DD  _0xA5*2
                 
0034ed 002b      	.DW  0x2B
0034ee 0cf0      	.DW  _0x40009
0034ef 10b2 0000 	.DD  _0x40000*2
                 
0034f1 0026      	.DW  0x26
0034f2 0d1b      	.DW  _0x40009+43
0034f3 10dd 0000 	.DD  _0x40000*2+43
                 
0034f5 002b      	.DW  0x2B
0034f6 0d41      	.DW  _0x40009+81
0034f7 10b2 0000 	.DD  _0x40000*2
                 
0034f9 0002      	.DW  0x02
0034fa 1434      	.DW  _d_out
0034fb 118a 0000 	.DD  _0x80003*2
                 
0034fd 0001      	.DW  0x01
0034fe 10f6      	.DW  _is_properties_config_update
0034ff 12f4 0000 	.DD  _0xE0003*2
                 
003501 0001      	.DW  0x01
003502 10f7      	.DW  _is_operating_config_update
003503 12f6 0000 	.DD  _0xE0004*2
                 
003505 0005      	.DW  0x05
003506 10f8      	.DW  _is_sensor_config_update
003507 12f8 0000 	.DD  _0xE0005*2
                 
003509 0010      	.DW  0x10
00350a 10fd      	.DW  _is_din_config_update
00350b 12fe 0000 	.DD  _0xE0006*2
                 
00350d 0005      	.DW  0x05
00350e 110d      	.DW  _is_dout_config_update
00350f 130e 0000 	.DD  _0xE0007*2
                 
003511 0001      	.DW  0x01
003512 1112      	.DW  _is_buzzer_config_update
003513 1314 0000 	.DD  _0xE0008*2
                 
003515 0001      	.DW  0x01
003516 1113      	.DW  _is_status_config_update
003517 1316 0000 	.DD  _0xE0009*2
                 
003519 0001      	.DW  0x01
00351a 1114      	.DW  _is_env_config_update
00351b 1318 0000 	.DD  _0xE000A*2
                 
00351d 0002      	.DW  0x02
00351e 0d6c      	.DW  _0x1200D0
00351f 3278 0000 	.DD  _0x120000*2+4850
                 
003521 0003      	.DW  0x03
003522 0007      	.DW  0x07
003523 42fe 0000 	.DD  _0x18001D*2
                 
003525 0005      	.DW  0x05
003526 1564      	.DW  _lastCheck_S00D0004000
003527 443a 0000 	.DD  _0x1A0021*2
                 
003529 0004      	.DW  0x04
00352a 000a      	.DW  0x0A
00352b 4986 0000 	.DD  _0x1C0005*2
                 
00352d 0002      	.DW  0x02
00352e 147c      	.DW  _dinStatus
00352f 498a 0000 	.DD  _0x1E0003*2
                 
003531 0002      	.DW  0x02
003532 147e      	.DW  _doutStatus
003533 498c 0000 	.DD  _0x1E0004*2
                 
003535 0001      	.DW  0x01
003536 1480      	.DW  _serverCommStatus
003537 498e 0000 	.DD  _0x1E0005*2
                 
003539 0002      	.DW  0x02
00353a 1600      	.DW  _lastDinCheck_S00F0006000
00353b 4990 0000 	.DD  _0x1E003A*2
                 
00353d 0010      	.DW  0x10
00353e 1496      	.DW  _dinAlarm
00353f 4ad0 0000 	.DD  _0x220003*2
                 
003541 0010      	.DW  0x10
003542 1682      	.DW  _ainAlarm
003543 4ae0 0000 	.DD  _0x220004*2
                 
003545 0001      	.DW  0x01
003546 169c      	.DW  _lastCheck_S0110003000
003547 4af0 0000 	.DD  _0x2200A8*2
                 
003549 0001      	.DW  0x01
00354a 16a2      	.DW  _lastCheck_S0110004000
00354b 4af2 0000 	.DD  _0x2200B1*2
                 
00354d 0002      	.DW  0x02
00354e 16b2      	.DW  _lastCheck_S0110006000
00354f 4af4 0000 	.DD  _0x2200C5*2
                 
003551 0005      	.DW  0x05
003552 16cd      	.DW  _lastCheck_S0110007000
003553 4af6 0000 	.DD  _0x2200CF*2
                 
003555 0004      	.DW  0x04
003556 1487      	.DW  _muteAlarmExpired
003557 4afc 0000 	.DD  _0x2200DD*2
                 
003559 0001      	.DW  0x01
00355a 0006      	.DW  0x06
00355b 4b00 0000 	.DD  _0x2200F6*2
                 
00355d 0003      	.DW  0x03
00355e 191f      	.DW  _root_path
00355f 4daa 0000 	.DD  _0x260003*2
                 
003561 0008      	.DW  0x08
003562 14a8      	.DW  _LOGFILE_DATA
003563 5284 0000 	.DD  _0x280003*2
                 
003565 0009      	.DW  0x09
003566 14b1      	.DW  _LOGFILE_EVENT
003567 528c 0000 	.DD  _0x280004*2
                 
003569 0009      	.DW  0x09
00356a 14bb      	.DW  _LOGFILE_ERROR
00356b 5296 0000 	.DD  _0x280005*2
                 
00356d 0010      	.DW  0x10
00356e 14c5      	.DW  _LOG_INIT_STR
00356f 52a0 0000 	.DD  _0x280006*2
                 
003571 0004      	.DW  0x04
003572 14d5      	.DW  _LOG_openFile
003573 52b0 0000 	.DD  _0x280007*2
                 
003575 0004      	.DW  0x04
003576 14d9      	.DW  _LOG_closeFile
003577 52b4 0000 	.DD  _0x280008*2
                 
003579 0001      	.DW  0x01
00357a 10f4      	.DW  _hwCalId
00357b 6494 0000 	.DD  _0x2E0003*2
                 
00357d 0001      	.DW  0x01
00357e 1a71      	.DW  _n
00357f 6808 0000 	.DD  _0x300003*2
                 
003581 0001      	.DW  0x01
003582 1aa9      	.DW  __seed_G100
003583 69b6 0000 	.DD  _0x2000060*2
                 
003585 0001      	.DW  0x01
003586 1aad      	.DW  _status_G102
003587 69c2 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
003589 0000      	.DW  0
                 
                 __RESET:
00358a 94f8      	CLI
00358b 27ee      	CLR  R30
00358c bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00358d e0f1      	LDI  R31,1
00358e bff5      	OUT  MCUCR,R31
00358f bfe5      	OUT  MCUCR,R30
003590 93e0 0074 	STS  XMCRA,R30
003592 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
003594 e1f8      	LDI  R31,0x18
003595 95a8      	WDR
003596 b7a4      	IN   R26,MCUSR
003597 7fa7      	CBR  R26,8
003598 bfa4      	OUT  MCUSR,R26
003599 93f0 0060 	STS  WDTCSR,R31
00359b 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00359d e08d      	LDI  R24,(14-2)+1
00359e e0a2      	LDI  R26,2
00359f 27bb      	CLR  R27
                 __CLEAR_REG:
0035a0 93ed      	ST   X+,R30
0035a1 958a      	DEC  R24
0035a2 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0035a3 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0035a4 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0035a5 e0a0      	LDI  R26,LOW(__SRAM_START)
0035a6 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0035a7 93ed      	ST   X+,R30
0035a8 9701      	SBIW R24,1
0035a9 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0035aa ecea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0035ab e6f9      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
0035ac e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0035ad bfdb      	OUT  RAMPZ,R29
0035ae 9187      	ELPM R24,Z+
0035af 9197      	ELPM R25,Z+
0035b0 9700      	SBIW R24,0
0035b1 f081      	BREQ __GLOBAL_INI_END
0035b2 91a7      	ELPM R26,Z+
0035b3 91b7      	ELPM R27,Z+
0035b4 9007      	ELPM R0,Z+
0035b5 9017      	ELPM R1,Z+
0035b6 91c7      	ELPM R28,Z+
0035b7 91d7      	ELPM R29,Z+
0035b8 01bf      	MOVW R22,R30
0035b9 b7db      	IN   R29,RAMPZ
0035ba 01f0      	MOVW R30,R0
0035bb bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
0035bc 9007      	ELPM R0,Z+
0035bd 920d      	ST   X+,R0
0035be 9701      	SBIW R24,1
0035bf f7e1      	BRNE __GLOBAL_INI_LOOP
0035c0 01fb      	MOVW R30,R22
0035c1 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0035c2 e0e0      	LDI  R30,__GPIOR0_INIT
0035c3 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0035c4 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0035c5 bfed      	OUT  SPL,R30
0035c6 e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0035c7 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0035c8 efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0035c9 e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0035ca 940c 35cc 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;#include "smoothFilter.h"
                 ;#include "ad595.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;//#include <interrupt.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0034 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;
                 ;
                 ;//void SIG_OUTPUT_COMPARE1A( void ) __attribute__ ( (naked) );
                 ;//	void SIG_OUTPUT_COMPARE1A( void )
                 ;//	{
                 ;//		//vPortYieldFromTick();
                 ;//		//asm volatile ( "reti" );
                 ;//	}
                 ;
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 004D {
                 
                 	.CSEG
                 _main:
                 ; 0000 004E     int                     err,i=0,k=0,res,last_status;
                 ; 0000 004F 
                 ; 0000 0050     TIMER                   sensor_report_timer[5];
                 ; 0000 0051     TIMER                   status_report_timer;
                 ; 0000 0052     TIMER                   check_reset_timer;
                 ; 0000 0053     TIMER                   check_memory_timer;
                 ; 0000 0054     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 0055     TIMER                   readSensorTimer = 0;
                 ; 0000 0056     unsigned long int       timestamp_rd;
                 ; 0000 0057 
                 ; 0000 0058     char                    key_press = 0;
                 ; 0000 0059 
                 ; 0000 005A     float tmpA = 0.0;
                 ; 0000 005B     float tmpB = 0.0;
                 ; 0000 005C     float tmpC = 0.0;
                 ; 0000 005D 
                 ; 0000 005E     int ivADC = 0;
                 ; 0000 005F     float ivADCFloat = 0.0;
                 ; 0000 0060     float ivVolt = 0.0;
                 ; 0000 0061     float ivVoltPlusffset = 0.0;
                 ; 0000 0062     float ivTempC = 0.0;
                 ; 0000 0063     float ivVoltzero = 0.0;
                 ; 0000 0064     float ivZero = 1.68;
                 ; 0000 0065 
                 ; 0000 0066     long viADCbuffer = 0;
                 ; 0000 0067 
                 ; 0000 0068     float ivADCbuffFloat = 0.0;
                 ; 0000 0069     int j = 0;
                 ; 0000 006A 
                 ; 0000 006B     //int i = 0;
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E     //int viADCbuffer[];
                 ; 0000 006F 
                 ; 0000 0070     struct rtc_structure st_rtc;
                 ; 0000 0071 
                 ; 0000 0072     // -------- System Initialize ----------- //
                 ; 0000 0073     do{ err = initial_system();  }while(err);
0035cc 97ef      	SBIW R28,63
0035cd 97ec      	SBIW R28,60
0035ce e38d      	LDI  R24,61
0035cf e1aa      	LDI  R26,LOW(26)
0035d0 e0b0      	LDI  R27,HIGH(26)
0035d1 e0ea      	LDI  R30,LOW(_0x3*2)
0035d2 e0f2      	LDI  R31,HIGH(_0x3*2)
0035d3 e060      	LDI  R22,BYTE3(_0x3*2)
0035d4 940e e0de 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+121
                 ;	last_status -> Y+119
                 ;	sensor_report_timer -> Y+99
                 ;	status_report_timer -> Y+95
                 ;	check_reset_timer -> Y+91
                 ;	check_memory_timer -> Y+87
                 ;	clear_duplicate_timer -> Y+83
                 ;	readSensorTimer -> Y+79
                 ;	timestamp_rd -> Y+75
                 ;	key_press -> Y+74
                 ;	tmpA -> Y+70
                 ;	tmpB -> Y+66
                 ;	tmpC -> Y+62
                 ;	ivADC -> Y+60
                 ;	ivADCFloat -> Y+56
                 ;	ivVolt -> Y+52
                 ;	ivVoltPlusffset -> Y+48
                 ;	ivTempC -> Y+44
                 ;	ivVoltzero -> Y+40
                 ;	ivZero -> Y+36
                 ;	viADCbuffer -> Y+32
                 ;	ivADCbuffFloat -> Y+28
                 ;	j -> Y+26
                 ;	st_rtc -> Y+0
0035d6 940e c02e 	CALL SUBOPT_0x0
                 _0x5:
0035d8 940e 3e75 	CALL _initial_system
0035da 018f      	MOVW R16,R30
0035db 2e00      	MOV  R0,R16
0035dc 2a01      	OR   R0,R17
0035dd f7d1      	BRNE _0x5
                 ; 0000 0074 
                 ; 0000 0075 
                 ; 0000 0076 //    DDRH=0xF8;
                 ; 0000 0077 //    PORTH =0x00;
                 ; 0000 0078 //    delay_ms(100);
                 ; 0000 0079 //
                 ; 0000 007A //    while(1){
                 ; 0000 007B //        #asm("wdr")
                 ; 0000 007C //        PORTH = 0xF0;
                 ; 0000 007D //        delay_ms(1000);
                 ; 0000 007E //        PORTH = 0x00;
                 ; 0000 007F //        delay_ms(1000);
                 ; 0000 0080 //    }
                 ; 0000 0081 
                 ; 0000 0082 
                 ; 0000 0083     //ETH_CONF;
                 ; 0000 0084 
                 ; 0000 0085     ETH_switchMode((unsigned char) MODE_NORM);
0035de e8a0      	LDI  R26,LOW(128)
0035df 940e 5e6f 	CALL _ETH_switchMode
                 ; 0000 0086     //ETH_NORM;
                 ; 0000 0087    // ETH_reset();
                 ; 0000 0088    // ETH_OFF;
                 ; 0000 0089    // delay_ms(2000);
                 ; 0000 008A    // ETH_ON;
                 ; 0000 008B 
                 ; 0000 008C     // -- alarm indicator initialize -- //
                 ; 0000 008D     buzzer_on = 0;          // -- buzzer off -- //
0035e1 98f3      	CBI  0x1E,3
                 ; 0000 008E     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
0035e2 e040     +LDI R20 , LOW ( 0 )
0035e3 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
0035e4 3042     +CPI R20 , LOW ( 2 )
0035e5 e0e0     +LDI R30 , HIGH ( 2 )
0035e6 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0035e7 f44c      	BRGE _0xB
                 ; 0000 008F     {
                 ; 0000 0090         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0035e8 940e c033 	CALL SUBOPT_0x1
0035ea 940e c03d 	CALL SUBOPT_0x2
0035ec 940e 4347 	CALL _IO_dout
                 ; 0000 0091     }
                +
0035ee 5f4f     +SUBI R20 , LOW ( - 1 )
0035ef 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0035f0 cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0092 
                 ; 0000 0093     initDataLogQueue();
0035f1 940e 86c2 	CALL _initDataLogQueue
                 ; 0000 0094     initEventLogQueue();
0035f3 940e 8798 	CALL _initEventLogQueue
                 ; 0000 0095     ETH_initWaitQueue();
0035f5 940e 6a52 	CALL _ETH_initWaitQueue
                 ; 0000 0096 
                 ; 0000 0097     printDebug("\r\n------ Initial Complete ------\r\n");
                +
0035f7 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0035f8 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
0035f9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
0035fa e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
0035fb 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0098     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
0035fd e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
0035fe e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
0035ff e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
003600 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
003601 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0099 
                 ; 0000 009A 
                 ; 0000 009B     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 009C 
                 ; 0000 009D     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
003603 e020     +LDI R18 , LOW ( 0 )
003604 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
003605 3025     +CPI R18 , LOW ( 5 )
003606 e0e0     +LDI R30 , HIGH ( 5 )
003607 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003608 f444      	BRGE _0xE
                 ; 0000 009E         if(operating_config.sensorEnable[i]){
003609 940e c049 	CALL SUBOPT_0x4
00360b f011      	BREQ _0xF
                 ; 0000 009F             TIMER_setTimer(&sensor_report_timer[i], 5);
00360c 940e c050 	CALL SUBOPT_0x5
                 ; 0000 00A0         }
                 ; 0000 00A1     }
                 _0xF:
                +
00360e 5f2f     +SUBI R18 , LOW ( - 1 )
00360f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003610 cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 00A2 
                 ; 0000 00A3 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 00A4 //                 -90, -20, 50,
                 ; 0000 00A5 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 00A6 //
                 ; 0000 00A7 //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 00A8 //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 00A9 //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 00AA 
                 ; 0000 00AB     TIMER_setTimer(&status_report_timer, 7);
003611 940e c060 	CALL SUBOPT_0x6
                 ; 0000 00AC     TIMER_setTimer(&check_reset_timer, 60);
003613 940e c06b 	CALL SUBOPT_0x7
                 ; 0000 00AD     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
003615 940e c076 	CALL SUBOPT_0x8
                 ; 0000 00AE 
                 ; 0000 00AF 
                 ; 0000 00B0 //    while(1){
                 ; 0000 00B1 //        #asm("wdr")
                 ; 0000 00B2 //        viADCbuffer = 0;
                 ; 0000 00B3 //        for(j=0;j<30;j++){
                 ; 0000 00B4 //           viADCbuffer += read_adc(8);
                 ; 0000 00B5 //        }
                 ; 0000 00B6 //        //printDebug("ADC[0] Temp C : %f\r\n",iAD595ADCToTemp(viADCbuffer,30));
                 ; 0000 00B7 //        iAD595ADCToTemp(viADCbuffer,30);
                 ; 0000 00B8 //        delay_ms(500);
                 ; 0000 00B9 //    }
                 ; 0000 00BA 
                 ; 0000 00BB 
                 ; 0000 00BC     while(1){
                 _0x10:
                 ; 0000 00BD 
                 ; 0000 00BE         #asm("wdr")
003617 95a8      	wdr
                 ; 0000 00BF 
                 ; 0000 00C0         // Reset at 05.00 in every day
                 ; 0000 00C1         if(TIMER_checkTimerExceed(check_reset_timer))
                +
003618 01de     +MOVW R26 , R28
003619 5aa5     +SUBI R26 , LOW ( - 91 )
00361a 4fbf     +SBCI R27 , HIGH ( - 91 )
00361b 900d     +LD R0 , X +
00361c 901d     +LD R1 , X +
00361d 918d     +LD R24 , X +
00361e 919c     +LD R25 , X
00361f 01d0     +MOVW R26 , R0
                 	__GETD2SX 91
003620 940e 41a1 	CALL _TIMER_checkTimerExceed
003622 9730      	SBIW R30,0
003623 f0c1      	BREQ _0x13
                 ; 0000 00C2         {
                 ; 0000 00C3             TIMER_setTimer(&check_reset_timer, 60);
003624 940e c06b 	CALL SUBOPT_0x7
                 ; 0000 00C4             RTC_getDateTime(&st_rtc, 7);
003626 940e c081 	CALL SUBOPT_0x9
003628 940e c085 	CALL SUBOPT_0xA
00362a 940e 485c 	CALL _RTC_getDateTime
                 ; 0000 00C5 //            printRTC(st_rtc);
                 ; 0000 00C6             if(st_rtc.hour == 5) {
00362c 940e c088 	CALL SUBOPT_0xB
                +
00362e 30a5     +CPI R26 , LOW ( 0x5 )
00362f e0e0     +LDI R30 , HIGH ( 0x5 )
003630 07be     +CPC R27 , R30
003631 e0e0     +LDI R30 , BYTE3 ( 0x5 )
003632 078e     +CPC R24 , R30
003633 e0e0     +LDI R30 , BYTE4 ( 0x5 )
003634 079e     +CPC R25 , R30
                 	__CPD2N 0x5
003635 f431      	BRNE _0x14
                 ; 0000 00C7                 if(st_rtc.min == 0) {
003636 940e c08d 	CALL SUBOPT_0xC
003638 940e e0b4 	CALL __CPD10
00363a f409      	BRNE _0x15
                 ; 0000 00C8                     while(1);
                 _0x16:
00363b cfff      	RJMP _0x16
                 ; 0000 00C9                 }
                 ; 0000 00CA             }
                 _0x15:
                 ; 0000 00CB         }
                 _0x14:
                 ; 0000 00CC 
                 ; 0000 00CD         // ----------- Received Debug Request ---------- //
                 ; 0000 00CE         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
00363c 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
00363e 30e0      	CPI  R30,0
00363f f011      	BREQ _0x19
003640 940e 9dab 	CALL _debug_req
                 ; 0000 00CF 
                 ; 0000 00D0         // ----------- On Device Key Press ------------- //
                 ; 0000 00D1         key_press = IO_keyCheck();
                 _0x19:
003642 940e 4365 	CALL _IO_keyCheck
                +
003644 01de     +MOVW R26 , R28
003645 5ba6     +SUBI R26 , LOW ( - 74 )
003646 4fbf     +SBCI R27 , HIGH ( - 74 )
003647 93ec     +ST X , R30
                 	__PUTB1SX 74
                 ; 0000 00D2         if(key_press){
003648 30e0      	CPI  R30,0
003649 f031      	BREQ _0x1A
                 ; 0000 00D3             MENU_processKey(key_press);
                +
00364a 01de     +MOVW R26 , R28
00364b 5ba6     +SUBI R26 , LOW ( - 74 )
00364c 4fbf     +SBCI R27 , HIGH ( - 74 )
00364d 91ac     +LD R26 , X
                 	__GETB2SX 74
00364e 940e 87aa 	CALL _MENU_processKey
                 ; 0000 00D4         }
                 ; 0000 00D5 
                 ; 0000 00D6         // ----------- Ethernet Communication ---------- //
                 ; 0000 00D7         ETH_receive();
                 _0x1A:
003650 940e 5d25 	CALL _ETH_receive
                 ; 0000 00D8         ETH_retransmit();
003652 940e 576b 	CALL _ETH_retransmit
                 ; 0000 00D9 
                 ; 0000 00DA         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00DB         if(is_properties_config_update){
003654 91e0 10f6 	LDS  R30,_is_properties_config_update
003656 30e0      	CPI  R30,0
003657 f011      	BREQ _0x1B
                 ; 0000 00DC             getPropertiesConfig(&properties_config);
003658 940e c092 	CALL SUBOPT_0xD
                 ; 0000 00DD             is_properties_config_update = 0;
                 ; 0000 00DE         }
                 ; 0000 00DF 
                 ; 0000 00E0         if(is_operating_config_update){
                 _0x1B:
00365a 91e0 10f7 	LDS  R30,_is_operating_config_update
00365c 30e0      	CPI  R30,0
00365d f011      	BREQ _0x1C
                 ; 0000 00E1             getOperatingConfig(&operating_config);
00365e 940e c09a 	CALL SUBOPT_0xE
                 ; 0000 00E2             is_operating_config_update = 0;
                 ; 0000 00E3         }
                 ; 0000 00E4 
                 ; 0000 00E5         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
003660 e020     +LDI R18 , LOW ( 0 )
003661 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
003662 3025     +CPI R18 , LOW ( 5 )
003663 e0e0     +LDI R30 , HIGH ( 5 )
003664 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003665 f504      	BRGE _0x1F
                 ; 0000 00E6             if(is_sensor_config_update[i]){
003666 efa8      	LDI  R26,LOW(_is_sensor_config_update)
003667 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
003668 940e c0a2 	CALL SUBOPT_0xF
00366a f0c1      	BREQ _0x20
                 ; 0000 00E7                 err = getSensorConfig(i,&sensor_config[i]);
00366b 933a      	ST   -Y,R19
00366c 932a      	ST   -Y,R18
00366d 940e c0a7 	CALL SUBOPT_0x10
00366f 940e 4a13 	CALL _getSensorConfig
003671 018f      	MOVW R16,R30
                 ; 0000 00E8                 if(err < 0){
003672 2311      	TST  R17
003673 f44a      	BRPL _0x21
                 ; 0000 00E9                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
003674 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
003675 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
003676 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
003677 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
003678 940e c0b0 	CALL SUBOPT_0x11
00367a 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 00EA                     continue;
00367c c006      	RJMP _0x1D
                 ; 0000 00EB                 }
                 ; 0000 00EC                 is_sensor_config_update[i] = 0;
                 _0x21:
00367d efa8      	LDI  R26,LOW(_is_sensor_config_update)
00367e e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
00367f 940e c0bd 	CALL SUBOPT_0x13
                 ; 0000 00ED                 TIMER_setTimer(&sensor_report_timer[i], 5);
003681 940e c050 	CALL SUBOPT_0x5
                 ; 0000 00EE             }
                 ; 0000 00EF         }
                 _0x20:
                 _0x1D:
                +
003683 5f2f     +SUBI R18 , LOW ( - 1 )
003684 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003685 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00F0 
                 ; 0000 00F1         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
003686 91e0 1112 	LDS  R30,_is_buzzer_config_update
003688 30e0      	CPI  R30,0
003689 f011      	BREQ _0x22
                 ; 0000 00F2             getBuzzerConfig(&buzz_config);
00368a 940e c0c2 	CALL SUBOPT_0x14
                 ; 0000 00F3             is_buzzer_config_update = 0;
                 ; 0000 00F4         }
                 ; 0000 00F5 
                 ; 0000 00F6         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
00368c e020     +LDI R18 , LOW ( 0 )
00368d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
00368e 3022     +CPI R18 , LOW ( 2 )
00368f e0e0     +LDI R30 , HIGH ( 2 )
003690 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003691 f49c      	BRGE _0x25
                 ; 0000 00F7             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
003692 efad      	LDI  R26,LOW(_is_din_config_update)
003693 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003694 940e c0a2 	CALL SUBOPT_0xF
003696 f059      	BREQ _0x26
                 ; 0000 00F8                 getAuxDinConfig(i,&din_config[i]);
003697 933a      	ST   -Y,R19
003698 932a      	ST   -Y,R18
003699 940e c0ca 	CALL SUBOPT_0x15
00369b 01df      	MOVW R26,R30
00369c 940e 4afb 	CALL _getAuxDinConfig
                 ; 0000 00F9                 is_din_config_update[i] = 0;
00369e efad      	LDI  R26,LOW(_is_din_config_update)
00369f e1b0      	LDI  R27,HIGH(_is_din_config_update)
0036a0 940e c0bd 	CALL SUBOPT_0x13
                 ; 0000 00FA             }
                 ; 0000 00FB         }
                 _0x26:
                +
0036a2 5f2f     +SUBI R18 , LOW ( - 1 )
0036a3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036a4 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00FC 
                 ; 0000 00FD         for(i=0;i<USE_DOUT;i++){
                +
0036a5 e020     +LDI R18 , LOW ( 0 )
0036a6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
0036a7 3022     +CPI R18 , LOW ( 2 )
0036a8 e0e0     +LDI R30 , HIGH ( 2 )
0036a9 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0036aa f49c      	BRGE _0x29
                 ; 0000 00FE             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
0036ab e0ad      	LDI  R26,LOW(_is_dout_config_update)
0036ac e1b1      	LDI  R27,HIGH(_is_dout_config_update)
0036ad 940e c0a2 	CALL SUBOPT_0xF
0036af f059      	BREQ _0x2A
                 ; 0000 00FF                 getAuxDoutConfig(i,&dout_config[i]);
0036b0 933a      	ST   -Y,R19
0036b1 932a      	ST   -Y,R18
                +
0036b2 e2a6     +LDI R26 , 38
0036b3 9fa2     +MUL R26 , R18
0036b4 01f0     +MOVW R30 , R0
0036b5 9fa3     +MUL R26 , R19
0036b6 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
0036b7 940e c0d2 	CALL SUBOPT_0x16
                 ; 0000 0100                 is_dout_config_update[i] = 0;
0036b9 940e c0bd 	CALL SUBOPT_0x13
                 ; 0000 0101             }
                 ; 0000 0102         }
                 _0x2A:
                +
0036bb 5f2f     +SUBI R18 , LOW ( - 1 )
0036bc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036bd cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 0103 
                 ; 0000 0104         if(is_status_config_update){
0036be 91e0 1113 	LDS  R30,_is_status_config_update
0036c0 30e0      	CPI  R30,0
0036c1 f021      	BREQ _0x2B
                 ; 0000 0105             getStatusReportConfig(&status_config);
0036c2 940e c0da 	CALL SUBOPT_0x17
                 ; 0000 0106             is_status_config_update = 0;
                 ; 0000 0107 
                 ; 0000 0108             TIMER_setTimer(&status_report_timer, 7);
0036c4 940e c060 	CALL SUBOPT_0x6
                 ; 0000 0109         }
                 ; 0000 010A 
                 ; 0000 010B         if(is_env_config_update){
                 _0x2B:
0036c6 91e0 1114 	LDS  R30,_is_env_config_update
0036c8 30e0      	CPI  R30,0
0036c9 f011      	BREQ _0x2C
                 ; 0000 010C             getEnvAlarmConfig(&env_config);
0036ca 940e c0e2 	CALL SUBOPT_0x18
                 ; 0000 010D             is_env_config_update = 0;
                 ; 0000 010E         }
                 ; 0000 010F 
                 ; 0000 0110         /*bongkot test*/
                 ; 0000 0111 //        operating_config.deviceEnable = 1;
                 ; 0000 0112 //        operating_config.sensorEnable[0] = 1;
                 ; 0000 0113 //        operating_config.sensorEnable[1] = 0;
                 ; 0000 0114 //        operating_config.sensorEnable[2] = 0;
                 ; 0000 0115 //        operating_config.sensorEnable[3] = 0;
                 ; 0000 0116 //        operating_config.sensorEnable[4] = 0;
                 ; 0000 0117 
                 ; 0000 0118         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
0036cc 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0036ce 30e0      	CPI  R30,0
0036cf f411      	BRNE PC+3
0036d0 940c 38da 	JMP _0x2D
                 ; 0000 0119         {
                 ; 0000 011A             // -------------- Sensor Association -------------- //
                 ; 0000 011B             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0036d2 e020     +LDI R18 , LOW ( 0 )
0036d3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
0036d4 3025     +CPI R18 , LOW ( 5 )
0036d5 e0e0     +LDI R30 , HIGH ( 5 )
0036d6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0036d7 f014      	BRLT PC+3
0036d8 940c 371f 	JMP _0x30
                 ; 0000 011C             {
                 ; 0000 011D                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
0036da 940e c049 	CALL SUBOPT_0x4
0036dc f411      	BRNE PC+3
0036dd 940c 371c 	JMP _0x31
                 ; 0000 011E                 {
                 ; 0000 011F                     //** test **//
                 ; 0000 0120 //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 0121 //                    {
                 ; 0000 0122 //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 0123 //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 0124 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0125 //                    }
                 ; 0000 0126                     //-- test --//
                 ; 0000 0127 
                 ; 0000 0128                     //printDebug("<main> sensorRead\r\n");
                 ; 0000 0129                     err = sensorRead(i,&sensor[i]);
0036df 940e c0ea 	CALL SUBOPT_0x19
0036e1 940e 6c37 	CALL _sensorRead
0036e3 018f      	MOVW R16,R30
                 ; 0000 012A                     if(err < 0)                                 // . sensor value error . //
0036e4 2311      	TST  R17
0036e5 f1b2      	BRMI _0x2E
                 ; 0000 012B                     {
                 ; 0000 012C                         continue;
                 ; 0000 012D                     }
                 ; 0000 012E                     else                                        // . sensor value valid . //
                 ; 0000 012F                     {
                 ; 0000 0130                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 0131                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
0036e6 940e c0f5 	CALL SUBOPT_0x1A
0036e8 940e c0fc 	CALL SUBOPT_0x1B
0036ea 940e c101 	CALL SUBOPT_0x1C
0036ec f179      	BREQ _0x34
                 ; 0000 0132                         {
                 ; 0000 0133                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
0036ed 940e c0f5 	CALL SUBOPT_0x1A
0036ef 940e c107 	CALL SUBOPT_0x1D
0036f1 940e c0a7 	CALL SUBOPT_0x10
0036f3 940e c10c 	CALL SUBOPT_0x1E
0036f5 940e c111 	CALL SUBOPT_0x1F
                 ; 0000 0134 
                 ; 0000 0135                             timestamp_rd = DS1672_read();
0036f7 940e 452f 	CALL _DS1672_read
                +
0036f9 01de     +MOVW R26 , R28
0036fa 5ba5     +SUBI R26 , LOW ( - 75 )
0036fb 4fbf     +SBCI R27 , HIGH ( - 75 )
0036fc 93ed     +ST X + , R30
0036fd 93fd     +ST X + , R31
0036fe 936d     +ST X + , R22
0036ff 937c     +ST X , R23
                 	__PUTD1SX 75
                 ; 0000 0136                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
003700 940e e05b 	CALL __PUTPARD1
003702 940e c0ea 	CALL SUBOPT_0x19
003704 940e e02b 	CALL __GETD1P
003706 01df      	MOVW R26,R30
003707 01cb      	MOVW R24,R22
003708 940e 744e 	CALL _addDataQueue
00370a 018f      	MOVW R16,R30
                 ; 0000 0137                             if(err<0){
00370b 2311      	TST  R17
00370c f47a      	BRPL _0x35
                 ; 0000 0138                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
00370d ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
00370e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
00370f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
003710 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
003711 940e c0b0 	CALL SUBOPT_0x11
                +
003713 e0a5     +LDI R26 , 5
003714 9fa2     +MUL R26 , R18
003715 01f0     +MOVW R30 , R0
003716 9fa3     +MUL R26 , R19
003717 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
003718 940e c115 	CALL SUBOPT_0x20
00371a 940e c11b 	CALL SUBOPT_0x21
                 ; 0000 0139                                 continue;   // -- continue other sensor
                 ; 0000 013A                             }
                 ; 0000 013B                         }
                 _0x35:
                 ; 0000 013C                         else{
                 _0x34:
                 ; 0000 013D                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 013E                         }
                 ; 0000 013F                     }
                 ; 0000 0140 
                 ; 0000 0141                 }
                 ; 0000 0142                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 0143                 {
                 ; 0000 0144                 }
                 ; 0000 0145             } // -- iterate each probe -- //
                 _0x2E:
                +
00371c 5f2f     +SUBI R18 , LOW ( - 1 )
00371d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00371e cfb5      	RJMP _0x2F
                 _0x30:
                 ; 0000 0146 
                 ; 0000 0147             #asm("wdr")
00371f 95a8      	wdr
                 ; 0000 0148             // --------------- Status Management --------------- //
                 ; 0000 0149            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 014A             last_status = updateStatus();
003720 d22a      	RCALL _updateStatus
                +
003721 01de     +MOVW R26 , R28
003722 58a9     +SUBI R26 , LOW ( - 119 )
003723 4fbf     +SBCI R27 , HIGH ( - 119 )
003724 93ed     +ST X + , R30
003725 93fc     +ST X , R31
                 	__PUTW1SX 119
                 ; 0000 014B 
                 ; 0000 014C             // --------------- Alarm Management --------------- //
                 ; 0000 014D             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
003726 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
003728 30e0      	CPI  R30,0
003729 f411      	BRNE PC+3
00372a 940c 379f 	JMP _0x38
                 ; 0000 014E             {
                 ; 0000 014F                 // -- check alarm all -- //
                 ; 0000 0150                 if(last_status < 0)                             // .. status update falied .. //
                +
00372c 01de     +MOVW R26 , R28
00372d 58a8     +SUBI R26 , LOW ( - 120 )
00372e 4fbf     +SBCI R27 , HIGH ( - 120 )
00372f 91ac     +LD R26 , X
                 	__GETB2SX 120
003730 23aa      	TST  R26
003731 f43a      	BRPL _0x39
                 ; 0000 0151                 {
                 ; 0000 0152                     printDebug("<main> updateStatus() failed\r\n");
                +
003732 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
003733 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
003734 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
003735 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
003736 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0153                 }
                 ; 0000 0154                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
003738 c062      	RJMP _0x3A
                 _0x39:
                +
003739 01de     +MOVW R26 , R28
00373a 58a9     +SUBI R26 , LOW ( - 119 )
00373b 4fbf     +SBCI R27 , HIGH ( - 119 )
00373c 900d     +LD R0 , X +
00373d 91bc     +LD R27 , X
00373e 2da0     +MOV R26 , R0
                 	__GETW2SX 119
00373f 940e e0b8 	CALL __CPW02
003741 f424      	BRGE _0x3C
003742 91e0 148b 	LDS  R30,_muteMode
003744 30e0      	CPI  R30,0
003745 f009      	BREQ _0x3D
                 _0x3C:
003746 c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0155                 {
                 ; 0000 0156                     // -- Buzzer Alarm -- //
                 ; 0000 0157                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
003747 91a0 133d 	LDS  R26,_buzz_config
003749 30a1      	CPI  R26,LOW(0x1)
00374a f471      	BRNE _0x3E
                 ; 0000 0158                     {
                 ; 0000 0159                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 015A                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
00374b e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
00374c e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
00374d 93fa      	ST   -Y,R31
00374e 93ea      	ST   -Y,R30
                +
00374f 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
003751 27bb      	CLR  R27
003752 940e c122 	CALL SUBOPT_0x22
                 ; 0000 015B                         if(res){
003754 f011      	BREQ _0x3F
                 ; 0000 015C                             buzzer_on = 1;          // -- buzzer on -- //
003755 9af3      	SBI  0x1E,3
                 ; 0000 015D                         }
                 ; 0000 015E                         else{
003756 c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 015F                             buzzer_on = 0;          // -- buzzer off -- //
003757 98f3      	CBI  0x1E,3
                 ; 0000 0160                         }
                 _0x42:
                 ; 0000 0161                     }
                 ; 0000 0162                     else                                        // -- buzzer disabled -- //
003758 c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 0163                     {
                 ; 0000 0164                         buzzer_on = 0;                  // -- buzzer off -- //
003759 98f3      	CBI  0x1E,3
                 ; 0000 0165                     }
                 _0x45:
                 ; 0000 0166 
                 ; 0000 0167                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0168                     for(k=0;k<USE_DOUT;k++)
                +
00375a e040     +LDI R20 , LOW ( 0 )
00375b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
00375c 3042     +CPI R20 , LOW ( 2 )
00375d e0e0     +LDI R30 , HIGH ( 2 )
00375e 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00375f f554      	BRGE _0x4A
                 ; 0000 0169                     {
                 ; 0000 016A                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
003760 940e c12b 	CALL SUBOPT_0x23
003762 58e1      	SUBI R30,LOW(-_dout_config)
003763 4efd      	SBCI R31,HIGH(-_dout_config)
003764 81a0      	LD   R26,Z
003765 30a1      	CPI  R26,LOW(0x1)
003766 f4d1      	BRNE _0x4B
                 ; 0000 016B                         {
                 ; 0000 016C                             // -- check alarm Digital Output -- //
                 ; 0000 016D //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 016E                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
003767 940e c12b 	CALL SUBOPT_0x23
                +
003769 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
00376a 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
00376b 93fa      	ST   -Y,R31
00376c 93ea      	ST   -Y,R30
00376d 940e c12b 	CALL SUBOPT_0x23
                +
00376f 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
003770 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
003771 81a0      	LD   R26,Z
003772 e0b0      	LDI  R27,0
003773 940e c122 	CALL SUBOPT_0x22
                 ; 0000 016F                             if(res){
003775 f021      	BREQ _0x4C
                 ; 0000 0170                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
003776 940e c033 	CALL SUBOPT_0x1
003778 81a0      	LD   R26,Z
003779 c004      	RJMP _0x133
                 ; 0000 0171                             }
                 ; 0000 0172                             else{
                 _0x4C:
                 ; 0000 0173                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00377a 940e c033 	CALL SUBOPT_0x1
00377c 940e c03d 	CALL SUBOPT_0x2
                 _0x133:
00377e 940e 4347 	CALL _IO_dout
                 ; 0000 0174                             }
                 ; 0000 0175                         }
                 ; 0000 0176                         else                                                // -- digital output disabled -- //
003780 c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0177                         {
                 ; 0000 0178                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
003781 940e c033 	CALL SUBOPT_0x1
003783 940e c03d 	CALL SUBOPT_0x2
003785 940e 4347 	CALL _IO_dout
                 ; 0000 0179                         }
                 _0x4E:
                 ; 0000 017A                     }
                +
003787 5f4f     +SUBI R20 , LOW ( - 1 )
003788 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003789 cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 017B                 }
                 ; 0000 017C                 else                                            // .. no event .. //
00378a c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 017D                 {
                 ; 0000 017E                     // -- no alarm -- // ^_^
                 ; 0000 017F                     buzzer_on = 0;                  // -- buzzer off -- //
00378b 98f3      	CBI  0x1E,3
                 ; 0000 0180                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
00378c e040     +LDI R20 , LOW ( 0 )
00378d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
00378e 3042     +CPI R20 , LOW ( 2 )
00378f e0e0     +LDI R30 , HIGH ( 2 )
003790 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003791 f44c      	BRGE _0x54
                 ; 0000 0181                     {
                 ; 0000 0182                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003792 940e c033 	CALL SUBOPT_0x1
003794 940e c03d 	CALL SUBOPT_0x2
003796 940e 4347 	CALL _IO_dout
                 ; 0000 0183                     }
                +
003798 5f4f     +SUBI R20 , LOW ( - 1 )
003799 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00379a cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0184                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0185 
                 ; 0000 0186                 res = eventCapture();                           // -- send event packet if needed -- //
00379b d224      	RCALL _eventCapture
00379c 940e c131 	CALL SUBOPT_0x24
                 ; 0000 0187             }
                 ; 0000 0188             else                                                // .. alarm disable .. //
00379e c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0189             {
                 ; 0000 018A             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 018B                 // -- no alarm -- // ;-P
                 ; 0000 018C                 buzzer_on = 0;                      // -- buzzer off -- //
00379f 98f3      	CBI  0x1E,3
                 ; 0000 018D                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
0037a0 e040     +LDI R20 , LOW ( 0 )
0037a1 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
0037a2 3042     +CPI R20 , LOW ( 2 )
0037a3 e0e0     +LDI R30 , HIGH ( 2 )
0037a4 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0037a5 f44c      	BRGE _0x5A
                 ; 0000 018E                 {
                 ; 0000 018F                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0037a6 940e c033 	CALL SUBOPT_0x1
0037a8 940e c03d 	CALL SUBOPT_0x2
0037aa 940e 4347 	CALL _IO_dout
                 ; 0000 0190                 }
                +
0037ac 5f4f     +SUBI R20 , LOW ( - 1 )
0037ad 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037ae cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 0191             }
                 _0x55:
                 ; 0000 0192 
                 ; 0000 0193             // -- check mute expired -- //
                 ; 0000 0194             if(muteMode){
0037af 91e0 148b 	LDS  R30,_muteMode
0037b1 30e0      	CPI  R30,0
0037b2 f059      	BREQ _0x5B
                 ; 0000 0195                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0196                 if(ALARM_checkMuteExpired()){
0037b3 940e 7d42 	CALL _ALARM_checkMuteExpired
0037b5 9730      	SBIW R30,0
0037b6 f039      	BREQ _0x5C
                 ; 0000 0197                     muteAlarmExpired = 0xFFFFFFFF;
0037b7 940e c137 	CALL SUBOPT_0x25
0037b9 940e c13c 	CALL SUBOPT_0x26
                 ; 0000 0198                     muteMode = 0;
0037bb e0e0      	LDI  R30,LOW(0)
0037bc 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0199                 }
                 ; 0000 019A             }
                 _0x5C:
                 ; 0000 019B 
                 ; 0000 019C             // ---------------- Operating Mode ---------------- //
                 ; 0000 019D //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 019E 
                 ; 0000 019F             /*bongkot test*/
                 ; 0000 01A0             operating_config.mode == MODE_REALTIME;
                 _0x5B:
0037be 91a0 11b6 	LDS  R26,_operating_config
0037c0 e1e0      	LDI  R30,LOW(16)
0037c1 940e df42 	CALL __EQB12
                 ; 0000 01A1             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
0037c3 31a0      	CPI  R26,LOW(0x10)
0037c4 f011      	BREQ PC+3
0037c5 940c 3811 	JMP _0x5D
                 ; 0000 01A2             {
                 ; 0000 01A3                 if(!duplicateListClear)
0037c7 91e0 1425 	LDS  R30,_duplicateListClear
0037c9 30e0      	CPI  R30,0
0037ca f4f1      	BRNE _0x5E
                 ; 0000 01A4                 {
                 ; 0000 01A5                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
0037cb 01de     +MOVW R26 , R28
0037cc 5aad     +SUBI R26 , LOW ( - 83 )
0037cd 4fbf     +SBCI R27 , HIGH ( - 83 )
0037ce 900d     +LD R0 , X +
0037cf 901d     +LD R1 , X +
0037d0 918d     +LD R24 , X +
0037d1 919c     +LD R25 , X
0037d2 01d0     +MOVW R26 , R0
                 	__GETD2SX 83
0037d3 940e 41a1 	CALL _TIMER_checkTimerExceed
0037d5 940e c131 	CALL SUBOPT_0x24
                 ; 0000 01A6                     if(res != 0){
                +
0037d7 01fe     +MOVW R30 , R28
0037d8 58e7     +SUBI R30 , LOW ( - 121 )
0037d9 4fff     +SBCI R31 , HIGH ( - 121 )
0037da 9001     +LD R0 , Z +
0037db 81f0     +LD R31 , Z
0037dc 2de0     +MOV R30 , R0
                 	__GETW1SX 121
0037dd 9730      	SBIW R30,0
0037de f039      	BREQ _0x5F
                 ; 0000 01A7                         TIMER_setTimer(&clear_duplicate_timer, 10);
0037df 01fe      	MOVW R30,R28
0037e0 5aed      	SUBI R30,LOW(-(83))
0037e1 4fff      	SBCI R31,HIGH(-(83))
0037e2 940e c145 	CALL SUBOPT_0x27
                 ; 0000 01A8                         ETH_clearDuplicateRequestCmd();
0037e4 940e 567f 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 01A9                     }
                 ; 0000 01AA 
                 ; 0000 01AB                     sensorDataSave();
                 _0x5F:
0037e6 d449      	RCALL _sensorDataSave
                 ; 0000 01AC                     eventSave();
0037e7 d4cc      	RCALL _eventSave
                 ; 0000 01AD                 }
                 ; 0000 01AE                 else
0037e8 c027      	RJMP _0x60
                 _0x5E:
                 ; 0000 01AF                 {
                 ; 0000 01B0                     if(TIMER_checkTimerExceed(status_report_timer))
                +
0037e9 01de     +MOVW R26 , R28
0037ea 5aa1     +SUBI R26 , LOW ( - 95 )
0037eb 4fbf     +SBCI R27 , HIGH ( - 95 )
0037ec 900d     +LD R0 , X +
0037ed 901d     +LD R1 , X +
0037ee 918d     +LD R24 , X +
0037ef 919c     +LD R25 , X
0037f0 01d0     +MOVW R26 , R0
                 	__GETD2SX 95
0037f1 940e 41a1 	CALL _TIMER_checkTimerExceed
0037f3 9730      	SBIW R30,0
0037f4 f071      	BREQ _0x61
                 ; 0000 01B1                     {
                 ; 0000 01B2                         TIMER_setTimer(&status_report_timer, status_config.intv);
0037f5 01fe      	MOVW R30,R28
0037f6 5ae1      	SUBI R30,LOW(-(95))
0037f7 4fff      	SBCI R31,HIGH(-(95))
0037f8 93fa      	ST   -Y,R31
0037f9 93ea      	ST   -Y,R30
                +
0037fa 91a0 1363+LDS R26 , _status_config + ( 1 )
0037fc 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
0037fe 2788      	CLR  R24
0037ff 2799      	CLR  R25
003800 940e 41b7 	CALL _TIMER_setTimer
                 ; 0000 01B3 
                 ; 0000 01B4                         statusReport();
003802 d2e9      	RCALL _statusReport
                 ; 0000 01B5                     }
                 ; 0000 01B6 
                 ; 0000 01B7                     // -- report log only when no realtime data not ready -- //
                 ; 0000 01B8                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
003803 d389      	RCALL _sensorDataReport
003804 9730      	SBIW R30,0
003805 f441      	BRNE _0x63
003806 d3da      	RCALL _eventReport
003807 9730      	SBIW R30,0
003808 f429      	BRNE _0x63
003809 940e c14d 	CALL SUBOPT_0x28
00380b 940e e0c0 	CALL __CPD02
00380d f008      	BRLO _0x64
                 _0x63:
00380e c001      	RJMP _0x62
                 _0x64:
                 ; 0000 01B9                     {
                 ; 0000 01BA                         logReport();
00380f d52c      	RCALL _logReport
                 ; 0000 01BB                     }
                 ; 0000 01BC                 }
                 _0x62:
                 _0x60:
                 ; 0000 01BD             }
                 ; 0000 01BE             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
003810 c011      	RJMP _0x65
                 _0x5D:
003811 91a0 11b6 	LDS  R26,_operating_config
003813 32a0      	CPI  R26,LOW(0x20)
003814 f419      	BRNE _0x66
                 ; 0000 01BF             {
                 ; 0000 01C0                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 01C1                 sensorDataSave();
003815 d41a      	RCALL _sensorDataSave
                 ; 0000 01C2               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 01C3                 eventSave();
003816 d49d      	RCALL _eventSave
                 ; 0000 01C4             }
                 ; 0000 01C5             else                                                // .. unknown mode .. //
003817 c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 01C6             {
                 ; 0000 01C7                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
003818 e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
003819 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
00381a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
00381b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
00381c 940e e05b 	CALL __PUTPARD1
00381e 91e0 11b6 	LDS  R30,_operating_config
003820 940e c156 	CALL SUBOPT_0x29
                 ; 0000 01C8             }
                 _0x67:
                 _0x65:
                 ; 0000 01C9 
                 ; 0000 01CA             #asm("wdr")
003822 95a8      	wdr
                 ; 0000 01CB             if(timer_1sec_flag)
003823 9bf2      	SBIS 0x1E,2
003824 c0b4      	RJMP _0x68
                 ; 0000 01CC             {
                 ; 0000 01CD               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 01CE                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
003825 01de     +MOVW R26 , R28
003826 5aa9     +SUBI R26 , LOW ( - 87 )
003827 4fbf     +SBCI R27 , HIGH ( - 87 )
003828 900d     +LD R0 , X +
003829 901d     +LD R1 , X +
00382a 918d     +LD R24 , X +
00382b 919c     +LD R25 , X
00382c 01d0     +MOVW R26 , R0
                 	__GETD2SX 87
00382d 940e 41a1 	CALL _TIMER_checkTimerExceed
00382f 9730      	SBIW R30,0
003830 f021      	BREQ _0x6A
003831 91a0 1482 	LDS  R26,_memoryStatus
003833 30a1      	CPI  R26,LOW(0x1)
003834 f409      	BRNE _0x6B
                 _0x6A:
003835 c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 01CF                 {
                 ; 0000 01D0               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 01D1                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
003836 940e c076 	CALL SUBOPT_0x8
                 ; 0000 01D2 
                 ; 0000 01D3                     res = SD_readMemoryRemain(&sdFreeSpace);
003838 e6ab      	LDI  R26,LOW(_sdFreeSpace)
003839 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
00383a 940e 80cc 	CALL _SD_readMemoryRemain
00383c 940e c131 	CALL SUBOPT_0x24
                 ; 0000 01D4                     if(res < 0){
                +
00383e 01de     +MOVW R26 , R28
00383f 58a6     +SUBI R26 , LOW ( - 122 )
003840 4fbf     +SBCI R27 , HIGH ( - 122 )
003841 91ac     +LD R26 , X
                 	__GETB2SX 122
003842 23aa      	TST  R26
003843 f432      	BRPL _0x6C
                 ; 0000 01D5                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
003844 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
003845 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
003846 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
003847 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
003848 940e c042 	CALL SUBOPT_0x3
                 ; 0000 01D6                     }
                 ; 0000 01D7                 }
                 _0x6C:
                 ; 0000 01D8 
                 ; 0000 01D9                 if(currentPage == P_MONITOR)
                 _0x69:
00384a 91e0 14df 	LDS  R30,_currentPage
00384c 30e0      	CPI  R30,0
00384d f569      	BRNE _0x6D
                 ; 0000 01DA                 {
                 ; 0000 01DB               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 01DC                     OLED_showSensorValue();
00384e 940e 7dce 	CALL _OLED_showSensorValue
                 ; 0000 01DD 
                 ; 0000 01DE                     for(i=0;i<2;i++){
                +
003850 e020     +LDI R18 , LOW ( 0 )
003851 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
003852 3022     +CPI R18 , LOW ( 2 )
003853 e0e0     +LDI R30 , HIGH ( 2 )
003854 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003855 f454      	BRGE _0x70
                 ; 0000 01DF                         OLED_showInputStatus(i,dinStatus[i]);
003856 933a      	ST   -Y,R19
003857 932a      	ST   -Y,R18
003858 940e c15c 	CALL SUBOPT_0x2A
00385a 91ac      	LD   R26,X
00385b 940e 7e8f 	CALL _OLED_showInputStatus
                 ; 0000 01E0                     }
                +
00385d 5f2f     +SUBI R18 , LOW ( - 1 )
00385e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00385f cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 01E1 
                 ; 0000 01E2                     for(i=0;i<2;i++){
                +
003860 e020     +LDI R18 , LOW ( 0 )
003861 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
003862 3022     +CPI R18 , LOW ( 2 )
003863 e0e0     +LDI R30 , HIGH ( 2 )
003864 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003865 f464      	BRGE _0x73
                 ; 0000 01E3                         OLED_showOutputStatus(i,doutStatus[i]);
003866 933a      	ST   -Y,R19
003867 932a      	ST   -Y,R18
003868 e7ae      	LDI  R26,LOW(_doutStatus)
003869 e1b4      	LDI  R27,HIGH(_doutStatus)
00386a 0fa2      	ADD  R26,R18
00386b 1fb3      	ADC  R27,R19
00386c 91ac      	LD   R26,X
00386d 940e 7eb4 	CALL _OLED_showOutputStatus
                 ; 0000 01E4                     }
                +
00386f 5f2f     +SUBI R18 , LOW ( - 1 )
003870 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003871 cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01E5 
                 ; 0000 01E6                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01E7                     OLED_showDateTime(properties_config.timeZone);
                +
003872 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
003874 e0b0      	LDI  R27,0
003875 fda7      	SBRC R26,7
003876 efbf      	SER  R27
003877 940e 7daa 	CALL _OLED_showDateTime
                 ; 0000 01E8 
                 ; 0000 01E9               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01EA                     OLED_showAlarmStatus();
003879 940e 7f0d 	CALL _OLED_showAlarmStatus
                 ; 0000 01EB                 }
                 ; 0000 01EC 
                 ; 0000 01ED               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01EE                 switch(powerSrcStatus){
                 _0x6D:
00387b 91e0 147a 	LDS  R30,_powerSrcStatus
00387d 940e c161 	CALL SUBOPT_0x2B
                 ; 0000 01EF                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
00387f f439      	BRNE _0x77
003880 e0e0      	LDI  R30,LOW(0)
003881 93ea      	ST   -Y,R30
003882 940e c164 	CALL SUBOPT_0x2C
003884 940e 7e4c 	CALL _OLED_showPowerStatus
003886 c00a      	RJMP _0x76
                 ; 0000 01F0                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
003887 30e1      	CPI  R30,LOW(0x1)
003888 e0a0      	LDI  R26,HIGH(0x1)
003889 07fa      	CPC  R31,R26
00388a f431      	BRNE _0x79
00388b e0e1      	LDI  R30,LOW(1)
00388c 93ea      	ST   -Y,R30
00388d 940e c169 	CALL SUBOPT_0x2D
00388f 940e 7e4c 	CALL _OLED_showPowerStatus
                 ; 0000 01F1                     default             :   break;
                 _0x79:
                 ; 0000 01F2                 }
                 _0x76:
                 ; 0000 01F3 
                 ; 0000 01F4             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01F5                 switch(serverCommStatus){
003891 91e0 1480 	LDS  R30,_serverCommStatus
003893 940e c161 	CALL SUBOPT_0x2B
                 ; 0000 01F6                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
003895 f411      	BRNE _0x7D
003896 e0a2      	LDI  R26,LOW(2)
003897 c007      	RJMP _0x134
                 ; 0000 01F7                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
003898 30e2      	CPI  R30,LOW(0x2)
003899 e0a0      	LDI  R26,HIGH(0x2)
00389a 07fa      	CPC  R31,R26
00389b f411      	BRNE _0x7F
00389c e0a1      	LDI  R26,LOW(1)
00389d c001      	RJMP _0x134
                 ; 0000 01F8                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
00389e e0a0      	LDI  R26,LOW(0)
                 _0x134:
00389f 940e 7ee5 	CALL _OLED_showServerCommStatus
                 ; 0000 01F9                 }
                 ; 0000 01FA 
                 ; 0000 01FB             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01FC                 switch(lanStatus){
0038a1 91e0 1481 	LDS  R30,_lanStatus
0038a3 940e c161 	CALL SUBOPT_0x2B
                 ; 0000 01FD                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
0038a5 f421      	BRNE _0x83
0038a6 e0a1      	LDI  R26,LOW(1)
0038a7 940e 7eef 	CALL _OLED_showLanStatus
0038a9 c007      	RJMP _0x82
                 ; 0000 01FE                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
0038aa 30e1      	CPI  R30,LOW(0x1)
0038ab e0a0      	LDI  R26,HIGH(0x1)
0038ac 07fa      	CPC  R31,R26
0038ad f419      	BRNE _0x85
0038ae e0a0      	LDI  R26,LOW(0)
0038af 940e 7eef 	CALL _OLED_showLanStatus
                 ; 0000 01FF                     default                     :   break;
                 _0x85:
                 ; 0000 0200                 }
                 _0x82:
                 ; 0000 0201 
                 ; 0000 0202             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 0203                 if(muteMode){
0038b1 91e0 148b 	LDS  R30,_muteMode
0038b3 30e0      	CPI  R30,0
0038b4 f011      	BREQ _0x86
                 ; 0000 0204                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
0038b5 e0a2      	LDI  R26,LOW(2)
0038b6 c007      	RJMP _0x135
                 ; 0000 0205                 }
                 ; 0000 0206                 else if(buzz_config.enable == 0x01){
                 _0x86:
0038b7 91a0 133d 	LDS  R26,_buzz_config
0038b9 30a1      	CPI  R26,LOW(0x1)
0038ba f411      	BRNE _0x88
                 ; 0000 0207                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
0038bb e0a0      	LDI  R26,LOW(0)
0038bc c001      	RJMP _0x135
                 ; 0000 0208                 }
                 ; 0000 0209                 else{
                 _0x88:
                 ; 0000 020A                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
0038bd e0a1      	LDI  R26,LOW(1)
                 _0x135:
0038be 940e 7ef9 	CALL _OLED_showBuzzerStatus
                 ; 0000 020B                 }
                 ; 0000 020C 
                 ; 0000 020D            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 020E                 switch(memoryStatus){
0038c0 91e0 1482 	LDS  R30,_memoryStatus
0038c2 940e c161 	CALL SUBOPT_0x2B
                 ; 0000 020F                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
0038c4 f421      	BRNE _0x8D
0038c5 e0a0      	LDI  R26,LOW(0)
0038c6 940e 7f03 	CALL _OLED_showMemoryStatus
0038c8 c00f      	RJMP _0x8C
                 ; 0000 0210                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
0038c9 30e1      	CPI  R30,LOW(0x1)
0038ca e0a0      	LDI  R26,HIGH(0x1)
0038cb 07fa      	CPC  R31,R26
0038cc f421      	BRNE _0x8E
0038cd e0a1      	LDI  R26,LOW(1)
0038ce 940e 7f03 	CALL _OLED_showMemoryStatus
0038d0 c007      	RJMP _0x8C
                 ; 0000 0211                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
0038d1 30e2      	CPI  R30,LOW(0x2)
0038d2 e0a0      	LDI  R26,HIGH(0x2)
0038d3 07fa      	CPC  R31,R26
0038d4 f419      	BRNE _0x90
0038d5 e0a2      	LDI  R26,LOW(2)
0038d6 940e 7f03 	CALL _OLED_showMemoryStatus
                 ; 0000 0212                     default                 :   break;
                 _0x90:
                 ; 0000 0213                 }
                 _0x8C:
                 ; 0000 0214 
                 ; 0000 0215                 timer_1sec_flag = 0;
0038d8 98f2      	CBI  0x1E,2
                 ; 0000 0216             }
                 ; 0000 0217         } // -- device enable -- //
                 _0x68:
                 ; 0000 0218         else                                                    // ----- device disable ----- //
0038d9 c06e      	RJMP _0x93
                 _0x2D:
                 ; 0000 0219         {
                 ; 0000 021A             // -- no alarm -- // ;-P
                 ; 0000 021B             buzzer_on = 0;                      // -- buzzer off -- //
0038da 98f3      	CBI  0x1E,3
                 ; 0000 021C             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
0038db e040     +LDI R20 , LOW ( 0 )
0038dc e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
0038dd 3042     +CPI R20 , LOW ( 2 )
0038de e0e0     +LDI R30 , HIGH ( 2 )
0038df 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0038e0 f44c      	BRGE _0x98
                 ; 0000 021D             {
                 ; 0000 021E                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0038e1 940e c033 	CALL SUBOPT_0x1
0038e3 940e c03d 	CALL SUBOPT_0x2
0038e5 940e 4347 	CALL _IO_dout
                 ; 0000 021F             }
                +
0038e7 5f4f     +SUBI R20 , LOW ( - 1 )
0038e8 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0038e9 cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 0220 
                 ; 0000 0221 
                 ; 0000 0222             if(TEMP_SEL == TEMP_TYPE_K){
0038ea 940e c172 	CALL SUBOPT_0x2E
0038ec f5e9      	BRNE _0x99
                 ; 0000 0223                 if(hwCalId == 9){
0038ed 91a0 10f4 	LDS  R26,_hwCalId
0038ef 91b0 10f5 	LDS  R27,_hwCalId+1
0038f1 9719      	SBIW R26,9
0038f2 f439      	BRNE _0x9A
                 ; 0000 0224                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
0038f3 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
0038f4 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
0038f5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
0038f6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
0038f7 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0225                     //printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                 ; 0000 0226                 }
                 ; 0000 0227                 else if(SENSOR_CONNECT){
0038f9 c02d      	RJMP _0x9B
                 _0x9A:
0038fa 940e c17d 	CALL SUBOPT_0x2F
0038fc 9730      	SBIW R30,0
0038fd f0f9      	BREQ _0x9C
                 ; 0000 0228                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
0038fe e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
0038ff e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
003900 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
003901 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
003902 940e c184 	CALL SUBOPT_0x30
003904 2766      	CLR  R22
003905 2777      	CLR  R23
003906 940e c184 	CALL SUBOPT_0x30
003908 940e c18b 	CALL SUBOPT_0x31
00390a 940e c0fc 	CALL SUBOPT_0x1B
00390c 937f      	PUSH R23
00390d 936f      	PUSH R22
00390e 93ff      	PUSH R31
00390f 93ef      	PUSH R30
003910 940e c190 	CALL SUBOPT_0x32
003912 91af      	POP  R26
003913 91bf      	POP  R27
003914 918f      	POP  R24
003915 919f      	POP  R25
003916 940e ddfc 	CALL __MULF12
003918 940e c19d 	CALL SUBOPT_0x33
00391a 940e c11b 	CALL SUBOPT_0x21
                 ; 0000 0229                 }
                 ; 0000 022A                 else{
00391c c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 022B                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
00391d edee     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
00391e e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
00391f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
003920 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
003921 940e c184 	CALL SUBOPT_0x30
003923 940e c1a4 	CALL SUBOPT_0x34
003925 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 022C                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 022D                 delay_ms(200);
003927 940e c1a9 	CALL SUBOPT_0x35
                 ; 0000 022E             }
                 ; 0000 022F             else if(TEMP_SEL == TEMP_TMEC){
003929 c01e      	RJMP _0x9E
                 _0x99:
00392a 940e c172 	CALL SUBOPT_0x2E
00392c 30e1      	CPI  R30,LOW(0x1)
00392d f429      	BRNE _0x9F
                 ; 0000 0230                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
00392e e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
00392f e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
003930 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
003931 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
003932 c011      	RJMP _0x136
                 ; 0000 0231             }
                 ; 0000 0232             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
003933 940e c172 	CALL SUBOPT_0x2E
003935 30e2      	CPI  R30,LOW(0x2)
003936 f429      	BRNE _0xA1
                 ; 0000 0233                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
003937 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
003938 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
003939 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
00393a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
00393b c008      	RJMP _0x136
                 ; 0000 0234             }
                 ; 0000 0235             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
00393c 940e c172 	CALL SUBOPT_0x2E
00393e 30e3      	CPI  R30,LOW(0x3)
00393f f441      	BRNE _0xA3
                 ; 0000 0236                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
003940 ebe3     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
003941 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
003942 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
003943 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
003944 940e e05b 	CALL __PUTPARD1
003946 940e c1ad 	CALL SUBOPT_0x36
                 ; 0000 0237             }
                 ; 0000 0238         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 0239 
                 ; 0000 023A         #asm("wdr")
003948 95a8      	wdr
                 ; 0000 023B     }
003949 cccd      	RJMP _0x10
                 ; 0000 023C 
                 ; 0000 023D }
                 _0xA4:
00394a cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0245 {
                 _updateStatus:
                 ; 0000 0246     int                 res=0, i=0, err=0;
                 ; 0000 0247     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0248 
                 ; 0000 0249     // --------------- Update Sensor's Event --------------- //
                 ; 0000 024A     for(i=0;i<MAX_SENS_CHANNEL;i++)
00394b 940e c1b2 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
00394d e020     +LDI R18 , LOW ( 0 )
00394e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
00394f 3025     +CPI R18 , LOW ( 5 )
003950 e0e0     +LDI R30 , HIGH ( 5 )
003951 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003952 f4dc      	BRGE _0xA8
                 ; 0000 024B     {
                 ; 0000 024C         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003953 940e c049 	CALL SUBOPT_0x4
003955 f0a9      	BREQ _0xA9
                 ; 0000 024D         {
                 ; 0000 024E             // ----------- Update Probe Status ------------------------- //
                 ; 0000 024F             err =   updateSensorStatus(i);
003956 01d9      	MOVW R26,R18
003957 940e 758f 	CALL _updateSensorStatus
003959 01af      	MOVW R20,R30
                 ; 0000 0250             if(err >= 0){
00395a 2355      	TST  R21
00395b f07a      	BRMI _0xAA
                 ; 0000 0251                 res |=  err;
                +
00395c 2b04     +OR R16 , R20
00395d 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0252                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
00395e 940e c1b7 	CALL SUBOPT_0x38
003960 f019      	BREQ _0xAC
003961 2e04      	MOV  R0,R20
003962 2a05      	OR   R0,R21
003963 f009      	BREQ _0xAD
                 _0xAC:
003964 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 0253                 {
                 ; 0000 0254                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0255                     err =   updateDataStatus(i);
003965 01d9      	MOVW R26,R18
003966 940e 75c2 	CALL _updateDataStatus
003968 01af      	MOVW R20,R30
                 ; 0000 0256                     res |=  err;
                +
003969 2b04     +OR R16 , R20
00396a 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0257                 }
                 ; 0000 0258             }
                 _0xAB:
                 ; 0000 0259         }
                 _0xAA:
                 ; 0000 025A     }
                 _0xA9:
                +
00396b 5f2f     +SUBI R18 , LOW ( - 1 )
00396c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00396d cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 025B 
                 ; 0000 025C     // --- Update Battery Status --- //
                 ; 0000 025D     err =   updateBatteryStatus();
00396e 940e 74ae 	CALL _updateBatteryStatus
003970 01af      	MOVW R20,R30
                 ; 0000 025E     res |=  err;
                +
003971 2b04     +OR R16 , R20
003972 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 025F     // --- Update Digital Input Status --- //
                 ; 0000 0260     err =   updateDinStatus();
003973 940e 76ab 	CALL _updateDinStatus
003975 01af      	MOVW R20,R30
                 ; 0000 0261     res |=  err;
                +
003976 2b04     +OR R16 , R20
003977 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0262     // --- Update Digital Output Status --- //
                 ; 0000 0263     err =   updateDoutStatus();
003978 940e 7727 	CALL _updateDoutStatus
00397a 01af      	MOVW R20,R30
                 ; 0000 0264     res |=  err;
                +
00397b 2b04     +OR R16 , R20
00397c 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0265     // --- Update Analog Input Status --- //
                 ; 0000 0266     // --- Update Communication Status --- //
                 ; 0000 0267     err =   updateCommStatus();
00397d 940e 750b 	CALL _updateCommStatus
00397f 01af      	MOVW R20,R30
                 ; 0000 0268     if(err){
003980 2e04      	MOV  R0,R20
003981 2a05      	OR   R0,R21
003982 f189      	BREQ _0xAE
                 ; 0000 0269 
                 ; 0000 026A         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
003983 940e c1c1 	CALL SUBOPT_0x39
003985 940e c1ca 	CALL SUBOPT_0x3A
003987 f029      	BREQ _0xB0
003988 940e c1c1 	CALL SUBOPT_0x39
00398a 940e e0c0 	CALL __CPD02
00398c f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 026B             TIMER_setTimer(&ETH_rst_timer,15);
00398d eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
00398e e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
00398f 940e c1d2 	CALL SUBOPT_0x3B
                 ; 0000 026C             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
003991 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
003992 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
003993 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
003994 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
003995 940e c1da 	CALL SUBOPT_0x3C
003997 940e c1da 	CALL SUBOPT_0x3C
003999 940e c11b 	CALL SUBOPT_0x21
                 ; 0000 026D         }
                 ; 0000 026E 
                 ; 0000 026F         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
00399b 940e c1c1 	CALL SUBOPT_0x39
00399d 940e 41a1 	CALL _TIMER_checkTimerExceed
00399f 30e1      	CPI  R30,LOW(0x1)
0039a0 e0a0      	LDI  R26,HIGH(0x1)
0039a1 07fa      	CPC  R31,R26
0039a2 f489      	BRNE _0xB2
                 ; 0000 0270             ETH_NORM;
0039a3 91e0 0102 	LDS  R30,258
0039a5 77ef      	ANDI R30,0x7F
0039a6 93e0 0102 	STS  258,R30
                 ; 0000 0271             ETH_reset();
0039a8 940e 60fb 	CALL _ETH_reset
                 ; 0000 0272             ETH_rst_timer = 0xFFFFFFFF;
0039aa 940e c137 	CALL SUBOPT_0x25
0039ac 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
0039ae 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
0039b0 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
0039b2 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 0273         }
                 ; 0000 0274     }
                 _0xB2:
                 ; 0000 0275     res |=  err;
                 _0xAE:
                +
0039b4 2b04     +OR R16 , R20
0039b5 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0276     // --- Update Memory Card Status --- //
                 ; 0000 0277     err =   updateMemoryStatus();
0039b6 940e 756f 	CALL _updateMemoryStatus
0039b8 01af      	MOVW R20,R30
                 ; 0000 0278     res |=  err;
                +
0039b9 2b04     +OR R16 , R20
0039ba 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0279 
                 ; 0000 027A     return res;
0039bb 01f8      	MOVW R30,R16
0039bc 940e e0d7 	CALL __LOADLOCR6
0039be 9626      	ADIW R28,6
0039bf 9508      	RET
                 ; 0000 027B }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 027E {
                 _eventCapture:
                 ; 0000 027F     int                 res=0, i=0, err=0;
                 ; 0000 0280     unsigned long int   timestamp_rd;
                 ; 0000 0281     unsigned char       statusCode;
                 ; 0000 0282 
                 ; 0000 0283     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 0284     err =   checkSendMIPAlarm(&statusCode);
0039c0 9725      	SBIW R28,5
0039c1 940e c1b2 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
0039c3 01de      	MOVW R26,R28
0039c4 9616      	ADIW R26,6
0039c5 940e 7b07 	CALL _checkSendMIPAlarm
0039c7 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 0285     res |=  err;
                 ; 0000 0286     if(err){
0039c9 f0c1      	BREQ _0xB3
                 ; 0000 0287         timestamp_rd    = DS1672_read();
0039ca 940e c1f5 	CALL SUBOPT_0x3E
                 ; 0000 0288         if(statusCode)
0039cc f029      	BREQ _0xB4
                 ; 0000 0289         {
                 ; 0000 028A             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
0039cd e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
0039ce e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
0039cf e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
0039d0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
0039d1 c004      	RJMP _0x137
                 ; 0000 028B             //printOLED("AL12%1d",i+1);
                 ; 0000 028C         }
                 ; 0000 028D         else
                 _0xB4:
                 ; 0000 028E         {
                 ; 0000 028F             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
0039d2 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
0039d3 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
0039d4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
0039d5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
0039d6 940e e05b 	CALL __PUTPARD1
0039d8 940e c1ad 	CALL SUBOPT_0x36
                 ; 0000 0290             //printOLED("AL02%1d",i+1);
                 ; 0000 0291         }
                 ; 0000 0292         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
0039da 940e c1fe 	CALL SUBOPT_0x3F
0039dc e1e0      	LDI  R30,LOW(16)
0039dd 940e c205 	CALL SUBOPT_0x40
                 ; 0000 0293         if(err < 0){
0039df f412      	BRPL _0xB6
                 ; 0000 0294             printDebug("<eventCapture> addEventQueue() failed\r\n");
0039e0 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 0295         }
                 ; 0000 0296     }
                 _0xB6:
                 ; 0000 0297 
                 ; 0000 0298     /*
                 ; 0000 0299     // -- Analog Input Event -- //
                 ; 0000 029A     // -- reserved -- //
                 ; 0000 029B     */
                 ; 0000 029C     // --------------- Check for Power Down Event --------------- //
                 ; 0000 029D     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
0039e2 01de      	MOVW R26,R28
0039e3 9616      	ADIW R26,6
0039e4 940e 7b1c 	CALL _checkSendPowerAlarm
0039e6 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 029E     res |=  err;
                 ; 0000 029F     if(err){
0039e8 f0c1      	BREQ _0xB7
                 ; 0000 02A0         timestamp_rd    = DS1672_read();
0039e9 940e c1f5 	CALL SUBOPT_0x3E
                 ; 0000 02A1         if(statusCode)
0039eb f029      	BREQ _0xB8
                 ; 0000 02A2         {
                 ; 0000 02A3             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
0039ec ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
0039ed e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
0039ee e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
0039ef e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
0039f0 c004      	RJMP _0x138
                 ; 0000 02A4             //printOLED("AL12%1d",i+1);
                 ; 0000 02A5         }
                 ; 0000 02A6         else
                 _0xB8:
                 ; 0000 02A7         {
                 ; 0000 02A8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
0039f1 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
0039f2 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
0039f3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
0039f4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
0039f5 940e e05b 	CALL __PUTPARD1
0039f7 940e c1ad 	CALL SUBOPT_0x36
                 ; 0000 02A9             //printOLED("AL02%1d",i+1);
                 ; 0000 02AA         }
                 ; 0000 02AB         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
0039f9 940e c1fe 	CALL SUBOPT_0x3F
0039fb e5e0      	LDI  R30,LOW(80)
0039fc 940e c205 	CALL SUBOPT_0x40
                 ; 0000 02AC         if(err < 0){
0039fe f412      	BRPL _0xBA
                 ; 0000 02AD             printDebug("<eventCapture> addEventQueue() failed\r\n");
0039ff 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 02AE         }
                 ; 0000 02AF     }
                 _0xBA:
                 ; 0000 02B0 
                 ; 0000 02B1     // --------------- Check for Battery Event --------------- //
                 ; 0000 02B2     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
003a01 01de      	MOVW R26,R28
003a02 9616      	ADIW R26,6
003a03 940e 7b64 	CALL _checkSendBatteryAlarm
003a05 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 02B3     res |=  err;
                 ; 0000 02B4     if(err){
003a07 f0c1      	BREQ _0xBB
                 ; 0000 02B5         timestamp_rd    = DS1672_read();
003a08 940e c1f5 	CALL SUBOPT_0x3E
                 ; 0000 02B6         if(statusCode)
003a0a f029      	BREQ _0xBC
                 ; 0000 02B7         {
                 ; 0000 02B8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
003a0b e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
003a0c e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
003a0d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
003a0e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
003a0f c004      	RJMP _0x139
                 ; 0000 02B9             //printOLED("AL12%1d",i+1);
                 ; 0000 02BA         }
                 ; 0000 02BB         else
                 _0xBC:
                 ; 0000 02BC         {
                 ; 0000 02BD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
003a10 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
003a11 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
003a12 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
003a13 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
003a14 940e e05b 	CALL __PUTPARD1
003a16 940e c1ad 	CALL SUBOPT_0x36
                 ; 0000 02BE             //printOLED("AL02%1d",i+1);
                 ; 0000 02BF         }
                 ; 0000 02C0         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
003a18 940e c1fe 	CALL SUBOPT_0x3F
003a1a e5e1      	LDI  R30,LOW(81)
003a1b 940e c205 	CALL SUBOPT_0x40
                 ; 0000 02C1         if(err < 0){
003a1d f412      	BRPL _0xBE
                 ; 0000 02C2             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a1e 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 02C3         }
                 ; 0000 02C4     }
                 _0xBE:
                 ; 0000 02C5 
                 ; 0000 02C6     // --------------- Check for Memory Event --------------- //
                 ; 0000 02C7     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
003a20 01de      	MOVW R26,R28
003a21 9616      	ADIW R26,6
003a22 940e 7bbd 	CALL _checkSendMemoryAlarm
003a24 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 02C8     res |=  err;
                 ; 0000 02C9     if(err){
003a26 f131      	BREQ _0xBF
                 ; 0000 02CA         timestamp_rd    = DS1672_read();
003a27 940e 452f 	CALL _DS1672_read
                +
003a29 83ef     +STD Y + 7 , R30
003a2a 87f8     +STD Y + 7 + 1 , R31
003a2b 8769     +STD Y + 7 + 2 , R22
003a2c 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 02CB         if(statusCode == ES_LOWMEMORY)
003a2d 81ae      	LDD  R26,Y+6
003a2e 30a1      	CPI  R26,LOW(0x1)
003a2f f429      	BRNE _0xC0
                 ; 0000 02CC         {
                 ; 0000 02CD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
003a30 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
003a31 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
003a32 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
003a33 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
003a34 c00c      	RJMP _0x13A
                 ; 0000 02CE             //printOLED("AL12%1d",i+1);
                 ; 0000 02CF         }
                 ; 0000 02D0         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
003a35 81ae      	LDD  R26,Y+6
003a36 30a2      	CPI  R26,LOW(0x2)
003a37 f429      	BRNE _0xC2
                 ; 0000 02D1         {
                 ; 0000 02D2             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
003a38 ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
003a39 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
003a3a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
003a3b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
003a3c c004      	RJMP _0x13A
                 ; 0000 02D3             //printOLED("AL12%1d",i+1);
                 ; 0000 02D4         }
                 ; 0000 02D5         else
                 _0xC2:
                 ; 0000 02D6         {
                 ; 0000 02D7             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
003a3d efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
003a3e e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
003a3f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
003a40 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
003a41 940e e05b 	CALL __PUTPARD1
003a43 940e c1ad 	CALL SUBOPT_0x36
                 ; 0000 02D8             //printOLED("AL02%1d",i+1);
                 ; 0000 02D9         }
                 ; 0000 02DA         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
003a45 940e c1fe 	CALL SUBOPT_0x3F
003a47 e7e0      	LDI  R30,LOW(112)
003a48 940e c205 	CALL SUBOPT_0x40
                 ; 0000 02DB         if(err < 0){
003a4a f412      	BRPL _0xC4
                 ; 0000 02DC             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a4b 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 02DD         }
                 ; 0000 02DE     }
                 _0xC4:
                 ; 0000 02DF 
                 ; 0000 02E0     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 02E1     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
003a4d e020     +LDI R18 , LOW ( 0 )
003a4e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
003a4f 3022     +CPI R18 , LOW ( 2 )
003a50 e0e0     +LDI R30 , HIGH ( 2 )
003a51 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003a52 f544      	BRGE _0xC7
                 ; 0000 02E2     {
                 ; 0000 02E3         if(din_config[i].channelEnable)
003a53 940e c0ca 	CALL SUBOPT_0x15
003a55 81e0      	LD   R30,Z
003a56 30e0      	CPI  R30,0
003a57 f101      	BREQ _0xC8
                 ; 0000 02E4         {
                 ; 0000 02E5             err =   checkSendDinAlarm(i,&statusCode);
003a58 940e c211 	CALL SUBOPT_0x42
003a5a 940e 7c0b 	CALL _checkSendDinAlarm
003a5c 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 02E6             res |=  err;
                 ; 0000 02E7             if(err){
003a5e f0c9      	BREQ _0xC9
                 ; 0000 02E8                 timestamp_rd    = DS1672_read();
003a5f 940e c1f5 	CALL SUBOPT_0x3E
                 ; 0000 02E9                 if(statusCode)
003a61 f029      	BREQ _0xCA
                 ; 0000 02EA                 {
                 ; 0000 02EB                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
003a62 e1ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
003a63 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
003a64 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
003a65 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
003a66 c004      	RJMP _0x13B
                 ; 0000 02EC                     //printOLED("AL12%1d",i+1);
                 ; 0000 02ED                 }
                 ; 0000 02EE                 else
                 _0xCA:
                 ; 0000 02EF                 {
                 ; 0000 02F0                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
003a67 e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
003a68 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
003a69 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
003a6a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
003a6b 940e e05b 	CALL __PUTPARD1
003a6d 940e c216 	CALL SUBOPT_0x43
                 ; 0000 02F1                     //printOLED("AL02%1d",i+1);
                 ; 0000 02F2                 }
                 ; 0000 02F3                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
003a6f 940e c1fe 	CALL SUBOPT_0x3F
003a71 2fe2      	MOV  R30,R18
003a72 6ce0      	ORI  R30,LOW(0xC0)
003a73 940e c205 	CALL SUBOPT_0x40
                 ; 0000 02F4                 if(err < 0){
003a75 f412      	BRPL _0xCC
                 ; 0000 02F5                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003a76 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 02F6                 }
                 ; 0000 02F7             }
                 _0xCC:
                 ; 0000 02F8         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02F9     }// -- for loop -- //
                 _0xC8:
                +
003a78 5f2f     +SUBI R18 , LOW ( - 1 )
003a79 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003a7a cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02FA 
                 ; 0000 02FB     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02FC     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003a7b e020     +LDI R18 , LOW ( 0 )
003a7c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
003a7d 3025     +CPI R18 , LOW ( 5 )
003a7e e0e0     +LDI R30 , HIGH ( 5 )
003a7f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003a80 f014      	BRLT PC+3
003a81 940c 3ae7 	JMP _0xCF
                 ; 0000 02FD     {
                 ; 0000 02FE         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003a83 940e c049 	CALL SUBOPT_0x4
003a85 f411      	BRNE PC+3
003a86 940c 3ae4 	JMP _0xD0
                 ; 0000 02FF         {
                 ; 0000 0300             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 0301             err =   checkSendSensorAlarm(i,&statusCode);
003a88 940e c211 	CALL SUBOPT_0x42
003a8a 940e 7c69 	CALL _checkSendSensorAlarm
003a8c 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 0302             res |=  err;
                 ; 0000 0303             if(err){
003a8e f131      	BREQ _0xD1
                 ; 0000 0304                 timestamp_rd    = DS1672_read();
003a8f 940e c1f5 	CALL SUBOPT_0x3E
                 ; 0000 0305                 if(statusCode)
003a91 f059      	BREQ _0xD2
                 ; 0000 0306                 {
                 ; 0000 0307                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
003a92 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
003a93 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
003a94 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
003a95 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
003a96 940e c21d 	CALL SUBOPT_0x44
                 ; 0000 0308                     printOLED("AL12%1d",i+1);
                +
003a98 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003a99 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003a9a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003a9b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003a9c c00a      	RJMP _0x13C
                 ; 0000 0309                 }
                 ; 0000 030A                 else
                 _0xD2:
                 ; 0000 030B                 {
                 ; 0000 030C                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
003a9d ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
003a9e e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
003a9f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
003aa0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
003aa1 940e c21d 	CALL SUBOPT_0x44
                 ; 0000 030D                     printOLED("AL02%1d",i+1);
                +
003aa3 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003aa4 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003aa5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003aa6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
003aa7 940e e05b 	CALL __PUTPARD1
003aa9 940e c220 	CALL SUBOPT_0x45
                 ; 0000 030E                 }
                 ; 0000 030F 
                 ; 0000 0310                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003aab 940e c1fe 	CALL SUBOPT_0x3F
003aad 2fe2      	MOV  R30,R18
003aae 6fe0      	ORI  R30,LOW(0xF0)
003aaf 940e c205 	CALL SUBOPT_0x40
                 ; 0000 0311                 if(err < 0){
003ab1 f412      	BRPL _0xD4
                 ; 0000 0312                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003ab2 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 0313                 }
                 ; 0000 0314             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 0315             else
003ab4 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 0316             {
                 ; 0000 0317                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
003ab5 940e c1b7 	CALL SUBOPT_0x38
003ab7 f161      	BREQ _0xD6
                 ; 0000 0318                 {
                 ; 0000 0319                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 031A                     err =   checkSendDataAlarm(i,&statusCode);
003ab8 940e c211 	CALL SUBOPT_0x42
003aba 940e 7ccd 	CALL _checkSendDataAlarm
003abc 940e c1ef 	CALL SUBOPT_0x3D
                 ; 0000 031B                     res |=  err;
                 ; 0000 031C                     if(err){
003abe f129      	BREQ _0xD7
                 ; 0000 031D                         timestamp_rd    = DS1672_read();
003abf 940e c1f5 	CALL SUBOPT_0x3E
                 ; 0000 031E                         if(statusCode)
003ac1 f059      	BREQ _0xD8
                 ; 0000 031F                         {
                 ; 0000 0320                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
003ac2 e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
003ac3 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003ac4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003ac5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003ac6 940e c21d 	CALL SUBOPT_0x44
                 ; 0000 0321                             printOLED("AL12%1d",i+1);
                +
003ac8 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003ac9 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003aca e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003acb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003acc c00a      	RJMP _0x13D
                 ; 0000 0322                         }
                 ; 0000 0323                         else
                 _0xD8:
                 ; 0000 0324                         {
                 ; 0000 0325                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
003acd e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
003ace e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
003acf e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
003ad0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
003ad1 940e c21d 	CALL SUBOPT_0x44
                 ; 0000 0326                             printOLED("AL02%1d",i+1);
                +
003ad3 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003ad4 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003ad5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003ad6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003ad7 940e e05b 	CALL __PUTPARD1
003ad9 940e c220 	CALL SUBOPT_0x45
                 ; 0000 0327                         }
                 ; 0000 0328                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003adb 940e c1fe 	CALL SUBOPT_0x3F
003add 2fe2      	MOV  R30,R18
003ade 6ee0      	ORI  R30,LOW(0xE0)
003adf 940e c205 	CALL SUBOPT_0x40
                 ; 0000 0329                         if(err < 0){
003ae1 f412      	BRPL _0xDA
                 ; 0000 032A                             printDebug("<eventCapture> addEventQueue() failed\r\n");
003ae2 940e c20c 	CALL SUBOPT_0x41
                 ; 0000 032B                         }
                 ; 0000 032C                     }
                 _0xDA:
                 ; 0000 032D                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 032E             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 032F         }// -- sensor Enable -- //
                 ; 0000 0330     }// -- for loop -- //
                 _0xD0:
                +
003ae4 5f2f     +SUBI R18 , LOW ( - 1 )
003ae5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003ae6 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 0331 
                 ; 0000 0332 
                 ; 0000 0333     return res;
003ae7 01f8      	MOVW R30,R16
003ae8 940e e0d7 	CALL __LOADLOCR6
003aea 962b      	ADIW R28,11
003aeb 9508      	RET
                 ; 0000 0334 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 033C {
                 _statusReport:
                 ; 0000 033D     int                     res = 0;
                 ; 0000 033E     unsigned long int       timestamp_rd;
                 ; 0000 033F     unsigned char           *param;
                 ; 0000 0340     int                     paramLen = 0;
                 ; 0000 0341 
                 ; 0000 0342     unsigned short          deviceState;
                 ; 0000 0343 
                 ; 0000 0344     switch (status_config.accm)
003aec 9726      	SBIW R28,6
003aed 940e c22b 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
003aef e040     +LDI R20 , LOW ( 0 )
003af0 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
003af1 91e0 1362 	LDS  R30,_status_config
003af3 940e c230 	CALL SUBOPT_0x47
                 ; 0000 0345     {
                 ; 0000 0346         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
003af5 f449      	BRNE _0xDE
                +
003af6 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
003af7 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
003af8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
003af9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
003afa 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0347                                     return -1;
003afc efef      	LDI  R30,LOW(65535)
003afd efff      	LDI  R31,HIGH(65535)
003afe c08a      	RJMP _0x20E009C
                 ; 0000 0348         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
003aff 32e0      	CPI  R30,LOW(0x20)
003b00 e0a0      	LDI  R26,HIGH(0x20)
003b01 07fa      	CPC  R31,R26
003b02 f449      	BRNE _0xDF
                +
003b03 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
003b04 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
003b05 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
003b06 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
003b07 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0349                                     return -1;
003b09 efef      	LDI  R30,LOW(65535)
003b0a efff      	LDI  R31,HIGH(65535)
003b0b c07d      	RJMP _0x20E009C
                 ; 0000 034A         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
003b0c 33e0      	CPI  R30,LOW(0x30)
003b0d e0a0      	LDI  R26,HIGH(0x30)
003b0e 07fa      	CPC  R31,R26
003b0f f011      	BREQ PC+3
003b10 940c 3b62 	JMP _0xE3
003b12 940e c235 	CALL SUBOPT_0x48
003b14 940e a51d 	CALL _malloc
003b16 019f      	MOVW R18,R30
                 ; 0000 034B                                     if(param == NULL){
003b17 2e02      	MOV  R0,R18
003b18 2a03      	OR   R0,R19
003b19 f449      	BRNE _0xE1
                 ; 0000 034C                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
003b1a efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
003b1b e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
003b1c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
003b1d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
003b1e 940e c238 	CALL SUBOPT_0x49
                 ; 0000 034D                                         return -1;
003b20 efef      	LDI  R30,LOW(65535)
003b21 efff      	LDI  R31,HIGH(65535)
003b22 c066      	RJMP _0x20E009C
                 ; 0000 034E                                     }
                 ; 0000 034F 
                 ; 0000 0350                                     res = getDeviceState(&deviceState);
                 _0xE1:
003b23 01de      	MOVW R26,R28
003b24 9616      	ADIW R26,6
003b25 940e 773c 	CALL _getDeviceState
003b27 018f      	MOVW R16,R30
                 ; 0000 0351                                     if(res<0){
003b28 2311      	TST  R17
003b29 f452      	BRPL _0xE2
                 ; 0000 0352                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
003b2a e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
003b2b e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
003b2c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
003b2d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
003b2e 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0353                                         free ( param );
003b30 01d9      	MOVW R26,R18
003b31 940e c240 	CALL SUBOPT_0x4A
                 ; 0000 0354                                         return -1;
003b33 c055      	RJMP _0x20E009C
                 ; 0000 0355                                     }
                 ; 0000 0356 
                 ; 0000 0357                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
003b34 940e c245 	CALL SUBOPT_0x4B
003b36 81ef      	LDD  R30,Y+7
003b37 70f0      	ANDI R31,HIGH(0x0)
003b38 93ec      	ST   X,R30
                 ; 0000 0358                                     param[paramLen++] = (deviceState & 0x00FF);
003b39 940e c245 	CALL SUBOPT_0x4B
003b3b 81ee      	LDD  R30,Y+6
003b3c 93ec      	ST   X,R30
                 ; 0000 0359                                     param[paramLen++] = powerSrcStatus;
003b3d 940e c24c 	CALL SUBOPT_0x4C
003b3f 91a0 147a 	LDS  R26,_powerSrcStatus
003b41 83a0      	STD  Z+0,R26
                 ; 0000 035A 
                 ; 0000 035B 
                 ; 0000 035C                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
003b42 01fa      	MOVW R30,R20
003b43 0fe2      	ADD  R30,R18
003b44 1ff3      	ADC  R31,R19
003b45 93fa      	ST   -Y,R31
003b46 93ea      	ST   -Y,R30
003b47 e8e3      	LDI  R30,LOW(_batteryVolt)
003b48 e1f4      	LDI  R31,HIGH(_batteryVolt)
003b49 940e c252 	CALL SUBOPT_0x4D
                 ; 0000 035D                                     paramLen         += sizeof(batteryVolt);
                +
003b4b 5f4c     +SUBI R20 , LOW ( - 4 )
003b4c 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 035E 
                 ; 0000 035F                                     param[paramLen++] = dinStatus[0];
003b4d 940e c24c 	CALL SUBOPT_0x4C
003b4f 91a0 147c 	LDS  R26,_dinStatus
003b51 83a0      	STD  Z+0,R26
                 ; 0000 0360                                     param[paramLen++] = dinStatus[1];
003b52 940e c24c 	CALL SUBOPT_0x4C
                +
003b54 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003b56 83a0      	STD  Z+0,R26
                 ; 0000 0361                                     param[paramLen++] = doutStatus[0];
003b57 940e c24c 	CALL SUBOPT_0x4C
003b59 91a0 147e 	LDS  R26,_doutStatus
003b5b 83a0      	STD  Z+0,R26
                 ; 0000 0362                                     param[paramLen++] = doutStatus[1];
003b5c 940e c24c 	CALL SUBOPT_0x4C
                +
003b5e 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
003b60 83a0      	STD  Z+0,R26
                 ; 0000 0363 
                 ; 0000 0364                                     break;
003b61 c00d      	RJMP _0xDD
                 ; 0000 0365         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
003b62 e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
003b63 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
003b64 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
003b65 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
003b66 940e e05b 	CALL __PUTPARD1
003b68 91e0 1362 	LDS  R30,_status_config
003b6a 940e c156 	CALL SUBOPT_0x29
                 ; 0000 0366                                     return -1;
003b6c efef      	LDI  R30,LOW(65535)
003b6d efff      	LDI  R31,HIGH(65535)
003b6e c01a      	RJMP _0x20E009C
                 ; 0000 0367     }
                 _0xDD:
                 ; 0000 0368 
                 ; 0000 0369     timestamp_rd = DS1672_read();
003b6f 940e c258 	CALL SUBOPT_0x4E
                 ; 0000 036A 
                 ; 0000 036B     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
003b71 940e c25f 	CALL SUBOPT_0x4F
003b73 940e e05b 	CALL __PUTPARD1
003b75 91e0 1362 	LDS  R30,_status_config
003b77 93ea      	ST   -Y,R30
003b78 933a      	ST   -Y,R19
003b79 932a      	ST   -Y,R18
003b7a 01da      	MOVW R26,R20
003b7b 940e 5400 	CALL _ETH_sendStatusReportCmd
003b7d 018f      	MOVW R16,R30
                 ; 0000 036C     if(res < 0)
003b7e 2311      	TST  R17
003b7f f432      	BRPL _0xE4
                 ; 0000 036D     {
                 ; 0000 036E         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
003b80 e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
003b81 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
003b82 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
003b83 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
003b84 940e c042 	CALL SUBOPT_0x3
                 ; 0000 036F     }
                 ; 0000 0370 
                 ; 0000 0371     free ( param );
                 _0xE4:
003b86 01d9      	MOVW R26,R18
003b87 940e a538 	CALL _free
                 ; 0000 0372 }
                 _0x20E009C:
003b89 940e e0d7 	CALL __LOADLOCR6
003b8b 962c      	ADIW R28,12
003b8c 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0375 {
                 _sensorDataReport:
                 ; 0000 0376     int                     count = 0;
                 ; 0000 0377     int                     res;
                 ; 0000 0378     unsigned long int       timestamp;
                 ; 0000 0379     unsigned int            channel;
                 ; 0000 037A     float                   value;
                 ; 0000 037B 
                 ; 0000 037C     // -- for debug -- //
                 ; 0000 037D     //struct rtc_structure    dt;
                 ; 0000 037E     // --------------- //
                 ; 0000 037F     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 0380 
                 ; 0000 0381     while (count < MAX_DATA_QUEUE)
003b8d 9728      	SBIW R28,8
003b8e 940e c22b 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
003b90 300a     +CPI R16 , LOW ( 10 )
003b91 e0e0     +LDI R30 , HIGH ( 10 )
003b92 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003b93 f014      	BRLT PC+3
003b94 940c 3bdc 	JMP _0xE7
                 ; 0000 0382     {
                 ; 0000 0383         res = fetchDataQueue(&timestamp, &channel, &value);
003b96 01fe      	MOVW R30,R28
003b97 963a      	ADIW R30,10
003b98 93fa      	ST   -Y,R31
003b99 93ea      	ST   -Y,R30
003b9a b7ed      	IN   R30,SPL
003b9b b7fe      	IN   R31,SPH
003b9c 9731      	SBIW R30,1
003b9d 93fa      	ST   -Y,R31
003b9e 93ea      	ST   -Y,R30
003b9f 935f      	PUSH R21
003ba0 934f      	PUSH R20
003ba1 01de      	MOVW R26,R28
003ba2 961a      	ADIW R26,10
003ba3 940e 747d 	CALL _fetchDataQueue
003ba5 914f      	POP  R20
003ba6 915f      	POP  R21
003ba7 019f      	MOVW R18,R30
                 ; 0000 0384         if(res < 0)
003ba8 2333      	TST  R19
003ba9 f192      	BRMI _0xE7
                 ; 0000 0385         {
                 ; 0000 0386             break;
                 ; 0000 0387         }
                 ; 0000 0388         else
                 ; 0000 0389         {
                 ; 0000 038A             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003baa eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
003bab e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
003bac e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
003bad e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
003bae 940e c264 	CALL SUBOPT_0x50
003bb0 01fa      	MOVW R30,R20
003bb1 940e c1a4 	CALL SUBOPT_0x34
003bb3 940e c26d 	CALL SUBOPT_0x51
                 ; 0000 038B             /*
                 ; 0000 038C             binary_to_date(timestamp, &dt);
                 ; 0000 038D             printRTC(dt);
                 ; 0000 038E             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 038F             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 0390             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 0391             */
                 ; 0000 0392 
                 ; 0000 0393             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003bb5 940e c278 	CALL SUBOPT_0x52
003bb7 940e e0c0 	CALL __CPD02
003bb9 f039      	BREQ _0xEB
003bba 940e c27d 	CALL SUBOPT_0x53
003bbc f021      	BREQ _0xEB
                +
003bbd 3045     +CPI R20 , LOW ( 5 )
003bbe e0e0     +LDI R30 , HIGH ( 5 )
003bbf 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003bc0 f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 0394             {
                 ; 0000 0395                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003bc1 ecef     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003bc2 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003bc3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003bc4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003bc5 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0396                 continue;
003bc7 cfc8      	RJMP _0xE5
                 ; 0000 0397             }
                 ; 0000 0398 
                 ; 0000 0399 
                 ; 0000 039A             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003bc8 e0e0      	LDI  R30,LOW(0)
003bc9 940e c27f 	CALL SUBOPT_0x54
003bcb 935a      	ST   -Y,R21
003bcc 934a      	ST   -Y,R20
003bcd 940e c287 	CALL SUBOPT_0x55
003bcf 019f      	MOVW R18,R30
                 ; 0000 039B             if(res < 0)
003bd0 2333      	TST  R19
003bd1 f43a      	BRPL _0xED
                 ; 0000 039C             {
                 ; 0000 039D                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003bd2 e0ed     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003bd3 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003bd4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003bd5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003bd6 940e c042 	CALL SUBOPT_0x3
                 ; 0000 039E                 // --- Keep in Log --- //
                 ; 0000 039F                 continue;
003bd8 cfb7      	RJMP _0xE5
                 ; 0000 03A0             }
                 ; 0000 03A1             count++;
                 _0xED:
                +
003bd9 5f0f     +SUBI R16 , LOW ( - 1 )
003bda 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03A2         }
                 ; 0000 03A3 
                 ; 0000 03A4     }
003bdb cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 03A5 
                 ; 0000 03A6     return count;
003bdc 01f8      	MOVW R30,R16
003bdd 940e e0d7 	CALL __LOADLOCR6
003bdf 962e      	ADIW R28,14
003be0 9508      	RET
                 ; 0000 03A7 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 03AA {
                 _eventReport:
                 ; 0000 03AB     int                     count = 0;
                 ; 0000 03AC     int                     res;
                 ; 0000 03AD     unsigned long int       timestamp;
                 ; 0000 03AE     unsigned char           eventID;
                 ; 0000 03AF     unsigned char           eventStatus;
                 ; 0000 03B0 
                 ; 0000 03B1     // -- for debug -- //
                 ; 0000 03B2     //struct rtc_structure    dt;
                 ; 0000 03B3     // --------------- //
                 ; 0000 03B4     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 03B5 
                 ; 0000 03B6     while (count < MAX_EVENT_QUEUE)
003be1 9724      	SBIW R28,4
003be2 940e c22b 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003be4 3104     +CPI R16 , LOW ( 20 )
003be5 e0e0     +LDI R30 , HIGH ( 20 )
003be6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003be7 f014      	BRLT PC+3
003be8 940c 3c2b 	JMP _0xF0
                 ; 0000 03B7     {
                 ; 0000 03B8         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003bea 940e c28d 	CALL SUBOPT_0x56
003bec b7ed      	IN   R30,SPL
003bed b7fe      	IN   R31,SPH
003bee 93fa      	ST   -Y,R31
003bef 93ea      	ST   -Y,R30
003bf0 935f      	PUSH R21
003bf1 b7ad      	IN   R26,SPL
003bf2 b7be      	IN   R27,SPH
003bf3 934f      	PUSH R20
003bf4 940e 77e1 	CALL _fetchEventQueue
003bf6 914f      	POP  R20
003bf7 915f      	POP  R21
003bf8 019f      	MOVW R18,R30
                 ; 0000 03B9         if(res < 0)
003bf9 2333      	TST  R19
003bfa f182      	BRMI _0xF0
                 ; 0000 03BA         {
                 ; 0000 03BB             break;
                 ; 0000 03BC         }
                 ; 0000 03BD         else
                 ; 0000 03BE         {
                 ; 0000 03BF 
                 ; 0000 03C0             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003bfb e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
003bfc e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
003bfd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
003bfe e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
003bff 940e c292 	CALL SUBOPT_0x57
003c01 940e e05b 	CALL __PUTPARD1
003c03 940e c299 	CALL SUBOPT_0x58
                 ; 0000 03C1             /*
                 ; 0000 03C2             binary_to_date(timestamp, &dt);
                 ; 0000 03C3             printRTC(dt);
                 ; 0000 03C4             */
                 ; 0000 03C5 
                 ; 0000 03C6             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003c05 940e c2aa 	CALL SUBOPT_0x59
003c07 940e e0c0 	CALL __CPD02
003c09 f029      	BREQ _0xF4
003c0a 940e c2aa 	CALL SUBOPT_0x59
003c0c 940e c1ca 	CALL SUBOPT_0x3A
003c0e f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 03C7             {
                 ; 0000 03C8                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c0f e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003c10 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003c11 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003c12 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003c13 940e c042 	CALL SUBOPT_0x3
                 ; 0000 03C9                 continue;
003c15 cfce      	RJMP _0xEE
                 ; 0000 03CA             }
                 ; 0000 03CB 
                 ; 0000 03CC 
                 ; 0000 03CD             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003c16 e0e0      	LDI  R30,LOW(0)
003c17 93ea      	ST   -Y,R30
003c18 940e c1fe 	CALL SUBOPT_0x3F
003c1a 935a      	ST   -Y,R21
003c1b 2fa4      	MOV  R26,R20
003c1c 940e 544f 	CALL _ETH_sendEventReportCmd
003c1e 019f      	MOVW R18,R30
                 ; 0000 03CE             if(res < 0)
003c1f 2333      	TST  R19
003c20 f43a      	BRPL _0xF6
                 ; 0000 03CF             {
                 ; 0000 03D0                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003c21 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003c22 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003c23 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003c24 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003c25 940e c042 	CALL SUBOPT_0x3
                 ; 0000 03D1                 // --- Keep in Log --- //
                 ; 0000 03D2                 continue;
003c27 cfbc      	RJMP _0xEE
                 ; 0000 03D3             }
                 ; 0000 03D4             count++;
                 _0xF6:
                +
003c28 5f0f     +SUBI R16 , LOW ( - 1 )
003c29 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03D5         }
                 ; 0000 03D6     }
003c2a cfb9      	RJMP _0xEE
                 _0xF0:
                 ; 0000 03D7 
                 ; 0000 03D8     return count;
003c2b 01f8      	MOVW R30,R16
003c2c 940e e0d7 	CALL __LOADLOCR6
003c2e 962a      	ADIW R28,10
003c2f 9508      	RET
                 ; 0000 03D9 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 03E1 {
                 _sensorDataSave:
                 ; 0000 03E2     FIL                     file;
                 ; 0000 03E3     char                    isFileOpen = 0;
                 ; 0000 03E4     int                     count = 0;
                 ; 0000 03E5     int                     res;
                 ; 0000 03E6     unsigned long int       timestamp;
                 ; 0000 03E7     unsigned int            channel;
                 ; 0000 03E8     float                   value;
                 ; 0000 03E9 
                 ; 0000 03EA 
                 ; 0000 03EB     // -- for debug -- //
                 ; 0000 03EC     //struct rtc_structure    dt;
                 ; 0000 03ED     // --------------- //
                 ; 0000 03EE 
                 ; 0000 03EF     while (count < MAX_DATA_QUEUE)
003c30 97aa      	SBIW R28,42
003c31 50d2      	SUBI R29,2
003c32 940e e0d0 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003c34 e010      	LDI  R17,0
                +
003c35 e020     +LDI R18 , LOW ( 0 )
003c36 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003c37 302a     +CPI R18 , LOW ( 10 )
003c38 e0e0     +LDI R30 , HIGH ( 10 )
003c39 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
003c3a f014      	BRLT PC+3
003c3b 940c 3c94 	JMP _0xF9
                 ; 0000 03F0     {
                 ; 0000 03F1         res = fetchDataQueue(&timestamp, &channel, &value);
003c3d 940e c2af 	CALL SUBOPT_0x5A
003c3f 940e c2af 	CALL SUBOPT_0x5A
003c41 01de      	MOVW R26,R28
003c42 961a      	ADIW R26,10
003c43 940e 747d 	CALL _fetchDataQueue
003c45 01af      	MOVW R20,R30
                 ; 0000 03F2         if(res < 0)
003c46 2355      	TST  R21
003c47 f40a      	BRPL _0xFA
                 ; 0000 03F3         {
                 ; 0000 03F4             break;
003c48 c04b      	RJMP _0xF9
                 ; 0000 03F5         }
                 ; 0000 03F6         else
                 _0xFA:
                 ; 0000 03F7         {
                 ; 0000 03F8             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003c49 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
003c4a e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
003c4b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
003c4c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
003c4d 940e c2b4 	CALL SUBOPT_0x5B
003c4f 89ea      	LDD  R30,Y+18
003c50 89fb      	LDD  R31,Y+18+1
003c51 940e c1a4 	CALL SUBOPT_0x34
003c53 940e c26d 	CALL SUBOPT_0x51
                 ; 0000 03F9             /*
                 ; 0000 03FA             binary_to_date(timestamp, &dt);
                 ; 0000 03FB             printRTC(dt);
                 ; 0000 03FC             */
                 ; 0000 03FD 
                 ; 0000 03FE             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003c55 940e c088 	CALL SUBOPT_0xB
003c57 940e e0c0 	CALL __CPD02
003c59 f039      	BREQ _0xFD
003c5a 940e c2ba 	CALL SUBOPT_0x5C
003c5c f021      	BREQ _0xFD
003c5d 85aa      	LDD  R26,Y+10
003c5e 85bb      	LDD  R27,Y+10+1
003c5f 9715      	SBIW R26,5
003c60 f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03FF             {
                 ; 0000 0400                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c61 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
003c62 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
003c63 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
003c64 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
003c65 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0401                 continue;
003c67 cfcf      	RJMP _0xF7
                 ; 0000 0402             }
                 ; 0000 0403 
                 ; 0000 0404             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0405             if(!isFileOpen)
                 _0xFC:
003c68 3010      	CPI  R17,0
003c69 f489      	BRNE _0xFF
                 ; 0000 0406             {
                 ; 0000 0407                 res = LOG_openFile(&file,LOGFILE_DATA);
003c6a 940e c2bc 	CALL SUBOPT_0x5D
003c6c 940e c2c1 	CALL SUBOPT_0x5E
003c6e 01af      	MOVW R20,R30
                 ; 0000 0408                 if(res < 0)
003c6f 2355      	TST  R21
003c70 f44a      	BRPL _0x100
                 ; 0000 0409                 {
                 ; 0000 040A                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
003c71 e3ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
003c72 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
003c73 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
003c74 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
003c75 940e c2cc 	CALL SUBOPT_0x5F
003c77 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 040B                     continue;
003c79 cfbd      	RJMP _0xF7
                 ; 0000 040C                 }
                 ; 0000 040D                 isFileOpen = 1;
                 _0x100:
003c7a e011      	LDI  R17,LOW(1)
                 ; 0000 040E             }
                 ; 0000 040F 
                 ; 0000 0410             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
003c7b 940e c2bc 	CALL SUBOPT_0x5D
003c7d 940e c2d1 	CALL SUBOPT_0x60
003c7f 940e e05b 	CALL __PUTPARD1
003c81 89e8      	LDD  R30,Y+16
003c82 89f9      	LDD  R31,Y+16+1
003c83 93fa      	ST   -Y,R31
003c84 93ea      	ST   -Y,R30
003c85 940e c2d6 	CALL SUBOPT_0x61
003c87 01af      	MOVW R20,R30
                 ; 0000 0411             if(res < 0)
003c88 2355      	TST  R21
003c89 f43a      	BRPL _0x101
                 ; 0000 0412             {
                 ; 0000 0413                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
003c8a e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
003c8b e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
003c8c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
003c8d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
003c8e 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0414                 continue;
003c90 cfa6      	RJMP _0xF7
                 ; 0000 0415             }
                 ; 0000 0416             count++;
                 _0x101:
                +
003c91 5f2f     +SUBI R18 , LOW ( - 1 )
003c92 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0417         }
                 ; 0000 0418     }
003c93 cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 0419 
                 ; 0000 041A     if(isFileOpen)
003c94 3010      	CPI  R17,0
003c95 f071      	BREQ _0x102
                 ; 0000 041B     {
                 ; 0000 041C         res = LOG_closeFile(&file);
003c96 01de      	MOVW R26,R28
003c97 9650      	ADIW R26,16
003c98 940e c2dc 	CALL SUBOPT_0x62
                 ; 0000 041D         if(res < 0)
003c9a f44a      	BRPL _0x103
                 ; 0000 041E         {
                 ; 0000 041F             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
003c9b eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
003c9c e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
003c9d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
003c9e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
003c9f 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0420             return -1;
003ca1 efef      	LDI  R30,LOW(65535)
003ca2 efff      	LDI  R31,HIGH(65535)
003ca3 c00b      	RJMP _0x20E009B
                 ; 0000 0421         }
                 ; 0000 0422     }
                 _0x103:
                 ; 0000 0423 
                 ; 0000 0424     if(count > 0){
                 _0x102:
003ca4 2400      	CLR  R0
003ca5 1602      	CP   R0,R18
003ca6 0603      	CPC  R0,R19
003ca7 f434      	BRGE _0x104
                 ; 0000 0425         //isDataLogEmpty  = 0;
                 ; 0000 0426         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
003ca8 eced     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
003ca9 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
003caa e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
003cab e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
003cac 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0427     }
                 ; 0000 0428 
                 ; 0000 0429     return count;
                 _0x104:
003cae 01f9      	MOVW R30,R18
                 _0x20E009B:
003caf 940e e0d7 	CALL __LOADLOCR6
003cb1 96e0      	ADIW R28,48
003cb2 5fde      	SUBI R29,-2
003cb3 9508      	RET
                 ; 0000 042A }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 042D {
                 _eventSave:
                 ; 0000 042E     FIL                     file;
                 ; 0000 042F     char                    isFileOpen = 0;
                 ; 0000 0430     int                     count = 0;
                 ; 0000 0431     int                     res;
                 ; 0000 0432     unsigned long int       timestamp;
                 ; 0000 0433     unsigned char           eventID;
                 ; 0000 0434     unsigned char           eventStatus;
                 ; 0000 0435 
                 ; 0000 0436     // -- for debug -- //
                 ; 0000 0437     //struct rtc_structure    dt;
                 ; 0000 0438     // --------------- //
                 ; 0000 0439 
                 ; 0000 043A     while (count < MAX_EVENT_QUEUE)
003cb4 97a5      	SBIW R28,37
003cb5 50d2      	SUBI R29,2
003cb6 940e e0d0 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
003cb8 e010      	LDI  R17,0
                +
003cb9 e020     +LDI R18 , LOW ( 0 )
003cba e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
003cbb 3124     +CPI R18 , LOW ( 20 )
003cbc e0e0     +LDI R30 , HIGH ( 20 )
003cbd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003cbe f014      	BRLT PC+3
003cbf 940c 3d1c 	JMP _0x107
                 ; 0000 043B     {
                 ; 0000 043C         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003cc1 940e c2e7 	CALL SUBOPT_0x63
003cc3 b7ed      	IN   R30,SPL
003cc4 b7fe      	IN   R31,SPH
003cc5 93fa      	ST   -Y,R31
003cc6 93ea      	ST   -Y,R30
003cc7 930f      	PUSH R16
003cc8 01de      	MOVW R26,R28
003cc9 961a      	ADIW R26,10
003cca 940e 77e1 	CALL _fetchEventQueue
003ccc 910f      	POP  R16
003ccd 01af      	MOVW R20,R30
                 ; 0000 043D         if(res < 0)
003cce 2355      	TST  R21
003ccf f40a      	BRPL _0x108
                 ; 0000 043E         {
                 ; 0000 043F             break;
003cd0 c04b      	RJMP _0x107
                 ; 0000 0440         }
                 ; 0000 0441         else
                 _0x108:
                 ; 0000 0442         {
                 ; 0000 0443             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003cd1 efe6     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003cd2 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003cd3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003cd4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003cd5 940e e05b 	CALL __PUTPARD1
003cd7 940e c2ec 	CALL SUBOPT_0x64
003cd9 2fe0      	MOV  R30,R16
003cda 940e c2f3 	CALL SUBOPT_0x65
003cdc 89ea      	LDD  R30,Y+18
003cdd 940e c2f3 	CALL SUBOPT_0x65
003cdf 940e c2f9 	CALL SUBOPT_0x66
                 ; 0000 0444             /*
                 ; 0000 0445             binary_to_date(timestamp, &dt);
                 ; 0000 0446             printRTC(dt);
                 ; 0000 0447             */
                 ; 0000 0448 
                 ; 0000 0449             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003ce1 940e c2fe 	CALL SUBOPT_0x67
003ce3 940e e0c0 	CALL __CPD02
003ce5 f029      	BREQ _0x10B
003ce6 940e c2fe 	CALL SUBOPT_0x67
003ce8 940e c1ca 	CALL SUBOPT_0x3A
003cea f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 044A             {
                 ; 0000 044B                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003ceb e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003cec e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003ced e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003cee e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003cef 940e c042 	CALL SUBOPT_0x3
                 ; 0000 044C                 continue;
003cf1 cfc9      	RJMP _0x105
                 ; 0000 044D             }
                 ; 0000 044E 
                 ; 0000 044F             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0450             if(!isFileOpen)
                 _0x10A:
003cf2 3010      	CPI  R17,0
003cf3 f489      	BRNE _0x10D
                 ; 0000 0451             {
                 ; 0000 0452                 res = LOG_openFile(&file,LOGFILE_EVENT);
003cf4 940e c303 	CALL SUBOPT_0x68
003cf6 940e c308 	CALL SUBOPT_0x69
003cf8 01af      	MOVW R20,R30
                 ; 0000 0453                 if(res < 0)
003cf9 2355      	TST  R21
003cfa f44a      	BRPL _0x10E
                 ; 0000 0454                 {
                 ; 0000 0455                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003cfb e5ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003cfc e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003cfd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003cfe e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003cff 940e c313 	CALL SUBOPT_0x6A
003d01 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 0456                     continue;
003d03 cfb7      	RJMP _0x105
                 ; 0000 0457                 }
                 ; 0000 0458                 isFileOpen = 1;
                 _0x10E:
003d04 e011      	LDI  R17,LOW(1)
                 ; 0000 0459             }
                 ; 0000 045A 
                 ; 0000 045B             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003d05 940e c303 	CALL SUBOPT_0x68
003d07 940e c318 	CALL SUBOPT_0x6B
003d09 940e e05b 	CALL __PUTPARD1
003d0b 930a      	ST   -Y,R16
003d0c 85ad      	LDD  R26,Y+13
003d0d 940e 8359 	CALL _LOG_insertEvent
003d0f 01af      	MOVW R20,R30
                 ; 0000 045C             if(res < 0)
003d10 2355      	TST  R21
003d11 f43a      	BRPL _0x10F
                 ; 0000 045D             {
                 ; 0000 045E                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003d12 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003d13 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003d14 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003d15 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003d16 940e c042 	CALL SUBOPT_0x3
                 ; 0000 045F                 continue;
003d18 cfa2      	RJMP _0x105
                 ; 0000 0460             }
                 ; 0000 0461             count++;
                 _0x10F:
                +
003d19 5f2f     +SUBI R18 , LOW ( - 1 )
003d1a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0462         }
                 ; 0000 0463     }
003d1b cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 0464 
                 ; 0000 0465     if(isFileOpen)
003d1c 3010      	CPI  R17,0
003d1d f071      	BREQ _0x110
                 ; 0000 0466     {
                 ; 0000 0467         res = LOG_closeFile(&file);
003d1e 01de      	MOVW R26,R28
003d1f 961b      	ADIW R26,11
003d20 940e c2dc 	CALL SUBOPT_0x62
                 ; 0000 0468         if(res < 0)
003d22 f44a      	BRPL _0x111
                 ; 0000 0469         {
                 ; 0000 046A             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003d23 ebed     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003d24 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003d25 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003d26 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003d27 940e c042 	CALL SUBOPT_0x3
                 ; 0000 046B             return -1;
003d29 efef      	LDI  R30,LOW(65535)
003d2a efff      	LDI  R31,HIGH(65535)
003d2b c00b      	RJMP _0x20E009A
                 ; 0000 046C         }
                 ; 0000 046D     }
                 _0x111:
                 ; 0000 046E 
                 ; 0000 046F     if(count > 0){
                 _0x110:
003d2c 2400      	CLR  R0
003d2d 1602      	CP   R0,R18
003d2e 0603      	CPC  R0,R19
003d2f f434      	BRGE _0x112
                 ; 0000 0470         //isEventLogEmpty    = 0;
                 ; 0000 0471         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003d30 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003d31 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003d32 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003d33 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003d34 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0472     }
                 ; 0000 0473 
                 ; 0000 0474     return count;
                 _0x112:
003d36 01f9      	MOVW R30,R18
                 _0x20E009A:
003d37 940e e0d7 	CALL __LOADLOCR6
003d39 96ab      	ADIW R28,43
003d3a 5fde      	SUBI R29,-2
003d3b 9508      	RET
                 ; 0000 0475 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0478 {
                 _logReport:
                 ; 0000 0479     FIL                     file;
                 ; 0000 047A     int                     res;
                 ; 0000 047B     unsigned long int       index;
                 ; 0000 047C     unsigned long int       timestamp;
                 ; 0000 047D     unsigned int            channel;
                 ; 0000 047E     float                   value;
                 ; 0000 047F     unsigned char           id;
                 ; 0000 0480     unsigned char           status;
                 ; 0000 0481 
                 ; 0000 0482     // -- send data log if any exist -- //
                 ; 0000 0483     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003d3c 97ac      	SBIW R28,44
003d3d 50d2      	SUBI R29,2
003d3e 940e e0d0 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003d40 91e0 14dd 	LDS  R30,_isDataLogEmpty
003d42 30e0      	CPI  R30,0
003d43 f421      	BRNE _0x114
003d44 91a0 1426 	LDS  R26,_logDataWait
003d46 30a0      	CPI  R26,LOW(0x0)
003d47 f009      	BREQ _0x115
                 _0x114:
003d48 c091      	RJMP _0x113
                 _0x115:
                 ; 0000 0484     {
                 ; 0000 0485         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003d49 e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003d4a e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003d4b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003d4c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003d4d 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0486         res = LOG_openFile(&file,LOGFILE_DATA);
003d4f 940e c31d 	CALL SUBOPT_0x6C
003d51 940e c2c1 	CALL SUBOPT_0x5E
003d53 018f      	MOVW R16,R30
                 ; 0000 0487         if(res < 0)
003d54 2311      	TST  R17
003d55 f44a      	BRPL _0x116
                 ; 0000 0488         {
                 ; 0000 0489             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003d56 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003d57 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003d58 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003d59 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003d5a 940e c2cc 	CALL SUBOPT_0x5F
003d5c 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 048A         }
                 ; 0000 048B         else
003d5e c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 048C         {
                 ; 0000 048D             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003d5f 940e c31d 	CALL SUBOPT_0x6C
003d61 940e c2af 	CALL SUBOPT_0x5A
003d63 b7ed      	IN   R30,SPL
003d64 b7fe      	IN   R31,SPH
003d65 9731      	SBIW R30,1
003d66 93fa      	ST   -Y,R31
003d67 93ea      	ST   -Y,R30
003d68 933f      	PUSH R19
003d69 932f      	PUSH R18
003d6a 940e c2af 	CALL SUBOPT_0x5A
003d6c 01de      	MOVW R26,R28
003d6d 9656      	ADIW R26,22
003d6e 940e 82be 	CALL _LOG_readData
003d70 912f      	POP  R18
003d71 913f      	POP  R19
003d72 018f      	MOVW R16,R30
                 ; 0000 048E             if(res < 0)
003d73 2311      	TST  R17
003d74 f44a      	BRPL _0x118
                 ; 0000 048F             {
                 ; 0000 0490                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003d75 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003d76 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003d77 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003d78 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003d79 940e c2cc 	CALL SUBOPT_0x5F
003d7b 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 0491             }
                 ; 0000 0492             else if(res == 0)
003d7d c053      	RJMP _0x119
                 _0x118:
003d7e 2e00      	MOV  R0,R16
003d7f 2a01      	OR   R0,R17
003d80 f439      	BRNE _0x11A
                 ; 0000 0493             {
                 ; 0000 0494                 //isDataLogEmpty      = 1;
                 ; 0000 0495                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003d81 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003d82 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003d83 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003d84 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003d85 940e c042 	CALL SUBOPT_0x3
                 ; 0000 0496             }
                 ; 0000 0497             else
003d87 c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0498             {
                 ; 0000 0499                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003d88 940e c322 	CALL SUBOPT_0x6D
003d8a f039      	BREQ _0x11D
003d8b 940e c27d 	CALL SUBOPT_0x53
003d8d f021      	BREQ _0x11D
                +
003d8e 3025     +CPI R18 , LOW ( 5 )
003d8f e0e0     +LDI R30 , HIGH ( 5 )
003d90 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003d91 f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 049A                 {
                 ; 0000 049B                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003d92 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003d93 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003d94 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003d95 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003d96 940e c2cc 	CALL SUBOPT_0x5F
003d98 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 049C                 }
                 ; 0000 049D                 else
003d9a c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 049E                 {
                 ; 0000 049F                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003d9b ecec     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003d9c e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003d9d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003d9e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003d9f 940e c264 	CALL SUBOPT_0x50
003da1 01f9      	MOVW R30,R18
003da2 940e c1a4 	CALL SUBOPT_0x34
003da4 940e c26d 	CALL SUBOPT_0x51
                 ; 0000 04A0                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003da6 e0e1      	LDI  R30,LOW(1)
003da7 940e c27f 	CALL SUBOPT_0x54
003da9 933a      	ST   -Y,R19
003daa 932a      	ST   -Y,R18
003dab 940e c287 	CALL SUBOPT_0x55
003dad 018f      	MOVW R16,R30
                 ; 0000 04A1                     if(res < 0)
003dae 2311      	TST  R17
003daf f44a      	BRPL _0x120
                 ; 0000 04A2                     {
                 ; 0000 04A3                         logDataWait.frameID    = 0;
003db0 940e c326 	CALL SUBOPT_0x6E
                 ; 0000 04A4                         logDataWait.logID      = 0;
                 ; 0000 04A5                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003db2 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003db3 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003db4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003db5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003db6 940e c042 	CALL SUBOPT_0x3
                 ; 0000 04A6                     }
                 ; 0000 04A7                     else
003db8 c018      	RJMP _0x121
                 _0x120:
                 ; 0000 04A8                     {
                 ; 0000 04A9                         logDataWait.logID       = index;
003db9 940e c2d1 	CALL SUBOPT_0x60
                +
003dbb 93e0 1427+STS _logDataWait + ( 1 ) , R30
003dbd 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003dbf 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003dc1 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 04AA                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003dc3 e3e0     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003dc4 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003dc5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003dc6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003dc7 940e e05b 	CALL __PUTPARD1
003dc9 91e0 1426 	LDS  R30,_logDataWait
003dcb 940e c2f3 	CALL SUBOPT_0x65
003dcd 940e c336 	CALL SUBOPT_0x6F
003dcf 940e c11b 	CALL SUBOPT_0x21
                 ; 0000 04AB                     }
                 _0x121:
                 ; 0000 04AC                 }
                 _0x11F:
                 ; 0000 04AD             }
                 _0x11B:
                 _0x119:
                 ; 0000 04AE 
                 ; 0000 04AF             res = LOG_closeFile(&file);
003dd1 940e c33f 	CALL SUBOPT_0x70
                 ; 0000 04B0             if(res < 0)
003dd3 f432      	BRPL _0x122
                 ; 0000 04B1             {
                 ; 0000 04B2                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003dd4 e6e9     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003dd5 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003dd6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003dd7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003dd8 940e c042 	CALL SUBOPT_0x3
                 ; 0000 04B3             }
                 ; 0000 04B4         }
                 _0x122:
                 _0x117:
                 ; 0000 04B5     }
                 ; 0000 04B6 
                 ; 0000 04B7     // -- send event log if any exist -- //
                 ; 0000 04B8     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003dda 91e0 14de 	LDS  R30,_isEventLogEmpty
003ddc 30e0      	CPI  R30,0
003ddd f421      	BRNE _0x124
003dde 91a0 142b 	LDS  R26,_logEventWait
003de0 30a0      	CPI  R26,LOW(0x0)
003de1 f009      	BREQ _0x125
                 _0x124:
003de2 c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 04B9     {
                 ; 0000 04BA         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003de3 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003de4 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003de5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003de6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003de7 940e c042 	CALL SUBOPT_0x3
                 ; 0000 04BB         res = LOG_openFile(&file,LOGFILE_EVENT);
003de9 940e c31d 	CALL SUBOPT_0x6C
003deb 940e c308 	CALL SUBOPT_0x69
003ded 018f      	MOVW R16,R30
                 ; 0000 04BC         if(res < 0)
003dee 2311      	TST  R17
003def f42a      	BRPL _0x126
                 ; 0000 04BD         {
                 ; 0000 04BE             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003df0 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003df1 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003df2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003df3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003df4 c071      	RJMP _0x13E
                 ; 0000 04BF         }
                 ; 0000 04C0         else
                 _0x126:
                 ; 0000 04C1         {
                 ; 0000 04C2             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003df5 940e c31d 	CALL SUBOPT_0x6C
003df7 940e c2af 	CALL SUBOPT_0x5A
003df9 b7ed      	IN   R30,SPL
003dfa b7fe      	IN   R31,SPH
003dfb 93fa      	ST   -Y,R31
003dfc 93ea      	ST   -Y,R30
003dfd 935f      	PUSH R21
003dfe b7ed      	IN   R30,SPL
003dff b7fe      	IN   R31,SPH
003e00 93fa      	ST   -Y,R31
003e01 93ea      	ST   -Y,R30
003e02 934f      	PUSH R20
003e03 01de      	MOVW R26,R28
003e04 9656      	ADIW R26,22
003e05 940e 83e5 	CALL _LOG_readEvent
003e07 914f      	POP  R20
003e08 915f      	POP  R21
003e09 018f      	MOVW R16,R30
                 ; 0000 04C3             if(res < 0)
003e0a 2311      	TST  R17
003e0b f43a      	BRPL _0x128
                 ; 0000 04C4             {
                 ; 0000 04C5                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003e0c ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003e0d e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003e0e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003e0f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003e10 940e c042 	CALL SUBOPT_0x3
                 ; 0000 04C6             }
                 ; 0000 04C7             else if(res == 0)
003e12 c04c      	RJMP _0x129
                 _0x128:
003e13 2e00      	MOV  R0,R16
003e14 2a01      	OR   R0,R17
003e15 f439      	BRNE _0x12A
                 ; 0000 04C8             {
                 ; 0000 04C9                 //isEventLogEmpty     = 1;
                 ; 0000 04CA                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003e16 ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003e17 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003e18 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003e19 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003e1a 940e c042 	CALL SUBOPT_0x3
                 ; 0000 04CB             }
                 ; 0000 04CC             else
003e1c c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 04CD             {
                 ; 0000 04CE                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003e1d 940e c322 	CALL SUBOPT_0x6D
003e1f f019      	BREQ _0x12D
003e20 940e c27d 	CALL SUBOPT_0x53
003e22 f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 04CF                 {
                 ; 0000 04D0                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003e23 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003e24 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003e25 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003e26 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003e27 940e c313 	CALL SUBOPT_0x6A
003e29 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 04D1                 }
                 ; 0000 04D2                 else
003e2b c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 04D3                 {
                 ; 0000 04D4                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003e2c efef     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003e2d e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003e2e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003e2f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003e30 940e c264 	CALL SUBOPT_0x50
003e32 940e c299 	CALL SUBOPT_0x58
                 ; 0000 04D5                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003e34 e0e1      	LDI  R30,LOW(1)
003e35 940e c27f 	CALL SUBOPT_0x54
003e37 935a      	ST   -Y,R21
003e38 2fa4      	MOV  R26,R20
003e39 940e 544f 	CALL _ETH_sendEventReportCmd
003e3b 018f      	MOVW R16,R30
                 ; 0000 04D6                     if(res < 0)
003e3c 2311      	TST  R17
003e3d f44a      	BRPL _0x130
                 ; 0000 04D7                     {
                 ; 0000 04D8                         logEventWait.frameID    = 0;
003e3e 940e c34c 	CALL SUBOPT_0x71
                 ; 0000 04D9                         logEventWait.logID      = 0;
                 ; 0000 04DA                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003e40 e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003e41 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003e42 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003e43 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003e44 940e c042 	CALL SUBOPT_0x3
                 ; 0000 04DB                     }
                 ; 0000 04DC                     else
003e46 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 04DD                     {
                 ; 0000 04DE                         logEventWait.logID      = index;
003e47 940e c2d1 	CALL SUBOPT_0x60
                +
003e49 93e0 142c+STS _logEventWait + ( 1 ) , R30
003e4b 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003e4d 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003e4f 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 04DF                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003e51 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003e52 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003e53 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003e54 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003e55 940e e05b 	CALL __PUTPARD1
003e57 91e0 142b 	LDS  R30,_logEventWait
003e59 940e c2f3 	CALL SUBOPT_0x65
003e5b 940e c35c 	CALL SUBOPT_0x72
003e5d 940e c11b 	CALL SUBOPT_0x21
                 ; 0000 04E0                     }
                 _0x131:
                 ; 0000 04E1                 }
                 _0x12F:
                 ; 0000 04E2             }
                 _0x12B:
                 _0x129:
                 ; 0000 04E3 
                 ; 0000 04E4             res = LOG_closeFile(&file);
003e5f 940e c33f 	CALL SUBOPT_0x70
                 ; 0000 04E5             if(res < 0)
003e61 f462      	BRPL _0x132
                 ; 0000 04E6             {
                 ; 0000 04E7                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003e62 eae6     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003e63 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003e64 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003e65 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003e66 940e e05b 	CALL __PUTPARD1
003e68 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003e69 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003e6a 940e c1a4 	CALL SUBOPT_0x34
003e6c 940e c0b8 	CALL SUBOPT_0x12
                 ; 0000 04E8             }
                 ; 0000 04E9         }
                 _0x132:
                 ; 0000 04EA     }
                 ; 0000 04EB 
                 ; 0000 04EC     return 0;
                 _0x123:
003e6e e0e0      	LDI  R30,LOW(0)
003e6f e0f0      	LDI  R31,HIGH(0)
003e70 940e e0d7 	CALL __LOADLOCR6
003e72 96e2      	ADIW R28,50
003e73 5fde      	SUBI R29,-2
003e74 9508      	RET
                 ; 0000 04ED }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003e75 931a      	ST   -Y,R17
003e76 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003e77 e000     +LDI R16 , LOW ( 0 )
003e78 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003e79 e8e0      	LDI  R30,LOW(128)
003e7a 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003e7c e0e0      	LDI  R30,LOW(0)
003e7d 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003e7f 940e 4164 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003e81 b7e4      	IN   R30,0x34
003e82 ffe0      	SBRS R30,0
003e83 c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003e84 ecee     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003e85 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003e86 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003e87 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003e88 940e c042 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003e8a b7e4      	IN   R30,0x34
003e8b 7fee      	ANDI R30,0xFE
003e8c bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003e8d b7e4      	IN   R30,0x34
003e8e ffe1      	SBRS R30,1
003e8f c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003e90 eee1     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003e91 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003e92 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003e93 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003e94 940e c042 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003e96 b7e4      	IN   R30,0x34
003e97 7fed      	ANDI R30,0xFD
003e98 bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003e99 b7e4      	IN   R30,0x34
003e9a ffe2      	SBRS R30,2
003e9b c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003e9c efe4     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003e9d e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003e9e e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003e9f e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003ea0 940e c042 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003ea2 b7e4      	IN   R30,0x34
003ea3 7feb      	ANDI R30,0xFB
003ea4 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003ea5 b7e4      	IN   R30,0x34
003ea6 ffe3      	SBRS R30,3
003ea7 c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003ea8 e0e8     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003ea9 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003eaa e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003eab e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003eac 940e c042 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003eae b7e4      	IN   R30,0x34
003eaf 7fe7      	ANDI R30,0XF7
003eb0 bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003eb1 b7e4      	IN   R30,0x34
003eb2 ffe4      	SBRS R30,4
003eb3 c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003eb4 e1eb     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003eb5 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003eb6 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003eb7 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003eb8 940e c042 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003eba b7e4      	IN   R30,0x34
003ebb 7eef      	ANDI R30,0xEF
003ebc bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003ebd 940e 4308 	CALL _init_io
                 ; 0001 0036     init_i2c();
003ebf d052      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003ec0 d054      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003ec1 940e 44fa 	CALL _init_adc
                 ; 0001 0039     init_timer();
003ec3 940e 4255 	CALL _init_timer
                 ; 0001 003A     init_common();
003ec5 d054      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003ec6 940e c365 	CALL SUBOPT_0x73
003ec8 940e 42e2 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003eca efa4      	LDI  R26,LOW(500)
003ecb e0b1      	LDI  R27,HIGH(500)
003ecc 940e dcfc 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003ece 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003ecf 940e 48e9 	CALL _init_RTC
003ed1 940e c368 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003ed3 940e 7fed 	CALL _init_oled
003ed5 940e c368 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003ed7 940e 4497 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003ed9 940e c36c 	CALL SUBOPT_0x75
003edb 940e 42e2 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003edd 940e c36f 	CALL SUBOPT_0x76
003edf 940e 42e2 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003ee1 940e c372 	CALL SUBOPT_0x77
003ee3 940e 42e2 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003ee5 940e 534d 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     playBeep();
003ee7 d04a      	RCALL _playBeep
                 ; 0001 004D     showLedInitComplete();
003ee8 d09c      	RCALL _showLedInitComplete
                 ; 0001 004E     showDebugInitComplete();
003ee9 d04d      	RCALL _showDebugInitComplete
                 ; 0001 004F 
                 ; 0001 0050     if(SD_init() == 0)
003eea 940e 81dc 	CALL _SD_init
003eec 9730      	SBIW R30,0
003eed f459      	BRNE _0x2000A
                 ; 0001 0051     {
                 ; 0001 0052         if(LOG_init() < 0)
003eee 940e 85c0 	CALL _LOG_init
003ef0 23ff      	TST  R31
003ef1 f432      	BRPL _0x2000B
                 ; 0001 0053         {
                 ; 0001 0054             // -- log status = error -- //
                 ; 0001 0055             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003ef2 e2ea     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003ef3 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003ef4 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003ef5 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003ef6 940e c042 	CALL SUBOPT_0x3
                 ; 0001 0056         }
                 ; 0001 0057 
                 ; 0001 0058         // -- log status = ok -- //
                 ; 0001 0059     }
                 _0x2000B:
                 ; 0001 005A     else
003ef8 c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005B     {
                 ; 0001 005C         // -- sd status = error -- //
                 ; 0001 005D         printDebug("<initial_system> SD_init() failed\r\n");
                +
003ef9 e4ef     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003efa e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003efb e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003efc e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003efd 940e c042 	CALL SUBOPT_0x3
                 ; 0001 005E     }
                 _0x2000C:
                 ; 0001 005F 
                 ; 0001 0060     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003eff e0a8      	LDI  R26,LOW(8)
003f00 940e 440f 	CALL _read_adc
003f02 e0ad      	LDI  R26,LOW(13)
003f03 e0b0      	LDI  R27,HIGH(13)
003f04 940e df51 	CALL __MULW12U
003f06 91a0 1430 	LDS  R26,_raw_rtc
003f08 91b0 1431 	LDS  R27,_raw_rtc+1
003f0a 0fae      	ADD  R26,R30
003f0b 1fbf      	ADC  R27,R31
003f0c 940e a461 	CALL _srand
                 ; 0001 0061 
                 ; 0001 0062     // -------- Configuration Initialize ----------- //
                 ; 0001 0063 //    readConfig();
                 ; 0001 0064 //    initAlarm();        //delay_ms(100);
                 ; 0001 0065 //
                 ; 0001 0066 //    if(init_logfile() < 0){
                 ; 0001 0067 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0068 //        return -1;
                 ; 0001 0069 //    }
                 ; 0001 006A 
                 ; 0001 006B 
                 ; 0001 006C     return res;
003f0e 01f8      	MOVW R30,R16
003f0f 9109      	LD   R16,Y+
003f10 9119      	LD   R17,Y+
003f11 9508      	RET
                 ; 0001 006D }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0070 {
                 _init_i2c:
                 ; 0001 0071     // I2C Bus initialization
                 ; 0001 0072     i2c_init();
003f12 940e dcab 	CALL _i2c_init
                 ; 0001 0073 }
003f14 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0076 {
                 _init_spi:
                 ; 0001 0077     // SPI initialization
                 ; 0001 0078     // SPI Type: Master
                 ; 0001 0079     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007A     // SPI Clock Phase: Cycle Start
                 ; 0001 007B     // SPI Clock Polarity: Low
                 ; 0001 007C     // SPI Data Order: MSB First
                 ; 0001 007D     SPCR=0x50;
003f15 e5e0      	LDI  R30,LOW(80)
003f16 bdec      	OUT  0x2C,R30
                 ; 0001 007E     SPSR=0x00;
003f17 e0e0      	LDI  R30,LOW(0)
003f18 bded      	OUT  0x2D,R30
                 ; 0001 007F }
003f19 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0082 {
                 _init_common:
                 ; 0001 0083     // External Interrupt(s) initialization
                 ; 0001 0084     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0085     EICRA=0x00;
003f1a e0e0      	LDI  R30,LOW(0)
003f1b 93e0 0069 	STS  105,R30
                 ; 0001 0086     EICRB=0x00;
003f1d 93e0 006a 	STS  106,R30
                 ; 0001 0087     EIMSK=0x00;
003f1f bbed      	OUT  0x1D,R30
                 ; 0001 0088 
                 ; 0001 0089     PCMSK0=0x00;
003f20 93e0 006b 	STS  107,R30
                 ; 0001 008A     PCMSK1=0x00;
003f22 93e0 006c 	STS  108,R30
                 ; 0001 008B     PCMSK2=0x00;
003f24 93e0 006d 	STS  109,R30
                 ; 0001 008C     PCICR=0x00;
003f26 93e0 0068 	STS  104,R30
                 ; 0001 008D 
                 ; 0001 008E     // Analog Comparator initialization
                 ; 0001 008F     // Analog Comparator: Off
                 ; 0001 0090     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0091     ACSR=0x80;
003f28 e8e0      	LDI  R30,LOW(128)
003f29 bfe0      	OUT  0x30,R30
                 ; 0001 0092     ADCSRB=0x00;
003f2a e0e0      	LDI  R30,LOW(0)
003f2b 93e0 007b 	STS  123,R30
                 ; 0001 0093     DIDR1=0x00;
003f2d 93e0 007f 	STS  127,R30
                 ; 0001 0094 
                 ; 0001 0095     // TWI initialization
                 ; 0001 0096     // TWI disabled
                 ; 0001 0097     TWCR=0x00;
003f2f 93e0 00bc 	STS  188,R30
                 ; 0001 0098 }
003f31 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009B {
                 _playBeep:
                 ; 0001 009C     BUZZER = 1;                                     // Buzzer ON Starting
003f32 9a77      	SBI  0xE,7
                 ; 0001 009D     delay_ms(200);
003f33 940e c1a9 	CALL SUBOPT_0x35
                 ; 0001 009E     BUZZER = 0;
003f35 9877      	CBI  0xE,7
                 ; 0001 009F }
003f36 9508      	RET
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A2 {
                 _showDebugInitComplete:
                 ; 0001 00A3     struct rtc_structure time;
                 ; 0001 00A4     struct prop_cnfg_st properties_config;
                 ; 0001 00A5 
                 ; 0001 00A6     printDebug("Initial Device Completed at - ");
003f37 97ef      	SBIW R28,63
003f38 97ef      	SBIW R28,63
003f39 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003f3a e7e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003f3b e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003f3c e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003f3d e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003f3e 940e c042 	CALL SUBOPT_0x3
                 ; 0001 00A7     RTC_getDateTime(&time,properties_config.timeZone);
003f40 01fe      	MOVW R30,R28
003f41 55ef      	SUBI R30,LOW(-(161))
003f42 4fff      	SBCI R31,HIGH(-(161))
003f43 93fa      	ST   -Y,R31
003f44 93ea      	ST   -Y,R30
003f45 01de      	MOVW R26,R28
003f46 55ae      	SUBI R26,LOW(-162)
003f47 4fbf      	SBCI R27,HIGH(-162)
003f48 91ec      	LD   R30,X
003f49 e0f0      	LDI  R31,0
003f4a fde7      	SBRC R30,7
003f4b efff      	SER  R31
003f4c 01df      	MOVW R26,R30
003f4d 940e 485c 	CALL _RTC_getDateTime
                 ; 0001 00A8     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00A9             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003f4f e9e2     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003f50 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003f51 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003f52 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003f53 940e e05b 	CALL __PUTPARD1
                +
003f55 01fe     +MOVW R30 , R28
003f56 55eb     +SUBI R30 , LOW ( - 165 )
003f57 4fff     +SBCI R31 , HIGH ( - 165 )
003f58 9001     +LD R0 , Z +
003f59 9011     +LD R1 , Z +
003f5a 9161     +LD R22 , Z +
003f5b 8170     +LD R23 , Z
003f5c 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003f5d 940e e05b 	CALL __PUTPARD1
003f5f 01fe      	MOVW R30,R28
003f60 55e7      	SUBI R30,LOW(-(169))
003f61 4fff      	SBCI R31,HIGH(-(169))
003f62 9634      	ADIW R30,4
003f63 940e c375 	CALL SUBOPT_0x78
003f65 01fe      	MOVW R30,R28
003f66 55e3      	SUBI R30,LOW(-(173))
003f67 4fff      	SBCI R31,HIGH(-(173))
003f68 9638      	ADIW R30,8
003f69 940e c375 	CALL SUBOPT_0x78
003f6b 01fe      	MOVW R30,R28
003f6c 54ef      	SUBI R30,LOW(-(177))
003f6d 4fff      	SBCI R31,HIGH(-(177))
003f6e 963c      	ADIW R30,12
003f6f 940e c375 	CALL SUBOPT_0x78
003f71 01fe      	MOVW R30,R28
003f72 54eb      	SUBI R30,LOW(-(181))
003f73 4fff      	SBCI R31,HIGH(-(181))
003f74 9670      	ADIW R30,16
003f75 940e c375 	CALL SUBOPT_0x78
003f77 01fe      	MOVW R30,R28
003f78 54e7      	SUBI R30,LOW(-(185))
003f79 4fff      	SBCI R31,HIGH(-(185))
003f7a 9674      	ADIW R30,20
003f7b 940e c375 	CALL SUBOPT_0x78
003f7d e188      	LDI  R24,24
003f7e 940e 9e24 	CALL _printDebug
003f80 966c      	ADIW R28,28
                 ; 0001 00AA }
003f81 96ef      	ADIW R28,63
003f82 96ef      	ADIW R28,63
003f83 96ed      	ADIW R28,61
003f84 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AD {
                 _showLedInitComplete:
                 ; 0001 00AE     LED_ON(BIT_LED_ALARM);
003f85 91e0 0102 	LDS  R30,258
003f87 7bef      	ANDI R30,0xBF
003f88 940e c37b 	CALL SUBOPT_0x79
                 ; 0001 00AF     delay_ms(200);
                 ; 0001 00B0 
                 ; 0001 00B1     LED_ON(BIT_LED_LINK);
003f8a 91e0 0102 	LDS  R30,258
003f8c 7def      	ANDI R30,0xDF
003f8d 940e c37b 	CALL SUBOPT_0x79
                 ; 0001 00B2     delay_ms(200);
                 ; 0001 00B3 
                 ; 0001 00B4     LED_ON(BIT_LED_TEMP);
003f8f 91e0 0102 	LDS  R30,258
003f91 7eef      	ANDI R30,0xEF
003f92 940e c37b 	CALL SUBOPT_0x79
                 ; 0001 00B5     delay_ms(200);
                 ; 0001 00B6 
                 ; 0001 00B7     LED_ON(BIT_LED_PWR);
003f94 91e0 0102 	LDS  R30,258
003f96 7fe7      	ANDI R30,0XF7
003f97 940e c37b 	CALL SUBOPT_0x79
                 ; 0001 00B8     delay_ms(200);
                 ; 0001 00B9 
                 ; 0001 00BA     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003f99 91e0 0102 	LDS  R30,258
003f9b 67e8      	ORI  R30,LOW(0x78)
003f9c 940e c37b 	CALL SUBOPT_0x79
                 ; 0001 00BB     delay_ms(200);
                 ; 0001 00BC 
                 ; 0001 00BD     LED_ON(BIT_LED_PWR);
003f9e 91e0 0102 	LDS  R30,258
003fa0 7fe7      	ANDI R30,0XF7
003fa1 93e0 0102 	STS  258,R30
                 ; 0001 00BE     delay_ms(50);
003fa3 940e c37e 	CALL SUBOPT_0x7A
                 ; 0001 00BF }
003fa5 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003fa6 940e c382 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003fa8 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003faa 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003fac 2fe1      	MOV  R30,R17
003fad 71ec      	ANDI R30,LOW(0x1C)
003fae f011      	BREQ PC+3
003faf 940c 405a 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003fb1 91e0 1420 	LDS  R30,_ETH_current_mode
003fb3 30e0      	CPI  R30,0
003fb4 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003fb5 eaa3      	LDI  R26,LOW(_rx_wr_index0)
003fb6 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003fb7 940e c396 	CALL SUBOPT_0x7C
003fb9 9731      	SBIW R30,1
003fba 55e1      	SUBI R30,LOW(-_rx_buffer0)
003fbb 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003fbc 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003fbd 91a0 0fa3 	LDS  R26,_rx_wr_index0
003fbf 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003fc1 3fa4      	CPI  R26,LOW(0x1F4)
003fc2 e0e1      	LDI  R30,HIGH(0x1F4)
003fc3 07be      	CPC  R27,R30
003fc4 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003fc5 e0e0      	LDI  R30,LOW(0)
003fc6 93e0 0fa3 	STS  _rx_wr_index0,R30
003fc8 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003fca eaa7      	LDI  R26,LOW(_rx_counter0)
003fcb e0bf      	LDI  R27,HIGH(_rx_counter0)
003fcc 940e c396 	CALL SUBOPT_0x7C
003fce 3fe4      	CPI  R30,LOW(0x1F4)
003fcf e0a1      	LDI  R26,HIGH(0x1F4)
003fd0 07fa      	CPC  R31,R26
003fd1 f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003fd2 e0e0      	LDI  R30,LOW(0)
003fd3 93e0 0fa7 	STS  _rx_counter0,R30
003fd5 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003fd7 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003fd8 e0e3      	LDI  R30,LOW(3)
003fd9 93ea      	ST   -Y,R30
                +
003fda efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003fdb e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003fdc d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003fdd e0e3      	LDI  R30,LOW(3)
003fde 93ea      	ST   -Y,R30
                +
003fdf e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003fe0 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003fe1 d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003fe2 e0e3      	LDI  R30,LOW(3)
003fe3 93ea      	ST   -Y,R30
                +
003fe4 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003fe5 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003fe6 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003fe7 c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003fe8 2fa0      	MOV  R26,R16
003fe9 d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003fea 940e c39c 	CALL SUBOPT_0x7D
003fec 34a5      	CPI  R26,LOW(0x145)
003fed e0e1      	LDI  R30,HIGH(0x145)
003fee 07be      	CPC  R27,R30
003fef f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
003ff0 940e c3a1 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
003ff2 330c      	CPI  R16,60
003ff3 f421      	BRNE _0x4000D
003ff4 91a0 10f0 	LDS  R26,_config_start
003ff6 30a0      	CPI  R26,LOW(0x0)
003ff7 f009      	BREQ _0x4000E
                 _0x4000D:
003ff8 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
003ff9 e0e1      	LDI  R30,LOW(1)
003ffa 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
003ffc e0e0      	LDI  R30,LOW(0)
003ffd 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
003fff 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
004001 c058      	RJMP _0x4000F
                 _0x4000C:
004002 300d      	CPI  R16,13
004003 f461      	BRNE _0x40011
004004 91a0 10f2 	LDS  R26,_config_end
004006 30a0      	CPI  R26,LOW(0x0)
004007 f441      	BRNE _0x40011
004008 91a0 10f0 	LDS  R26,_config_start
00400a 30a1      	CPI  R26,LOW(0x1)
00400b f421      	BRNE _0x40011
00400c 91a0 10f3 	LDS  R26,_config_response
00400e 30a0      	CPI  R26,LOW(0x0)
00400f f409      	BRNE _0x40012
                 _0x40011:
004010 c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
004011 e0ed      	LDI  R30,LOW(13)
004012 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
004014 c045      	RJMP _0x40013
                 _0x40010:
004015 300a      	CPI  R16,10
004016 f461      	BRNE _0x40015
004017 91a0 10f2 	LDS  R26,_config_end
004019 30ad      	CPI  R26,LOW(0xD)
00401a f441      	BRNE _0x40015
00401b 91a0 10f0 	LDS  R26,_config_start
00401d 30a1      	CPI  R26,LOW(0x1)
00401e f421      	BRNE _0x40015
00401f 91a0 10f3 	LDS  R26,_config_response
004021 30a0      	CPI  R26,LOW(0x0)
004022 f409      	BRNE _0x40016
                 _0x40015:
004023 c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
004024 e0ea      	LDI  R30,LOW(10)
004025 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
004027 e0e1      	LDI  R30,LOW(1)
004028 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
00402a c02f      	RJMP _0x40017
                 _0x40014:
00402b 3405      	CPI  R16,69
00402c f441      	BRNE _0x40019
00402d 91a0 10f0 	LDS  R26,_config_start
00402f 30a1      	CPI  R26,LOW(0x1)
004030 f421      	BRNE _0x40019
004031 91a0 10f3 	LDS  R26,_config_response
004033 30a0      	CPI  R26,LOW(0x0)
004034 f009      	BREQ _0x4001A
                 _0x40019:
004035 c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
004036 e4e5      	LDI  R30,LOW(69)
004037 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
004039 c020      	RJMP _0x4001B
                 _0x40018:
00403a 3503      	CPI  R16,83
00403b f441      	BRNE _0x4001D
00403c 91a0 10f0 	LDS  R26,_config_start
00403e 30a1      	CPI  R26,LOW(0x1)
00403f f421      	BRNE _0x4001D
004040 91a0 10f3 	LDS  R26,_config_response
004042 30a0      	CPI  R26,LOW(0x0)
004043 f009      	BREQ _0x4001E
                 _0x4001D:
004044 c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
004045 e5e3      	LDI  R30,LOW(83)
004046 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
004048 c011      	RJMP _0x4001F
                 _0x4001C:
004049 91a0 10f0 	LDS  R26,_config_start
00404b 30a1      	CPI  R26,LOW(0x1)
00404c f421      	BRNE _0x40021
00404d 91a0 10f3 	LDS  R26,_config_response
00404f 30a0      	CPI  R26,LOW(0x0)
004050 f409      	BRNE _0x40022
                 _0x40021:
004051 c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
004052 eeae      	LDI  R26,LOW(_configLen)
004053 e1b0      	LDI  R27,HIGH(_configLen)
004054 940e c396 	CALL SUBOPT_0x7C
004056 9731      	SBIW R30,1
004057 55e7      	SUBI R30,LOW(-_configRd)
004058 4ff0      	SBCI R31,HIGH(-_configRd)
004059 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
00405a c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
00405b 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
00405c 91e0 00c0 	LDS  R30,192
00405e 72e0      	ANDI R30,LOW(0x20)
00405f f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
004060 81e8      	LD   R30,Y
004061 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
004063 c0cb      	RJMP _0x20E0099
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
004064 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
004066 e020     +LDI R18 , LOW ( 0 )
004067 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
004068 91a0 0fa7 	LDS  R26,_rx_counter0
00406a 91b0 0fa8 	LDS  R27,_rx_counter0+1
00406c 940e e0b8 	CALL __CPW02
00406e f010      	BRLO PC+3
00406f 940c 40b1 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
004071 eaa5      	LDI  R26,LOW(_rx_rd_index0)
004072 e0bf      	LDI  R27,HIGH(_rx_rd_index0)
004073 940e c396 	CALL SUBOPT_0x7C
004075 9731      	SBIW R30,1
004076 55e1      	SUBI R30,LOW(-_rx_buffer0)
004077 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
004078 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
004079 91a0 0fa5 	LDS  R26,_rx_rd_index0
00407b 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
00407d 3fa4      	CPI  R26,LOW(0x1F4)
00407e e0e1      	LDI  R30,HIGH(0x1F4)
00407f 07be      	CPC  R27,R30
004080 f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
004081 e0e0      	LDI  R30,LOW(0)
004082 93e0 0fa5 	STS  _rx_rd_index0,R30
004084 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
004086 91e0 00c1 	LDS  R30,193
004088 77ef      	ANDI R30,0x7F
004089 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
00408b eaa7      	LDI  R26,LOW(_rx_counter0)
00408c e0bf      	LDI  R27,HIGH(_rx_counter0)
00408d 91ed      	LD   R30,X+
00408e 91fd      	LD   R31,X+
00408f 9731      	SBIW R30,1
004090 93fe      	ST   -X,R31
004091 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
004092 91e0 00c1 	LDS  R30,193
004094 68e0      	ORI  R30,0x80
004095 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
004097 940e c3ac 	CALL SUBOPT_0x80
004099 93fa      	ST   -Y,R31
00409a 93ea      	ST   -Y,R30
00409b b7ed      	IN   R30,SPL
00409c b7fe      	IN   R31,SPH
00409d 93fa      	ST   -Y,R31
00409e 93ea      	ST   -Y,R30
00409f 931f      	PUSH R17
0040a0 940e c36c 	CALL SUBOPT_0x75
0040a2 940e a55a 	CALL _memcpy
0040a4 911f      	POP  R17
                 ; 0002 0092         len++;
                +
0040a5 5f2f     +SUBI R18 , LOW ( - 1 )
0040a6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
0040a7 81ee      	LDD  R30,Y+6
0040a8 81ff      	LDD  R31,Y+6+1
0040a9 17e2      	CP   R30,R18
0040aa 07f3      	CPC  R31,R19
0040ab f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
0040ac 81ac      	LDD  R26,Y+4
0040ad 81bd      	LDD  R27,Y+4+1
0040ae 940e dcfc 	CALL _delay_ms
                 ; 0002 0098     }
0040b0 cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
0040b1 01f9      	MOVW R30,R18
0040b2 940e e0d9 	CALL __LOADLOCR4
0040b4 c145      	RJMP _0x20E0098
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
0040b5 940e c3b3 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
0040b7 e000     +LDI R16 , LOW ( 0 )
0040b8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
0040b9 940e c3b8 	CALL SUBOPT_0x82
0040bb f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
0040bc 940e c3bd 	CALL SUBOPT_0x83
0040be 91ac      	LD   R26,X
0040bf df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
0040c0 5f0f     +SUBI R16 , LOW ( - 1 )
0040c1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0040c2 cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
0040c3 01f8      	MOVW R30,R16
0040c4 8119      	LDD  R17,Y+1
0040c5 8108      	LDD  R16,Y+0
0040c6 9626      	ADIW R28,6
0040c7 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
0040c8 93ea      	ST   -Y,R30
0040c9 b7ef      	IN   R30,SREG
0040ca 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
0040cb 931a      	ST   -Y,R17
0040cc 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0040cd 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
0040cf 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0040d1 2fe1      	MOV  R30,R17
0040d2 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
0040d3 c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
0040d4 93ea      	ST   -Y,R30
0040d5 b7ef      	IN   R30,SREG
0040d6 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
0040d7 931a      	ST   -Y,R17
0040d8 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0040d9 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
0040db 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0040dd 2fe1      	MOV  R30,R17
0040de 71ec      	ANDI R30,LOW(0x1C)
0040df f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
0040e0 340b      	CPI  R16,75
0040e1 f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
0040e2 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
0040e3 9109      	LD   R16,Y+
0040e4 9119      	LD   R17,Y+
0040e5 91e9      	LD   R30,Y+
0040e6 bfef      	OUT  SREG,R30
0040e7 91e9      	LD   R30,Y+
0040e8 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
0040e9 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
0040ea 91e0 00d0 	LDS  R30,208
0040ec 72e0      	ANDI R30,LOW(0x20)
0040ed f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
0040ee 81e8      	LD   R30,Y
0040ef 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
0040f1 c03d      	RJMP _0x20E0099
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
0040f2 940e c382 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
0040f4 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
0040f6 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0040f8 2fe1      	MOV  R30,R17
0040f9 71ec      	ANDI R30,LOW(0x1C)
0040fa f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
0040fb 2fa0      	MOV  R26,R16
0040fc d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
0040fd 3204      	CPI  R16,36
0040fe f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
0040ff 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
004100 2de5      	MOV  R30,R5
004101 9453      	INC  R5
004102 e0f0      	LDI  R31,0
004103 59e1      	SUBI R30,LOW(-_rxPackage3)
004104 4ff2      	SBCI R31,HIGH(-_rxPackage3)
004105 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
004106 e4e0      	LDI  R30,LOW(64)
004107 165e      	CP   R5,R30
004108 f008      	BRLO _0x4003E
004109 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
00410a 3203      	CPI  R16,35
00410b f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
00410c 2de5      	MOV  R30,R5
00410d 50e1      	SUBI R30,LOW(1)
00410e 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
00410f 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
004110 e0e1      	LDI  R30,LOW(1)
004111 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
004113 9109      	LD   R16,Y+
004114 9119      	LD   R17,Y+
004115 91e9      	LD   R30,Y+
004116 bfef      	OUT  SREG,R30
004117 91e9      	LD   R30,Y+
004118 bfec      	OUT  EIND,R30
004119 91e9      	LD   R30,Y+
00411a bfeb      	OUT  RAMPZ,R30
00411b 91f9      	LD   R31,Y+
00411c 91e9      	LD   R30,Y+
00411d 91b9      	LD   R27,Y+
00411e 91a9      	LD   R26,Y+
00411f 9199      	LD   R25,Y+
004120 9189      	LD   R24,Y+
004121 9179      	LD   R23,Y+
004122 9169      	LD   R22,Y+
004123 90f9      	LD   R15,Y+
004124 9019      	LD   R1,Y+
004125 9009      	LD   R0,Y+
004126 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
004127 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
004128 91e0 0130 	LDS  R30,304
00412a 72e0      	ANDI R30,LOW(0x20)
00412b f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
00412c 81e8      	LD   R30,Y
00412d 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E0099:
00412f 9621      	ADIW R28,1
004130 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
004131 93ba      	ST   -Y,R27
004132 93aa      	ST   -Y,R26
004133 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
004134 e010      	LDI  R17,0
004135 81eb      	LDD  R30,Y+3
004136 940e c161 	CALL SUBOPT_0x2B
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
004138 f429      	BRNE _0x40046
004139 81a9      	LDD  R26,Y+1
00413a 81ba      	LDD  R27,Y+1+1
00413b 940e bc16 	CALL _puts
                 ; 0002 0100                 break;
00413d c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
00413e 30e1      	CPI  R30,LOW(0x1)
00413f e0a0      	LDI  R26,HIGH(0x1)
004140 07fa      	CPC  R31,R26
004141 f431      	BRNE _0x40047
                 _0x40048:
004142 940e c3c3 	CALL SUBOPT_0x84
004144 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
004145 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
004146 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
004147 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
004148 30e2      	CPI  R30,LOW(0x2)
004149 e0a0      	LDI  R26,HIGH(0x2)
00414a 07fa      	CPC  R31,R26
00414b f449      	BRNE _0x4004B
                 _0x4004C:
00414c 940e c3c3 	CALL SUBOPT_0x84
00414e f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
00414f 940e c3cb 	CALL SUBOPT_0x85
004151 df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
004152 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
004153 cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
004154 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
004155 30e3      	CPI  R30,LOW(0x3)
004156 e0a0      	LDI  R26,HIGH(0x3)
004157 07fa      	CPC  R31,R26
004158 f441      	BRNE _0x40045
                 _0x40050:
004159 940e c3c3 	CALL SUBOPT_0x84
00415b f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
00415c 940e c3cb 	CALL SUBOPT_0x85
00415e dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
00415f 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
004160 cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
004161 8118      	LDD  R17,Y+0
004162 940c 4495 	JMP  _0x20E0096
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
004164 e0e0      	LDI  R30,LOW(0)
004165 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
004167 e9e8      	LDI  R30,LOW(152)
004168 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
00416a e0e6      	LDI  R30,LOW(6)
00416b 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
00416d e0e0      	LDI  R30,LOW(0)
00416e 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
004170 e3e3      	LDI  R30,LOW(51)
004171 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
004173 e0e0      	LDI  R30,LOW(0)
004174 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
004176 e9e8      	LDI  R30,LOW(152)
004177 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
004179 e0e6      	LDI  R30,LOW(6)
00417a 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
00417c e0e0      	LDI  R30,LOW(0)
00417d 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
00417f e0ec      	LDI  R30,LOW(12)
004180 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
004182 e0e0      	LDI  R30,LOW(0)
004183 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
004185 e9e8      	LDI  R30,LOW(152)
004186 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
004188 e0e6      	LDI  R30,LOW(6)
004189 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
00418b e0e0      	LDI  R30,LOW(0)
00418c 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
00418e e0ec      	LDI  R30,LOW(12)
00418f 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
004191 e0e0      	LDI  R30,LOW(0)
004192 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
004194 e9e8      	LDI  R30,LOW(152)
004195 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
004197 e0e6      	LDI  R30,LOW(6)
004198 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
00419a e0e0      	LDI  R30,LOW(0)
00419b 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
00419d e0ec      	LDI  R30,LOW(12)
00419e 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
0041a0 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
0041a1 940e c3d2 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
0041a3 f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
0041a4 efef      	LDI  R30,LOW(65535)
0041a5 efff      	LDI  R31,HIGH(65535)
0041a6 940c 4495 	JMP  _0x20E0096
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
0041a8 940e c3d9 	CALL SUBOPT_0x87
0041aa 940e c3dc 	CALL SUBOPT_0x88
0041ac 940e e0cb 	CALL __CPD21
0041ae f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
0041af e0e0      	LDI  R30,LOW(0)
0041b0 e0f0      	LDI  R31,HIGH(0)
0041b1 940c 4495 	JMP  _0x20E0096
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
0041b3 e0e1      	LDI  R30,LOW(1)
0041b4 e0f0      	LDI  R31,HIGH(1)
0041b5 940c 4495 	JMP  _0x20E0096
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
0041b7 940e e060 	CALL __PUTPARD2
0041b9 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
0041ba 940e c3e5 	CALL SUBOPT_0x89
0041bc 940e e0b4 	CALL __CPD10
0041be f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
0041bf e0e4     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
0041c0 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
0041c1 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
0041c2 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
0041c3 940e c042 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
0041c5 85a8      	LDD  R26,Y+8
0041c6 85b9      	LDD  R27,Y+8+1
0041c7 940e c137 	CALL SUBOPT_0x25
0041c9 940e e036 	CALL __PUTDP1
                 ; 0003 0030         return -1;
0041cb efef      	LDI  R30,LOW(65535)
0041cc efff      	LDI  R31,HIGH(65535)
0041cd c02c      	RJMP _0x20E0098
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
0041ce 940e c3e5 	CALL SUBOPT_0x89
0041d0 940e c3dc 	CALL SUBOPT_0x88
0041d2 940e c3ea 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
0041d4 940e c3d9 	CALL SUBOPT_0x87
0041d6 85a8      	LDD  R26,Y+8
0041d7 85b9      	LDD  R27,Y+8+1
0041d8 940e e036 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
0041da 940e c3ef 	CALL SUBOPT_0x8B
0041dc 940e c3f8 	CALL SUBOPT_0x8C
0041de 940e e0c6 	CALL __CPD12
0041e0 f0b8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
0041e1 e2e7     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
0041e2 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
0041e3 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
0041e4 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
0041e5 940e e05b 	CALL __PUTPARD1
0041e7 940e c3ef 	CALL SUBOPT_0x8B
0041e9 940e c3fb 	CALL SUBOPT_0x8D
0041eb 940e c3fb 	CALL SUBOPT_0x8D
0041ed 940e e05b 	CALL __PUTPARD1
0041ef 940e c2f9 	CALL SUBOPT_0x66
                 ; 0003 0039         *keeper = 0;
0041f1 85a8      	LDD  R26,Y+8
0041f2 85b9      	LDD  R27,Y+8+1
0041f3 940e c402 	CALL SUBOPT_0x8E
                 ; 0003 003A         return -1;
0041f5 efef      	LDI  R30,LOW(65535)
0041f6 efff      	LDI  R31,HIGH(65535)
0041f7 c002      	RJMP _0x20E0098
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
0041f8 e0e0      	LDI  R30,LOW(0)
0041f9 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0098:
0041fa 962a      	ADIW R28,10
0041fb 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
0041fc 940e c409 	CALL SUBOPT_0x8F
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
0041fe e6ea     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
0041ff e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
004200 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
004201 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
004202 940e c042 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
004204 c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
004205 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
004206 e6e4      	LDI  R30,LOW(100)
004207 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
004208 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
004209 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
00420a 940e c41b 	CALL SUBOPT_0x90
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
00420c c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
00420d 940e c409 	CALL SUBOPT_0x8F
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
00420f ebe2      	LDI  R30,LOW(178)
004210 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
004212 940e aaa6 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
004214 91e9      	LD   R30,Y+
004215 bfef      	OUT  SREG,R30
004216 91e9      	LD   R30,Y+
004217 bfec      	OUT  EIND,R30
004218 91e9      	LD   R30,Y+
004219 bfeb      	OUT  RAMPZ,R30
00421a 91f9      	LD   R31,Y+
00421b 91e9      	LD   R30,Y+
00421c 91b9      	LD   R27,Y+
00421d 91a9      	LD   R26,Y+
00421e 9199      	LD   R25,Y+
00421f 9189      	LD   R24,Y+
004220 9179      	LD   R23,Y+
004221 9169      	LD   R22,Y+
004222 90f9      	LD   R15,Y+
004223 9019      	LD   R1,Y+
004224 9009      	LD   R0,Y+
004225 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
004226 936a      	ST   -Y,R22
004227 937a      	ST   -Y,R23
004228 93aa      	ST   -Y,R26
004229 93ba      	ST   -Y,R27
00422a 93ea      	ST   -Y,R30
00422b 93fa      	ST   -Y,R31
00422c b7ef      	IN   R30,SREG
00422d 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
00422e 940e c422 	CALL SUBOPT_0x91
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
004230 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
004231 e7a7      	LDI  R26,LOW(_baseCounter)
004232 e1b3      	LDI  R27,HIGH(_baseCounter)
004233 940e c429 	CALL SUBOPT_0x92
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
004235 e3a0      	LDI  R26,LOW(_raw_rtc)
004236 e1b4      	LDI  R27,HIGH(_raw_rtc)
004237 940e c429 	CALL SUBOPT_0x92
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
004239 91e9      	LD   R30,Y+
00423a bfef      	OUT  SREG,R30
00423b 91f9      	LD   R31,Y+
00423c 91e9      	LD   R30,Y+
00423d 91b9      	LD   R27,Y+
00423e 91a9      	LD   R26,Y+
00423f 9179      	LD   R23,Y+
004240 9169      	LD   R22,Y+
004241 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
004242 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
004243 940e c432 	CALL SUBOPT_0x93
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
004245 9bf4      	SBIS 0x1E,4
004246 c002      	RJMP _0x6000D
004247 98f4      	CBI  0x1E,4
004248 c001      	RJMP _0x6000E
                 _0x6000D:
004249 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
00424a 9bf3      	SBIS 0x1E,3
00424b c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
00424c 9bf4      	SBIS 0x1E,4
00424d c002      	RJMP _0x60010
00424e 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
00424f c001      	RJMP _0x60013
                 _0x60010:
004250 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
004251 c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
004252 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
004253 91e9      	LD   R30,Y+
004254 9518      	RETI
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 0095 {
                 _init_timer:
                 ; 0003 0096 
                 ; 0003 0097     // Timer/Counter 0 initialization
                 ; 0003 0098     // Clock source: System Clock
                 ; 0003 0099     // Clock value: 7.813 kHz
                 ; 0003 009A     // Mode: Normal top=0xFF
                 ; 0003 009B     // OC0A output: Disconnected
                 ; 0003 009C     // OC0B output: Disconnected
                 ; 0003 009D     TCCR0A=0x00;
004255 e0e0      	LDI  R30,LOW(0)
004256 bde4      	OUT  0x24,R30
                 ; 0003 009E     TCCR0B=0x05;
004257 e0e5      	LDI  R30,LOW(5)
004258 bde5      	OUT  0x25,R30
                 ; 0003 009F     TCNT0=0x64;
004259 e6e4      	LDI  R30,LOW(100)
00425a bde6      	OUT  0x26,R30
                 ; 0003 00A0     OCR0A=0x00;
00425b e0e0      	LDI  R30,LOW(0)
00425c bde7      	OUT  0x27,R30
                 ; 0003 00A1     OCR0B=0x00;
00425d bde8      	OUT  0x28,R30
                 ; 0003 00A2 
                 ; 0003 00A3     // Timer/Counter 1 initialization
                 ; 0003 00A4     // Clock source: System Clock
                 ; 0003 00A5     // Clock value: 7.813 kHz
                 ; 0003 00A6     // Mode: Normal top=0xFFFF
                 ; 0003 00A7     // OC1A output: Discon.
                 ; 0003 00A8     // OC1B output: Discon.
                 ; 0003 00A9     // OC1C output: Discon.
                 ; 0003 00AA     // Noise Canceler: Off
                 ; 0003 00AB     // Input Capture on Falling Edge
                 ; 0003 00AC     // Timer1 Overflow Interrupt: On
                 ; 0003 00AD     // Input Capture Interrupt: Off
                 ; 0003 00AE     // Compare A Match Interrupt: Off
                 ; 0003 00AF     // Compare B Match Interrupt: Off
                 ; 0003 00B0     // Compare C Match Interrupt: Off
                 ; 0003 00B1     TCCR1A=0x00;
00425e 93e0 0080 	STS  128,R30
                 ; 0003 00B2     TCCR1B=0x05;
004260 e0e5      	LDI  R30,LOW(5)
004261 93e0 0081 	STS  129,R30
                 ; 0003 00B3     //TCNT1H=0xFF;
                 ; 0003 00B4     //TCNT1L=0x64;
                 ; 0003 00B5     TCNT1H=0xFE;
004263 940e c41b 	CALL SUBOPT_0x90
                 ; 0003 00B6     TCNT1L=0x79;
                 ; 0003 00B7     ICR1H=0x00;
004265 e0e0      	LDI  R30,LOW(0)
004266 93e0 0087 	STS  135,R30
                 ; 0003 00B8     ICR1L=0x00;
004268 93e0 0086 	STS  134,R30
                 ; 0003 00B9     OCR1AH=0x00;
00426a 93e0 0089 	STS  137,R30
                 ; 0003 00BA     OCR1AL=0x00;
00426c 93e0 0088 	STS  136,R30
                 ; 0003 00BB     OCR1BH=0x00;
00426e 93e0 008b 	STS  139,R30
                 ; 0003 00BC     OCR1BL=0x00;
004270 93e0 008a 	STS  138,R30
                 ; 0003 00BD     OCR1CH=0x00;
004272 93e0 008d 	STS  141,R30
                 ; 0003 00BE     OCR1CL=0x00;
004274 93e0 008c 	STS  140,R30
                 ; 0003 00BF 
                 ; 0003 00C0     // Timer/Counter 2 initialization
                 ; 0003 00C1     // Clock source: System Clock
                 ; 0003 00C2     // Clock value: 7.813 kHz
                 ; 0003 00C3     // Mode: Normal top=0xFF
                 ; 0003 00C4     // OC2A output: Disconnected
                 ; 0003 00C5     // OC2B output: Disconnected
                 ; 0003 00C6     ASSR=0x00;
004276 93e0 00b6 	STS  182,R30
                 ; 0003 00C7     TCCR2A=0x00;
004278 93e0 00b0 	STS  176,R30
                 ; 0003 00C8     TCCR2B=0x07;
00427a e0e7      	LDI  R30,LOW(7)
00427b 93e0 00b1 	STS  177,R30
                 ; 0003 00C9     TCNT2=0xb2;
00427d ebe2      	LDI  R30,LOW(178)
00427e 93e0 00b2 	STS  178,R30
                 ; 0003 00CA     OCR2A=0x00;
004280 e0e0      	LDI  R30,LOW(0)
004281 93e0 00b3 	STS  179,R30
                 ; 0003 00CB     OCR2B=0x00;
004283 93e0 00b4 	STS  180,R30
                 ; 0003 00CC 
                 ; 0003 00CD     // Timer/Counter 3 initialization
                 ; 0003 00CE     // Clock source: System Clock
                 ; 0003 00CF     // Clock value: 31.250 kHz
                 ; 0003 00D0     // Mode: Normal top=0xFFFF
                 ; 0003 00D1     // OC3A output: Discon.
                 ; 0003 00D2     // OC3B output: Discon.
                 ; 0003 00D3     // OC3C output: Discon.
                 ; 0003 00D4     // Noise Canceler: Off
                 ; 0003 00D5     // Input Capture on Falling Edge
                 ; 0003 00D6     // Timer3 Overflow Interrupt: On
                 ; 0003 00D7     // Input Capture Interrupt: Off
                 ; 0003 00D8     // Compare A Match Interrupt: Off
                 ; 0003 00D9     // Compare B Match Interrupt: Off
                 ; 0003 00DA     // Compare C Match Interrupt: Off
                 ; 0003 00DB     TCCR3A=0x00;
004285 93e0 0090 	STS  144,R30
                 ; 0003 00DC     TCCR3B=0x04;
004287 e0e4      	LDI  R30,LOW(4)
004288 93e0 0091 	STS  145,R30
                 ; 0003 00DD     TCNT3H=0x85;
00428a 940e c422 	CALL SUBOPT_0x91
                 ; 0003 00DE     TCNT3L=0xED;
                 ; 0003 00DF     ICR3H=0x00;
00428c e0e0      	LDI  R30,LOW(0)
00428d 93e0 0097 	STS  151,R30
                 ; 0003 00E0     ICR3L=0x00;
00428f 93e0 0096 	STS  150,R30
                 ; 0003 00E1     OCR3AH=0x00;
004291 93e0 0099 	STS  153,R30
                 ; 0003 00E2     OCR3AL=0x00;
004293 93e0 0098 	STS  152,R30
                 ; 0003 00E3     OCR3BH=0x00;
004295 93e0 009b 	STS  155,R30
                 ; 0003 00E4     OCR3BL=0x00;
004297 93e0 009a 	STS  154,R30
                 ; 0003 00E5     OCR3CH=0x00;
004299 93e0 009d 	STS  157,R30
                 ; 0003 00E6     OCR3CL=0x00;
00429b 93e0 009c 	STS  156,R30
                 ; 0003 00E7 
                 ; 0003 00E8     // Timer/Counter 4 initialization
                 ; 0003 00E9     // Clock source: System Clock
                 ; 0003 00EA     // Clock value: 125.000 kHz
                 ; 0003 00EB     // Mode: Normal top=0xFFFF
                 ; 0003 00EC     // OC4A output: Discon.
                 ; 0003 00ED     // OC4B output: Discon.
                 ; 0003 00EE     // OC4C output: Discon.
                 ; 0003 00EF     // Noise Canceler: Off
                 ; 0003 00F0     // Input Capture on Falling Edge
                 ; 0003 00F1     // Timer4 Overflow Interrupt: On
                 ; 0003 00F2     // Input Capture Interrupt: Off
                 ; 0003 00F3     // Compare A Match Interrupt: Off
                 ; 0003 00F4     // Compare B Match Interrupt: Off
                 ; 0003 00F5     // Compare C Match Interrupt: Off
                 ; 0003 00F6     TCCR4A=0x00;
00429d 93e0 00a0 	STS  160,R30
                 ; 0003 00F7     TCCR4B=0x03;
00429f e0e3      	LDI  R30,LOW(3)
0042a0 93e0 00a1 	STS  161,R30
                 ; 0003 00F8     TCNT4H=0x85;
0042a2 940e c432 	CALL SUBOPT_0x93
                 ; 0003 00F9     TCNT4L=0xED;
                 ; 0003 00FA     ICR4H=0x00;
0042a4 e0e0      	LDI  R30,LOW(0)
0042a5 93e0 00a7 	STS  167,R30
                 ; 0003 00FB     ICR4L=0x00;
0042a7 93e0 00a6 	STS  166,R30
                 ; 0003 00FC     OCR4AH=0x00;
0042a9 93e0 00a9 	STS  169,R30
                 ; 0003 00FD     OCR4AL=0x00;
0042ab 93e0 00a8 	STS  168,R30
                 ; 0003 00FE     OCR4BH=0x00;
0042ad 93e0 00ab 	STS  171,R30
                 ; 0003 00FF     OCR4BL=0x00;
0042af 93e0 00aa 	STS  170,R30
                 ; 0003 0100     OCR4CH=0x00;
0042b1 93e0 00ad 	STS  173,R30
                 ; 0003 0101     OCR4CL=0x00;
0042b3 93e0 00ac 	STS  172,R30
                 ; 0003 0102 
                 ; 0003 0103     // Timer/Counter 5 initialization
                 ; 0003 0104     // Clock source: System Clock
                 ; 0003 0105     // Clock value: Timer5 Stopped
                 ; 0003 0106     // Mode: Normal top=0xFFFF
                 ; 0003 0107     // OC5A output: Discon.
                 ; 0003 0108     // OC5B output: Discon.
                 ; 0003 0109     // OC5C output: Discon.
                 ; 0003 010A     // Noise Canceler: Off
                 ; 0003 010B     // Input Capture on Falling Edge
                 ; 0003 010C     // Timer5 Overflow Interrupt: Off
                 ; 0003 010D     // Input Capture Interrupt: Off
                 ; 0003 010E     // Compare A Match Interrupt: Off
                 ; 0003 010F     // Compare B Match Interrupt: Off
                 ; 0003 0110     // Compare C Match Interrupt: Off
                 ; 0003 0111     TCCR5A=0x00;
0042b5 93e0 0120 	STS  288,R30
                 ; 0003 0112     TCCR5B=0x00;
0042b7 93e0 0121 	STS  289,R30
                 ; 0003 0113     TCNT5H=0x00;
0042b9 93e0 0125 	STS  293,R30
                 ; 0003 0114     TCNT5L=0x00;
0042bb 93e0 0124 	STS  292,R30
                 ; 0003 0115     ICR5H=0x00;
0042bd 93e0 0127 	STS  295,R30
                 ; 0003 0116     ICR5L=0x00;
0042bf 93e0 0126 	STS  294,R30
                 ; 0003 0117     OCR5AH=0x00;
0042c1 93e0 0129 	STS  297,R30
                 ; 0003 0118     OCR5AL=0x00;
0042c3 93e0 0128 	STS  296,R30
                 ; 0003 0119     OCR5BH=0x00;
0042c5 93e0 012b 	STS  299,R30
                 ; 0003 011A     OCR5BL=0x00;
0042c7 93e0 012a 	STS  298,R30
                 ; 0003 011B     OCR5CH=0x00;
0042c9 93e0 012d 	STS  301,R30
                 ; 0003 011C     OCR5CL=0x00;
0042cb 93e0 012c 	STS  300,R30
                 ; 0003 011D 
                 ; 0003 011E     // Watchdog Timer initialization
                 ; 0003 011F     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0120     // Watchdog Timer interrupt: On
                 ; 0003 0121     #pragma optsize-
                 ; 0003 0122     #asm("wdr")
0042cd 95a8      	wdr
                 ; 0003 0123     WDTCSR=0x79;
0042ce e7e9      	LDI  R30,LOW(121)
0042cf 93e0 0060 	STS  96,R30
                 ; 0003 0124     WDTCSR=0x69;
0042d1 e6e9      	LDI  R30,LOW(105)
0042d2 93e0 0060 	STS  96,R30
                 ; 0003 0125 
                 ; 0003 0126     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 0127     #pragma optsize+
                 ; 0003 0128     #endif
                 ; 0003 0129 
                 ; 0003 012A 
                 ; 0003 012B     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 012C     TIMSK0=0x00;
0042d4 e0e0      	LDI  R30,LOW(0)
0042d5 93e0 006e 	STS  110,R30
                 ; 0003 012D 
                 ; 0003 012E     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 012F     TIMSK1=0x00;
0042d7 93e0 006f 	STS  111,R30
                 ; 0003 0130 
                 ; 0003 0131     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0132     TIMSK2=0x00;
0042d9 93e0 0070 	STS  112,R30
                 ; 0003 0133 
                 ; 0003 0134     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0135     TIMSK3=0x00;
0042db 93e0 0071 	STS  113,R30
                 ; 0003 0136 
                 ; 0003 0137     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0138     TIMSK4=0x00;
0042dd 93e0 0072 	STS  114,R30
                 ; 0003 0139 
                 ; 0003 013A     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 013B     TIMSK5=0x00;
0042df 93e0 0073 	STS  115,R30
                 ; 0003 013C }
0042e1 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 013F {
                 _enable_interrupt:
                 ; 0003 0140 
                 ; 0003 0141     // -------------- enable timer ---------------  //
                 ; 0003 0142 
                 ; 0003 0143     switch(ch){
0042e2 940e c439 	CALL SUBOPT_0x94
                 ;	ch -> Y+0
                 ; 0003 0144         case 0: // Timer/Counter 0 Interrupt(s) initialization
0042e4 9730      	SBIW R30,0
0042e5 f0f9      	BREQ _0x6001B
                 ; 0003 0145                 //TIMSK0=0x01;
                 ; 0003 0146                 break;
                 ; 0003 0147         case 1: // Timer/Counter 1 Interrupt(s) initialization
0042e6 30e1      	CPI  R30,LOW(0x1)
0042e7 e0a0      	LDI  R26,HIGH(0x1)
0042e8 07fa      	CPC  R31,R26
0042e9 f421      	BRNE _0x6001D
                 ; 0003 0148                 TIMSK1=0x01;
0042ea e0e1      	LDI  R30,LOW(1)
0042eb 93e0 006f 	STS  111,R30
                 ; 0003 0149                 break;
0042ed c017      	RJMP _0x6001B
                 ; 0003 014A         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
0042ee 30e2      	CPI  R30,LOW(0x2)
0042ef e0a0      	LDI  R26,HIGH(0x2)
0042f0 07fa      	CPC  R31,R26
0042f1 f421      	BRNE _0x6001E
                 ; 0003 014B                 TIMSK2=0x01;
0042f2 e0e1      	LDI  R30,LOW(1)
0042f3 93e0 0070 	STS  112,R30
                 ; 0003 014C                 break;
0042f5 c00f      	RJMP _0x6001B
                 ; 0003 014D         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
0042f6 30e3      	CPI  R30,LOW(0x3)
0042f7 e0a0      	LDI  R26,HIGH(0x3)
0042f8 07fa      	CPC  R31,R26
0042f9 f421      	BRNE _0x6001F
                 ; 0003 014E                 TIMSK3=0x01;
0042fa e0e1      	LDI  R30,LOW(1)
0042fb 93e0 0071 	STS  113,R30
                 ; 0003 014F                 break;
0042fd c007      	RJMP _0x6001B
                 ; 0003 0150         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
0042fe 30e4      	CPI  R30,LOW(0x4)
0042ff e0a0      	LDI  R26,HIGH(0x4)
004300 07fa      	CPC  R31,R26
004301 f419      	BRNE _0x6001B
                 ; 0003 0151                 TIMSK4=0x01;
004302 e0e1      	LDI  R30,LOW(1)
004303 93e0 0072 	STS  114,R30
                 ; 0003 0152                 break;
                 ; 0003 0153     }
                 _0x6001B:
                 ; 0003 0154     // Global enable interrupts
                 ; 0003 0155     #asm("sei")
004305 9478      	sei
                 ; 0003 0156 }
004306 9622      	ADIW R28,2
004307 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0159 {
                 ; 0003 015A 
                 ; 0003 015B     // -------------- enable timer ---------------  //
                 ; 0003 015C 
                 ; 0003 015D     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 015E         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 015F                 //TIMSK0=0x00;
                 ; 0003 0160                 break;
                 ; 0003 0161         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0162                 TIMSK1=0x00;
                 ; 0003 0163                 break;
                 ; 0003 0164         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0165                 TIMSK2=0x00;
                 ; 0003 0166                 break;
                 ; 0003 0167         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0168                 TIMSK3=0x00;
                 ; 0003 0169                 break;
                 ; 0003 016A         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 016B                 TIMSK4=0x00;
                 ; 0003 016C                 break;
                 ; 0003 016D     }
                 ; 0003 016E     // Global enable interrupts
                 ; 0003 016F     #asm("sei")
                 ; 0003 0170 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
004308 e0e0      	LDI  R30,LOW(0)
004309 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
00430a e0e4      	LDI  R30,LOW(4)
00430b b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
00430c efef      	LDI  R30,LOW(255)
00430d b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
00430e efe7      	LDI  R30,LOW(247)
00430f b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
004310 ece0      	LDI  R30,LOW(192)
004311 b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
004312 e0e0      	LDI  R30,LOW(0)
004313 b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
004314 e8e0      	LDI  R30,LOW(128)
004315 b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
004316 e0e0      	LDI  R30,LOW(0)
004317 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
004318 efec      	LDI  R30,LOW(252)
004319 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
00431a b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
00431b e0e0      	LDI  R30,LOW(0)
00431c bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
00431d bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
00431e e3e0      	LDI  R30,LOW(48)
00431f bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
004320 bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
004321 efe8      	LDI  R30,LOW(248)
004322 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
004324 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
004326 e8e0      	LDI  R30,LOW(128)
004327 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
004329 e0e0      	LDI  R30,LOW(0)
00432a 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00432c 940e c172 	CALL SUBOPT_0x2E
00432e f021      	BREQ _0x80005
00432f 940e c172 	CALL SUBOPT_0x2E
004331 30e3      	CPI  R30,LOW(0x3)
004332 f409      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054 
                 ; 0004 0055         //PORTK=0x90;
                 ; 0004 0056         //DDRK=0x0E;
                 ; 0004 0057 
                 ; 0004 0058         /*bongkot edit*/
                 ; 0004 0059         PORTK=0x80;
004333 c007      	RJMP _0x8003D
                 ; 0004 005A         DDRK=0x00;
                 ; 0004 005B     }
                 ; 0004 005C     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
004334 940e c43e 	CALL SUBOPT_0x95
004336 f021      	BREQ _0x80009
004337 940e c172 	CALL SUBOPT_0x2E
004339 30e2      	CPI  R30,LOW(0x2)
00433a f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 005D         // Port K initialization
                 ; 0004 005E         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005F         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0060         PORTK=0x80;
                 _0x8003D:
00433b e8e0      	LDI  R30,LOW(128)
00433c 93e0 0108 	STS  264,R30
                 ; 0004 0061         DDRK=0x00;
00433e e0e0      	LDI  R30,LOW(0)
00433f 93e0 0107 	STS  263,R30
                 ; 0004 0062     }
                 ; 0004 0063 
                 ; 0004 0064     // Port L initialization
                 ; 0004 0065     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0066     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0067     PORTL=0x00;
                 _0x80008:
004341 e0e0      	LDI  R30,LOW(0)
004342 93e0 010b 	STS  267,R30
                 ; 0004 0068     DDRL=0x00;
004344 93e0 010a 	STS  266,R30
                 ; 0004 0069 
                 ; 0004 006A }
004346 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 006D {
                 _IO_dout:
                 ; 0004 006E     switch(ch){
004347 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
004348 81e9      	LDD  R30,Y+1
004349 81fa      	LDD  R31,Y+1+1
                 ; 0004 006F         case 0  :   DOUT1       =   !state;
00434a 9730      	SBIW R30,0
00434b f451      	BRNE _0x8000E
00434c 81e8      	LD   R30,Y
00434d 30e0      	CPI  R30,0
00434e f011      	BREQ _0x8000F
00434f 9873      	CBI  0xE,3
004350 c001      	RJMP _0x80010
                 _0x8000F:
004351 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 0070                     d_out[0]    =   state;
004352 81e8      	LD   R30,Y
004353 93e0 1434 	STS  _d_out,R30
                 ; 0004 0071                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 0072                     break;
004355 c00d      	RJMP _0x8000D
                 ; 0004 0073         case 1  :   DOUT2       =   !state;
                 _0x8000E:
004356 30e1      	CPI  R30,LOW(0x1)
004357 e0a0      	LDI  R26,HIGH(0x1)
004358 07fa      	CPC  R31,R26
004359 f449      	BRNE _0x80014
00435a 81e8      	LD   R30,Y
00435b 30e0      	CPI  R30,0
00435c f011      	BREQ _0x80012
00435d 9874      	CBI  0xE,4
00435e c001      	RJMP _0x80013
                 _0x80012:
00435f 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 0074                     d_out[1]    =   state;
004360 81e8      	LD   R30,Y
                +
004361 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0075                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0076                     break;
                 ; 0004 0077         default :   break;
                 _0x80014:
                 ; 0004 0078     }
                 _0x8000D:
                 ; 0004 0079 }
004363 9623      	ADIW R28,3
004364 9508      	RET
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 007C {
                 _IO_keyCheck:
                 ; 0004 007D     static char flag_hold_MODE   = 0;
                 ; 0004 007E     static char flag_hold_UP     = 0;
                 ; 0004 007F     static char flag_hold_DOWN   = 0;
                 ; 0004 0080     static char flag_hold_OK     = 0;
                 ; 0004 0081 
                 ; 0004 0082     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
004365 940e c44b 	CALL SUBOPT_0x96
004367 f421      	BRNE _0x80016
004368 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
00436a 30e0      	CPI  R30,0
00436b f009      	BREQ _0x80017
                 _0x80016:
00436c c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 0083     {
                 ; 0004 0084         delay_ms(KEY_DELAY);
00436d 940e c452 	CALL SUBOPT_0x97
                 ; 0004 0085 
                 ; 0004 0086         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
00436f 940e c44b 	CALL SUBOPT_0x96
004371 f421      	BRNE _0x80019
004372 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004374 30e0      	CPI  R30,0
004375 f009      	BREQ _0x8001A
                 _0x80019:
004376 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0087         {
                 ; 0004 0088             flag_hold_MODE = 1;
004377 e0e1      	LDI  R30,LOW(1)
004378 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0089             return 0;
00437a c092      	RJMP _0x20E0097
                 ; 0004 008A         }
                 ; 0004 008B     }
                 _0x80018:
                 ; 0004 008C     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
00437b c013      	RJMP _0x8001B
                 _0x80015:
00437c 940e c44b 	CALL SUBOPT_0x96
00437e f021      	BREQ _0x8001D
00437f 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004381 30e0      	CPI  R30,0
004382 f409      	BRNE _0x8001E
                 _0x8001D:
004383 c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 008D     {
                 ; 0004 008E         printDebug("<IO_keyCheck> key MODE\r\n");
                +
004384 e8ec     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
004385 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
004386 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
004387 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
004388 940e c042 	CALL SUBOPT_0x3
                 ; 0004 008F         flag_hold_MODE = 0;
00438a e0e0      	LDI  R30,LOW(0)
00438b 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0090         return KEY_MODE;
00438d e0e1      	LDI  R30,LOW(1)
00438e 9508      	RET
                 ; 0004 0091     }
                 ; 0004 0092 
                 ; 0004 0093     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
00438f 940e c456 	CALL SUBOPT_0x98
004391 f421      	BRNE _0x80020
004392 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
004394 30e0      	CPI  R30,0
004395 f009      	BREQ _0x80021
                 _0x80020:
004396 c00f      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 0094     {
                 ; 0004 0095         delay_ms(KEY_DELAY);
004397 940e c452 	CALL SUBOPT_0x97
                 ; 0004 0096 
                 ; 0004 0097         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
004399 940e c456 	CALL SUBOPT_0x98
00439b f421      	BRNE _0x80023
00439c 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
00439e 30e0      	CPI  R30,0
00439f f009      	BREQ _0x80024
                 _0x80023:
0043a0 c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0098         {
                 ; 0004 0099             flag_hold_UP = 1;
0043a1 e0e1      	LDI  R30,LOW(1)
0043a2 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009A             return 0;
0043a4 c068      	RJMP _0x20E0097
                 ; 0004 009B         }
                 ; 0004 009C     }
                 _0x80022:
                 ; 0004 009D     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
0043a5 c013      	RJMP _0x80025
                 _0x8001F:
0043a6 940e c456 	CALL SUBOPT_0x98
0043a8 f021      	BREQ _0x80027
0043a9 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0043ab 30e0      	CPI  R30,0
0043ac f409      	BRNE _0x80028
                 _0x80027:
0043ad c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 009E     {
                 ; 0004 009F         printDebug("<IO_keyCheck> key UP\r\n");
                +
0043ae eae5     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
0043af e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
0043b0 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
0043b1 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
0043b2 940e c042 	CALL SUBOPT_0x3
                 ; 0004 00A0         flag_hold_UP = 0;
0043b4 e0e0      	LDI  R30,LOW(0)
0043b5 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 00A1         return KEY_UP;
0043b7 e0e2      	LDI  R30,LOW(2)
0043b8 9508      	RET
                 ; 0004 00A2     }
                 ; 0004 00A3 
                 ; 0004 00A4     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
0043b9 940e c45f 	CALL SUBOPT_0x99
0043bb f421      	BRNE _0x8002A
0043bc 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0043be 30e0      	CPI  R30,0
0043bf f009      	BREQ _0x8002B
                 _0x8002A:
0043c0 c00f      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A5     {
                 ; 0004 00A6         delay_ms(KEY_DELAY);
0043c1 940e c452 	CALL SUBOPT_0x97
                 ; 0004 00A7 
                 ; 0004 00A8         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
0043c3 940e c45f 	CALL SUBOPT_0x99
0043c5 f421      	BRNE _0x8002D
0043c6 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0043c8 30e0      	CPI  R30,0
0043c9 f009      	BREQ _0x8002E
                 _0x8002D:
0043ca c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A9         {
                 ; 0004 00AA             flag_hold_DOWN = 1;
0043cb e0e1      	LDI  R30,LOW(1)
0043cc 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AB             return 0;
0043ce c03e      	RJMP _0x20E0097
                 ; 0004 00AC         }
                 ; 0004 00AD     }
                 _0x8002C:
                 ; 0004 00AE     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
0043cf c013      	RJMP _0x8002F
                 _0x80029:
0043d0 940e c45f 	CALL SUBOPT_0x99
0043d2 f021      	BREQ _0x80031
0043d3 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0043d5 30e0      	CPI  R30,0
0043d6 f409      	BRNE _0x80032
                 _0x80031:
0043d7 c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AF     {
                 ; 0004 00B0         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
0043d8 ebec     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
0043d9 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
0043da e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
0043db e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
0043dc 940e c042 	CALL SUBOPT_0x3
                 ; 0004 00B1         flag_hold_DOWN = 0;
0043de e0e0      	LDI  R30,LOW(0)
0043df 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00B2         return KEY_DOWN;
0043e1 e0e3      	LDI  R30,LOW(3)
0043e2 9508      	RET
                 ; 0004 00B3     }
                 ; 0004 00B4 
                 ; 0004 00B5     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
0043e3 940e c468 	CALL SUBOPT_0x9A
0043e5 f421      	BRNE _0x80034
0043e6 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0043e8 30e0      	CPI  R30,0
0043e9 f009      	BREQ _0x80035
                 _0x80034:
0043ea c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B6     {
                 ; 0004 00B7         delay_ms(KEY_DELAY);
0043eb 940e c452 	CALL SUBOPT_0x97
                 ; 0004 00B8 
                 ; 0004 00B9         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
0043ed 940e c468 	CALL SUBOPT_0x9A
0043ef f421      	BRNE _0x80037
0043f0 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0043f2 30e0      	CPI  R30,0
0043f3 f009      	BREQ _0x80038
                 _0x80037:
0043f4 c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00BA         {
                 ; 0004 00BB             flag_hold_OK = 1;
0043f5 e0e1      	LDI  R30,LOW(1)
0043f6 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BC             return 0;
0043f8 c014      	RJMP _0x20E0097
                 ; 0004 00BD         }
                 ; 0004 00BE     }
                 _0x80036:
                 ; 0004 00BF     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
0043f9 c013      	RJMP _0x80039
                 _0x80033:
0043fa 940e c468 	CALL SUBOPT_0x9A
0043fc f021      	BREQ _0x8003B
0043fd 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0043ff 30e0      	CPI  R30,0
004400 f409      	BRNE _0x8003C
                 _0x8003B:
004401 c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00C0     {
                 ; 0004 00C1         printDebug("<IO_keyCheck> key OK\r\n");
                +
004402 ede5     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
004403 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
004404 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
004405 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
004406 940e c042 	CALL SUBOPT_0x3
                 ; 0004 00C2         flag_hold_OK = 0;
004408 e0e0      	LDI  R30,LOW(0)
004409 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00C3         return KEY_OK;
00440b e0e4      	LDI  R30,LOW(4)
00440c 9508      	RET
                 ; 0004 00C4     }
                 ; 0004 00C5 
                 ; 0004 00C6     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0097:
00440d e0e0      	LDI  R30,LOW(0)
00440e 9508      	RET
                 ; 0004 00C7 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     char refADC;
                 ; 0005 0012     unsigned int adc_data = 0x0000;
                 ; 0005 0013      if(TEMP_SEL == TEMP_TYPE_K){
00440f 93aa      	ST   -Y,R26
004410 940e e0d2 	CALL __SAVELOCR4
                 ;	adc_input -> Y+4
                 ;	refADC -> R17
                 ;	adc_data -> R18,R19
                +
004412 e020     +LDI R18 , LOW ( 0 )
004413 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
004414 940e c172 	CALL SUBOPT_0x2E
004416 f411      	BRNE _0xA0003
                 ; 0005 0014           refADC = ADC_VREF3_3_TYPE;
004417 e410      	LDI  R17,LOW(64)
                 ; 0005 0015      }else if(TEMP_SEL == TEMP_TMEC){
004418 c005      	RJMP _0xA0004
                 _0xA0003:
004419 940e c172 	CALL SUBOPT_0x2E
00441b 30e1      	CPI  R30,LOW(0x1)
00441c f409      	BRNE _0xA0005
                 ; 0005 0016           refADC = ADC_VREF_TYPE;
00441d ec10      	LDI  R17,LOW(192)
                 ; 0005 0017      }
                 ; 0005 0018     //ADMUX  &= ADC_VREF_TYPE;
                 ; 0005 0019     ADMUX  &= refADC;
                 _0xA0005:
                 _0xA0004:
00441e e7ac      	LDI  R26,LOW(124)
00441f e0b0      	LDI  R27,HIGH(124)
004420 91ec      	LD   R30,X
004421 23e1      	AND  R30,R17
004422 93ec      	ST   X,R30
                 ; 0005 001A     ADCSRB &= 0xf7;
004423 91e0 007b 	LDS  R30,123
004425 7fe7      	ANDI R30,0XF7
004426 93e0 007b 	STS  123,R30
                 ; 0005 001B 
                 ; 0005 001C    // ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
                 ; 0005 001D     ADMUX  |= (adc_input & 0x07) | (refADC & 0xff);
004428 2e1a      	MOV  R1,R26
004429 900c      	LD   R0,X
00442a 81ec      	LDD  R30,Y+4
00442b 70e7      	ANDI R30,LOW(0x7)
00442c 2fae      	MOV  R26,R30
00442d 2fe1      	MOV  R30,R17
00442e 2bea      	OR   R30,R26
00442f 29e0      	OR   R30,R0
004430 2da1      	MOV  R26,R1
004431 93ec      	ST   X,R30
                 ; 0005 001E 
                 ; 0005 001F     if(adc_input > 7)
004432 81ac      	LDD  R26,Y+4
004433 30a8      	CPI  R26,LOW(0x8)
004434 f020      	BRLO _0xA0006
                 ; 0005 0020     {
                 ; 0005 0021         ADCSRB |= 0x08;
004435 91e0 007b 	LDS  R30,123
004437 60e8      	ORI  R30,8
004438 c003      	RJMP _0xA0023
                 ; 0005 0022     }
                 ; 0005 0023     else
                 _0xA0006:
                 ; 0005 0024     {
                 ; 0005 0025         ADCSRB &= 0xf7;
004439 91e0 007b 	LDS  R30,123
00443b 7fe7      	ANDI R30,0XF7
                 _0xA0023:
00443c 93e0 007b 	STS  123,R30
                 ; 0005 0026     }
                 ; 0005 0027 
                 ; 0005 0028     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0029     //delay_us(20);
                 ; 0005 002A     delay_us(1);
                +
00443e e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
00443f 958a     +DEC R24
004440 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0005 002B 
                 ; 0005 002C     // Start the AD conversion
                 ; 0005 002D     ADCSRA  |= 0x80; //ENABLE ADC
004441 91e0 007a 	LDS  R30,122
004443 68e0      	ORI  R30,0x80
004444 93e0 007a 	STS  122,R30
                 ; 0005 002E     ADCSRA  |= 0x40;
004446 91e0 007a 	LDS  R30,122
004448 64e0      	ORI  R30,0x40
004449 93e0 007a 	STS  122,R30
                 ; 0005 002F 
                 ; 0005 0030     // Wait for the AD conversion to complete
                 ; 0005 0031     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 0032     while ( (ADCSRA & 0x10)==0);
                 _0xA0008:
00444b 91e0 007a 	LDS  R30,122
00444d 71e0      	ANDI R30,LOW(0x10)
00444e f3e1      	BREQ _0xA0008
                 ; 0005 0033     adc_data = ADCL;
00444f 9120 0078 	LDS  R18,120
004451 2733      	CLR  R19
                 ; 0005 0034     adc_data |= (ADCH & 0x00ff) << 8;
004452 91e0 0079 	LDS  R30,121
004454 940e c471 	CALL SUBOPT_0x9B
004456 2ffe      	MOV  R31,R30
004457 e0e0      	LDI  R30,0
                +
004458 2b2e     +OR R18 , R30
004459 2b3f     +OR R19 , R31
                 	__ORWRR 18,19,30,31
                 ; 0005 0035 
                 ; 0005 0036     ADCSRA  |=0x10;
00445a 91e0 007a 	LDS  R30,122
00445c 61e0      	ORI  R30,0x10
00445d 93e0 007a 	STS  122,R30
                 ; 0005 0037 
                 ; 0005 0038     //delay_us(50);
                 ; 0005 0039 
                 ; 0005 003A     return adc_data;
00445f 01f9      	MOVW R30,R18
004460 940e e0d9 	CALL __LOADLOCR4
004462 9625      	ADIW R28,5
004463 9508      	RET
                 ; 0005 003B }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 003E {
                 ; 0005 003F     static int      i = 0;
                 ; 0005 0040     static char     batt_read_flag = 0;
                 ; 0005 0041 
                 ; 0005 0042     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 0043         /*
                 ; 0005 0044         printDebug("<%d>",i);
                 ; 0005 0045         SENSOR_SELECT(i);
                 ; 0005 0046         delay_ms(20);
                 ; 0005 0047         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0048         if(++i >= 5){   i = 0;  }
                 ; 0005 0049         */
                 ; 0005 004A     }
                 ; 0005 004B     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 004C //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 004D //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 004E //        }
                 ; 0005 004F     }
                 ; 0005 0050 
                 ; 0005 0051 //    if(++batt_read_flag > 25){
                 ; 0005 0052 //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 0053 //        batt_read_flag = 0;
                 ; 0005 0054 //    }
                 ; 0005 0055 
                 ; 0005 0056     return 0;
                 ; 0005 0057 }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 005A {
                 _readBattery:
                 ; 0005 005B     float   vBATT;
                 ; 0005 005C 
                 ; 0005 005D     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
004464 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
004465 940e c474 	CALL SUBOPT_0x9C
                +
004467 e6e6     +LDI R30 , LOW ( 0x411E6666 )
004468 e6f6     +LDI R31 , HIGH ( 0x411E6666 )
004469 e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
00446a e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
00446b 940e ddfc 	CALL __MULF12
00446d 937f      	PUSH R23
00446e 936f      	PUSH R22
00446f 93ff      	PUSH R31
004470 93ef      	PUSH R30
004471 e0ae      	LDI  R26,LOW(14)
004472 df9c      	RCALL _read_adc
004473 940e c47d 	CALL SUBOPT_0x9D
004475 940e c482 	CALL SUBOPT_0x9E
004477 91af      	POP  R26
004478 91bf      	POP  R27
004479 918f      	POP  R24
00447a 919f      	POP  R25
00447b 940e c489 	CALL SUBOPT_0x9F
00447d 93e0 14e8 	STS  _adcBatt,R30
00447f 93f0 14e9 	STS  _adcBatt+1,R31
004481 9360 14ea 	STS  _adcBatt+2,R22
004483 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 005E 
                 ; 0005 005F     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
004485 940e c190 	CALL SUBOPT_0x32
004487 940e c474 	CALL SUBOPT_0x9C
004489 940e ddfc 	CALL __MULF12
                +
00448b e6a6     +LDI R26 , LOW ( 0x3FE66666 )
00448c e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
00448d ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
00448e e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
00448f 940e ddfc 	CALL __MULF12
004491 940e c494 	CALL SUBOPT_0xA0
                 ; 0005 0060     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0061 
                 ; 0005 0062     return vBATT;
004493 940e c3d9 	CALL SUBOPT_0x87
                 _0x20E0096:
004495 9624      	ADIW R28,4
004496 9508      	RET
                 ; 0005 0063 }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 0066 {
                 _adc_init_read:
                 ; 0005 0067     int i;
                 ; 0005 0068     printDebug("Initializing ADC.. ");
004497 931a      	ST   -Y,R17
004498 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
004499 eeec     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
00449a e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
00449b e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
00449c e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
00449d 940e c042 	CALL SUBOPT_0x3
                 ; 0005 0069 
                 ; 0005 006A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00449f 940e c172 	CALL SUBOPT_0x2E
0044a1 f021      	BREQ _0xA0013
0044a2 940e c172 	CALL SUBOPT_0x2E
0044a4 30e3      	CPI  R30,LOW(0x3)
0044a5 f501      	BRNE _0xA0012
                 _0xA0013:
                 ; 0005 006B         for(i=0;i<5;i++){ \
                 ; 0005 006C             SENSOR_SELECT(i);
                +
0044a6 e000     +LDI R16 , LOW ( 0 )
0044a7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0016:
                +
0044a8 3005     +CPI R16 , LOW ( 5 )
0044a9 e0e0     +LDI R30 , HIGH ( 5 )
0044aa 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0044ab f4cc      	BRGE _0xA0017
0044ac 940e c497 	CALL SUBOPT_0xA1
0044ae 2fe0      	MOV  R30,R16
0044af 940e c4a1 	CALL SUBOPT_0xA2
                 ; 0005 006D             delay_ms(20);
0044b1 940e c4a6 	CALL SUBOPT_0xA3
0044b3 940e dcfc 	CALL _delay_ms
                 ; 0005 006E             adcData[i] = read_adc(8);
0044b5 01f8      	MOVW R30,R16
0044b6 940e c18b 	CALL SUBOPT_0x31
0044b8 0fea      	ADD  R30,R26
0044b9 1ffb      	ADC  R31,R27
0044ba 93ff      	PUSH R31
0044bb 93ef      	PUSH R30
0044bc e0a8      	LDI  R26,LOW(8)
0044bd df51      	RCALL _read_adc
0044be 91af      	POP  R26
0044bf 91bf      	POP  R27
0044c0 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 006F         }
                +
0044c2 5f0f     +SUBI R16 , LOW ( - 1 )
0044c3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0044c4 cfe3      	RJMP _0xA0016
                 _0xA0017:
                 ; 0005 0070     }
                 ; 0005 0071     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
0044c5 c025      	RJMP _0xA0018
                 _0xA0012:
0044c6 940e c43e 	CALL SUBOPT_0x95
0044c8 f021      	BREQ _0xA001A
0044c9 940e c172 	CALL SUBOPT_0x2E
0044cb 30e2      	CPI  R30,LOW(0x2)
0044cc f4f1      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0072         adcData[0] = read_adc(8);
0044cd e0a8      	LDI  R26,LOW(8)
0044ce df40      	RCALL _read_adc
0044cf e3a6      	LDI  R26,LOW(_adcData)
0044d0 e1b4      	LDI  R27,HIGH(_adcData)
0044d1 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 0073         adcData[1] = read_adc(9);
0044d3 e0a9      	LDI  R26,LOW(9)
0044d4 df3a      	RCALL _read_adc
                +
0044d5 e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
0044d6 e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
0044d7 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 0074         adcData[2] = read_adc(10);
0044d9 e0aa      	LDI  R26,LOW(10)
0044da df34      	RCALL _read_adc
                +
0044db e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
0044dc e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
0044dd 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 0075         adcData[3] = read_adc(11);
0044df e0ab      	LDI  R26,LOW(11)
0044e0 df2e      	RCALL _read_adc
                +
0044e1 e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
0044e2 e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
0044e3 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 0076         adcData[4] = read_adc(12);
0044e5 e0ac      	LDI  R26,LOW(12)
0044e6 df28      	RCALL _read_adc
                +
0044e7 e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
0044e8 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
0044e9 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 0077     }
                 ; 0005 0078 
                 ; 0005 0079     adcBatt = read_adc(14);
                 _0xA0019:
                 _0xA0018:
0044eb e0ae      	LDI  R26,LOW(14)
0044ec df22      	RCALL _read_adc
0044ed eea8      	LDI  R26,LOW(_adcBatt)
0044ee e1b4      	LDI  R27,HIGH(_adcBatt)
0044ef 940e c4a9 	CALL SUBOPT_0xA4
                 ; 0005 007A 
                 ; 0005 007B     printDebug("OK\r\n");
                +
0044f1 e0e0     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
0044f2 e1f2     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
0044f3 e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
0044f4 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
0044f5 940e c042 	CALL SUBOPT_0x3
                 ; 0005 007C }
0044f7 9109      	LD   R16,Y+
0044f8 9119      	LD   R17,Y+
0044f9 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 007F {
                 _init_adc:
                 ; 0005 0080     char refADC;
                 ; 0005 0081     // ADC initialization
                 ; 0005 0082     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 0083     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 0084     // ADC Auto Trigger Source: Free Running
                 ; 0005 0085     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 0086     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 0087     DIDR0=0x00;
0044fa 931a      	ST   -Y,R17
                 ;	refADC -> R17
0044fb e0e0      	LDI  R30,LOW(0)
0044fc 93e0 007e 	STS  126,R30
                 ; 0005 0088 
                 ; 0005 0089 
                 ; 0005 008A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0044fe 940e c172 	CALL SUBOPT_0x2E
004500 f021      	BREQ _0xA001D
004501 940e c172 	CALL SUBOPT_0x2E
004503 30e3      	CPI  R30,LOW(0x3)
004504 f441      	BRNE _0xA001C
                 _0xA001D:
                 ; 0005 008B         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 008C         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 008D         DIDR2=0x61;
004505 e6e1      	LDI  R30,LOW(97)
004506 93e0 007d 	STS  125,R30
                 ; 0005 008E 
                 ; 0005 008F         /*bongkot edit resigter*/
                 ; 0005 0090         DIDR2=0x7F;
004508 e7ef      	LDI  R30,LOW(127)
004509 93e0 007d 	STS  125,R30
                 ; 0005 0091         refADC = ADC_VREF3_3_TYPE;
00450b e410      	LDI  R17,LOW(64)
                 ; 0005 0092         //ADMUX   = 0x40;     //3.3v reference
                 ; 0005 0093     }
                 ; 0005 0094     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
00450c c00b      	RJMP _0xA001F
                 _0xA001C:
00450d 940e c43e 	CALL SUBOPT_0x95
00450f f021      	BREQ _0xA0021
004510 940e c172 	CALL SUBOPT_0x2E
004512 30e2      	CPI  R30,LOW(0x2)
004513 f421      	BRNE _0xA0020
                 _0xA0021:
                 ; 0005 0095         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0096         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0097         DIDR2=0x7F;
004514 e7ef      	LDI  R30,LOW(127)
004515 93e0 007d 	STS  125,R30
                 ; 0005 0098        // ADMUX   = ADC_VREF_TYPE;
                 ; 0005 0099         refADC = ADC_VREF_TYPE;
004517 ec10      	LDI  R17,LOW(192)
                 ; 0005 009A     }
                 ; 0005 009B 
                 ; 0005 009C 
                 ; 0005 009D     //ADMUX   = ADC_VREF_TYPE;
                 ; 0005 009E     ADMUX   = refADC;
                 _0xA0020:
                 _0xA001F:
004518 9310 007c 	STS  124,R17
                 ; 0005 009F     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 00A0               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 00A1               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 00A2               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 00A3               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 00A4               (1<<2) |          //-----
                 ; 0005 00A5               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 00A6               (0<<0);           //-----
00451a e8e6      	LDI  R30,LOW(134)
00451b 93e0 007a 	STS  122,R30
                 ; 0005 00A7 
                 ; 0005 00A8     ADCSRB  = 0;
00451d e0e0      	LDI  R30,LOW(0)
00451e 93e0 007b 	STS  123,R30
                 ; 0005 00A9 
                 ; 0005 00AA     //adc_init_read();
                 ; 0005 00AB }
004520 9119      	LD   R17,Y+
004521 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
004522 94f8      	cli
                 ; 0006 000E     i2c_start();
004523 940e c4ad 	CALL SUBOPT_0xA5
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
004525 e0a5      	LDI  R26,LOW(5)
004526 940e dce4 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
004528 eaa6      	LDI  R26,LOW(166)
004529 940e c4b2 	CALL SUBOPT_0xA6
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
00452b 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
00452c 940e c4b6 	CALL SUBOPT_0xA7
                 ; 0006 0017 
                 ; 0006 0018     return 0;
00452e 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
00452f 9724      	SBIW R28,4
004530 940e e0d2 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
004532 94f8      	cli
                 ; 0006 0021     i2c_start();
004533 940e c4ad 	CALL SUBOPT_0xA5
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
004535 e0a0      	LDI  R26,LOW(0)
004536 940e dce4 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
004538 940e dcb0 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
00453a eda1      	LDI  R26,LOW(209)
00453b 940e dce4 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
00453d e0a1      	LDI  R26,LOW(1)
00453e 940e dcc9 	CALL _i2c_read
004540 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
004541 e0a1      	LDI  R26,LOW(1)
004542 940e dcc9 	CALL _i2c_read
004544 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
004545 e0a1      	LDI  R26,LOW(1)
004546 940e dcc9 	CALL _i2c_read
004548 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
004549 e0a0      	LDI  R26,LOW(0)
00454a 940e dcc9 	CALL _i2c_read
00454c 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
00454d 940e dcbf 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
00454f 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
004550 2fe2      	MOV  R30,R18
004551 27ff      	CLR  R31
004552 2766      	CLR  R22
004553 2777      	CLR  R23
004554 940e c4bd 	CALL SUBOPT_0xA8
                 ; 0006 002E     z <<= 8;
004556 940e c4c2 	CALL SUBOPT_0xA9
004558 940e c4c7 	CALL SUBOPT_0xAA
                 ; 0006 002F     z += rtc_reg3;
00455a 2fe3      	MOV  R30,R19
00455b 940e c4cb 	CALL SUBOPT_0xAB
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
00455d 2fe0      	MOV  R30,R16
00455e 940e c4cb 	CALL SUBOPT_0xAB
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
004560 940e c4d4 	CALL SUBOPT_0xAC
004562 940e c4c2 	CALL SUBOPT_0xA9
004564 940e c4d7 	CALL SUBOPT_0xAD
004566 940e c4dc 	CALL SUBOPT_0xAE
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
004568 940e e0d9 	CALL __LOADLOCR4
00456a 9628      	ADIW R28,8
00456b 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
00456c 93ba      	ST   -Y,R27
00456d 93aa      	ST   -Y,R26
00456e 97a8      	SBIW R28,40
00456f e08c      	LDI  R24,12
004570 e1ac      	LDI  R26,LOW(28)
004571 e0b0      	LDI  R27,HIGH(28)
004572 e0e6      	LDI  R30,LOW(_0xC0003*2)
004573 e1f2      	LDI  R31,HIGH(_0xC0003*2)
004574 e060      	LDI  R22,BYTE3(_0xC0003*2)
004575 940e e0de 	CALL __INITLOCB
004577 931a      	ST   -Y,R17
004578 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
004579 a5ac     +LDD R26 , Y + 44
00457a a5bd     +LDD R27 , Y + 44 + 1
00457b a58e     +LDD R24 , Y + 44 + 2
00457c a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00457d 940e c4de 	CALL SUBOPT_0xAF
00457f 940e c4e5 	CALL SUBOPT_0xB0
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
004581 940e c4ea 	CALL SUBOPT_0xB1
                +
004583 a5ac     +LDD R26 , Y + 44
004584 a5bd     +LDD R27 , Y + 44 + 1
004585 a58e     +LDD R24 , Y + 44 + 2
004586 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
004587 940e dec2 	CALL __SUBD21
                +
004589 87aa     +STD Y + 10 , R26
00458a 87bb     +STD Y + 10 + 1 , R27
00458b 878c     +STD Y + 10 + 2 , R24
00458c 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
00458d 940e c2aa 	CALL SUBOPT_0x59
00458f 940e c4de 	CALL SUBOPT_0xAF
004591 940e c4f1 	CALL SUBOPT_0xB2
                 ; 0006 0044     min = j - (60 * n);
004593 940e c4f6 	CALL SUBOPT_0xB3
004595 940e c4ea 	CALL SUBOPT_0xB1
004597 940e c2aa 	CALL SUBOPT_0x59
004599 940e dec2 	CALL __SUBD21
                +
00459b 87ae     +STD Y + 14 , R26
00459c 87bf     +STD Y + 14 + 1 , R27
00459d 8b88     +STD Y + 14 + 2 , R24
00459e 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
00459f 940e c4fb 	CALL SUBOPT_0xB4
                +
0045a1 e1e8     +LDI R30 , LOW ( 0x18 )
0045a2 e0f0     +LDI R31 , HIGH ( 0x18 )
0045a3 e060     +LDI R22 , BYTE3 ( 0x18 )
0045a4 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
0045a5 940e dfaf 	CALL __DIVD21U
0045a7 940e c4e5 	CALL SUBOPT_0xB0
                 ; 0006 0046     hrs = n - (24 * j);
                +
0045a9 e1a8     +LDI R26 , LOW ( 0x18 )
0045aa e0b0     +LDI R27 , HIGH ( 0x18 )
0045ab e080     +LDI R24 , BYTE3 ( 0x18 )
0045ac e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
0045ad 940e df59 	CALL __MULD12U
0045af 940e c4fb 	CALL SUBOPT_0xB4
0045b1 940e dec2 	CALL __SUBD21
                +
0045b3 8baa     +STD Y + 18 , R26
0045b4 8bbb     +STD Y + 18 + 1 , R27
0045b5 8b8c     +STD Y + 18 + 2 , R24
0045b6 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
0045b7 940e c500 	CALL SUBOPT_0xB5
                +
0045b9 52e5     +SUBI R30 , LOW ( - 731 )
0045ba 4ffd     +SBCI R31 , HIGH ( - 731 )
0045bb 4f6f     +SBCI R22 , BYTE3 ( - 731 )
0045bc 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
0045bd 940e c505 	CALL SUBOPT_0xB6
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
0045bf 940e c2aa 	CALL SUBOPT_0x59
                +
0045c1 e0e7     +LDI R30 , LOW ( 0x7 )
0045c2 e0f0     +LDI R31 , HIGH ( 0x7 )
0045c3 e060     +LDI R22 , BYTE3 ( 0x7 )
0045c4 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
0045c5 940e dff6 	CALL __MODD21U
0045c7 9631      	ADIW R30,1
0045c8 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
0045c9 940e c50a 	CALL SUBOPT_0xB7
0045cb 940e dfaf 	CALL __DIVD21U
0045cd 940e c510 	CALL SUBOPT_0xB8
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
0045cf 940e c50a 	CALL SUBOPT_0xB7
0045d1 940e dff6 	CALL __MODD21U
                +
0045d3 8fea     +STD Y + 26 , R30
0045d4 8ffb     +STD Y + 26 + 1 , R31
0045d5 8f6c     +STD Y + 26 + 2 , R22
0045d6 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
0045d7 940e c515 	CALL SUBOPT_0xB9
0045d9 940e c51a 	CALL SUBOPT_0xBA
0045db f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
0045dc 940e c522 	CALL SUBOPT_0xBB
0045de 940e c527 	CALL SUBOPT_0xBC
0045e0 940e c510 	CALL SUBOPT_0xB8
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
0045e2 940e c52c 	CALL SUBOPT_0xBD
0045e4 940e c500 	CALL SUBOPT_0xB5
0045e6 940e debd 	CALL __SUBD12
0045e8 01df      	MOVW R26,R30
0045e9 01cb      	MOVW R24,R22
                +
0045ea e6ed     +LDI R30 , LOW ( 0x16D )
0045eb e0f1     +LDI R31 , HIGH ( 0x16D )
0045ec e060     +LDI R22 , BYTE3 ( 0x16D )
0045ed e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
0045ee 940e dfaf 	CALL __DIVD21U
                +
0045f0 a3ee     +STD Y + 38 , R30
0045f1 a3ff     +STD Y + 38 + 1 , R31
0045f2 a768     +STD Y + 38 + 2 , R22
0045f3 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
0045f4 940e c531 	CALL SUBOPT_0xBE
0045f6 940e c536 	CALL SUBOPT_0xBF
0045f8 940e c2aa 	CALL SUBOPT_0x59
0045fa 940e c53d 	CALL SUBOPT_0xC0
0045fc 940e c52c 	CALL SUBOPT_0xBD
0045fe 940e debd 	CALL __SUBD12
004600 940e c542 	CALL SUBOPT_0xC1
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
004602 940e c515 	CALL SUBOPT_0xB9
                +
004604 36ae     +CPI R26 , LOW ( 0x16E )
004605 e0e1     +LDI R30 , HIGH ( 0x16E )
004606 07be     +CPC R27 , R30
004607 e0e0     +LDI R30 , BYTE3 ( 0x16E )
004608 078e     +CPC R24 , R30
004609 e0e0     +LDI R30 , BYTE4 ( 0x16E )
00460a 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
00460b f428      	BRSH _0xC0006
00460c 940e c515 	CALL SUBOPT_0xB9
00460e 940e c51a 	CALL SUBOPT_0xBA
004610 f408      	BRSH _0xC0007
                 _0xC0006:
004611 c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
004612 940e c547 	CALL SUBOPT_0xC2
004614 940e c527 	CALL SUBOPT_0xBC
004616 940e c542 	CALL SUBOPT_0xC1
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
004618 940e c531 	CALL SUBOPT_0xBE
                +
00461a 55e0     +SUBI R30 , LOW ( - 1968 )
00461b 4ff8     +SBCI R31 , HIGH ( - 1968 )
00461c 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
00461d 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
00461e a3ee     +STD Y + 38 , R30
00461f a3ff     +STD Y + 38 + 1 , R31
004620 a768     +STD Y + 38 + 2 , R22
004621 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
004622 e0ec     +LDI R30 , LOW ( 0xC )
004623 e0f0     +LDI R31 , HIGH ( 0xC )
004624 e060     +LDI R22 , BYTE3 ( 0xC )
004625 e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
004626 a3ea     +STD Y + 34 , R30
004627 a3fb     +STD Y + 34 + 1 , R31
004628 a36c     +STD Y + 34 + 2 , R22
004629 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
00462a a1aa     +LDD R26 , Y + 34
00462b a1bb     +LDD R27 , Y + 34 + 1
00462c a18c     +LDD R24 , Y + 34 + 2
00462d a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
00462e 940e e0c0 	CALL __CPD02
004630 f010      	BRLO PC+3
004631 940c 46be 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
004633 940e c54c 	CALL SUBOPT_0xC3
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
004635 940e c551 	CALL SUBOPT_0xC4
004637 f431      	BRNE _0xC000E
004638 e0e0      	LDI  R30,LOW(0)
                +
004639 8fea     +STD Y + 26 , R30
00463a 8feb     +STD Y + 26 + 1 , R30
00463b 8fec     +STD Y + 26 + 2 , R30
00463c 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
00463d c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
00463e 940e c559 	CALL SUBOPT_0xC5
004640 f429      	BRNE _0xC000F
                +
004641 e1ef     +LDI R30 , LOW ( 0x1F )
004642 e0f0     +LDI R31 , HIGH ( 0x1F )
004643 e060     +LDI R22 , BYTE3 ( 0x1F )
004644 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
004645 c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
004646 940e c561 	CALL SUBOPT_0xC6
004648 f429      	BRNE _0xC0010
                +
004649 e3eb     +LDI R30 , LOW ( 0x3B )
00464a e0f0     +LDI R31 , HIGH ( 0x3B )
00464b e060     +LDI R22 , BYTE3 ( 0x3B )
00464c e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
00464d c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
00464e 940e c569 	CALL SUBOPT_0xC7
004650 f429      	BRNE _0xC0011
                +
004651 e5ea     +LDI R30 , LOW ( 0x5A )
004652 e0f0     +LDI R31 , HIGH ( 0x5A )
004653 e060     +LDI R22 , BYTE3 ( 0x5A )
004654 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
004655 c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
004656 940e c571 	CALL SUBOPT_0xC8
004658 f429      	BRNE _0xC0012
                +
004659 e7e8     +LDI R30 , LOW ( 0x78 )
00465a e0f0     +LDI R31 , HIGH ( 0x78 )
00465b e060     +LDI R22 , BYTE3 ( 0x78 )
00465c e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
00465d c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
00465e 940e c579 	CALL SUBOPT_0xC9
004660 f429      	BRNE _0xC0013
                +
004661 e9e7     +LDI R30 , LOW ( 0x97 )
004662 e0f0     +LDI R31 , HIGH ( 0x97 )
004663 e060     +LDI R22 , BYTE3 ( 0x97 )
004664 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
004665 c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
004666 940e c581 	CALL SUBOPT_0xCA
004668 f429      	BRNE _0xC0014
                +
004669 ebe5     +LDI R30 , LOW ( 0xB5 )
00466a e0f0     +LDI R31 , HIGH ( 0xB5 )
00466b e060     +LDI R22 , BYTE3 ( 0xB5 )
00466c e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
00466d c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
00466e 940e c589 	CALL SUBOPT_0xCB
004670 f429      	BRNE _0xC0015
                +
004671 ede4     +LDI R30 , LOW ( 0xD4 )
004672 e0f0     +LDI R31 , HIGH ( 0xD4 )
004673 e060     +LDI R22 , BYTE3 ( 0xD4 )
004674 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
004675 c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
004676 940e c591 	CALL SUBOPT_0xCC
004678 f429      	BRNE _0xC0016
                +
004679 efe3     +LDI R30 , LOW ( 0xF3 )
00467a e0f0     +LDI R31 , HIGH ( 0xF3 )
00467b e060     +LDI R22 , BYTE3 ( 0xF3 )
00467c e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
00467d c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
00467e 940e c599 	CALL SUBOPT_0xCD
004680 f429      	BRNE _0xC0017
                +
004681 e1e1     +LDI R30 , LOW ( 0x111 )
004682 e0f1     +LDI R31 , HIGH ( 0x111 )
004683 e060     +LDI R22 , BYTE3 ( 0x111 )
004684 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
004685 c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
004686 940e c5a1 	CALL SUBOPT_0xCE
004688 f429      	BRNE _0xC0018
                +
004689 e3e0     +LDI R30 , LOW ( 0x130 )
00468a e0f1     +LDI R31 , HIGH ( 0x130 )
00468b e060     +LDI R22 , BYTE3 ( 0x130 )
00468c e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
00468d c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
00468e 940e c5a9 	CALL SUBOPT_0xCF
004690 f441      	BRNE _0xC000D
                +
004691 e4ee     +LDI R30 , LOW ( 0x14E )
004692 e0f1     +LDI R31 , HIGH ( 0x14E )
004693 e060     +LDI R22 , BYTE3 ( 0x14E )
004694 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
004695 8fea     +STD Y + 26 , R30
004696 8ffb     +STD Y + 26 + 1 , R31
004697 8f6c     +STD Y + 26 + 2 , R22
004698 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
004699 a1aa     +LDD R26 , Y + 34
00469a a1bb     +LDD R27 , Y + 34 + 1
00469b a18c     +LDD R24 , Y + 34 + 2
00469c a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
00469d 940e c5b1 	CALL SUBOPT_0xD0
00469f f020      	BRLO _0xC001B
0046a0 940e c531 	CALL SUBOPT_0xBE
0046a2 70e3      	ANDI R30,LOW(0x3)
0046a3 f009      	BREQ _0xC001C
                 _0xC001B:
0046a4 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
0046a5 940e c5b9 	CALL SUBOPT_0xD1
0046a7 940e c527 	CALL SUBOPT_0xBC
                +
0046a9 8fea     +STD Y + 26 , R30
0046aa 8ffb     +STD Y + 26 + 1 , R31
0046ab 8f6c     +STD Y + 26 + 2 , R22
0046ac 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
0046ad 940e c5b9 	CALL SUBOPT_0xD1
0046af 940e c5be 	CALL SUBOPT_0xD2
0046b1 940e e0cb 	CALL __CPD21
0046b3 f450      	BRSH _0xC000A
                 ; 0006 0074     }
0046b4 940e c54c 	CALL SUBOPT_0xC3
0046b6 9731      	SBIW R30,1
0046b7 4060      	SBCI R22,0
0046b8 4070      	SBCI R23,0
                +
0046b9 a3ea     +STD Y + 34 , R30
0046ba a3fb     +STD Y + 34 + 1 , R31
0046bb a36c     +STD Y + 34 + 2 , R22
0046bc a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
0046bd cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
0046be 940e c515 	CALL SUBOPT_0xB9
0046c0 940e c547 	CALL SUBOPT_0xC2
0046c2 940e debd 	CALL __SUBD12
0046c4 940e c5c3 	CALL SUBOPT_0xD3
0046c6 940e c510 	CALL SUBOPT_0xB8
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
0046c8 940e c531 	CALL SUBOPT_0xBE
0046ca a5aa      	LDD  R26,Y+42
0046cb a5bb      	LDD  R27,Y+42+1
0046cc 940e e036 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
0046ce 940e c54c 	CALL SUBOPT_0xC3
                +
0046d0 a5aa     +LDD R26 , Y + 42
0046d1 a5bb     +LDD R27 , Y + 42 + 1
0046d2 9614     +ADIW R26 , 4
0046d3 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
0046d5 940e c522 	CALL SUBOPT_0xBB
                +
0046d7 a5aa     +LDD R26 , Y + 42
0046d8 a5bb     +LDD R27 , Y + 42 + 1
0046d9 9618     +ADIW R26 , 8
0046da 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
0046dc 940e c5c8 	CALL SUBOPT_0xD4
                +
0046de a5aa     +LDD R26 , Y + 42
0046df a5bb     +LDD R27 , Y + 42 + 1
0046e0 961c     +ADIW R26 , 12
0046e1 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
0046e3 940e c2d1 	CALL SUBOPT_0x60
                +
0046e5 a5aa     +LDD R26 , Y + 42
0046e6 a5bb     +LDD R27 , Y + 42 + 1
0046e7 9650     +ADIW R26 , 16
0046e8 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
0046ea 940e c5cd 	CALL SUBOPT_0xD5
                +
0046ec a5aa     +LDD R26 , Y + 42
0046ed a5bb     +LDD R27 , Y + 42 + 1
0046ee 9654     +ADIW R26 , 20
0046ef 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
0046f1 01f8      	MOVW R30,R16
                +
0046f2 a5aa     +LDD R26 , Y + 42
0046f3 a5bb     +LDD R27 , Y + 42 + 1
0046f4 9658     +ADIW R26 , 24
0046f5 93ed     +ST X + , R30
0046f6 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
0046f7 940e c5d2 	CALL SUBOPT_0xD6
0046f9 96e0      	ADIW R28,48
0046fa 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
0046fb 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
0046fc 940e c3e5 	CALL SUBOPT_0x89
                +
0046fe 5be2     +SUBI R30 , LOW ( 1970 )
0046ff 40f7     +SBCI R31 , HIGH ( 1970 )
004700 4060     +SBCI R22 , BYTE3 ( 1970 )
004701 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
004702 940e c536 	CALL SUBOPT_0xBF
004704 940e c494 	CALL SUBOPT_0xA0
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
004706 940e c3e5 	CALL SUBOPT_0x89
                +
004708 5be1     +SUBI R30 , LOW ( 1969 )
004709 40f7     +SBCI R31 , HIGH ( 1969 )
00470a 4060     +SBCI R22 , BYTE3 ( 1969 )
00470b 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
00470c 940e df19 	CALL __LSRD1
00470e 940e df19 	CALL __LSRD1
004710 940e c5d7 	CALL SUBOPT_0xD7
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
004712 940e c5d9 	CALL SUBOPT_0xD8
004714 940e c5b1 	CALL SUBOPT_0xD0
004716 f018      	BRLO _0xC001F
004717 81ec      	LDD  R30,Y+4
004718 70e3      	ANDI R30,LOW(0x3)
004719 f009      	BREQ _0xC0020
                 _0xC001F:
00471a c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
00471b 940e c3d9 	CALL SUBOPT_0x87
00471d 940e c527 	CALL SUBOPT_0xBC
00471f 940e c494 	CALL SUBOPT_0xA0
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
004721 940e c25f 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
004723 940e c551 	CALL SUBOPT_0xC4
004725 f419      	BRNE _0xC0024
004726 940e c3d9 	CALL SUBOPT_0x87
004728 c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
004729 940e c559 	CALL SUBOPT_0xC5
00472b f439      	BRNE _0xC0025
00472c 940e c3d9 	CALL SUBOPT_0x87
                +
00472e 5ee1     +SUBI R30 , LOW ( - 31 )
00472f 4fff     +SBCI R31 , HIGH ( - 31 )
004730 4f6f     +SBCI R22 , BYTE3 ( - 31 )
004731 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
004732 c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
004733 940e c561 	CALL SUBOPT_0xC6
004735 f439      	BRNE _0xC0026
004736 940e c3d9 	CALL SUBOPT_0x87
                +
004738 5ce5     +SUBI R30 , LOW ( - 59 )
004739 4fff     +SBCI R31 , HIGH ( - 59 )
00473a 4f6f     +SBCI R22 , BYTE3 ( - 59 )
00473b 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
00473c c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
00473d 940e c569 	CALL SUBOPT_0xC7
00473f f439      	BRNE _0xC0027
004740 940e c3d9 	CALL SUBOPT_0x87
                +
004742 5ae6     +SUBI R30 , LOW ( - 90 )
004743 4fff     +SBCI R31 , HIGH ( - 90 )
004744 4f6f     +SBCI R22 , BYTE3 ( - 90 )
004745 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
004746 c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
004747 940e c571 	CALL SUBOPT_0xC8
004749 f439      	BRNE _0xC0028
00474a 940e c3d9 	CALL SUBOPT_0x87
                +
00474c 58e8     +SUBI R30 , LOW ( - 120 )
00474d 4fff     +SBCI R31 , HIGH ( - 120 )
00474e 4f6f     +SBCI R22 , BYTE3 ( - 120 )
00474f 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
004750 c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
004751 940e c579 	CALL SUBOPT_0xC9
004753 f439      	BRNE _0xC0029
004754 940e c3d9 	CALL SUBOPT_0x87
                +
004756 56e9     +SUBI R30 , LOW ( - 151 )
004757 4fff     +SBCI R31 , HIGH ( - 151 )
004758 4f6f     +SBCI R22 , BYTE3 ( - 151 )
004759 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
00475a c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
00475b 940e c581 	CALL SUBOPT_0xCA
00475d f439      	BRNE _0xC002A
00475e 940e c3d9 	CALL SUBOPT_0x87
                +
004760 54eb     +SUBI R30 , LOW ( - 181 )
004761 4fff     +SBCI R31 , HIGH ( - 181 )
004762 4f6f     +SBCI R22 , BYTE3 ( - 181 )
004763 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
004764 c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
004765 940e c589 	CALL SUBOPT_0xCB
004767 f439      	BRNE _0xC002B
004768 940e c3d9 	CALL SUBOPT_0x87
                +
00476a 52ec     +SUBI R30 , LOW ( - 212 )
00476b 4fff     +SBCI R31 , HIGH ( - 212 )
00476c 4f6f     +SBCI R22 , BYTE3 ( - 212 )
00476d 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
00476e c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
00476f 940e c591 	CALL SUBOPT_0xCC
004771 f439      	BRNE _0xC002C
004772 940e c3d9 	CALL SUBOPT_0x87
                +
004774 50ed     +SUBI R30 , LOW ( - 243 )
004775 4fff     +SBCI R31 , HIGH ( - 243 )
004776 4f6f     +SBCI R22 , BYTE3 ( - 243 )
004777 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
004778 c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
004779 940e c599 	CALL SUBOPT_0xCD
00477b f439      	BRNE _0xC002D
00477c 940e c3d9 	CALL SUBOPT_0x87
                +
00477e 5eef     +SUBI R30 , LOW ( - 273 )
00477f 4ffe     +SBCI R31 , HIGH ( - 273 )
004780 4f6f     +SBCI R22 , BYTE3 ( - 273 )
004781 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
004782 c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
004783 940e c5a1 	CALL SUBOPT_0xCE
004785 f439      	BRNE _0xC002E
004786 940e c3d9 	CALL SUBOPT_0x87
                +
004788 5de0     +SUBI R30 , LOW ( - 304 )
004789 4ffe     +SBCI R31 , HIGH ( - 304 )
00478a 4f6f     +SBCI R22 , BYTE3 ( - 304 )
00478b 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
00478c c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
00478d 940e c5a9 	CALL SUBOPT_0xCF
00478f f441      	BRNE _0xC0023
004790 940e c3d9 	CALL SUBOPT_0x87
                +
004792 5be2     +SUBI R30 , LOW ( - 334 )
004793 4ffe     +SBCI R31 , HIGH ( - 334 )
004794 4f6f     +SBCI R22 , BYTE3 ( - 334 )
004795 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
004796 940e e051 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
004798 940e c5de 	CALL SUBOPT_0xD9
00479a 940e c5e3 	CALL SUBOPT_0xDA
00479c 940e c5d7 	CALL SUBOPT_0xD7
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
00479e 940e c3d9 	CALL SUBOPT_0x87
                +
0047a0 e8a0     +LDI R26 , LOW ( 0x15180 )
0047a1 e5b1     +LDI R27 , HIGH ( 0x15180 )
0047a2 e081     +LDI R24 , BYTE3 ( 0x15180 )
0047a3 e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
0047a4 940e df59 	CALL __MULD12U
0047a6 940e c494 	CALL SUBOPT_0xA0
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
0047a8 940e c5e8 	CALL SUBOPT_0xDB
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
0047aa 940e c5e8 	CALL SUBOPT_0xDB
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
0047ac 940e c5f0 	CALL SUBOPT_0xDC
0047ae 940e c4ea 	CALL SUBOPT_0xB1
0047b0 940e c5d7 	CALL SUBOPT_0xD7
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
0047b2 940e c5f5 	CALL SUBOPT_0xDD
0047b4 940e c5d7 	CALL SUBOPT_0xD7
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
0047b6 940e c3d9 	CALL SUBOPT_0x87
0047b8 966e      	ADIW R28,30
0047b9 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
0047ba 940e e060 	CALL __PUTPARD2
0047bc 9728      	SBIW R28,8
0047bd 940e e0d2 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
0047bf 940e c258 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
0047c1 940e c5fa 	CALL SUBOPT_0xDE
0047c3 f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
0047c4 940e c5ff 	CALL SUBOPT_0xDF
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
0047c6 c00b      	RJMP _0xC0031
                 _0xC0030:
0047c7 940e c604 	CALL SUBOPT_0xE0
0047c9 f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
0047ca 940e c609 	CALL SUBOPT_0xE1
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
0047cc c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
0047cd e0e0      	LDI  R30,LOW(0)
                +
0047ce 83ec     +STD Y + 4 , R30
0047cf 83ed     +STD Y + 4 + 1 , R30
0047d0 83ee     +STD Y + 4 + 2 , R30
0047d1 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
0047d2 940e c4c2 	CALL SUBOPT_0xA9
0047d4 940e e0bc 	CALL __CPD20
0047d6 f018      	BRLO _0xC0035
0047d7 940e c60e 	CALL SUBOPT_0xE2
0047d9 f008      	BRLO _0xC0036
                 _0xC0035:
0047da c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
0047db efef      	LDI  R30,LOW(65535)
0047dc efff      	LDI  R31,HIGH(65535)
0047dd c016      	RJMP _0x20E0095
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
0047de 940e c617 	CALL SUBOPT_0xE3
0047e0 940e c61c 	CALL SUBOPT_0xE4
0047e2 940e c2f9 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
0047e4 940e c620 	CALL SUBOPT_0xE5
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
0047e6 94f8      	cli
                 ; 0006 00D5     i2c_start();
0047e7 940e c4ad 	CALL SUBOPT_0xA5
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
0047e9 940e c631 	CALL SUBOPT_0xE6
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
0047eb 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
0047ec e3eb     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
0047ed e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
0047ee e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
0047ef e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
0047f0 940e c042 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
0047f2 940e c4b6 	CALL SUBOPT_0xA7
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E0095:
0047f4 940e e0d9 	CALL __LOADLOCR4
0047f6 9660      	ADIW R28,16
0047f7 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
0047f8 940e c63f 	CALL SUBOPT_0xE7
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
0047fa 89a8      	LDD  R26,Y+16
0047fb 89b9      	LDD  R27,Y+16+1
0047fc 971f      	SBIW R26,15
0047fd f434      	BRGE _0xC0038
0047fe 89a8      	LDD  R26,Y+16
0047ff 89b9      	LDD  R27,Y+16+1
004800 3fa4      	CPI  R26,LOW(0xFFF4)
004801 efef      	LDI  R30,HIGH(0xFFF4)
004802 07be      	CPC  R27,R30
004803 f45c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
004804 e5e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
004805 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
004806 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
004807 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
004808 940e c645 	CALL SUBOPT_0xE8
00480a 940e c64a 	CALL SUBOPT_0xE9
                 ; 0006 00F0         return -2;
00480c efee      	LDI  R30,LOW(65534)
00480d efff      	LDI  R31,HIGH(65534)
00480e c049      	RJMP _0x20E0094
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
00480f 01fe      	MOVW R30,R28
004810 9672      	ADIW R30,18
004811 e1aa      	LDI  R26,26
004812 940e e065 	CALL __PUTPARL
004814 dee6      	RCALL _date_to_binary
004815 940e c64f 	CALL SUBOPT_0xEA
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
004817 89e8      	LDD  R30,Y+16
004818 89f9      	LDD  R31,Y+16+1
004819 940e c654 	CALL SUBOPT_0xEB
00481b 940e c654 	CALL SUBOPT_0xEB
00481d efaf      	LDI  R26,LOW(65535)
00481e efbf      	LDI  R27,HIGH(65535)
00481f 940e df7f 	CALL __MULW12
004821 940e c088 	CALL SUBOPT_0xB
004823 940e c4d7 	CALL SUBOPT_0xAD
004825 940e c659 	CALL SUBOPT_0xEC
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
004827 940e c65b 	CALL SUBOPT_0xED
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
004829 940e c258 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
00482b 940e c5fa 	CALL SUBOPT_0xDE
00482d f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
00482e 940e c5ff 	CALL SUBOPT_0xDF
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
004830 c00b      	RJMP _0xC003B
                 _0xC003A:
004831 940e c604 	CALL SUBOPT_0xE0
004833 f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
004834 940e c609 	CALL SUBOPT_0xE1
                 ; 0006 0100     }
                 ; 0006 0101     else{
004836 c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
004837 e0e0      	LDI  R30,LOW(0)
                +
004838 83ec     +STD Y + 4 , R30
004839 83ed     +STD Y + 4 + 1 , R30
00483a 83ee     +STD Y + 4 + 2 , R30
00483b 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
00483c 940e c4c2 	CALL SUBOPT_0xA9
00483e 940e e0bc 	CALL __CPD20
004840 f018      	BRLO _0xC003F
004841 940e c60e 	CALL SUBOPT_0xE2
004843 f008      	BRLO _0xC0040
                 _0xC003F:
004844 c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
004845 efef      	LDI  R30,LOW(65535)
004846 efff      	LDI  R31,HIGH(65535)
004847 c010      	RJMP _0x20E0094
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
004848 940e c617 	CALL SUBOPT_0xE3
00484a 940e c61c 	CALL SUBOPT_0xE4
00484c 940e c2f9 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
00484e 940e c620 	CALL SUBOPT_0xE5
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
004850 94f8      	cli
                 ; 0006 0113     i2c_start();
004851 940e c4ad 	CALL SUBOPT_0xA5
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
004853 940e c631 	CALL SUBOPT_0xE6
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
004855 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
004856 940e c4b6 	CALL SUBOPT_0xA7
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E0094:
004858 940e e0d9 	CALL __LOADLOCR4
00485a 96ac      	ADIW R28,44
00485b 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
00485c 940e c664 	CALL SUBOPT_0xEE
00485e 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
00485f dccf      	RCALL _DS1672_read
004860 940e c669 	CALL SUBOPT_0xEF
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
004862 940e c1ca 	CALL SUBOPT_0x3A
004864 f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
004865 e001     +LDI R16 , LOW ( 1 )
004866 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
004867 91e0 1430 	LDS  R30,_raw_rtc
004869 91f0 1431 	LDS  R31,_raw_rtc+1
00486b 9160 1432 	LDS  R22,_raw_rtc+2
00486d 9170 1433 	LDS  R23,_raw_rtc+3
00486f 940e c4f1 	CALL SUBOPT_0xB2
                 ; 0006 012C     }
                 ; 0006 012D     else{
004871 c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
004872 e000     +LDI R16 , LOW ( 0 )
004873 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
004874 940e c4f6 	CALL SUBOPT_0xB3
004876 940e c65b 	CALL SUBOPT_0xED
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
004878 81ee      	LDD  R30,Y+6
004879 81ff      	LDD  R31,Y+6+1
00487a 940e c654 	CALL SUBOPT_0xEB
00487c 940e c654 	CALL SUBOPT_0xEB
00487e 940e c4fb 	CALL SUBOPT_0xB4
004880 940e c4d7 	CALL SUBOPT_0xAD
004882 940e c66b 	CALL SUBOPT_0xF0
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
004884 940e e05b 	CALL __PUTPARD1
004886 85ac      	LDD  R26,Y+12
004887 85bd      	LDD  R27,Y+12+1
004888 dce3      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
004889 01f8      	MOVW R30,R16
00488a 8119      	LDD  R17,Y+1
00488b 8108      	LDD  R16,Y+0
00488c 962a      	ADIW R28,10
00488d 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
00488e 8de8      	LDD  R30,Y+24
00488f 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
004890 30e1      	CPI  R30,LOW(0x1)
004891 e0a0      	LDI  R26,HIGH(0x1)
004892 07fa      	CPC  R31,R26
004893 f429      	BRNE _0xC0046
                +
004894 e8e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
004895 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
004896 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
004897 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
004898 c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
004899 30e2      	CPI  R30,LOW(0x2)
00489a e0a0      	LDI  R26,HIGH(0x2)
00489b 07fa      	CPC  R31,R26
00489c f429      	BRNE _0xC0047
                +
00489d e8ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
00489e e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
00489f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
0048a0 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
0048a1 c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
0048a2 30e3      	CPI  R30,LOW(0x3)
0048a3 e0a0      	LDI  R26,HIGH(0x3)
0048a4 07fa      	CPC  R31,R26
0048a5 f429      	BRNE _0xC0048
                +
0048a6 e9e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
0048a7 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
0048a8 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
0048a9 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
0048aa c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
0048ab 30e4      	CPI  R30,LOW(0x4)
0048ac e0a0      	LDI  R26,HIGH(0x4)
0048ad 07fa      	CPC  R31,R26
0048ae f429      	BRNE _0xC0049
                +
0048af e9ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
0048b0 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
0048b1 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
0048b2 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
0048b3 c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
0048b4 30e5      	CPI  R30,LOW(0x5)
0048b5 e0a0      	LDI  R26,HIGH(0x5)
0048b6 07fa      	CPC  R31,R26
0048b7 f429      	BRNE _0xC004A
                +
0048b8 eae0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
0048b9 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
0048ba e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
0048bb e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
0048bc c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
0048bd 30e6      	CPI  R30,LOW(0x6)
0048be e0a0      	LDI  R26,HIGH(0x6)
0048bf 07fa      	CPC  R31,R26
0048c0 f429      	BRNE _0xC004B
                +
0048c1 eae6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
0048c2 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
0048c3 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
0048c4 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
0048c5 c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
0048c6 30e7      	CPI  R30,LOW(0x7)
0048c7 e0a0      	LDI  R26,HIGH(0x7)
0048c8 07fa      	CPC  R31,R26
0048c9 f441      	BRNE _0xC0045
                +
0048ca eaec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
0048cb e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
0048cc e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
0048cd e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
0048ce 940e e05b 	CALL __PUTPARD1
0048d0 940e c1ad 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
0048d2 ebe2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
0048d3 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
0048d4 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
0048d5 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
0048d6 940e c66d 	CALL SUBOPT_0xF1
0048d8 940e c1a4 	CALL SUBOPT_0x34
0048da 940e c25f 	CALL SUBOPT_0x4F
0048dc 940e c2b4 	CALL SUBOPT_0x5B
0048de 940e c672 	CALL SUBOPT_0xF2
0048e0 940e c676 	CALL SUBOPT_0xF3
0048e2 940e c683 	CALL SUBOPT_0xF4
0048e4 e18c      	LDI  R24,28
0048e5 940e 9e24 	CALL _printDebug
0048e7 96a0      	ADIW R28,32
                 ; 0006 014F     return;
0048e8 c025      	RJMP _0x20E0093
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
0048e9 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
0048ea e0e0      	LDI  R30,LOW(0)
0048eb 93e0 1430 	STS  _raw_rtc,R30
0048ed 93e0 1431 	STS  _raw_rtc+1,R30
0048ef 93e0 1432 	STS  _raw_rtc+2,R30
0048f1 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
0048f3 94f8      	cli
                 ; 0006 0159     i2c_start();
0048f4 940e c4ad 	CALL SUBOPT_0xA5
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
0048f6 e0a4      	LDI  R26,LOW(4)
0048f7 940e dce4 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
0048f9 e0a0      	LDI  R26,LOW(0)
0048fa 940e c4b2 	CALL SUBOPT_0xA6
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
0048fc 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
0048fd dc24      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
0048fe 940e c081 	CALL SUBOPT_0x9
004900 940e c68a 	CALL SUBOPT_0xF5
004902 df59      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
004903 ede6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
004904 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
004905 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
004906 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
004907 940e c042 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
004909 01fe      	MOVW R30,R28
00490a e1aa      	LDI  R26,26
00490b 940e e065 	CALL __PUTPARL
00490d df80      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E0093:
00490e 966a      	ADIW R28,26
00490f 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0021 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0022     int i;
                 ; 0007 0023 
                 ; 0007 0024     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0025 
                 ; 0007 0026     if( config_prop_flag != 0x01){
004910 940e c3b3 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004912 e4a2      	LDI  R26,LOW(_config_prop_flag)
004913 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004914 940e e087 	CALL __EEPROMRDB
004916 30e1      	CPI  R30,LOW(0x1)
004917 f0a9      	BREQ _0xE000B
                 ; 0007 0027         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
004918 e1ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
004919 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
00491a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
00491b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
00491c 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0028         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
00491e 81ea      	LDD  R30,Y+2
00491f 81fb      	LDD  R31,Y+2+1
004920 940e c68d 	CALL SUBOPT_0xF6
004922 940e c692 	CALL SUBOPT_0xF7
004924 940e a59f 	CALL _memset
                 ; 0007 0029         readConfig->timeZone   = 7;
004926 81aa      	LDD  R26,Y+2
004927 81bb      	LDD  R27,Y+2+1
004928 56a0      	SUBI R26,LOW(-160)
004929 4fbf      	SBCI R27,HIGH(-160)
00492a e0e7      	LDI  R30,LOW(7)
00492b 93ec      	ST   X,R30
                 ; 0007 002A     }
                 ; 0007 002B     else{
00492c c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002C 
                 ; 0007 002D         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
00492d e000     +LDI R16 , LOW ( 0 )
00492e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
00492f 3104     +CPI R16 , LOW ( 20 )
004930 e0e0     +LDI R30 , HIGH ( 20 )
004931 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004932 f47c      	BRGE _0xE000F
                 ; 0007 002E         {
                 ; 0007 002F             readConfig->deviceType[i]   = config_prop.deviceType[i];
004933 01f8      	MOVW R30,R16
004934 81aa      	LDD  R26,Y+2
004935 81bb      	LDD  R27,Y+2+1
004936 0fea      	ADD  R30,R26
004937 1ffb      	ADC  R31,R27
004938 010f      	MOVW R0,R30
004939 e0a0      	LDI  R26,LOW(_config_prop)
00493a e0b0      	LDI  R27,HIGH(_config_prop)
00493b 940e c695 	CALL SUBOPT_0xF8
00493d 01d0      	MOVW R26,R0
00493e 93ec      	ST   X,R30
                 ; 0007 0030         }
                +
00493f 5f0f     +SUBI R16 , LOW ( - 1 )
004940 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004941 cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0031 
                 ; 0007 0032         /*
                 ; 0007 0033         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0034         {
                 ; 0007 0035             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0036             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0037         }
                 ; 0007 0038         */
                 ; 0007 0039         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
004942 81ea      	LDD  R30,Y+2
004943 81fb      	LDD  R31,Y+2+1
004944 9674      	ADIW R30,20
004945 93fa      	ST   -Y,R31
004946 93ea      	ST   -Y,R30
                +
004947 eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004948 e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004949 e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
00494a e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
00494b 940e e05b 	CALL __PUTPARD1
00494d eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
00494e e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
00494f e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
004950 940e a5f2 	CALL _strlenf
004952 01df      	MOVW R26,R30
004953 940e a56c 	CALL _memcpyf
                 ; 0007 003A 
                 ; 0007 003B         for(i=0;i<NAME_LENGTH;i++)
                +
004955 e000     +LDI R16 , LOW ( 0 )
004956 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
004957 3208     +CPI R16 , LOW ( 40 )
004958 e0e0     +LDI R30 , HIGH ( 40 )
004959 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
00495a f46c      	BRGE _0xE0012
                 ; 0007 003C         {
                 ; 0007 003D             readConfig->deviceName[i]   = config_prop.deviceName[i];
00495b 81ea      	LDD  R30,Y+2
00495c 81fb      	LDD  R31,Y+2+1
00495d 96b8      	ADIW R30,40
00495e 0fe0      	ADD  R30,R16
00495f 1ff1      	ADC  R31,R17
004960 010f      	MOVW R0,R30
                +
004961 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004962 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004963 940e c69a 	CALL SUBOPT_0xF9
                 ; 0007 003E         }
                +
004965 5f0f     +SUBI R16 , LOW ( - 1 )
004966 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004967 cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 003F 
                 ; 0007 0040         for(i=0;i<ID_LENGTH;i++)
                +
004968 e000     +LDI R16 , LOW ( 0 )
004969 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
00496a 3104     +CPI R16 , LOW ( 20 )
00496b e0e0     +LDI R30 , HIGH ( 20 )
00496c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00496d f454      	BRGE _0xE0015
                 ; 0007 0041         {
                 ; 0007 0042             readConfig->deviceID[i]   = config_prop.deviceID[i];
00496e 940e c6a2 	CALL SUBOPT_0xFA
004970 010f      	MOVW R0,R30
                +
004971 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004972 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004973 940e c69a 	CALL SUBOPT_0xF9
                 ; 0007 0043         }
                +
004975 5f0f     +SUBI R16 , LOW ( - 1 )
004976 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004977 cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0044 
                 ; 0007 0045         for(i=0;i<NAME_LENGTH;i++)
                +
004978 e000     +LDI R16 , LOW ( 0 )
004979 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
00497a 3208     +CPI R16 , LOW ( 40 )
00497b e0e0     +LDI R30 , HIGH ( 40 )
00497c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
00497d f454      	BRGE _0xE0018
                 ; 0007 0046         {
                 ; 0007 0047             readConfig->hostName[i]   = config_prop.hostName[i];
00497e 940e c6a9 	CALL SUBOPT_0xFB
004980 010f      	MOVW R0,R30
                +
004981 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004982 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004983 940e c69a 	CALL SUBOPT_0xF9
                 ; 0007 0048         }
                +
004985 5f0f     +SUBI R16 , LOW ( - 1 )
004986 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004987 cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 0049 
                 ; 0007 004A         for(i=0;i<ID_LENGTH;i++)
                +
004988 e000     +LDI R16 , LOW ( 0 )
004989 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
00498a 3104     +CPI R16 , LOW ( 20 )
00498b e0e0     +LDI R30 , HIGH ( 20 )
00498c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00498d f454      	BRGE _0xE001B
                 ; 0007 004B         {
                 ; 0007 004C             readConfig->hostID[i]   = config_prop.hostID[i];
00498e 940e c6b0 	CALL SUBOPT_0xFC
004990 010f      	MOVW R0,R30
                +
004991 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004992 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004993 940e c69a 	CALL SUBOPT_0xF9
                 ; 0007 004D         }
                +
004995 5f0f     +SUBI R16 , LOW ( - 1 )
004996 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004997 cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 004E 
                 ; 0007 004F         readConfig->timeZone   = config_prop.timeZone;
                +
004998 eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
004999 e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
00499a 940e e087 	CALL __EEPROMRDB
                +
00499c 81aa     +LDD R26 , Y + 2
00499d 81bb     +LDD R27 , Y + 2 + 1
00499e 56a0     +SUBI R26 , LOW ( - 160 )
00499f 4fbf     +SBCI R27 , HIGH ( - 160 )
0049a0 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0050     }
                 _0xE000C:
                 ; 0007 0051     return 0;
0049a1 940e c5d2 	CALL SUBOPT_0xD6
0049a3 9624      	ADIW R28,4
0049a4 9508      	RET
                 ; 0007 0052 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0055 {
                 _getOperatingConfig:
                 ; 0007 0056     int i;
                 ; 0007 0057 
                 ; 0007 0058     if( config_oper_flag != 0x01){
0049a5 940e c3b3 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0049a7 e4a3      	LDI  R26,LOW(_config_oper_flag)
0049a8 e0b5      	LDI  R27,HIGH(_config_oper_flag)
0049a9 940e e087 	CALL __EEPROMRDB
0049ab 30e1      	CPI  R30,LOW(0x1)
0049ac f0d1      	BREQ _0xE001C
                 ; 0007 0059         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
0049ad e5e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
0049ae e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
0049af e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
0049b0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
0049b1 940e c042 	CALL SUBOPT_0x3
                 ; 0007 005A 
                 ; 0007 005B         readConfig->mode                    =   MODE_DATALOGGER;
0049b3 81aa      	LDD  R26,Y+2
0049b4 81bb      	LDD  R27,Y+2+1
0049b5 e2e0      	LDI  R30,LOW(32)
0049b6 940e c6b7 	CALL SUBOPT_0xFD
                 ; 0007 005C         readConfig->deviceEnable            =   0x00;
0049b8 e0e0      	LDI  R30,LOW(0)
0049b9 940e c6bc 	CALL SUBOPT_0xFE
                 ; 0007 005D         readConfig->alarmEnable             =   0x00;
                 ; 0007 005E 
                 ; 0007 005F         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
0049bb 3005     +CPI R16 , LOW ( 5 )
0049bc e0e0     +LDI R30 , HIGH ( 5 )
0049bd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0049be f43c      	BRGE _0xE001F
                 ; 0007 0060         {
                 ; 0007 0061             readConfig->sensorEnable[i]     =   0x00;
0049bf 940e c6c5 	CALL SUBOPT_0xFF
0049c1 e0a0      	LDI  R26,LOW(0)
0049c2 83a0      	STD  Z+0,R26
                 ; 0007 0062         }
                +
0049c3 5f0f     +SUBI R16 , LOW ( - 1 )
0049c4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049c5 cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0063 
                 ; 0007 0064         /* // -- for test -- //
                 ; 0007 0065         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0066         readConfig->deviceEnable            =   0x01;
                 ; 0007 0067         readConfig->alarmEnable             =   0x01;
                 ; 0007 0068 
                 ; 0007 0069         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006A         {
                 ; 0007 006B             if(i==0){
                 ; 0007 006C                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006D             }
                 ; 0007 006E             else{
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0070             }
                 ; 0007 0071         }
                 ; 0007 0072         */
                 ; 0007 0073     }
                 ; 0007 0074     else{
0049c6 c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0075         readConfig->mode                    =   config_oper.mode;
0049c7 eaa1      	LDI  R26,LOW(_config_oper)
0049c8 e0b0      	LDI  R27,HIGH(_config_oper)
0049c9 940e c6cb 	CALL SUBOPT_0x100
                 ; 0007 0076         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
0049cb eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
0049cc e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
0049cd 940e c6d1 	CALL SUBOPT_0x101
                 ; 0007 0077         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
0049cf eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
0049d0 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
0049d1 940e c6d8 	CALL SUBOPT_0x102
                 ; 0007 0078 
                 ; 0007 0079         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0049d3 e000     +LDI R16 , LOW ( 0 )
0049d4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
0049d5 3005     +CPI R16 , LOW ( 5 )
0049d6 e0e0     +LDI R30 , HIGH ( 5 )
0049d7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0049d8 f454      	BRGE _0xE0023
                 ; 0007 007A         {
                 ; 0007 007B             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
0049d9 940e c6c5 	CALL SUBOPT_0xFF
0049db 010f      	MOVW R0,R30
                +
0049dc eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
0049dd e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
0049de 940e c69a 	CALL SUBOPT_0xF9
                 ; 0007 007C         }
                +
0049e0 5f0f     +SUBI R16 , LOW ( - 1 )
0049e1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049e2 cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007D     }
                 _0xE0020:
                 ; 0007 007E 
                 ; 0007 007F 
                 ; 0007 0080     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
0049e3 e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
0049e4 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
0049e5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
0049e6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
0049e7 940e c6df 	CALL SUBOPT_0x103
                 ; 0007 0081     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
0049e9 ebe6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
0049ea e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
0049eb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
0049ec e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
0049ed 940e c6e5 	CALL SUBOPT_0x104
0049ef 81e1      	LDD  R30,Z+1
0049f0 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0082     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
0049f2 eee7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
0049f3 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
0049f4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
0049f5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
0049f6 940e c6e5 	CALL SUBOPT_0x104
0049f8 81e2      	LDD  R30,Z+2
0049f9 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0083     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
0049fb e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
0049fc e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
0049fd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
0049fe e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
0049ff 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0084 
                 ; 0007 0085     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004a01 e000     +LDI R16 , LOW ( 0 )
004a02 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
004a03 3005     +CPI R16 , LOW ( 5 )
004a04 e0e0     +LDI R30 , HIGH ( 5 )
004a05 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004a06 f43c      	BRGE _0xE0026
                 ; 0007 0086     {
                 ; 0007 0087         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
004a07 940e c6ea 	CALL SUBOPT_0x105
004a09 940e c6ef 	CALL SUBOPT_0x106
                 ; 0007 0088     }
                +
004a0b 5f0f     +SUBI R16 , LOW ( - 1 )
004a0c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a0d cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 0089     printDebug("\r\n");
004a0e 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 008A 
                 ; 0007 008B     return 0;
004a10 940e c5d2 	CALL SUBOPT_0xD6
004a12 c4e6      	RJMP _0x20E008E
                 ; 0007 008C }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 008F {
                 _getSensorConfig:
                 ; 0007 0090     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004a13 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004a15 f022      	BRMI _0xE0028
004a16 81aa      	LDD  R26,Y+2
004a17 81bb      	LDD  R27,Y+2+1
004a18 9715      	SBIW R26,5
004a19 f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0091         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
004a1a e4ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
004a1b e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
004a1c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
004a1d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
004a1e 940e c6e5 	CALL SUBOPT_0x104
004a20 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 0092         return -1;
004a22 c4d4      	RJMP _0x20E008F
                 ; 0007 0093     }
                 ; 0007 0094 
                 ; 0007 0095     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
004a23 81aa      	LDD  R26,Y+2
004a24 81bb      	LDD  R27,Y+2+1
004a25 5bac      	SUBI R26,LOW(-_config_sens_flag)
004a26 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004a27 940e e087 	CALL __EEPROMRDB
004a29 30e1      	CPI  R30,LOW(0x1)
004a2a f411      	BRNE PC+3
004a2b 940c 4a74 	JMP _0xE002A
                 ; 0007 0096         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
004a2d e7ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
004a2e e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
004a2f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
004a30 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
004a31 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0097         readConfig->samplingRate        =   300;
004a33 81a8      	LD   R26,Y
004a34 81b9      	LDD  R27,Y+1
004a35 e2ec      	LDI  R30,LOW(300)
004a36 e0f1      	LDI  R31,HIGH(300)
004a37 940e c6fe 	CALL SUBOPT_0x109
                 ; 0007 0098         readConfig->reOccurrence        =   0x8000;
004a39 9612      	ADIW R26,2
004a3a e0e0      	LDI  R30,LOW(32768)
004a3b e8f0      	LDI  R31,HIGH(32768)
004a3c 940e c6fe 	CALL SUBOPT_0x109
                 ; 0007 0099         readConfig->timeStartHour       =   0;
004a3e 9614      	ADIW R26,4
004a3f 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 009A         readConfig->timeStartMin        =   0;
004a41 9615      	ADIW R26,5
004a42 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 009B         readConfig->timeStopHour        =   0;
004a44 9616      	ADIW R26,6
004a45 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 009C         readConfig->timeStopMin         =   0;
004a47 9617      	ADIW R26,7
004a48 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 009D 
                 ; 0007 009E         readConfig->alarmEnable         =   0x00;
004a4a 9618      	ADIW R26,8
004a4b 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 009F         readConfig->lowerLimit          =   10.0;
004a4d 9619      	ADIW R26,9
004a4e 940e c708 	CALL SUBOPT_0x10B
004a50 940e e036 	CALL __PUTDP1
                 ; 0007 00A0         readConfig->lowerDelay          =   20;
004a52 81a8      	LD   R26,Y
004a53 81b9      	LDD  R27,Y+1
004a54 961d      	ADIW R26,13
004a55 e1e4      	LDI  R30,LOW(20)
004a56 e0f0      	LDI  R31,HIGH(20)
004a57 940e c6fe 	CALL SUBOPT_0x109
                 ; 0007 00A1         readConfig->lowerExtreme        =   0.0;
004a59 961f      	ADIW R26,15
004a5a 940e c402 	CALL SUBOPT_0x8E
                 ; 0007 00A2         readConfig->upperLimit          =   180.0;
004a5c 81a8      	LD   R26,Y
004a5d 81b9      	LDD  R27,Y+1
004a5e 9653      	ADIW R26,19
                +
004a5f e0e0     +LDI R30 , LOW ( 0x43340000 )
004a60 e0f0     +LDI R31 , HIGH ( 0x43340000 )
004a61 e364     +LDI R22 , BYTE3 ( 0x43340000 )
004a62 e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
004a63 940e e036 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->upperDelay          =   20;
004a65 81a8      	LD   R26,Y
004a66 81b9      	LDD  R27,Y+1
004a67 9657      	ADIW R26,23
004a68 e1e4      	LDI  R30,LOW(20)
004a69 e0f0      	LDI  R31,HIGH(20)
004a6a 940e c6fe 	CALL SUBOPT_0x109
                 ; 0007 00A4         readConfig->upperExtreme        =   200.0;
004a6c 9659      	ADIW R26,25
                +
004a6d e0e0     +LDI R30 , LOW ( 0x43480000 )
004a6e e0f0     +LDI R31 , HIGH ( 0x43480000 )
004a6f e468     +LDI R22 , BYTE3 ( 0x43480000 )
004a70 e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
004a71 940e e036 	CALL __PUTDP1
                 ; 0007 00A5         /*
                 ; 0007 00A6         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A7         readConfig->lowerLimit          =   0.0;
                 ; 0007 00A8         readConfig->lowerDelay          =   10;
                 ; 0007 00A9         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AA         readConfig->upperLimit          =   0.0;
                 ; 0007 00AB         readConfig->upperDelay          =   10;
                 ; 0007 00AC         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AD         */
                 ; 0007 00AE     }
                 ; 0007 00AF     else{
004a73 c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B0         readConfig->samplingRate        =   config_sens[ch].samplingRate;
004a74 940e c70d 	CALL SUBOPT_0x10C
004a76 55e7      	SUBI R30,LOW(-_config_sens)
004a77 4fff      	SBCI R31,HIGH(-_config_sens)
004a78 01df      	MOVW R26,R30
004a79 940e e083 	CALL __EEPROMRDW
004a7b 81a8      	LD   R26,Y
004a7c 81b9      	LDD  R27,Y+1
004a7d 93ed      	ST   X+,R30
004a7e 93fc      	ST   X,R31
                 ; 0007 00B1         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
004a7f 940e c70d 	CALL SUBOPT_0x10C
                +
004a81 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004a82 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004a83 01df      	MOVW R26,R30
004a84 940e e083 	CALL __EEPROMRDW
                +
004a86 81a8     +LDD R26 , Y + 0
004a87 81b9     +LDD R27 , Y + 0 + 1
004a88 9612     +ADIW R26 , 2
004a89 93ed     +ST X + , R30
004a8a 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B2         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004a8b 940e c70d 	CALL SUBOPT_0x10C
                +
004a8d 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004a8e 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004a8f 01df      	MOVW R26,R30
004a90 940e e087 	CALL __EEPROMRDB
                +
004a92 81a8     +LDD R26 , Y + 0
004a93 81b9     +LDD R27 , Y + 0 + 1
004a94 9614     +ADIW R26 , 4
004a95 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B3         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004a96 940e c70d 	CALL SUBOPT_0x10C
                +
004a98 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004a99 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004a9a 01df      	MOVW R26,R30
004a9b 940e e087 	CALL __EEPROMRDB
                +
004a9d 81a8     +LDD R26 , Y + 0
004a9e 81b9     +LDD R27 , Y + 0 + 1
004a9f 9615     +ADIW R26 , 5
004aa0 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B4         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
004aa1 940e c70d 	CALL SUBOPT_0x10C
                +
004aa3 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004aa4 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004aa5 01df      	MOVW R26,R30
004aa6 940e e087 	CALL __EEPROMRDB
                +
004aa8 81a8     +LDD R26 , Y + 0
004aa9 81b9     +LDD R27 , Y + 0 + 1
004aaa 9616     +ADIW R26 , 6
004aab 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B5         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
004aac 940e c70d 	CALL SUBOPT_0x10C
                +
004aae 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004aaf 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004ab0 01df      	MOVW R26,R30
004ab1 940e e087 	CALL __EEPROMRDB
                +
004ab3 81a8     +LDD R26 , Y + 0
004ab4 81b9     +LDD R27 , Y + 0 + 1
004ab5 9617     +ADIW R26 , 7
004ab6 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B6 
                 ; 0007 00B7         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004ab7 940e c70d 	CALL SUBOPT_0x10C
                +
004ab9 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004aba 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004abb 01df      	MOVW R26,R30
004abc 940e e087 	CALL __EEPROMRDB
                +
004abe 81a8     +LDD R26 , Y + 0
004abf 81b9     +LDD R27 , Y + 0 + 1
004ac0 9618     +ADIW R26 , 8
004ac1 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00B8         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004ac2 940e c70d 	CALL SUBOPT_0x10C
004ac4 940e c713 	CALL SUBOPT_0x10D
                +
004ac6 81a8     +LDD R26 , Y + 0
004ac7 81b9     +LDD R27 , Y + 0 + 1
004ac8 9619     +ADIW R26 , 9
004ac9 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00B9         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004acb 940e c70d 	CALL SUBOPT_0x10C
004acd 940e c719 	CALL SUBOPT_0x10E
                +
004acf 81a8     +LDD R26 , Y + 0
004ad0 81b9     +LDD R27 , Y + 0 + 1
004ad1 961d     +ADIW R26 , 13
004ad2 93ed     +ST X + , R30
004ad3 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BA         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004ad4 940e c70d 	CALL SUBOPT_0x10C
004ad6 940e c71f 	CALL SUBOPT_0x10F
                +
004ad8 81a8     +LDD R26 , Y + 0
004ad9 81b9     +LDD R27 , Y + 0 + 1
004ada 961f     +ADIW R26 , 15
004adb 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BB         readConfig->upperLimit          =   config_sens[ch].upperLimit;
004add 940e c70d 	CALL SUBOPT_0x10C
004adf 940e c725 	CALL SUBOPT_0x110
                +
004ae1 81a8     +LDD R26 , Y + 0
004ae2 81b9     +LDD R27 , Y + 0 + 1
004ae3 9653     +ADIW R26 , 19
004ae4 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BC         readConfig->upperDelay          =   config_sens[ch].upperDelay;
004ae6 940e c70d 	CALL SUBOPT_0x10C
004ae8 940e c72b 	CALL SUBOPT_0x111
                +
004aea 81a8     +LDD R26 , Y + 0
004aeb 81b9     +LDD R27 , Y + 0 + 1
004aec 9657     +ADIW R26 , 23
004aed 93ed     +ST X + , R30
004aee 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BD         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
004aef 940e c70d 	CALL SUBOPT_0x10C
004af1 940e c731 	CALL SUBOPT_0x112
                +
004af3 81a8     +LDD R26 , Y + 0
004af4 81b9     +LDD R27 , Y + 0 + 1
004af5 9659     +ADIW R26 , 25
004af6 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00BE     }
                 _0xE002B:
                 ; 0007 00BF     return 0;
004af8 e0e0      	LDI  R30,LOW(0)
004af9 e0f0      	LDI  R31,HIGH(0)
004afa c3fe      	RJMP _0x20E008E
                 ; 0007 00C0 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C3 {
                 _getAuxDinConfig:
                 ; 0007 00C4     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
004afb 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004afd f022      	BRMI _0xE002D
004afe 81aa      	LDD  R26,Y+2
004aff 81bb      	LDD  R27,Y+2+1
004b00 9750      	SBIW R26,16
004b01 f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C5         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
004b02 ebe1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
004b03 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
004b04 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
004b05 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
004b06 940e c6e5 	CALL SUBOPT_0x104
004b08 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 00C6         return -1;
004b0a c3ec      	RJMP _0x20E008F
                 ; 0007 00C7     }
                 ; 0007 00C8 
                 ; 0007 00C9     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
004b0b 81aa      	LDD  R26,Y+2
004b0c 81bb      	LDD  R27,Y+2+1
004b0d 5ba7      	SUBI R26,LOW(-_config_din_flag)
004b0e 4fba      	SBCI R27,HIGH(-_config_din_flag)
004b0f 940e e087 	CALL __EEPROMRDB
004b11 30e1      	CPI  R30,LOW(0x1)
004b12 f071      	BREQ _0xE002F
                 ; 0007 00CA         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
004b13 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
004b14 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
004b15 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
004b16 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
004b17 940e c042 	CALL SUBOPT_0x3
                 ; 0007 00CB 
                 ; 0007 00CC         readConfig->channelEnable       =   0x00;
004b19 81a8      	LD   R26,Y
004b1a 81b9      	LDD  R27,Y+1
004b1b 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 00CD         readConfig->alarmDelay          =   0;
004b1d 9611      	ADIW R26,1
004b1e 940e c737 	CALL SUBOPT_0x113
                 ; 0007 00CE 
                 ; 0007 00CF         /* // -- for test -- //
                 ; 0007 00D0         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D1         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D2 
                 ; 0007 00D3         readConfig->alarmDelay          =   0;
                 ; 0007 00D4         */
                 ; 0007 00D5     }
                 ; 0007 00D6     else{
004b20 c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D7         readConfig->channelEnable       =   config_din[ch].channelEnable;
004b21 940e c73c 	CALL SUBOPT_0x114
004b23 5ce6      	SUBI R30,LOW(-_config_din)
004b24 4ffe      	SBCI R31,HIGH(-_config_din)
004b25 940e c742 	CALL SUBOPT_0x115
                 ; 0007 00D8         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
004b27 940e c73c 	CALL SUBOPT_0x114
                +
004b29 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004b2a 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004b2b 01df      	MOVW R26,R30
004b2c 940e c749 	CALL SUBOPT_0x116
                 ; 0007 00D9     }
                 _0xE0030:
                 ; 0007 00DA     return 0;
004b2e e0e0      	LDI  R30,LOW(0)
004b2f e0f0      	LDI  R31,HIGH(0)
004b30 c3c8      	RJMP _0x20E008E
                 ; 0007 00DB }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00DE {
                 _getAuxDoutConfig:
                 ; 0007 00DF     int i;
                 ; 0007 00E0 
                 ; 0007 00E1     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
004b31 940e c3b3 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004b33 81ad      	LDD  R26,Y+5
004b34 23aa      	TST  R26
004b35 f022      	BRMI _0xE0032
004b36 81ac      	LDD  R26,Y+4
004b37 81bd      	LDD  R27,Y+4+1
004b38 9715      	SBIW R26,5
004b39 f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E2         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
004b3a e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
004b3b e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
004b3c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
004b3d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
004b3e 940e c751 	CALL SUBOPT_0x117
                 ; 0007 00E3         return -1;
004b40 efef      	LDI  R30,LOW(65535)
004b41 efff      	LDI  R31,HIGH(65535)
004b42 c144      	RJMP _0x20E0091
                 ; 0007 00E4     }
                 ; 0007 00E5 
                 ; 0007 00E6     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
004b43 81ac      	LDD  R26,Y+4
004b44 81bd      	LDD  R27,Y+4+1
004b45 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004b46 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004b47 940e e087 	CALL __EEPROMRDB
004b49 30e1      	CPI  R30,LOW(0x1)
004b4a f0d1      	BREQ _0xE0034
                 ; 0007 00E7         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
004b4b e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
004b4c e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
004b4d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
004b4e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
004b4f 940e c042 	CALL SUBOPT_0x3
                 ; 0007 00E8         readConfig->channelEnable       =   0x00;
004b51 81aa      	LDD  R26,Y+2
004b52 81bb      	LDD  R27,Y+2+1
004b53 e0e0      	LDI  R30,LOW(0)
004b54 940e c6b7 	CALL SUBOPT_0xFD
                 ; 0007 00E9         readConfig->stateOnEvent        =   0x01;
004b56 e0e1      	LDI  R30,LOW(1)
004b57 940e c6bc 	CALL SUBOPT_0xFE
                 ; 0007 00EA         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EB 
                 ; 0007 00EC         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004b59 3203     +CPI R16 , LOW ( 35 )
004b5a e0e0     +LDI R30 , HIGH ( 35 )
004b5b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b5c f43c      	BRGE _0xE0037
                 ; 0007 00ED             readConfig->eventSource[i]  =   0x00;
004b5d 940e c6c5 	CALL SUBOPT_0xFF
004b5f e0a0      	LDI  R26,LOW(0)
004b60 83a0      	STD  Z+0,R26
                 ; 0007 00EE         }
                +
004b61 5f0f     +SUBI R16 , LOW ( - 1 )
004b62 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b63 cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00EF     }
                 ; 0007 00F0     else{
004b64 c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F1         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004b65 940e c756 	CALL SUBOPT_0x118
004b67 59e6      	SUBI R30,LOW(-_config_dout)
004b68 4ffe      	SBCI R31,HIGH(-_config_dout)
004b69 01df      	MOVW R26,R30
004b6a 940e c6cb 	CALL SUBOPT_0x100
                 ; 0007 00F2         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
004b6c 940e c756 	CALL SUBOPT_0x118
                +
004b6e 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004b6f 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004b70 01df      	MOVW R26,R30
004b71 940e c6d1 	CALL SUBOPT_0x101
                 ; 0007 00F3         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004b73 940e c756 	CALL SUBOPT_0x118
                +
004b75 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004b76 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004b77 01df      	MOVW R26,R30
004b78 940e c6d8 	CALL SUBOPT_0x102
                 ; 0007 00F4 
                 ; 0007 00F5         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004b7a e9e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004b7b e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
004b7c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
004b7d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
004b7e 940e c751 	CALL SUBOPT_0x117
                 ; 0007 00F6         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
004b80 ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
004b81 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004b82 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004b83 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004b84 940e c75c 	CALL SUBOPT_0x119
004b86 940e c764 	CALL SUBOPT_0x11A
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004b88 edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004b89 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004b8a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004b8b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
004b8c 940e c75c 	CALL SUBOPT_0x119
004b8e 940e c76a 	CALL SUBOPT_0x11B
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
004b90 e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
004b91 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004b92 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004b93 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004b94 940e c75c 	CALL SUBOPT_0x119
004b96 940e c770 	CALL SUBOPT_0x11C
004b98 940e c156 	CALL SUBOPT_0x29
                 ; 0007 00F9         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004b9a e000     +LDI R16 , LOW ( 0 )
004b9b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
004b9c 940e c756 	CALL SUBOPT_0x118
004b9e 940e c770 	CALL SUBOPT_0x11C
004ba0 940e c776 	CALL SUBOPT_0x11D
004ba2 f4a4      	BRGE _0xE003B
                 ; 0007 00FA             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004ba3 940e c6c5 	CALL SUBOPT_0xFF
                +
004ba5 2f7e     +MOV R23 , R30
004ba6 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004ba7 940e c756 	CALL SUBOPT_0x118
004ba9 940e c77b 	CALL SUBOPT_0x11E
004bab 940e e087 	CALL __EEPROMRDB
                +
004bad 2fa7     +MOV R26 , R23
004bae 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004baf 93ec      	ST   X,R30
                 ; 0007 00FB             printDebug("[0x%02X]",readConfig->eventSource[i]);
004bb0 940e c6ea 	CALL SUBOPT_0x105
004bb2 940e c6ef 	CALL SUBOPT_0x106
                 ; 0007 00FC         }
                +
004bb4 5f0f     +SUBI R16 , LOW ( - 1 )
004bb5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bb6 cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FD         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004bb7 940e c756 	CALL SUBOPT_0x118
004bb9 940e c770 	CALL SUBOPT_0x11C
004bbb 2f0e      	MOV  R16,R30
004bbc 2711      	CLR  R17
                 _0xE003D:
                +
004bbd 3203     +CPI R16 , LOW ( 35 )
004bbe e0e0     +LDI R30 , HIGH ( 35 )
004bbf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004bc0 f43c      	BRGE _0xE003E
                 ; 0007 00FE             readConfig->eventSource[i]  =   0x00;
004bc1 940e c6c5 	CALL SUBOPT_0xFF
004bc3 e0a0      	LDI  R26,LOW(0)
004bc4 83a0      	STD  Z+0,R26
                 ; 0007 00FF             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0100         }
                +
004bc5 5f0f     +SUBI R16 , LOW ( - 1 )
004bc6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bc7 cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0101         printDebug("\r\n");
004bc8 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 0102 
                 ; 0007 0103     }
                 _0xE0038:
                 ; 0007 0104     return 0;
004bca c0ba      	RJMP _0x20E0092
                 ; 0007 0105 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 0108 {
                 _getAuxAinConfig:
                 ; 0007 0109     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004bcb 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004bcd f022      	BRMI _0xE0040
004bce 81aa      	LDD  R26,Y+2
004bcf 81bb      	LDD  R27,Y+2+1
004bd0 9750      	SBIW R26,16
004bd1 f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010A         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004bd2 e3e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004bd3 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004bd4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004bd5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004bd6 940e c6e5 	CALL SUBOPT_0x104
004bd8 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 010B         return -1;
004bda c31c      	RJMP _0x20E008F
                 ; 0007 010C     }
                 ; 0007 010D 
                 ; 0007 010E     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004bdb 81aa      	LDD  R26,Y+2
004bdc 81bb      	LDD  R27,Y+2+1
004bdd 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004bde 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004bdf 940e e087 	CALL __EEPROMRDB
004be1 30e1      	CPI  R30,LOW(0x1)
004be2 f071      	BREQ _0xE0042
                 ; 0007 010F         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004be3 e7e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004be4 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
004be5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
004be6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
004be7 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0110         readConfig->channelEnable       =   0x00;
004be9 81a8      	LD   R26,Y
004bea 81b9      	LDD  R27,Y+1
004beb 940e c703 	CALL SUBOPT_0x10A
                 ; 0007 0111         readConfig->alarmLevel          =   0;
004bed 9611      	ADIW R26,1
004bee 940e c402 	CALL SUBOPT_0x8E
                 ; 0007 0112     }
                 ; 0007 0113     else{
004bf0 c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0114         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004bf1 940e c781 	CALL SUBOPT_0x11F
004bf3 5de8      	SUBI R30,LOW(-_config_ain)
004bf4 4ffd      	SBCI R31,HIGH(-_config_ain)
004bf5 940e c742 	CALL SUBOPT_0x115
                 ; 0007 0115         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
004bf7 940e c781 	CALL SUBOPT_0x11F
                +
004bf9 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004bfa 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004bfb 01df      	MOVW R26,R30
004bfc 940e e07f 	CALL __EEPROMRDD
                +
004bfe 81a8     +LDD R26 , Y + 0
004bff 81b9     +LDD R27 , Y + 0 + 1
004c00 9611     +ADIW R26 , 1
004c01 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0116     }
                 _0xE0043:
                 ; 0007 0117     return 0;
004c03 e0e0      	LDI  R30,LOW(0)
004c04 e0f0      	LDI  R31,HIGH(0)
004c05 c2f3      	RJMP _0x20E008E
                 ; 0007 0118 }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011B {
                 _getAuxAoutConfig:
                 ; 0007 011C     int i;
                 ; 0007 011D 
                 ; 0007 011E     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
004c06 940e c3b3 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004c08 81ad      	LDD  R26,Y+5
004c09 23aa      	TST  R26
004c0a f022      	BRMI _0xE0045
004c0b 81ac      	LDD  R26,Y+4
004c0c 81bd      	LDD  R27,Y+4+1
004c0d 9750      	SBIW R26,16
004c0e f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 011F         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004c0f eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004c10 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004c11 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004c12 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004c13 940e c751 	CALL SUBOPT_0x117
                 ; 0007 0120         return -1;
004c15 efef      	LDI  R30,LOW(65535)
004c16 efff      	LDI  R31,HIGH(65535)
004c17 c06f      	RJMP _0x20E0091
                 ; 0007 0121     }
                 ; 0007 0122 
                 ; 0007 0123     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
004c18 81ac      	LDD  R26,Y+4
004c19 81bd      	LDD  R27,Y+4+1
004c1a 59a2      	SUBI R26,LOW(-_config_aout_flag)
004c1b 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004c1c 940e e087 	CALL __EEPROMRDB
004c1e 30e1      	CPI  R30,LOW(0x1)
004c1f f101      	BREQ _0xE0047
                 ; 0007 0124         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004c20 edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004c21 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004c22 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004c23 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004c24 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0125         readConfig->channelEnable       =   0x00;
004c26 81aa      	LDD  R26,Y+2
004c27 81bb      	LDD  R27,Y+2+1
004c28 e0e0      	LDI  R30,LOW(0)
004c29 940e c6b7 	CALL SUBOPT_0xFD
                 ; 0007 0126         readConfig->levelOnEvent        =   0.0;
004c2b 940e c402 	CALL SUBOPT_0x8E
                 ; 0007 0127         readConfig->eventSourceNumber   =   0;
004c2d 81aa      	LDD  R26,Y+2
004c2e 81bb      	LDD  R27,Y+2+1
004c2f 9615      	ADIW R26,5
004c30 e0e0      	LDI  R30,LOW(0)
004c31 93ec      	ST   X,R30
                 ; 0007 0128 
                 ; 0007 0129         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004c32 e000     +LDI R16 , LOW ( 0 )
004c33 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004c34 3203     +CPI R16 , LOW ( 35 )
004c35 e0e0     +LDI R30 , HIGH ( 35 )
004c36 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c37 f43c      	BRGE _0xE004A
                 ; 0007 012A             readConfig->eventSource[i]  =   0x00;
004c38 940e c787 	CALL SUBOPT_0x120
004c3a e0a0      	LDI  R26,LOW(0)
004c3b 83a0      	STD  Z+0,R26
                 ; 0007 012B         }
                +
004c3c 5f0f     +SUBI R16 , LOW ( - 1 )
004c3d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c3e cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012C     }
                 ; 0007 012D     else{
004c3f c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 012E         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004c40 940e c78d 	CALL SUBOPT_0x121
004c42 58e8      	SUBI R30,LOW(-_config_aout)
004c43 4ffd      	SBCI R31,HIGH(-_config_aout)
004c44 01df      	MOVW R26,R30
004c45 940e c6cb 	CALL SUBOPT_0x100
                 ; 0007 012F         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004c47 940e c78d 	CALL SUBOPT_0x121
                +
004c49 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004c4a 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004c4b 01df      	MOVW R26,R30
004c4c 940e e07f 	CALL __EEPROMRDD
                +
004c4e 81aa     +LDD R26 , Y + 2
004c4f 81bb     +LDD R27 , Y + 2 + 1
004c50 9611     +ADIW R26 , 1
004c51 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0130         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004c53 940e c78d 	CALL SUBOPT_0x121
004c55 940e c793 	CALL SUBOPT_0x122
                +
004c57 81aa     +LDD R26 , Y + 2
004c58 81bb     +LDD R27 , Y + 2 + 1
004c59 9615     +ADIW R26 , 5
004c5a 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0131 
                 ; 0007 0132         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004c5b e000     +LDI R16 , LOW ( 0 )
004c5c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
004c5d 940e c78d 	CALL SUBOPT_0x121
004c5f 940e c793 	CALL SUBOPT_0x122
004c61 940e c776 	CALL SUBOPT_0x11D
004c63 f484      	BRGE _0xE004E
                 ; 0007 0133             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004c64 940e c787 	CALL SUBOPT_0x120
                +
004c66 2f7e     +MOV R23 , R30
004c67 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004c68 940e c78d 	CALL SUBOPT_0x121
004c6a 940e c799 	CALL SUBOPT_0x123
004c6c 940e e087 	CALL __EEPROMRDB
                +
004c6e 2fa7     +MOV R26 , R23
004c6f 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004c70 93ec      	ST   X,R30
                 ; 0007 0134         }
                +
004c71 5f0f     +SUBI R16 , LOW ( - 1 )
004c72 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c73 cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0135         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004c74 940e c78d 	CALL SUBOPT_0x121
004c76 940e c793 	CALL SUBOPT_0x122
004c78 2f0e      	MOV  R16,R30
004c79 2711      	CLR  R17
                 _0xE0050:
                +
004c7a 3203     +CPI R16 , LOW ( 35 )
004c7b e0e0     +LDI R30 , HIGH ( 35 )
004c7c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c7d f43c      	BRGE _0xE0051
                 ; 0007 0136             readConfig->eventSource[i]  =   0x00;
004c7e 940e c787 	CALL SUBOPT_0x120
004c80 e0a0      	LDI  R26,LOW(0)
004c81 83a0      	STD  Z+0,R26
                 ; 0007 0137         }
                +
004c82 5f0f     +SUBI R16 , LOW ( - 1 )
004c83 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c84 cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 0138     }
                 _0xE004B:
                 ; 0007 0139     return 0;
                 _0x20E0092:
004c85 e0e0      	LDI  R30,LOW(0)
004c86 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0091:
004c87 8119      	LDD  R17,Y+1
004c88 8108      	LDD  R16,Y+0
004c89 9626      	ADIW R28,6
004c8a 9508      	RET
                 ; 0007 013A }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013D {
                 _getBuzzerConfig:
                 ; 0007 013E     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 013F     int i;
                 ; 0007 0140 
                 ; 0007 0141     if( config_buzz_flag != 0x01){
004c8b 93ba      	ST   -Y,R27
004c8c 93aa      	ST   -Y,R26
004c8d 9724      	SBIW R28,4
004c8e ece7      	LDI  R30,LOW(199)
004c8f 83e8      	ST   Y,R30
004c90 ecef      	LDI  R30,LOW(207)
004c91 83e9      	STD  Y+1,R30
004c92 ede7      	LDI  R30,LOW(215)
004c93 83ea      	STD  Y+2,R30
004c94 edef      	LDI  R30,LOW(223)
004c95 83eb      	STD  Y+3,R30
004c96 931a      	ST   -Y,R17
004c97 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004c98 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004c99 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004c9a 940e e087 	CALL __EEPROMRDB
004c9c 30e1      	CPI  R30,LOW(0x1)
004c9d f141      	BREQ _0xE0052
                 ; 0007 0142         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
004c9e e1e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
004c9f e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
004ca0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
004ca1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004ca2 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0143         readConfig->enable              =   0x01;
004ca4 81ae      	LDD  R26,Y+6
004ca5 81bf      	LDD  R27,Y+6+1
004ca6 e0e1      	LDI  R30,LOW(1)
004ca7 93ec      	ST   X,R30
                 ; 0007 0144         readConfig->eventSourceNumber   =   sizeof(errSrc);
004ca8 9611      	ADIW R26,1
004ca9 e0e4      	LDI  R30,LOW(4)
004caa 93ec      	ST   X,R30
                 ; 0007 0145 
                 ; 0007 0146         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0147         for(i=0;i<sizeof(errSrc);i++){
                +
004cab e000     +LDI R16 , LOW ( 0 )
004cac e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004cad 3004     +CPI R16 , LOW ( 4 )
004cae e0e0     +LDI R30 , HIGH ( 4 )
004caf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004cb0 f4a4      	BRGE _0xE0055
                 ; 0007 0148             if(i<sizeof(errSrc)){
                +
004cb1 3004     +CPI R16 , LOW ( 4 )
004cb2 e0e0     +LDI R30 , HIGH ( 4 )
004cb3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004cb4 f44c      	BRGE _0xE0056
                 ; 0007 0149                 readConfig->eventSource[i]  =   errSrc[i];
004cb5 940e c79f 	CALL SUBOPT_0x124
004cb7 010f      	MOVW R0,R30
004cb8 940e c7a5 	CALL SUBOPT_0x125
004cba 91ec      	LD   R30,X
004cbb 01d0      	MOVW R26,R0
004cbc 93ec      	ST   X,R30
                 ; 0007 014A                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014B             }
                 ; 0007 014C             else{
004cbd c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014D                 readConfig->eventSource[i]  =   0x00;
004cbe 940e c79f 	CALL SUBOPT_0x124
004cc0 e0a0      	LDI  R26,LOW(0)
004cc1 83a0      	STD  Z+0,R26
                 ; 0007 014E             }
                 _0xE0057:
                 ; 0007 014F         }
                +
004cc2 5f0f     +SUBI R16 , LOW ( - 1 )
004cc3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cc4 cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0150         //printDebug("\r\n");
                 ; 0007 0151     }
                 ; 0007 0152     else{
004cc5 c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0153         readConfig->enable              =   config_buzz.enable;
004cc6 e0a8      	LDI  R26,LOW(_config_buzz)
004cc7 e0b5      	LDI  R27,HIGH(_config_buzz)
004cc8 940e e087 	CALL __EEPROMRDB
004cca 81ae      	LDD  R26,Y+6
004ccb 81bf      	LDD  R27,Y+6+1
004ccc 93ec      	ST   X,R30
                 ; 0007 0154         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004ccd 940e c7aa 	CALL SUBOPT_0x126
                +
004ccf 81ae     +LDD R26 , Y + 6
004cd0 81bf     +LDD R27 , Y + 6 + 1
004cd1 9611     +ADIW R26 , 1
004cd2 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0155 
                 ; 0007 0156         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004cd3 e000     +LDI R16 , LOW ( 0 )
004cd4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004cd5 940e c7aa 	CALL SUBOPT_0x126
004cd7 940e c776 	CALL SUBOPT_0x11D
004cd9 f454      	BRGE _0xE005B
                 ; 0007 0157             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004cda 940e c79f 	CALL SUBOPT_0x124
004cdc 010f      	MOVW R0,R30
                +
004cdd e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004cde e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004cdf 940e c69a 	CALL SUBOPT_0xF9
                 ; 0007 0158         }
                +
004ce1 5f0f     +SUBI R16 , LOW ( - 1 )
004ce2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ce3 cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 0159         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004ce4 940e c7aa 	CALL SUBOPT_0x126
004ce6 2f0e      	MOV  R16,R30
004ce7 2711      	CLR  R17
                 _0xE005D:
                +
004ce8 3203     +CPI R16 , LOW ( 35 )
004ce9 e0e0     +LDI R30 , HIGH ( 35 )
004cea 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004ceb f43c      	BRGE _0xE005E
                 ; 0007 015A             readConfig->eventSource[i]  =   0x00;
004cec 940e c79f 	CALL SUBOPT_0x124
004cee e0a0      	LDI  R26,LOW(0)
004cef 83a0      	STD  Z+0,R26
                 ; 0007 015B         }
                +
004cf0 5f0f     +SUBI R16 , LOW ( - 1 )
004cf1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cf2 cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015C     }
                 _0xE0058:
                 ; 0007 015D 
                 ; 0007 015E     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004cf3 e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004cf4 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004cf5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004cf6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004cf7 940e c7af 	CALL SUBOPT_0x127
004cf9 91ec      	LD   R30,X
004cfa 940e c156 	CALL SUBOPT_0x29
                 ; 0007 015F     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004cfc e7e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004cfd e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004cfe e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004cff e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004d00 940e c7b4 	CALL SUBOPT_0x128
004d02 81e1      	LDD  R30,Z+1
004d03 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0160     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004d05 eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004d06 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004d07 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004d08 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004d09 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0161     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004d0b e000     +LDI R16 , LOW ( 0 )
004d0c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004d0d 3203     +CPI R16 , LOW ( 35 )
004d0e e0e0     +LDI R30 , HIGH ( 35 )
004d0f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004d10 f45c      	BRGE _0xE0061
                 ; 0007 0162         printDebug("[0x%02X]",readConfig->eventSource[i]);
004d11 940e c7b9 	CALL SUBOPT_0x129
004d13 940e c7b4 	CALL SUBOPT_0x128
004d15 940e c7be 	CALL SUBOPT_0x12A
004d17 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0163     }
                +
004d19 5f0f     +SUBI R16 , LOW ( - 1 )
004d1a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d1b cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0164     printDebug("\r\n");
004d1c 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 0165 
                 ; 0007 0166     return 0;
004d1e 940e c5d2 	CALL SUBOPT_0xD6
004d20 9628      	ADIW R28,8
004d21 9508      	RET
                 ; 0007 0167 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016A {
                 _getEnvAlarmConfig:
                 ; 0007 016B     if( config_alm_flag != 0x01 ){
004d22 93ba      	ST   -Y,R27
004d23 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004d24 e7af      	LDI  R26,LOW(_config_alm_flag)
004d25 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004d26 940e e087 	CALL __EEPROMRDB
004d28 30e1      	CPI  R30,LOW(0x1)
004d29 f121      	BREQ _0xE0062
                 ; 0007 016C         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004d2a ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004d2b e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004d2c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004d2d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004d2e 940e c042 	CALL SUBOPT_0x3
                 ; 0007 016D         readConfig->gsmRSSILevel         =   0;
004d30 81a8      	LD   R26,Y
004d31 81b9      	LDD  R27,Y+1
004d32 940e c402 	CALL SUBOPT_0x8E
                 ; 0007 016E         readConfig->gsmCreditBalance     =   0;
004d34 81a8      	LD   R26,Y
004d35 81b9      	LDD  R27,Y+1
004d36 9614      	ADIW R26,4
004d37 e0e0      	LDI  R30,LOW(0)
004d38 e0f0      	LDI  R31,HIGH(0)
004d39 940e c6fe 	CALL SUBOPT_0x109
                 ; 0007 016F         readConfig->batteryLevel         =   0;
004d3b 9616      	ADIW R26,6
004d3c 940e c402 	CALL SUBOPT_0x8E
                 ; 0007 0170         readConfig->commSignalLevel      =   0;
004d3e 81a8      	LD   R26,Y
004d3f 81b9      	LDD  R27,Y+1
004d40 961a      	ADIW R26,10
004d41 940e c402 	CALL SUBOPT_0x8E
                 ; 0007 0171         readConfig->commLostDelay        =   0;
004d43 81a8      	LD   R26,Y
004d44 81b9      	LDD  R27,Y+1
004d45 961e      	ADIW R26,14
004d46 e0e0      	LDI  R30,LOW(0)
004d47 e0f0      	LDI  R31,HIGH(0)
004d48 940e c6fe 	CALL SUBOPT_0x109
                 ; 0007 0172         readConfig->memoryMin            =   0;
004d4a 9650      	ADIW R26,16
004d4b 940e c737 	CALL SUBOPT_0x113
                 ; 0007 0173     }
                 ; 0007 0174     else{
004d4d c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0175         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004d4e e2ad      	LDI  R26,LOW(_config_alm)
004d4f e0b5      	LDI  R27,HIGH(_config_alm)
004d50 940e e07f 	CALL __EEPROMRDD
004d52 81a8      	LD   R26,Y
004d53 81b9      	LDD  R27,Y+1
004d54 940e e036 	CALL __PUTDP1
                 ; 0007 0176         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004d56 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004d57 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004d58 940e e083 	CALL __EEPROMRDW
                +
004d5a 81a8     +LDD R26 , Y + 0
004d5b 81b9     +LDD R27 , Y + 0 + 1
004d5c 9614     +ADIW R26 , 4
004d5d 93ed     +ST X + , R30
004d5e 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0177         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004d5f e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004d60 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004d61 940e e07f 	CALL __EEPROMRDD
                +
004d63 81a8     +LDD R26 , Y + 0
004d64 81b9     +LDD R27 , Y + 0 + 1
004d65 9616     +ADIW R26 , 6
004d66 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 0178         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004d68 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004d69 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004d6a 940e e07f 	CALL __EEPROMRDD
                +
004d6c 81a8     +LDD R26 , Y + 0
004d6d 81b9     +LDD R27 , Y + 0 + 1
004d6e 961a     +ADIW R26 , 10
004d6f 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 0179         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004d71 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004d72 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004d73 940e e083 	CALL __EEPROMRDW
                +
004d75 81a8     +LDD R26 , Y + 0
004d76 81b9     +LDD R27 , Y + 0 + 1
004d77 961e     +ADIW R26 , 14
004d78 93ed     +ST X + , R30
004d79 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017A         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004d7a e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004d7b e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004d7c 940e e083 	CALL __EEPROMRDW
                +
004d7e 81a8     +LDD R26 , Y + 0
004d7f 81b9     +LDD R27 , Y + 0 + 1
004d80 9650     +ADIW R26 , 16
004d81 93ed     +ST X + , R30
004d82 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017B     }
                 _0xE0063:
                 ; 0007 017C 
                 ; 0007 017D     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004d83 efed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004d84 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004d85 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004d86 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004d87 940e c7c3 	CALL SUBOPT_0x12B
004d89 940e c7c8 	CALL SUBOPT_0x12C
                 ; 0007 017E     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004d8b e2ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004d8c e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004d8d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004d8e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004d8f 940e c7c3 	CALL SUBOPT_0x12B
004d91 9614      	ADIW R26,4
004d92 940e c7cd 	CALL SUBOPT_0x12D
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004d94 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004d95 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004d96 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004d97 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004d98 940e c7d0 	CALL SUBOPT_0x12E
004d9a 940e c7d5 	CALL SUBOPT_0x12F
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004d9c e8ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004d9d e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004d9e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004d9f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004da0 940e c7d0 	CALL SUBOPT_0x12E
004da2 940e c7dc 	CALL SUBOPT_0x130
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004da4 ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004da5 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004da6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004da7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004da8 940e c7c3 	CALL SUBOPT_0x12B
004daa 961e      	ADIW R26,14
004dab 940e c7cd 	CALL SUBOPT_0x12D
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004dad eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004dae e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004daf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004db0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004db1 940e c7c3 	CALL SUBOPT_0x12B
004db3 9650      	ADIW R26,16
004db4 c033      	RJMP _0x20E0090
                 ; 0007 0183 
                 ; 0007 0184     return 0;
                 ; 0007 0185 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 0188 {
                 _getStatusReportConfig:
                 ; 0007 0189     if( config_stat_flag != 0x01 ){
004db5 93ba      	ST   -Y,R27
004db6 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004db7 e8a0      	LDI  R26,LOW(_config_stat_flag)
004db8 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004db9 940e e087 	CALL __EEPROMRDB
004dbb 30e1      	CPI  R30,LOW(0x1)
004dbc f081      	BREQ _0xE0064
                 ; 0007 018A         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004dbd e1ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004dbe e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004dbf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004dc0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004dc1 940e c042 	CALL SUBOPT_0x3
                 ; 0007 018B         readConfig->accm                =   0x30;
004dc3 81a8      	LD   R26,Y
004dc4 81b9      	LDD  R27,Y+1
004dc5 e3e0      	LDI  R30,LOW(48)
004dc6 93ec      	ST   X,R30
                 ; 0007 018C         readConfig->intv                =   60;
004dc7 9611      	ADIW R26,1
004dc8 e3ec      	LDI  R30,LOW(60)
004dc9 e0f0      	LDI  R31,HIGH(60)
004dca 93ed      	ST   X+,R30
004dcb 93fc      	ST   X,R31
                 ; 0007 018D     }
                 ; 0007 018E     else{
004dcc c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 018F         readConfig->accm                =   config_stat.accm;
004dcd e3af      	LDI  R26,LOW(_config_stat)
004dce e0b5      	LDI  R27,HIGH(_config_stat)
004dcf 940e e087 	CALL __EEPROMRDB
004dd1 81a8      	LD   R26,Y
004dd2 81b9      	LDD  R27,Y+1
004dd3 93ec      	ST   X,R30
                 ; 0007 0190         readConfig->intv                =   config_stat.intv;
                +
004dd4 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004dd5 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004dd6 940e c749 	CALL SUBOPT_0x116
                 ; 0007 0191     }
                 _0xE0065:
                 ; 0007 0192 
                 ; 0007 0193     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004dd8 e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004dd9 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004dda e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004ddb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004ddc 940e c7c3 	CALL SUBOPT_0x12B
004dde 91ec      	LD   R30,X
004ddf 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0194     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004de1 e8e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004de2 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004de3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004de4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004de5 940e c7c3 	CALL SUBOPT_0x12B
004de7 9611      	ADIW R26,1
                 _0x20E0090:
004de8 940e e027 	CALL __GETW1P
004dea 940e c1a4 	CALL SUBOPT_0x34
004dec 940e c0b8 	CALL SUBOPT_0x12
                 ; 0007 0195 
                 ; 0007 0196     return 0;
004dee e0e0      	LDI  R30,LOW(0)
004def e0f0      	LDI  R31,HIGH(0)
004df0 9622      	ADIW R28,2
004df1 9508      	RET
                 ; 0007 0197 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 019F {
                 _setPropertiesConfig:
                 ; 0007 01A0     int i;
                 ; 0007 01A1 
                 ; 0007 01A2     for(i=0;i<DEVTYPE_LENGTH;i++)
004df2 940e c3b3 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004df4 e000     +LDI R16 , LOW ( 0 )
004df5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004df6 3104     +CPI R16 , LOW ( 20 )
004df7 e0e0     +LDI R30 , HIGH ( 20 )
004df8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004df9 f474      	BRGE _0xE0068
                 ; 0007 01A3     {
                 ; 0007 01A4         config_prop.deviceType[i]       = newConfig->deviceType[i];
004dfa 01f8      	MOVW R30,R16
004dfb 50e0      	SUBI R30,LOW(-_config_prop)
004dfc 40f0      	SBCI R31,HIGH(-_config_prop)
004dfd 010f      	MOVW R0,R30
004dfe 01f8      	MOVW R30,R16
004dff 81aa      	LDD  R26,Y+2
004e00 81bb      	LDD  R27,Y+2+1
004e01 940e c7e3 	CALL SUBOPT_0x131
004e03 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01A5     }
                +
004e05 5f0f     +SUBI R16 , LOW ( - 1 )
004e06 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e07 cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A6 
                 ; 0007 01A7     /*
                 ; 0007 01A8     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01A9     {
                 ; 0007 01AA         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AB     }
                 ; 0007 01AC     */
                 ; 0007 01AD 
                 ; 0007 01AE     for(i=0;i<NAME_LENGTH;i++)
                +
004e08 e000     +LDI R16 , LOW ( 0 )
004e09 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004e0a 3208     +CPI R16 , LOW ( 40 )
004e0b e0e0     +LDI R30 , HIGH ( 40 )
004e0c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004e0d f484      	BRGE _0xE006B
                 ; 0007 01AF     {
                 ; 0007 01B0         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004e0e e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004e0f e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004e10 0fe0      	ADD  R30,R16
004e11 1ff1      	ADC  R31,R17
004e12 01df      	MOVW R26,R30
004e13 81ea      	LDD  R30,Y+2
004e14 81fb      	LDD  R31,Y+2+1
004e15 96b8      	ADIW R30,40
004e16 0fe0      	ADD  R30,R16
004e17 1ff1      	ADC  R31,R17
004e18 81e0      	LD   R30,Z
004e19 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01B1     }
                +
004e1b 5f0f     +SUBI R16 , LOW ( - 1 )
004e1c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e1d cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B2 
                 ; 0007 01B3     for(i=0;i<ID_LENGTH;i++)
                +
004e1e e000     +LDI R16 , LOW ( 0 )
004e1f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004e20 3104     +CPI R16 , LOW ( 20 )
004e21 e0e0     +LDI R30 , HIGH ( 20 )
004e22 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e23 f46c      	BRGE _0xE006E
                 ; 0007 01B4     {
                 ; 0007 01B5         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004e24 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004e25 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004e26 0fe0      	ADD  R30,R16
004e27 1ff1      	ADC  R31,R17
004e28 01df      	MOVW R26,R30
004e29 940e c6a2 	CALL SUBOPT_0xFA
004e2b 81e0      	LD   R30,Z
004e2c 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01B6     }
                +
004e2e 5f0f     +SUBI R16 , LOW ( - 1 )
004e2f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e30 cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B7 
                 ; 0007 01B8     for(i=0;i<NAME_LENGTH;i++)
                +
004e31 e000     +LDI R16 , LOW ( 0 )
004e32 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004e33 3208     +CPI R16 , LOW ( 40 )
004e34 e0e0     +LDI R30 , HIGH ( 40 )
004e35 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004e36 f46c      	BRGE _0xE0071
                 ; 0007 01B9     {
                 ; 0007 01BA         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004e37 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004e38 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004e39 0fe0      	ADD  R30,R16
004e3a 1ff1      	ADC  R31,R17
004e3b 01df      	MOVW R26,R30
004e3c 940e c6a9 	CALL SUBOPT_0xFB
004e3e 81e0      	LD   R30,Z
004e3f 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01BB     }
                +
004e41 5f0f     +SUBI R16 , LOW ( - 1 )
004e42 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e43 cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BC 
                 ; 0007 01BD     for(i=0;i<ID_LENGTH;i++)
                +
004e44 e000     +LDI R16 , LOW ( 0 )
004e45 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004e46 3104     +CPI R16 , LOW ( 20 )
004e47 e0e0     +LDI R30 , HIGH ( 20 )
004e48 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e49 f46c      	BRGE _0xE0074
                 ; 0007 01BE     {
                 ; 0007 01BF         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004e4a e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004e4b e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004e4c 0fe0      	ADD  R30,R16
004e4d 1ff1      	ADC  R31,R17
004e4e 01df      	MOVW R26,R30
004e4f 940e c6b0 	CALL SUBOPT_0xFC
004e51 81e0      	LD   R30,Z
004e52 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01C0     }
                +
004e54 5f0f     +SUBI R16 , LOW ( - 1 )
004e55 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e56 cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C1 
                 ; 0007 01C2     config_prop.timeZone                = newConfig->timeZone;
                +
004e57 eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004e58 e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004e59 010f      	MOVW R0,R30
004e5a 81aa      	LDD  R26,Y+2
004e5b 81bb      	LDD  R27,Y+2+1
004e5c 56a0      	SUBI R26,LOW(-160)
004e5d 4fbf      	SBCI R27,HIGH(-160)
004e5e 940e c7e8 	CALL SUBOPT_0x132
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop_flag                    = 0x01;
004e60 e4a2      	LDI  R26,LOW(_config_prop_flag)
004e61 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004e62 940e c7ed 	CALL SUBOPT_0x133
                 ; 0007 01C5 
                 ; 0007 01C6     is_properties_config_update          = 1;
004e64 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C7 
                 ; 0007 01C8     return 0;
004e66 940e c5d2 	CALL SUBOPT_0xD6
004e68 c090      	RJMP _0x20E008E
                 ; 0007 01C9 }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CC {
                 _setOperatingConfig:
                 ; 0007 01CD     int i;
                 ; 0007 01CE 
                 ; 0007 01CF     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004e69 940e c3b3 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004e6b 81aa      	LDD  R26,Y+2
004e6c 81bb      	LDD  R27,Y+2+1
004e6d 91ac      	LD   R26,X
004e6e 31a0      	CPI  R26,LOW(0x10)
004e6f f029      	BREQ _0xE0076
004e70 81aa      	LDD  R26,Y+2
004e71 81bb      	LDD  R27,Y+2+1
004e72 91ac      	LD   R26,X
004e73 32a0      	CPI  R26,LOW(0x20)
004e74 f409      	BRNE _0xE0077
                 _0xE0076:
004e75 c00b      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D0         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004e76 eaef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004e77 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004e78 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004e79 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004e7a 940e c6df 	CALL SUBOPT_0x103
                 ; 0007 01D1         return -1;
004e7c efef      	LDI  R30,LOW(65535)
004e7d efff      	LDI  R31,HIGH(65535)
004e7e 8119      	LDD  R17,Y+1
004e7f 8108      	LDD  R16,Y+0
004e80 c078      	RJMP _0x20E008E
                 ; 0007 01D2     }
                 ; 0007 01D3 
                 ; 0007 01D4     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004e81 81aa      	LDD  R26,Y+2
004e82 81bb      	LDD  R27,Y+2+1
004e83 91ec      	LD   R30,X
004e84 eaa1      	LDI  R26,LOW(_config_oper)
004e85 e0b0      	LDI  R27,HIGH(_config_oper)
004e86 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01D5     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004e88 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004e89 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004e8a 81ea      	LDD  R30,Y+2
004e8b 81fb      	LDD  R31,Y+2+1
004e8c 81e1      	LDD  R30,Z+1
004e8d 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01D6     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004e8f eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004e90 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004e91 81ea      	LDD  R30,Y+2
004e92 81fb      	LDD  R31,Y+2+1
004e93 81e2      	LDD  R30,Z+2
004e94 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01D7 
                 ; 0007 01D8     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004e96 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004e97 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004e98 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004e99 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004e9a 940e e05b 	CALL __PUTPARD1
004e9c eaa1      	LDI  R26,LOW(_config_oper)
004e9d e0b0      	LDI  R27,HIGH(_config_oper)
004e9e 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 01D9     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004ea0 e0ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004ea1 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004ea2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004ea3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004ea4 940e e05b 	CALL __PUTPARD1
                +
004ea6 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004ea7 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004ea8 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 01DA     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004eaa 940e c7f4 	CALL SUBOPT_0x135
                +
004eac eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004ead e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004eae 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 01DB     printDebug("\r\n sensorEnable    >> ");
                +
004eb0 e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004eb1 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004eb2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004eb3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004eb4 940e c042 	CALL SUBOPT_0x3
                 ; 0007 01DC 
                 ; 0007 01DD     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004eb6 e000     +LDI R16 , LOW ( 0 )
004eb7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004eb8 3005     +CPI R16 , LOW ( 5 )
004eb9 e0e0     +LDI R30 , HIGH ( 5 )
004eba 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004ebb f4c4      	BRGE _0xE007A
                 ; 0007 01DE     {
                 ; 0007 01DF         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004ebc eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004ebd e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004ebe 0fe0      	ADD  R30,R16
004ebf 1ff1      	ADC  R31,R17
004ec0 01df      	MOVW R26,R30
004ec1 940e c6c5 	CALL SUBOPT_0xFF
004ec3 81e0      	LD   R30,Z
004ec4 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 01E0         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004ec6 940e c7b9 	CALL SUBOPT_0x129
004ec8 940e e05b 	CALL __PUTPARD1
                +
004eca eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004ecb e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004ecc 0fe0      	ADD  R30,R16
004ecd 1ff1      	ADC  R31,R17
004ece 01df      	MOVW R26,R30
004ecf 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 01E1     }
                +
004ed1 5f0f     +SUBI R16 , LOW ( - 1 )
004ed2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ed3 cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E2     printDebug("\r\n");
004ed4 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 01E3 
                 ; 0007 01E4     config_oper_flag                    =   0x01;
004ed6 e4a3      	LDI  R26,LOW(_config_oper_flag)
004ed7 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004ed8 940e c7ed 	CALL SUBOPT_0x133
                 ; 0007 01E5 
                 ; 0007 01E6     is_operating_config_update          =   1;
004eda 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E7 
                 ; 0007 01E8     return 0;
004edc 940e c5d2 	CALL SUBOPT_0xD6
004ede c01a      	RJMP _0x20E008E
                 ; 0007 01E9 }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EC {
                 _setSensorConfig:
                 ; 0007 01ED     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004edf 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004ee1 f022      	BRMI _0xE007C
004ee2 81aa      	LDD  R26,Y+2
004ee3 81bb      	LDD  R27,Y+2+1
004ee4 9715      	SBIW R26,5
004ee5 f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01EE         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004ee6 e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004ee7 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004ee8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004ee9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004eea c008      	RJMP _0x20E008D
                 ; 0007 01EF         return -1;
                 ; 0007 01F0     }
                 ; 0007 01F1     if(newConfig->samplingRate == 0){
                 _0xE007B:
004eeb 940e c7fb 	CALL SUBOPT_0x136
004eed 9730      	SBIW R30,0
004eee f461      	BRNE _0xE007E
                 ; 0007 01F2         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004eef e8e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004ef0 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004ef1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004ef2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E008D:
004ef3 940e e05b 	CALL __PUTPARD1
004ef5 940e c1ad 	CALL SUBOPT_0x36
                 ; 0007 01F3         return -1;
                 _0x20E008F:
004ef7 efef      	LDI  R30,LOW(65535)
004ef8 efff      	LDI  R31,HIGH(65535)
                 _0x20E008E:
004ef9 9624      	ADIW R28,4
004efa 9508      	RET
                 ; 0007 01F4     }
                 ; 0007 01F5 
                 ; 0007 01F6     if(newConfig->samplingRate < 60){
                 _0xE007E:
004efb 940e c7fb 	CALL SUBOPT_0x136
004efd 97fc      	SBIW R30,60
004efe f430      	BRSH _0xE007F
                 ; 0007 01F7         newConfig->samplingRate         =   60;
004eff 81a8      	LD   R26,Y
004f00 81b9      	LDD  R27,Y+1
004f01 e3ec      	LDI  R30,LOW(60)
004f02 e0f0      	LDI  R31,HIGH(60)
004f03 93ed      	ST   X+,R30
004f04 93fc      	ST   X,R31
                 ; 0007 01F8     }
                 ; 0007 01F9 
                 ; 0007 01FA     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004f05 940e c70d 	CALL SUBOPT_0x10C
004f07 55e7      	SUBI R30,LOW(-_config_sens)
004f08 4fff      	SBCI R31,HIGH(-_config_sens)
004f09 010f      	MOVW R0,R30
004f0a 940e c7fb 	CALL SUBOPT_0x136
004f0c 940e c800 	CALL SUBOPT_0x137
                 ; 0007 01FB     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004f0e 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004f0f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004f10 010f      	MOVW R0,R30
004f11 81a8      	LD   R26,Y
004f12 81b9      	LDD  R27,Y+1
004f13 9612      	ADIW R26,2
004f14 940e c804 	CALL SUBOPT_0x138
                 ; 0007 01FC     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004f16 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004f17 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004f18 01df      	MOVW R26,R30
004f19 81e8      	LD   R30,Y
004f1a 81f9      	LDD  R31,Y+1
004f1b 81e4      	LDD  R30,Z+4
004f1c 940e c807 	CALL SUBOPT_0x139
                 ; 0007 01FD     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004f1e 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004f1f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004f20 01df      	MOVW R26,R30
004f21 81e8      	LD   R30,Y
004f22 81f9      	LDD  R31,Y+1
004f23 81e5      	LDD  R30,Z+5
004f24 940e c807 	CALL SUBOPT_0x139
                 ; 0007 01FE     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004f26 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004f27 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004f28 01df      	MOVW R26,R30
004f29 81e8      	LD   R30,Y
004f2a 81f9      	LDD  R31,Y+1
004f2b 81e6      	LDD  R30,Z+6
004f2c 940e c807 	CALL SUBOPT_0x139
                 ; 0007 01FF     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004f2e 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004f2f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004f30 01df      	MOVW R26,R30
004f31 81e8      	LD   R30,Y
004f32 81f9      	LDD  R31,Y+1
004f33 81e7      	LDD  R30,Z+7
004f34 940e c807 	CALL SUBOPT_0x139
                 ; 0007 0200 
                 ; 0007 0201     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004f36 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004f37 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004f38 01df      	MOVW R26,R30
004f39 81e8      	LD   R30,Y
004f3a 81f9      	LDD  R31,Y+1
004f3b 85e0      	LDD  R30,Z+8
004f3c 940e c807 	CALL SUBOPT_0x139
                 ; 0007 0202     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004f3e 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004f3f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004f40 010f      	MOVW R0,R30
004f41 81a8      	LD   R26,Y
004f42 81b9      	LDD  R27,Y+1
004f43 9619      	ADIW R26,9
004f44 940e c80a 	CALL SUBOPT_0x13A
                 ; 0007 0203     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004f46 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004f47 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004f48 010f      	MOVW R0,R30
004f49 81a8      	LD   R26,Y
004f4a 81b9      	LDD  R27,Y+1
004f4b 961d      	ADIW R26,13
004f4c 940e c804 	CALL SUBOPT_0x138
                 ; 0007 0204     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004f4e 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004f4f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004f50 010f      	MOVW R0,R30
004f51 81a8      	LD   R26,Y
004f52 81b9      	LDD  R27,Y+1
004f53 961f      	ADIW R26,15
004f54 940e c80a 	CALL SUBOPT_0x13A
                 ; 0007 0205     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004f56 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004f57 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004f58 010f      	MOVW R0,R30
004f59 81a8      	LD   R26,Y
004f5a 81b9      	LDD  R27,Y+1
004f5b 9653      	ADIW R26,19
004f5c 940e c80a 	CALL SUBOPT_0x13A
                 ; 0007 0206     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004f5e 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004f5f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004f60 010f      	MOVW R0,R30
004f61 81a8      	LD   R26,Y
004f62 81b9      	LDD  R27,Y+1
004f63 9657      	ADIW R26,23
004f64 940e c804 	CALL SUBOPT_0x138
                 ; 0007 0207     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004f66 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004f67 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004f68 010f      	MOVW R0,R30
004f69 81a8      	LD   R26,Y
004f6a 81b9      	LDD  R27,Y+1
004f6b 9659      	ADIW R26,25
004f6c 940e c810 	CALL SUBOPT_0x13B
                 ; 0007 0208 
                 ; 0007 0209     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004f6e ece4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004f6f e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004f70 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004f71 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004f72 940e c816 	CALL SUBOPT_0x13C
004f74 55e7      	SUBI R30,LOW(-_config_sens)
004f75 4fff      	SBCI R31,HIGH(-_config_sens)
004f76 940e c81e 	CALL SUBOPT_0x13D
004f78 940e c0b8 	CALL SUBOPT_0x12
                 ; 0007 020A     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004f7a eee1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004f7b e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004f7c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004f7d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004f7e 940e c816 	CALL SUBOPT_0x13C
                +
004f80 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004f81 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004f82 940e c81e 	CALL SUBOPT_0x13D
004f84 940e c0b8 	CALL SUBOPT_0x12
                 ; 0007 020B     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004f86 efee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004f87 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004f88 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004f89 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004f8a 940e c816 	CALL SUBOPT_0x13C
                +
004f8c 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004f8d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004f8e 01df      	MOVW R26,R30
004f8f 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 020C     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004f91 e1eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004f92 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004f93 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004f94 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004f95 940e c816 	CALL SUBOPT_0x13C
                +
004f97 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004f98 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004f99 01df      	MOVW R26,R30
004f9a 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 020D     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004f9c e3e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004f9d e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004f9e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004f9f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004fa0 940e c816 	CALL SUBOPT_0x13C
                +
004fa2 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004fa3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004fa4 01df      	MOVW R26,R30
004fa5 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 020E     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004fa7 e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004fa8 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004fa9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004faa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004fab 940e c816 	CALL SUBOPT_0x13C
                +
004fad 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004fae 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004faf 01df      	MOVW R26,R30
004fb0 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 020F 
                 ; 0007 0210     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004fb2 940e c7f4 	CALL SUBOPT_0x135
004fb4 81ae      	LDD  R26,Y+6
004fb5 81bf      	LDD  R27,Y+6+1
004fb6 e1ed      	LDI  R30,LOW(29)
004fb7 940e df79 	CALL __MULB1W2U
                +
004fb9 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004fba 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004fbb 01df      	MOVW R26,R30
004fbc 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 0211     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004fbe e7e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004fbf e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004fc0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004fc1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004fc2 940e c816 	CALL SUBOPT_0x13C
004fc4 940e c713 	CALL SUBOPT_0x10D
004fc6 940e c7af 	CALL SUBOPT_0x127
004fc8 e1ed      	LDI  R30,LOW(29)
004fc9 940e df79 	CALL __MULB1W2U
004fcb 940e c713 	CALL SUBOPT_0x10D
004fcd 940e c11b 	CALL SUBOPT_0x21
                 ; 0007 0212     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004fcf e9e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004fd0 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004fd1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004fd2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004fd3 940e c816 	CALL SUBOPT_0x13C
004fd5 940e c719 	CALL SUBOPT_0x10E
004fd7 940e c1a4 	CALL SUBOPT_0x34
004fd9 85aa      	LDD  R26,Y+10
004fda 85bb      	LDD  R27,Y+10+1
004fdb e1ed      	LDI  R30,LOW(29)
004fdc 940e df79 	CALL __MULB1W2U
004fde 940e c719 	CALL SUBOPT_0x10E
004fe0 940e c822 	CALL SUBOPT_0x13E
                 ; 0007 0213     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004fe2 ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004fe3 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004fe4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004fe5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004fe6 940e c816 	CALL SUBOPT_0x13C
004fe8 940e c71f 	CALL SUBOPT_0x10F
004fea 940e c7af 	CALL SUBOPT_0x127
004fec e1ed      	LDI  R30,LOW(29)
004fed 940e df79 	CALL __MULB1W2U
004fef 940e c71f 	CALL SUBOPT_0x10F
004ff1 940e c11b 	CALL SUBOPT_0x21
                 ; 0007 0214     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
004ff3 ede4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
004ff4 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
004ff5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
004ff6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
004ff7 940e c816 	CALL SUBOPT_0x13C
004ff9 940e c725 	CALL SUBOPT_0x110
004ffb 940e c7af 	CALL SUBOPT_0x127
004ffd e1ed      	LDI  R30,LOW(29)
004ffe 940e df79 	CALL __MULB1W2U
005000 940e c725 	CALL SUBOPT_0x110
005002 940e c11b 	CALL SUBOPT_0x21
                 ; 0007 0215     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
005004 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
005005 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
005006 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
005007 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
005008 940e c816 	CALL SUBOPT_0x13C
00500a 940e c72b 	CALL SUBOPT_0x111
00500c 940e c1a4 	CALL SUBOPT_0x34
00500e 85aa      	LDD  R26,Y+10
00500f 85bb      	LDD  R27,Y+10+1
005010 e1ed      	LDI  R30,LOW(29)
005011 940e df79 	CALL __MULB1W2U
005013 940e c72b 	CALL SUBOPT_0x111
005015 940e c822 	CALL SUBOPT_0x13E
                 ; 0007 0216     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
005017 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
005018 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
005019 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
00501a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
00501b 940e c816 	CALL SUBOPT_0x13C
00501d 940e c731 	CALL SUBOPT_0x112
00501f 940e c7af 	CALL SUBOPT_0x127
005021 e1ed      	LDI  R30,LOW(29)
005022 940e df79 	CALL __MULB1W2U
005024 940e c731 	CALL SUBOPT_0x112
005026 940e c11b 	CALL SUBOPT_0x21
                 ; 0007 0217     printDebug("\r\n");
005028 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 0218 
                 ; 0007 0219     config_sens_flag[ch]                = 0x01;
00502a 81aa      	LDD  R26,Y+2
00502b 81bb      	LDD  R27,Y+2+1
00502c 5bac      	SUBI R26,LOW(-_config_sens_flag)
00502d 4fba      	SBCI R27,HIGH(-_config_sens_flag)
00502e e0e1      	LDI  R30,LOW(1)
00502f 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 021A     is_sensor_config_update[ch]          = 1;
005031 81ea      	LDD  R30,Y+2
005032 81fb      	LDD  R31,Y+2+1
005033 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
005034 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
005035 e0a1      	LDI  R26,LOW(1)
005036 83a0      	STD  Z+0,R26
                 ; 0007 021B 
                 ; 0007 021C     return 0;
005037 e0e0      	LDI  R30,LOW(0)
005038 e0f0      	LDI  R31,HIGH(0)
005039 c374      	RJMP _0x20E0088
                 ; 0007 021D }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0220 {
                 _setAuxDinConfig:
                 ; 0007 0221     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
00503a 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
00503c f022      	BRMI _0xE0081
00503d 81aa      	LDD  R26,Y+2
00503e 81bb      	LDD  R27,Y+2+1
00503f 9751      	SBIW R26,17
005040 f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0222         return -1;
005041 efef      	LDI  R30,LOW(65535)
005042 efff      	LDI  R31,HIGH(65535)
005043 c36a      	RJMP _0x20E0088
                 ; 0007 0223     }
                 ; 0007 0224 
                 ; 0007 0225     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
005044 940e c73c 	CALL SUBOPT_0x114
005046 5ce6      	SUBI R30,LOW(-_config_din)
005047 4ffe      	SBCI R31,HIGH(-_config_din)
005048 010f      	MOVW R0,R30
005049 81a8      	LD   R26,Y
00504a 81b9      	LDD  R27,Y+1
00504b 940e c7e8 	CALL SUBOPT_0x132
                 ; 0007 0226     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
00504d 940e c73c 	CALL SUBOPT_0x114
                +
00504f 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
005050 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
005051 940e c825 	CALL SUBOPT_0x13F
005053 940e c82a 	CALL SUBOPT_0x140
                 ; 0007 0227 
                 ; 0007 0228     printDebug("\r\n channel         >> [%d]",      ch);
005055 940e c830 	CALL SUBOPT_0x141
005057 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 0229     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
005059 940e c835 	CALL SUBOPT_0x142
00505b e0e3      	LDI  R30,LOW(3)
00505c 940e df79 	CALL __MULB1W2U
00505e 5ce6      	SUBI R30,LOW(-_config_din)
00505f 4ffe      	SBCI R31,HIGH(-_config_din)
005060 01df      	MOVW R26,R30
005061 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 022A     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
005063 e6ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
005064 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
005065 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
005066 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
005067 940e c83e 	CALL SUBOPT_0x143
005069 e0e3      	LDI  R30,LOW(3)
00506a 940e df79 	CALL __MULB1W2U
                +
00506c 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
00506d 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
00506e 940e c81e 	CALL SUBOPT_0x13D
005070 940e c0b8 	CALL SUBOPT_0x12
                 ; 0007 022B 
                 ; 0007 022C     config_din_flag[ch]                 =   0x01;
005072 81aa      	LDD  R26,Y+2
005073 81bb      	LDD  R27,Y+2+1
005074 5ba7      	SUBI R26,LOW(-_config_din_flag)
005075 4fba      	SBCI R27,HIGH(-_config_din_flag)
005076 e0e1      	LDI  R30,LOW(1)
005077 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 022D     is_din_config_update[ch]            =   1;
005079 81ea      	LDD  R30,Y+2
00507a 81fb      	LDD  R31,Y+2+1
00507b 50e3      	SUBI R30,LOW(-_is_din_config_update)
00507c 4eff      	SBCI R31,HIGH(-_is_din_config_update)
00507d e0a1      	LDI  R26,LOW(1)
00507e 83a0      	STD  Z+0,R26
                 ; 0007 022E     return 0;
00507f e0e0      	LDI  R30,LOW(0)
005080 e0f0      	LDI  R31,HIGH(0)
005081 c32c      	RJMP _0x20E0088
                 ; 0007 022F }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0232 {
                 _setAuxDoutConfig:
                 ; 0007 0233     int i;
                 ; 0007 0234 
                 ; 0007 0235     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
005082 940e c3b3 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005084 81ad      	LDD  R26,Y+5
005085 23aa      	TST  R26
005086 f022      	BRMI _0xE0084
005087 81ac      	LDD  R26,Y+4
005088 81bd      	LDD  R27,Y+4+1
005089 9716      	SBIW R26,6
00508a f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0236         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
00508b e8e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
00508c e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
00508d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
00508e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
00508f 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0237         return -1;
005091 efef      	LDI  R30,LOW(65535)
005092 efff      	LDI  R31,HIGH(65535)
005093 c143      	RJMP _0x20E008B
                 ; 0007 0238     }
                 ; 0007 0239 
                 ; 0007 023A     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
005094 81ea      	LDD  R30,Y+2
005095 81fb      	LDD  R31,Y+2+1
005096 81a2      	LDD  R26,Z+2
005097 32a4      	CPI  R26,LOW(0x24)
005098 f060      	BRLO _0xE0086
                 ; 0007 023B         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
005099 eaee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
00509a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
00509b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
00509c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
00509d 940e c6e5 	CALL SUBOPT_0x104
00509f 81e2      	LDD  R30,Z+2
0050a0 940e c156 	CALL SUBOPT_0x29
                 ; 0007 023C         return -1;
0050a2 efef      	LDI  R30,LOW(65535)
0050a3 efff      	LDI  R31,HIGH(65535)
0050a4 c132      	RJMP _0x20E008B
                 ; 0007 023D     }
                 ; 0007 023E 
                 ; 0007 023F     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
0050a5 940e c756 	CALL SUBOPT_0x118
0050a7 59e6      	SUBI R30,LOW(-_config_dout)
0050a8 4ffe      	SBCI R31,HIGH(-_config_dout)
0050a9 01df      	MOVW R26,R30
0050aa e0e1      	LDI  R30,LOW(1)
0050ab 940e c843 	CALL SUBOPT_0x144
                 ; 0007 0240     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
0050ad 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
0050ae 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
0050af 01df      	MOVW R26,R30
0050b0 e0e0      	LDI  R30,LOW(0)
0050b1 940e c843 	CALL SUBOPT_0x144
                 ; 0007 0241     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
0050b3 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
0050b4 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
0050b5 01df      	MOVW R26,R30
0050b6 81ea      	LDD  R30,Y+2
0050b7 81fb      	LDD  R31,Y+2+1
0050b8 81e2      	LDD  R30,Z+2
0050b9 940e c846 	CALL SUBOPT_0x145
                 ; 0007 0242 
                 ; 0007 0243     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0244     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
0050bb e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
0050bc e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
0050bd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
0050be e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
0050bf 940e c75c 	CALL SUBOPT_0x119
0050c1 940e c764 	CALL SUBOPT_0x11A
                 ; 0007 0245     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
0050c3 e2e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
0050c4 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
0050c5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
0050c6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
0050c7 940e c75c 	CALL SUBOPT_0x119
0050c9 940e c76a 	CALL SUBOPT_0x11B
                 ; 0007 0246     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
0050cb 940e c84d 	CALL SUBOPT_0x146
0050cd 940e c75c 	CALL SUBOPT_0x119
0050cf 940e c770 	CALL SUBOPT_0x11C
0050d1 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0247     printDebug("\r\n eventSource       >> ");
0050d3 940e c852 	CALL SUBOPT_0x147
                 ; 0007 0248 
                 ; 0007 0249     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
0050d5 e000     +LDI R16 , LOW ( 0 )
0050d6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
0050d7 940e c756 	CALL SUBOPT_0x118
0050d9 940e c770 	CALL SUBOPT_0x11C
0050db 940e c776 	CALL SUBOPT_0x11D
0050dd f4d4      	BRGE _0xE0089
                 ; 0007 024A 
                 ; 0007 024B         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
0050de 940e c756 	CALL SUBOPT_0x118
0050e0 940e c77b 	CALL SUBOPT_0x11E
0050e2 940e c6c5 	CALL SUBOPT_0xFF
0050e4 81e0      	LD   R30,Z
0050e5 940e c843 	CALL SUBOPT_0x144
                 ; 0007 024C 
                 ; 0007 024D         if( config_dout[ch].eventSource[i] != 0x00 ){
0050e7 940e c77b 	CALL SUBOPT_0x11E
0050e9 940e e087 	CALL __EEPROMRDB
0050eb 30e0      	CPI  R30,0
0050ec f041      	BREQ _0xE008A
                 ; 0007 024E             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
0050ed 940e c7b9 	CALL SUBOPT_0x129
0050ef 940e c75c 	CALL SUBOPT_0x119
0050f1 940e c77b 	CALL SUBOPT_0x11E
0050f3 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 024F         }
                 ; 0007 0250     }
                 _0xE008A:
                +
0050f5 5f0f     +SUBI R16 , LOW ( - 1 )
0050f6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0050f7 cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0251     printDebug("\r\n");
0050f8 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 0252 
                 ; 0007 0253     config_dout_flag[ch]                =   0x01;
0050fa 81ac      	LDD  R26,Y+4
0050fb 81bd      	LDD  R27,Y+4+1
0050fc 5aa7      	SUBI R26,LOW(-_config_dout_flag)
0050fd 4fba      	SBCI R27,HIGH(-_config_dout_flag)
0050fe e0e1      	LDI  R30,LOW(1)
0050ff 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 0254     is_dout_config_update[ch]           =   1;
005101 81ec      	LDD  R30,Y+4
005102 81fd      	LDD  R31,Y+4+1
005103 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
005104 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
005105 e0a1      	LDI  R26,LOW(1)
005106 83a0      	STD  Z+0,R26
                 ; 0007 0255 
                 ; 0007 0256     return 0;
005107 c0cd      	RJMP _0x20E008C
                 ; 0007 0257 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025A {
                 _setAuxAinConfig:
                 ; 0007 025B     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
005108 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
00510a f022      	BRMI _0xE008C
00510b 81aa      	LDD  R26,Y+2
00510c 81bb      	LDD  R27,Y+2+1
00510d 9751      	SBIW R26,17
00510e f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025C         return -1;
00510f efef      	LDI  R30,LOW(65535)
005110 efff      	LDI  R31,HIGH(65535)
005111 c29c      	RJMP _0x20E0088
                 ; 0007 025D     }
                 ; 0007 025E 
                 ; 0007 025F     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
005112 940e c781 	CALL SUBOPT_0x11F
005114 5de8      	SUBI R30,LOW(-_config_ain)
005115 4ffd      	SBCI R31,HIGH(-_config_ain)
005116 010f      	MOVW R0,R30
005117 81a8      	LD   R26,Y
005118 81b9      	LDD  R27,Y+1
005119 940e c7e8 	CALL SUBOPT_0x132
                 ; 0007 0260     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
00511b 940e c781 	CALL SUBOPT_0x11F
                +
00511d 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
00511e 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
00511f 940e c825 	CALL SUBOPT_0x13F
005121 940e c810 	CALL SUBOPT_0x13B
                 ; 0007 0261 
                 ; 0007 0262     printDebug("\r\n channel         >> [%d]",      ch);
005123 940e c830 	CALL SUBOPT_0x141
005125 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 0263     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
005127 940e c835 	CALL SUBOPT_0x142
005129 e0e5      	LDI  R30,LOW(5)
00512a 940e df79 	CALL __MULB1W2U
00512c 5de8      	SUBI R30,LOW(-_config_ain)
00512d 4ffd      	SBCI R31,HIGH(-_config_ain)
00512e 01df      	MOVW R26,R30
00512f 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 0264     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
005131 e7e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
005132 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
005133 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
005134 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
005135 940e c83e 	CALL SUBOPT_0x143
005137 e0e5      	LDI  R30,LOW(5)
005138 940e df79 	CALL __MULB1W2U
                +
00513a 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
00513b 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
00513c 940e c858 	CALL SUBOPT_0x148
                 ; 0007 0265 
                 ; 0007 0266     config_ain_flag[ch]                 = 0x01;
00513e 81aa      	LDD  R26,Y+2
00513f 81bb      	LDD  R27,Y+2+1
005140 5aa2      	SUBI R26,LOW(-_config_ain_flag)
005141 4fba      	SBCI R27,HIGH(-_config_ain_flag)
005142 e0e1      	LDI  R30,LOW(1)
005143 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 0267 
                 ; 0007 0268     return 0;
005145 e0e0      	LDI  R30,LOW(0)
005146 e0f0      	LDI  R31,HIGH(0)
005147 c266      	RJMP _0x20E0088
                 ; 0007 0269 }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026C {
                 _setAuxAoutConfig:
                 ; 0007 026D     int i;
                 ; 0007 026E 
                 ; 0007 026F     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
005148 940e c3b3 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
00514a 81ad      	LDD  R26,Y+5
00514b 23aa      	TST  R26
00514c f022      	BRMI _0xE008F
00514d 81ac      	LDD  R26,Y+4
00514e 81bd      	LDD  R27,Y+4+1
00514f 9751      	SBIW R26,17
005150 f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0270         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
005151 e9e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
005152 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
005153 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
005154 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
005155 940e c042 	CALL SUBOPT_0x3
                 ; 0007 0271         return -1;
005157 efef      	LDI  R30,LOW(65535)
005158 efff      	LDI  R31,HIGH(65535)
005159 c07d      	RJMP _0x20E008B
                 ; 0007 0272     }
                 ; 0007 0273 
                 ; 0007 0274     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
00515a 81ea      	LDD  R30,Y+2
00515b 81fb      	LDD  R31,Y+2+1
00515c 81a5      	LDD  R26,Z+5
00515d 32a4      	CPI  R26,LOW(0x24)
00515e f060      	BRLO _0xE0091
                 ; 0007 0275         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
00515f ebe9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
005160 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
005161 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
005162 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
005163 940e c6e5 	CALL SUBOPT_0x104
005165 81e5      	LDD  R30,Z+5
005166 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0276         return -1;
005168 efef      	LDI  R30,LOW(65535)
005169 efff      	LDI  R31,HIGH(65535)
00516a c06c      	RJMP _0x20E008B
                 ; 0007 0277     }
                 ; 0007 0278 
                 ; 0007 0279     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
00516b 940e c78d 	CALL SUBOPT_0x121
00516d 58e8      	SUBI R30,LOW(-_config_aout)
00516e 4ffd      	SBCI R31,HIGH(-_config_aout)
00516f 010f      	MOVW R0,R30
005170 81aa      	LDD  R26,Y+2
005171 81bb      	LDD  R27,Y+2+1
005172 940e c7e8 	CALL SUBOPT_0x132
                 ; 0007 027A     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
005174 940e c78d 	CALL SUBOPT_0x121
                +
005176 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
005177 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
005178 010f      	MOVW R0,R30
005179 81aa      	LDD  R26,Y+2
00517a 81bb      	LDD  R27,Y+2+1
00517b 9611      	ADIW R26,1
00517c 940e c810 	CALL SUBOPT_0x13B
                 ; 0007 027B     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
00517e 940e c78d 	CALL SUBOPT_0x121
                +
005180 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
005181 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
005182 01df      	MOVW R26,R30
005183 81ea      	LDD  R30,Y+2
005184 81fb      	LDD  R31,Y+2+1
005185 81e5      	LDD  R30,Z+5
005186 940e c846 	CALL SUBOPT_0x145
                 ; 0007 027C 
                 ; 0007 027D     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 027E     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
005188 e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
005189 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
00518a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
00518b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
00518c 940e c85f 	CALL SUBOPT_0x149
00518e 58e8      	SUBI R30,LOW(-_config_aout)
00518f 4ffd      	SBCI R31,HIGH(-_config_aout)
005190 01df      	MOVW R26,R30
005191 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 027F     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
005193 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
005194 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
005195 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
005196 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
005197 940e c85f 	CALL SUBOPT_0x149
                +
005199 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
00519a 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
00519b 940e c858 	CALL SUBOPT_0x148
                 ; 0007 0280     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
00519d 940e c84d 	CALL SUBOPT_0x146
00519f 940e c85f 	CALL SUBOPT_0x149
0051a1 940e c793 	CALL SUBOPT_0x122
0051a3 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0281     printDebug("\r\n eventSource       >> ");
0051a5 940e c852 	CALL SUBOPT_0x147
                 ; 0007 0282 
                 ; 0007 0283     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
0051a7 e000     +LDI R16 , LOW ( 0 )
0051a8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
0051a9 940e c78d 	CALL SUBOPT_0x121
0051ab 940e c793 	CALL SUBOPT_0x122
0051ad 940e c776 	CALL SUBOPT_0x11D
0051af f4e4      	BRGE _0xE0094
                 ; 0007 0284 
                 ; 0007 0285         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
0051b0 940e c78d 	CALL SUBOPT_0x121
0051b2 940e c799 	CALL SUBOPT_0x123
0051b4 940e c787 	CALL SUBOPT_0x120
0051b6 81e0      	LD   R30,Z
0051b7 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 0286 
                 ; 0007 0287         if( config_aout[ch].eventSource[i] != 0x00 ){
0051b9 940e c78d 	CALL SUBOPT_0x121
0051bb 940e c799 	CALL SUBOPT_0x123
0051bd 940e e087 	CALL __EEPROMRDB
0051bf 30e0      	CPI  R30,0
0051c0 f041      	BREQ _0xE0095
                 ; 0007 0288             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
0051c1 940e c7b9 	CALL SUBOPT_0x129
0051c3 940e c85f 	CALL SUBOPT_0x149
0051c5 940e c799 	CALL SUBOPT_0x123
0051c7 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 0289         }
                 ; 0007 028A     }
                 _0xE0095:
                +
0051c9 5f0f     +SUBI R16 , LOW ( - 1 )
0051ca 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051cb cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028B     printDebug("\r\n");
0051cc 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 028C 
                 ; 0007 028D     config_aout_flag[ch]                =   0x01;
0051ce 81ac      	LDD  R26,Y+4
0051cf 81bd      	LDD  R27,Y+4+1
0051d0 59a2      	SUBI R26,LOW(-_config_aout_flag)
0051d1 4fba      	SBCI R27,HIGH(-_config_aout_flag)
0051d2 e0e1      	LDI  R30,LOW(1)
0051d3 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 028E 
                 ; 0007 028F     return 0;
                 _0x20E008C:
0051d5 e0e0      	LDI  R30,LOW(0)
0051d6 e0f0      	LDI  R31,HIGH(0)
                 _0x20E008B:
0051d7 8119      	LDD  R17,Y+1
0051d8 8108      	LDD  R16,Y+0
0051d9 9626      	ADIW R28,6
0051da 9508      	RET
                 ; 0007 0290 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0293 {
                 _setBuzzerConfig:
                 ; 0007 0294     int i;
                 ; 0007 0295 
                 ; 0007 0296     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
0051db 940e c3b3 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
0051dd 81ea      	LDD  R30,Y+2
0051de 81fb      	LDD  R31,Y+2+1
0051df 81a1      	LDD  R26,Z+1
0051e0 32a4      	CPI  R26,LOW(0x24)
0051e1 f070      	BRLO _0xE0096
                 ; 0007 0297         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
0051e2 e1e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
0051e3 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
0051e4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
0051e5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
0051e6 940e c6e5 	CALL SUBOPT_0x104
0051e8 81e1      	LDD  R30,Z+1
0051e9 940e c156 	CALL SUBOPT_0x29
                 ; 0007 0298         return -1;
0051eb efef      	LDI  R30,LOW(65535)
0051ec efff      	LDI  R31,HIGH(65535)
0051ed 8119      	LDD  R17,Y+1
0051ee 8108      	LDD  R16,Y+0
0051ef c1be      	RJMP _0x20E0088
                 ; 0007 0299     }
                 ; 0007 029A 
                 ; 0007 029B     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
0051f0 81aa      	LDD  R26,Y+2
0051f1 81bb      	LDD  R27,Y+2+1
0051f2 91ec      	LD   R30,X
0051f3 e0a8      	LDI  R26,LOW(_config_buzz)
0051f4 e0b5      	LDI  R27,HIGH(_config_buzz)
0051f5 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 029C     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
0051f7 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
0051f8 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
0051f9 81ea      	LDD  R30,Y+2
0051fa 81fb      	LDD  R31,Y+2+1
0051fb 81e1      	LDD  R30,Z+1
0051fc 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 029D 
                 ; 0007 029E     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
0051fe e4eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
0051ff e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
005200 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
005201 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
005202 940e e05b 	CALL __PUTPARD1
005204 e0a8      	LDI  R26,LOW(_config_buzz)
005205 e0b5      	LDI  R27,HIGH(_config_buzz)
005206 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 029F     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
005208 940e c84d 	CALL SUBOPT_0x146
00520a 940e e05b 	CALL __PUTPARD1
00520c 940e c7aa 	CALL SUBOPT_0x126
00520e 940e c156 	CALL SUBOPT_0x29
                 ; 0007 02A0     printDebug("\r\n eventSource       >>");
                +
005210 e6ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
005211 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
005212 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
005213 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
005214 940e c042 	CALL SUBOPT_0x3
                 ; 0007 02A1 
                 ; 0007 02A2     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
005216 e000     +LDI R16 , LOW ( 0 )
005217 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
005218 940e c7aa 	CALL SUBOPT_0x126
00521a 940e c776 	CALL SUBOPT_0x11D
00521c f4cc      	BRGE _0xE0099
                 ; 0007 02A3 
                 ; 0007 02A4         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
00521d 940e c867 	CALL SUBOPT_0x14A
00521f 81ea      	LDD  R30,Y+2
005220 81fb      	LDD  R31,Y+2+1
005221 940e c7be 	CALL SUBOPT_0x12A
005223 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 02A5 
                 ; 0007 02A6         if( config_buzz.eventSource[i] != 0x00 ){
005225 940e c867 	CALL SUBOPT_0x14A
005227 940e e087 	CALL __EEPROMRDB
005229 30e0      	CPI  R30,0
00522a f041      	BREQ _0xE009A
                 ; 0007 02A7             printDebug("[0x%02X]",config_buzz.eventSource[i]);
00522b 940e c7b9 	CALL SUBOPT_0x129
00522d 940e e05b 	CALL __PUTPARD1
00522f 940e c867 	CALL SUBOPT_0x14A
005231 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 02A8         }
                 ; 0007 02A9 
                 ; 0007 02AA     }
                 _0xE009A:
                +
005233 5f0f     +SUBI R16 , LOW ( - 1 )
005234 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005235 cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AB     printDebug("\r\n");
005236 940e c6f4 	CALL SUBOPT_0x107
                 ; 0007 02AC 
                 ; 0007 02AD     config_buzz_flag                    =   0x01;
005238 e7ae      	LDI  R26,LOW(_config_buzz_flag)
005239 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
00523a 940e c7ed 	CALL SUBOPT_0x133
                 ; 0007 02AE 
                 ; 0007 02AF     is_buzzer_config_update             =   1;
00523c 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B0 
                 ; 0007 02B1     return 0;
00523e 940e c5d2 	CALL SUBOPT_0xD6
005240 c16d      	RJMP _0x20E0088
                 ; 0007 02B2 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B5 {
                 _setEnvAlarmConfig:
                 ; 0007 02B6     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
005241 93ba      	ST   -Y,R27
005242 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
005243 81a8      	LD   R26,Y
005244 81b9      	LDD  R27,Y+1
005245 940e e02b 	CALL __GETD1P
005247 e2ad      	LDI  R26,LOW(_config_alm)
005248 e0b5      	LDI  R27,HIGH(_config_alm)
005249 940e e093 	CALL __EEPROMWRD
                 ; 0007 02B7     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
00524b e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
00524c e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
00524d 010f      	MOVW R0,R30
00524e 81a8      	LD   R26,Y
00524f 81b9      	LDD  R27,Y+1
005250 9614      	ADIW R26,4
005251 940e c82a 	CALL SUBOPT_0x140
                 ; 0007 02B8     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
005253 e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
005254 e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
005255 010f      	MOVW R0,R30
005256 81a8      	LD   R26,Y
005257 81b9      	LDD  R27,Y+1
005258 9616      	ADIW R26,6
005259 940e c810 	CALL SUBOPT_0x13B
                 ; 0007 02B9     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
00525b e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
00525c e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
00525d 010f      	MOVW R0,R30
00525e 81a8      	LD   R26,Y
00525f 81b9      	LDD  R27,Y+1
005260 961a      	ADIW R26,10
005261 940e c810 	CALL SUBOPT_0x13B
                 ; 0007 02BA     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
005263 e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
005264 e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
005265 010f      	MOVW R0,R30
005266 81a8      	LD   R26,Y
005267 81b9      	LDD  R27,Y+1
005268 961e      	ADIW R26,14
005269 940e c82a 	CALL SUBOPT_0x140
                 ; 0007 02BB     config_alm.memoryMin                =   newConfig->memoryMin;
                +
00526b e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
00526c e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
00526d 010f      	MOVW R0,R30
00526e 81a8      	LD   R26,Y
00526f 81b9      	LDD  R27,Y+1
005270 9650      	ADIW R26,16
005271 940e c82a 	CALL SUBOPT_0x140
                 ; 0007 02BC 
                 ; 0007 02BD     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
005273 e8e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
005274 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
005275 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
005276 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
005277 940e e05b 	CALL __PUTPARD1
005279 e2ad      	LDI  R26,LOW(_config_alm)
00527a e0b5      	LDI  R27,HIGH(_config_alm)
00527b 940e c86d 	CALL SUBOPT_0x14B
                 ; 0007 02BE     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
00527d e9ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
00527e e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
00527f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
005280 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
005281 940e e05b 	CALL __PUTPARD1
                +
005283 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
005284 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
005285 940e e083 	CALL __EEPROMRDW
005287 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 02BF     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
005289 ebee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
00528a e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
00528b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
00528c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
00528d 940e e05b 	CALL __PUTPARD1
                +
00528f e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
005290 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
005291 940e c86d 	CALL SUBOPT_0x14B
                 ; 0007 02C0     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
005293 edee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
005294 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
005295 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
005296 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
005297 940e e05b 	CALL __PUTPARD1
                +
005299 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
00529a e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
00529b 940e c86d 	CALL SUBOPT_0x14B
                 ; 0007 02C1     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
00529d efeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
00529e e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
00529f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
0052a0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
0052a1 940e e05b 	CALL __PUTPARD1
                +
0052a3 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
0052a4 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
0052a5 940e e083 	CALL __EEPROMRDW
0052a7 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 02C2     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
0052a9 e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
0052aa e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
0052ab e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
0052ac e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
0052ad 940e e05b 	CALL __PUTPARD1
                +
0052af e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
0052b0 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
0052b1 940e e083 	CALL __EEPROMRDW
0052b3 940e c1a4 	CALL SUBOPT_0x34
0052b5 940e c0b8 	CALL SUBOPT_0x12
                 ; 0007 02C3 
                 ; 0007 02C4     config_alm_flag                 = 0x01;
0052b7 e7af      	LDI  R26,LOW(_config_alm_flag)
0052b8 e0b5      	LDI  R27,HIGH(_config_alm_flag)
0052b9 940e c7ed 	CALL SUBOPT_0x133
                 ; 0007 02C5     is_env_config_update            = 1;
0052bb 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C6     return 0;
0052bd c02d      	RJMP _0x20E008A
                 ; 0007 02C7 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CA {
                 _setStatusReportConfig:
                 ; 0007 02CB     config_stat.accm                    =   newConfig->accm;
0052be 93ba      	ST   -Y,R27
0052bf 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
0052c0 81a8      	LD   R26,Y
0052c1 81b9      	LDD  R27,Y+1
0052c2 91ec      	LD   R30,X
0052c3 e3af      	LDI  R26,LOW(_config_stat)
0052c4 e0b5      	LDI  R27,HIGH(_config_stat)
0052c5 940e e0a3 	CALL __EEPROMWRB
                 ; 0007 02CC     config_stat.intv                    =   newConfig->intv;
                +
0052c7 e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
0052c8 e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
0052c9 940e c825 	CALL SUBOPT_0x13F
0052cb 940e c82a 	CALL SUBOPT_0x140
                 ; 0007 02CD 
                 ; 0007 02CE     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
0052cd e3e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
0052ce e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
0052cf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
0052d0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
0052d1 940e e05b 	CALL __PUTPARD1
0052d3 e3af      	LDI  R26,LOW(_config_stat)
0052d4 e0b5      	LDI  R27,HIGH(_config_stat)
0052d5 940e c7f1 	CALL SUBOPT_0x134
                 ; 0007 02CF     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
0052d7 e4ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
0052d8 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
0052d9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
0052da e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
0052db 940e e05b 	CALL __PUTPARD1
                +
0052dd e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
0052de e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
0052df 940e e083 	CALL __EEPROMRDW
0052e1 940e c1a4 	CALL SUBOPT_0x34
0052e3 940e c0b8 	CALL SUBOPT_0x12
                 ; 0007 02D0 
                 ; 0007 02D1     config_stat_flag                    = 0x01;
0052e5 e8a0      	LDI  R26,LOW(_config_stat_flag)
0052e6 e0b5      	LDI  R27,HIGH(_config_stat_flag)
0052e7 940e c7ed 	CALL SUBOPT_0x133
                 ; 0007 02D2     is_status_config_update             = 1;
0052e9 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D3     return 0;
                 _0x20E008A:
0052eb e0e0      	LDI  R30,LOW(0)
0052ec e0f0      	LDI  R31,HIGH(0)
0052ed 9622      	ADIW R28,2
0052ee 9508      	RET
                 ; 0007 02D4 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DC {
                 ; 0007 02DD     int i;
                 ; 0007 02DE 
                 ; 0007 02DF     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E0     config_oper_flag            = 0x00;
                 ; 0007 02E1 
                 ; 0007 02E2     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E3         config_sens_flag[i]     = 0x00;
                 ; 0007 02E4     }
                 ; 0007 02E5 
                 ; 0007 02E6     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E7         config_din_flag[i]      = 0x00;
                 ; 0007 02E8     }
                 ; 0007 02E9 
                 ; 0007 02EA     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EB         config_dout_flag[i]     = 0x00;
                 ; 0007 02EC     }
                 ; 0007 02ED 
                 ; 0007 02EE     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02EF         config_ain_flag[i]      = 0x00;
                 ; 0007 02F0     }
                 ; 0007 02F1 
                 ; 0007 02F2     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F3         config_aout_flag[i]     = 0x00;
                 ; 0007 02F4     }
                 ; 0007 02F5 
                 ; 0007 02F6     config_buzz_flag            = 0x00;
                 ; 0007 02F7     config_alm_flag             = 0x00;
                 ; 0007 02F8     config_stat_flag            = 0x00;
                 ; 0007 02F9 
                 ; 0007 02FA     return 0;
                 ; 0007 02FB }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 02FE {
                 _isDeviceConfig:
                 ; 0007 02FF     int i   = 0;
                 ; 0007 0300 
                 ; 0007 0301     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
0052ef 940e c873 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
0052f1 e4a2      	LDI  R26,LOW(_config_prop_flag)
0052f2 e0b5      	LDI  R27,HIGH(_config_prop_flag)
0052f3 940e e087 	CALL __EEPROMRDB
0052f5 30e0      	CPI  R30,0
0052f6 f4c1      	BRNE _0xE00AB
0052f7 e4a3      	LDI  R26,LOW(_config_oper_flag)
0052f8 e0b5      	LDI  R27,HIGH(_config_oper_flag)
0052f9 940e e087 	CALL __EEPROMRDB
0052fb 30e0      	CPI  R30,0
0052fc f491      	BRNE _0xE00AB
0052fd e7ae      	LDI  R26,LOW(_config_buzz_flag)
0052fe e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0052ff 940e e087 	CALL __EEPROMRDB
005301 30e0      	CPI  R30,0
005302 f461      	BRNE _0xE00AB
005303 e7af      	LDI  R26,LOW(_config_alm_flag)
005304 e0b5      	LDI  R27,HIGH(_config_alm_flag)
005305 940e e087 	CALL __EEPROMRDB
005307 30e0      	CPI  R30,0
005308 f431      	BRNE _0xE00AB
005309 e8a0      	LDI  R26,LOW(_config_stat_flag)
00530a e0b5      	LDI  R27,HIGH(_config_stat_flag)
00530b 940e e087 	CALL __EEPROMRDB
00530d 30e0      	CPI  R30,0
00530e f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0302         return 1;
00530f e0e1      	LDI  R30,LOW(1)
005310 e0f0      	LDI  R31,HIGH(1)
005311 c038      	RJMP _0x20E0089
                 ; 0007 0303     }
                 ; 0007 0304 
                 ; 0007 0305     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
005312 e000     +LDI R16 , LOW ( 0 )
005313 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
005314 3005     +CPI R16 , LOW ( 5 )
005315 e0e0     +LDI R30 , HIGH ( 5 )
005316 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005317 f464      	BRGE _0xE00AF
                 ; 0007 0306         if(config_sens_flag[i]){
005318 e4a4      	LDI  R26,LOW(_config_sens_flag)
005319 e0b5      	LDI  R27,HIGH(_config_sens_flag)
00531a 940e c695 	CALL SUBOPT_0xF8
00531c 30e0      	CPI  R30,0
00531d f019      	BREQ _0xE00B0
                 ; 0007 0307             return 1;
00531e e0e1      	LDI  R30,LOW(1)
00531f e0f0      	LDI  R31,HIGH(1)
005320 c029      	RJMP _0x20E0089
                 ; 0007 0308         }
                 ; 0007 0309     }
                 _0xE00B0:
                +
005321 5f0f     +SUBI R16 , LOW ( - 1 )
005322 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005323 cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030A 
                 ; 0007 030B     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030C     for(i=0;i<2;i++){
                +
005324 e000     +LDI R16 , LOW ( 0 )
005325 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
005326 3002     +CPI R16 , LOW ( 2 )
005327 e0e0     +LDI R30 , HIGH ( 2 )
005328 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005329 f464      	BRGE _0xE00B3
                 ; 0007 030D         if(config_din_flag[i]){
00532a e4a9      	LDI  R26,LOW(_config_din_flag)
00532b e0b5      	LDI  R27,HIGH(_config_din_flag)
00532c 940e c695 	CALL SUBOPT_0xF8
00532e 30e0      	CPI  R30,0
00532f f019      	BREQ _0xE00B4
                 ; 0007 030E             return 1;
005330 e0e1      	LDI  R30,LOW(1)
005331 e0f0      	LDI  R31,HIGH(1)
005332 c017      	RJMP _0x20E0089
                 ; 0007 030F         }
                 ; 0007 0310     }
                 _0xE00B4:
                +
005333 5f0f     +SUBI R16 , LOW ( - 1 )
005334 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005335 cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0311 
                 ; 0007 0312     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0313     for(i=0;i<2;i++){
                +
005336 e000     +LDI R16 , LOW ( 0 )
005337 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
005338 3002     +CPI R16 , LOW ( 2 )
005339 e0e0     +LDI R30 , HIGH ( 2 )
00533a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00533b f464      	BRGE _0xE00B7
                 ; 0007 0314         if(config_dout_flag[i]){
00533c e5a9      	LDI  R26,LOW(_config_dout_flag)
00533d e0b5      	LDI  R27,HIGH(_config_dout_flag)
00533e 940e c695 	CALL SUBOPT_0xF8
005340 30e0      	CPI  R30,0
005341 f019      	BREQ _0xE00B8
                 ; 0007 0315             return 1;
005342 e0e1      	LDI  R30,LOW(1)
005343 e0f0      	LDI  R31,HIGH(1)
005344 c005      	RJMP _0x20E0089
                 ; 0007 0316         }
                 ; 0007 0317     }
                 _0xE00B8:
                +
005345 5f0f     +SUBI R16 , LOW ( - 1 )
005346 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005347 cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 0318     return 0;
005348 e0e0      	LDI  R30,LOW(0)
005349 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
00534a 9109      	LD   R16,Y+
00534b 9119      	LD   R17,Y+
00534c 9508      	RET
                 ; 0007 0319 }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031C {
                 _getAllConfig:
                 ; 0007 031D     int i,err;
                 ; 0007 031E 
                 ; 0007 031F     // -- load configuration -- //
                 ; 0007 0320     getPropertiesConfig(&properties_config);
00534d 940e e0d2 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
00534f 940e c092 	CALL SUBOPT_0xD
                 ; 0007 0321     is_properties_config_update = 0;
                 ; 0007 0322 
                 ; 0007 0323     getOperatingConfig(&operating_config);
005351 940e c09a 	CALL SUBOPT_0xE
                 ; 0007 0324     is_operating_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
005353 e000     +LDI R16 , LOW ( 0 )
005354 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
005355 3005     +CPI R16 , LOW ( 5 )
005356 e0e0     +LDI R30 , HIGH ( 5 )
005357 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005358 f504      	BRGE _0xE00BB
                 ; 0007 0327         err = getSensorConfig(i,&sensor_config[i]);
005359 931a      	ST   -Y,R17
00535a 930a      	ST   -Y,R16
                +
00535b e1ad     +LDI R26 , 29
00535c 9fa0     +MUL R26 , R16
00535d 01f0     +MOVW R30 , R0
00535e 9fa1     +MUL R26 , R17
00535f 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
005360 54e2      	SUBI R30,LOW(-_sensor_config)
005361 4efe      	SBCI R31,HIGH(-_sensor_config)
005362 01df      	MOVW R26,R30
005363 940e 4a13 	CALL _getSensorConfig
005365 019f      	MOVW R18,R30
                 ; 0007 0328         if(err < 0){
005366 2333      	TST  R19
005367 f452      	BRPL _0xE00BC
                 ; 0007 0329             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
005368 e6e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
005369 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
00536a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
00536b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
00536c 940e e05b 	CALL __PUTPARD1
00536e 01f8      	MOVW R30,R16
00536f 940e c64a 	CALL SUBOPT_0xE9
                 ; 0007 032A             continue;
005371 c004      	RJMP _0xE00B9
                 ; 0007 032B         }
                 ; 0007 032C         is_sensor_config_update[i] = 0;
                 _0xE00BC:
005372 efa8      	LDI  R26,LOW(_is_sensor_config_update)
005373 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
005374 940e c878 	CALL SUBOPT_0x14D
                 ; 0007 032D     }
                 _0xE00B9:
                +
005376 5f0f     +SUBI R16 , LOW ( - 1 )
005377 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005378 cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 032E 
                 ; 0007 032F     getBuzzerConfig(&buzz_config);
005379 940e c0c2 	CALL SUBOPT_0x14
                 ; 0007 0330     is_buzzer_config_update = 0;
                 ; 0007 0331 
                 ; 0007 0332     for(i=0;i<USE_DIN;i++){
                +
00537b e000     +LDI R16 , LOW ( 0 )
00537c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
00537d 3002     +CPI R16 , LOW ( 2 )
00537e e0e0     +LDI R30 , HIGH ( 2 )
00537f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005380 f49c      	BRGE _0xE00BF
                 ; 0007 0333         getAuxDinConfig(i,&din_config[i]);
005381 931a      	ST   -Y,R17
005382 930a      	ST   -Y,R16
                +
005383 e0a3     +LDI R26 , 3
005384 9fa0     +MUL R26 , R16
005385 01f0     +MOVW R30 , R0
005386 9fa1     +MUL R26 , R17
005387 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
005388 5be1      	SUBI R30,LOW(-_din_config)
005389 4efd      	SBCI R31,HIGH(-_din_config)
00538a 01df      	MOVW R26,R30
00538b 940e 4afb 	CALL _getAuxDinConfig
                 ; 0007 0334         is_din_config_update[i] = 0;
00538d efad      	LDI  R26,LOW(_is_din_config_update)
00538e e1b0      	LDI  R27,HIGH(_is_din_config_update)
00538f 940e c878 	CALL SUBOPT_0x14D
                 ; 0007 0335     }
                +
005391 5f0f     +SUBI R16 , LOW ( - 1 )
005392 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005393 cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0336 
                 ; 0007 0337     for(i=0;i<USE_DOUT;i++){
                +
005394 e000     +LDI R16 , LOW ( 0 )
005395 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
005396 3002     +CPI R16 , LOW ( 2 )
005397 e0e0     +LDI R30 , HIGH ( 2 )
005398 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005399 f474      	BRGE _0xE00C2
                 ; 0007 0338         getAuxDoutConfig(i,&dout_config[i]);
00539a 931a      	ST   -Y,R17
00539b 930a      	ST   -Y,R16
                +
00539c e2a6     +LDI R26 , 38
00539d 9fa0     +MUL R26 , R16
00539e 01f0     +MOVW R30 , R0
00539f 9fa1     +MUL R26 , R17
0053a0 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
0053a1 940e c0d2 	CALL SUBOPT_0x16
                 ; 0007 0339         is_dout_config_update[i] = 0;
0053a3 940e c878 	CALL SUBOPT_0x14D
                 ; 0007 033A     }
                +
0053a5 5f0f     +SUBI R16 , LOW ( - 1 )
0053a6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053a7 cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033B 
                 ; 0007 033C     getStatusReportConfig(&status_config);
0053a8 940e c0da 	CALL SUBOPT_0x17
                 ; 0007 033D     is_status_config_update = 0;
                 ; 0007 033E 
                 ; 0007 033F     getEnvAlarmConfig(&env_config);
0053aa 940e c0e2 	CALL SUBOPT_0x18
                 ; 0007 0340     is_env_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     return 0;
0053ac 940e c87d 	CALL SUBOPT_0x14E
                 _0x20E0088:
0053ae 9624      	ADIW R28,4
0053af 9508      	RET
                 ; 0007 0343 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
0053b0 93aa      	ST   -Y,R26
0053b1 940e c882 	CALL SUBOPT_0x14F
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0053b3 eeeb      	LDI  R30,LOW(235)
0053b4 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053b5 e020     +LDI R18 , LOW ( 0 )
0053b6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
0053b7 3028     +CPI R18 , LOW ( 8 )
0053b8 e0e0     +LDI R30 , HIGH ( 8 )
0053b9 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053ba f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
0053bb 940e c891 	CALL SUBOPT_0x150
0053bd 940e c899 	CALL SUBOPT_0x151
                 ; 0009 0020     }
                +
0053bf 5f2f     +SUBI R18 , LOW ( - 1 )
0053c0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053c1 cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
0053c2 940e c891 	CALL SUBOPT_0x150
0053c4 85ae      	LDD  R26,Y+14
0053c5 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
0053c6 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
0053c7 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
0053c8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
0053c9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
0053ca 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
0053cc 940e c8a3 	CALL SUBOPT_0x152
0053ce 89eb      	LDD  R30,Y+19
0053cf 93ea      	ST   -Y,R30
0053d0 940e c68a 	CALL SUBOPT_0xF5
0053d2 940e c8aa 	CALL SUBOPT_0x153
                 ; 0009 0027 
                 ; 0009 0028     return 0;
0053d4 c1a1      	RJMP _0x20E0085
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
0053d5 93aa      	ST   -Y,R26
0053d6 972f      	SBIW R28,15
0053d7 940e c8ad 	CALL SUBOPT_0x154
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0053d9 e1eb      	LDI  R30,LOW(27)
0053da 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053db e020     +LDI R18 , LOW ( 0 )
0053dc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
0053dd 3028     +CPI R18 , LOW ( 8 )
0053de e0e0     +LDI R30 , HIGH ( 8 )
0053df 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053e0 f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
0053e1 940e c891 	CALL SUBOPT_0x150
0053e3 940e c899 	CALL SUBOPT_0x151
                 ; 0009 0034     }
                +
0053e5 5f2f     +SUBI R18 , LOW ( - 1 )
0053e6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053e7 cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
0053e8 940e c891 	CALL SUBOPT_0x150
0053ea 89ac      	LDD  R26,Y+20
0053eb 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
0053ec 940e c891 	CALL SUBOPT_0x150
0053ee 89ab      	LDD  R26,Y+19
0053ef 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
0053f0 eae1     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
0053f1 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
0053f2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
0053f3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
0053f4 940e c042 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
0053f6 940e c8a3 	CALL SUBOPT_0x152
0053f8 8de9      	LDD  R30,Y+25
0053f9 93ea      	ST   -Y,R30
0053fa 940e c68a 	CALL SUBOPT_0xF5
0053fc 940e c8aa 	CALL SUBOPT_0x153
                 ; 0009 003D 
                 ; 0009 003E     return 0;
0053fe 9666      	ADIW R28,22
0053ff 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
005400 93ba      	ST   -Y,R27
005401 93aa      	ST   -Y,R26
005402 9722      	SBIW R28,2
005403 940e c1b2 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
005405 940e c8bb 	CALL SUBOPT_0x155
                 ; 0009 0049     if(frameLen > 250){
005407 f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
005408 ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
005409 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
00540a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
00540b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
00540c 940e c238 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
00540e efef      	LDI  R30,LOW(65535)
00540f efff      	LDI  R31,HIGH(65535)
005410 c03a      	RJMP _0x20E0087
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
005411 940e c8c3 	CALL SUBOPT_0x156
                 ; 0009 004F     if(frameData == NULL){
005413 f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
005414 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
005415 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
005416 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
005417 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
005418 940e c238 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
00541a efef      	LDI  R30,LOW(65535)
00541b efff      	LDI  R31,HIGH(65535)
00541c c02e      	RJMP _0x20E0087
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
00541d 940e c8ca 	CALL SUBOPT_0x157
00541f 0fae      	ADD  R26,R30
005420 1fbf      	ADC  R27,R31
005421 e2ea      	LDI  R30,LOW(42)
005422 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005423 e020     +LDI R18 , LOW ( 0 )
005424 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
005425 3028     +CPI R18 , LOW ( 8 )
005426 e0e0     +LDI R30 , HIGH ( 8 )
005427 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005428 f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
005429 940e c8ca 	CALL SUBOPT_0x157
00542b 940e c8d0 	CALL SUBOPT_0x158
                 ; 0009 0058     }
                +
00542d 5f2f     +SUBI R18 , LOW ( - 1 )
00542e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00542f cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005430 940e c8d3 	CALL SUBOPT_0x159
005432 01fe      	MOVW R30,R28
005433 963f      	ADIW R30,15
005434 940e c252 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
005436 5f0c     +SUBI R16 , LOW ( - 4 )
005437 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
005438 940e c8ca 	CALL SUBOPT_0x157
00543a 0fea      	ADD  R30,R26
00543b 1ffb      	ADC  R31,R27
00543c 85ac      	LDD  R26,Y+12
00543d 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
00543e 940e c8d3 	CALL SUBOPT_0x159
005440 940e c8d8 	CALL SUBOPT_0x15A
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
005442 940e c8e5 	CALL SUBOPT_0x15B
005444 931a      	ST   -Y,R17
005445 930a      	ST   -Y,R16
005446 e0e0      	LDI  R30,LOW(0)
005447 940e c8ea 	CALL SUBOPT_0x15C
                 ; 0009 0063     free( frameData );
005449 940e c8ef 	CALL SUBOPT_0x15D
                 ; 0009 0064 }
                 _0x20E0087:
00544b 940e e0d7 	CALL __LOADLOCR6
00544d 9661      	ADIW R28,17
00544e 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
00544f 93aa      	ST   -Y,R26
005450 9761      	SBIW R28,17
005451 940e c1b2 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
005453 8dad      	LDD  R26,Y+29
005454 30a0      	CPI  R26,LOW(0x0)
005455 f021      	BREQ _0x12000F
005456 30a1      	CPI  R26,LOW(0x1)
005457 f011      	BREQ _0x12000F
005458 30a2      	CPI  R26,LOW(0x2)
005459 f409      	BRNE _0x120010
                 _0x12000F:
00545a c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
00545b e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
00545c e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
00545d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
00545e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
00545f 940e e05b 	CALL __PUTPARD1
005461 a1e9      	LDD  R30,Y+33
005462 940e c156 	CALL SUBOPT_0x29
                 ; 0009 006F         return -1;
005464 efef      	LDI  R30,LOW(65535)
005465 efff      	LDI  R31,HIGH(65535)
005466 c078      	RJMP _0x20E0086
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
005467 940e c8f3 	CALL SUBOPT_0x15E
005469 0fae      	ADD  R26,R30
00546a 1fbf      	ADC  R27,R31
00546b e3ea      	LDI  R30,LOW(58)
00546c 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00546d e020     +LDI R18 , LOW ( 0 )
00546e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
00546f 3028     +CPI R18 , LOW ( 8 )
005470 e0e0     +LDI R30 , HIGH ( 8 )
005471 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005472 f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
005473 940e c8f3 	CALL SUBOPT_0x15E
005475 940e c8d0 	CALL SUBOPT_0x158
                 ; 0009 0076     }
                +
005477 5f2f     +SUBI R18 , LOW ( - 1 )
005478 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005479 cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
00547a 01f8      	MOVW R30,R16
00547b 01de      	MOVW R26,R28
00547c 9616      	ADIW R26,6
00547d 940e c107 	CALL SUBOPT_0x1D
00547f 01fe      	MOVW R30,R28
005480 967b      	ADIW R30,27
005481 940e c252 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
005483 5f0c     +SUBI R16 , LOW ( - 4 )
005484 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
005485 940e c8f3 	CALL SUBOPT_0x15E
005487 0fea      	ADD  R30,R26
005488 1ffb      	ADC  R31,R27
005489 8dad      	LDD  R26,Y+29
00548a 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
00548b 940e c8f3 	CALL SUBOPT_0x15E
00548d 0fea      	ADD  R30,R26
00548e 1ffb      	ADC  R31,R27
00548f 8da8      	LDD  R26,Y+24
005490 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
005491 940e c8f3 	CALL SUBOPT_0x15E
005493 0fea      	ADD  R30,R26
005494 1ffb      	ADC  R31,R27
005495 89af      	LDD  R26,Y+23
005496 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
005497 940e 6a99 	CALL _ETH_generateId
005499 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
00549a 8ded      	LDD  R30,Y+29
00549b 30e0      	CPI  R30,0
00549c f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
00549d 89ee      	LDD  R30,Y+22
00549e 93ea      	ST   -Y,R30
00549f 940e c5b9 	CALL SUBOPT_0xD1
0054a1 940e e05b 	CALL __PUTPARD1
0054a3 8ded      	LDD  R30,Y+29
0054a4 93ea      	ST   -Y,R30
0054a5 8dad      	LDD  R26,Y+29
0054a6 940e 86cd 	CALL _addEventLogQueue
0054a8 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
0054a9 2355      	TST  R21
0054aa f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
0054ab e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
0054ac e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
0054ad e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
0054ae e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
0054af 940e e05b 	CALL __PUTPARD1
0054b1 8dea      	LDD  R30,Y+26
0054b2 940e c2f3 	CALL SUBOPT_0x65
0054b4 940e c8f9 	CALL SUBOPT_0x15F
0054b6 a1ec      	LDD  R30,Y+36
0054b7 940e c2f3 	CALL SUBOPT_0x65
0054b9 a1ef      	LDD  R30,Y+39
0054ba 940e c2f3 	CALL SUBOPT_0x65
0054bc 940e c900 	CALL SUBOPT_0x160
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
0054be c006      	RJMP _0x120016
                 _0x120014:
0054bf 8dad      	LDD  R26,Y+29
0054c0 30a1      	CPI  R26,LOW(0x1)
0054c1 f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
0054c2 89ee      	LDD  R30,Y+22
0054c3 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
0054c5 ebe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
0054c6 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
0054c7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
0054c8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
0054c9 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
0054cb 940e c28d 	CALL SUBOPT_0x56
0054cd 01d8      	MOVW R26,R16
0054ce 940e 9ea8 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
0054d0 940e c28d 	CALL SUBOPT_0x56
0054d2 931a      	ST   -Y,R17
0054d3 930a      	ST   -Y,R16
0054d4 8dea      	LDD  R30,Y+26
0054d5 940e c8ea 	CALL SUBOPT_0x15C
0054d7 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
0054d8 2355      	TST  R21
0054d9 f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
0054da efef      	LDI  R30,LOW(65535)
0054db efff      	LDI  R31,HIGH(65535)
0054dc c002      	RJMP _0x20E0086
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
0054dd e0e0      	LDI  R30,LOW(0)
0054de e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E0086:
0054df 940e e0d7 	CALL __LOADLOCR6
0054e1 966e      	ADIW R28,30
0054e2 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
0054e3 93aa      	ST   -Y,R26
0054e4 972c      	SBIW R28,12
0054e5 940e c8ad 	CALL SUBOPT_0x154
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054e7 e4eb      	LDI  R30,LOW(75)
0054e8 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054e9 e020     +LDI R18 , LOW ( 0 )
0054ea e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
0054eb 3028     +CPI R18 , LOW ( 8 )
0054ec e0e0     +LDI R30 , HIGH ( 8 )
0054ed 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054ee f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
0054ef 940e c891 	CALL SUBOPT_0x150
0054f1 940e c899 	CALL SUBOPT_0x151
                 ; 0009 00A4     }
                +
0054f3 5f2f     +SUBI R18 , LOW ( - 1 )
0054f4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054f5 cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
0054f6 940e c891 	CALL SUBOPT_0x150
0054f8 89aa      	LDD  R26,Y+18
0054f9 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
0054fa 940e c891 	CALL SUBOPT_0x150
0054fc 89a9      	LDD  R26,Y+17
0054fd 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
0054fe 940e c891 	CALL SUBOPT_0x150
005500 89a8      	LDD  R26,Y+16
005501 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
005502 edea     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
005503 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
005504 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
005505 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
005506 940e c042 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
005508 940e c8a3 	CALL SUBOPT_0x152
00550a 89ef      	LDD  R30,Y+23
00550b 93ea      	ST   -Y,R30
00550c 940e c68a 	CALL SUBOPT_0xF5
00550e 940e c8aa 	CALL SUBOPT_0x153
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
005510 9664      	ADIW R28,20
005511 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
005512 93ba      	ST   -Y,R27
005513 93aa      	ST   -Y,R26
005514 9722      	SBIW R28,2
005515 940e c1b2 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
005517 940e c8bb 	CALL SUBOPT_0x155
                 ; 0009 00BA     if(frameLen > 250){
005519 f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
00551a e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
00551b e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
00551c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
00551d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
00551e 940e c238 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
005520 940e c905 	CALL SUBOPT_0x161
                 ; 0009 00BD         return -1;
005522 c051      	RJMP _0x20E0084
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
005523 940e c8c3 	CALL SUBOPT_0x156
                 ; 0009 00C1     if(frameData == NULL){
005525 f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
005526 e3ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
005527 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
005528 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
005529 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
00552a 940e c238 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
00552c 940e c905 	CALL SUBOPT_0x161
                 ; 0009 00C4         return -1;
00552e c045      	RJMP _0x20E0084
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
00552f 940e c8ca 	CALL SUBOPT_0x157
005531 0fae      	ADD  R26,R30
005532 1fbf      	ADC  R27,R31
005533 e4eb      	LDI  R30,LOW(75)
005534 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005535 e020     +LDI R18 , LOW ( 0 )
005536 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
005537 3028     +CPI R18 , LOW ( 8 )
005538 e0e0     +LDI R30 , HIGH ( 8 )
005539 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00553a f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
00553b 940e c8ca 	CALL SUBOPT_0x157
00553d 940e c8d0 	CALL SUBOPT_0x158
                 ; 0009 00CB     }
                +
00553f 5f2f     +SUBI R18 , LOW ( - 1 )
005540 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005541 cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
005542 940e c8ca 	CALL SUBOPT_0x157
005544 0fea      	ADD  R30,R26
005545 1ffb      	ADC  R31,R27
005546 85ae      	LDD  R26,Y+14
005547 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
005548 940e c8ca 	CALL SUBOPT_0x157
00554a 0fea      	ADD  R30,R26
00554b 1ffb      	ADC  R31,R27
00554c 85ad      	LDD  R26,Y+13
00554d 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
00554e 940e c8ca 	CALL SUBOPT_0x157
005550 0fea      	ADD  R30,R26
005551 1ffb      	ADC  R31,R27
005552 85ac      	LDD  R26,Y+12
005553 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
005554 85a8      	LDD  R26,Y+8
005555 85b9      	LDD  R27,Y+8+1
005556 940e e0b8 	CALL __CPW02
005558 f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
005559 940e c8d3 	CALL SUBOPT_0x159
00555b 940e c8d8 	CALL SUBOPT_0x15A
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
00555d e6ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
00555e e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
00555f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
005560 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
005561 940e c042 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
005563 940e c8e5 	CALL SUBOPT_0x15B
005565 01d8      	MOVW R26,R16
005566 940e c911 	CALL SUBOPT_0x162
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
005568 931a      	ST   -Y,R17
005569 930a      	ST   -Y,R16
00556a 89eb      	LDD  R30,Y+19
00556b 93ea      	ST   -Y,R30
00556c 940e c68a 	CALL SUBOPT_0xF5
00556e 940e 5db9 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
005570 940e c8ef 	CALL SUBOPT_0x15D
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
005572 e0e0      	LDI  R30,LOW(0)
005573 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0084:
005574 940e e0d7 	CALL __LOADLOCR6
                 _0x20E0085:
005576 9660      	ADIW R28,16
005577 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
005578 940e e060 	CALL __PUTPARD2
00557a 9764      	SBIW R28,20
00557b e0e0      	LDI  R30,LOW(0)
00557c 83e8      	ST   Y,R30
00557d 940e c1b2 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
00557f a1ac      	LDD  R26,Y+36
005580 30a0      	CPI  R26,LOW(0x0)
005581 f021      	BREQ _0x120024
005582 30a1      	CPI  R26,LOW(0x1)
005583 f011      	BREQ _0x120024
005584 30a2      	CPI  R26,LOW(0x2)
005585 f409      	BRNE _0x120025
                 _0x120024:
005586 c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
005587 e9e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
005588 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
005589 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
00558a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
00558b 940e e05b 	CALL __PUTPARD1
00558d a5e8      	LDD  R30,Y+40
00558e 940e c156 	CALL SUBOPT_0x29
                 ; 0009 00E9         return -1;
005590 efef      	LDI  R30,LOW(65535)
005591 efff      	LDI  R31,HIGH(65535)
005592 c087      	RJMP _0x20E0083
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
005593 8dae      	LDD  R26,Y+30
005594 5faf      	SUBI R26,-LOW(1)
005595 2fea      	MOV  R30,R26
005596 95e2      	SWAP R30
005597 7fe0      	ANDI R30,0xF0
005598 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
005599 a1ec      	LDD  R30,Y+36
00559a 81ae      	LDD  R26,Y+6
00559b 2bea      	OR   R30,R26
00559c 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
00559d 940e c914 	CALL SUBOPT_0x163
00559f 0fae      	ADD  R26,R30
0055a0 1fbf      	ADC  R27,R31
0055a1 e5ea      	LDI  R30,LOW(90)
0055a2 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0055a3 e020     +LDI R18 , LOW ( 0 )
0055a4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
0055a5 3028     +CPI R18 , LOW ( 8 )
0055a6 e0e0     +LDI R30 , HIGH ( 8 )
0055a7 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0055a8 f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
0055a9 940e c914 	CALL SUBOPT_0x163
0055ab 940e c8d0 	CALL SUBOPT_0x158
                 ; 0009 00F3     }
                +
0055ad 5f2f     +SUBI R18 , LOW ( - 1 )
0055ae 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0055af cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0055b0 01f8      	MOVW R30,R16
0055b1 01de      	MOVW R26,R28
0055b2 9617      	ADIW R26,7
0055b3 940e c107 	CALL SUBOPT_0x1D
0055b5 01fe      	MOVW R30,R28
0055b6 96b2      	ADIW R30,34
0055b7 940e c252 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
0055b9 5f0c     +SUBI R16 , LOW ( - 4 )
0055ba 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
0055bb 940e c914 	CALL SUBOPT_0x163
0055bd 0fea      	ADD  R30,R26
0055be 1ffb      	ADC  R31,R27
0055bf 81ae      	LDD  R26,Y+6
0055c0 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
0055c1 01f8      	MOVW R30,R16
0055c2 01de      	MOVW R26,R28
0055c3 9617      	ADIW R26,7
0055c4 940e c107 	CALL SUBOPT_0x1D
0055c6 01fe      	MOVW R30,R28
0055c7 967c      	ADIW R30,28
0055c8 940e c252 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
0055ca 5f0c     +SUBI R16 , LOW ( - 4 )
0055cb 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
0055cc 940e 6a99 	CALL _ETH_generateId
0055ce 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
0055cf a1ec      	LDD  R30,Y+36
0055d0 30e0      	CPI  R30,0
0055d1 f569      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
0055d2 8de9      	LDD  R30,Y+25
0055d3 93ea      	ST   -Y,R30
0055d4 940e c8f9 	CALL SUBOPT_0x15F
0055d6 a1eb      	LDD  R30,Y+35
0055d7 a1fc      	LDD  R31,Y+35+1
0055d8 93fa      	ST   -Y,R31
0055d9 93ea      	ST   -Y,R30
                +
0055da a1a9     +LDD R26 , Y + 33
0055db a1ba     +LDD R27 , Y + 33 + 1
0055dc a18b     +LDD R24 , Y + 33 + 2
0055dd a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
0055de 940e 85ff 	CALL _addDataLogQueue
0055e0 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
0055e1 2355      	TST  R21
0055e2 f4da      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
0055e3 ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
0055e4 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
0055e5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
0055e6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
0055e7 940e e05b 	CALL __PUTPARD1
0055e9 8ded      	LDD  R30,Y+29
0055ea 940e c2f3 	CALL SUBOPT_0x65
                +
0055ec a5e8     +LDD R30 , Y + 40
0055ed a5f9     +LDD R31 , Y + 40 + 1
0055ee a56a     +LDD R22 , Y + 40 + 2
0055ef a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
0055f0 940e e05b 	CALL __PUTPARD1
0055f2 a5ea      	LDD  R30,Y+42
0055f3 a5fb      	LDD  R31,Y+42+1
0055f4 940e c1a4 	CALL SUBOPT_0x34
                +
0055f6 a5ea     +LDD R30 , Y + 42
0055f7 a5fb     +LDD R31 , Y + 42 + 1
0055f8 a56c     +LDD R22 , Y + 42 + 2
0055f9 a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
0055fa 940e e05b 	CALL __PUTPARD1
0055fc 940e c900 	CALL SUBOPT_0x160
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
0055fe c006      	RJMP _0x12002B
                 _0x120029:
0055ff a1ac      	LDD  R26,Y+36
005600 30a1      	CPI  R26,LOW(0x1)
005601 f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
005602 8de9      	LDD  R30,Y+25
005603 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
005605 e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
005606 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
005607 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
005608 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
005609 940e c042 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
00560b 940e c2e7 	CALL SUBOPT_0x63
00560d 931a      	ST   -Y,R17
00560e 930a      	ST   -Y,R16
00560f 8ded      	LDD  R30,Y+29
005610 940e c8ea 	CALL SUBOPT_0x15C
005612 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
005613 2355      	TST  R21
005614 f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
005615 efef      	LDI  R30,LOW(65535)
005616 efff      	LDI  R31,HIGH(65535)
005617 c002      	RJMP _0x20E0083
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
005618 e0e0      	LDI  R30,LOW(0)
005619 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E0083:
00561a 940e e0d7 	CALL __LOADLOCR6
00561c 96a5      	ADIW R28,37
00561d 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
00561e 940e c91a 	CALL SUBOPT_0x164
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005620 e6eb      	LDI  R30,LOW(107)
005621 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005622 e020     +LDI R18 , LOW ( 0 )
005623 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
005624 3028     +CPI R18 , LOW ( 8 )
005625 e0e0     +LDI R30 , HIGH ( 8 )
005626 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005627 f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
005628 940e c891 	CALL SUBOPT_0x150
00562a 940e c899 	CALL SUBOPT_0x151
                 ; 0009 0121     }
                +
00562c 5f2f     +SUBI R18 , LOW ( - 1 )
00562d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00562e cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
00562f 940e c891 	CALL SUBOPT_0x150
005631 940e c91d 	CALL SUBOPT_0x165
                 ; 0009 0124     frameData[i++]      = status;
005633 85af      	LDD  R26,Y+15
005634 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
005635 e2ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
005636 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
005637 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
005638 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
005639 c037      	RJMP _0x20E0082
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
00563a 940e c91a 	CALL SUBOPT_0x164
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00563c e7eb      	LDI  R30,LOW(123)
00563d 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00563e e020     +LDI R18 , LOW ( 0 )
00563f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
005640 3028     +CPI R18 , LOW ( 8 )
005641 e0e0     +LDI R30 , HIGH ( 8 )
005642 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005643 f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
005644 940e c891 	CALL SUBOPT_0x150
005646 940e c899 	CALL SUBOPT_0x151
                 ; 0009 0136     }
                +
005648 5f2f     +SUBI R18 , LOW ( - 1 )
005649 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00564a cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
00564b 940e c891 	CALL SUBOPT_0x150
00564d 940e c91d 	CALL SUBOPT_0x165
                 ; 0009 0139     frameData[i++]      = status;
00564f 85af      	LDD  R26,Y+15
005650 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
005651 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
005652 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
005653 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
005654 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
005655 c01b      	RJMP _0x20E0082
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
005656 940e c91a 	CALL SUBOPT_0x164
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005658 e8eb      	LDI  R30,LOW(139)
005659 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00565a e020     +LDI R18 , LOW ( 0 )
00565b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
00565c 3028     +CPI R18 , LOW ( 8 )
00565d e0e0     +LDI R30 , HIGH ( 8 )
00565e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00565f f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
005660 940e c891 	CALL SUBOPT_0x150
005662 940e c899 	CALL SUBOPT_0x151
                 ; 0009 014A     }
                +
005664 5f2f     +SUBI R18 , LOW ( - 1 )
005665 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005666 cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
005667 940e c891 	CALL SUBOPT_0x150
005669 940e c91d 	CALL SUBOPT_0x165
                 ; 0009 014D     frameData[i++]      = status;
00566b 85af      	LDD  R26,Y+15
00566c 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
00566d e8e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
00566e e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
00566f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
005670 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E0082:
005671 940e e05b 	CALL __PUTPARD1
005673 940e c1ad 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
005675 940e c8a3 	CALL SUBOPT_0x152
005677 89ed      	LDD  R30,Y+21
005678 93ea      	ST   -Y,R30
005679 940e c68a 	CALL SUBOPT_0xF5
00567b 940e c8aa 	CALL SUBOPT_0x153
                 ; 0009 0151 
                 ; 0009 0152     return 0;
00567d 9662      	ADIW R28,18
00567e 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
00567f 940e c882 	CALL SUBOPT_0x14F
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005681 e9ea      	LDI  R30,LOW(154)
005682 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005683 e020     +LDI R18 , LOW ( 0 )
005684 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
005685 3028     +CPI R18 , LOW ( 8 )
005686 e0e0     +LDI R30 , HIGH ( 8 )
005687 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005688 f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
005689 940e c891 	CALL SUBOPT_0x150
00568b 940e c899 	CALL SUBOPT_0x151
                 ; 0009 015E     }
                +
00568d 5f2f     +SUBI R18 , LOW ( - 1 )
00568e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00568f cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
005690 01f8      	MOVW R30,R16
                +
005691 5f0f     +SUBI R16 , LOW ( - 1 )
005692 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005693 940e c920 	CALL SUBOPT_0x166
005695 e0e1      	LDI  R30,LOW(1)
005696 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
005697 eaec     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
005698 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
005699 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
00569a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
00569b 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
00569d 940e c8a3 	CALL SUBOPT_0x152
00569f efef      	LDI  R30,LOW(255)
0056a0 93ea      	ST   -Y,R30
0056a1 940e c68a 	CALL SUBOPT_0xF5
0056a3 940e c8aa 	CALL SUBOPT_0x153
                 ; 0009 0164 
                 ; 0009 0165     return 0;
0056a5 962e      	ADIW R28,14
0056a6 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
0056a7 93aa      	ST   -Y,R26
0056a8 97a8      	SBIW R28,40
0056a9 50d2      	SUBI R29,2
0056aa 940e e0d0 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
0056ac 940e c925 	CALL SUBOPT_0x167
0056ae b7ed      	IN   R30,SPL
0056af b7fe      	IN   R31,SPH
0056b0 9731      	SBIW R30,1
0056b1 93fa      	ST   -Y,R31
0056b2 93ea      	ST   -Y,R30
0056b3 933f      	PUSH R19
0056b4 932f      	PUSH R18
0056b5 01de      	MOVW R26,R28
0056b6 961b      	ADIW R26,11
0056b7 940e 864b 	CALL _readDataLogQueue
0056b9 912f      	POP  R18
0056ba 913f      	POP  R19
0056bb 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
0056bc efef      	LDI  R30,LOW(65535)
0056bd efff      	LDI  R31,HIGH(65535)
0056be 17e0      	CP   R30,R16
0056bf 07f1      	CPC  R31,R17
0056c0 f411      	BRNE PC+3
0056c1 940c 570d 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
0056c3 940e c322 	CALL SUBOPT_0x6D
0056c5 f039      	BREQ _0x12003D
0056c6 940e c27d 	CALL SUBOPT_0x53
0056c8 f021      	BREQ _0x12003D
                +
0056c9 3025     +CPI R18 , LOW ( 5 )
0056ca e0e0     +LDI R30 , HIGH ( 5 )
0056cb 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0056cc f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
0056cd ede7     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
0056ce e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
0056cf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
0056d0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
0056d1 c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
0056d2 e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
0056d3 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
0056d4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
0056d5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
0056d6 940e c264 	CALL SUBOPT_0x50
0056d8 01f9      	MOVW R30,R18
0056d9 940e c1a4 	CALL SUBOPT_0x34
0056db 940e c26d 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
0056dd 940e c92b 	CALL SUBOPT_0x168
0056df 940e c2c1 	CALL SUBOPT_0x5E
0056e1 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
0056e2 2311      	TST  R17
0056e3 f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
0056e4 e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
0056e5 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
0056e6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
0056e7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
0056e8 940e c2cc 	CALL SUBOPT_0x5F
0056ea 940e c0b8 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
0056ec c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
0056ed 940e c92b 	CALL SUBOPT_0x168
0056ef 940e c930 	CALL SUBOPT_0x169
0056f1 933a      	ST   -Y,R19
0056f2 932a      	ST   -Y,R18
0056f3 940e c2d6 	CALL SUBOPT_0x61
0056f5 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
0056f6 2311      	TST  R17
0056f7 f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0056f8 940e c934 	CALL SUBOPT_0x16A
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
0056fa 940e c93a 	CALL SUBOPT_0x16B
                 ; 0009 018C                 if(res < 0)
0056fc f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0056fd 940e c947 	CALL SUBOPT_0x16C
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
0056ff eeea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
005700 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
005701 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
005702 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
005703 940e e05b 	CALL __PUTPARD1
005705 940e c1ad 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
005707 01de     +MOVW R26 , R28
005708 5da2     +SUBI R26 , LOW ( - 558 )
005709 4fbd     +SBCI R27 , HIGH ( - 558 )
00570a 91ac     +LD R26 , X
                 	__GETB2SX 558
00570b 940e 868c 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
00570d 940e c925 	CALL SUBOPT_0x167
00570f b7ed      	IN   R30,SPL
005710 b7fe      	IN   R31,SPH
005711 93fa      	ST   -Y,R31
005712 93ea      	ST   -Y,R30
005713 935f      	PUSH R21
005714 b7ad      	IN   R26,SPL
005715 b7be      	IN   R27,SPH
005716 934f      	PUSH R20
005717 940e 870e 	CALL _readEventLogQueue
005719 914f      	POP  R20
00571a 915f      	POP  R21
00571b 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
00571c efef      	LDI  R30,LOW(65535)
00571d efff      	LDI  R31,HIGH(65535)
00571e 17e0      	CP   R30,R16
00571f 07f1      	CPC  R31,R17
005720 f411      	BRNE PC+3
005721 940c 5766 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
005723 940e c322 	CALL SUBOPT_0x6D
005725 f019      	BREQ _0x120046
005726 940e c27d 	CALL SUBOPT_0x53
005728 f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
005729 e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
00572a e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
00572b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
00572c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
00572d c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
00572e 940e c92b 	CALL SUBOPT_0x168
005730 940e c308 	CALL SUBOPT_0x69
005732 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
005733 2311      	TST  R17
005734 f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
005735 e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
005736 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005737 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
005738 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
005739 940e c313 	CALL SUBOPT_0x6A
00573b 940e c0b8 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
00573d c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
00573e e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
00573f e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
005740 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
005741 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
005742 940e c264 	CALL SUBOPT_0x50
005744 940e c299 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
005746 940e c92b 	CALL SUBOPT_0x168
005748 940e c930 	CALL SUBOPT_0x169
00574a 935a      	ST   -Y,R21
00574b 2fa4      	MOV  R26,R20
00574c 940e 8359 	CALL _LOG_insertEvent
00574e 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
00574f 2311      	TST  R17
005750 f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
005751 940e c934 	CALL SUBOPT_0x16A
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
005753 940e c93a 	CALL SUBOPT_0x16B
                 ; 0009 01B3                 if(res < 0)
005755 f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
005756 940e c947 	CALL SUBOPT_0x16C
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
005758 e9e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
005759 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
00575a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
00575b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
00575c 940e e05b 	CALL __PUTPARD1
00575e 940e c1ad 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
005760 01de     +MOVW R26 , R28
005761 5da2     +SUBI R26 , LOW ( - 558 )
005762 4fbd     +SBCI R27 , HIGH ( - 558 )
005763 91ac     +LD R26 , X
                 	__GETB2SX 558
005764 940e 8753 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
005766 940e e0d7 	CALL __LOADLOCR6
005768 96af      	ADIW R28,47
005769 5fde      	SUBI R29,-2
00576a 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
00576b 940e c873 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
                 _0x12004E:
                +
00576d 300f     +CPI R16 , LOW ( 15 )
00576e e0e0     +LDI R30 , HIGH ( 15 )
00576f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
005770 f014      	BRLT PC+3
005771 940c 581f 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
005773 940e c94d 	CALL SUBOPT_0x16D
                +
005775 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
005776 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
005777 01df      	MOVW R26,R30
005778 940e e02b 	CALL __GETD1P
00577a 940e c101 	CALL SUBOPT_0x1C
00577c f039      	BREQ _0x120051
00577d 940e c94d 	CALL SUBOPT_0x16D
                +
00577f 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005780 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005781 81a0      	LD   R26,Z
005782 30a0      	CPI  R26,LOW(0x0)
005783 f409      	BRNE _0x120052
                 _0x120051:
005784 c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
005785 940e c94d 	CALL SUBOPT_0x16D
005787 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005788 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005789 81a0      	LD   R26,Z
00578a 30a3      	CPI  R26,LOW(0x3)
00578b f410      	BRSH PC+3
00578c 940c 57f3 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
00578e ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
00578f e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
005790 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
005791 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
005792 940e e05b 	CALL __PUTPARD1
005794 940e c94d 	CALL SUBOPT_0x16D
                +
005796 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005797 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005798 81e0      	LD   R30,Z
005799 940e c156 	CALL SUBOPT_0x29
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
00579b 940e c94d 	CALL SUBOPT_0x16D
                +
00579d 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00579e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00579f 81a0      	LD   R26,Z
0057a0 91e0 1426 	LDS  R30,_logDataWait
0057a2 17ea      	CP   R30,R26
0057a3 f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
0057a4 eee7     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
0057a5 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
0057a6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
0057a7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
0057a8 940e c042 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
0057aa e0e0      	LDI  R30,LOW(0)
0057ab 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
0057ad c019      	RJMP _0x120055
                 _0x120054:
0057ae 940e c94d 	CALL SUBOPT_0x16D
                +
0057b0 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057b1 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057b2 81a0      	LD   R26,Z
0057b3 91e0 142b 	LDS  R30,_logEventWait
0057b5 17ea      	CP   R30,R26
0057b6 f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
0057b7 e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
0057b8 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
0057b9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
0057ba e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
0057bb 940e c042 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
0057bd e0e0      	LDI  R30,LOW(0)
0057be 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
0057c0 c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
0057c1 940e c94d 	CALL SUBOPT_0x16D
                +
0057c3 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057c4 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057c5 81a0      	LD   R26,Z
0057c6 dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
0057c7 940e c94d 	CALL SUBOPT_0x16D
                +
0057c9 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057ca 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057cb 81a0      	LD   R26,Z
0057cc 940e 6a22 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
0057ce e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
0057cf e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
0057d0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
0057d1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
0057d2 940e c953 	CALL SUBOPT_0x16E
0057d4 940e c953 	CALL SUBOPT_0x16E
0057d6 940e c11b 	CALL SUBOPT_0x21
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
0057d8 940e c95e 	CALL SUBOPT_0x16F
0057da 940e c1ca 	CALL SUBOPT_0x3A
0057dc f029      	BREQ _0x120059
0057dd 940e c95e 	CALL SUBOPT_0x16F
0057df 940e e0c0 	CALL __CPD02
0057e1 f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
0057e2 e2e1      	LDI  R30,LOW(_commLostTimer)
0057e3 e1f4      	LDI  R31,HIGH(_commLostTimer)
0057e4 940e c967 	CALL SUBOPT_0x170
0057e6 940e 41b7 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
0057e8 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
0057e9 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
0057ea e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
0057eb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
0057ec 940e c96e 	CALL SUBOPT_0x171
0057ee 940e c96e 	CALL SUBOPT_0x171
0057f0 940e c11b 	CALL SUBOPT_0x21
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
0057f2 c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
0057f3 940e c94d 	CALL SUBOPT_0x16D
0057f5 940e c97c 	CALL SUBOPT_0x172
0057f7 940e c981 	CALL SUBOPT_0x173
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
0057f9 940e c94d 	CALL SUBOPT_0x16D
0057fb 58e5      	SUBI R30,LOW(-_eth_waitQueue)
0057fc 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
0057fd 01df      	MOVW R26,R30
0057fe 91ec      	LD   R30,X
0057ff 5fef      	SUBI R30,-LOW(1)
005800 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
005801 e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
005802 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
005803 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
005804 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
005805 940e e05b 	CALL __PUTPARD1
005807 940e c94d 	CALL SUBOPT_0x16D
                +
005809 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00580a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00580b 81e0      	LD   R30,Z
00580c 940e c156 	CALL SUBOPT_0x29
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
00580e 940e c94d 	CALL SUBOPT_0x16D
005810 940e c98a 	CALL SUBOPT_0x174
005812 93fa      	ST   -Y,R31
005813 93ea      	ST   -Y,R30
005814 940e c94d 	CALL SUBOPT_0x16D
                +
005816 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
005817 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
005818 81a0      	LD   R26,Z
005819 e0b0      	LDI  R27,0
00581a 940e 40b5 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
00581c 5f0f     +SUBI R16 , LOW ( - 1 )
00581d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00581e cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
00581f 9109      	LD   R16,Y+
005820 9119      	LD   R17,Y+
005821 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
005822 93ba      	ST   -Y,R27
005823 93aa      	ST   -Y,R26
005824 97a6      	SBIW R28,38
005825 50d2      	SUBI R29,2
005826 940e e0d0 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
005828 e020     +LDI R18 , LOW ( 0 )
005829 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00582a 940e c990 	CALL SUBOPT_0x175
00582c 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
00582d 940e c990 	CALL SUBOPT_0x175
00582f 9611      	ADIW R26,1
005830 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
005831 940e c137 	CALL SUBOPT_0x25
005833 93e0 1421 	STS  _commLostTimer,R30
005835 93f0 1422 	STS  _commLostTimer+1,R31
005837 9360 1423 	STS  _commLostTimer+2,R22
005839 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
00583b 940e c4d4 	CALL SUBOPT_0xAC
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
00583d 31ea      	CPI  R30,LOW(0x1A)
00583e e0a0      	LDI  R26,HIGH(0x1A)
00583f 07fa      	CPC  R31,R26
005840 f011      	BREQ PC+3
005841 940c 58c0 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005843 940e c997 	CALL SUBOPT_0x176
005845 971d      	SBIW R26,13
005846 f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
005847 eceb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
005848 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
005849 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
00584a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
00584b 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
00584d 940e c9a7 	CALL SUBOPT_0x178
                 ; 0009 0211                 return;
00584f c0d3      	RJMP _0x20E0081
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
005850 940e c997 	CALL SUBOPT_0x176
005852 940e c9ab 	CALL SUBOPT_0x179
                 ; 0009 0215             if(payload == NULL){
005854 f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
005855 e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
005856 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
005857 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
005858 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
005859 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
00585b 940e c9b1 	CALL SUBOPT_0x17A
                 ; 0009 0218                 return;
00585d c0c5      	RJMP _0x20E0081
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
00585e 940e c9b5 	CALL SUBOPT_0x17B
005860 940e c9bc 	CALL SUBOPT_0x17C
005862 940e 6112 	CALL _statusRequestParser
005864 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
005865 2333      	TST  R19
005866 f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
005867 e3e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
005868 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
005869 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
00586a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
00586b 940e c042 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
00586d 940e c9c5 	CALL SUBOPT_0x17D
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
00586f c0b3      	RJMP _0x20E0081
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
005870 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
005871 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
005872 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
005873 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
005874 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
005876 e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
005877 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
005878 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
005879 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
00587a 940e c9d1 	CALL SUBOPT_0x17F
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
00587c eae9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
00587d e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
00587e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
00587f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
005880 940e c9d7 	CALL SUBOPT_0x180
005882 940e c9d7 	CALL SUBOPT_0x180
005884 940e c11b 	CALL SUBOPT_0x21
                 ; 0009 0226             printDebug("statusList      |");
                +
005886 ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
005887 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
005888 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
005889 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
00588a 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
00588c e0e0      	LDI  R30,LOW(0)
00588d 83ee      	STD  Y+6,R30
00588e 83ef      	STD  Y+6+1,R30
                 _0x120064:
00588f 01da      	MOVW R26,R20
005890 961b      	ADIW R26,11
005891 940e c9dd 	CALL SUBOPT_0x181
005893 f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
005894 edeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
005895 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
005896 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
005897 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
005898 940e e05b 	CALL __PUTPARD1
00589a 01fa      	MOVW R30,R20
00589b 85a5      	LDD  R26,Z+13
00589c 85b6      	LDD  R27,Z+14
00589d 85ea      	LDD  R30,Y+10
00589e 85fb      	LDD  R31,Y+10+1
00589f 9631      	ADIW R30,1
0058a0 87ea      	STD  Y+10,R30
0058a1 87fb      	STD  Y+10+1,R31
0058a2 9731      	SBIW R30,1
0058a3 940e c9e4 	CALL SUBOPT_0x182
                 ; 0009 022B             }
0058a5 81ee      	LDD  R30,Y+6
0058a6 81ff      	LDD  R31,Y+6+1
0058a7 9631      	ADIW R30,1
0058a8 83ee      	STD  Y+6,R30
0058a9 83ff      	STD  Y+6+1,R31
0058aa cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
0058ab eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
0058ac e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
0058ad e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
0058ae e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
0058af 940e c042 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
0058b1 940e c9e9 	CALL SUBOPT_0x183
0058b3 e0a0      	LDI  R26,LOW(0)
0058b4 db20      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
0058b5 01fa      	MOVW R30,R20
0058b6 85a0      	LDD  R26,Z+8
0058b7 33a0      	CPI  R26,LOW(0x30)
0058b8 f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
0058b9 01da      	MOVW R26,R20
0058ba 940e 6352 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
0058bc 01da      	MOVW R26,R20
0058bd 940e a538 	CALL _free
                 ; 0009 0235             break;
0058bf c460      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
0058c0 32eb      	CPI  R30,LOW(0x2B)
0058c1 e0a0      	LDI  R26,HIGH(0x2B)
0058c2 07fa      	CPC  R31,R26
0058c3 f011      	BREQ PC+3
0058c4 940c 590b 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
0058c6 940e c997 	CALL SUBOPT_0x176
0058c8 971e      	SBIW R26,14
0058c9 f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
0058ca efe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
0058cb e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
0058cc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
0058cd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
0058ce c04a      	RJMP _0x20E0080
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
0058cf e2ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
0058d0 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
0058d1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
0058d2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
0058d3 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
0058d5 e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
0058d6 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
0058d7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
0058d8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
0058d9 940e e05b 	CALL __PUTPARD1
                +
0058db 01fe     +MOVW R30 , R28
0058dc 5cee     +SUBI R30 , LOW ( - 562 )
0058dd 4ffd     +SBCI R31 , HIGH ( - 562 )
0058de 9001     +LD R0 , Z +
0058df 81f0     +LD R31 , Z
0058e0 2de0     +MOV R30 , R0
                 	__GETW1SX 562
0058e1 85e2      	LDD  R30,Z+10
0058e2 940e c2f3 	CALL SUBOPT_0x65
                +
0058e4 01fe     +MOVW R30 , R28
0058e5 5cea     +SUBI R30 , LOW ( - 566 )
0058e6 4ffd     +SBCI R31 , HIGH ( - 566 )
0058e7 9001     +LD R0 , Z +
0058e8 81f0     +LD R31 , Z
0058e9 2de0     +MOV R30 , R0
                 	__GETW1SX 566
0058ea 85e3      	LDD  R30,Z+11
0058eb 940e c2f3 	CALL SUBOPT_0x65
                +
0058ed 01fe     +MOVW R30 , R28
0058ee 5ce6     +SUBI R30 , LOW ( - 570 )
0058ef 4ffd     +SBCI R31 , HIGH ( - 570 )
0058f0 9001     +LD R0 , Z +
0058f1 81f0     +LD R31 , Z
0058f2 2de0     +MOV R30 , R0
                 	__GETW1SX 570
0058f3 85e4      	LDD  R30,Z+12
0058f4 940e c2f3 	CALL SUBOPT_0x65
                +
0058f6 01fe     +MOVW R30 , R28
0058f7 5ce2     +SUBI R30 , LOW ( - 574 )
0058f8 4ffd     +SBCI R31 , HIGH ( - 574 )
0058f9 9001     +LD R0 , Z +
0058fa 81f0     +LD R31 , Z
0058fb 2de0     +MOV R30 , R0
                 	__GETW1SX 574
0058fc 85e5      	LDD  R30,Z+13
0058fd 940e c2f3 	CALL SUBOPT_0x65
0058ff 940e c900 	CALL SUBOPT_0x160
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
005901 940e c990 	CALL SUBOPT_0x175
005903 961a      	ADIW R26,10
005904 940e 693f 	CALL _setTimeSyncSchema
005906 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
005907 2fa0      	MOV  R26,R16
005908 940e 6a22 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
00590a c415      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
00590b 33eb      	CPI  R30,LOW(0x3B)
00590c e0a0      	LDI  R26,HIGH(0x3B)
00590d 07fa      	CPC  R31,R26
00590e f011      	BREQ PC+3
00590f 940c 5977 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
005911 940e c997 	CALL SUBOPT_0x176
005913 971a      	SBIW R26,10
005914 f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
005915 e8e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
005916 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
005917 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
005918 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0080:
005919 940e e05b 	CALL __PUTPARD1
                +
00591b 01fe     +MOVW R30 , R28
00591c 5de0     +SUBI R30 , LOW ( - 560 )
00591d 4ffd     +SBCI R31 , HIGH ( - 560 )
00591e 9001     +LD R0 , Z +
00591f 81f0     +LD R31 , Z
005920 2de0     +MOV R30 , R0
                 	__GETW1SX 560
005921 940e c64a 	CALL SUBOPT_0xE9
                 ; 0009 0248                 return;
                 _0x20E0081:
005923 940e e0d7 	CALL __LOADLOCR6
005925 96e0      	ADIW R28,48
005926 5fde      	SUBI R29,-2
005927 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
005928 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
005929 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
00592a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
00592b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
00592c 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
00592e 91a0 142b 	LDS  R26,_logEventWait
005930 30a0      	CPI  R26,LOW(0x0)
005931 f021      	BREQ _0x12006D
005932 91e0 142b 	LDS  R30,_logEventWait
005934 17e0      	CP   R30,R16
005935 f009      	BREQ _0x12006E
                 _0x12006D:
005936 c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
005937 eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
005938 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
005939 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
00593a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
00593b 940e c042 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
00593d 940e c2af 	CALL SUBOPT_0x5A
00593f 940e c308 	CALL SUBOPT_0x69
005941 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
005942 2333      	TST  R19
005943 f42a      	BRPL _0x12006F
                +
005944 e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005945 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005946 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005947 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005948 c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
005949 940e c2af 	CALL SUBOPT_0x5A
00594b 940e c35c 	CALL SUBOPT_0x72
00594d 940e c9ee 	CALL SUBOPT_0x184
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
00594f f41a      	BRPL _0x120071
005950 940e c9f6 	CALL SUBOPT_0x185
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
005952 c00c      	RJMP _0x120072
                 _0x120071:
                +
005953 e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
005954 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
005955 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005956 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005957 940e c313 	CALL SUBOPT_0x6A
005959 940e c35c 	CALL SUBOPT_0x72
00595b 940e c5c3 	CALL SUBOPT_0xD3
00595d 940e c11b 	CALL SUBOPT_0x21
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
00595f 940e c9fc 	CALL SUBOPT_0x186
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
005961 f462      	BRPL _0x120073
                +
005962 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005963 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005964 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005965 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
005966 940e e05b 	CALL __PUTPARD1
005968 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
005969 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00596a 940e c1a4 	CALL SUBOPT_0x34
00596c 940e c0b8 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
00596e 940e c34c 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
005970 2fa0      	MOV  R26,R16
005971 940e 8753 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
005973 2fa0      	MOV  R26,R16
005974 940e 6a22 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
005976 c3a9      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
005977 34ea      	CPI  R30,LOW(0x4A)
005978 e0a0      	LDI  R26,HIGH(0x4A)
005979 07fa      	CPC  R31,R26
00597a f011      	BREQ PC+3
00597b 940c 5aae 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
00597d eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
00597e e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
00597f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
005980 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
005981 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
005983 940e c9b5 	CALL SUBOPT_0x17B
005985 93fa      	ST   -Y,R31
005986 93ea      	ST   -Y,R30
005987 940e c990 	CALL SUBOPT_0x175
005989 940e 9ea8 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
00598b 940e c997 	CALL SUBOPT_0x176
00598d 971c      	SBIW R26,12
00598e f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
00598f ede1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
005990 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
005991 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
005992 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
005993 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
005995 940e c9a7 	CALL SUBOPT_0x178
                 ; 0009 0269                 return;
005997 c388      	RJMP _0x20E007F
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
005998 e0ae      	LDI  R26,LOW(14)
005999 940e ca09 	CALL SUBOPT_0x187
                 ; 0009 026D             if(payload == NULL){
00599b f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
00599c 940e ca0b 	CALL SUBOPT_0x188
                +
00599e e0ee     +LDI R30 , LOW ( 0xE )
00599f e0f0     +LDI R31 , HIGH ( 0xE )
0059a0 e060     +LDI R22 , BYTE3 ( 0xE )
0059a1 e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
0059a2 940e ca12 	CALL SUBOPT_0x189
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
0059a4 940e c9b1 	CALL SUBOPT_0x17A
                 ; 0009 0270                 return;
0059a6 c379      	RJMP _0x20E007F
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
0059a7 940e ca16 	CALL SUBOPT_0x18A
0059a9 940e 616e 	CALL _configManageParser
0059ab 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
0059ac 2333      	TST  R19
0059ad f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
0059ae e4e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
0059af e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
0059b0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
0059b1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
0059b2 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
0059b4 940e c9c5 	CALL SUBOPT_0x17D
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
0059b6 c369      	RJMP _0x20E007F
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
0059b7 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
0059b8 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
0059b9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
0059ba e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
0059bb 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
0059bd 940e ca18 	CALL SUBOPT_0x18B
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
0059bf ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
0059c0 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
0059c1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
0059c2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
0059c3 940e ca1d 	CALL SUBOPT_0x18C
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
0059c5 940e ca23 	CALL SUBOPT_0x18D
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
0059c7 f011      	BREQ PC+3
0059c8 940c 5a37 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
0059ca 01fa      	MOVW R30,R20
0059cb 85a1      	LDD  R26,Z+9
0059cc 940e 6367 	CALL _getConfigLen
0059ce 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
0059cf 2333      	TST  R19
0059d0 f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
0059d1 ede4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
0059d2 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
0059d3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
0059d4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
0059d5 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
0059d7 c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
0059d8 01d9      	MOVW R26,R18
0059d9 940e a51d 	CALL _malloc
0059db 87ea      	STD  Y+10,R30
0059dc 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
0059dd 9730      	SBIW R30,0
0059de f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
0059df e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
0059e0 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
0059e1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
0059e2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
0059e3 940e c042 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
0059e5 930a      	ST   -Y,R16
0059e6 e5a0      	LDI  R26,LOW(80)
0059e7 c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
0059e8 01fa      	MOVW R30,R20
0059e9 85a1      	LDD  R26,Z+9
0059ea 93aa      	ST   -Y,R26
0059eb 85ab      	LDD  R26,Y+11
0059ec 85bc      	LDD  R27,Y+11+1
0059ed 940e 63b9 	CALL _configRead
0059ef 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
0059f0 2400      	CLR  R0
0059f1 1602      	CP   R0,R18
0059f2 0603      	CPC  R0,R19
0059f3 f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
0059f4 e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
0059f5 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
0059f6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
0059f7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
0059f8 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
0059fa efef      	LDI  R30,LOW(65535)
0059fb efff      	LDI  R31,HIGH(65535)
0059fc 17e2      	CP   R30,R18
0059fd 07f3      	CPC  R31,R19
0059fe f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
0059ff 930a      	ST   -Y,R16
005a00 e3a0      	LDI  R26,LOW(48)
005a01 c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
005a02 efee      	LDI  R30,LOW(65534)
005a03 efff      	LDI  R31,HIGH(65534)
005a04 17e2      	CP   R30,R18
005a05 07f3      	CPC  R31,R19
005a06 f021      	BREQ _0x120082
005a07 2400      	CLR  R0
005a08 1602      	CP   R0,R18
005a09 0603      	CPC  R0,R19
005a0a f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
005a0b 930a      	ST   -Y,R16
005a0c e5a0      	LDI  R26,LOW(80)
005a0d c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
005a0e efed      	LDI  R30,LOW(65533)
005a0f efff      	LDI  R31,HIGH(65533)
005a10 17e2      	CP   R30,R18
005a11 07f3      	CPC  R31,R19
005a12 f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
005a13 940e c9e9 	CALL SUBOPT_0x183
005a15 940e ca27 	CALL SUBOPT_0x18E
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
005a17 c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
005a18 930a      	ST   -Y,R16
005a19 efaf      	LDI  R26,LOW(255)
                 _0x12011A:
005a1a d995      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
005a1b 85aa      	LDD  R26,Y+10
005a1c 85bb      	LDD  R27,Y+10+1
005a1d 940e a538 	CALL _free
                 ; 0009 02A3                                             break;
005a1f c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
005a20 940e c9e9 	CALL SUBOPT_0x183
005a22 940e ca2d 	CALL SUBOPT_0x18F
005a24 85ee      	LDD  R30,Y+14
005a25 85ff      	LDD  R31,Y+14+1
005a26 93fa      	ST   -Y,R31
005a27 93ea      	ST   -Y,R30
005a28 01d9      	MOVW R26,R18
005a29 940e ca33 	CALL SUBOPT_0x190
                 ; 0009 02AC                                         if(res < 0){
005a2b f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
005a2c e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
005a2d e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
005a2e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
005a2f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
005a30 940e c042 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
005a32 85aa      	LDD  R26,Y+10
005a33 85bb      	LDD  R27,Y+10+1
005a34 940e a538 	CALL _free
                 ; 0009 02B1                                         break;
005a36 c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
005a37 32e0      	CPI  R30,LOW(0x20)
005a38 e0a0      	LDI  R26,HIGH(0x20)
005a39 07fa      	CPC  R31,R26
005a3a f011      	BREQ PC+3
005a3b 940c 5a82 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
005a3d 01fa      	MOVW R30,R20
005a3e 85a2      	LDD  R26,Z+10
005a3f 85b3      	LDD  R27,Z+11
005a40 940e a51d 	CALL _malloc
005a42 940e ca38 	CALL SUBOPT_0x191
                 ; 0009 02B4                                         if(cnfgWr == NULL){
005a44 9730      	SBIW R30,0
005a45 f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
005a46 e9e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
005a47 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
005a48 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
005a49 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
005a4a 940e c042 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
005a4c 930a      	ST   -Y,R16
005a4d e5a0      	LDI  R26,LOW(80)
005a4e c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
005a4f 940e ca3b 	CALL SUBOPT_0x192
005a51 01fa      	MOVW R30,R20
005a52 85a4      	LDD  R26,Z+12
005a53 85b5      	LDD  R27,Z+13
005a54 93ba      	ST   -Y,R27
005a55 93aa      	ST   -Y,R26
005a56 85a2      	LDD  R26,Z+10
005a57 85b3      	LDD  R27,Z+11
005a58 940e a55a 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
005a5a 01fa      	MOVW R30,R20
005a5b 85a1      	LDD  R26,Z+9
005a5c 93aa      	ST   -Y,R26
005a5d 940e ca40 	CALL SUBOPT_0x193
005a5f 01fa      	MOVW R30,R20
005a60 85a2      	LDD  R26,Z+10
005a61 85b3      	LDD  R27,Z+11
005a62 940e 67e9 	CALL _configWrite
005a64 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
005a65 85a8      	LDD  R26,Y+8
005a66 85b9      	LDD  R27,Y+8+1
005a67 940e a538 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
005a69 2333      	TST  R19
005a6a f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
005a6b ece4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
005a6c e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
005a6d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
005a6e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
005a6f 940e c042 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
005a71 940e c9e9 	CALL SUBOPT_0x183
005a73 940e ca27 	CALL SUBOPT_0x18E
                 ; 0009 02C7                                             break;
005a75 c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
005a76 940e c9e9 	CALL SUBOPT_0x183
005a78 940e ca2d 	CALL SUBOPT_0x18F
005a7a 940e ca45 	CALL SUBOPT_0x194
005a7c 940e ca33 	CALL SUBOPT_0x190
                 ; 0009 02D1                                         if(res < 0){
005a7e f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005a7f 940e ca4a 	CALL SUBOPT_0x195
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
005a81 c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
005a82 33e0      	CPI  R30,LOW(0x30)
005a83 e0a0      	LDI  R26,HIGH(0x30)
005a84 07fa      	CPC  R31,R26
005a85 f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
005a86 940e 69b6 	CALL _configConfirm
005a88 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
005a89 2333      	TST  R19
005a8a f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
005a8b e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
005a8c e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005a8d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
005a8e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
005a8f 940e c042 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
005a91 940e c9e9 	CALL SUBOPT_0x183
005a93 940e ca27 	CALL SUBOPT_0x18E
                 ; 0009 02DE                                             break;
005a95 c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
005a96 940e c9e9 	CALL SUBOPT_0x183
005a98 940e ca2d 	CALL SUBOPT_0x18F
005a9a 940e ca45 	CALL SUBOPT_0x194
005a9c 940e ca33 	CALL SUBOPT_0x190
                 ; 0009 02E7                                         if(res < 0){
005a9e f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005a9f 940e ca4a 	CALL SUBOPT_0x195
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
005aa1 c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
005aa2 940e ca50 	CALL SUBOPT_0x196
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
005aa4 930a      	ST   -Y,R16
005aa5 e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005aa6 d909      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
005aa7 01da      	MOVW R26,R20
005aa8 940e 6359 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
005aaa 01da      	MOVW R26,R20
005aab 940e a538 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
005aad c272      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005aae 35eb      	CPI  R30,LOW(0x5B)
005aaf e0a0      	LDI  R26,HIGH(0x5B)
005ab0 07fa      	CPC  R31,R26
005ab1 f011      	BREQ PC+3
005ab2 940c 5b0e 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
005ab4 940e c997 	CALL SUBOPT_0x176
005ab6 971a      	SBIW R26,10
005ab7 f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005ab8 eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
005ab9 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
005aba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
005abb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
005abc 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 02FA                 return;
005abe c261      	RJMP _0x20E007F
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005abf ede6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
005ac0 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
005ac1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
005ac2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
005ac3 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005ac5 91a0 1426 	LDS  R26,_logDataWait
005ac7 30a0      	CPI  R26,LOW(0x0)
005ac8 f021      	BREQ _0x120093
005ac9 91e0 1426 	LDS  R30,_logDataWait
005acb 17e0      	CP   R30,R16
005acc f009      	BREQ _0x120094
                 _0x120093:
005acd c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005ace efec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005acf e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
005ad0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
005ad1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
005ad2 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
005ad4 940e c2af 	CALL SUBOPT_0x5A
005ad6 940e c2c1 	CALL SUBOPT_0x5E
005ad8 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
005ad9 2333      	TST  R19
005ada f42a      	BRPL _0x120095
                +
005adb e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005adc e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005add e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005ade e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005adf c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
005ae0 940e c2af 	CALL SUBOPT_0x5A
005ae2 940e c336 	CALL SUBOPT_0x6F
005ae4 940e c9ee 	CALL SUBOPT_0x184
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005ae6 f41a      	BRPL _0x120097
005ae7 940e c9f6 	CALL SUBOPT_0x185
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
005ae9 c00c      	RJMP _0x120098
                 _0x120097:
                +
005aea e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
005aeb e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
005aec e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005aed e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005aee 940e c2cc 	CALL SUBOPT_0x5F
005af0 940e c336 	CALL SUBOPT_0x6F
005af2 940e c5c3 	CALL SUBOPT_0xD3
005af4 940e c11b 	CALL SUBOPT_0x21
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
005af6 940e c9fc 	CALL SUBOPT_0x186
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
005af8 f462      	BRPL _0x120099
                +
005af9 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005afa e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005afb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005afc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
005afd 940e e05b 	CALL __PUTPARD1
005aff eae8      	LDI  R30,LOW(_LOGFILE_DATA)
005b00 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
005b01 940e c1a4 	CALL SUBOPT_0x34
005b03 940e c0b8 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
005b05 940e c326 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
005b07 2fa0      	MOV  R26,R16
005b08 940e 868c 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
005b0a 2fa0      	MOV  R26,R16
005b0b 940e 6a22 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
005b0d c212      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
005b0e 36ea      	CPI  R30,LOW(0x6A)
005b0f e0a0      	LDI  R26,HIGH(0x6A)
005b10 07fa      	CPC  R31,R26
005b11 f011      	BREQ PC+3
005b12 940c 5b7a 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
005b14 940e c997 	CALL SUBOPT_0x176
005b16 9753      	SBIW R26,19
005b17 f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
005b18 e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
005b19 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
005b1a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
005b1b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
005b1c 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
005b1e 940e c9a7 	CALL SUBOPT_0x178
                 ; 0009 0318                 return;
005b20 c1ff      	RJMP _0x20E007F
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
005b21 e1a1      	LDI  R26,LOW(17)
005b22 940e ca09 	CALL SUBOPT_0x187
                 ; 0009 031C             if(payload == NULL){
005b24 f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
005b25 940e ca0b 	CALL SUBOPT_0x188
                +
005b27 e1e1     +LDI R30 , LOW ( 0x11 )
005b28 e0f0     +LDI R31 , HIGH ( 0x11 )
005b29 e060     +LDI R22 , BYTE3 ( 0x11 )
005b2a e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
005b2b 940e ca12 	CALL SUBOPT_0x189
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
005b2d 940e c9b1 	CALL SUBOPT_0x17A
                 ; 0009 031F                 return;
005b2f c1f0      	RJMP _0x20E007F
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
005b30 940e ca16 	CALL SUBOPT_0x18A
005b32 940e 61f4 	CALL _logManipulationCmdParser
005b34 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
005b35 2333      	TST  R19
005b36 f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005b37 940e ca55 	CALL SUBOPT_0x197
                 ; 0009 0325                 free( (void *) payload );
005b39 940e c9c5 	CALL SUBOPT_0x17D
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
005b3b c1e4      	RJMP _0x20E007F
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
005b3c e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
005b3d e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
005b3e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
005b3f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
005b40 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
005b42 940e ca18 	CALL SUBOPT_0x18B
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
005b44 ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
005b45 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
005b46 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
005b47 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
005b48 940e ca5b 	CALL SUBOPT_0x198
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
005b4a eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
005b4b e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
005b4c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
005b4d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
005b4e 940e e05b 	CALL __PUTPARD1
005b50 01fa      	MOVW R30,R20
                +
005b51 85a5     +LDD R26 , Z + 13
005b52 85b6     +LDD R27 , Z + 13 + 1
005b53 8587     +LDD R24 , Z + 13 + 2
005b54 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005b55 940e ca66 	CALL SUBOPT_0x199
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
005b57 01fa      	MOVW R30,R20
005b58 85a0      	LDD  R26,Z+8
005b59 93aa      	ST   -Y,R26
005b5a 940e ca6a 	CALL SUBOPT_0x19A
005b5c 940e e060 	CALL __PUTPARD2
005b5e 01fa      	MOVW R30,R20
                +
005b5f 85a5     +LDD R26 , Z + 13
005b60 85b6     +LDD R27 , Z + 13 + 1
005b61 8587     +LDD R24 , Z + 13 + 2
005b62 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005b63 940e 6926 	CALL _setLogManipulateSchema
005b65 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
005b66 2333      	TST  R19
005b67 f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005b68 efea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005b69 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005b6a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005b6b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005b6c 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005b6e 940e c9e9 	CALL SUBOPT_0x183
005b70 e0a1      	LDI  R26,LOW(1)
005b71 daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
005b72 940e c9e9 	CALL SUBOPT_0x183
005b74 e0a0      	LDI  R26,LOW(0)
005b75 daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
005b76 01da      	MOVW R26,R20
005b77 940e a538 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
005b79 c1a6      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005b7a 36eb      	CPI  R30,LOW(0x6B)
005b7b e0a0      	LDI  R26,HIGH(0x6B)
005b7c 07fa      	CPC  R31,R26
005b7d f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
005b7e 940e c997 	CALL SUBOPT_0x176
005b80 971c      	SBIW R26,12
005b81 f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
005b82 e3e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
005b83 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
005b84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
005b85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005b86 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 033F                 return;
005b88 c197      	RJMP _0x20E007F
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005b89 e0aa      	LDI  R26,LOW(10)
005b8a 940e ca09 	CALL SUBOPT_0x187
                 ; 0009 0343             if(payload == NULL){
005b8c f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005b8d 940e ca0b 	CALL SUBOPT_0x188
005b8f 940e ca6f 	CALL SUBOPT_0x19B
                 ; 0009 0345                 return;
005b91 c18e      	RJMP _0x20E007F
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
005b92 940e ca74 	CALL SUBOPT_0x19C
005b94 940e 627c 	CALL _logManipulationAckParser
005b96 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
005b97 2333      	TST  R19
005b98 f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005b99 940e ca55 	CALL SUBOPT_0x197
                 ; 0009 034B                 free( (void *) payload );
005b9b 01da      	MOVW R26,R20
005b9c 940e a538 	CALL _free
                 ; 0009 034C                 return;
005b9e c181      	RJMP _0x20E007F
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005b9f e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005ba0 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
005ba1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
005ba2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
005ba3 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
005ba5 940e ca18 	CALL SUBOPT_0x18B
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005ba7 e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005ba8 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005ba9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005baa e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005bab 940e ca1d 	CALL SUBOPT_0x18C
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
005bad 01da      	MOVW R26,R20
005bae 940e a538 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005bb0 2fa0      	MOV  R26,R16
005bb1 940e 6a22 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005bb3 c16c      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005bb4 37ea      	CPI  R30,LOW(0x7A)
005bb5 e0a0      	LDI  R26,HIGH(0x7A)
005bb6 07fa      	CPC  R31,R26
005bb7 f011      	BREQ PC+3
005bb8 940c 5c42 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005bba 940e c997 	CALL SUBOPT_0x176
005bbc 971c      	SBIW R26,12
005bbd f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005bbe ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005bbf e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005bc0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005bc1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005bc2 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005bc4 940e c9a7 	CALL SUBOPT_0x178
                 ; 0009 035A                 return;
005bc6 c159      	RJMP _0x20E007F
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005bc7 e0ad      	LDI  R26,LOW(13)
005bc8 940e ca09 	CALL SUBOPT_0x187
                 ; 0009 035E             if(payload == NULL){
005bca f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005bcb 940e ca0b 	CALL SUBOPT_0x188
005bcd 940e ca7a 	CALL SUBOPT_0x19D
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005bcf 940e c9b1 	CALL SUBOPT_0x17A
                 ; 0009 0361                 return;
005bd1 c14e      	RJMP _0x20E007F
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005bd2 940e ca16 	CALL SUBOPT_0x18A
005bd4 940e 628d 	CALL _networkMaintenanceParser
005bd6 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005bd7 2333      	TST  R19
005bd8 f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005bd9 efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005bda e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005bdb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005bdc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005bdd 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005bdf 940e c9c5 	CALL SUBOPT_0x17D
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005be1 c13e      	RJMP _0x20E007F
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005be2 e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005be3 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005be4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005be5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005be6 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005be8 940e ca7f 	CALL SUBOPT_0x19E
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005bea e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005beb e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005bec e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005bed e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005bee 940e c9d7 	CALL SUBOPT_0x180
005bf0 940e ca12 	CALL SUBOPT_0x189
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005bf2 01fa      	MOVW R30,R20
005bf3 940e ca84 	CALL SUBOPT_0x19F
005bf5 f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005bf6 e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005bf7 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005bf8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005bf9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005bfa 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005bfc 01fa      	MOVW R30,R20
005bfd 85a3      	LDD  R26,Z+11
005bfe 85b4      	LDD  R27,Z+12
005bff 93ba      	ST   -Y,R27
005c00 93aa      	ST   -Y,R26
005c01 85a1      	LDD  R26,Z+9
005c02 85b2      	LDD  R27,Z+10
005c03 940e 9ea8 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005c05 eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005c06 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005c07 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005c08 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
005c09 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
005c0b 940e ca23 	CALL SUBOPT_0x18D
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
005c0d f529      	BRNE _0x1200AE
005c0e 01fa      	MOVW R30,R20
005c0f 85a3      	LDD  R26,Z+11
005c10 85b4      	LDD  R27,Z+12
005c11 940e 693f 	CALL _setTimeSyncSchema
005c13 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005c14 2333      	TST  R19
005c15 f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005c16 eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005c17 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005c18 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
005c19 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
005c1a 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005c1c 940e ca89 	CALL SUBOPT_0x1A0
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
005c1e 01da      	MOVW R26,R20
005c1f 940e 6360 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005c21 01da      	MOVW R26,R20
005c22 940e a538 	CALL _free
                 ; 0009 037C                                             return;
005c24 c0fb      	RJMP _0x20E007F
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005c25 940e c9e9 	CALL SUBOPT_0x183
005c27 e0a0      	LDI  R26,LOW(0)
005c28 da11      	RCALL _ETH_sendNetworkMaintenanceAck
005c29 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
005c2a 2333      	TST  R19
005c2b f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
005c2c edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
005c2d e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
005c2e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005c2f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005c30 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005c32 c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005c33 940e ca50 	CALL SUBOPT_0x196
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005c35 940e ca89 	CALL SUBOPT_0x1A0
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005c37 01fa      	MOVW R30,R20
005c38 940e ca84 	CALL SUBOPT_0x19F
005c3a f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
005c3b 01da      	MOVW R26,R20
005c3c 940e 6360 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
005c3e 01da      	MOVW R26,R20
005c3f 940e a538 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005c41 c0de      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005c42 38ea      	CPI  R30,LOW(0x8A)
005c43 e0a0      	LDI  R26,HIGH(0x8A)
005c44 07fa      	CPC  R31,R26
005c45 f011      	BREQ PC+3
005c46 940c 5cab 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005c48 940e c997 	CALL SUBOPT_0x176
005c4a 971f      	SBIW R26,15
005c4b f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
005c4c e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
005c4d e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
005c4e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
005c4f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
005c50 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
005c52 940e c9a7 	CALL SUBOPT_0x178
                 ; 0009 0398                 return;
005c54 c0cb      	RJMP _0x20E007F
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
005c55 e0ad      	LDI  R26,LOW(13)
005c56 940e ca09 	CALL SUBOPT_0x187
                 ; 0009 039C             if(payload == NULL){
005c58 f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
005c59 940e ca0b 	CALL SUBOPT_0x188
005c5b 940e ca7a 	CALL SUBOPT_0x19D
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
005c5d 940e c9b1 	CALL SUBOPT_0x17A
                 ; 0009 039F                 return;
005c5f c0c0      	RJMP _0x20E007F
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
005c60 940e ca74 	CALL SUBOPT_0x19C
005c62 940e 62e6 	CALL _remoteDeviceControlParser
005c64 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
005c65 2333      	TST  R19
005c66 f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
005c67 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
005c68 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
005c69 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
005c6a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005c6b 940e c042 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
005c6d 940e c9c5 	CALL SUBOPT_0x17D
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
005c6f c0b0      	RJMP _0x20E007F
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005c70 eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005c71 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005c72 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005c73 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005c74 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
005c76 940e ca7f 	CALL SUBOPT_0x19E
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
005c78 ede9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
005c79 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
005c7a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005c7b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005c7c 940e ca5b 	CALL SUBOPT_0x198
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005c7e 940e ca23 	CALL SUBOPT_0x18D
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005c80 f511      	BRNE _0x1200BA
005c81 01fa      	MOVW R30,R20
005c82 940e ca6a 	CALL SUBOPT_0x19A
005c84 940e 6971 	CALL _setMuteAlarm
005c86 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
005c87 2333      	TST  R19
005c88 f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
005c89 efe1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
005c8a e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005c8b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005c8c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005c8d 940e ca5b 	CALL SUBOPT_0x198
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005c8f 940e ca89 	CALL SUBOPT_0x1A0
                 ; 0009 03B3                                                 free( (void *) payload );
005c91 01da      	MOVW R26,R20
005c92 940e a538 	CALL _free
                 ; 0009 03B4                                                 return;
005c94 c08b      	RJMP _0x20E007F
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
005c95 940e c9e9 	CALL SUBOPT_0x183
005c97 e0a0      	LDI  R26,LOW(0)
005c98 d9bd      	RCALL _ETH_remoteDeviceControlAck
005c99 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
005c9a 2333      	TST  R19
005c9b f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005c9c e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005c9d e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005c9e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005c9f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005ca0 940e c042 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
005ca2 c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
005ca3 940e ca50 	CALL SUBOPT_0x196
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005ca5 940e ca89 	CALL SUBOPT_0x1A0
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
005ca7 01da      	MOVW R26,R20
005ca8 940e a538 	CALL _free
                 ; 0009 03C5             break;
005caa c075      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005cab 39eb      	CPI  R30,LOW(0x9B)
005cac e0a0      	LDI  R26,HIGH(0x9B)
005cad 07fa      	CPC  R31,R26
005cae f011      	BREQ PC+3
005caf 940c 5d0c 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005cb1 940e c997 	CALL SUBOPT_0x176
005cb3 971c      	SBIW R26,12
005cb4 f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005cb5 e7eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005cb6 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005cb7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005cb8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005cb9 940e c99e 	CALL SUBOPT_0x177
                 ; 0009 03C9                 return;
005cbb c064      	RJMP _0x20E007F
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005cbc e0aa      	LDI  R26,LOW(10)
005cbd 940e ca09 	CALL SUBOPT_0x187
                 ; 0009 03CD             if(payload == NULL){
005cbf f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005cc0 940e ca0b 	CALL SUBOPT_0x188
005cc2 940e ca6f 	CALL SUBOPT_0x19B
                 ; 0009 03CF                 return;
005cc4 c05b      	RJMP _0x20E007F
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005cc5 940e ca74 	CALL SUBOPT_0x19C
005cc7 d667      	RCALL _clearListParser
005cc8 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005cc9 2333      	TST  R19
005cca f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005ccb ebe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005ccc e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005ccd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005cce e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005ccf 940e c042 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005cd1 01da      	MOVW R26,R20
005cd2 940e a538 	CALL _free
                 ; 0009 03D6                 return;
005cd4 c04b      	RJMP _0x20E007F
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005cd5 eee3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005cd6 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005cd7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005cd8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005cd9 940e c9cc 	CALL SUBOPT_0x17E
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005cdb 940e ca7f 	CALL SUBOPT_0x19E
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005cdd e0e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005cde e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005cdf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005ce0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005ce1 940e ca1d 	CALL SUBOPT_0x18C
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005ce3 01fa      	MOVW R30,R20
005ce4 940e ca8d 	CALL SUBOPT_0x1A1
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005ce6 30e1      	CPI  R30,LOW(0x1)
005ce7 e0a0      	LDI  R26,HIGH(0x1)
005ce8 07fa      	CPC  R31,R26
005ce9 f4c1      	BRNE _0x1200C5
005cea 01fa      	MOVW R30,R20
005ceb 85e1      	LDD  R30,Z+9
005cec 30e0      	CPI  R30,0
005ced f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005cee e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005cef e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005cf0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005cf1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005cf2 940e c042 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005cf4 e0e1      	LDI  R30,LOW(1)
005cf5 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005cf7 01da      	MOVW R26,R20
005cf8 940e a538 	CALL _free
                 ; 0009 03E3                                         return;
005cfa c025      	RJMP _0x20E007F
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005cfb e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005cfc e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005cfd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005cfe e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005cff 940e ca1d 	CALL SUBOPT_0x18C
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005d01 c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005d02 eae6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005d03 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005d04 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005d05 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005d06 940e c9d1 	CALL SUBOPT_0x17F
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005d08 01da      	MOVW R26,R20
005d09 940e a538 	CALL _free
                 ; 0009 03F2             break;
005d0b c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005d0c 3fea      	CPI  R30,LOW(0xFA)
005d0d e0a0      	LDI  R26,HIGH(0xFA)
005d0e 07fa      	CPC  R31,R26
005d0f f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005d10 eee6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005d11 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005d12 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005d13 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005d14 940e c042 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005d16 c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005d17 e2e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005d18 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005d19 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005d1a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005d1b 940e e05b 	CALL __PUTPARD1
005d1d 2fe1      	MOV  R30,R17
005d1e 940e c156 	CALL SUBOPT_0x29
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E007F:
005d20 940e e0d7 	CALL __LOADLOCR6
005d22 96e0      	ADIW R28,48
005d23 5fde      	SUBI R29,-2
005d24 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005d25 940e ca90 	CALL SUBOPT_0x1A2
005d27 940e e0d0 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005d29 940e c02e 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005d2b efa4      	LDI  R26,LOW(500)
005d2c e0b1      	LDI  R27,HIGH(500)
005d2d 940e a51d 	CALL _malloc
005d2f 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005d30 2e00      	MOV  R0,R16
005d31 2a01      	OR   R0,R17
005d32 f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005d33 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005d34 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005d35 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005d36 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005d37 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005d39 2e00      	MOV  R0,R16
005d3a 2a01      	OR   R0,R17
005d3b f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005d3c 931a      	ST   -Y,R17
005d3d 930a      	ST   -Y,R16
005d3e efe3      	LDI  R30,LOW(499)
005d3f e0f1      	LDI  R31,HIGH(499)
005d40 93fa      	ST   -Y,R31
005d41 93ea      	ST   -Y,R30
005d42 e0aa      	LDI  R26,LOW(10)
005d43 e0b0      	LDI  R27,0
005d44 940e 4064 	CALL _read_uart0
005d46 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005d47 2400      	CLR  R0
005d48 1602      	CP   R0,R18
005d49 0603      	CPC  R0,R19
005d4a f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005d4b c066      	RJMP _0x20E007E
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B //    printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 ; 0009 041C //    print_payload(ptr,size);
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CC:
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005d4c 01fa      	MOVW R30,R20
005d4d 940e ca97 	CALL SUBOPT_0x1A3
                +
005d4f e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005d50 e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005d51 940e a5d0 	CALL _strcspn
                +
005d53 0f4e     +ADD R20 , R30
005d54 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005d55 1724     +CP R18 , R20
005d56 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005d57 f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005d58 c059      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005d59 01fa      	MOVW R30,R20
005d5a 9631      	ADIW R30,1
005d5b 0fe0      	ADD  R30,R16
005d5c 1ff1      	ADC  R31,R17
005d5d 81e0      	LD   R30,Z
005d5e e0f0      	LDI  R31,0
005d5f 2ffe      	MOV  R31,R30
005d60 e0e0      	LDI  R30,0
005d61 87e8      	STD  Y+8,R30
005d62 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005d63 01fa      	MOVW R30,R20
005d64 940e c7be 	CALL SUBOPT_0x12A
005d66 85a8      	LDD  R26,Y+8
005d67 85b9      	LDD  R27,Y+8+1
005d68 e0f0      	LDI  R31,0
005d69 2bea      	OR   R30,R26
005d6a 2bfb      	OR   R31,R27
005d6b 940e ca38 	CALL SUBOPT_0x191
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005d6d 940e ca9c 	CALL SUBOPT_0x1A4
005d6f 83ee      	STD  Y+6,R30
005d70 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005d71 81ae      	LDD  R26,Y+6
005d72 81bf      	LDD  R27,Y+6+1
005d73 172a      	CP   R18,R26
005d74 073b      	CPC  R19,R27
005d75 f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005d76 5f4f     +SUBI R20 , LOW ( - 1 )
005d77 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005d78 834e     +STD Y + 6 , R20
005d79 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005d7a e7ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4852 ) )
005d7b e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4852 ) )
005d7c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4852 ) )
005d7d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4852 ) )
                 	__POINTD1FN _0x120000,4852
005d7e 940e c042 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005d80 c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005d81 01fa      	MOVW R30,R20
005d82 9633      	ADIW R30,3
005d83 940e ca97 	CALL SUBOPT_0x1A3
005d85 85aa      	LDD  R26,Y+10
005d86 85bb      	LDD  R27,Y+10+1
005d87 d0c9      	RCALL _ETH_checksum
005d88 010f      	MOVW R0,R30
005d89 01fa      	MOVW R30,R20
005d8a 9633      	ADIW R30,3
005d8b 85a8      	LDD  R26,Y+8
005d8c 85b9      	LDD  R27,Y+8+1
005d8d 0fea      	ADD  R30,R26
005d8e 1ffb      	ADC  R31,R27
005d8f 0fe0      	ADD  R30,R16
005d90 1ff1      	ADC  R31,R17
005d91 81e0      	LD   R30,Z
005d92 940e caa1 	CALL SUBOPT_0x1A5
005d94 f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005d95 e8ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4873 ) )
005d96 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4873 ) )
005d97 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4873 ) )
005d98 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4873 ) )
                 	__POINTD1FN _0x120000,4873
005d99 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005d9b 5f4f     +SUBI R20 , LOW ( - 1 )
005d9c 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005d9d 834e     +STD Y + 6 , R20
005d9e 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005d9f c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005da0 01fa      	MOVW R30,R20
005da1 9633      	ADIW R30,3
005da2 940e ca97 	CALL SUBOPT_0x1A3
005da4 85aa      	LDD  R26,Y+10
005da5 85bb      	LDD  R27,Y+10+1
005da6 da7b      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005da7 85e8      	LDD  R30,Y+8
005da8 85f9      	LDD  R31,Y+8+1
005da9 9633      	ADIW R30,3
                +
005daa 0f4e     +ADD R20 , R30
005dab 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005dac 81ae      	LDD  R26,Y+6
005dad 81bf      	LDD  R27,Y+6+1
005dae 17a2      	CP   R26,R18
005daf 07b3      	CPC  R27,R19
005db0 f40c      	BRGE _0x1200CF
005db1 cf9a      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E007E:
005db2 01d8      	MOVW R26,R16
005db3 940e a538 	CALL _free
                 ; 0009 0445 }
005db5 940e e0d7 	CALL __LOADLOCR6
005db7 962a      	ADIW R28,10
005db8 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005db9 940e caa6 	CALL SUBOPT_0x1A6
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005dbb e040     +LDI R20 , LOW ( 0 )
005dbc e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005dbd 85e9      	LDD  R30,Y+9
005dbe 85fa      	LDD  R31,Y+9+1
005dbf 9631      	ADIW R30,1
005dc0 87e9      	STD  Y+9,R30
005dc1 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005dc2 9634      	ADIW R30,4
005dc3 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005dc4 3f45     +CPI R20 , LOW ( 501 )
005dc5 e0e1     +LDI R30 , HIGH ( 501 )
005dc6 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005dc7 f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005dc8 eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4904 ) )
005dc9 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4904 ) )
005dca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4904 ) )
005dcb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4904 ) )
                 	__POINTD1FN _0x120000,4904
005dcc 940e c238 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005dce efef      	LDI  R30,LOW(65535)
005dcf efff      	LDI  R31,HIGH(65535)
005dd0 c07c      	RJMP _0x20E007D
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005dd1 01da      	MOVW R26,R20
005dd2 940e a51d 	CALL _malloc
005dd4 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005dd5 2e02      	MOV  R0,R18
005dd6 2a03      	OR   R0,R19
005dd7 f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005dd8 eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4956 ) )
005dd9 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4956 ) )
005dda e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4956 ) )
005ddb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4956 ) )
                 	__POINTD1FN _0x120000,4956
005ddc 940e c238 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005dde efef      	LDI  R30,LOW(65535)
005ddf efff      	LDI  R31,HIGH(65535)
005de0 c06c      	RJMP _0x20E007D
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005de1 933a      	ST   -Y,R19
005de2 932a      	ST   -Y,R18
005de3 e0e0      	LDI  R30,LOW(0)
005de4 93ea      	ST   -Y,R30
005de5 01da      	MOVW R26,R20
005de6 940e a59f 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005de8 01d9      	MOVW R26,R18
005de9 e7ee      	LDI  R30,LOW(126)
005dea 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005deb 85e9      	LDD  R30,Y+9
005dec 85fa      	LDD  R31,Y+9+1
005ded 940e df23 	CALL __ASRW8
                +
005def 01d9     +MOVW R26 , R18
005df0 9611     +ADIW R26 , 1
005df1 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005df2 85e9      	LDD  R30,Y+9
                +
005df3 01d9     +MOVW R26 , R18
005df4 9612     +ADIW R26 , 2
005df5 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005df6 85e8      	LDD  R30,Y+8
005df7 30e0      	CPI  R30,0
005df8 f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005df9 940e 6a99 	CALL _ETH_generateId
005dfb 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005dfc 85e8      	LDD  R30,Y+8
                +
005dfd 01d9     +MOVW R26 , R18
005dfe 9613     +ADIW R26 , 3
005dff 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005e00 01f9      	MOVW R30,R18
005e01 9634      	ADIW R30,4
005e02 93fa      	ST   -Y,R31
005e03 93ea      	ST   -Y,R30
005e04 85ed      	LDD  R30,Y+13
005e05 85fe      	LDD  R31,Y+13+1
005e06 93fa      	ST   -Y,R31
005e07 93ea      	ST   -Y,R30
005e08 85ad      	LDD  R26,Y+13
005e09 85be      	LDD  R27,Y+13+1
005e0a 940e a55a 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005e0c 01fa      	MOVW R30,R20
005e0d 9731      	SBIW R30,1
005e0e 0fe2      	ADD  R30,R18
005e0f 1ff3      	ADC  R31,R19
005e10 93ff      	PUSH R31
005e11 93ef      	PUSH R30
005e12 01f9      	MOVW R30,R18
005e13 9633      	ADIW R30,3
005e14 93fa      	ST   -Y,R31
005e15 93ea      	ST   -Y,R30
005e16 85ab      	LDD  R26,Y+11
005e17 85bc      	LDD  R27,Y+11+1
005e18 d038      	RCALL _ETH_checksum
005e19 91af      	POP  R26
005e1a 91bf      	POP  R27
005e1b 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005e1c 81ae      	LDD  R26,Y+6
005e1d 81bf      	LDD  R27,Y+6+1
005e1e 940e e0b8 	CALL __CPW02
005e20 f41c      	BRGE _0x1200D9
005e21 85a8      	LDD  R26,Y+8
005e22 3faf      	CPI  R26,LOW(0xFF)
005e23 f409      	BRNE _0x1200DA
                 _0x1200D9:
005e24 c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005e25 85e8      	LDD  R30,Y+8
005e26 93ea      	ST   -Y,R30
005e27 933a      	ST   -Y,R19
005e28 932a      	ST   -Y,R18
005e29 935a      	ST   -Y,R21
005e2a 934a      	ST   -Y,R20
005e2b 85ab      	LDD  R26,Y+11
005e2c 85bc      	LDD  R27,Y+11+1
005e2d 940e 69b9 	CALL _ETH_addWaitQueue
005e2f 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005e30 2311      	TST  R17
005e31 f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005e32 e1e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5007 ) )
005e33 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5007 ) )
005e34 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5007 ) )
005e35 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5007 ) )
                 	__POINTD1FN _0x120000,5007
005e36 940e e05b 	CALL __PUTPARD1
005e38 85ec      	LDD  R30,Y+12
005e39 940e c156 	CALL SUBOPT_0x29
                 ; 0009 0472             free(sendPacket);
005e3b 01d9      	MOVW R26,R18
005e3c 940e c240 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005e3e c00e      	RJMP _0x20E007D
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C //    printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 ; 0009 047D //    print_payload(sendPacket,packetLen);
                 ; 0009 047E     write_uart0(sendPacket,packetLen);
                 _0x1200D8:
005e3f 933a      	ST   -Y,R19
005e40 932a      	ST   -Y,R18
005e41 01da      	MOVW R26,R20
005e42 940e 40b5 	CALL _write_uart0
                 ; 0009 047F     free(sendPacket);
005e44 01d9      	MOVW R26,R18
005e45 940e a538 	CALL _free
                 ; 0009 0480 
                 ; 0009 0481     //printDebug("-- Completed --\r\n");
                 ; 0009 0482     delay_ms(7);
005e47 940e c085 	CALL SUBOPT_0xA
005e49 940e dcfc 	CALL _delay_ms
                 ; 0009 0483 
                 ; 0009 0484     return 0;
005e4b e0e0      	LDI  R30,LOW(0)
005e4c e0f0      	LDI  R31,HIGH(0)
                 _0x20E007D:
005e4d 940e e0d7 	CALL __LOADLOCR6
005e4f 962d      	ADIW R28,13
005e50 9508      	RET
                 ; 0009 0485 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0488 {
                 _ETH_checksum:
                 ; 0009 0489     int i;
                 ; 0009 048A     char sum = 0;
                 ; 0009 048B 
                 ; 0009 048C     //printDebug("<checksum> \r\n");
                 ; 0009 048D     for (i=0;i<len;i++){
005e51 940e c3a7 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005e53 e030      	LDI  R19,0
                +
005e54 e000     +LDI R16 , LOW ( 0 )
005e55 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005e56 81ec      	LDD  R30,Y+4
005e57 81fd      	LDD  R31,Y+4+1
005e58 170e      	CP   R16,R30
005e59 071f      	CPC  R17,R31
005e5a f43c      	BRGE _0x1200DE
                 ; 0009 048E         sum += buf[i];
005e5b 01f8      	MOVW R30,R16
005e5c 940e caab 	CALL SUBOPT_0x1A7
005e5e 0f3e      	ADD  R19,R30
                 ; 0009 048F         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0490     }
                +
005e5f 5f0f     +SUBI R16 , LOW ( - 1 )
005e60 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e61 cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0491     return (0xff - (sum & 0xff));
005e62 2fe3      	MOV  R30,R19
005e63 940e c471 	CALL SUBOPT_0x9B
005e65 efaf      	LDI  R26,LOW(255)
005e66 e0b0      	LDI  R27,HIGH(255)
005e67 940e e078 	CALL __SWAPW12
005e69 1bea      	SUB  R30,R26
005e6a 0bfb      	SBC  R31,R27
005e6b 940e e0d9 	CALL __LOADLOCR4
005e6d 9628      	ADIW R28,8
005e6e 9508      	RET
                 ; 0009 0492 
                 ; 0009 0493 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049C {
                 _ETH_switchMode:
                 ; 0009 049D     if(mode == MODE_CONF){
005e6f 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005e70 81e8      	LD   R30,Y
005e71 30e0      	CPI  R30,0
005e72 f451      	BRNE _0x1200DF
                 ; 0009 049E         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005e73 e4e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5058 ) )
005e74 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5058 ) )
005e75 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5058 ) )
005e76 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5058 ) )
                 	__POINTD1FN _0x120000,5058
005e77 940e c042 	CALL SUBOPT_0x3
                 ; 0009 049F         ETH_CONF;
005e79 91e0 0102 	LDS  R30,258
005e7b 68e0      	ORI  R30,0x80
005e7c c009      	RJMP _0x12011C
                 ; 0009 04A0     }
                 ; 0009 04A1     else{
                 _0x1200DF:
                 ; 0009 04A2         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005e7d e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 5099 ) )
005e7e e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5099 ) )
005e7f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5099 ) )
005e80 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5099 ) )
                 	__POINTD1FN _0x120000,5099
005e81 940e c042 	CALL SUBOPT_0x3
                 ; 0009 04A3         ETH_NORM;
005e83 91e0 0102 	LDS  R30,258
005e85 77ef      	ANDI R30,0x7F
                 _0x12011C:
005e86 93e0 0102 	STS  258,R30
                 ; 0009 04A4     }
                 ; 0009 04A5 
                 ; 0009 04A6     delay_ms(5);
005e88 940e c452 	CALL SUBOPT_0x97
                 ; 0009 04A7 
                 ; 0009 04A8     ETH_current_mode = mode;
005e8a 81e8      	LD   R30,Y
005e8b 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04A9 
                 ; 0009 04AA     delay_ms(5);
005e8d 940e c452 	CALL SUBOPT_0x97
                 ; 0009 04AB     ETH_OFF;
005e8f 98a4      	CBI  0x14,4
                 ; 0009 04AC     delay_ms(1500);
005e90 edac      	LDI  R26,LOW(1500)
005e91 e0b5      	LDI  R27,HIGH(1500)
005e92 940e dcfc 	CALL _delay_ms
                 ; 0009 04AD     ETH_ON;
005e94 9aa4      	SBI  0x14,4
                 ; 0009 04AE     #asm("wdr")
005e95 95a8      	wdr
                 ; 0009 04AF     delay_ms(2000);
005e96 eda0      	LDI  R26,LOW(2000)
005e97 e0b7      	LDI  R27,HIGH(2000)
005e98 940e dcfc 	CALL _delay_ms
                 ; 0009 04B0 
                 ; 0009 04B1     return ETH_MODE;
005e9a 91e0 0102 	LDS  R30,258
005e9c 78e0      	ANDI R30,LOW(0x80)
005e9d 9621      	ADIW R28,1
005e9e 9508      	RET
                 ; 0009 04B2 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B5 {
                 _ETH_getConfig:
                 ; 0009 04B6     TIMER   timeout;
                 ; 0009 04B7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B8     int     i=0;
                 ; 0009 04B9 
                 ; 0009 04BA     ETH_switchMode((unsigned char) MODE_CONF);
005e9f 93ba      	ST   -Y,R27
005ea0 93aa      	ST   -Y,R26
005ea1 9728      	SBIW R28,8
005ea2 e3ee      	LDI  R30,LOW(62)
005ea3 83e8      	ST   Y,R30
005ea4 e5e2      	LDI  R30,LOW(82)
005ea5 83e9      	STD  Y+1,R30
005ea6 e0ed      	LDI  R30,LOW(13)
005ea7 83ea      	STD  Y+2,R30
005ea8 e0e0      	LDI  R30,LOW(0)
005ea9 83eb      	STD  Y+3,R30
005eaa 940e c873 	CALL SUBOPT_0x14C
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005eac e0a0      	LDI  R26,LOW(0)
005ead dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BB     /*
                 ; 0009 04BC     if(mode != MODE_CONF){
                 ; 0009 04BD         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BE         return -1;
                 ; 0009 04BF     }
                 ; 0009 04C0     */
                 ; 0009 04C1 
                 ; 0009 04C2     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005eae e000     +LDI R16 , LOW ( 0 )
005eaf e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005eb0 3405     +CPI R16 , LOW ( 325 )
005eb1 e0e1     +LDI R30 , HIGH ( 325 )
005eb2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005eb3 f42c      	BRGE _0x1200E3
                 ; 0009 04C3         configRd[i] = 0x00;
005eb4 940e cab1 	CALL SUBOPT_0x1A8
                 ; 0009 04C4     }
                +
005eb6 5f0f     +SUBI R16 , LOW ( - 1 )
005eb7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005eb8 cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C5     configLen       = 0;
005eb9 940e c3a1 	CALL SUBOPT_0x7E
                 ; 0009 04C6     config_start    = 0;
005ebb 940e cab4 	CALL SUBOPT_0x1A9
                 ; 0009 04C7     config_ready    = 0;
                 ; 0009 04C8     config_end      = 0;
                 ; 0009 04C9     config_response = 0;
                 ; 0009 04CA 
                 ; 0009 04CB     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005ebd e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5140 ) )
005ebe e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5140 ) )
005ebf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5140 ) )
005ec0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5140 ) )
                 	__POINTD1FN _0x120000,5140
005ec1 940e c042 	CALL SUBOPT_0x3
                 ; 0009 04CC     for(i=0;i<strlen(getInfoCmd);i++){
                +
005ec3 e000     +LDI R16 , LOW ( 0 )
005ec4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005ec5 940e cabe 	CALL SUBOPT_0x1AA
005ec7 f440      	BRSH _0x1200E6
                 ; 0009 04CD         putchar3(getInfoCmd[i]);
005ec8 940e c7a5 	CALL SUBOPT_0x125
005eca 91ac      	LD   R26,X
005ecb 940e 4127 	CALL _putchar3
                 ; 0009 04CE     }
                +
005ecd 5f0f     +SUBI R16 , LOW ( - 1 )
005ece 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ecf cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04CF     printDebug("\r\n");
005ed0 940e cac5 	CALL SUBOPT_0x1AB
                 ; 0009 04D0 
                 ; 0009 04D1     for(i=0;i<strlen(getInfoCmd);i++){
                +
005ed2 e000     +LDI R16 , LOW ( 0 )
005ed3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005ed4 940e cabe 	CALL SUBOPT_0x1AA
005ed6 f440      	BRSH _0x1200E9
                 ; 0009 04D2         putchar0(getInfoCmd[i]);
005ed7 940e c7a5 	CALL SUBOPT_0x125
005ed9 91ac      	LD   R26,X
005eda 940e 405b 	CALL _putchar0
                 ; 0009 04D3     }
                +
005edc 5f0f     +SUBI R16 , LOW ( - 1 )
005edd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ede cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D4 
                 ; 0009 04D5     TIMER_setTimer(&timeout, 7);
005edf 940e c28d 	CALL SUBOPT_0x56
005ee1 940e cacb 	CALL SUBOPT_0x1AC
                 ; 0009 04D6 
                 ; 0009 04D7     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005ee3 91e0 10f1 	LDS  R30,_config_ready
005ee5 30e0      	CPI  R30,0
005ee6 f431      	BRNE _0x1200ED
005ee7 940e c2aa 	CALL SUBOPT_0x59
005ee9 940e 41a1 	CALL _TIMER_checkTimerExceed
005eeb 9730      	SBIW R30,0
005eec f009      	BREQ _0x1200EE
                 _0x1200ED:
005eed c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D8        delay_ms(50);
005eee 940e c37e 	CALL SUBOPT_0x7A
                 ; 0009 04D9        #asm("wdr")
005ef0 95a8      	wdr
                 ; 0009 04DA     }
005ef1 cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DB 
                 ; 0009 04DC     memcpy(ptr,&configRd[0],configLen);
005ef2 940e cad1 	CALL SUBOPT_0x1AD
005ef4 940e cad6 	CALL SUBOPT_0x1AE
                 ; 0009 04DD 
                 ; 0009 04DE     *buflen    = configLen;
005ef6 91e0 10ee 	LDS  R30,_configLen
005ef8 91f0 10ef 	LDS  R31,_configLen+1
005efa 85aa      	LDD  R26,Y+10
005efb 85bb      	LDD  R27,Y+10+1
005efc 93ed      	ST   X+,R30
005efd 93fc      	ST   X,R31
                 ; 0009 04DF 
                 ; 0009 04E0     ETH_switchMode(MODE_NORM);
005efe e8a0      	LDI  R26,LOW(128)
005eff df6f      	RCALL _ETH_switchMode
                 ; 0009 04E1 
                 ; 0009 04E2     /*
                 ; 0009 04E3     if(mode != MODE_NORM){
                 ; 0009 04E4         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E5         return -1;
                 ; 0009 04E6     }
                 ; 0009 04E7     */
                 ; 0009 04E8 
                 ; 0009 04E9     if(config_response == 'S'){
005f00 91a0 10f3 	LDS  R26,_config_response
005f02 35a3      	CPI  R26,LOW(0x53)
005f03 f419      	BRNE _0x1200EF
                 ; 0009 04EA         return 0;
005f04 e0e0      	LDI  R30,LOW(0)
005f05 e0f0      	LDI  R31,HIGH(0)
005f06 c002      	RJMP _0x20E007C
                 ; 0009 04EB     }
                 ; 0009 04EC     else{
                 _0x1200EF:
                 ; 0009 04ED         return -1;
005f07 efef      	LDI  R30,LOW(65535)
005f08 efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EE     }
                 ; 0009 04EF }
                 _0x20E007C:
005f09 8119      	LDD  R17,Y+1
005f0a 8108      	LDD  R16,Y+0
005f0b 962e      	ADIW R28,14
005f0c 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F2 {
                 _ETH_setConfig:
                 ; 0009 04F3     TIMER   timeout;
                 ; 0009 04F4     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F5     char    setInfoCmd[] = ">W";
                 ; 0009 04F6     int     i=0;
                 ; 0009 04F7     char    setStr[30];
                 ; 0009 04F8     int     readLen=0;
                 ; 0009 04F9     char    *ptr;
                 ; 0009 04FA 
                 ; 0009 04FB     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005f0d 93ba      	ST   -Y,R27
005f0e 93aa      	ST   -Y,R26
005f0f 97a9      	SBIW R28,41
005f10 e3ee      	LDI  R30,LOW(62)
005f11 8fee      	STD  Y+30,R30
005f12 e5e7      	LDI  R30,LOW(87)
005f13 8fef      	STD  Y+31,R30
005f14 e0e0      	LDI  R30,LOW(0)
005f15 a3e8      	STD  Y+32,R30
005f16 e3ee      	LDI  R30,LOW(62)
005f17 a3e9      	STD  Y+33,R30
005f18 e5e2      	LDI  R30,LOW(82)
005f19 a3ea      	STD  Y+34,R30
005f1a e0ed      	LDI  R30,LOW(13)
005f1b a3eb      	STD  Y+35,R30
005f1c e0e0      	LDI  R30,LOW(0)
005f1d a3ec      	STD  Y+36,R30
005f1e 940e c22b 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005f20 e020     +LDI R18 , LOW ( 0 )
005f21 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005f22 e4a5      	LDI  R26,LOW(325)
005f23 e0b1      	LDI  R27,HIGH(325)
005f24 940e c9ab 	CALL SUBOPT_0x179
                 ; 0009 04FC     if(ptr == NULL){
005f26 f449      	BRNE _0x1200F1
                 ; 0009 04FD         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005f27 ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5174 ) )
005f28 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5174 ) )
005f29 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5174 ) )
005f2a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5174 ) )
                 	__POINTD1FN _0x120000,5174
005f2b 940e c042 	CALL SUBOPT_0x3
                 ; 0009 04FE         return -1;
005f2d efef      	LDI  R30,LOW(65535)
005f2e efff      	LDI  R31,HIGH(65535)
005f2f c1c7      	RJMP _0x20E007B
                 ; 0009 04FF     }
                 ; 0009 0500 
                 ; 0009 0501     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005f30 e0a0      	LDI  R26,LOW(0)
005f31 df3d      	RCALL _ETH_switchMode
                 ; 0009 0502 
                 ; 0009 0503     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0504     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005f32 e000     +LDI R16 , LOW ( 0 )
005f33 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005f34 3405     +CPI R16 , LOW ( 325 )
005f35 e0e1     +LDI R30 , HIGH ( 325 )
005f36 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005f37 f42c      	BRGE _0x1200F4
                 ; 0009 0505         configRd[i] = 0x00;
005f38 940e cab1 	CALL SUBOPT_0x1A8
                 ; 0009 0506     }
                +
005f3a 5f0f     +SUBI R16 , LOW ( - 1 )
005f3b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f3c cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0507     configLen       = 0;
005f3d 940e c3a1 	CALL SUBOPT_0x7E
                 ; 0009 0508     config_start    = 0;
005f3f 940e cab4 	CALL SUBOPT_0x1A9
                 ; 0009 0509     config_ready    = 0;
                 ; 0009 050A     config_end      = 0;
                 ; 0009 050B     config_response = 0;
                 ; 0009 050C 
                 ; 0009 050D     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005f41 eeee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5224 ) )
005f42 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5224 ) )
005f43 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5224 ) )
005f44 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5224 ) )
                 	__POINTD1FN _0x120000,5224
005f45 940e c042 	CALL SUBOPT_0x3
                 ; 0009 050E     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f47 e000     +LDI R16 , LOW ( 0 )
005f48 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005f49 940e cadd 	CALL SUBOPT_0x1AF
005f4b f450      	BRSH _0x1200F7
                 ; 0009 050F         putchar3(getInfoCmd[i]);
005f4c 01de      	MOVW R26,R28
005f4d 9697      	ADIW R26,39
005f4e 0fa0      	ADD  R26,R16
005f4f 1fb1      	ADC  R27,R17
005f50 91ac      	LD   R26,X
005f51 940e 4127 	CALL _putchar3
                 ; 0009 0510     }
                +
005f53 5f0f     +SUBI R16 , LOW ( - 1 )
005f54 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f55 cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0511     printDebug("\r\n");
005f56 940e cac5 	CALL SUBOPT_0x1AB
                 ; 0009 0512 
                 ; 0009 0513     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f58 e000     +LDI R16 , LOW ( 0 )
005f59 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005f5a 940e cadd 	CALL SUBOPT_0x1AF
005f5c f450      	BRSH _0x1200FA
                 ; 0009 0514         putchar0(getInfoCmd[i]);
005f5d 01de      	MOVW R26,R28
005f5e 9697      	ADIW R26,39
005f5f 0fa0      	ADD  R26,R16
005f60 1fb1      	ADC  R27,R17
005f61 91ac      	LD   R26,X
005f62 940e 405b 	CALL _putchar0
                 ; 0009 0515     }
                +
005f64 5f0f     +SUBI R16 , LOW ( - 1 )
005f65 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f66 cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0516 
                 ; 0009 0517     TIMER_setTimer(&timeout, 7);
005f67 01fe      	MOVW R30,R28
005f68 96bb      	ADIW R30,43
005f69 93fa      	ST   -Y,R31
005f6a 93ea      	ST   -Y,R30
005f6b 940e cacb 	CALL SUBOPT_0x1AC
                 ; 0009 0518 
                 ; 0009 0519     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005f6d 91e0 10f1 	LDS  R30,_config_ready
005f6f 30e0      	CPI  R30,0
005f70 f419      	BRNE _0x1200FE
005f71 940e cae4 	CALL SUBOPT_0x1B0
005f73 f009      	BREQ _0x1200FF
                 _0x1200FE:
005f74 c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051A        delay_ms(50);
005f75 940e c37e 	CALL SUBOPT_0x7A
                 ; 0009 051B        #asm("wdr")
005f77 95a8      	wdr
                 ; 0009 051C     }
005f78 cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051D 
                 ; 0009 051E     memcpy(ptr,&configRd[0],configLen);
005f79 935a      	ST   -Y,R21
005f7a 934a      	ST   -Y,R20
005f7b 940e cad6 	CALL SUBOPT_0x1AE
                 ; 0009 051F     readLen = configLen;
                +
005f7d 9120 10ee+LDS R18 , 0 + ( _configLen )
005f7f 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0520 
                 ; 0009 0521     if(config_response != 'S'){
005f81 91a0 10f3 	LDS  R26,_config_response
005f83 35a3      	CPI  R26,LOW(0x53)
005f84 f051      	BREQ _0x120100
                 ; 0009 0522         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005f85 e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5258 ) )
005f86 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5258 ) )
005f87 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5258 ) )
005f88 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5258 ) )
                 	__POINTD1FN _0x120000,5258
005f89 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0523         free( ptr );
005f8b 01da      	MOVW R26,R20
005f8c 940e c240 	CALL SUBOPT_0x4A
                 ; 0009 0524         return -1;
005f8e c168      	RJMP _0x20E007B
                 ; 0009 0525     }
                 ; 0009 0526 
                 ; 0009 0527     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0528     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 0529                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052A                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052B                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052C                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052D                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052E                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 052F                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0530                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0531                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0532                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0533                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0534                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005f8f 940e c28d 	CALL SUBOPT_0x56
                +
005f91 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5311 ) )
005f92 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5311 ) )
005f93 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5311 ) )
005f94 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5311 ) )
                 	__POINTD1FN _0x120000,5311
005f95 940e e05b 	CALL __PUTPARD1
005f97 adab      	LDD  R26,Y+59
005f98 adbc      	LDD  R27,Y+59+1
005f99 940e caec 	CALL SUBOPT_0x1B1
005f9b adeb      	LDD  R30,Y+59
005f9c adfc      	LDD  R31,Y+59+1
005f9d 940e caf1 	CALL SUBOPT_0x1B2
005f9f adeb      	LDD  R30,Y+59
005fa0 adfc      	LDD  R31,Y+59+1
005fa1 940e caf9 	CALL SUBOPT_0x1B3
005fa3 940e cb02 	CALL SUBOPT_0x1B4
005fa5 940e cb09 	CALL SUBOPT_0x1B5
005fa7 940e cb02 	CALL SUBOPT_0x1B4
005fa9 940e cb0e 	CALL SUBOPT_0x1B6
005fab 940e cb02 	CALL SUBOPT_0x1B4
005fad 940e cb16 	CALL SUBOPT_0x1B7
005faf 940e cb1f 	CALL SUBOPT_0x1B8
005fb1 940e cb26 	CALL SUBOPT_0x1B9
005fb3 940e cb1f 	CALL SUBOPT_0x1B8
005fb5 940e cb2b 	CALL SUBOPT_0x1BA
005fb7 940e cb1f 	CALL SUBOPT_0x1B8
005fb9 940e ca8d 	CALL SUBOPT_0x1A1
005fbb 940e cb33 	CALL SUBOPT_0x1BB
005fbd 940e cb3a 	CALL SUBOPT_0x1BC
005fbf 940e cb41 	CALL SUBOPT_0x1BD
005fc1 940e cb3a 	CALL SUBOPT_0x1BC
005fc3 940e cb46 	CALL SUBOPT_0x1BE
005fc5 940e cb3a 	CALL SUBOPT_0x1BC
005fc7 940e cb4e 	CALL SUBOPT_0x1BF
                +
005fc9 01de     +MOVW R26 , R28
005fca 5ba7     +SUBI R26 , LOW ( - 73 )
005fcb 4fbf     +SBCI R27 , HIGH ( - 73 )
005fcc 900d     +LD R0 , X +
005fcd 91bc     +LD R27 , X
005fce 2da0     +MOV R26 , R0
                 	__GETW2SX 73
005fcf 940e caec 	CALL SUBOPT_0x1B1
005fd1 940e cb51 	CALL SUBOPT_0x1C0
005fd3 940e caf1 	CALL SUBOPT_0x1B2
005fd5 940e cb51 	CALL SUBOPT_0x1C0
005fd7 940e caf9 	CALL SUBOPT_0x1B3
005fd9 940e cb58 	CALL SUBOPT_0x1C1
005fdb 940e cb09 	CALL SUBOPT_0x1B5
005fdd 940e cb58 	CALL SUBOPT_0x1C1
005fdf 940e cb0e 	CALL SUBOPT_0x1B6
005fe1 940e cb58 	CALL SUBOPT_0x1C1
005fe3 940e cb16 	CALL SUBOPT_0x1B7
005fe5 940e cb5f 	CALL SUBOPT_0x1C2
005fe7 940e cb26 	CALL SUBOPT_0x1B9
005fe9 940e cb5f 	CALL SUBOPT_0x1C2
005feb 940e cb2b 	CALL SUBOPT_0x1BA
005fed 940e cb5f 	CALL SUBOPT_0x1C2
005fef 940e ca8d 	CALL SUBOPT_0x1A1
005ff1 940e cb33 	CALL SUBOPT_0x1BB
005ff3 940e cb66 	CALL SUBOPT_0x1C3
005ff5 940e cb41 	CALL SUBOPT_0x1BD
005ff7 940e cb66 	CALL SUBOPT_0x1C3
005ff9 940e cb46 	CALL SUBOPT_0x1BE
005ffb 940e cb66 	CALL SUBOPT_0x1C3
005ffd 940e cb4e 	CALL SUBOPT_0x1BF
                +
005fff 01de     +MOVW R26 , R28
006000 5aa9     +SUBI R26 , LOW ( - 87 )
006001 4fbf     +SBCI R27 , HIGH ( - 87 )
006002 900d     +LD R0 , X +
006003 91bc     +LD R27 , X
006004 2da0     +MOV R26 , R0
                 	__GETW2SX 87
006005 940e caec 	CALL SUBOPT_0x1B1
006007 940e cb6d 	CALL SUBOPT_0x1C4
006009 940e caf1 	CALL SUBOPT_0x1B2
00600b 940e cb6d 	CALL SUBOPT_0x1C4
00600d 940e caf9 	CALL SUBOPT_0x1B3
00600f 940e cb74 	CALL SUBOPT_0x1C5
006011 940e cb09 	CALL SUBOPT_0x1B5
006013 940e cb74 	CALL SUBOPT_0x1C5
006015 940e cb0e 	CALL SUBOPT_0x1B6
006017 940e cb74 	CALL SUBOPT_0x1C5
006019 940e cb16 	CALL SUBOPT_0x1B7
00601b 940e cb7b 	CALL SUBOPT_0x1C6
00601d 940e cb26 	CALL SUBOPT_0x1B9
00601f 940e cb7b 	CALL SUBOPT_0x1C6
006021 940e cb2b 	CALL SUBOPT_0x1BA
006023 940e cb7b 	CALL SUBOPT_0x1C6
006025 940e ca8d 	CALL SUBOPT_0x1A1
006027 940e cb33 	CALL SUBOPT_0x1BB
006029 940e cb82 	CALL SUBOPT_0x1C7
00602b 940e cb41 	CALL SUBOPT_0x1BD
00602d 940e cb82 	CALL SUBOPT_0x1C7
00602f 940e cb46 	CALL SUBOPT_0x1BE
006031 940e cb82 	CALL SUBOPT_0x1C7
006033 940e cb4e 	CALL SUBOPT_0x1BF
006035 e380      	LDI  R24,48
006036 940e bf54 	CALL _sprintf
006038 96e6      	ADIW R28,54
                 ; 0009 0535 
                 ; 0009 0536     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
006039 940e cb89 	CALL SUBOPT_0x1C8
00603b 940e c0b8 	CALL SUBOPT_0x12
                 ; 0009 0537 
                 ; 0009 0538     memcpy((ptr+14),&setStr[0],24);
00603d 01fa      	MOVW R30,R20
00603e 963e      	ADIW R30,14
00603f 940e cb93 	CALL SUBOPT_0x1C9
006041 e1a8      	LDI  R26,LOW(24)
006042 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 0009 0539 
                 ; 0009 053A     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053B                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053C                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053D                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053E                 (server[9]*100) + (server[10]*10) + server[11]);
006044 940e c28d 	CALL SUBOPT_0x56
                +
006046 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5343 ) )
006047 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5343 ) )
006048 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5343 ) )
006049 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5343 ) )
                 	__POINTD1FN _0x120000,5343
00604a 940e e05b 	CALL __PUTPARD1
00604c a9ad      	LDD  R26,Y+53
00604d a9be      	LDD  R27,Y+53+1
00604e 940e caec 	CALL SUBOPT_0x1B1
006050 a9ed      	LDD  R30,Y+53
006051 a9fe      	LDD  R31,Y+53+1
006052 940e caf1 	CALL SUBOPT_0x1B2
006054 a9ed      	LDD  R30,Y+53
006055 a9fe      	LDD  R31,Y+53+1
006056 940e caf9 	CALL SUBOPT_0x1B3
006058 ade9      	LDD  R30,Y+57
006059 adfa      	LDD  R31,Y+57+1
00605a 940e cb09 	CALL SUBOPT_0x1B5
00605c ade9      	LDD  R30,Y+57
00605d adfa      	LDD  R31,Y+57+1
00605e 940e cb0e 	CALL SUBOPT_0x1B6
006060 ade9      	LDD  R30,Y+57
006061 adfa      	LDD  R31,Y+57+1
006062 940e cb16 	CALL SUBOPT_0x1B7
006064 aded      	LDD  R30,Y+61
006065 adfe      	LDD  R31,Y+61+1
006066 940e cb26 	CALL SUBOPT_0x1B9
006068 aded      	LDD  R30,Y+61
006069 adfe      	LDD  R31,Y+61+1
00606a 940e cb2b 	CALL SUBOPT_0x1BA
00606c aded      	LDD  R30,Y+61
00606d adfe      	LDD  R31,Y+61+1
00606e 940e ca8d 	CALL SUBOPT_0x1A1
006070 940e cb33 	CALL SUBOPT_0x1BB
006072 940e cb9d 	CALL SUBOPT_0x1CB
006074 940e cb41 	CALL SUBOPT_0x1BD
006076 940e cb9d 	CALL SUBOPT_0x1CB
006078 940e cb46 	CALL SUBOPT_0x1BE
00607a 940e cb9d 	CALL SUBOPT_0x1CB
00607c 940e cb4e 	CALL SUBOPT_0x1BF
00607e e180      	LDI  R24,16
00607f 940e bf54 	CALL _sprintf
006081 9666      	ADIW R28,22
                 ; 0009 053F 
                 ; 0009 0540     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
006082 940e cb89 	CALL SUBOPT_0x1C8
006084 940e c0b8 	CALL SUBOPT_0x12
                 ; 0009 0541 
                 ; 0009 0542     memcpy((ptr+42),&setStr[0],8);
006086 01fa      	MOVW R30,R20
006087 96ba      	ADIW R30,42
006088 940e cb93 	CALL SUBOPT_0x1C9
00608a e0a8      	LDI  R26,LOW(8)
00608b 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 0009 0543 
                 ; 0009 0544 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0545 //    for(i=0;i<configLen;i++){
                 ; 0009 0546 //        putchar3(ptr[i]);
                 ; 0009 0547 //    }
                 ; 0009 0548 //    printDebug("\r\n\---\r\n");
                 ; 0009 0549 
                 ; 0009 054A     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054B     for(i=0;i<CONF_READ_BUFFER;i++){
                +
00608d e000     +LDI R16 , LOW ( 0 )
00608e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
00608f 3405     +CPI R16 , LOW ( 325 )
006090 e0e1     +LDI R30 , HIGH ( 325 )
006091 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
006092 f42c      	BRGE _0x120103
                 ; 0009 054C         configRd[i] = 0x00;
006093 940e cab1 	CALL SUBOPT_0x1A8
                 ; 0009 054D     }
                +
006095 5f0f     +SUBI R16 , LOW ( - 1 )
006096 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006097 cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054E     configLen       = 0;
006098 940e c3a1 	CALL SUBOPT_0x7E
                 ; 0009 054F     config_start    = 0;
00609a 940e cab4 	CALL SUBOPT_0x1A9
                 ; 0009 0550     config_ready    = 0;
                 ; 0009 0551     config_end      = 0;
                 ; 0009 0552     config_response = 0;
                 ; 0009 0553 
                 ; 0009 0554     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
00609c e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5394 ) )
00609d e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5394 ) )
00609e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5394 ) )
00609f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5394 ) )
                 	__POINTD1FN _0x120000,5394
0060a0 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0555     for(i=0;i<strlen(setInfoCmd);i++){
                +
0060a2 e000     +LDI R16 , LOW ( 0 )
0060a3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
0060a4 01de      	MOVW R26,R28
0060a5 9694      	ADIW R26,36
0060a6 940e a5e6 	CALL _strlen
0060a8 170e      	CP   R16,R30
0060a9 071f      	CPC  R17,R31
0060aa f488      	BRSH _0x120106
                 ; 0009 0556         putchar0(setInfoCmd[i]);
0060ab 01de      	MOVW R26,R28
0060ac 9694      	ADIW R26,36
0060ad 0fa0      	ADD  R26,R16
0060ae 1fb1      	ADC  R27,R17
0060af 91ac      	LD   R26,X
0060b0 940e 405b 	CALL _putchar0
                 ; 0009 0557         putchar3(setInfoCmd[i]);
0060b2 01de      	MOVW R26,R28
0060b3 9694      	ADIW R26,36
0060b4 0fa0      	ADD  R26,R16
0060b5 1fb1      	ADC  R27,R17
0060b6 91ac      	LD   R26,X
0060b7 940e 4127 	CALL _putchar3
                 ; 0009 0558     }
                +
0060b9 5f0f     +SUBI R16 , LOW ( - 1 )
0060ba 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060bb cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 0559     for(i=12;i<readLen;i++){
                +
0060bc e00c     +LDI R16 , LOW ( 12 )
0060bd e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
0060be 1702     +CP R16 , R18
0060bf 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
0060c0 f47c      	BRGE _0x120109
                 ; 0009 055A         putchar0(ptr[i]);
0060c1 01f8      	MOVW R30,R16
0060c2 0fe4      	ADD  R30,R20
0060c3 1ff5      	ADC  R31,R21
0060c4 81a0      	LD   R26,Z
0060c5 940e 405b 	CALL _putchar0
                 ; 0009 055B         putchar3(ptr[i]);
0060c7 01f8      	MOVW R30,R16
0060c8 0fe4      	ADD  R30,R20
0060c9 1ff5      	ADC  R31,R21
0060ca 81a0      	LD   R26,Z
0060cb 940e 4127 	CALL _putchar3
                 ; 0009 055C     }
                +
0060cd 5f0f     +SUBI R16 , LOW ( - 1 )
0060ce 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060cf cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055D     putchar0('\r');
0060d0 e0ad      	LDI  R26,LOW(13)
0060d1 940e 405b 	CALL _putchar0
                 ; 0009 055E     printDebug("\r\n\---\r\n");
                +
0060d3 ebea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5428 ) )
0060d4 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5428 ) )
0060d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5428 ) )
0060d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5428 ) )
                 	__POINTD1FN _0x120000,5428
0060d7 940e c042 	CALL SUBOPT_0x3
                 ; 0009 055F 
                 ; 0009 0560     TIMER_setTimer(&timeout, 10);
0060d9 01fe      	MOVW R30,R28
0060da 96bb      	ADIW R30,43
0060db 940e c145 	CALL SUBOPT_0x27
                 ; 0009 0561 
                 ; 0009 0562     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
0060dd 91e0 10f1 	LDS  R30,_config_ready
0060df 30e0      	CPI  R30,0
0060e0 f419      	BRNE _0x12010D
0060e1 940e cae4 	CALL SUBOPT_0x1B0
0060e3 f009      	BREQ _0x12010E
                 _0x12010D:
0060e4 c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0563        delay_ms(50);
0060e5 940e c37e 	CALL SUBOPT_0x7A
                 ; 0009 0564        #asm("wdr")
0060e7 95a8      	wdr
                 ; 0009 0565     }
0060e8 cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0566 
                 ; 0009 0567     ETH_switchMode(MODE_NORM);
0060e9 e8a0      	LDI  R26,LOW(128)
0060ea dd84      	RCALL _ETH_switchMode
                 ; 0009 0568 
                 ; 0009 0569     free( ptr );
0060eb 01da      	MOVW R26,R20
0060ec 940e a538 	CALL _free
                 ; 0009 056A 
                 ; 0009 056B     if(config_response == 'S'){
0060ee 91a0 10f3 	LDS  R26,_config_response
0060f0 35a3      	CPI  R26,LOW(0x53)
0060f1 f419      	BRNE _0x12010F
                 ; 0009 056C         return 0;
0060f2 e0e0      	LDI  R30,LOW(0)
0060f3 e0f0      	LDI  R31,HIGH(0)
0060f4 c002      	RJMP _0x20E007B
                 ; 0009 056D     }
                 ; 0009 056E     else{
                 _0x12010F:
                 ; 0009 056F         return -1;
0060f5 efef      	LDI  R30,LOW(65535)
0060f6 efff      	LDI  R31,HIGH(65535)
                 ; 0009 0570     }
                 ; 0009 0571 }
                 _0x20E007B:
0060f7 940e e0d7 	CALL __LOADLOCR6
0060f9 96e7      	ADIW R28,55
0060fa 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0574 {
                 _ETH_reset:
                 ; 0009 0575     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
0060fb ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 5436 ) )
0060fc e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5436 ) )
0060fd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5436 ) )
0060fe e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5436 ) )
                 	__POINTD1FN _0x120000,5436
0060ff 940e c042 	CALL SUBOPT_0x3
                 ; 0009 0576     ETH_RESET   = 0;
006101 9872      	CBI  0xE,2
                 ; 0009 0577     delay_ms(3000);
006102 eba8      	LDI  R26,LOW(3000)
006103 e0bb      	LDI  R27,HIGH(3000)
006104 940e dcfc 	CALL _delay_ms
                 ; 0009 0578     ETH_RESET   = 1;
006106 9a72      	SBI  0xE,2
                 ; 0009 0579     delay_ms(1);
006107 940e c36c 	CALL SUBOPT_0x75
006109 940e dcfc 	CALL _delay_ms
                 ; 0009 057A     printDebug("...Done\r\n");
                +
00610b efe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5488 ) )
00610c e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5488 ) )
00610d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5488 ) )
00610e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5488 ) )
                 	__POINTD1FN _0x120000,5488
00610f 940e c042 	CALL SUBOPT_0x3
                 ; 0009 057B }
006111 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
006112 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006114 940e cba4 	CALL SUBOPT_0x1CC
                 _0x140004:
                +
006116 3008     +CPI R16 , LOW ( 8 )
006117 e0e0     +LDI R30 , HIGH ( 8 )
006118 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006119 f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
00611a 940e cba9 	CALL SUBOPT_0x1CD
00611c 81ac      	LDD  R26,Y+4
00611d 81bd      	LDD  R27,Y+4+1
00611e 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
00611f 5f0f     +SUBI R16 , LOW ( - 1 )
006120 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006121 cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
006122 940e cba9 	CALL SUBOPT_0x1CD
006124 940e cbb2 	CALL SUBOPT_0x1CE
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
006126 940e c471 	CALL SUBOPT_0x9B
006128 2ffe      	MOV  R31,R30
006129 e0e0      	LDI  R30,0
00612a 010f      	MOVW R0,R30
00612b 940e cba9 	CALL SUBOPT_0x1CD
00612d 940e c471 	CALL SUBOPT_0x9B
00612f 29e0      	OR   R30,R0
006130 29f1      	OR   R31,R1
006131 940e cbb7 	CALL SUBOPT_0x1CF
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
006133 85a0      	LDD  R26,Z+8
006134 33a0      	CPI  R26,LOW(0x30)
006135 f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
006136 c1a9      	RJMP _0x20E007A
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
006137 81ee      	LDD  R30,Y+6
006138 81ff      	LDD  R31,Y+6+1
006139 1be2      	SUB  R30,R18
00613a 0bf3      	SBC  R31,R19
                +
00613b 81ac     +LDD R26 , Y + 4
00613c 81bd     +LDD R27 , Y + 4 + 1
00613d 961b     +ADIW R26 , 11
00613e 93ed     +ST X + , R30
00613f 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
006140 81ec      	LDD  R30,Y+4
006141 81fd      	LDD  R31,Y+4+1
006142 85a3      	LDD  R26,Z+11
006143 85b4      	LDD  R27,Z+12
006144 940e cbbf 	CALL SUBOPT_0x1D0
                +
006146 81ac     +LDD R26 , Y + 4
006147 81bd     +LDD R27 , Y + 4 + 1
006148 961d     +ADIW R26 , 13
006149 93ed     +ST X + , R30
00614a 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
00614b 81ac      	LDD  R26,Y+4
00614c 81bd      	LDD  R27,Y+4+1
00614d 961d      	ADIW R26,13
00614e 940e e027 	CALL __GETW1P
006150 9730      	SBIW R30,0
006151 f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
006152 e0e0     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
006153 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
006154 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
006155 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
006156 940e c042 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
006158 efef      	LDI  R30,LOW(65535)
006159 efff      	LDI  R31,HIGH(65535)
00615a c187      	RJMP _0x20E0079
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
00615b e000     +LDI R16 , LOW ( 0 )
00615c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
00615d 81ac      	LDD  R26,Y+4
00615e 81bd      	LDD  R27,Y+4+1
00615f 961b      	ADIW R26,11
006160 940e cbc6 	CALL SUBOPT_0x1D1
006162 f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
006163 81ec      	LDD  R30,Y+4
006164 81fd      	LDD  R31,Y+4+1
006165 85a5      	LDD  R26,Z+13
006166 85b6      	LDD  R27,Z+14
006167 940e cbcb 	CALL SUBOPT_0x1D2
006169 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
00616a 5f0f     +SUBI R16 , LOW ( - 1 )
00616b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00616c cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
00616d c172      	RJMP _0x20E007A
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
00616e 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
006170 e020     +LDI R18 , LOW ( 0 )
006171 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006172 e2e6     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
006173 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
006174 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
006175 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
006176 940e c042 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
006178 940e ca3b 	CALL SUBOPT_0x192
00617a 85a8      	LDD  R26,Y+8
00617b 85b9      	LDD  R27,Y+8+1
00617c 940e 9ea8 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
00617e e000     +LDI R16 , LOW ( 0 )
00617f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
006180 3008     +CPI R16 , LOW ( 8 )
006181 e0e0     +LDI R30 , HIGH ( 8 )
006182 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006183 f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
006184 940e cba9 	CALL SUBOPT_0x1CD
006186 81ac      	LDD  R26,Y+4
006187 81bd      	LDD  R27,Y+4+1
006188 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
006189 5f0f     +SUBI R16 , LOW ( - 1 )
00618a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00618b cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
00618c 940e cba9 	CALL SUBOPT_0x1CD
00618e 940e cbb2 	CALL SUBOPT_0x1CE
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
006190 81ac     +LDD R26 , Y + 4
006191 81bd     +LDD R27 , Y + 4 + 1
006192 9619     +ADIW R26 , 9
006193 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
006194 81ec      	LDD  R30,Y+4
006195 81fd      	LDD  R31,Y+4+1
006196 85a0      	LDD  R26,Z+8
006197 31a0      	CPI  R26,LOW(0x10)
006198 f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
006199 e3ed     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
00619a e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
00619b e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
00619c e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
00619d 940e c042 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
00619f 81ac      	LDD  R26,Y+4
0061a0 81bd      	LDD  R27,Y+4+1
0061a1 961a      	ADIW R26,10
0061a2 940e c737 	CALL SUBOPT_0x113
                 ; 000A 0048         st->confSpec    =   NULL;
0061a4 81ac      	LDD  R26,Y+4
0061a5 81bd      	LDD  R27,Y+4+1
0061a6 961c      	ADIW R26,12
0061a7 940e c737 	CALL SUBOPT_0x113
                 ; 000A 0049         return 0;
0061a9 c136      	RJMP _0x20E007A
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
0061aa e5ec     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
0061ab e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
0061ac e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
0061ad e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
0061ae 940e c042 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
0061b0 81ee      	LDD  R30,Y+6
0061b1 81ff      	LDD  R31,Y+6+1
0061b2 1be2      	SUB  R30,R18
0061b3 0bf3      	SBC  R31,R19
                +
0061b4 81ac     +LDD R26 , Y + 4
0061b5 81bd     +LDD R27 , Y + 4 + 1
0061b6 961a     +ADIW R26 , 10
0061b7 93ed     +ST X + , R30
0061b8 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
0061b9 e7eb     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
0061ba e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
0061bb e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
0061bc e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
0061bd 940e e05b 	CALL __PUTPARD1
0061bf 85a8      	LDD  R26,Y+8
0061c0 85b9      	LDD  R27,Y+8+1
0061c1 961a      	ADIW R26,10
0061c2 940e c10c 	CALL SUBOPT_0x1E
0061c4 940e ca12 	CALL SUBOPT_0x189
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
0061c6 81ec      	LDD  R30,Y+4
0061c7 81fd      	LDD  R31,Y+4+1
0061c8 85a2      	LDD  R26,Z+10
0061c9 85b3      	LDD  R27,Z+11
0061ca 940e cbbf 	CALL SUBOPT_0x1D0
                +
0061cc 81ac     +LDD R26 , Y + 4
0061cd 81bd     +LDD R27 , Y + 4 + 1
0061ce 961c     +ADIW R26 , 12
0061cf 93ed     +ST X + , R30
0061d0 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
0061d1 81ac      	LDD  R26,Y+4
0061d2 81bd      	LDD  R27,Y+4+1
0061d3 961c      	ADIW R26,12
0061d4 940e e027 	CALL __GETW1P
0061d6 9730      	SBIW R30,0
0061d7 f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
0061d8 e9ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
0061d9 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
0061da e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
0061db e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
0061dc 940e c042 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
0061de efef      	LDI  R30,LOW(65535)
0061df efff      	LDI  R31,HIGH(65535)
0061e0 c101      	RJMP _0x20E0079
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
0061e1 e000     +LDI R16 , LOW ( 0 )
0061e2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
0061e3 81ac      	LDD  R26,Y+4
0061e4 81bd      	LDD  R27,Y+4+1
0061e5 961a      	ADIW R26,10
0061e6 940e cbc6 	CALL SUBOPT_0x1D1
0061e8 f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
0061e9 81ec      	LDD  R30,Y+4
0061ea 81fd      	LDD  R31,Y+4+1
0061eb 85a4      	LDD  R26,Z+12
0061ec 85b5      	LDD  R27,Z+13
0061ed 940e cbcb 	CALL SUBOPT_0x1D2
0061ef 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
0061f0 5f0f     +SUBI R16 , LOW ( - 1 )
0061f1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0061f2 cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
0061f3 c0ec      	RJMP _0x20E007A
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
0061f4 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0061f6 940e cba4 	CALL SUBOPT_0x1CC
                 _0x140014:
                +
0061f8 3008     +CPI R16 , LOW ( 8 )
0061f9 e0e0     +LDI R30 , HIGH ( 8 )
0061fa 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0061fb f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
0061fc 940e cba9 	CALL SUBOPT_0x1CD
0061fe 81ac      	LDD  R26,Y+4
0061ff 81bd      	LDD  R27,Y+4+1
006200 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
006201 5f0f     +SUBI R16 , LOW ( - 1 )
006202 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006203 cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
006204 940e cba9 	CALL SUBOPT_0x1CD
006206 940e cbd5 	CALL SUBOPT_0x1D3
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
006208 81ae      	LDD  R26,Y+6
006209 81bf      	LDD  R27,Y+6+1
00620a 9717      	SBIW R26,7
00620b f414      	BRGE PC+3
00620c 940c 627b 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
00620e 940e cba9 	CALL SUBOPT_0x1CD
006210 940e cbda 	CALL SUBOPT_0x1D4
006212 940e cbe2 	CALL SUBOPT_0x1D5
006214 937f      	PUSH R23
006215 936f      	PUSH R22
006216 93ff      	PUSH R31
006217 93ef      	PUSH R30
006218 940e cba9 	CALL SUBOPT_0x1CD
00621a 940e cbda 	CALL SUBOPT_0x1D4
00621c 940e df2d 	CALL __LSLD16
00621e 91af      	POP  R26
00621f 91bf      	POP  R27
006220 918f      	POP  R24
006221 919f      	POP  R25
006222 940e decc 	CALL __ORD12
006224 937f      	PUSH R23
006225 936f      	PUSH R22
006226 93ff      	PUSH R31
006227 93ef      	PUSH R30
006228 940e cba9 	CALL SUBOPT_0x1CD
00622a 940e cbda 	CALL SUBOPT_0x1D4
00622c 940e cbe8 	CALL SUBOPT_0x1D6
00622e 91af      	POP  R26
00622f 91bf      	POP  R27
006230 918f      	POP  R24
006231 919f      	POP  R25
006232 940e decc 	CALL __ORD12
006234 937f      	PUSH R23
006235 936f      	PUSH R22
006236 93ff      	PUSH R31
006237 93ef      	PUSH R30
006238 940e cba9 	CALL SUBOPT_0x1CD
00623a 940e cbda 	CALL SUBOPT_0x1D4
00623c 91af      	POP  R26
00623d 91bf      	POP  R27
00623e 918f      	POP  R24
00623f 919f      	POP  R25
006240 940e cbee 	CALL SUBOPT_0x1D7
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
006242 940e cba9 	CALL SUBOPT_0x1CD
006244 940e cbda 	CALL SUBOPT_0x1D4
006246 940e cbe2 	CALL SUBOPT_0x1D5
006248 937f      	PUSH R23
006249 936f      	PUSH R22
00624a 93ff      	PUSH R31
00624b 93ef      	PUSH R30
00624c 940e cba9 	CALL SUBOPT_0x1CD
00624e 940e cbda 	CALL SUBOPT_0x1D4
006250 940e df2d 	CALL __LSLD16
006252 91af      	POP  R26
006253 91bf      	POP  R27
006254 918f      	POP  R24
006255 919f      	POP  R25
006256 940e decc 	CALL __ORD12
006258 937f      	PUSH R23
006259 936f      	PUSH R22
00625a 93ff      	PUSH R31
00625b 93ef      	PUSH R30
00625c 940e cba9 	CALL SUBOPT_0x1CD
00625e 940e cbda 	CALL SUBOPT_0x1D4
006260 940e cbe8 	CALL SUBOPT_0x1D6
006262 91af      	POP  R26
006263 91bf      	POP  R27
006264 918f      	POP  R24
006265 919f      	POP  R25
006266 940e decc 	CALL __ORD12
006268 937f      	PUSH R23
006269 936f      	PUSH R22
00626a 93ff      	PUSH R31
00626b 93ef      	PUSH R30
00626c 940e cba9 	CALL SUBOPT_0x1CD
00626e 940e cbda 	CALL SUBOPT_0x1D4
006270 91af      	POP  R26
006271 91bf      	POP  R27
006272 918f      	POP  R24
006273 919f      	POP  R25
006274 940e decc 	CALL __ORD12
                +
006276 81ac     +LDD R26 , Y + 4
006277 81bd     +LDD R27 , Y + 4 + 1
006278 961d     +ADIW R26 , 13
006279 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
00627b c064      	RJMP _0x20E007A
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
00627c 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00627e 940e cba4 	CALL SUBOPT_0x1CC
                 _0x140018:
                +
006280 3008     +CPI R16 , LOW ( 8 )
006281 e0e0     +LDI R30 , HIGH ( 8 )
006282 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006283 f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
006284 940e cbf6 	CALL SUBOPT_0x1D8
006286 81ac      	LDD  R26,Y+4
006287 81bd      	LDD  R27,Y+4+1
006288 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
006289 5f0f     +SUBI R16 , LOW ( - 1 )
00628a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00628b cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
00628c c0b2      	RJMP _0x20E0078
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
00628d 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00628f 940e cba4 	CALL SUBOPT_0x1CC
                 _0x14001B:
                +
006291 3008     +CPI R16 , LOW ( 8 )
006292 e0e0     +LDI R30 , HIGH ( 8 )
006293 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006294 f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
006295 940e cba9 	CALL SUBOPT_0x1CD
006297 81ac      	LDD  R26,Y+4
006298 81bd      	LDD  R27,Y+4+1
006299 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
00629a 5f0f     +SUBI R16 , LOW ( - 1 )
00629b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00629c cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
00629d 940e cba9 	CALL SUBOPT_0x1CD
00629f 940e cbd5 	CALL SUBOPT_0x1D3
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
0062a1 81ee      	LDD  R30,Y+6
0062a2 81ff      	LDD  R31,Y+6+1
0062a3 9732      	SBIW R30,2
0062a4 940e cbb7 	CALL SUBOPT_0x1CF
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
0062a6 940e ca84 	CALL SUBOPT_0x19F
0062a8 f5b8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
0062a9 81ec      	LDD  R30,Y+4
0062aa 81fd      	LDD  R31,Y+4+1
0062ab 85a1      	LDD  R26,Z+9
0062ac 85b2      	LDD  R27,Z+10
0062ad 940e cbbf 	CALL SUBOPT_0x1D0
                +
0062af 81ac     +LDD R26 , Y + 4
0062b0 81bd     +LDD R27 , Y + 4 + 1
0062b1 961b     +ADIW R26 , 11
0062b2 93ed     +ST X + , R30
0062b3 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
0062b4 81ac      	LDD  R26,Y+4
0062b5 81bd      	LDD  R27,Y+4+1
0062b6 961b      	ADIW R26,11
0062b7 940e e027 	CALL __GETW1P
0062b9 9730      	SBIW R30,0
0062ba f499      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
0062bb ece4     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
0062bc e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
0062bd e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
0062be e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
0062bf 940e cbfa 	CALL SUBOPT_0x1D9
0062c1 85a1      	LDD  R26,Z+9
0062c2 85b2      	LDD  R27,Z+10
0062c3 e0e1      	LDI  R30,LOW(1)
0062c4 e0f0      	LDI  R31,HIGH(1)
0062c5 940e df51 	CALL __MULW12U
0062c7 940e c1a4 	CALL SUBOPT_0x34
0062c9 940e c0b8 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
0062cb efef      	LDI  R30,LOW(65535)
0062cc efff      	LDI  R31,HIGH(65535)
0062cd c014      	RJMP _0x20E0079
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
0062ce e000     +LDI R16 , LOW ( 0 )
0062cf e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
0062d0 81ac      	LDD  R26,Y+4
0062d1 81bd      	LDD  R27,Y+4+1
0062d2 9619      	ADIW R26,9
0062d3 940e cbc6 	CALL SUBOPT_0x1D1
0062d5 f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
0062d6 81ec      	LDD  R30,Y+4
0062d7 81fd      	LDD  R31,Y+4+1
0062d8 85a3      	LDD  R26,Z+11
0062d9 85b4      	LDD  R27,Z+12
0062da 940e cbcb 	CALL SUBOPT_0x1D2
0062dc 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
0062dd 5f0f     +SUBI R16 , LOW ( - 1 )
0062de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062df cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E007A:
0062e0 e0e0      	LDI  R30,LOW(0)
0062e1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0079:
0062e2 940e e0d9 	CALL __LOADLOCR4
0062e4 962a      	ADIW R28,10
0062e5 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
0062e6 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0062e8 940e cba4 	CALL SUBOPT_0x1CC
                 _0x140023:
                +
0062ea 3008     +CPI R16 , LOW ( 8 )
0062eb e0e0     +LDI R30 , HIGH ( 8 )
0062ec 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0062ed f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
0062ee 940e cbf6 	CALL SUBOPT_0x1D8
0062f0 81ac      	LDD  R26,Y+4
0062f1 81bd      	LDD  R27,Y+4+1
0062f2 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
0062f3 5f0f     +SUBI R16 , LOW ( - 1 )
0062f4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062f5 cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
0062f6 940e cbf6 	CALL SUBOPT_0x1D8
0062f8 940e cbd5 	CALL SUBOPT_0x1D3
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
0062fa 940e cbf6 	CALL SUBOPT_0x1D8
0062fc 940e cbda 	CALL SUBOPT_0x1D4
0062fe 940e cbe2 	CALL SUBOPT_0x1D5
006300 937f      	PUSH R23
006301 936f      	PUSH R22
006302 93ff      	PUSH R31
006303 93ef      	PUSH R30
006304 940e cbf6 	CALL SUBOPT_0x1D8
006306 940e cbda 	CALL SUBOPT_0x1D4
006308 940e df2d 	CALL __LSLD16
00630a 91af      	POP  R26
00630b 91bf      	POP  R27
00630c 918f      	POP  R24
00630d 919f      	POP  R25
00630e 940e decc 	CALL __ORD12
006310 937f      	PUSH R23
006311 936f      	PUSH R22
006312 93ff      	PUSH R31
006313 93ef      	PUSH R30
006314 940e cbf6 	CALL SUBOPT_0x1D8
006316 940e cbda 	CALL SUBOPT_0x1D4
006318 940e cbe8 	CALL SUBOPT_0x1D6
00631a 91af      	POP  R26
00631b 91bf      	POP  R27
00631c 918f      	POP  R24
00631d 919f      	POP  R25
00631e 940e decc 	CALL __ORD12
006320 937f      	PUSH R23
006321 936f      	PUSH R22
006322 93ff      	PUSH R31
006323 93ef      	PUSH R30
006324 940e cbf6 	CALL SUBOPT_0x1D8
006326 940e cbda 	CALL SUBOPT_0x1D4
006328 91af      	POP  R26
006329 91bf      	POP  R27
00632a 918f      	POP  R24
00632b 919f      	POP  R25
00632c 940e cbee 	CALL SUBOPT_0x1D7
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
00632e c01d      	RJMP _0x20E0077
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
00632f 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006331 940e cba4 	CALL SUBOPT_0x1CC
                 _0x140026:
                +
006333 3008     +CPI R16 , LOW ( 8 )
006334 e0e0     +LDI R30 , HIGH ( 8 )
006335 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006336 f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
006337 940e cbf6 	CALL SUBOPT_0x1D8
006339 81ac      	LDD  R26,Y+4
00633a 81bd      	LDD  R27,Y+4+1
00633b 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
00633c 5f0f     +SUBI R16 , LOW ( - 1 )
00633d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00633e cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0078:
00633f 01f9      	MOVW R30,R18
                +
006340 5f2f     +SUBI R18 , LOW ( - 1 )
006341 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006342 940e caab 	CALL SUBOPT_0x1A7
006344 940e cbd5 	CALL SUBOPT_0x1D3
                 ; 000A 00CB     st->status      =   pkt[k++];
006346 940e cbf6 	CALL SUBOPT_0x1D8
                +
006348 81ac     +LDD R26 , Y + 4
006349 81bd     +LDD R27 , Y + 4 + 1
00634a 9619     +ADIW R26 , 9
00634b 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0077:
00634c e0e0      	LDI  R30,LOW(0)
00634d e0f0      	LDI  R31,HIGH(0)
00634e 940e e0d9 	CALL __LOADLOCR4
006350 9628      	ADIW R28,8
006351 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
006352 940e c439 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
006354 85a5      	LDD  R26,Z+13
006355 85b6      	LDD  R27,Z+14
006356 940e a538 	CALL _free
                 ; 000A 00D3 }
006358 c05e      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
006359 940e c439 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
00635b 85a4      	LDD  R26,Z+12
00635c 85b5      	LDD  R27,Z+13
00635d 940e a538 	CALL _free
                 ; 000A 00D8 }
00635f c057      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
006360 940e c439 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
006362 85a3      	LDD  R26,Z+11
006363 85b4      	LDD  R27,Z+12
006364 940e a538 	CALL _free
                 ; 000A 00DD }
006366 c050      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
006367 93aa      	ST   -Y,R26
006368 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
006369 81e9      	LDD  R30,Y+1
00636a 7fe0      	ANDI R30,LOW(0xF0)
00636b 2f1e      	MOV  R17,R30
00636c 2fe1      	MOV  R30,R17
00636d 940e c230 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
00636f f419      	BRNE _0x160006
006370 eae1      	LDI  R30,LOW(161)
006371 e0f0      	LDI  R31,HIGH(161)
006372 c043      	RJMP _0x20E0075
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
006373 32e0      	CPI  R30,LOW(0x20)
006374 e0a0      	LDI  R26,HIGH(0x20)
006375 07fa      	CPC  R31,R26
006376 f419      	BRNE _0x160007
006377 e0e8      	LDI  R30,LOW(8)
006378 e0f0      	LDI  R31,HIGH(8)
006379 c03c      	RJMP _0x20E0075
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
00637a 33e0      	CPI  R30,LOW(0x30)
00637b e0a0      	LDI  R26,HIGH(0x30)
00637c 07fa      	CPC  R31,R26
00637d f419      	BRNE _0x160008
00637e e1ed      	LDI  R30,LOW(29)
00637f e0f0      	LDI  R31,HIGH(29)
006380 c035      	RJMP _0x20E0075
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
006381 34e0      	CPI  R30,LOW(0x40)
006382 e0a0      	LDI  R26,HIGH(0x40)
006383 07fa      	CPC  R31,R26
006384 f419      	BRNE _0x160009
006385 e0e3      	LDI  R30,LOW(3)
006386 e0f0      	LDI  R31,HIGH(3)
006387 c02e      	RJMP _0x20E0075
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
006388 35e0      	CPI  R30,LOW(0x50)
006389 e0a0      	LDI  R26,HIGH(0x50)
00638a 07fa      	CPC  R31,R26
00638b f419      	BRNE _0x16000A
00638c e2e6      	LDI  R30,LOW(38)
00638d e0f0      	LDI  R31,HIGH(38)
00638e c027      	RJMP _0x20E0075
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
00638f 36e0      	CPI  R30,LOW(0x60)
006390 e0a0      	LDI  R26,HIGH(0x60)
006391 07fa      	CPC  R31,R26
006392 f419      	BRNE _0x16000B
006393 e0e5      	LDI  R30,LOW(5)
006394 e0f0      	LDI  R31,HIGH(5)
006395 c020      	RJMP _0x20E0075
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
006396 37e0      	CPI  R30,LOW(0x70)
006397 e0a0      	LDI  R26,HIGH(0x70)
006398 07fa      	CPC  R31,R26
006399 f419      	BRNE _0x16000C
00639a e2e9      	LDI  R30,LOW(41)
00639b e0f0      	LDI  R31,HIGH(41)
00639c c019      	RJMP _0x20E0075
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
00639d 38e0      	CPI  R30,LOW(0x80)
00639e e0a0      	LDI  R26,HIGH(0x80)
00639f 07fa      	CPC  R31,R26
0063a0 f419      	BRNE _0x16000D
0063a1 e2e5      	LDI  R30,LOW(37)
0063a2 e0f0      	LDI  R31,HIGH(37)
0063a3 c012      	RJMP _0x20E0075
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
0063a4 39e0      	CPI  R30,LOW(0x90)
0063a5 e0a0      	LDI  R26,HIGH(0x90)
0063a6 07fa      	CPC  R31,R26
0063a7 f419      	BRNE _0x16000F
0063a8 e1e2      	LDI  R30,LOW(18)
0063a9 e0f0      	LDI  R31,HIGH(18)
0063aa c00b      	RJMP _0x20E0075
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
0063ab efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
0063ac e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
0063ad e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
0063ae e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
0063af 940e e05b 	CALL __PUTPARD1
0063b1 2fe1      	MOV  R30,R17
0063b2 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0018                                     return -1;
0063b4 efef      	LDI  R30,LOW(65535)
0063b5 efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0075:
0063b6 8118      	LDD  R17,Y+0
                 _0x20E0076:
0063b7 9622      	ADIW R28,2
0063b8 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
0063b9 940e cbff 	CALL SUBOPT_0x1DA
0063bb 940e c22b 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
0063bd e020     +LDI R18 , LOW ( 0 )
0063be e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0063bf e050      	LDI  R21,0
0063c0 85ec      	LDD  R30,Y+12
0063c1 7fe0      	ANDI R30,LOW(0xF0)
0063c2 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
0063c3 2fe5      	MOV  R30,R21
0063c4 940e c230 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
0063c6 f011      	BREQ PC+3
0063c7 940c 6437 	JMP _0x160013
0063c9 940e c692 	CALL SUBOPT_0xF7
0063cb 940e cc02 	CALL SUBOPT_0x1DB
                 ; 000B 0029                                     if(cnfgStrc == NULL){
0063cd f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
0063ce e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
0063cf e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
0063d0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
0063d1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
0063d2 940e e05b 	CALL __PUTPARD1
                +
0063d4 eae1     +LDI R30 , LOW ( 0xA1 )
0063d5 e0f0     +LDI R31 , HIGH ( 0xA1 )
0063d6 e060     +LDI R22 , BYTE3 ( 0xA1 )
0063d7 e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
0063d8 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 002B                                         return -2;
0063da efee      	LDI  R30,LOW(65534)
0063db efff      	LDI  R31,HIGH(65534)
0063dc c408      	RJMP _0x20E0074
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
0063dd 81ae      	LDD  R26,Y+6
0063de 81bf      	LDD  R27,Y+6+1
0063df 940e 4910 	CALL _getPropertiesConfig
0063e1 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
0063e2 2333      	TST  R19
0063e3 f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
0063e4 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
0063e5 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
0063e6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
0063e7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
0063e8 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
0063ea 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0032                                         return -3;
0063ec efed      	LDI  R30,LOW(65533)
0063ed efff      	LDI  R31,HIGH(65533)
0063ee c3f6      	RJMP _0x20E0074
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
0063ef e8ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
0063f0 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
0063f1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
0063f2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
0063f3 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
0063f5 940e cc08 	CALL SUBOPT_0x1DC
0063f7 940e c1a4 	CALL SUBOPT_0x34
0063f9 940e c0b8 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
0063fb 940e cc08 	CALL SUBOPT_0x1DC
0063fd 9674      	ADIW R30,20
0063fe 940e c1a4 	CALL SUBOPT_0x34
006400 940e c0b8 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
006402 940e cc08 	CALL SUBOPT_0x1DC
006404 96b8      	ADIW R30,40
006405 940e c1a4 	CALL SUBOPT_0x34
006407 940e c0b8 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
006409 940e cc08 	CALL SUBOPT_0x1DC
00640b 5be0      	SUBI R30,LOW(-80)
00640c 4fff      	SBCI R31,HIGH(-80)
00640d 940e c1a4 	CALL SUBOPT_0x34
00640f 940e c0b8 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
006411 940e cc08 	CALL SUBOPT_0x1DC
006413 59ec      	SUBI R30,LOW(-100)
006414 4fff      	SBCI R31,HIGH(-100)
006415 940e c1a4 	CALL SUBOPT_0x34
006417 940e c0b8 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
006419 940e cc08 	CALL SUBOPT_0x1DC
00641b 57e4      	SUBI R30,LOW(-140)
00641c 4fff      	SBCI R31,HIGH(-140)
00641d 940e c1a4 	CALL SUBOPT_0x34
00641f 940e c0b8 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
006421 ebe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
006422 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
006423 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
006424 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
006425 940e c7af 	CALL SUBOPT_0x127
006427 56a0      	SUBI R26,LOW(-160)
006428 4fbf      	SBCI R27,HIGH(-160)
006429 91ec      	LD   R30,X
00642a 940e df32 	CALL __CBD1
00642c 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
00642e 940e cc0d 	CALL SUBOPT_0x1DD
006430 940e c692 	CALL SUBOPT_0xF7
006432 940e cc12 	CALL SUBOPT_0x1DE
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
006434 eae1      	LDI  R30,LOW(161)
006435 e0f0      	LDI  R31,HIGH(161)
006436 c3ae      	RJMP _0x20E0074
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
006437 32e0      	CPI  R30,LOW(0x20)
006438 e0a0      	LDI  R26,HIGH(0x20)
006439 07fa      	CPC  R31,R26
00643a f011      	BREQ PC+3
00643b 940c 64a4 	JMP _0x160016
00643d 940e cc15 	CALL SUBOPT_0x1DF
00643f 940e cc02 	CALL SUBOPT_0x1DB
                 ; 000B 004A                                     if(cnfgStrc == NULL){
006441 f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
006442 ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
006443 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
006444 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
006445 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
006446 940e e05b 	CALL __PUTPARD1
                +
006448 e0e8     +LDI R30 , LOW ( 0x8 )
006449 e0f0     +LDI R31 , HIGH ( 0x8 )
00644a e060     +LDI R22 , BYTE3 ( 0x8 )
00644b e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
00644c 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 004C                                         return -2;
00644e efee      	LDI  R30,LOW(65534)
00644f efff      	LDI  R31,HIGH(65534)
006450 c394      	RJMP _0x20E0074
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
006451 81ae      	LDD  R26,Y+6
006452 81bf      	LDD  R27,Y+6+1
006453 940e 49a5 	CALL _getOperatingConfig
006455 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
006456 2333      	TST  R19
006457 f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
006458 eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
006459 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
00645a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
00645b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
00645c 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
00645e 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0053                                         return -3;
006460 efed      	LDI  R30,LOW(65533)
006461 efff      	LDI  R31,HIGH(65533)
006462 c382      	RJMP _0x20E0074
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
006463 e1ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
006464 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
006465 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
006466 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
006467 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
006469 e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
00646a e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
00646b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
00646c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
00646d 940e c7af 	CALL SUBOPT_0x127
00646f 91ec      	LD   R30,X
006470 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
006472 e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
006473 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
006474 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
006475 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
006476 940e c7b4 	CALL SUBOPT_0x128
006478 81e1      	LDD  R30,Z+1
006479 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
00647b 940e cc18 	CALL SUBOPT_0x1E0
00647d 81e2      	LDD  R30,Z+2
00647e 940e c156 	CALL SUBOPT_0x29
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
006480 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
006481 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
006482 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
006483 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
006484 940e c042 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
006486 e000     +LDI R16 , LOW ( 0 )
006487 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
006488 3005     +CPI R16 , LOW ( 5 )
006489 e0e0     +LDI R30 , HIGH ( 5 )
00648a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00648b f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
00648c 940e cc1d 	CALL SUBOPT_0x1E1
00648e 940e c6ef 	CALL SUBOPT_0x106
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
006490 e0e4      	LDI  R30,LOW(4)
006491 e0f0      	LDI  R31,HIGH(4)
006492 17e0      	CP   R30,R16
006493 07f1      	CPC  R31,R17
006494 f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
006495 940e cc22 	CALL SUBOPT_0x1E2
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
006497 5f0f     +SUBI R16 , LOW ( - 1 )
006498 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006499 cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
00649a 940e cc0d 	CALL SUBOPT_0x1DD
00649c e0a8      	LDI  R26,LOW(8)
00649d 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
00649f 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
0064a1 e0e8      	LDI  R30,LOW(8)
0064a2 e0f0      	LDI  R31,HIGH(8)
0064a3 c341      	RJMP _0x20E0074
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
0064a4 33e0      	CPI  R30,LOW(0x30)
0064a5 e0a0      	LDI  R26,HIGH(0x30)
0064a6 07fa      	CPC  R31,R26
0064a7 f011      	BREQ PC+3
0064a8 940c 6565 	JMP _0x16001D
0064aa 940e cc28 	CALL SUBOPT_0x1E3
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
0064ac e1ad      	LDI  R26,LOW(29)
0064ad 940e cc2f 	CALL SUBOPT_0x1E4
                 ; 000B 0070                                     if(cnfgStrc == NULL){
0064af f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
0064b0 eae3     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
0064b1 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
0064b2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
0064b3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
0064b4 940e e05b 	CALL __PUTPARD1
                +
0064b6 e1ed     +LDI R30 , LOW ( 0x1D )
0064b7 e0f0     +LDI R31 , HIGH ( 0x1D )
0064b8 e060     +LDI R22 , BYTE3 ( 0x1D )
0064b9 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
0064ba 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0072                                         return -2;
0064bc efee      	LDI  R30,LOW(65534)
0064bd efff      	LDI  R31,HIGH(65534)
0064be c326      	RJMP _0x20E0074
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
0064bf 940e ca3b 	CALL SUBOPT_0x192
0064c1 85a8      	LDD  R26,Y+8
0064c2 85b9      	LDD  R27,Y+8+1
0064c3 940e 4a13 	CALL _getSensorConfig
0064c5 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
0064c6 2333      	TST  R19
0064c7 f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
0064c8 ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
0064c9 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
0064ca e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
0064cb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
0064cc 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
0064ce 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0079                                         return -3;
0064d0 efed      	LDI  R30,LOW(65533)
0064d1 efff      	LDI  R31,HIGH(65533)
0064d2 c312      	RJMP _0x20E0074
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
0064d3 e0e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
0064d4 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
0064d5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
0064d6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
0064d7 940e cc31 	CALL SUBOPT_0x1E5
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
0064d9 e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
0064da e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
0064db e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
0064dc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
0064dd 940e c7af 	CALL SUBOPT_0x127
0064df 940e c10c 	CALL SUBOPT_0x1E
0064e1 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
0064e3 e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
0064e4 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
0064e5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
0064e6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
0064e7 940e c7af 	CALL SUBOPT_0x127
0064e9 9612      	ADIW R26,2
0064ea 940e c10c 	CALL SUBOPT_0x1E
0064ec 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
0064ee e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
0064ef e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
0064f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
0064f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
0064f2 940e c7b4 	CALL SUBOPT_0x128
0064f4 81e4      	LDD  R30,Z+4
0064f5 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
0064f7 e6ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
0064f8 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
0064f9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
0064fa e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
0064fb 940e c7b4 	CALL SUBOPT_0x128
0064fd 81e5      	LDD  R30,Z+5
0064fe 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
006500 e8e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
006501 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
006502 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
006503 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
006504 940e c7b4 	CALL SUBOPT_0x128
006506 81e6      	LDD  R30,Z+6
006507 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
006509 e9e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
00650a e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
00650b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
00650c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
00650d 940e c7b4 	CALL SUBOPT_0x128
00650f 81e7      	LDD  R30,Z+7
006510 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
006512 940e cc18 	CALL SUBOPT_0x1E0
006514 85e0      	LDD  R30,Z+8
006515 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
006517 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
006518 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
006519 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
00651a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
00651b 940e c7b4 	CALL SUBOPT_0x128
00651d 940e ca6a 	CALL SUBOPT_0x19A
00651f 940e ca66 	CALL SUBOPT_0x199
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
006521 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
006522 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
006523 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
006524 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
006525 940e c7af 	CALL SUBOPT_0x127
006527 961d      	ADIW R26,13
006528 940e c10c 	CALL SUBOPT_0x1E
00652a 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
00652c eded     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
00652d e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
00652e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
00652f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
006530 940e c7b4 	CALL SUBOPT_0x128
                +
006532 85a7     +LDD R26 , Z + 15
006533 89b0     +LDD R27 , Z + 15 + 1
006534 8981     +LDD R24 , Z + 15 + 2
006535 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
006536 940e ca66 	CALL SUBOPT_0x199
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
006538 efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
006539 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
00653a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
00653b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
00653c 940e c7b4 	CALL SUBOPT_0x128
                +
00653e 89a3     +LDD R26 , Z + 19
00653f 89b4     +LDD R27 , Z + 19 + 1
006540 8985     +LDD R24 , Z + 19 + 2
006541 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
006542 940e ca66 	CALL SUBOPT_0x199
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
006544 e0eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
006545 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
006546 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
006547 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
006548 940e c7af 	CALL SUBOPT_0x127
00654a 9657      	ADIW R26,23
00654b 940e c10c 	CALL SUBOPT_0x1E
00654d 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
00654f e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
006550 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
006551 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
006552 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
006553 940e c7b4 	CALL SUBOPT_0x128
                +
006555 8da1     +LDD R26 , Z + 25
006556 8db2     +LDD R27 , Z + 25 + 1
006557 8d83     +LDD R24 , Z + 25 + 2
006558 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
006559 940e ca66 	CALL SUBOPT_0x199
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
00655b 940e cc0d 	CALL SUBOPT_0x1DD
00655d e1ad      	LDI  R26,LOW(29)
00655e 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
006560 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
006562 e1ed      	LDI  R30,LOW(29)
006563 e0f0      	LDI  R31,HIGH(29)
006564 c280      	RJMP _0x20E0074
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
006565 34e0      	CPI  R30,LOW(0x40)
006566 e0a0      	LDI  R26,HIGH(0x40)
006567 07fa      	CPC  R31,R26
006568 f011      	BREQ PC+3
006569 940c 65ae 	JMP _0x160020
00656b 940e cc28 	CALL SUBOPT_0x1E3
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
00656d 940e c36f 	CALL SUBOPT_0x76
00656f 940e cc02 	CALL SUBOPT_0x1DB
                 ; 000B 0099                                     if(cnfgStrc == NULL){
006571 f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
006572 e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
006573 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
006574 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
006575 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
006576 940e cc36 	CALL SUBOPT_0x1E6
                 ; 000B 009B                                         return -2;
006578 efee      	LDI  R30,LOW(65534)
006579 efff      	LDI  R31,HIGH(65534)
00657a c26a      	RJMP _0x20E0074
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
00657b 940e ca3b 	CALL SUBOPT_0x192
00657d 85a8      	LDD  R26,Y+8
00657e 85b9      	LDD  R27,Y+8+1
00657f 940e 4afb 	CALL _getAuxDinConfig
006581 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
006582 2333      	TST  R19
006583 f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
006584 e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
006585 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
006586 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
006587 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
006588 940e c042 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
00658a 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 00A2                                         return -3;
00658c efed      	LDI  R30,LOW(65533)
00658d efff      	LDI  R31,HIGH(65533)
00658e c256      	RJMP _0x20E0074
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
00658f e9e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
006590 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
006591 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
006592 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
006593 940e cc31 	CALL SUBOPT_0x1E5
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
006595 940e cc3d 	CALL SUBOPT_0x1E7
006597 91ec      	LD   R30,X
006598 940e c156 	CALL SUBOPT_0x29
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
00659a ede1     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
00659b e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
00659c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
00659d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
00659e 940e c7af 	CALL SUBOPT_0x127
0065a0 9611      	ADIW R26,1
0065a1 940e c10c 	CALL SUBOPT_0x1E
0065a3 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
0065a5 940e cc0d 	CALL SUBOPT_0x1DD
0065a7 940e c36f 	CALL SUBOPT_0x76
0065a9 940e cc12 	CALL SUBOPT_0x1DE
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
0065ab e0e3      	LDI  R30,LOW(3)
0065ac e0f0      	LDI  R31,HIGH(3)
0065ad c237      	RJMP _0x20E0074
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
0065ae 35e0      	CPI  R30,LOW(0x50)
0065af e0a0      	LDI  R26,HIGH(0x50)
0065b0 07fa      	CPC  R31,R26
0065b1 f011      	BREQ PC+3
0065b2 940c 6614 	JMP _0x160023
0065b4 940e cc28 	CALL SUBOPT_0x1E3
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
0065b6 e2a6      	LDI  R26,LOW(38)
0065b7 940e cc2f 	CALL SUBOPT_0x1E4
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
0065b9 f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
0065ba eee9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
0065bb e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
0065bc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
0065bd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
0065be 940e e05b 	CALL __PUTPARD1
                +
0065c0 e2e6     +LDI R30 , LOW ( 0x26 )
0065c1 e0f0     +LDI R31 , HIGH ( 0x26 )
0065c2 e060     +LDI R22 , BYTE3 ( 0x26 )
0065c3 e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
0065c4 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 00B9                                         return -2;
0065c6 efee      	LDI  R30,LOW(65534)
0065c7 efff      	LDI  R31,HIGH(65534)
0065c8 c21c      	RJMP _0x20E0074
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
0065c9 940e ca3b 	CALL SUBOPT_0x192
0065cb 85a8      	LDD  R26,Y+8
0065cc 85b9      	LDD  R27,Y+8+1
0065cd 940e 4b31 	CALL _getAuxDoutConfig
0065cf 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
0065d0 2333      	TST  R19
0065d1 f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
0065d2 e1ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
0065d3 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
0065d4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
0065d5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
0065d6 940e c042 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
0065d8 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 00C0                                         return -3;
0065da efed      	LDI  R30,LOW(65533)
0065db efff      	LDI  R31,HIGH(65533)
0065dc c208      	RJMP _0x20E0074
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
0065dd e4e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
0065de e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
0065df e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
0065e0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
0065e1 940e cc31 	CALL SUBOPT_0x1E5
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
0065e3 940e cc42 	CALL SUBOPT_0x1E8
0065e5 91ec      	LD   R30,X
0065e6 940e c156 	CALL SUBOPT_0x29
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
0065e8 e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
0065e9 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
0065ea e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
0065eb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
0065ec 940e c7b4 	CALL SUBOPT_0x128
0065ee 81e1      	LDD  R30,Z+1
0065ef 940e c156 	CALL SUBOPT_0x29
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
0065f1 940e cc47 	CALL SUBOPT_0x1E9
0065f3 81e2      	LDD  R30,Z+2
0065f4 940e c156 	CALL SUBOPT_0x29
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
0065f6 940e cc4c 	CALL SUBOPT_0x1EA
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0065f8 e000     +LDI R16 , LOW ( 0 )
0065f9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
0065fa 3203     +CPI R16 , LOW ( 35 )
0065fb e0e0     +LDI R30 , HIGH ( 35 )
0065fc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0065fd f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
0065fe 940e cc1d 	CALL SUBOPT_0x1E1
006600 940e c6ef 	CALL SUBOPT_0x106
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
006602 940e cc52 	CALL SUBOPT_0x1EB
006604 f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
006605 940e cc22 	CALL SUBOPT_0x1E2
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
006607 5f0f     +SUBI R16 , LOW ( - 1 )
006608 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006609 cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
00660a 940e cc0d 	CALL SUBOPT_0x1DD
00660c e2a6      	LDI  R26,LOW(38)
00660d 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
00660f 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
006611 e2e6      	LDI  R30,LOW(38)
006612 e0f0      	LDI  R31,HIGH(38)
006613 c1d1      	RJMP _0x20E0074
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
006614 36e0      	CPI  R30,LOW(0x60)
006615 e0a0      	LDI  R26,HIGH(0x60)
006616 07fa      	CPC  R31,R26
006617 f011      	BREQ PC+3
006618 940c 6660 	JMP _0x16002A
00661a 940e cc28 	CALL SUBOPT_0x1E3
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
00661c e0a5      	LDI  R26,LOW(5)
00661d 940e cc2f 	CALL SUBOPT_0x1E4
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
00661f f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
006620 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
006621 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
006622 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
006623 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
006624 940e e05b 	CALL __PUTPARD1
                +
006626 e0e5     +LDI R30 , LOW ( 0x5 )
006627 e0f0     +LDI R31 , HIGH ( 0x5 )
006628 e060     +LDI R22 , BYTE3 ( 0x5 )
006629 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
00662a 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 00E0                                         return -2;
00662c efee      	LDI  R30,LOW(65534)
00662d efff      	LDI  R31,HIGH(65534)
00662e c1b6      	RJMP _0x20E0074
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
00662f 940e ca3b 	CALL SUBOPT_0x192
006631 85a8      	LDD  R26,Y+8
006632 85b9      	LDD  R27,Y+8+1
006633 940e 4bcb 	CALL _getAuxAinConfig
006635 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
006636 2333      	TST  R19
006637 f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
006638 efec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
006639 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
00663a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
00663b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
00663c 940e c042 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
00663e 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 00E7                                         return -3;
006640 efed      	LDI  R30,LOW(65533)
006641 efff      	LDI  R31,HIGH(65533)
006642 c1a2      	RJMP _0x20E0074
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
006643 e2e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
006644 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
006645 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
006646 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
006647 940e cc31 	CALL SUBOPT_0x1E5
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
006649 940e cc3d 	CALL SUBOPT_0x1E7
00664b 91ec      	LD   R30,X
00664c 940e c156 	CALL SUBOPT_0x29
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
00664e e4e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
00664f e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
006650 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
006651 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
006652 940e c7b4 	CALL SUBOPT_0x128
006654 940e cc57 	CALL SUBOPT_0x1EC
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
006656 940e cc0d 	CALL SUBOPT_0x1DD
006658 e0a5      	LDI  R26,LOW(5)
006659 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
00665b 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
00665d e0e5      	LDI  R30,LOW(5)
00665e e0f0      	LDI  R31,HIGH(5)
00665f c185      	RJMP _0x20E0074
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
006660 37e0      	CPI  R30,LOW(0x70)
006661 e0a0      	LDI  R26,HIGH(0x70)
006662 07fa      	CPC  R31,R26
006663 f011      	BREQ PC+3
006664 940c 66c9 	JMP _0x16002D
006666 940e cc28 	CALL SUBOPT_0x1E3
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
006668 e2a9      	LDI  R26,LOW(41)
006669 940e cc2f 	CALL SUBOPT_0x1E4
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
00666b f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
00666c e5ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
00666d e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
00666e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
00666f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
006670 940e e05b 	CALL __PUTPARD1
                +
006672 e2e9     +LDI R30 , LOW ( 0x29 )
006673 e0f0     +LDI R31 , HIGH ( 0x29 )
006674 e060     +LDI R22 , BYTE3 ( 0x29 )
006675 e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
006676 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 00FE                                         return -2;
006678 efee      	LDI  R30,LOW(65534)
006679 efff      	LDI  R31,HIGH(65534)
00667a c16a      	RJMP _0x20E0074
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
00667b 940e ca3b 	CALL SUBOPT_0x192
00667d 85a8      	LDD  R26,Y+8
00667e 85b9      	LDD  R27,Y+8+1
00667f 940e 4c06 	CALL _getAuxAoutConfig
006681 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
006682 2333      	TST  R19
006683 f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
006684 e9e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
006685 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
006686 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
006687 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
006688 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
00668a 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0105                                         return -3;
00668c efed      	LDI  R30,LOW(65533)
00668d efff      	LDI  R31,HIGH(65533)
00668e c156      	RJMP _0x20E0074
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
00668f ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
006690 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
006691 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
006692 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
006693 940e cc31 	CALL SUBOPT_0x1E5
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
006695 940e cc42 	CALL SUBOPT_0x1E8
006697 91ec      	LD   R30,X
006698 940e c156 	CALL SUBOPT_0x29
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
00669a ede9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
00669b e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
00669c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
00669d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
00669e 940e c7b4 	CALL SUBOPT_0x128
0066a0 940e cc57 	CALL SUBOPT_0x1EC
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
0066a2 940e cc47 	CALL SUBOPT_0x1E9
0066a4 81e5      	LDD  R30,Z+5
0066a5 940e c156 	CALL SUBOPT_0x29
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
0066a7 940e cc4c 	CALL SUBOPT_0x1EA
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0066a9 e000     +LDI R16 , LOW ( 0 )
0066aa e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
0066ab 3203     +CPI R16 , LOW ( 35 )
0066ac e0e0     +LDI R30 , HIGH ( 35 )
0066ad 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0066ae f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
0066af 940e cc1d 	CALL SUBOPT_0x1E1
0066b1 9636      	ADIW R30,6
0066b2 0fe0      	ADD  R30,R16
0066b3 1ff1      	ADC  R31,R17
0066b4 81e0      	LD   R30,Z
0066b5 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
0066b7 940e cc52 	CALL SUBOPT_0x1EB
0066b9 f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
0066ba 940e cc22 	CALL SUBOPT_0x1E2
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
0066bc 5f0f     +SUBI R16 , LOW ( - 1 )
0066bd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0066be cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
0066bf 940e cc0d 	CALL SUBOPT_0x1DD
0066c1 e2a9      	LDI  R26,LOW(41)
0066c2 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
0066c4 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
0066c6 e2e9      	LDI  R30,LOW(41)
0066c7 e0f0      	LDI  R31,HIGH(41)
0066c8 c11c      	RJMP _0x20E0074
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
0066c9 38e0      	CPI  R30,LOW(0x80)
0066ca e0a0      	LDI  R26,HIGH(0x80)
0066cb 07fa      	CPC  R31,R26
0066cc f011      	BREQ PC+3
0066cd 940c 6728 	JMP _0x160034
0066cf e2a5      	LDI  R26,LOW(37)
0066d0 940e cc2f 	CALL SUBOPT_0x1E4
                 ; 000B 0121                                     if(cnfgStrc == NULL){
0066d2 f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
0066d3 efe2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
0066d4 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
0066d5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
0066d6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
0066d7 940e e05b 	CALL __PUTPARD1
                +
0066d9 e2e5     +LDI R30 , LOW ( 0x25 )
0066da e0f0     +LDI R31 , HIGH ( 0x25 )
0066db e060     +LDI R22 , BYTE3 ( 0x25 )
0066dc e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
0066dd 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0123                                         return -2;
0066df efee      	LDI  R30,LOW(65534)
0066e0 efff      	LDI  R31,HIGH(65534)
0066e1 c103      	RJMP _0x20E0074
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
0066e2 81ae      	LDD  R26,Y+6
0066e3 81bf      	LDD  R27,Y+6+1
0066e4 940e 4c8b 	CALL _getBuzzerConfig
0066e6 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
0066e7 2333      	TST  R19
0066e8 f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
0066e9 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
0066ea e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
0066eb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
0066ec e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
0066ed 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
0066ef 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 012A                                         return -3;
0066f1 efed      	LDI  R30,LOW(65533)
0066f2 efff      	LDI  R31,HIGH(65533)
0066f3 c0f1      	RJMP _0x20E0074
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
0066f4 e4ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
0066f5 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
0066f6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
0066f7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
0066f8 940e c042 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
0066fa e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
0066fb e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
0066fc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
0066fd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
0066fe 940e c7af 	CALL SUBOPT_0x127
006700 91ec      	LD   R30,X
006701 940e c156 	CALL SUBOPT_0x29
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
006703 940e cc47 	CALL SUBOPT_0x1E9
006705 81e1      	LDD  R30,Z+1
006706 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
006708 940e cc4c 	CALL SUBOPT_0x1EA
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
00670a e000     +LDI R16 , LOW ( 0 )
00670b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
00670c 3203     +CPI R16 , LOW ( 35 )
00670d e0e0     +LDI R30 , HIGH ( 35 )
00670e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00670f f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
006710 940e cc1d 	CALL SUBOPT_0x1E1
006712 940e c7be 	CALL SUBOPT_0x12A
006714 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
006716 940e cc52 	CALL SUBOPT_0x1EB
006718 f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
006719 940e cc22 	CALL SUBOPT_0x1E2
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
00671b 5f0f     +SUBI R16 , LOW ( - 1 )
00671c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00671d cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
00671e 940e cc0d 	CALL SUBOPT_0x1DD
006720 e2a5      	LDI  R26,LOW(37)
006721 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
006723 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
006725 e2e5      	LDI  R30,LOW(37)
006726 e0f0      	LDI  R31,HIGH(37)
006727 c0bd      	RJMP _0x20E0074
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
006728 39e0      	CPI  R30,LOW(0x90)
006729 e0a0      	LDI  R26,HIGH(0x90)
00672a 07fa      	CPC  R31,R26
00672b f011      	BREQ PC+3
00672c 940c 6798 	JMP _0x16003B
00672e e1a2      	LDI  R26,LOW(18)
00672f 940e cc2f 	CALL SUBOPT_0x1E4
                 ; 000B 0145                                     if(cnfgStrc == NULL){
006731 f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
006732 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
006733 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
006734 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
006735 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
006736 940e e05b 	CALL __PUTPARD1
                +
006738 e1e2     +LDI R30 , LOW ( 0x12 )
006739 e0f0     +LDI R31 , HIGH ( 0x12 )
00673a e060     +LDI R22 , BYTE3 ( 0x12 )
00673b e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
00673c 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0147                                         return -2;
00673e efee      	LDI  R30,LOW(65534)
00673f efff      	LDI  R31,HIGH(65534)
006740 c0a4      	RJMP _0x20E0074
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
006741 81ae      	LDD  R26,Y+6
006742 81bf      	LDD  R27,Y+6+1
006743 940e 4d22 	CALL _getEnvAlarmConfig
006745 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
006746 2333      	TST  R19
006747 f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
006748 ece0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
006749 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
00674a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
00674b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
00674c 940e c042 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
00674e 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 014E                                         return -3;
006750 efed      	LDI  R30,LOW(65533)
006751 efff      	LDI  R31,HIGH(65533)
006752 c092      	RJMP _0x20E0074
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
006753 eeea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
006754 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
006755 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
006756 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
006757 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
006759 e0e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
00675a e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
00675b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
00675c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
00675d 940e c7af 	CALL SUBOPT_0x127
00675f 940e c7c8 	CALL SUBOPT_0x12C
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
006761 e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
006762 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
006763 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
006764 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
006765 940e c7af 	CALL SUBOPT_0x127
006767 9614      	ADIW R26,4
006768 940e c7cd 	CALL SUBOPT_0x12D
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
00676a e3eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
00676b e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
00676c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
00676d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
00676e 940e c7b4 	CALL SUBOPT_0x128
006770 940e c7d5 	CALL SUBOPT_0x12F
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
006772 e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
006773 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
006774 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
006775 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
006776 940e c7b4 	CALL SUBOPT_0x128
006778 940e c7dc 	CALL SUBOPT_0x130
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
00677a e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
00677b e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
00677c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
00677d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
00677e 940e c7af 	CALL SUBOPT_0x127
006780 961e      	ADIW R26,14
006781 940e c7cd 	CALL SUBOPT_0x12D
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
006783 e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
006784 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
006785 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
006786 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
006787 940e c7af 	CALL SUBOPT_0x127
006789 9650      	ADIW R26,16
00678a 940e c10c 	CALL SUBOPT_0x1E
00678c 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
00678e 940e cc0d 	CALL SUBOPT_0x1DD
006790 e1a2      	LDI  R26,LOW(18)
006791 940e cb9a 	CALL SUBOPT_0x1CA
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
006793 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
006795 e1e2      	LDI  R30,LOW(18)
006796 e0f0      	LDI  R31,HIGH(18)
006797 c04d      	RJMP _0x20E0074
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
006798 3ae0      	CPI  R30,LOW(0xA0)
006799 e0a0      	LDI  R26,HIGH(0xA0)
00679a 07fa      	CPC  R31,R26
00679b f011      	BREQ PC+3
00679c 940c 67de 	JMP _0x160041
00679e 940e c36f 	CALL SUBOPT_0x76
0067a0 940e cc02 	CALL SUBOPT_0x1DB
                 ; 000B 0164                                     if(cnfgStrc == NULL){
0067a2 f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
0067a3 e9ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
0067a4 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
0067a5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
0067a6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
0067a7 940e cc36 	CALL SUBOPT_0x1E6
                 ; 000B 0166                                         return -2;
0067a9 efee      	LDI  R30,LOW(65534)
0067aa efff      	LDI  R31,HIGH(65534)
0067ab c039      	RJMP _0x20E0074
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
0067ac 81ae      	LDD  R26,Y+6
0067ad 81bf      	LDD  R27,Y+6+1
0067ae 940e 4db5 	CALL _getStatusReportConfig
0067b0 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
0067b1 2333      	TST  R19
0067b2 f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
0067b3 ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
0067b4 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
0067b5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
0067b6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
0067b7 940e c042 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
0067b9 940e c8ef 	CALL SUBOPT_0x15D
                 ; 000B 016D                                         return -3;
0067bb efed      	LDI  R30,LOW(65533)
0067bc efff      	LDI  R31,HIGH(65533)
0067bd c027      	RJMP _0x20E0074
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
0067be e0e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
0067bf e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
0067c0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
0067c1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
0067c2 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
0067c4 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
0067c5 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
0067c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
0067c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
0067c8 940e c7af 	CALL SUBOPT_0x127
0067ca 91ec      	LD   R30,X
0067cb 940e c156 	CALL SUBOPT_0x29
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
0067cd e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
0067ce e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
0067cf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
0067d0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
0067d1 940e c7af 	CALL SUBOPT_0x127
0067d3 9611      	ADIW R26,1
0067d4 940e c10c 	CALL SUBOPT_0x1E
0067d6 940e ca12 	CALL SUBOPT_0x189
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
0067d8 940e cc0d 	CALL SUBOPT_0x1DD
0067da 940e c36f 	CALL SUBOPT_0x76
0067dc 940e cc12 	CALL SUBOPT_0x1DE
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
0067de 940e cc5c 	CALL SUBOPT_0x1ED
0067e0 2fe5      	MOV  R30,R21
0067e1 940e c156 	CALL SUBOPT_0x29
                 ; 000B 017D                                     return -1;
0067e3 efef      	LDI  R30,LOW(65535)
0067e4 efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E0074:
0067e5 940e e0d7 	CALL __LOADLOCR6
0067e7 962d      	ADIW R28,13
0067e8 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
0067e9 93ba      	ST   -Y,R27
0067ea 93aa      	ST   -Y,R26
0067eb 940e c22b 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
0067ed e030      	LDI  R19,0
                +
0067ee e040     +LDI R20 , LOW ( 0 )
0067ef e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0067f0 85ea      	LDD  R30,Y+10
0067f1 7fe0      	ANDI R30,LOW(0xF0)
0067f2 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
0067f3 e8e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
0067f4 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
0067f5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
0067f6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
0067f7 940e c7b4 	CALL SUBOPT_0x128
0067f9 940e c64a 	CALL SUBOPT_0xE9
                 ; 000B 018D     print_payload(conf,len);
0067fb 940e ca3b 	CALL SUBOPT_0x192
0067fd 85a8      	LDD  R26,Y+8
0067fe 85b9      	LDD  R27,Y+8+1
0067ff 940e 9ea8 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
006801 2fe3      	MOV  R30,R19
006802 940e c230 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
006804 f4b9      	BRNE _0x160045
                +
006805 eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
006806 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
006807 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
006808 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
006809 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
00680b 85a8      	LDD  R26,Y+8
00680c 85b9      	LDD  R27,Y+8+1
00680d 940e 4df2 	CALL _setPropertiesConfig
00680f 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
006810 2311      	TST  R17
006811 f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
006812 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
006813 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
006814 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
006815 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
006816 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
006818 efed      	LDI  R30,LOW(65533)
006819 efff      	LDI  R31,HIGH(65533)
00681a c107      	RJMP _0x20E0073
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
00681b c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
00681c 32e0      	CPI  R30,LOW(0x20)
00681d e0a0      	LDI  R26,HIGH(0x20)
00681e 07fa      	CPC  R31,R26
00681f f4b9      	BRNE _0x160047
                +
006820 efe3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
006821 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
006822 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
006823 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
006824 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
006826 85a8      	LDD  R26,Y+8
006827 85b9      	LDD  R27,Y+8+1
006828 940e 4e69 	CALL _setOperatingConfig
00682a 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
00682b 2311      	TST  R17
00682c f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
00682d e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
00682e e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
00682f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
006830 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
006831 940e c042 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
006833 efed      	LDI  R30,LOW(65533)
006834 efff      	LDI  R31,HIGH(65533)
006835 c0ec      	RJMP _0x20E0073
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
006836 c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
006837 33e0      	CPI  R30,LOW(0x30)
006838 e0a0      	LDI  R26,HIGH(0x30)
006839 07fa      	CPC  R31,R26
00683a f4c9      	BRNE _0x160049
00683b 940e cc63 	CALL SUBOPT_0x1EE
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
00683d e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
00683e e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
00683f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
006840 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
006841 940e c238 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
006843 940e cc69 	CALL SUBOPT_0x1EF
006845 940e 4edf 	CALL _setSensorConfig
006847 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
006848 2311      	TST  R17
006849 f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
00684a e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
00684b e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
00684c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
00684d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
00684e 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
006850 efed      	LDI  R30,LOW(65533)
006851 efff      	LDI  R31,HIGH(65533)
006852 c0cf      	RJMP _0x20E0073
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
006853 c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
006854 34e0      	CPI  R30,LOW(0x40)
006855 e0a0      	LDI  R26,HIGH(0x40)
006856 07fa      	CPC  R31,R26
006857 f4c9      	BRNE _0x16004B
006858 940e cc63 	CALL SUBOPT_0x1EE
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
00685a e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
00685b e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
00685c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
00685d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
00685e 940e c238 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
006860 940e cc69 	CALL SUBOPT_0x1EF
006862 940e 503a 	CALL _setAuxDinConfig
006864 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
006865 2311      	TST  R17
006866 f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
006867 eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
006868 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
006869 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
00686a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
00686b 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
00686d efed      	LDI  R30,LOW(65533)
00686e efff      	LDI  R31,HIGH(65533)
00686f c0b2      	RJMP _0x20E0073
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
006870 c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
006871 35e0      	CPI  R30,LOW(0x50)
006872 e0a0      	LDI  R26,HIGH(0x50)
006873 07fa      	CPC  R31,R26
006874 f4c9      	BRNE _0x16004D
006875 940e cc63 	CALL SUBOPT_0x1EE
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
006877 ecef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
006878 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
006879 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
00687a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
00687b 940e c238 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
00687d 940e cc69 	CALL SUBOPT_0x1EF
00687f 940e 5082 	CALL _setAuxDoutConfig
006881 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
006882 2311      	TST  R17
006883 f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
006884 eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
006885 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
006886 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
006887 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
006888 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
00688a efed      	LDI  R30,LOW(65533)
00688b efff      	LDI  R31,HIGH(65533)
00688c c095      	RJMP _0x20E0073
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
00688d c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
00688e 36e0      	CPI  R30,LOW(0x60)
00688f e0a0      	LDI  R26,HIGH(0x60)
006890 07fa      	CPC  R31,R26
006891 f4c9      	BRNE _0x16004F
006892 940e cc63 	CALL SUBOPT_0x1EE
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
006894 e1e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
006895 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
006896 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
006897 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
006898 940e c238 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
00689a 940e cc69 	CALL SUBOPT_0x1EF
00689c 940e 5108 	CALL _setAuxAinConfig
00689e 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
00689f 2311      	TST  R17
0068a0 f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
0068a1 e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
0068a2 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
0068a3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
0068a4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
0068a5 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
0068a7 efed      	LDI  R30,LOW(65533)
0068a8 efff      	LDI  R31,HIGH(65533)
0068a9 c078      	RJMP _0x20E0073
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
0068aa c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
0068ab 37e0      	CPI  R30,LOW(0x70)
0068ac e0a0      	LDI  R26,HIGH(0x70)
0068ad 07fa      	CPC  R31,R26
0068ae f4c9      	BRNE _0x160051
0068af 940e cc63 	CALL SUBOPT_0x1EE
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
0068b1 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
0068b2 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
0068b3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
0068b4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
0068b5 940e c238 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
0068b7 940e cc69 	CALL SUBOPT_0x1EF
0068b9 940e 5148 	CALL _setAuxAoutConfig
0068bb 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
0068bc 2311      	TST  R17
0068bd f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
0068be e8e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
0068bf e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
0068c0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
0068c1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
0068c2 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
0068c4 efed      	LDI  R30,LOW(65533)
0068c5 efff      	LDI  R31,HIGH(65533)
0068c6 c05b      	RJMP _0x20E0073
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
0068c7 c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
0068c8 38e0      	CPI  R30,LOW(0x80)
0068c9 e0a0      	LDI  R26,HIGH(0x80)
0068ca 07fa      	CPC  R31,R26
0068cb f4b9      	BRNE _0x160053
                +
0068cc eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
0068cd e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
0068ce e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
0068cf e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
0068d0 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
0068d2 85a8      	LDD  R26,Y+8
0068d3 85b9      	LDD  R27,Y+8+1
0068d4 940e 51db 	CALL _setBuzzerConfig
0068d6 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
0068d7 2311      	TST  R17
0068d8 f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
0068d9 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
0068da e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
0068db e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
0068dc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
0068dd 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
0068df efed      	LDI  R30,LOW(65533)
0068e0 efff      	LDI  R31,HIGH(65533)
0068e1 c040      	RJMP _0x20E0073
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
0068e2 c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
0068e3 39e0      	CPI  R30,LOW(0x90)
0068e4 e0a0      	LDI  R26,HIGH(0x90)
0068e5 07fa      	CPC  R31,R26
0068e6 f4b9      	BRNE _0x160055
                +
0068e7 efe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
0068e8 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
0068e9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
0068ea e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
0068eb 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
0068ed 85a8      	LDD  R26,Y+8
0068ee 85b9      	LDD  R27,Y+8+1
0068ef 940e 5241 	CALL _setEnvAlarmConfig
0068f1 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
0068f2 2311      	TST  R17
0068f3 f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
0068f4 e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
0068f5 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
0068f6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
0068f7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
0068f8 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
0068fa efed      	LDI  R30,LOW(65533)
0068fb efff      	LDI  R31,HIGH(65533)
0068fc c025      	RJMP _0x20E0073
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
0068fd c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
0068fe 3ae0      	CPI  R30,LOW(0xA0)
0068ff e0a0      	LDI  R26,HIGH(0xA0)
006900 07fa      	CPC  R31,R26
006901 f4b1      	BRNE _0x160059
                +
006902 e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
006903 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
006904 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
006905 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
006906 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
006908 85a8      	LDD  R26,Y+8
006909 85b9      	LDD  R27,Y+8+1
00690a 940e 52be 	CALL _setStatusReportConfig
00690c 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
00690d 2311      	TST  R17
00690e f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
00690f e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
006910 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
006911 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
006912 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
006913 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
006915 efed      	LDI  R30,LOW(65533)
006916 efff      	LDI  R31,HIGH(65533)
006917 c00a      	RJMP _0x20E0073
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
006918 940e cc5c 	CALL SUBOPT_0x1ED
00691a 2fe3      	MOV  R30,R19
00691b 940e c156 	CALL SUBOPT_0x29
                 ; 000B 01E6                                     return -1;
00691d efef      	LDI  R30,LOW(65535)
00691e efff      	LDI  R31,HIGH(65535)
00691f c002      	RJMP _0x20E0073
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
006920 e0e0      	LDI  R30,LOW(0)
006921 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
006922 940e e0d7 	CALL __LOADLOCR6
006924 962b      	ADIW R28,11
006925 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
006926 940e e060 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
006928 940e c3e5 	CALL SUBOPT_0x89
00692a 940e c3f8 	CALL SUBOPT_0x8C
00692c 940e e0cb 	CALL __CPD21
00692e f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
00692f e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
006930 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
006931 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
006932 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
006933 940e cc6e 	CALL SUBOPT_0x1F0
006935 940e cc6e 	CALL SUBOPT_0x1F0
006937 940e c11b 	CALL SUBOPT_0x21
                 ; 000B 01EF         return -1;
006939 efef      	LDI  R30,LOW(65535)
00693a efff      	LDI  R31,HIGH(65535)
00693b c0e4      	RJMP _0x20E0070
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
00693c e0e0      	LDI  R30,LOW(0)
00693d e0f0      	LDI  R31,HIGH(0)
00693e c0e1      	RJMP _0x20E0070
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
00693f 940e cbff 	CALL SUBOPT_0x1DA
006941 931a      	ST   -Y,R17
006942 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
006943 940e cc72 	CALL SUBOPT_0x1F1
006945 85e8      	LDD  R30,Y+8
006946 85f9      	LDD  R31,Y+8+1
006947 940e c252 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
006949 940e cc77 	CALL SUBOPT_0x1F2
00694b f449      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
00694c eced     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
00694d e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
00694e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
00694f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
006950 940e c042 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
006952 efef      	LDI  R30,LOW(65535)
006953 efff      	LDI  R31,HIGH(65535)
006954 c018      	RJMP _0x20E0072
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
006955 efe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
006956 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
006957 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
006958 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
006959 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
00695b 940e c4fb 	CALL SUBOPT_0xB4
00695d 940e 47ba 	CALL _RTC_setBinary
00695f 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
006960 2311      	TST  R17
006961 f44a      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
006962 e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
006963 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
006964 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
006965 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
006966 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 000B 0206         return -1;
006968 efef      	LDI  R30,LOW(65535)
006969 efff      	LDI  R31,HIGH(65535)
00696a c002      	RJMP _0x20E0072
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
00696b e0e0      	LDI  R30,LOW(0)
00696c e0f0      	LDI  R31,HIGH(0)
                 _0x20E0072:
00696d 8119      	LDD  R17,Y+1
00696e 8108      	LDD  R16,Y+0
00696f 9628      	ADIW R28,8
006970 9508      	RET
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
006971 940e cc7f 	CALL SUBOPT_0x1F4
                 ;	period -> Y+2
                 ;	res -> R16,R17
006973 940e cc77 	CALL SUBOPT_0x1F2
006975 f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
006976 e5ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
006977 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
006978 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
006979 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
00697a 940e c042 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
00697c c023      	RJMP _0x16005E
                 _0x16005D:
00697d 940e c4fb 	CALL SUBOPT_0xB4
                +
00697f 32ac     +CPI R26 , LOW ( 0x12C )
006980 e0e1     +LDI R30 , HIGH ( 0x12C )
006981 07be     +CPC R27 , R30
006982 e0e0     +LDI R30 , BYTE3 ( 0x12C )
006983 078e     +CPC R24 , R30
006984 e0e0     +LDI R30 , BYTE4 ( 0x12C )
006985 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
006986 f050      	BRLO _0x160060
006987 940e c4fb 	CALL SUBOPT_0xB4
                +
006989 38a1     +CPI R26 , LOW ( 0x15181 )
00698a e5e1     +LDI R30 , HIGH ( 0x15181 )
00698b 07be     +CPC R27 , R30
00698c e0e1     +LDI R30 , BYTE3 ( 0x15181 )
00698d 078e     +CPC R24 , R30
00698e e0e0     +LDI R30 , BYTE4 ( 0x15181 )
00698f 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
006990 f048      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
006991 e8e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
006992 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
006993 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
006994 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
006995 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 000B 0215         return -1;
006997 efef      	LDI  R30,LOW(65535)
006998 efff      	LDI  R31,HIGH(65535)
006999 c018      	RJMP _0x20E0071
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
00699a eaea     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
00699b e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
00699c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
00699d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
00699e 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
0069a0 940e c4fb 	CALL SUBOPT_0xB4
0069a2 940e 7d2a 	CALL _ALARM_mute
0069a4 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
0069a5 2311      	TST  R17
0069a6 f44a      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
0069a7 ede5     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
0069a8 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
0069a9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
0069aa e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
0069ab 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 000B 021E         return -1;
0069ad efef      	LDI  R30,LOW(65535)
0069ae efff      	LDI  R31,HIGH(65535)
0069af c002      	RJMP _0x20E0071
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
0069b0 e0e0      	LDI  R30,LOW(0)
0069b1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0071:
0069b2 8119      	LDD  R17,Y+1
0069b3 8108      	LDD  R16,Y+0
0069b4 9626      	ADIW R28,6
0069b5 9508      	RET
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
0069b6 e0e0      	LDI  R30,LOW(0)
0069b7 e0f0      	LDI  R31,HIGH(0)
0069b8 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
0069b9 940e c3b3 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
0069bb d0cd      	RCALL _ETH_findFreeSlotWaitQueue
0069bc 2f0e      	MOV  R16,R30
0069bd 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
0069be 2311      	TST  R17
0069bf f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
0069c0 e0e2     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
0069c1 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
0069c2 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
0069c3 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
0069c4 940e c042 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
0069c6 efef      	LDI  R30,LOW(65535)
0069c7 efff      	LDI  R31,HIGH(65535)
0069c8 c055      	RJMP _0x20E006F
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
0069c9 940e c94d 	CALL SUBOPT_0x16D
                +
0069cb 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
0069cc 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
0069cd 93ff      	PUSH R31
0069ce 93ef      	PUSH R30
0069cf 81ac      	LDD  R26,Y+4
0069d0 81bd      	LDD  R27,Y+4+1
0069d1 940e a51d 	CALL _malloc
0069d3 91af      	POP  R26
0069d4 91bf      	POP  R27
0069d5 93ed      	ST   X+,R30
0069d6 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
0069d7 940e c94d 	CALL SUBOPT_0x16D
0069d9 940e c98a 	CALL SUBOPT_0x174
0069db 9730      	SBIW R30,0
0069dc f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
0069dd e3e7     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
0069de e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
0069df e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
0069e0 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
0069e1 940e c751 	CALL SUBOPT_0x117
                 ; 000C 001F         return -1;
0069e3 efef      	LDI  R30,LOW(65535)
0069e4 efff      	LDI  R31,HIGH(65535)
0069e5 c038      	RJMP _0x20E006F
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
0069e6 940e c94d 	CALL SUBOPT_0x16D
0069e8 940e c98a 	CALL SUBOPT_0x174
0069ea 93fa      	ST   -Y,R31
0069eb 93ea      	ST   -Y,R30
0069ec 940e ca3b 	CALL SUBOPT_0x192
0069ee 85a8      	LDD  R26,Y+8
0069ef 85b9      	LDD  R27,Y+8+1
0069f0 940e a55a 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
0069f2 940e c94d 	CALL SUBOPT_0x16D
                +
0069f4 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0069f5 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0069f6 81ac      	LDD  R26,Y+4
0069f7 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
0069f8 940e c94d 	CALL SUBOPT_0x16D
                +
0069fa 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0069fb 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0069fc 85a8      	LDD  R26,Y+8
0069fd 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
0069fe 940e c94d 	CALL SUBOPT_0x16D
006a00 940e cc84 	CALL SUBOPT_0x1F5
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
006a02 940e c94d 	CALL SUBOPT_0x16D
                +
006a04 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
006a05 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
006a06 81aa      	LDD  R26,Y+2
006a07 81bb      	LDD  R27,Y+2+1
006a08 83a0      	STD  Z+0,R26
006a09 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
006a0a 940e c94d 	CALL SUBOPT_0x16D
006a0c 940e c97c 	CALL SUBOPT_0x172
006a0e 940e c981 	CALL SUBOPT_0x173
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
006a10 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
006a11 e5ee     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
006a12 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
006a13 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
006a14 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
006a15 940e cc89 	CALL SUBOPT_0x1F6
006a17 01f8      	MOVW R30,R16
006a18 940e df38 	CALL __CWD1
006a1a 940e c11b 	CALL SUBOPT_0x21
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
006a1c 2de7      	MOV  R30,R7
006a1d e0f0      	LDI  R31,0
                 _0x20E006F:
006a1e 8119      	LDD  R17,Y+1
006a1f 8108      	LDD  R16,Y+0
                 _0x20E0070:
006a20 9629      	ADIW R28,9
006a21 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a22 93aa      	ST   -Y,R26
006a23 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a24 e010      	LDI  R17,LOW(0)
                 _0x180006:
006a25 301f      	CPI  R17,15
006a26 f4f8      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
006a27 940e cc8e 	CALL SUBOPT_0x1F7
006a29 81e0      	LD   R30,Z
006a2a 81a9      	LDD  R26,Y+1
006a2b 17ea      	CP   R30,R26
006a2c f4b9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
006a2d e0ab      	LDI  R26,LOW(11)
006a2e 9f1a      	MUL  R17,R26
006a2f 01f0      	MOVW R30,R0
006a30 940e c98a 	CALL SUBOPT_0x174
006a32 940e cc94 	CALL SUBOPT_0x1F8
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
006a34 940e cca8 	CALL SUBOPT_0x1F9
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
006a36 940e ccae 	CALL SUBOPT_0x1FA
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
006a38 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
006a39 eae9     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
006a3a e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
006a3b e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
006a3c e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
006a3d 940e ccc1 	CALL SUBOPT_0x1FB
006a3f 940e ccc6 	CALL SUBOPT_0x1FC
                 ; 000C 0044             return ETH_waitQCount;
006a41 2de7      	MOV  R30,R7
006a42 e0f0      	LDI  R31,0
006a43 c042      	RJMP _0x20E006D
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
006a44 5f1f      	SUBI R17,-1
006a45 cfdf      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
006a46 efe6     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
006a47 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
006a48 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
006a49 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
006a4a 940e e05b 	CALL __PUTPARD1
006a4c 81ed      	LDD  R30,Y+5
006a4d 940e c156 	CALL SUBOPT_0x29
                 ; 000C 0048     return -1;
006a4f efef      	LDI  R30,LOW(65535)
006a50 efff      	LDI  R31,HIGH(65535)
006a51 c034      	RJMP _0x20E006D
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a52 931a      	ST   -Y,R17
                 ;	i -> R17
006a53 e010      	LDI  R17,LOW(0)
                 _0x18000A:
006a54 301f      	CPI  R17,15
006a55 f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
006a56 e0ab      	LDI  R26,LOW(11)
006a57 9f1a      	MUL  R17,R26
006a58 01f0      	MOVW R30,R0
006a59 940e c98a 	CALL SUBOPT_0x174
006a5b 940e cc94 	CALL SUBOPT_0x1F8
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
006a5d 940e cca8 	CALL SUBOPT_0x1F9
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
006a5f 940e ccae 	CALL SUBOPT_0x1FA
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
006a61 5f1f      	SUBI R17,-1
006a62 cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
006a63 c050      	RJMP _0x20E006B
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a64 93aa      	ST   -Y,R26
006a65 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a66 e010      	LDI  R17,LOW(0)
                 _0x18000D:
006a67 301f      	CPI  R17,15
006a68 f450      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
006a69 940e cc8e 	CALL SUBOPT_0x1F7
006a6b 81e0      	LD   R30,Z
006a6c 81a9      	LDD  R26,Y+1
006a6d 17ea      	CP   R30,R26
006a6e f411      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
006a6f e0e1      	LDI  R30,LOW(1)
006a70 c015      	RJMP _0x20E006D
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
006a71 5f1f      	SUBI R17,-1
006a72 cff4      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
006a73 c011      	RJMP _0x20E006E
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
006a74 93aa      	ST   -Y,R26
006a75 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a76 e010      	LDI  R17,LOW(0)
                 _0x180011:
006a77 3614      	CPI  R17,100
006a78 f460      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
006a79 940e c4d4 	CALL SUBOPT_0xAC
006a7b 51e4      	SUBI R30,LOW(-_sess_list)
006a7c 4efb      	SBCI R31,HIGH(-_sess_list)
006a7d 81e0      	LD   R30,Z
006a7e 81a9      	LDD  R26,Y+1
006a7f 17ea      	CP   R30,R26
006a80 f411      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
006a81 e0e1      	LDI  R30,LOW(1)
006a82 c003      	RJMP _0x20E006D
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
006a83 5f1f      	SUBI R17,-1
006a84 cff2      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
                 _0x20E006E:
006a85 e0e0      	LDI  R30,LOW(0)
                 _0x20E006D:
006a86 8118      	LDD  R17,Y+0
006a87 9622      	ADIW R28,2
006a88 9508      	RET
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a89 931a      	ST   -Y,R17
                 ;	i -> R17
006a8a e010      	LDI  R17,LOW(0)
                 _0x180015:
006a8b 301f      	CPI  R17,15
006a8c f450      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006a8d e0ab      	LDI  R26,LOW(11)
006a8e 9f1a      	MUL  R17,R26
006a8f 01f0      	MOVW R30,R0
                +
006a90 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006a91 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006a92 81e0      	LD   R30,Z
006a93 30e0      	CPI  R30,0
006a94 f0f1      	BREQ _0x20E006C
                 ; 000C 0079             return i;
                 ; 000C 007A         }
                 ; 000C 007B     }
006a95 5f1f      	SUBI R17,-1
006a96 cff4      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
006a97 efef      	LDI  R30,LOW(255)
006a98 c01b      	RJMP _0x20E006B
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
006a99 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
006a9a 940e a468 	CALL _rand
006a9c 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006a9d 2fa1      	MOV  R26,R17
006a9e dfc5      	RCALL _ETH_isIdExist
006a9f 30e0      	CPI  R30,0
006aa0 f441      	BRNE _0x18001B
006aa1 3010      	CPI  R17,0
006aa2 f031      	BREQ _0x18001B
006aa3 3f1f      	CPI  R17,255
006aa4 f021      	BREQ _0x18001B
006aa5 2fa1      	MOV  R26,R17
006aa6 dfcd      	RCALL _ETH_isIdUsed
006aa7 30e0      	CPI  R30,0
006aa8 f009      	BREQ _0x18001A
                 _0x18001B:
006aa9 cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
006aaa 01f4      	MOVW R30,R8
006aab 51e4      	SUBI R30,LOW(-_sess_list)
006aac 4efb      	SBCI R31,HIGH(-_sess_list)
006aad 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006aae 01d4      	MOVW R26,R8
006aaf 9611      	ADIW R26,1
006ab0 940e cccc 	CALL SUBOPT_0x1FD
006ab2 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
                 _0x20E006C:
006ab3 2fe1      	MOV  R30,R17
                 _0x20E006B:
006ab4 9119      	LD   R17,Y+
006ab5 9508      	RET
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;#include "ad595.h"
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;
                 ;/******************
                 ;Y = mX + c
                 ;temp = (epFactor_B * adc) + epFactor_C
                 ;******************/
                 ;
                 ;eeprom float            epFactor_A[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_B[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_C[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet1[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef1[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef1[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet2[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef2[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef2[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet3[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef3[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef3[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epCalType[5]            = {CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT};
                 ;
                 ;flash float             epTMECTempSlope         = -0.1114;
                 ;flash float             epTMECTempOffset        = 63.73;
                 ;
                 ;flash float             epPT100TempSlope         = 1.0938;
                 ;flash float             epPT100TempOffset        = -208.42;
                 ;
                 ;//flash float             epPT100Temp_A           = 0.00005;
                 ;//flash float             epPT100Temp_B           = 0.1308;
                 ;//flash float             epPT100Temp_C           = -221.71;
                 ;
                 ;flash float             epPT100Temp_A           = 0.000633;
                 ;flash float             epPT100Temp_B           = 0.162124;
                 ;flash float             epPT100Temp_C           = -180.886306;
                 ;
                 ;// Parameter for sensor pt100
                 ;flash float             tempTable[15]           = {-80.0, -70.0, -60.0, -50.0, -40.0, -30.0, -20.0, -10.0, 0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0};
                 ;//flash float             voltTable[13]           = {0.7276, 0.7734, 0.8176, 0.8604, 0.9019, 0.9420, 0.9810, 1.0188, 1.0556, 1.0912, 1.1259, 1.1596, 1.1924};
                 ;flash float             adcTable[15]            = {290.7750, 309.0467, 326.7189, 343.8240, 360.3923, 376.4502, 392.0239,
                 ;                                                    407.1367, 421.8099, 436.0630, 449.9139, 463.3793, 476.4748, 489.2156, 501.6149};
                 ;
                 ;float iTCVoltData[5] = {0.0,0.0,0.0,0.0,0.0};
                 ;float iTCADCData[5] = {0.0,0.0,0.0,0.0,0.0};
                 ;/*============================================================*/
                 ;void iSensorGetADCValue(){
                 ; 000D 003C void iSensorGetADCValue(){
                 
                 	.CSEG
                 _iSensorGetADCValue:
                 ; 000D 003D     long viADCbuffer = 0;
                 ; 000D 003E     unsigned int viADCSmoothValue = 0;
                 ; 000D 003F     int i = 0,j = 0;
                 ; 000D 0040     viADCbuffer = 0;
006ab6 940e ca90 	CALL SUBOPT_0x1A2
006ab8 940e c1b2 	CALL SUBOPT_0x37
                 ;	viADCbuffer -> Y+6
                 ;	viADCSmoothValue -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
006aba 940e ccd1 	CALL SUBOPT_0x1FE
                 ; 000D 0041     printDebug("[iSensorGetValue]data[");
                +
006abc eaec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006abd e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006abe e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006abf e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006ac0 940e c042 	CALL SUBOPT_0x3
                 ; 000D 0042     for(i=0;i<5;i++){
                +
006ac2 e020     +LDI R18 , LOW ( 0 )
006ac3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1A0004:
                +
006ac4 3025     +CPI R18 , LOW ( 5 )
006ac5 e0e0     +LDI R30 , HIGH ( 5 )
006ac6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
006ac7 f5c4      	BRGE _0x1A0005
                 ; 000D 0043         #asm("wdr")
006ac8 95a8      	wdr
                 ; 000D 0044         viADCbuffer = 0;
006ac9 940e ccd1 	CALL SUBOPT_0x1FE
                 ; 000D 0045         for(j=0;j<30;j++){
                +
006acb e040     +LDI R20 , LOW ( 0 )
006acc e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0007:
                +
006acd 314e     +CPI R20 , LOW ( 30 )
006ace e0e0     +LDI R30 , HIGH ( 30 )
006acf 075e     +CPC R21 , R30
                 	__CPWRN 20,21,30
006ad0 f46c      	BRGE _0x1A0008
                 ; 000D 0046             viADCbuffer += read_adc(8+i);
006ad1 2fa2      	MOV  R26,R18
006ad2 5fa8      	SUBI R26,-LOW(8)
006ad3 940e 440f 	CALL _read_adc
006ad5 940e ccd7 	CALL SUBOPT_0x1FF
006ad7 940e deb3 	CALL __ADDD12
006ad9 940e c505 	CALL SUBOPT_0xB6
                 ; 000D 0047         }
                +
006adb 5f4f     +SUBI R20 , LOW ( - 1 )
006adc 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
006add cfef      	RJMP _0x1A0007
                 _0x1A0008:
                 ; 000D 0048         viADCSmoothValue = (unsigned int)(viADCbuffer/30);
006ade 940e c2aa 	CALL SUBOPT_0x59
                +
006ae0 e1ee     +LDI R30 , LOW ( 0x1E )
006ae1 e0f0     +LDI R31 , HIGH ( 0x1E )
006ae2 e060     +LDI R22 , BYTE3 ( 0x1E )
006ae3 e070     +LDI R23 , BYTE4 ( 0x1E )
                 	__GETD1N 0x1E
006ae4 940e dfd4 	CALL __DIVD21
006ae6 018f      	MOVW R16,R30
                 ; 000D 0049         if(i==4){
006ae7 e0e4      	LDI  R30,LOW(4)
006ae8 e0f0      	LDI  R31,HIGH(4)
006ae9 17e2      	CP   R30,R18
006aea 07f3      	CPC  R31,R19
006aeb f429      	BRNE _0x1A0009
                 ; 000D 004A            printDebug("ch%d: %04d ",i+1,viADCSmoothValue);
                +
006aec ece3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 23 ) )
006aed e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 23 ) )
006aee e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 23 ) )
006aef e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 23 ) )
                 	__POINTD1FN _0x1A0000,23
006af0 c004      	RJMP _0x1A00B3
                 ; 000D 004B         }else{
                 _0x1A0009:
                 ; 000D 004C            printDebug("ch%d: %04d, ",i+1,viADCSmoothValue);
                +
006af1 ecef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 35 ) )
006af2 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 35 ) )
006af3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 35 ) )
006af4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 35 ) )
                 	__POINTD1FN _0x1A0000,35
                 _0x1A00B3:
006af5 940e e05b 	CALL __PUTPARD1
006af7 01f9      	MOVW R30,R18
006af8 940e ccdc 	CALL SUBOPT_0x200
006afa 01f8      	MOVW R30,R16
006afb 940e c822 	CALL SUBOPT_0x13E
                 ; 000D 004D         }
                 ; 000D 004E 
                 ; 000D 004F     }
                +
006afd 5f2f     +SUBI R18 , LOW ( - 1 )
006afe 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006aff cfc4      	RJMP _0x1A0004
                 _0x1A0005:
                 ; 000D 0050     printDebug("]\r\n");
                +
006b00 edec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 48 ) )
006b01 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 48 ) )
006b02 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 48 ) )
006b03 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 48 ) )
                 	__POINTD1FN _0x1A0000,48
006b04 940e c042 	CALL SUBOPT_0x3
                 ; 000D 0051     return;
006b06 940e e0d7 	CALL __LOADLOCR6
006b08 962a      	ADIW R28,10
006b09 9508      	RET
                 ; 000D 0052 }
                 ;
                 ;void updateSensorADC(int ch)
                 ; 000D 0055 {
                 _updateSensorADC:
                 ; 000D 0056     int adc_raw                                     = 0;
                 ; 000D 0057 
                 ; 000D 0058     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006b0a 940e c3b3 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	adc_raw -> R16,R17
                +
006b0c e000     +LDI R16 , LOW ( 0 )
006b0d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006b0e 940e c172 	CALL SUBOPT_0x2E
006b10 f021      	BREQ _0x1A000C
006b11 940e c172 	CALL SUBOPT_0x2E
006b13 30e3      	CPI  R30,LOW(0x3)
006b14 f411      	BRNE _0x1A000B
                 _0x1A000C:
                 ; 000D 0059         adc_raw     = read_adc(8);
006b15 e0a8      	LDI  R26,LOW(8)
006b16 c009      	RJMP _0x1A00B4
                 ; 000D 005A     }
                 ; 000D 005B     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A000B:
006b17 940e c43e 	CALL SUBOPT_0x95
006b19 f021      	BREQ _0x1A0010
006b1a 940e c172 	CALL SUBOPT_0x2E
006b1c 30e2      	CPI  R30,LOW(0x2)
006b1d f429      	BRNE _0x1A000F
                 _0x1A0010:
                 ; 000D 005C         adc_raw     = read_adc(8+ch);
006b1e 81aa      	LDD  R26,Y+2
006b1f 5fa8      	SUBI R26,-LOW(8)
                 _0x1A00B4:
006b20 940e 440f 	CALL _read_adc
006b22 018f      	MOVW R16,R30
                 ; 000D 005D     }
                 ; 000D 005E 
                 ; 000D 005F     if( fabs(adcData[ch] - adc_raw) < 10){
                 _0x1A000F:
006b23 940e cce2 	CALL SUBOPT_0x201
006b25 940e c0fc 	CALL SUBOPT_0x1B
006b27 940e cce6 	CALL SUBOPT_0x202
006b29 940e c708 	CALL SUBOPT_0x10B
006b2b 940e de8f 	CALL __CMPF12
006b2d f508      	BRSH _0x1A0012
                 ; 000D 0060         adcData[ch] = (float)((adcData[ch] * 9.9) + (float)(adc_raw * 0.1))/10;           // Temp Sensor Low-Pass Filter
006b2e 940e cce2 	CALL SUBOPT_0x201
006b30 0fea      	ADD  R30,R26
006b31 1ffb      	ADC  R31,R27
006b32 93ff      	PUSH R31
006b33 93ef      	PUSH R30
006b34 940e cce2 	CALL SUBOPT_0x201
006b36 940e c0fc 	CALL SUBOPT_0x1B
                +
006b38 e6a6     +LDI R26 , LOW ( 0x411E6666 )
006b39 e6b6     +LDI R27 , HIGH ( 0x411E6666 )
006b3a e18e     +LDI R24 , BYTE3 ( 0x411E6666 )
006b3b e491     +LDI R25 , BYTE4 ( 0x411E6666 )
                 	__GETD2N 0x411E6666
006b3c 940e ddfc 	CALL __MULF12
006b3e 937f      	PUSH R23
006b3f 936f      	PUSH R22
006b40 93ff      	PUSH R31
006b41 93ef      	PUSH R30
006b42 940e ccf8 	CALL SUBOPT_0x203
006b44 940e c482 	CALL SUBOPT_0x9E
006b46 91af      	POP  R26
006b47 91bf      	POP  R27
006b48 918f      	POP  R24
006b49 919f      	POP  R25
006b4a 940e c489 	CALL SUBOPT_0x9F
006b4c 91af      	POP  R26
006b4d 91bf      	POP  R27
006b4e c0b0      	RJMP _0x1A00B5
                 ; 000D 0061         //printDebug("<updateSensorADC>        < 10\r\n");
                 ; 000D 0062     }
                 ; 000D 0063     else if( fabs(adcData[ch] - adc_raw) < 30){
                 _0x1A0012:
006b4f 940e cce2 	CALL SUBOPT_0x201
006b51 940e c0fc 	CALL SUBOPT_0x1B
006b53 940e cce6 	CALL SUBOPT_0x202
                +
006b55 e0e0     +LDI R30 , LOW ( 0x41F00000 )
006b56 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
006b57 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
006b58 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
006b59 940e de8f 	CALL __CMPF12
006b5b f518      	BRSH _0x1A0014
                 ; 000D 0064         adcData[ch] = (float)((adcData[ch] * 9.5) + (float)(adc_raw * 0.5))/10;           // Temp Sensor Low-Pass Filter
006b5c 940e cce2 	CALL SUBOPT_0x201
006b5e 0fea      	ADD  R30,R26
006b5f 1ffb      	ADC  R31,R27
006b60 93ff      	PUSH R31
006b61 93ef      	PUSH R30
006b62 940e cce2 	CALL SUBOPT_0x201
006b64 940e c0fc 	CALL SUBOPT_0x1B
                +
006b66 e0a0     +LDI R26 , LOW ( 0x41180000 )
006b67 e0b0     +LDI R27 , HIGH ( 0x41180000 )
006b68 e188     +LDI R24 , BYTE3 ( 0x41180000 )
006b69 e491     +LDI R25 , BYTE4 ( 0x41180000 )
                 	__GETD2N 0x41180000
006b6a 940e ddfc 	CALL __MULF12
006b6c 937f      	PUSH R23
006b6d 936f      	PUSH R22
006b6e 93ff      	PUSH R31
006b6f 93ef      	PUSH R30
006b70 940e ccf8 	CALL SUBOPT_0x203
006b72 940e ccfe 	CALL SUBOPT_0x204
006b74 940e ddfc 	CALL __MULF12
006b76 91af      	POP  R26
006b77 91bf      	POP  R27
006b78 918f      	POP  R24
006b79 919f      	POP  R25
006b7a 940e c489 	CALL SUBOPT_0x9F
006b7c 91af      	POP  R26
006b7d 91bf      	POP  R27
006b7e c080      	RJMP _0x1A00B5
                 ; 000D 0065         //printDebug("<updateSensorADC>                < 30\r\n");
                 ; 000D 0066     }
                 ; 000D 0067     else if( fabs(adcData[ch] - adc_raw) < 50){
                 _0x1A0014:
006b7f 940e cce2 	CALL SUBOPT_0x201
006b81 940e c0fc 	CALL SUBOPT_0x1B
006b83 940e cce6 	CALL SUBOPT_0x202
                +
006b85 e0e0     +LDI R30 , LOW ( 0x42480000 )
006b86 e0f0     +LDI R31 , HIGH ( 0x42480000 )
006b87 e468     +LDI R22 , BYTE3 ( 0x42480000 )
006b88 e472     +LDI R23 , BYTE4 ( 0x42480000 )
                 	__GETD1N 0x42480000
006b89 940e de8f 	CALL __CMPF12
006b8b f528      	BRSH _0x1A0016
                 ; 000D 0068         adcData[ch] = (float)((adcData[ch] * 8.5) + (float)(adc_raw * 1.5))/10;           // Temp Sensor Low-Pass Filter
006b8c 940e cce2 	CALL SUBOPT_0x201
006b8e 0fea      	ADD  R30,R26
006b8f 1ffb      	ADC  R31,R27
006b90 93ff      	PUSH R31
006b91 93ef      	PUSH R30
006b92 940e cce2 	CALL SUBOPT_0x201
006b94 940e c0fc 	CALL SUBOPT_0x1B
                +
006b96 e0a0     +LDI R26 , LOW ( 0x41080000 )
006b97 e0b0     +LDI R27 , HIGH ( 0x41080000 )
006b98 e088     +LDI R24 , BYTE3 ( 0x41080000 )
006b99 e491     +LDI R25 , BYTE4 ( 0x41080000 )
                 	__GETD2N 0x41080000
006b9a 940e ddfc 	CALL __MULF12
006b9c 937f      	PUSH R23
006b9d 936f      	PUSH R22
006b9e 93ff      	PUSH R31
006b9f 93ef      	PUSH R30
006ba0 940e ccf8 	CALL SUBOPT_0x203
                +
006ba2 e0a0     +LDI R26 , LOW ( 0x3FC00000 )
006ba3 e0b0     +LDI R27 , HIGH ( 0x3FC00000 )
006ba4 ec80     +LDI R24 , BYTE3 ( 0x3FC00000 )
006ba5 e39f     +LDI R25 , BYTE4 ( 0x3FC00000 )
                 	__GETD2N 0x3FC00000
006ba6 940e ddfc 	CALL __MULF12
006ba8 91af      	POP  R26
006ba9 91bf      	POP  R27
006baa 918f      	POP  R24
006bab 919f      	POP  R25
006bac 940e c489 	CALL SUBOPT_0x9F
006bae 91af      	POP  R26
006baf 91bf      	POP  R27
006bb0 c04e      	RJMP _0x1A00B5
                 ; 000D 0069         //printDebug("<updateSensorADC>                            < 50\r\n");
                 ; 000D 006A     }
                 ; 000D 006B     else if( fabs(adcData[ch] - adc_raw) < 100){
                 _0x1A0016:
006bb1 940e cce2 	CALL SUBOPT_0x201
006bb3 940e c0fc 	CALL SUBOPT_0x1B
006bb5 940e cce6 	CALL SUBOPT_0x202
                +
006bb7 e0e0     +LDI R30 , LOW ( 0x42C80000 )
006bb8 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
006bb9 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
006bba e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
006bbb 940e de8f 	CALL __CMPF12
006bbd f528      	BRSH _0x1A0018
                 ; 000D 006C         adcData[ch] = (float)((adcData[ch] * 7.0) + (float)(adc_raw * 3.0))/10;           // Temp Sensor Low-Pass Filter
006bbe 940e cce2 	CALL SUBOPT_0x201
006bc0 0fea      	ADD  R30,R26
006bc1 1ffb      	ADC  R31,R27
006bc2 93ff      	PUSH R31
006bc3 93ef      	PUSH R30
006bc4 940e cce2 	CALL SUBOPT_0x201
006bc6 940e c0fc 	CALL SUBOPT_0x1B
                +
006bc8 e0a0     +LDI R26 , LOW ( 0x40E00000 )
006bc9 e0b0     +LDI R27 , HIGH ( 0x40E00000 )
006bca ee80     +LDI R24 , BYTE3 ( 0x40E00000 )
006bcb e490     +LDI R25 , BYTE4 ( 0x40E00000 )
                 	__GETD2N 0x40E00000
006bcc 940e ddfc 	CALL __MULF12
006bce 937f      	PUSH R23
006bcf 936f      	PUSH R22
006bd0 93ff      	PUSH R31
006bd1 93ef      	PUSH R30
006bd2 940e ccf8 	CALL SUBOPT_0x203
                +
006bd4 e0a0     +LDI R26 , LOW ( 0x40400000 )
006bd5 e0b0     +LDI R27 , HIGH ( 0x40400000 )
006bd6 e480     +LDI R24 , BYTE3 ( 0x40400000 )
006bd7 e490     +LDI R25 , BYTE4 ( 0x40400000 )
                 	__GETD2N 0x40400000
006bd8 940e ddfc 	CALL __MULF12
006bda 91af      	POP  R26
006bdb 91bf      	POP  R27
006bdc 918f      	POP  R24
006bdd 919f      	POP  R25
006bde 940e c489 	CALL SUBOPT_0x9F
006be0 91af      	POP  R26
006be1 91bf      	POP  R27
006be2 c01c      	RJMP _0x1A00B5
                 ; 000D 006D         //printDebug("<updateSensorADC>                                    < 100\r\n");
                 ; 000D 006E     }
                 ; 000D 006F     else{
                 _0x1A0018:
                 ; 000D 0070         adcData[ch] = (float)((adcData[ch] * 5.0) + (float)(adc_raw * 5.0))/10;           // Temp Sensor Low-Pass Filter
006be3 940e cce2 	CALL SUBOPT_0x201
006be5 0fea      	ADD  R30,R26
006be6 1ffb      	ADC  R31,R27
006be7 93ff      	PUSH R31
006be8 93ef      	PUSH R30
006be9 940e cce2 	CALL SUBOPT_0x201
006beb 940e c0fc 	CALL SUBOPT_0x1B
006bed 940e cd03 	CALL SUBOPT_0x205
006bef 937f      	PUSH R23
006bf0 936f      	PUSH R22
006bf1 93ff      	PUSH R31
006bf2 93ef      	PUSH R30
006bf3 940e ccf8 	CALL SUBOPT_0x203
006bf5 940e cd03 	CALL SUBOPT_0x205
006bf7 91af      	POP  R26
006bf8 91bf      	POP  R27
006bf9 918f      	POP  R24
006bfa 919f      	POP  R25
006bfb 940e c489 	CALL SUBOPT_0x9F
006bfd 91af      	POP  R26
006bfe 91bf      	POP  R27
                 _0x1A00B5:
006bff 940e e036 	CALL __PUTDP1
                 ; 000D 0071         //printDebug("<updateSensorADC>                                            >= 100\r\n");
                 ; 000D 0072     }
                 ; 000D 0073 
                 ; 000D 0074     return;
006c01 8119      	LDD  R17,Y+1
006c02 8108      	LDD  R16,Y+0
006c03 9624      	ADIW R28,4
006c04 9508      	RET
                 ; 000D 0075 }
                 ;/*============================================================*/
                 ;
                 ;float iUpdateSmoothlyADC(int ch){
                 ; 000D 0078 float iUpdateSmoothlyADC(int ch){
                 _iUpdateSmoothlyADC:
                 ; 000D 0079      unsigned long viADCbuffer = 0;
                 ; 000D 007A      float viRawVoltValue = 0.0;
                 ; 000D 007B      unsigned int i = 0;
                 ; 000D 007C      viADCbuffer = 0;
006c05 93ba      	ST   -Y,R27
006c06 93aa      	ST   -Y,R26
006c07 9728      	SBIW R28,8
006c08 940e cd0a 	CALL SUBOPT_0x206
006c0a e0e0      	LDI  R30,LOW(0)
006c0b 83eb      	STD  Y+3,R30
006c0c 83ec      	STD  Y+4,R30
006c0d 83ed      	STD  Y+5,R30
006c0e 83ee      	STD  Y+6,R30
006c0f 83ef      	STD  Y+7,R30
006c10 940e c873 	CALL SUBOPT_0x14C
                 ;	ch -> Y+10
                 ;	viADCbuffer -> Y+6
                 ;	viRawVoltValue -> Y+2
                 ;	i -> R16,R17
006c12 940e ccd1 	CALL SUBOPT_0x1FE
                 ; 000D 007D      for(i=0;i<30;i++){     //20
                +
006c14 e000     +LDI R16 , LOW ( 0 )
006c15 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A001B:
                +
006c16 310e     +CPI R16 , LOW ( 30 )
006c17 e0e0     +LDI R30 , HIGH ( 30 )
006c18 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
006c19 f478      	BRSH _0x1A001C
                 ; 000D 007E         viADCbuffer += (unsigned long)(read_adc(8+ch));
006c1a 85aa      	LDD  R26,Y+10
006c1b 5fa8      	SUBI R26,-LOW(8)
006c1c 940e 440f 	CALL _read_adc
006c1e 2766      	CLR  R22
006c1f 2777      	CLR  R23
006c20 940e c2aa 	CALL SUBOPT_0x59
006c22 940e deb3 	CALL __ADDD12
006c24 940e c505 	CALL SUBOPT_0xB6
                 ; 000D 007F      }
                +
006c26 5f0f     +SUBI R16 , LOW ( - 1 )
006c27 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006c28 cfed      	RJMP _0x1A001B
                 _0x1A001C:
                 ; 000D 0080      viRawVoltValue = iAD595ADCToVolt(viADCbuffer,30.0);
006c29 940e cd0f 	CALL SUBOPT_0x207
                +
006c2b e0a0     +LDI R26 , LOW ( 0x41F00000 )
006c2c e0b0     +LDI R27 , HIGH ( 0x41F00000 )
006c2d ef80     +LDI R24 , BYTE3 ( 0x41F00000 )
006c2e e491     +LDI R25 , BYTE4 ( 0x41F00000 )
                 	__GETD2N 0x41F00000
006c2f 940e a0b5 	CALL _iAD595ADCToVolt
006c31 940e c66b 	CALL SUBOPT_0xF0
                 ; 000D 0081                                                                         //20
                 ; 000D 0082      return viRawVoltValue;
006c33 8119      	LDD  R17,Y+1
006c34 8108      	LDD  R16,Y+0
006c35 962c      	ADIW R28,12
006c36 9508      	RET
                 ; 000D 0083 }
                 ;
                 ;float iReadSmoothlyADC(int ch){
                 ; 000D 0085 float iReadSmoothlyADC(int ch){
                 ; 000D 0086      unsigned long viADCbuffer = 0;
                 ; 000D 0087      float viRawVoltValue = 0.0;
                 ; 000D 0088      unsigned int i = 0;
                 ; 000D 0089      float viSmoothlyValue = 20.0;
                 ; 000D 008A 
                 ; 000D 008B      viADCbuffer = 0;
                 ;	ch -> Y+14
                 ;	viADCbuffer -> Y+10
                 ;	viRawVoltValue -> Y+6
                 ;	i -> R16,R17
                 ;	viSmoothlyValue -> Y+2
                 ; 000D 008C      for(i=0;i<20;i++){
                 ; 000D 008D         viADCbuffer += (unsigned long)(read_adc(8+ch));
                 ; 000D 008E      }
                 ; 000D 008F 
                 ; 000D 0090      return (float)(viADCbuffer/viSmoothlyValue);
                 ; 000D 0091 }
                 ;
                 ;//void iUpdateAD595Sensor(){
                 ;//    if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ;//        adc_raw     = read_adc(8);
                 ;//    }
                 ;//}
                 ;
                 ;int sensorRead(int ch, struct sens_val_st *sensor)
                 ; 000D 009A {
                 _sensorRead:
                 ; 000D 009B     static TIMER t[MAX_SENS_CHANNEL]                = {0,0,0,0,0};
                 ; 000D 009C     static char lastCheck[MAX_SENS_CHANNEL]         = {0xFF,0xFF,0xFF,0xFF,0xFF};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000D 009D     static char steadyState[MAX_SENS_CHANNEL]       = {0,0,0,0,0};
                 ; 000D 009E     char channelConnect                             = 0;
                 ; 000D 009F     float x_1 = 0.0;
                 ; 000D 00A0     float x_2 = 0.0;
                 ; 000D 00A1     float y_1 = 0.0;
                 ; 000D 00A2     float y_2 = 0.0;
                 ; 000D 00A3 
                 ; 000D 00A4     const float  viZeroSet   = 1.667;
                 ; 000D 00A5 
                 ; 000D 00A6     unsigned long viADCbuffer;
                 ; 000D 00A7     int i = 0;
                 ; 000D 00A8     float offset = 0.0;
                 ; 000D 00A9     float sensorRef1 = 0.0,sensorRef2 = 0.0,sensorRef3 = 0.0;
                 ; 000D 00AA     float stdMeter1 = 0.0,stdMeter2 = 0.0,stdMeter3 = 0.0;        //standrad  meter
                 ; 000D 00AB     float lowRange = 0.0;
                 ; 000D 00AC     float stdMeterRange = 0.0;
                 ; 000D 00AD     float factorAA = 0.0,factorBB = 0.0,factorCC = 0.0;
                 ; 000D 00AE     float viSensorTempValue = 0.0;
                 ; 000D 00AF     float viRawVoltValue = 0.0;
                 ; 000D 00B0     float viRiaseUpVoltValue = 0.0;
                 ; 000D 00B1     float viVoltUseCaluate = 0.0;       // + to -
                 ; 000D 00B2 
                 ; 000D 00B3     if( (ch<0) || (ch>=MAX_SENS_CHANNEL) ){
006c37 93ba      	ST   -Y,R27
006c38 93aa      	ST   -Y,R26
006c39 97ef      	SBIW R28,63
006c3a 9769      	SBIW R28,25
006c3b e588      	LDI  R24,88
006c3c e0a0      	LDI  R26,LOW(0)
006c3d e0b0      	LDI  R27,HIGH(0)
006c3e e4e0      	LDI  R30,LOW(_0x1A0022*2)
006c3f e4f4      	LDI  R31,HIGH(_0x1A0022*2)
006c40 e060      	LDI  R22,BYTE3(_0x1A0022*2)
006c41 940e e0de 	CALL __INITLOCB
006c43 940e e0d2 	CALL __SAVELOCR4
                 ;	ch -> Y+94
                 ;	*sensor -> Y+92
                 ;	channelConnect -> R17
                 ;	x_1 -> Y+88
                 ;	x_2 -> Y+84
                 ;	y_1 -> Y+80
                 ;	y_2 -> Y+76
                 ;	viZeroSet -> Y+72
                 ;	viADCbuffer -> Y+68
                 ;	i -> R18,R19
                 ;	offset -> Y+64
                 ;	sensorRef1 -> Y+60
                 ;	sensorRef2 -> Y+56
                 ;	sensorRef3 -> Y+52
                 ;	stdMeter1 -> Y+48
                 ;	stdMeter2 -> Y+44
                 ;	stdMeter3 -> Y+40
                 ;	lowRange -> Y+36
                 ;	stdMeterRange -> Y+32
                 ;	factorAA -> Y+28
                 ;	factorBB -> Y+24
                 ;	factorCC -> Y+20
                 ;	viSensorTempValue -> Y+16
                 ;	viRawVoltValue -> Y+12
                 ;	viRiaseUpVoltValue -> Y+8
                 ;	viVoltUseCaluate -> Y+4
006c45 e010      	LDI  R17,0
                +
006c46 e020     +LDI R18 , LOW ( 0 )
006c47 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006c48 01de     +MOVW R26 , R28
006c49 5aa1     +SUBI R26 , LOW ( - 95 )
006c4a 4fbf     +SBCI R27 , HIGH ( - 95 )
006c4b 91ac     +LD R26 , X
                 	__GETB2SX 95
006c4c 23aa      	TST  R26
006c4d f022      	BRMI _0x1A0024
006c4e 940e cd14 	CALL SUBOPT_0x208
006c50 9715      	SBIW R26,5
006c51 f04c      	BRLT _0x1A0023
                 _0x1A0024:
                 ; 000D 00B4         printDebug("<sensorRead> ERR: ch value out of range\r\n");
                +
006c52 eee0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 52 ) )
006c53 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 52 ) )
006c54 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 52 ) )
006c55 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 52 ) )
                 	__POINTD1FN _0x1A0000,52
006c56 940e c042 	CALL SUBOPT_0x3
                 ; 000D 00B5         return -3;
006c58 efed      	LDI  R30,LOW(65533)
006c59 efff      	LDI  R31,HIGH(65533)
006c5a c2c3      	RJMP _0x20E006A
                 ; 000D 00B6     }
                 ; 000D 00B7 
                 ; 000D 00B8     // ----- Check Sensor Status (Connected-Disconnected) ----- //
                 ; 000D 00B9     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0023:
006c5b 940e c172 	CALL SUBOPT_0x2E
006c5d f021      	BREQ _0x1A0027
006c5e 940e c172 	CALL SUBOPT_0x2E
006c60 30e3      	CPI  R30,LOW(0x3)
006c61 f521      	BRNE _0x1A0026
                 _0x1A0027:
                 ; 000D 00BA     /*bongkot comment*/
                 ; 000D 00BB         SENSOR_SELECT(ch);
006c62 940e c497 	CALL SUBOPT_0xA1
                +
006c64 01fe     +MOVW R30 , R28
006c65 5ae2     +SUBI R30 , LOW ( - 94 )
006c66 4fff     +SBCI R31 , HIGH ( - 94 )
006c67 81e0     +LD R30 , Z
                 	__GETB1SX 94
006c68 940e c4a1 	CALL SUBOPT_0xA2
                 ; 000D 00BC         //delay_ms(20);                                               // -- for multiplex stable -- //
                 ; 000D 00BD         channelConnect = SENSOR_CONNECT;
006c6a 940e c17d 	CALL SUBOPT_0x2F
006c6c 2f1e      	MOV  R17,R30
                 ; 000D 00BE 
                 ; 000D 00BF         //updateSensorADC(ch);
                 ; 000D 00C0 //        if(adcData[ch] < TMC_DISCON_LIMIT){
                 ; 000D 00C1 //            channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00C2 //        }
                 ; 000D 00C3 //        else{
                 ; 000D 00C4 //            channelConnect  = SENS_NORMAL;
                 ; 000D 00C5 //        }
                 ; 000D 00C6 //         viADCbuffer = 0;
                 ; 000D 00C7 //         for(i=0;i<20;i++){
                 ; 000D 00C8 //            viADCbuffer += (unsigned long)(read_adc(8+ch));
                 ; 000D 00C9 //         }
                 ; 000D 00CA //         viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 00CB //         //viSensorTempValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 00CC //         iTCVoltData[ch] = (float)(viRawVoltValue+0.213);
                 ; 000D 00CD //         iTCADCData[ch]  = (float)(viADCbuffer/20.0);
                 ; 000D 00CE //
                 ; 000D 00CF //         printDebug("[sensorRead1]ch1[%04.2f|%0.2f],ch2[%04.2f|%0.2f],ch3[%04.2f|%0.2f],ch4[%04.2f|%0.2f],ch5[%04.2f|%0.2f]\r\n",iTCADCData[0],iTCVoltData[0],iTCADCData[1],iTCVoltData[1],iTCADCData[2],iTCVoltData[2],iTCADCData[3],iTCVoltD                 ata[3],iTCADCData[4],iTCVoltData[4]);
                 ; 000D 00D0 
                 ; 000D 00D1 
                 ; 000D 00D2 //         if(viSensorTempValue < TMCP_SHORT_LIMIT){
                 ; 000D 00D3 //             //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00D4 //             channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00D5 //         }else if(viSensorTempValue > TMCP_OPEN_LIMIT){
                 ; 000D 00D6 //             channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00D7 //         }else{
                 ; 000D 00D8 //             channelConnect  = SENS_NORMAL;
                 ; 000D 00D9 //         }
                 ; 000D 00DA //         viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch)+0.213)-viZeroSet);
                 ; 000D 00DB //         viRiaseUpVoltValue = (float)(iTCVoltData[ch]-viZeroSet);
                 ; 000D 00DC //         iTCVoltData[ch] = viRiaseUpVoltValue;
                 ; 000D 00DD          //printDebug("[sensorRead2]ch1[%04.2f|%0.2f],ch2[%04.2f|%0.2f],ch3[%04.2f|%0.2f],ch4[%04.2f|%0.2f],ch5[%04.2f|%0.2f]\r\n",iTCADCData[0],iTCVoltData[0],iTCADCData[1],iTCVoltData[1],iTCADCData[2],iTCVoltData[2],iTCADCData[3],iTCVoltD                 ata[3],iTCADCData[4],iTCVoltData[4]);
006c6d 940e cd1b ; 000D 00DE 
                 ; 000D 00DF          viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
                 	CALL SUBOPT_0x209
006c6f 940e c4c2 ; 000D 00E0          viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
006c71 940e cd32 ; 000D 00E1          if(viVoltUseCaluate < TMCP_SHORT_LIMIT){
006c73 f410      	CALL SUBOPT_0xA9
                 	CALL SUBOPT_0x20A
                 	BRSH _0x1A0029
006c74 e814      ; 000D 00E2              //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00E3              channelConnect  = SENS_ERR_DISCONNECT;
006c75 c00f      	LDI  R17,LOW(132)
                 ; 000D 00E4          }else if(viVoltUseCaluate > TMCP_OPEN_LIMIT){
006c76 940e c4c2 	RJMP _0x1A002A
                +
006c78 efe6     +LDI R30 , LOW ( 0x3FBC28F6 )
006c79 e2f8     +LDI R31 , HIGH ( 0x3FBC28F6 )
006c7a eb6c     +LDI R22 , BYTE3 ( 0x3FBC28F6 )
006c7b e37f     +LDI R23 , BYTE4 ( 0x3FBC28F6 )
                 	__GETD1N 0x3FBC28F6
006c7c 940e de8f 	CALL __CMPF12
006c7e f009      	BREQ PC+2
006c7f f410      	BRCC PC+3
006c80 940c 6c84 	JMP  _0x1A002B
                 ; 000D 00E5              channelConnect  = SENS_ERR_DISCONNECT;
006c82 e814      	LDI  R17,LOW(132)
                 ; 000D 00E6          }else{
006c83 c001      	RJMP _0x1A002C
                 _0x1A002B:
                 ; 000D 00E7              channelConnect  = SENS_NORMAL;
006c84 e010      	LDI  R17,LOW(0)
                 ; 000D 00E8          }
                 _0x1A002C:
                 _0x1A002A:
                 ; 000D 00E9 
                 ; 000D 00EA 
                 ; 000D 00EB 
                 ; 000D 00EC         /*bongkot test*/
                 ; 000D 00ED         //channelConnect  = SENS_NORMAL;
                 ; 000D 00EE         //printDebug("SENSOR:NORMAL\r\n");
                 ; 000D 00EF 
                 ; 000D 00F0 
                 ; 000D 00F1     }
                 ; 000D 00F2     else if(TEMP_SEL == TEMP_TMEC){
006c85 c04d      	RJMP _0x1A002D
                 _0x1A0026:
006c86 940e c172 	CALL SUBOPT_0x2E
006c88 30e1      	CPI  R30,LOW(0x1)
006c89 f519      	BRNE _0x1A002E
                 ; 000D 00F3 
                 ; 000D 00F4         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006c8a 940e cd39 	CALL SUBOPT_0x20B
                 ; 000D 00F5 
                 ; 000D 00F6         if(adcData[ch] < TMEC_SHORT_LIMIT){
006c8c 940e c0fc 	CALL SUBOPT_0x1B
006c8e 01df      	MOVW R26,R30
006c8f 01cb      	MOVW R24,R22
                +
006c90 e0e0     +LDI R30 , LOW ( 0x40000000 )
006c91 e0f0     +LDI R31 , HIGH ( 0x40000000 )
006c92 e060     +LDI R22 , BYTE3 ( 0x40000000 )
006c93 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
006c94 940e de8f 	CALL __CMPF12
006c96 f410      	BRSH _0x1A002F
                 ; 000D 00F7             channelConnect  = SENS_ERR_SHORT;
006c97 e910      	LDI  R17,LOW(144)
                 ; 000D 00F8         }
                 ; 000D 00F9         else if(adcData[ch] > TMEC_OPEN_LIMIT){
006c98 c013      	RJMP _0x1A0030
                 _0x1A002F:
006c99 940e cd44 	CALL SUBOPT_0x20C
006c9b 940e c0fc 	CALL SUBOPT_0x1B
006c9d 01df      	MOVW R26,R30
006c9e 01cb      	MOVW R24,R22
                +
006c9f e0e0     +LDI R30 , LOW ( 0x447F4000 )
006ca0 e4f0     +LDI R31 , HIGH ( 0x447F4000 )
006ca1 e76f     +LDI R22 , BYTE3 ( 0x447F4000 )
006ca2 e474     +LDI R23 , BYTE4 ( 0x447F4000 )
                 	__GETD1N 0x447F4000
006ca3 940e de8f 	CALL __CMPF12
006ca5 f009      	BREQ PC+2
006ca6 f410      	BRCC PC+3
006ca7 940c 6cab 	JMP  _0x1A0031
                 ; 000D 00FA             channelConnect  = SENS_ERR_DISCONNECT;
006ca9 e814      	LDI  R17,LOW(132)
                 ; 000D 00FB         }
                 ; 000D 00FC         else{
006caa c001      	RJMP _0x1A0032
                 _0x1A0031:
                 ; 000D 00FD             channelConnect  = SENS_NORMAL;
006cab e010      	LDI  R17,LOW(0)
                 ; 000D 00FE         }
                 _0x1A0032:
                 _0x1A0030:
                 ; 000D 00FF     }
                 ; 000D 0100     else if(TEMP_SEL == TEMP_PT100){
006cac c026      	RJMP _0x1A0033
                 _0x1A002E:
006cad 940e c172 	CALL SUBOPT_0x2E
006caf 30e2      	CPI  R30,LOW(0x2)
006cb0 f511      	BRNE _0x1A0034
                 ; 000D 0101 
                 ; 000D 0102         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006cb1 940e cd39 	CALL SUBOPT_0x20B
                 ; 000D 0103 
                 ; 000D 0104         if(adcData[ch] < PT100_SHORT_LIMIT){
006cb3 940e c0fc 	CALL SUBOPT_0x1B
006cb5 01df      	MOVW R26,R30
006cb6 01cb      	MOVW R24,R22
                +
006cb7 e0e0     +LDI R30 , LOW ( 0x41000000 )
006cb8 e0f0     +LDI R31 , HIGH ( 0x41000000 )
006cb9 e060     +LDI R22 , BYTE3 ( 0x41000000 )
006cba e471     +LDI R23 , BYTE4 ( 0x41000000 )
                 	__GETD1N 0x41000000
006cbb 940e de8f 	CALL __CMPF12
006cbd f410      	BRSH _0x1A0035
                 ; 000D 0105             channelConnect  = SENS_ERR_SHORT;
006cbe e910      	LDI  R17,LOW(144)
                 ; 000D 0106         }
                 ; 000D 0107         else if(adcData[ch] > PT100_OPEN_LIMIT){
006cbf c013      	RJMP _0x1A0036
                 _0x1A0035:
006cc0 940e cd44 	CALL SUBOPT_0x20C
006cc2 940e c0fc 	CALL SUBOPT_0x1B
006cc4 01df      	MOVW R26,R30
006cc5 01cb      	MOVW R24,R22
                +
006cc6 e0e0     +LDI R30 , LOW ( 0x44728000 )
006cc7 e8f0     +LDI R31 , HIGH ( 0x44728000 )
006cc8 e762     +LDI R22 , BYTE3 ( 0x44728000 )
006cc9 e474     +LDI R23 , BYTE4 ( 0x44728000 )
                 	__GETD1N 0x44728000
006cca 940e de8f 	CALL __CMPF12
006ccc f009      	BREQ PC+2
006ccd f410      	BRCC PC+3
006cce 940c 6cd2 	JMP  _0x1A0037
                 ; 000D 0108             channelConnect  = SENS_ERR_DISCONNECT;
006cd0 e814      	LDI  R17,LOW(132)
                 ; 000D 0109         }
                 ; 000D 010A         else{
006cd1 c001      	RJMP _0x1A0038
                 _0x1A0037:
                 ; 000D 010B             channelConnect  = SENS_NORMAL;
006cd2 e010      	LDI  R17,LOW(0)
                 ; 000D 010C         }
                 _0x1A0038:
                 _0x1A0036:
                 ; 000D 010D     }
                 ; 000D 010E 
                 ; 000D 010F     /*bongkot test*/
                 ; 000D 0110     //sensor->status  = SENS_NORMAL;
                 ; 000D 0111     //lastCheck[ch] = channelConnect;
                 ; 000D 0112 
                 ; 000D 0113     // ----- Confirm Sensor Status Stable ----- //
                 ; 000D 0114     if(channelConnect != lastCheck[ch])
                 _0x1A0034:
                 _0x1A0033:
                 _0x1A002D:
006cd3 940e cd4c 	CALL SUBOPT_0x20D
006cd5 59ec      	SUBI R30,LOW(-_lastCheck_S00D0004000)
006cd6 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0004000)
006cd7 81e0      	LD   R30,Z
006cd8 17e1      	CP   R30,R17
006cd9 f079      	BREQ _0x1A0039
                 ; 000D 0115     {
                 ; 000D 0116         TIMER_setTimer(&t[ch],5);
006cda 940e cd53 	CALL SUBOPT_0x20E
006cdc 940e c107 	CALL SUBOPT_0x1D
006cde 940e cd59 	CALL SUBOPT_0x20F
                 ; 000D 0117         lastCheck[ch]       = channelConnect;
006ce0 940e cd4c 	CALL SUBOPT_0x20D
006ce2 59ec      	SUBI R30,LOW(-_lastCheck_S00D0004000)
006ce3 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0004000)
006ce4 8310      	ST   Z,R17
                 ; 000D 0118         steadyState[ch]     = 0;
006ce5 940e cd5f 	CALL SUBOPT_0x210
006ce7 e0a0      	LDI  R26,LOW(0)
006ce8 c00f      	RJMP _0x1A00B6
                 ; 000D 0119     }
                 ; 000D 011A     else if(!steadyState[ch])
                 _0x1A0039:
006ce9 940e cd5f 	CALL SUBOPT_0x210
006ceb 81e0      	LD   R30,Z
006cec 30e0      	CPI  R30,0
006ced f459      	BRNE _0x1A003B
                 ; 000D 011B     {
                 ; 000D 011C         if(TIMER_checkTimerExceed(t[ch])){
006cee 940e cd53 	CALL SUBOPT_0x20E
006cf0 940e c0fc 	CALL SUBOPT_0x1B
006cf2 940e c101 	CALL SUBOPT_0x1C
006cf4 f021      	BREQ _0x1A003C
                 ; 000D 011D             steadyState[ch] = 1;
006cf5 940e cd5f 	CALL SUBOPT_0x210
006cf7 e0a1      	LDI  R26,LOW(1)
                 _0x1A00B6:
006cf8 83a0      	STD  Z+0,R26
                 ; 000D 011E         }
                 ; 000D 011F     }
                 _0x1A003C:
                 ; 000D 0120 
                 ; 000D 0121     /*bongkot test*/
                 ; 000D 0122     //printDebug("SENSOR:channelConnect Status Stable\r\n");
                 ; 000D 0123     //steadyState[ch] = 1;
                 ; 000D 0124 
                 ; 000D 0125     if(!steadyState[ch])
                 _0x1A003B:
006cf9 940e cd5f 	CALL SUBOPT_0x210
006cfb 81e0      	LD   R30,Z
006cfc 30e0      	CPI  R30,0
006cfd f441      	BRNE _0x1A003D
                 ; 000D 0126     {
                 ; 000D 0127         //printDebug("<sensorRead> sensor %d state unstable\r\n",ch+1);
                 ; 000D 0128         sensor->status  = SENS_ERR_UNKNOWN;
006cfe 940e cd63 	CALL SUBOPT_0x211
006d00 9614      	ADIW R26,4
006d01 efef      	LDI  R30,LOW(255)
006d02 93ec      	ST   X,R30
                 ; 000D 0129         return -9;
006d03 efe7      	LDI  R30,LOW(65527)
006d04 efff      	LDI  R31,HIGH(65527)
006d05 c218      	RJMP _0x20E006A
                 ; 000D 012A     }
                 ; 000D 012B 
                 ; 000D 012C     /*bongkot test*/
                 ; 000D 012D     //printDebug("SENSOR:steadyState ok\r\n");
                 ; 000D 012E 
                 ; 000D 012F 
                 ; 000D 0130     // ----- Return if Sensor Data is not available ----- //
                 ; 000D 0131     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED))
                 _0x1A003D:
006d06 940e c172 	CALL SUBOPT_0x2E
006d08 f021      	BREQ _0x1A003F
006d09 940e c172 	CALL SUBOPT_0x2E
006d0b 30e3      	CPI  R30,LOW(0x3)
006d0c f431      	BRNE _0x1A003E
                 _0x1A003F:
                 ; 000D 0132     {   /*bongkot comment*/
                 ; 000D 0133 //        if(!channelConnect){
                 ; 000D 0134 //            sensor->status  = SENS_ERR_DISCONNECT;
                 ; 000D 0135 //            return -2;
                 ; 000D 0136 //        }
                 ; 000D 0137         if(channelConnect != SENS_NORMAL){
006d0d 3010      	CPI  R17,0
006d0e f019      	BREQ _0x1A0041
                 ; 000D 0138             sensor->status  = channelConnect;
006d0f 940e cd6a 	CALL SUBOPT_0x212
                 ; 000D 0139             return -2;
006d11 c20c      	RJMP _0x20E006A
                 ; 000D 013A         }
                 ; 000D 013B        // updateSensorADC(ch);                            // -- update adcData[ch] -- //
                 ; 000D 013C     }
                 _0x1A0041:
                 ; 000D 013D     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
006d12 c00f      	RJMP _0x1A0042
                 _0x1A003E:
006d13 940e c43e 	CALL SUBOPT_0x95
006d15 f021      	BREQ _0x1A0044
006d16 940e c172 	CALL SUBOPT_0x2E
006d18 30e2      	CPI  R30,LOW(0x2)
006d19 f441      	BRNE _0x1A0043
                 _0x1A0044:
                 ; 000D 013E         if(channelConnect != SENS_NORMAL){
006d1a 3010      	CPI  R17,0
006d1b f019      	BREQ _0x1A0046
                 ; 000D 013F             sensor->status  = channelConnect;
006d1c 940e cd6a 	CALL SUBOPT_0x212
                 ; 000D 0140             return -2;
006d1e c1ff      	RJMP _0x20E006A
                 ; 000D 0141         }
                 ; 000D 0142 
                 ; 000D 0143         updateSensorADC(ch);                            // -- update adcData[ch] -- again ^_^ --- //
                 _0x1A0046:
006d1f 940e cd14 	CALL SUBOPT_0x208
006d21 dde8      	RCALL _updateSensorADC
                 ; 000D 0144     }
                 ; 000D 0145 
                 ; 000D 0146     switch(epCalType[ch]){
                 _0x1A0043:
                 _0x1A0042:
006d22 940e cd14 	CALL SUBOPT_0x208
006d24 5aa8      	SUBI R26,LOW(-_epCalType)
006d25 4fb9      	SBCI R27,HIGH(-_epCalType)
006d26 940e e087 	CALL __EEPROMRDB
006d28 940e cd74 	CALL SUBOPT_0x213
                 ; 000D 0147         case CAL_SELFCOMPARE    :   // --- Same as CAL_EXTOFFSET --- //
006d2a f031      	BREQ _0x1A004B
                 ; 000D 0148         case CAL_EXTOFFSET      :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006d2b 30e2      	CPI  R30,LOW(0x2)
006d2c e0a0      	LDI  R26,HIGH(0x2)
006d2d 07fa      	CPC  R31,R26
006d2e f011      	BREQ PC+3
006d2f 940c 6da8 	JMP _0x1A004C
                 _0x1A004B:
006d31 940e c172 	CALL SUBOPT_0x2E
006d33 f021      	BREQ _0x1A004E
006d34 940e c172 	CALL SUBOPT_0x2E
006d36 30e3      	CPI  R30,LOW(0x3)
006d37 f521      	BRNE _0x1A004D
                 _0x1A004E:
                 ; 000D 0149                                         /*bongkot comment*/
                 ; 000D 014A                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]) + epFactor_C[ch];
                 ; 000D 014B                                          //sensor->value   +=    epFactor_C[ch];
                 ; 000D 014C 
                 ; 000D 014D //                                         viADCbuffer = 0;
                 ; 000D 014E //                                         for(i=0;i<30;i++){
                 ; 000D 014F //                                            viADCbuffer += read_adc(8+ch);
                 ; 000D 0150 //                                         }
                 ; 000D 0151 //
                 ; 000D 0152 //                                         viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 0153 //                                         offset =  epTempRef1[ch] - epADCRef1[ch];
                 ; 000D 0154 //                                         printDebug("TempRaw(%f), TempRef(%f), Offset(%f)\r\n",viSensorTempValue,epTempRef1[ch],offset);
                 ; 000D 0155 //                                         sensor->value = viSensorTempValue + offset;
                 ; 000D 0156 
                 ; 000D 0157                                          viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
006d38 940e cd1b 	CALL SUBOPT_0x209
                 ; 000D 0158                                          viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
                 ; 000D 0159                                          offset =  epTempRef1[ch] - epADCRef1[ch];
006d3a 940e cd79 	CALL SUBOPT_0x214
006d3c 937f      	PUSH R23
006d3d 936f      	PUSH R22
006d3e 93ff      	PUSH R31
006d3f 93ef      	PUSH R30
006d40 940e cd83 	CALL SUBOPT_0x215
006d42 91af      	POP  R26
006d43 91bf      	POP  R27
006d44 918f      	POP  R24
006d45 919f      	POP  R25
006d46 940e cd8d 	CALL SUBOPT_0x216
                +
006d48 01de     +MOVW R26 , R28
006d49 5ca0     +SUBI R26 , LOW ( - 64 )
006d4a 4fbf     +SBCI R27 , HIGH ( - 64 )
006d4b 93ed     +ST X + , R30
006d4c 93fd     +ST X + , R31
006d4d 936d     +ST X + , R22
006d4e 937c     +ST X , R23
                 	__PUTD1SX 64
                 ; 000D 015A                                          viSensorTempValue = iAD595VoltToTemp(viVoltUseCaluate);
006d4f 940e cd92 	CALL SUBOPT_0x217
                 ; 000D 015B             //                             printDebug("T_Raw(%f), ADC_Raw(%f), T_Ref(%f), ADC_Ref(%f), Offset(%f)\r\n",viSensorTempValue,viVoltUseCaluate,epTempRef1[ch],epADCRef1[ch],offset);
                 ; 000D 015C                                          sensor->value = viSensorTempValue + offset;        //0.213 *2 = 0.426
                +
006d51 01fe     +MOVW R30 , R28
006d52 5ce0     +SUBI R30 , LOW ( - 64 )
006d53 4fff     +SBCI R31 , HIGH ( - 64 )
006d54 9001     +LD R0 , Z +
006d55 9011     +LD R1 , Z +
006d56 9161     +LD R22 , Z +
006d57 8170     +LD R23 , Z
006d58 01f0     +MOVW R30 , R0
                 	__GETD1SX 64
006d59 940e cd9b 	CALL SUBOPT_0x218
006d5b c047      	RJMP _0x1A00B7
                 ; 000D 015D 
                 ; 000D 015E                                     }
                 ; 000D 015F                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A004D:
006d5c 940e c172 	CALL SUBOPT_0x2E
006d5e 30e1      	CPI  R30,LOW(0x1)
006d5f f489      	BRNE _0x1A0051
                 ; 000D 0160 
                 ; 000D 0161                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epFactor_C[ch];
006d60 940e cd44 	CALL SUBOPT_0x20C
006d62 940e c0fc 	CALL SUBOPT_0x1B
006d64 940e cda0 	CALL SUBOPT_0x219
006d66 937f      	PUSH R23
006d67 936f      	PUSH R22
006d68 93ff      	PUSH R31
006d69 93ef      	PUSH R30
006d6a 940e cda7 	CALL SUBOPT_0x21A
006d6c 91af      	POP  R26
006d6d 91bf      	POP  R27
006d6e 918f      	POP  R24
006d6f 919f      	POP  R25
006d70 c032      	RJMP _0x1A00B7
                 ; 000D 0162                                     }
                 ; 000D 0163                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0051:
006d71 940e c172 	CALL SUBOPT_0x2E
006d73 30e2      	CPI  R30,LOW(0x2)
006d74 f591      	BRNE _0x1A0053
                 ; 000D 0164                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 0165                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 0166                                                              epFactor_C[ch];
006d75 940e cd44 	CALL SUBOPT_0x20C
006d77 940e c0fc 	CALL SUBOPT_0x1B
006d79 940e cdb1 	CALL SUBOPT_0x21B
006d7b 937f      	PUSH R23
006d7c 936f      	PUSH R22
006d7d 93ff      	PUSH R31
006d7e 93ef      	PUSH R30
006d7f 940e cd44 	CALL SUBOPT_0x20C
006d81 940e c0fc 	CALL SUBOPT_0x1B
006d83 91af      	POP  R26
006d84 91bf      	POP  R27
006d85 918f      	POP  R24
006d86 919f      	POP  R25
006d87 940e ddfc 	CALL __MULF12
006d89 937f      	PUSH R23
006d8a 936f      	PUSH R22
006d8b 93ff      	PUSH R31
006d8c 93ef      	PUSH R30
006d8d 940e cd44 	CALL SUBOPT_0x20C
006d8f 940e c0fc 	CALL SUBOPT_0x1B
006d91 940e cdb8 	CALL SUBOPT_0x21C
006d93 91af      	POP  R26
006d94 91bf      	POP  R27
006d95 918f      	POP  R24
006d96 919f      	POP  R25
006d97 940e ddac 	CALL __ADDF12
006d99 937f      	PUSH R23
006d9a 936f      	PUSH R22
006d9b 93ff      	PUSH R31
006d9c 93ef      	PUSH R30
006d9d 940e cda7 	CALL SUBOPT_0x21A
006d9f 91af      	POP  R26
006da0 91bf      	POP  R27
006da1 918f      	POP  R24
006da2 919f      	POP  R25
                 _0x1A00B7:
006da3 940e ddac 	CALL __ADDF12
006da5 940e cdbf 	CALL SUBOPT_0x21D
                 ; 000D 0167 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epFactor_C[ch];
                 ; 000D 0168                                     }
                 ; 000D 0169                                     break;
                 _0x1A0053:
006da7 c16f      	RJMP _0x1A0049
                 ; 000D 016A         case CAL_EXTLINEAR      :  {
                 _0x1A004C:
006da8 30e3      	CPI  R30,LOW(0x3)
006da9 e0a0      	LDI  R26,HIGH(0x3)
006daa 07fa      	CPC  R31,R26
006dab f011      	BREQ PC+3
006dac 940c 6e18 	JMP _0x1A0054
                 ; 000D 016B                                         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006dae 940e c172 	CALL SUBOPT_0x2E
006db0 f029      	BREQ _0x1A0056
006db1 940e c172 	CALL SUBOPT_0x2E
006db3 30e3      	CPI  R30,LOW(0x3)
006db4 f009      	BREQ _0x1A0056
006db5 c043      	RJMP _0x1A0055
                 _0x1A0056:
                 ; 000D 016C                                                //sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
                 ; 000D 016D 
                 ; 000D 016E //                                               viADCbuffer = 0;
                 ; 000D 016F //                                                 for(i=0;i<30;i++){
                 ; 000D 0170 //                                                    viADCbuffer += read_adc(8+ch);
                 ; 000D 0171 //                                                 }
                 ; 000D 0172 //
                 ; 000D 0173 //                                                sensorRef1 = iAD595ADCToTemp(epADCRef1[ch],1);
                 ; 000D 0174 //                                                sensorRef2 = iAD595ADCToTemp(epADCRef2[ch],1);
                 ; 000D 0175 //                                                stdMeter1  = epTempRef1[ch];
                 ; 000D 0176 //                                                stdMeter2  = epTempRef2[ch];
                 ; 000D 0177 //                                                lowRange   =  sensorRef2 - sensorRef1;
                 ; 000D 0178 //                                                stdMeterRange = stdMeter2 - stdMeter1;
                 ; 000D 0179 //                                                viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 017A //                                               sensor->value = (((viSensorTempValue-sensorRef1)*stdMeterRange)/lowRange)+stdMeter1;
                 ; 000D 017B 
                 ; 000D 017C                                                 sensorRef1 = epADCRef1[ch];    //become adc update => temp already
006db6 940e cd83 	CALL SUBOPT_0x215
006db8 940e cdc3 	CALL SUBOPT_0x21E
                 ; 000D 017D                                                 sensorRef2 = epADCRef2[ch];
                 ; 000D 017E                                                 stdMeter1  = epTempRef1[ch];
006dba 940e cd79 	CALL SUBOPT_0x214
006dbc 940e cdd5 	CALL SUBOPT_0x21F
                 ; 000D 017F                                                 stdMeter2  = epTempRef2[ch];
                 ; 000D 0180                                                 lowRange   =  sensorRef2 - sensorRef1;
                +
006dbe adac     +LDD R26 , Y + 60
006dbf adbd     +LDD R27 , Y + 60 + 1
006dc0 ad8e     +LDD R24 , Y + 60 + 2
006dc1 ad9f     +LDD R25 , Y + 60 + 3
                 	__GETD2S 60
                +
006dc2 ade8     +LDD R30 , Y + 56
006dc3 adf9     +LDD R31 , Y + 56 + 1
006dc4 ad6a     +LDD R22 , Y + 56 + 2
006dc5 ad7b     +LDD R23 , Y + 56 + 3
                 	__GETD1S 56
006dc6 940e dda5 	CALL __SUBF12
                +
006dc8 a3ec     +STD Y + 36 , R30
006dc9 a3fd     +STD Y + 36 + 1 , R31
006dca a36e     +STD Y + 36 + 2 , R22
006dcb a37f     +STD Y + 36 + 3 , R23
                 	__PUTD1S 36
                 ; 000D 0181                                                 stdMeterRange = stdMeter2 - stdMeter1;
                +
006dcc a9a8     +LDD R26 , Y + 48
006dcd a9b9     +LDD R27 , Y + 48 + 1
006dce a98a     +LDD R24 , Y + 48 + 2
006dcf a99b     +LDD R25 , Y + 48 + 3
                 	__GETD2S 48
                +
006dd0 a5ec     +LDD R30 , Y + 44
006dd1 a5fd     +LDD R31 , Y + 44 + 1
006dd2 a56e     +LDD R22 , Y + 44 + 2
006dd3 a57f     +LDD R23 , Y + 44 + 3
                 	__GETD1S 44
006dd4 940e dda5 	CALL __SUBF12
                +
006dd6 a3e8     +STD Y + 32 , R30
006dd7 a3f9     +STD Y + 32 + 1 , R31
006dd8 a36a     +STD Y + 32 + 2 , R22
006dd9 a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
                 ; 000D 0182 
                 ; 000D 0183                                                 viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
006dda 940e cd1b 	CALL SUBOPT_0x209
                 ; 000D 0184                                                 viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
                 ; 000D 0185                                                 viSensorTempValue = iAD595VoltToTemp(viVoltUseCaluate);
006ddc 940e cd92 	CALL SUBOPT_0x217
                 ; 000D 0186               //                                  printDebug("T_Raw(%f), ADC_Raw(%f), T_Ref(1,2)[%f,%f], ADC(T)_Ref(1,2)[%f,%f]\r\n",viSensorTempValue,viVoltUseCaluate,stdMeter1,stdMeter2,sensorRef1,sensorRef2);
                 ; 000D 0187                                                 sensor->value = (((viSensorTempValue-sensorRef1)*stdMeterRange)/lowRange)+stdMeter1;
                +
006dde adac     +LDD R26 , Y + 60
006ddf adbd     +LDD R27 , Y + 60 + 1
006de0 ad8e     +LDD R24 , Y + 60 + 2
006de1 ad9f     +LDD R25 , Y + 60 + 3
                 	__GETD2S 60
006de2 940e c08d 	CALL SUBOPT_0xC
006de4 940e dda5 	CALL __SUBF12
                +
006de6 a1a8     +LDD R26 , Y + 32
006de7 a1b9     +LDD R27 , Y + 32 + 1
006de8 a18a     +LDD R24 , Y + 32 + 2
006de9 a19b     +LDD R25 , Y + 32 + 3
                 	__GETD2S 32
006dea 940e ddfc 	CALL __MULF12
006dec 01df      	MOVW R26,R30
006ded 01cb      	MOVW R24,R22
                +
006dee a1ec     +LDD R30 , Y + 36
006def a1fd     +LDD R31 , Y + 36 + 1
006df0 a16e     +LDD R22 , Y + 36 + 2
006df1 a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
006df2 940e de4a 	CALL __DIVF21
                +
006df4 a9a8     +LDD R26 , Y + 48
006df5 a9b9     +LDD R27 , Y + 48 + 1
006df6 a98a     +LDD R24 , Y + 48 + 2
006df7 a99b     +LDD R25 , Y + 48 + 3
                 	__GETD2S 48
006df8 c01a      	RJMP _0x1A00B8
                 ; 000D 0188 
                 ; 000D 0189 
                 ; 000D 018A                                         }else{
                 _0x1A0055:
                 ; 000D 018B                                                sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
006df9 940e cde7 	CALL SUBOPT_0x220
006dfb 937f      	PUSH R23
006dfc 936f      	PUSH R22
006dfd 93ff      	PUSH R31
006dfe 93ef      	PUSH R30
006dff 940e cd44 	CALL SUBOPT_0x20C
006e01 940e c0fc 	CALL SUBOPT_0x1B
006e03 91af      	POP  R26
006e04 91bf      	POP  R27
006e05 918f      	POP  R24
006e06 919f      	POP  R25
006e07 940e ddfc 	CALL __MULF12
006e09 937f      	PUSH R23
006e0a 936f      	PUSH R22
006e0b 93ff      	PUSH R31
006e0c 93ef      	PUSH R30
006e0d 940e cda7 	CALL SUBOPT_0x21A
006e0f 91af      	POP  R26
006e10 91bf      	POP  R27
006e11 918f      	POP  R24
006e12 919f      	POP  R25
                 _0x1A00B8:
006e13 940e ddac 	CALL __ADDF12
006e15 940e cdbf 	CALL SUBOPT_0x21D
                 ; 000D 018C                                         }
                 ; 000D 018D 
                 ; 000D 018E                                         break;
006e17 c0ff      	RJMP _0x1A0049
                 ; 000D 018F                                     }
                 ; 000D 0190         case CAL_EXTPOLYNOMIAL  :   {   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0054:
006e18 30e4      	CPI  R30,LOW(0x4)
006e19 e0a0      	LDI  R26,HIGH(0x4)
006e1a 07fa      	CPC  R31,R26
006e1b f011      	BREQ PC+3
006e1c 940c 6ec4 	JMP _0x1A005E
006e1e 940e c172 	CALL SUBOPT_0x2E
006e20 f029      	BREQ _0x1A005B
006e21 940e c172 	CALL SUBOPT_0x2E
006e23 30e3      	CPI  R30,LOW(0x3)
006e24 f009      	BREQ _0x1A005B
006e25 c053      	RJMP _0x1A005A
                 _0x1A005B:
                 ; 000D 0191 //                                            viADCbuffer = 0;
                 ; 000D 0192 //                                            for(i=0;i<30;i++){
                 ; 000D 0193 //                                                viADCbuffer += read_adc(8+ch);
                 ; 000D 0194 //                                            }
                 ; 000D 0195 //                                            sensorRef1 = epADCRef1[ch];
                 ; 000D 0196 //                                            sensorRef2 = epADCRef2[ch];
                 ; 000D 0197 //                                            sensorRef3 = epADCRef3[ch];
                 ; 000D 0198 //                                            stdMeter1 = epTempRef1[ch];
                 ; 000D 0199 //                                            stdMeter2 = epTempRef2[ch];
                 ; 000D 019A //                                            stdMeter3 = epTempRef3[ch];
                 ; 000D 019B //                                            viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 019C //                                            gaussian(sensorRef1,  sensorRef2,  sensorRef3, stdMeter1, stdMeter2, stdMeter3, &factorAA, &factorBB, &factorCC);
                 ; 000D 019D //                                            sensor->value = (factorAA*viSensorTempValue*viSensorTempValue) + (factorBB*viSensorTempValue) + factorCC;      //polynomail formula
                 ; 000D 019E //
                 ; 000D 019F                                             sensorRef1 = epADCRef1[ch];
006e26 940e cd83 	CALL SUBOPT_0x215
006e28 940e cdc3 	CALL SUBOPT_0x21E
                 ; 000D 01A0                                             sensorRef2 = epADCRef2[ch];
                 ; 000D 01A1                                             sensorRef3 = epADCRef3[ch];
006e2a 940e cd4c 	CALL SUBOPT_0x20D
006e2c 940e cdf1 	CALL SUBOPT_0x221
                +
006e2e abec     +STD Y + 52 , R30
006e2f abfd     +STD Y + 52 + 1 , R31
006e30 ab6e     +STD Y + 52 + 2 , R22
006e31 ab7f     +STD Y + 52 + 3 , R23
                 	__PUTD1S 52
                 ; 000D 01A2                                             stdMeter1 = epTempRef1[ch];
006e32 940e cd79 	CALL SUBOPT_0x214
006e34 940e cdd5 	CALL SUBOPT_0x21F
                 ; 000D 01A3                                             stdMeter2 = epTempRef2[ch];
                 ; 000D 01A4                                             stdMeter3 = epTempRef3[ch];
006e36 940e cd4c 	CALL SUBOPT_0x20D
006e38 940e cdfa 	CALL SUBOPT_0x222
                +
006e3a a7e8     +STD Y + 40 , R30
006e3b a7f9     +STD Y + 40 + 1 , R31
006e3c a76a     +STD Y + 40 + 2 , R22
006e3d a77b     +STD Y + 40 + 3 , R23
                 	__PUTD1S 40
                 ; 000D 01A5 
                 ; 000D 01A6                                             viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
006e3e 940e cd1b 	CALL SUBOPT_0x209
                 ; 000D 01A7                                             viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
                 ; 000D 01A8                                             viSensorTempValue = iAD595VoltToTemp(viVoltUseCaluate);
006e40 940e cd92 	CALL SUBOPT_0x217
                 ; 000D 01A9 
                 ; 000D 01AA                                             gaussian(sensorRef1,  sensorRef2,  sensorRef3, stdMeter1, stdMeter2, stdMeter3, &factorAA, &factorBB, &factorCC);
006e42 940e ce03 	CALL SUBOPT_0x223
006e44 940e ce03 	CALL SUBOPT_0x223
006e46 940e ce03 	CALL SUBOPT_0x223
006e48 940e ce03 	CALL SUBOPT_0x223
006e4a 940e ce03 	CALL SUBOPT_0x223
006e4c 940e ce03 	CALL SUBOPT_0x223
006e4e 01fe      	MOVW R30,R28
006e4f 96f4      	ADIW R30,52
006e50 93fa      	ST   -Y,R31
006e51 93ea      	ST   -Y,R30
006e52 01fe      	MOVW R30,R28
006e53 96f2      	ADIW R30,50
006e54 93fa      	ST   -Y,R31
006e55 93ea      	ST   -Y,R30
006e56 01de      	MOVW R26,R28
006e57 96d0      	ADIW R26,48
006e58 940e a011 	CALL _gaussian
                 ; 000D 01AB                //                             printDebug("T_Raw(%f), ADC_Raw(%f), T_Ref[%f,%f,%f], ADC(T)_Ref[%f,%f,%f]\r\n",viSensorTempValue,viVoltUseCaluate,stdMeter1,stdMeter2,stdMeter3,sensorRef1,sensorRef2,sensorRef3);
                 ; 000D 01AC                                             sensor->value = (factorAA*viSensorTempValue*viSensorTempValue) + (factorBB*viSensorTempValue) + factorCC;      //polynomail formula
006e5a 940e c08d 	CALL SUBOPT_0xC
                +
006e5c 8dac     +LDD R26 , Y + 28
006e5d 8dbd     +LDD R27 , Y + 28 + 1
006e5e 8d8e     +LDD R24 , Y + 28 + 2
006e5f 8d9f     +LDD R25 , Y + 28 + 3
                 	__GETD2S 28
006e60 940e ddfc 	CALL __MULF12
006e62 940e cd9b 	CALL SUBOPT_0x218
006e64 940e ddfc 	CALL __MULF12
006e66 937f      	PUSH R23
006e67 936f      	PUSH R22
006e68 93ff      	PUSH R31
006e69 93ef      	PUSH R30
006e6a 940e c08d 	CALL SUBOPT_0xC
006e6c 940e ce0a 	CALL SUBOPT_0x224
006e6e 940e ddfc 	CALL __MULF12
006e70 91af      	POP  R26
006e71 91bf      	POP  R27
006e72 918f      	POP  R24
006e73 919f      	POP  R25
006e74 940e ddac 	CALL __ADDF12
006e76 940e ce0f 	CALL SUBOPT_0x225
006e78 c046      	RJMP _0x1A00B9
                 ; 000D 01AD 
                 ; 000D 01AE                                         }else{
                 _0x1A005A:
                 ; 000D 01AF                                               sensor->value   =   (epFactor_A[ch]   * adcData[ch] * adcData[ch]) +
                 ; 000D 01B0                                                         (epFactor_B[ch]   * adcData[ch]) +
                 ; 000D 01B1                                                          epFactor_C[ch];
006e79 940e cd4c 	CALL SUBOPT_0x20D
006e7b 940e ce14 	CALL SUBOPT_0x226
006e7d 940e e07f 	CALL __EEPROMRDD
006e7f 937f      	PUSH R23
006e80 936f      	PUSH R22
006e81 93ff      	PUSH R31
006e82 93ef      	PUSH R30
006e83 940e cd44 	CALL SUBOPT_0x20C
006e85 940e c0fc 	CALL SUBOPT_0x1B
006e87 91af      	POP  R26
006e88 91bf      	POP  R27
006e89 918f      	POP  R24
006e8a 919f      	POP  R25
006e8b 940e ddfc 	CALL __MULF12
006e8d 937f      	PUSH R23
006e8e 936f      	PUSH R22
006e8f 93ff      	PUSH R31
006e90 93ef      	PUSH R30
006e91 940e cd44 	CALL SUBOPT_0x20C
006e93 940e c0fc 	CALL SUBOPT_0x1B
006e95 91af      	POP  R26
006e96 91bf      	POP  R27
006e97 918f      	POP  R24
006e98 919f      	POP  R25
006e99 940e ddfc 	CALL __MULF12
006e9b 937f      	PUSH R23
006e9c 936f      	PUSH R22
006e9d 93ff      	PUSH R31
006e9e 93ef      	PUSH R30
006e9f 940e cde7 	CALL SUBOPT_0x220
006ea1 937f      	PUSH R23
006ea2 936f      	PUSH R22
006ea3 93ff      	PUSH R31
006ea4 93ef      	PUSH R30
006ea5 940e cd44 	CALL SUBOPT_0x20C
006ea7 940e c0fc 	CALL SUBOPT_0x1B
006ea9 91af      	POP  R26
006eaa 91bf      	POP  R27
006eab 918f      	POP  R24
006eac 919f      	POP  R25
006ead 940e ddfc 	CALL __MULF12
006eaf 91af      	POP  R26
006eb0 91bf      	POP  R27
006eb1 918f      	POP  R24
006eb2 919f      	POP  R25
006eb3 940e ddac 	CALL __ADDF12
006eb5 937f      	PUSH R23
006eb6 936f      	PUSH R22
006eb7 93ff      	PUSH R31
006eb8 93ef      	PUSH R30
006eb9 940e cda7 	CALL SUBOPT_0x21A
006ebb 91af      	POP  R26
006ebc 91bf      	POP  R27
006ebd 918f      	POP  R24
006ebe 919f      	POP  R25
                 _0x1A00B9:
006ebf 940e ddac 	CALL __ADDF12
006ec1 940e cdbf 	CALL SUBOPT_0x21D
                 ; 000D 01B2                                         }
                 ; 000D 01B3 
                 ; 000D 01B4                                         break;
006ec3 c053      	RJMP _0x1A0049
                 ; 000D 01B5                                     }
                 ; 000D 01B6         default                 :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A005E:
006ec4 940e c172 	CALL SUBOPT_0x2E
006ec6 f021      	BREQ _0x1A0060
006ec7 940e c172 	CALL SUBOPT_0x2E
006ec9 30e3      	CPI  R30,LOW(0x3)
006eca f439      	BRNE _0x1A005F
                 _0x1A0060:
                 ; 000D 01B7                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]);
                 ; 000D 01B8 //                                         viADCbuffer = 0;
                 ; 000D 01B9 //                                         for(i=0;i<20;i++){
                 ; 000D 01BA //                                            viADCbuffer += (unsigned long)(read_adc(8+ch));
                 ; 000D 01BB //                                         }
                 ; 000D 01BC //                                         viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 01BD //
                 ; 000D 01BE //                                         sensor->value = iAD595VoltToTemp((float)((viRawVoltValue+0.213)-viZeroSet));        //0.213 *2 = 0.426
                 ; 000D 01BF 
                 ; 000D 01C0                                          viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
006ecb 940e cd1b 	CALL SUBOPT_0x209
                 ; 000D 01C1                                          viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
                 ; 000D 01C2                                          sensor->value = iAD595VoltToTemp(viVoltUseCaluate);        //0.213 *2 = 0.426
006ecd 940e c4c2 	CALL SUBOPT_0xA9
006ecf 940e a0dc 	CALL _iAD595VoltToTemp
006ed1 c03d      	RJMP _0x1A00BA
                 ; 000D 01C3                                     }
                 ; 000D 01C4                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A005F:
006ed2 940e c172 	CALL SUBOPT_0x2E
006ed4 30e1      	CPI  R30,LOW(0x1)
006ed5 f459      	BRNE _0x1A0063
                 ; 000D 01C5                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epTMECTempOffset;
006ed6 940e cd44 	CALL SUBOPT_0x20C
006ed8 940e c0fc 	CALL SUBOPT_0x1B
006eda 940e cda0 	CALL SUBOPT_0x219
                +
006edc e8a5     +LDI R26 , LOW ( 0x427EEB85 )
006edd eebb     +LDI R27 , HIGH ( 0x427EEB85 )
006ede e78e     +LDI R24 , BYTE3 ( 0x427EEB85 )
006edf e492     +LDI R25 , BYTE4 ( 0x427EEB85 )
                 	__GETD2N 0x427EEB85
006ee0 c02c      	RJMP _0x1A00BB
                 ; 000D 01C6                                     }
                 ; 000D 01C7                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0063:
006ee1 940e c172 	CALL SUBOPT_0x2E
006ee3 30e2      	CPI  R30,LOW(0x2)
006ee4 f591      	BRNE _0x1A0065
                 ; 000D 01C8                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 01C9                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 01CA                                                              epPT100Temp_C;
006ee5 940e cd44 	CALL SUBOPT_0x20C
006ee7 940e c0fc 	CALL SUBOPT_0x1B
006ee9 940e cdb1 	CALL SUBOPT_0x21B
006eeb 937f      	PUSH R23
006eec 936f      	PUSH R22
006eed 93ff      	PUSH R31
006eee 93ef      	PUSH R30
006eef 940e cd44 	CALL SUBOPT_0x20C
006ef1 940e c0fc 	CALL SUBOPT_0x1B
006ef3 91af      	POP  R26
006ef4 91bf      	POP  R27
006ef5 918f      	POP  R24
006ef6 919f      	POP  R25
006ef7 940e ddfc 	CALL __MULF12
006ef9 937f      	PUSH R23
006efa 936f      	PUSH R22
006efb 93ff      	PUSH R31
006efc 93ef      	PUSH R30
006efd 940e cd44 	CALL SUBOPT_0x20C
006eff 940e c0fc 	CALL SUBOPT_0x1B
006f01 940e cdb8 	CALL SUBOPT_0x21C
006f03 91af      	POP  R26
006f04 91bf      	POP  R27
006f05 918f      	POP  R24
006f06 919f      	POP  R25
006f07 940e ddac 	CALL __ADDF12
                +
006f09 eea5     +LDI R26 , LOW ( 0xC334E2E5 )
006f0a eeb2     +LDI R27 , HIGH ( 0xC334E2E5 )
006f0b e384     +LDI R24 , BYTE3 ( 0xC334E2E5 )
006f0c ec93     +LDI R25 , BYTE4 ( 0xC334E2E5 )
                 	__GETD2N 0xC334E2E5
                 _0x1A00BB:
006f0d 940e ddac 	CALL __ADDF12
                 _0x1A00BA:
                +
006f0f 01de     +MOVW R26 , R28
006f10 5aa4     +SUBI R26 , LOW ( - 92 )
006f11 4fbf     +SBCI R27 , HIGH ( - 92 )
006f12 900d     +LD R0 , X +
006f13 91bc     +LD R27 , X
006f14 2da0     +MOV R26 , R0
                 	__GETW2SX 92
006f15 940e e036 	CALL __PUTDP1
                 ; 000D 01CB //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epPT100TempOffset;
                 ; 000D 01CC //                                        getInterval(adcData[ch], &x_1, &x_2, &y_1, &y_2);
                 ; 000D 01CD //                                        sensor->value = (((adcData[ch] - x_1) * (y_2 - y_1)) / (x_2 - x_1)) + y_1;
                 ; 000D 01CE 
                 ; 000D 01CF                                         // test
                 ; 000D 01D0                                         //printDebug("ADC: %f, Value: %f \r\n", adcData[ch], sensor->value);
                 ; 000D 01D1                                         //
                 ; 000D 01D2                                     }
                 ; 000D 01D3                                     break;
                 _0x1A0065:
                 ; 000D 01D4     }
                 _0x1A0049:
                 ; 000D 01D5     //printDebug("end read sensor.\r\n");
                 ; 000D 01D6     //printDebug("Temp CH[0]= %f C\r\n",sensor->value);
                 ; 000D 01D7     sensor->status  = SENS_NORMAL;
006f17 940e cd63 	CALL SUBOPT_0x211
006f19 9614      	ADIW R26,4
006f1a e0e0      	LDI  R30,LOW(0)
006f1b 93ec      	ST   X,R30
                 ; 000D 01D8 
                 ; 000D 01D9     return 0;
006f1c e0e0      	LDI  R30,LOW(0)
006f1d e0f0      	LDI  R31,HIGH(0)
                 _0x20E006A:
006f1e 940e e0d9 	CALL __LOADLOCR4
006f20 96ef      	ADIW R28,63
006f21 96a1      	ADIW R28,33
006f22 9508      	RET
                 ; 000D 01DA }
                 ;/*============================================================*/
                 ;void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 01DC void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 01DD 
                 ; 000D 01DE     int i = 0;
                 ; 000D 01DF 
                 ; 000D 01E0     for(i = 0; i < 15; i++) {
                 ;	adcRaw -> Y+10
                 ;	*x1 -> Y+8
                 ;	*x2 -> Y+6
                 ;	*y1 -> Y+4
                 ;	*y2 -> Y+2
                 ;	i -> R16,R17
                 ; 000D 01E1         if(adcRaw <= adcTable[i]) {
                 ; 000D 01E2             *x1 = adcTable[i-1];
                 ; 000D 01E3             *y1 = tempTable[i-1];
                 ; 000D 01E4             *x2 = adcTable[i];
                 ; 000D 01E5             *y2 = tempTable[i];
                 ; 000D 01E6             break;
                 ; 000D 01E7         }
                 ; 000D 01E8     }
                 ; 000D 01E9 
                 ; 000D 01EA     return;
                 ; 000D 01EB }
                 ;/*============================================================*/
                 ;int sensorCalibrate1(int p1, int p2)
                 ; 000D 01EE {
                 _sensorCalibrate1:
                 ; 000D 01EF     float p2_raw;
                 ; 000D 01F0 
                 ; 000D 01F1     if(operating_config.sensorEnable[p1] != 0x01){
006f23 93ba      	ST   -Y,R27
006f24 93aa      	ST   -Y,R26
006f25 9724      	SBIW R28,4
                 ;	p1 -> Y+6
                 ;	p2 -> Y+4
                 ;	p2_raw -> Y+0
                +
006f26 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006f27 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006f28 940e ce1b 	CALL SUBOPT_0x227
006f2a 91ac      	LD   R26,X
006f2b 30a1      	CPI  R26,LOW(0x1)
006f2c f061      	BREQ _0x1A006A
                 ; 000D 01F2         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p1+1);
                +
006f2d e0ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006f2e e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006f2f e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006f30 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006f31 940e c7b4 	CALL SUBOPT_0x128
006f33 9631      	ADIW R30,1
006f34 940e c64a 	CALL SUBOPT_0xE9
                 ; 000D 01F3         return -1;
006f36 efef      	LDI  R30,LOW(65535)
006f37 efff      	LDI  R31,HIGH(65535)
006f38 c0b6      	RJMP _0x20E0069
                 ; 000D 01F4     }
                 ; 000D 01F5     if(operating_config.sensorEnable[p2] != 0x01){
                 _0x1A006A:
                +
006f39 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006f3a e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006f3b 81ac      	LDD  R26,Y+4
006f3c 81bd      	LDD  R27,Y+4+1
006f3d 940e ce20 	CALL SUBOPT_0x228
006f3f f061      	BREQ _0x1A006B
                 ; 000D 01F6         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p2+1);
                +
006f40 e0ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006f41 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006f42 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006f43 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006f44 940e cbfa 	CALL SUBOPT_0x1D9
006f46 9631      	ADIW R30,1
006f47 940e c64a 	CALL SUBOPT_0xE9
                 ; 000D 01F7         return -1;
006f49 efef      	LDI  R30,LOW(65535)
006f4a efff      	LDI  R31,HIGH(65535)
006f4b c0a3      	RJMP _0x20E0069
                 ; 000D 01F8     }
                 ; 000D 01F9 
                 ; 000D 01FA     if(sensor[p1].status != SENS_NORMAL){
                 _0x1A006B:
006f4c 81ae      	LDD  R26,Y+6
006f4d 81bf      	LDD  R27,Y+6+1
006f4e 940e ce25 	CALL SUBOPT_0x229
006f50 30e0      	CPI  R30,0
006f51 f089      	BREQ _0x1A006C
                 ; 000D 01FB         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p1+1,sensor[p1].status);
                +
006f52 e3ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 146 ) )
006f53 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 146 ) )
006f54 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 146 ) )
006f55 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 146 ) )
                 	__POINTD1FN _0x1A0000,146
006f56 940e c7b4 	CALL SUBOPT_0x128
006f58 940e ccdc 	CALL SUBOPT_0x200
006f5a 85ae      	LDD  R26,Y+14
006f5b 85bf      	LDD  R27,Y+14+1
006f5c 940e ce25 	CALL SUBOPT_0x229
006f5e 940e ce2c 	CALL SUBOPT_0x22A
                 ; 000D 01FC         return -1;
006f60 efef      	LDI  R30,LOW(65535)
006f61 efff      	LDI  R31,HIGH(65535)
006f62 c08c      	RJMP _0x20E0069
                 ; 000D 01FD     }
                 ; 000D 01FE     if(sensor[p2].status != SENS_NORMAL){
                 _0x1A006C:
006f63 81ac      	LDD  R26,Y+4
006f64 81bd      	LDD  R27,Y+4+1
006f65 940e ce25 	CALL SUBOPT_0x229
006f67 30e0      	CPI  R30,0
006f68 f089      	BREQ _0x1A006D
                 ; 000D 01FF         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p2+1,sensor[p2].status);
                +
006f69 e3ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 146 ) )
006f6a e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 146 ) )
006f6b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 146 ) )
006f6c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 146 ) )
                 	__POINTD1FN _0x1A0000,146
006f6d 940e cbfa 	CALL SUBOPT_0x1D9
006f6f 940e ccdc 	CALL SUBOPT_0x200
006f71 85ac      	LDD  R26,Y+12
006f72 85bd      	LDD  R27,Y+12+1
006f73 940e ce25 	CALL SUBOPT_0x229
006f75 940e ce2c 	CALL SUBOPT_0x22A
                 ; 000D 0200         return -1;
006f77 efef      	LDI  R30,LOW(65535)
006f78 efff      	LDI  R31,HIGH(65535)
006f79 c075      	RJMP _0x20E0069
                 ; 000D 0201     }
                 ; 000D 0202 
                 ; 000D 0203     epCalType[p2]   = CAL_SELFCOMPARE;
                 _0x1A006D:
006f7a 81ac      	LDD  R26,Y+4
006f7b 81bd      	LDD  R27,Y+4+1
006f7c 5aa8      	SUBI R26,LOW(-_epCalType)
006f7d 4fb9      	SBCI R27,HIGH(-_epCalType)
006f7e e0e1      	LDI  R30,LOW(1)
006f7f 940e e0a3 	CALL __EEPROMWRB
                 ; 000D 0204 
                 ; 000D 0205     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006f81 940e c172 	CALL SUBOPT_0x2E
006f83 f021      	BREQ _0x1A006F
006f84 940e c172 	CALL SUBOPT_0x2E
006f86 30e3      	CPI  R30,LOW(0x3)
006f87 f499      	BRNE _0x1A006E
                 _0x1A006F:
                 ; 000D 0206         p2_raw          = (ADC_CONV_FAC*100 * adcData[p2]);
006f88 940e c190 	CALL SUBOPT_0x32
006f8a 940e c19d 	CALL SUBOPT_0x33
006f8c 937f      	PUSH R23
006f8d 936f      	PUSH R22
006f8e 93ff      	PUSH R31
006f8f 93ef      	PUSH R30
006f90 940e ce31 	CALL SUBOPT_0x22B
006f92 940e c0fc 	CALL SUBOPT_0x1B
006f94 91af      	POP  R26
006f95 91bf      	POP  R27
006f96 918f      	POP  R24
006f97 919f      	POP  R25
006f98 940e ddfc 	CALL __MULF12
006f9a c033      	RJMP _0x1A00BC
                 ; 000D 0207     }
                 ; 000D 0208     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A006E:
006f9b 940e c172 	CALL SUBOPT_0x2E
006f9d 30e1      	CPI  R30,LOW(0x1)
006f9e f439      	BRNE _0x1A0072
                 ; 000D 0209         p2_raw          = epTMECTempSlope   * adcData[p2];
006f9f 940e ce31 	CALL SUBOPT_0x22B
006fa1 940e c0fc 	CALL SUBOPT_0x1B
006fa3 940e cda0 	CALL SUBOPT_0x219
006fa5 c028      	RJMP _0x1A00BC
                 ; 000D 020A     }
                 ; 000D 020B     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0072:
006fa6 940e c172 	CALL SUBOPT_0x2E
006fa8 30e2      	CPI  R30,LOW(0x2)
006fa9 f531      	BRNE _0x1A0074
                 ; 000D 020C         p2_raw          = (epPT100Temp_A    * adcData[p2] * adcData[p2]) +
                 ; 000D 020D                           (epPT100Temp_B    * adcData[p2]);
006faa 940e ce31 	CALL SUBOPT_0x22B
006fac 940e c0fc 	CALL SUBOPT_0x1B
006fae 940e cdb1 	CALL SUBOPT_0x21B
006fb0 937f      	PUSH R23
006fb1 936f      	PUSH R22
006fb2 93ff      	PUSH R31
006fb3 93ef      	PUSH R30
006fb4 940e ce31 	CALL SUBOPT_0x22B
006fb6 940e c0fc 	CALL SUBOPT_0x1B
006fb8 91af      	POP  R26
006fb9 91bf      	POP  R27
006fba 918f      	POP  R24
006fbb 919f      	POP  R25
006fbc 940e ddfc 	CALL __MULF12
006fbe 937f      	PUSH R23
006fbf 936f      	PUSH R22
006fc0 93ff      	PUSH R31
006fc1 93ef      	PUSH R30
006fc2 940e ce31 	CALL SUBOPT_0x22B
006fc4 940e c0fc 	CALL SUBOPT_0x1B
006fc6 940e cdb8 	CALL SUBOPT_0x21C
006fc8 91af      	POP  R26
006fc9 91bf      	POP  R27
006fca 918f      	POP  R24
006fcb 919f      	POP  R25
006fcc 940e ddac 	CALL __ADDF12
                 _0x1A00BC:
006fce 940e e051 	CALL __PUTD1S0
                 ; 000D 020E     }
                 ; 000D 020F 
                 ; 000D 0210     epFactor_A[p2]  = 0;
                 _0x1A0074:
006fd0 81ec      	LDD  R30,Y+4
006fd1 81fd      	LDD  R31,Y+4+1
006fd2 940e ce14 	CALL SUBOPT_0x226
006fd4 940e ce35 	CALL SUBOPT_0x22C
                 ; 000D 0211     epFactor_B[p2]  = 0;
006fd6 940e ce3e 	CALL SUBOPT_0x22D
006fd8 940e ce35 	CALL SUBOPT_0x22C
                 ; 000D 0212     epFactor_C[p2]  = sensor[p1].value - p2_raw;
006fda 940e ce45 	CALL SUBOPT_0x22E
006fdc 93ff      	PUSH R31
006fdd 93ef      	PUSH R30
006fde 81ae      	LDD  R26,Y+6
006fdf 81bf      	LDD  R27,Y+6+1
006fe0 e0e5      	LDI  R30,LOW(5)
006fe1 940e df79 	CALL __MULB1W2U
006fe3 940e c115 	CALL SUBOPT_0x20
006fe5 940e c3f8 	CALL SUBOPT_0x8C
006fe7 940e dda5 	CALL __SUBF12
006fe9 91af      	POP  R26
006fea 91bf      	POP  R27
006feb 940e e093 	CALL __EEPROMWRD
                 ; 000D 0213 
                 ; 000D 0214     return 0;
006fed e0e0      	LDI  R30,LOW(0)
006fee e0f0      	LDI  R31,HIGH(0)
                 _0x20E0069:
006fef 9628      	ADIW R28,8
006ff0 9508      	RET
                 ; 000D 0215 }
                 ;/*============================================================*/
                 ;int sensorCalibrate2(int prbId)
                 ; 000D 0218 {
                 _sensorCalibrate2:
                 ; 000D 0219     float p2_raw;
                 ; 000D 021A     float tmpA,tmpB,tmpC;
                 ; 000D 021B     //int i = 0;
                 ; 000D 021C     //long viADCbuffer = 0;
                 ; 000D 021D 
                 ; 000D 021E     if(epIsPointSet1[prbId] == 0){
006ff1 93ba      	ST   -Y,R27
006ff2 93aa      	ST   -Y,R26
006ff3 9760      	SBIW R28,16
                 ;	prbId -> Y+16
                 ;	p2_raw -> Y+12
                 ;	tmpA -> Y+8
                 ;	tmpB -> Y+4
                 ;	tmpC -> Y+0
006ff4 89a8      	LDD  R26,Y+16
006ff5 89b9      	LDD  R27,Y+16+1
006ff6 52af      	SUBI R26,LOW(-_epIsPointSet1)
006ff7 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
006ff8 940e e087 	CALL __EEPROMRDB
006ffa 30e0      	CPI  R30,0
006ffb f461      	BRNE _0x1A0075
                 ; 000D 021F         printDebug("<sensorCalibrate2> ABORT: sensor ch %d No set point found\r\n",prbId+1);
                +
006ffc e7e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 201 ) )
006ffd e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 201 ) )
006ffe e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 201 ) )
006fff e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 201 ) )
                 	__POINTD1FN _0x1A0000,201
007000 940e c645 	CALL SUBOPT_0xE8
007002 9631      	ADIW R30,1
007003 940e c64a 	CALL SUBOPT_0xE9
                 ; 000D 0220         return -1;
007005 efef      	LDI  R30,LOW(65535)
007006 efff      	LDI  R31,HIGH(65535)
007007 c162      	RJMP _0x20E0068
                 ; 000D 0221     }
                 ; 000D 0222 
                 ; 000D 0223     if(epIsPointSet2[prbId] == 0){
                 _0x1A0075:
007008 89a8      	LDD  R26,Y+16
007009 89b9      	LDD  R27,Y+16+1
00700a 50a2      	SUBI R26,LOW(-_epIsPointSet2)
00700b 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
00700c 940e e087 	CALL __EEPROMRDB
00700e 30e0      	CPI  R30,0
00700f f011      	BREQ PC+3
007010 940c 7085 	JMP _0x1A0076
                 ; 000D 0224         printDebug("<sensorCalibrate2> -- CAL_EXTOFFSET --\r\n");
                +
007012 ebe1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 261 ) )
007013 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 261 ) )
007014 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 261 ) )
007015 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 261 ) )
                 	__POINTD1FN _0x1A0000,261
007016 940e c042 	CALL SUBOPT_0x3
                 ; 000D 0225         epFactor_A[prbId]   = 0;
007018 89e8      	LDD  R30,Y+16
007019 89f9      	LDD  R31,Y+16+1
00701a 940e ce14 	CALL SUBOPT_0x226
00701c 940e ce4c 	CALL SUBOPT_0x22F
                 ; 000D 0226         epFactor_B[prbId]   = 0;
00701e 89e8      	LDD  R30,Y+16
00701f 89f9      	LDD  R31,Y+16+1
007020 940e ce3e 	CALL SUBOPT_0x22D
007022 940e ce4c 	CALL SUBOPT_0x22F
                 ; 000D 0227 
                 ; 000D 0228         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007024 940e c172 	CALL SUBOPT_0x2E
007026 f021      	BREQ _0x1A0078
007027 940e c172 	CALL SUBOPT_0x2E
007029 30e3      	CPI  R30,LOW(0x3)
00702a f489      	BRNE _0x1A0077
                 _0x1A0078:
                 ; 000D 0229             p2_raw          = (ADC_CONV_FAC*100 * epADCRef1[prbId]);
00702b 940e c190 	CALL SUBOPT_0x32
00702d 940e c19d 	CALL SUBOPT_0x33
00702f 937f      	PUSH R23
007030 936f      	PUSH R22
007031 93ff      	PUSH R31
007032 93ef      	PUSH R30
007033 940e ce53 	CALL SUBOPT_0x230
007035 91af      	POP  R26
007036 91bf      	POP  R27
007037 918f      	POP  R24
007038 919f      	POP  R25
007039 940e ddfc 	CALL __MULF12
00703b c02b      	RJMP _0x1A00BD
                 ; 000D 022A 
                 ; 000D 022B 
                 ; 000D 022C         }
                 ; 000D 022D         else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0077:
00703c 940e c172 	CALL SUBOPT_0x2E
00703e 30e1      	CPI  R30,LOW(0x1)
00703f f429      	BRNE _0x1A007B
                 ; 000D 022E             p2_raw          = epTMECTempSlope   * epADCRef1[prbId];
007040 940e ce53 	CALL SUBOPT_0x230
007042 940e cda0 	CALL SUBOPT_0x219
007044 c022      	RJMP _0x1A00BD
                 ; 000D 022F         }
                 ; 000D 0230         else if(TEMP_SEL == TEMP_PT100){
                 _0x1A007B:
007045 940e c172 	CALL SUBOPT_0x2E
007047 30e2      	CPI  R30,LOW(0x2)
007048 f511      	BRNE _0x1A007D
                 ; 000D 0231             p2_raw          = (epPT100Temp_A    * epADCRef1[prbId] * epADCRef1[prbId]) +
                 ; 000D 0232                               (epPT100Temp_B    * epADCRef1[prbId]);
007049 940e ce53 	CALL SUBOPT_0x230
00704b 940e cdb1 	CALL SUBOPT_0x21B
00704d 937f      	PUSH R23
00704e 936f      	PUSH R22
00704f 93ff      	PUSH R31
007050 93ef      	PUSH R30
007051 940e ce53 	CALL SUBOPT_0x230
007053 91af      	POP  R26
007054 91bf      	POP  R27
007055 918f      	POP  R24
007056 919f      	POP  R25
007057 940e ddfc 	CALL __MULF12
007059 937f      	PUSH R23
00705a 936f      	PUSH R22
00705b 93ff      	PUSH R31
00705c 93ef      	PUSH R30
00705d 940e ce53 	CALL SUBOPT_0x230
00705f 940e cdb8 	CALL SUBOPT_0x21C
007061 91af      	POP  R26
007062 91bf      	POP  R27
007063 918f      	POP  R24
007064 919f      	POP  R25
007065 940e ddac 	CALL __ADDF12
                 _0x1A00BD:
                +
007067 87ec     +STD Y + 12 , R30
007068 87fd     +STD Y + 12 + 1 , R31
007069 876e     +STD Y + 12 + 2 , R22
00706a 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 000D 0233         }
                 ; 000D 0234 
                 ; 000D 0235         epFactor_C[prbId]   = epTempRef1[prbId] - p2_raw;
                 _0x1A007D:
00706b 89e8      	LDD  R30,Y+16
00706c 89f9      	LDD  R31,Y+16+1
00706d 940e ce45 	CALL SUBOPT_0x22E
00706f 93ff      	PUSH R31
007070 93ef      	PUSH R30
007071 940e ce5e 	CALL SUBOPT_0x231
007073 940e c088 	CALL SUBOPT_0xB
007075 940e dda5 	CALL __SUBF12
007077 91af      	POP  R26
007078 91bf      	POP  R27
007079 940e e093 	CALL __EEPROMWRD
                 ; 000D 0236         epCalType[prbId]    = CAL_EXTOFFSET;
00707b 940e ce69 	CALL SUBOPT_0x232
00707d e0e2      	LDI  R30,LOW(2)
00707e 940e e0a3 	CALL __EEPROMWRB
                 ; 000D 0237         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
007080 940e ce6e 	CALL SUBOPT_0x233
007082 940e ce74 	CALL SUBOPT_0x234
                 ; 000D 0238         return 0;
007084 c0e3      	RJMP _0x20E0067
                 ; 000D 0239     }
                 ; 000D 023A 
                 ; 000D 023B     if(epIsPointSet3[prbId] == 0){
                 _0x1A0076:
007085 89a8      	LDD  R26,Y+16
007086 89b9      	LDD  R27,Y+16+1
007087 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007088 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007089 940e e087 	CALL __EEPROMRDB
00708b 30e0      	CPI  R30,0
00708c f011      	BREQ PC+3
00708d 940c 7101 	JMP _0x1A007E
                 ; 000D 023C         printDebug("<sensorCalibrate2> -- CAL_EXTLINEAR --\r\n");
                +
00708f efe9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 333 ) )
007090 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 333 ) )
007091 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 333 ) )
007092 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 333 ) )
                 	__POINTD1FN _0x1A0000,333
007093 940e c042 	CALL SUBOPT_0x3
                 ; 000D 023D         epFactor_A[prbId]   = 0;
007095 89e8      	LDD  R30,Y+16
007096 89f9      	LDD  R31,Y+16+1
007097 940e ce14 	CALL SUBOPT_0x226
007099 940e ce4c 	CALL SUBOPT_0x22F
                 ; 000D 023E 
                 ; 000D 023F         epFactor_B[prbId]   = (epTempRef2[prbId] - epTempRef1[prbId])/(epADCRef2[prbId] - epADCRef1[prbId]);
00709b 940e ce7b 	CALL SUBOPT_0x235
00709d 0fea      	ADD  R30,R26
00709e 1ffb      	ADC  R31,R27
00709f 93ff      	PUSH R31
0070a0 93ef      	PUSH R30
0070a1 940e ce82 	CALL SUBOPT_0x236
0070a3 937f      	PUSH R23
0070a4 936f      	PUSH R22
0070a5 93ff      	PUSH R31
0070a6 93ef      	PUSH R30
0070a7 940e ce5e 	CALL SUBOPT_0x231
0070a9 91af      	POP  R26
0070aa 91bf      	POP  R27
0070ab 918f      	POP  R24
0070ac 919f      	POP  R25
0070ad 940e cd8d 	CALL SUBOPT_0x216
0070af 937f      	PUSH R23
0070b0 936f      	PUSH R22
0070b1 93ff      	PUSH R31
0070b2 93ef      	PUSH R30
0070b3 940e ce8d 	CALL SUBOPT_0x237
0070b5 937f      	PUSH R23
0070b6 936f      	PUSH R22
0070b7 93ff      	PUSH R31
0070b8 93ef      	PUSH R30
0070b9 940e ce53 	CALL SUBOPT_0x230
0070bb 91af      	POP  R26
0070bc 91bf      	POP  R27
0070bd 918f      	POP  R24
0070be 919f      	POP  R25
0070bf 940e cd8d 	CALL SUBOPT_0x216
0070c1 91af      	POP  R26
0070c2 91bf      	POP  R27
0070c3 918f      	POP  R24
0070c4 919f      	POP  R25
0070c5 940e de4a 	CALL __DIVF21
0070c7 91af      	POP  R26
0070c8 91bf      	POP  R27
0070c9 940e e093 	CALL __EEPROMWRD
                 ; 000D 0240         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
0070cb 940e ce98 	CALL SUBOPT_0x238
0070cd 940e ce3e 	CALL SUBOPT_0x22D
0070cf 940e c86d 	CALL SUBOPT_0x14B
                 ; 000D 0241 
                 ; 000D 0242         epFactor_C[prbId]   = epTempRef2[prbId] - (epFactor_B[prbId] * epADCRef2[prbId]);
0070d1 89e8      	LDD  R30,Y+16
0070d2 89f9      	LDD  R31,Y+16+1
0070d3 940e ce45 	CALL SUBOPT_0x22E
0070d5 93ff      	PUSH R31
0070d6 93ef      	PUSH R30
0070d7 940e ce82 	CALL SUBOPT_0x236
0070d9 937f      	PUSH R23
0070da 936f      	PUSH R22
0070db 93ff      	PUSH R31
0070dc 93ef      	PUSH R30
0070dd 89e8      	LDD  R30,Y+16
0070de 89f9      	LDD  R31,Y+16+1
0070df 940e ce3e 	CALL SUBOPT_0x22D
0070e1 940e e07f 	CALL __EEPROMRDD
0070e3 937f      	PUSH R23
0070e4 936f      	PUSH R22
0070e5 93ff      	PUSH R31
0070e6 93ef      	PUSH R30
0070e7 940e ce8d 	CALL SUBOPT_0x237
0070e9 91af      	POP  R26
0070ea 91bf      	POP  R27
0070eb 918f      	POP  R24
0070ec 919f      	POP  R25
0070ed 940e ddfc 	CALL __MULF12
0070ef 91af      	POP  R26
0070f0 91bf      	POP  R27
0070f1 918f      	POP  R24
0070f2 919f      	POP  R25
0070f3 940e cd8d 	CALL SUBOPT_0x216
0070f5 91af      	POP  R26
0070f6 91bf      	POP  R27
0070f7 940e e093 	CALL __EEPROMWRD
                 ; 000D 0243         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
0070f9 940e ce6e 	CALL SUBOPT_0x233
0070fb 940e ce74 	CALL SUBOPT_0x234
                 ; 000D 0244 
                 ; 000D 0245         epCalType[prbId]    = CAL_EXTLINEAR;
0070fd 940e ce69 	CALL SUBOPT_0x232
0070ff e0e3      	LDI  R30,LOW(3)
007100 c065      	RJMP _0x1A00BE
                 ; 000D 0246     }
                 ; 000D 0247     else{
                 _0x1A007E:
                 ; 000D 0248         printDebug("<sensorCalibrate2> -- CAL_EXTPOLYNOMIAL --\r\n");
                +
007101 e4e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 405 ) )
007102 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 405 ) )
007103 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 405 ) )
007104 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 405 ) )
                 	__POINTD1FN _0x1A0000,405
007105 940e c042 	CALL SUBOPT_0x3
                 ; 000D 0249 
                 ; 000D 024A         gaussian(epADCRef1[prbId],  epADCRef2[prbId],  epADCRef3[prbId],
                 ; 000D 024B                  epTempRef1[prbId], epTempRef2[prbId], epTempRef3[prbId],
                 ; 000D 024C                  &tmpA, &tmpB, &tmpC);
007107 940e ce53 	CALL SUBOPT_0x230
007109 940e c645 	CALL SUBOPT_0xE8
00710b 940e ce9e 	CALL SUBOPT_0x239
00710d 940e cea3 	CALL SUBOPT_0x23A
00710f 8de8      	LDD  R30,Y+24
007110 8df9      	LDD  R31,Y+24+1
007111 940e cdf1 	CALL SUBOPT_0x221
007113 940e c66d 	CALL SUBOPT_0xF1
007115 940e ceaa 	CALL SUBOPT_0x23B
007117 940e cea3 	CALL SUBOPT_0x23A
007119 a1e8      	LDD  R30,Y+32
00711a a1f9      	LDD  R31,Y+32+1
00711b 940e ceaf 	CALL SUBOPT_0x23C
00711d 940e cea3 	CALL SUBOPT_0x23A
00711f a1ec      	LDD  R30,Y+36
007120 a1fd      	LDD  R31,Y+36+1
007121 940e cdfa 	CALL SUBOPT_0x222
007123 940e e05b 	CALL __PUTPARD1
007125 01fe      	MOVW R30,R28
007126 96b0      	ADIW R30,32
007127 93fa      	ST   -Y,R31
007128 93ea      	ST   -Y,R30
007129 01fe      	MOVW R30,R28
00712a 967e      	ADIW R30,30
00712b 93fa      	ST   -Y,R31
00712c 93ea      	ST   -Y,R30
00712d 01de      	MOVW R26,R28
00712e 965c      	ADIW R26,28
00712f 940e a011 	CALL _gaussian
                 ; 000D 024D 
                 ; 000D 024E         epFactor_A[prbId]   = tmpA;
007131 89e8      	LDD  R30,Y+16
007132 89f9      	LDD  R31,Y+16+1
007133 e9a5      	LDI  R26,LOW(_epFactor_A)
007134 e0b5      	LDI  R27,HIGH(_epFactor_A)
007135 940e df02 	CALL __LSLW2
007137 0fae      	ADD  R26,R30
007138 1fbf      	ADC  R27,R31
007139 940e c25f 	CALL SUBOPT_0x4F
00713b 940e e093 	CALL __EEPROMWRD
                 ; 000D 024F         epFactor_B[prbId]   = tmpB;
00713d 940e ce7b 	CALL SUBOPT_0x235
00713f 0fae      	ADD  R26,R30
007140 1fbf      	ADC  R27,R31
007141 940e c3e5 	CALL SUBOPT_0x89
007143 940e e093 	CALL __EEPROMWRD
                 ; 000D 0250         epFactor_C[prbId]   = tmpC;
007145 89e8      	LDD  R30,Y+16
007146 89f9      	LDD  R31,Y+16+1
007147 ebad      	LDI  R26,LOW(_epFactor_C)
007148 e0b5      	LDI  R27,HIGH(_epFactor_C)
007149 940e ceb4 	CALL SUBOPT_0x23D
00714b 940e c3d9 	CALL SUBOPT_0x87
00714d 940e e093 	CALL __EEPROMWRD
                 ; 000D 0251 
                 ; 000D 0252         printDebug("<sensorCalibrate2> --A--> %f\r\n", epFactor_A[prbId]);
                +
00714f e6ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 450 ) )
007150 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 450 ) )
007151 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 450 ) )
007152 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 450 ) )
                 	__POINTD1FN _0x1A0000,450
007153 940e c645 	CALL SUBOPT_0xE8
007155 940e ce14 	CALL SUBOPT_0x226
007157 940e c86d 	CALL SUBOPT_0x14B
                 ; 000D 0253         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
007159 940e ce98 	CALL SUBOPT_0x238
00715b 940e ce3e 	CALL SUBOPT_0x22D
00715d 940e c86d 	CALL SUBOPT_0x14B
                 ; 000D 0254         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
00715f 940e ce6e 	CALL SUBOPT_0x233
007161 940e ce74 	CALL SUBOPT_0x234
                 ; 000D 0255 
                 ; 000D 0256 
                 ; 000D 0257 
                 ; 000D 0258         epCalType[prbId]    = CAL_EXTPOLYNOMIAL;
007163 940e ce69 	CALL SUBOPT_0x232
007165 e0e4      	LDI  R30,LOW(4)
                 _0x1A00BE:
007166 940e e0a3 	CALL __EEPROMWRB
                 ; 000D 0259     }
                 ; 000D 025A 
                 ; 000D 025B     return 0;
                 _0x20E0067:
007168 e0e0      	LDI  R30,LOW(0)
007169 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
00716a 9662      	ADIW R28,18
00716b 9508      	RET
                 ; 000D 025C }
                 ;/*============================================================*/
                 ;int sensorGetCurrentSetPoint(int ch,int pnt, unsigned char *buf)
                 ; 000D 025F {
                 _sensorGetCurrentSetPoint:
                 ; 000D 0260     unsigned char   valStr[10];
                 ; 000D 0261     float           valTmp;
                 ; 000D 0262     //signed int      val;
                 ; 000D 0263     int             i;
                 ; 000D 0264 
                 ; 000D 0265     if(pnt == CALPOINT(1)){
00716c 93ba      	ST   -Y,R27
00716d 93aa      	ST   -Y,R26
00716e 972e      	SBIW R28,14
00716f 931a      	ST   -Y,R17
007170 930a      	ST   -Y,R16
                 ;	ch -> Y+20
                 ;	pnt -> Y+18
                 ;	*buf -> Y+16
                 ;	valStr -> Y+6
                 ;	valTmp -> Y+2
                 ;	i -> R16,R17
007171 89aa      	LDD  R26,Y+18
007172 89bb      	LDD  R27,Y+18+1
007173 36a5      	CPI  R26,LOW(0x65)
007174 e0e0      	LDI  R30,HIGH(0x65)
007175 07be      	CPC  R27,R30
007176 f561      	BRNE _0x1A0080
                 ; 000D 0266         if(epIsPointSet1[ch] == 1){
007177 89ac      	LDD  R26,Y+20
007178 89bd      	LDD  R27,Y+20+1
007179 52af      	SUBI R26,LOW(-_epIsPointSet1)
00717a 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
00717b 940e e087 	CALL __EEPROMRDB
00717d 30e1      	CPI  R30,LOW(0x1)
00717e f4c9      	BRNE _0x1A0081
                 ; 000D 0267             valTmp  = epTempRef1[ch];
00717f 89ec      	LDD  R30,Y+20
007180 89fd      	LDD  R31,Y+20+1
007181 940e ceaa 	CALL SUBOPT_0x23B
007183 940e ceb9 	CALL SUBOPT_0x23E
007185 940e c4f1 	CALL SUBOPT_0xB2
                 ; 000D 0268             printDebug("<sensorGetCurrentSetPoint> tempRef1 = [%f][%f]\r\n",epTempRef1[ch],valTmp);
                +
007187 e8ed     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 481 ) )
007188 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 481 ) )
007189 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 481 ) )
00718a e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 481 ) )
                 	__POINTD1FN _0x1A0000,481
00718b 940e cebe 	CALL SUBOPT_0x23F
00718d 940e ceaa 	CALL SUBOPT_0x23B
00718f 940e ceb9 	CALL SUBOPT_0x23E
007191 940e c292 	CALL SUBOPT_0x57
007193 940e c11b 	CALL SUBOPT_0x21
                 ; 000D 0269             ftoa(valTmp,2,valStr);
007195 940e cec3 	CALL SUBOPT_0x240
                 ; 000D 026A             //val = (epTempRef1[ch] * 100);
                 ; 000D 026B         }
                 ; 000D 026C         else{
007197 c00a      	RJMP _0x1A0082
                 _0x1A0081:
                 ; 000D 026D             printDebug("<sensorGetCurrentSetPoint> tempRef1 not set [0.00]\r\n");
                +
007198 ebee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 530 ) )
007199 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 530 ) )
00719a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 530 ) )
00719b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 530 ) )
                 	__POINTD1FN _0x1A0000,530
00719c 940e c042 	CALL SUBOPT_0x3
                 ; 000D 026E             sprintf(valStr,"0.00");                 //val = 0;
00719e 940e c28d 	CALL SUBOPT_0x56
0071a0 940e cecd 	CALL SUBOPT_0x241
                 ; 000D 026F         }
                 _0x1A0082:
                 ; 000D 0270     }
                 ; 000D 0271     else if(pnt == CALPOINT(2)){
0071a2 c06d      	RJMP _0x1A0083
                 _0x1A0080:
0071a3 89aa      	LDD  R26,Y+18
0071a4 89bb      	LDD  R27,Y+18+1
0071a5 36a6      	CPI  R26,LOW(0x66)
0071a6 e0e0      	LDI  R30,HIGH(0x66)
0071a7 07be      	CPC  R27,R30
0071a8 f561      	BRNE _0x1A0084
                 ; 000D 0272         if(epIsPointSet2[ch] == 1){
0071a9 89ac      	LDD  R26,Y+20
0071aa 89bd      	LDD  R27,Y+20+1
0071ab 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0071ac 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0071ad 940e e087 	CALL __EEPROMRDB
0071af 30e1      	CPI  R30,LOW(0x1)
0071b0 f4c9      	BRNE _0x1A0085
                 ; 000D 0273             valTmp  = epTempRef2[ch];
0071b1 89ec      	LDD  R30,Y+20
0071b2 89fd      	LDD  R31,Y+20+1
0071b3 940e ceaf 	CALL SUBOPT_0x23C
0071b5 940e ceb9 	CALL SUBOPT_0x23E
0071b7 940e c4f1 	CALL SUBOPT_0xB2
                 ; 000D 0274             printDebug("<sensorGetCurrentSetPoint> tempRef2 = [%f][%f]\r\n",epTempRef2[ch],valTmp);
                +
0071b9 efe8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 588 ) )
0071ba e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 588 ) )
0071bb e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 588 ) )
0071bc e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 588 ) )
                 	__POINTD1FN _0x1A0000,588
0071bd 940e cebe 	CALL SUBOPT_0x23F
0071bf 940e ceaf 	CALL SUBOPT_0x23C
0071c1 940e ceb9 	CALL SUBOPT_0x23E
0071c3 940e c292 	CALL SUBOPT_0x57
0071c5 940e c11b 	CALL SUBOPT_0x21
                 ; 000D 0275             ftoa(valTmp,2,valStr);
0071c7 940e cec3 	CALL SUBOPT_0x240
                 ; 000D 0276             //val = (epTempRef1[ch] * 100);
                 ; 000D 0277         }
                 ; 000D 0278         else{
0071c9 c00a      	RJMP _0x1A0086
                 _0x1A0085:
                 ; 000D 0279             printDebug("<sensorGetCurrentSetPoint> tempRef2 not set [0.00]\r\n");
                +
0071ca e2e9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 637 ) )
0071cb e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 637 ) )
0071cc e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 637 ) )
0071cd e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 637 ) )
                 	__POINTD1FN _0x1A0000,637
0071ce 940e c042 	CALL SUBOPT_0x3
                 ; 000D 027A             sprintf(valStr,"0.00");                 //val = 0;
0071d0 940e c28d 	CALL SUBOPT_0x56
0071d2 940e cecd 	CALL SUBOPT_0x241
                 ; 000D 027B         }
                 _0x1A0086:
                 ; 000D 027C         /*
                 ; 000D 027D         if(epIsPointSet2[ch] == 1){ val = (epTempRef2[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef2[ch]);}
                 ; 000D 027E         else{                       val = 0;        }
                 ; 000D 027F         */
                 ; 000D 0280     }
                 ; 000D 0281     else if(pnt == CALPOINT(3)){
0071d4 c03b      	RJMP _0x1A0087
                 _0x1A0084:
0071d5 89aa      	LDD  R26,Y+18
0071d6 89bb      	LDD  R27,Y+18+1
0071d7 36a7      	CPI  R26,LOW(0x67)
0071d8 e0e0      	LDI  R30,HIGH(0x67)
0071d9 07be      	CPC  R27,R30
0071da f541      	BRNE _0x1A0088
                 ; 000D 0282         if(epIsPointSet3[ch] == 1){
0071db 89ac      	LDD  R26,Y+20
0071dc 89bd      	LDD  R27,Y+20+1
0071dd 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0071de 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0071df 940e e087 	CALL __EEPROMRDB
0071e1 30e1      	CPI  R30,LOW(0x1)
0071e2 f4a9      	BRNE _0x1A0089
                 ; 000D 0283             valTmp  = epTempRef3[ch];
0071e3 89ec      	LDD  R30,Y+20
0071e4 89fd      	LDD  R31,Y+20+1
0071e5 940e cdfa 	CALL SUBOPT_0x222
0071e7 940e c4f1 	CALL SUBOPT_0xB2
                 ; 000D 0284             printDebug("<sensorGetCurrentSetPoint> tempRef3 = [%f][%f]\r\n",epTempRef3[ch],valTmp);
                +
0071e9 e5ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 690 ) )
0071ea e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 690 ) )
0071eb e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 690 ) )
0071ec e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 690 ) )
                 	__POINTD1FN _0x1A0000,690
0071ed 940e cebe 	CALL SUBOPT_0x23F
0071ef 940e cdfa 	CALL SUBOPT_0x222
0071f1 940e c292 	CALL SUBOPT_0x57
0071f3 940e c11b 	CALL SUBOPT_0x21
                 ; 000D 0285             ftoa(valTmp,2,valStr);
0071f5 940e cec3 	CALL SUBOPT_0x240
                 ; 000D 0286             //val = (epTempRef1[ch] * 100);
                 ; 000D 0287         }
                 ; 000D 0288         else{
0071f7 c00a      	RJMP _0x1A008A
                 _0x1A0089:
                 ; 000D 0289             printDebug("<sensorGetCurrentSetPoint> tempRef3 not set [0.00]\r\n");
                +
0071f8 e8ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 739 ) )
0071f9 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 739 ) )
0071fa e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 739 ) )
0071fb e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 739 ) )
                 	__POINTD1FN _0x1A0000,739
0071fc 940e c042 	CALL SUBOPT_0x3
                 ; 000D 028A             sprintf(valStr,"0.00");                 //val = 0;
0071fe 940e c28d 	CALL SUBOPT_0x56
007200 940e cecd 	CALL SUBOPT_0x241
                 ; 000D 028B         }
                 _0x1A008A:
                 ; 000D 028C         /*
                 ; 000D 028D         if(epIsPointSet3[ch] == 1){ val = (epTempRef3[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef3[ch]);}
                 ; 000D 028E         else{                       val = 0;        }
                 ; 000D 028F         */
                 ; 000D 0290     }
                 ; 000D 0291     else{
007202 c00d      	RJMP _0x1A008B
                 _0x1A0088:
                 ; 000D 0292         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
007203 ece4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 792 ) )
007204 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 792 ) )
007205 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 792 ) )
007206 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 792 ) )
                 	__POINTD1FN _0x1A0000,792
007207 940e e05b 	CALL __PUTPARD1
007209 89ee      	LDD  R30,Y+22
00720a 89ff      	LDD  R31,Y+22+1
00720b 940e c64a 	CALL SUBOPT_0xE9
                 ; 000D 0293         return -1;
00720d efef      	LDI  R30,LOW(65535)
00720e efff      	LDI  R31,HIGH(65535)
00720f c0d8      	RJMP _0x20E0066
                 ; 000D 0294     }
                 _0x1A008B:
                 _0x1A0087:
                 _0x1A0083:
                 ; 000D 0295     //printDebug("<sensorGetCurrentSetPoint> read val = [%d]\r\n",val);
                 ; 000D 0296     printDebug("<sensorGetCurrentSetPoint> read val(%d) = [%s]\r\n",strlen(valStr),valStr);
                +
007210 efec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 848 ) )
007211 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 848 ) )
007212 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 848 ) )
007213 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 848 ) )
                 	__POINTD1FN _0x1A0000,848
007214 940e e05b 	CALL __PUTPARD1
007216 01de      	MOVW R26,R28
007217 961a      	ADIW R26,10
007218 940e a5e6 	CALL _strlen
00721a 940e c1a4 	CALL SUBOPT_0x34
00721c 01fe      	MOVW R30,R28
00721d 963e      	ADIW R30,14
00721e 940e c822 	CALL SUBOPT_0x13E
                 ; 000D 0297 
                 ; 000D 0298     if(valStr[0] == '-'){
007220 81ae      	LDD  R26,Y+6
007221 32ad      	CPI  R26,LOW(0x2D)
007222 f011      	BREQ PC+3
007223 940c 7276 	JMP _0x1A008C
                 ; 000D 0299         buf[0] = 1;
007225 89a8      	LDD  R26,Y+16
007226 89b9      	LDD  R27,Y+16+1
007227 e0e1      	LDI  R30,LOW(1)
007228 93ec      	ST   X,R30
                 ; 000D 029A         if(strlen(valStr) == 7){
007229 940e ced8 	CALL SUBOPT_0x242
00722b 30e7      	CPI  R30,LOW(0x7)
00722c e0a0      	LDI  R26,HIGH(0x7)
00722d 07fa      	CPC  R31,R26
00722e f499      	BRNE _0x1A008D
                 ; 000D 029B             buf[1]  = valStr[1] - 0x30;     buf[2]  = valStr[2] - 0x30;     buf[3]  = valStr[3] - 0x30;
00722f 81ef      	LDD  R30,Y+7
007230 53e0      	SUBI R30,LOW(48)
                +
007231 89a8     +LDD R26 , Y + 16
007232 89b9     +LDD R27 , Y + 16 + 1
007233 9611     +ADIW R26 , 1
007234 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
007235 85e8      	LDD  R30,Y+8
007236 940e cedc 	CALL SUBOPT_0x243
007238 85e9      	LDD  R30,Y+9
007239 940e cee2 	CALL SUBOPT_0x244
                 ; 000D 029C             buf[4]  = valStr[5] - 0x30;     buf[5]  = valStr[6] - 0x30;
00723b 85eb      	LDD  R30,Y+11
00723c 940e cee8 	CALL SUBOPT_0x245
00723e 85ec      	LDD  R30,Y+12
00723f 940e ceee 	CALL SUBOPT_0x246
                 ; 000D 029D         }
                 ; 000D 029E         else if(strlen(valStr) == 6){
007241 c033      	RJMP _0x1A008E
                 _0x1A008D:
007242 940e ced8 	CALL SUBOPT_0x242
007244 30e6      	CPI  R30,LOW(0x6)
007245 e0a0      	LDI  R26,HIGH(0x6)
007246 07fa      	CPC  R31,R26
007247 f479      	BRNE _0x1A008F
                 ; 000D 029F             buf[1]  = 0;                    buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
007248 940e cef4 	CALL SUBOPT_0x247
00724a 81ef      	LDD  R30,Y+7
00724b 940e cedc 	CALL SUBOPT_0x243
00724d 85e8      	LDD  R30,Y+8
00724e 940e cee2 	CALL SUBOPT_0x244
                 ; 000D 02A0             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
007250 85ea      	LDD  R30,Y+10
007251 940e cee8 	CALL SUBOPT_0x245
007253 85eb      	LDD  R30,Y+11
007254 940e ceee 	CALL SUBOPT_0x246
                 ; 000D 02A1         }
                 ; 000D 02A2         else if(strlen(valStr) == 5){
007256 c01e      	RJMP _0x1A0090
                 _0x1A008F:
007257 940e ced8 	CALL SUBOPT_0x242
007259 30e5      	CPI  R30,LOW(0x5)
00725a e0a0      	LDI  R26,HIGH(0x5)
00725b 07fa      	CPC  R31,R26
00725c f489      	BRNE _0x1A0091
                 ; 000D 02A3             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[1] - 0x30;
00725d 940e cef4 	CALL SUBOPT_0x247
00725f 89a8      	LDD  R26,Y+16
007260 89b9      	LDD  R27,Y+16+1
007261 9612      	ADIW R26,2
007262 e0e0      	LDI  R30,LOW(0)
007263 93ec      	ST   X,R30
007264 81ef      	LDD  R30,Y+7
007265 940e cee2 	CALL SUBOPT_0x244
                 ; 000D 02A4             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
007267 85e9      	LDD  R30,Y+9
007268 940e cee8 	CALL SUBOPT_0x245
00726a 85ea      	LDD  R30,Y+10
00726b 940e ceee 	CALL SUBOPT_0x246
                 ; 000D 02A5         }
                 ; 000D 02A6         else{
00726d c007      	RJMP _0x1A0092
                 _0x1A0091:
                 ; 000D 02A7             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
00726e 940e cefa 	CALL SUBOPT_0x248
007270 940e c0b8 	CALL SUBOPT_0x12
                 ; 000D 02A8             return -1;
007272 efef      	LDI  R30,LOW(65535)
007273 efff      	LDI  R31,HIGH(65535)
007274 c073      	RJMP _0x20E0066
                 ; 000D 02A9         }
                 _0x1A0092:
                 _0x1A0090:
                 _0x1A008E:
                 ; 000D 02AA     }
                 ; 000D 02AB     else{
007275 c050      	RJMP _0x1A0093
                 _0x1A008C:
                 ; 000D 02AC         buf[0] = 0;
007276 89a8      	LDD  R26,Y+16
007277 89b9      	LDD  R27,Y+16+1
007278 e0e0      	LDI  R30,LOW(0)
007279 93ec      	ST   X,R30
                 ; 000D 02AD         if(strlen(valStr) == 6){
00727a 940e ced8 	CALL SUBOPT_0x242
00727c 30e6      	CPI  R30,LOW(0x6)
00727d e0a0      	LDI  R26,HIGH(0x6)
00727e 07fa      	CPC  R31,R26
00727f f499      	BRNE _0x1A0094
                 ; 000D 02AE             buf[1]  = valStr[0] - 0x30;     buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
007280 81ee      	LDD  R30,Y+6
007281 53e0      	SUBI R30,LOW(48)
                +
007282 89a8     +LDD R26 , Y + 16
007283 89b9     +LDD R27 , Y + 16 + 1
007284 9611     +ADIW R26 , 1
007285 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
007286 81ef      	LDD  R30,Y+7
007287 940e cedc 	CALL SUBOPT_0x243
007289 85e8      	LDD  R30,Y+8
00728a 940e cee2 	CALL SUBOPT_0x244
                 ; 000D 02AF             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
00728c 85ea      	LDD  R30,Y+10
00728d 940e cee8 	CALL SUBOPT_0x245
00728f 85eb      	LDD  R30,Y+11
007290 940e ceee 	CALL SUBOPT_0x246
                 ; 000D 02B0         }
                 ; 000D 02B1         else if(strlen(valStr) == 5){
007292 c033      	RJMP _0x1A0095
                 _0x1A0094:
007293 940e ced8 	CALL SUBOPT_0x242
007295 30e5      	CPI  R30,LOW(0x5)
007296 e0a0      	LDI  R26,HIGH(0x5)
007297 07fa      	CPC  R31,R26
007298 f479      	BRNE _0x1A0096
                 ; 000D 02B2             buf[1]  = 0;                    buf[2]  = valStr[0] - 0x30;     buf[3]  = valStr[1] - 0x30;
007299 940e cef4 	CALL SUBOPT_0x247
00729b 81ee      	LDD  R30,Y+6
00729c 940e cedc 	CALL SUBOPT_0x243
00729e 81ef      	LDD  R30,Y+7
00729f 940e cee2 	CALL SUBOPT_0x244
                 ; 000D 02B3             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
0072a1 85e9      	LDD  R30,Y+9
0072a2 940e cee8 	CALL SUBOPT_0x245
0072a4 85ea      	LDD  R30,Y+10
0072a5 940e ceee 	CALL SUBOPT_0x246
                 ; 000D 02B4         }
                 ; 000D 02B5         else if(strlen(valStr) == 4){
0072a7 c01e      	RJMP _0x1A0097
                 _0x1A0096:
0072a8 940e ced8 	CALL SUBOPT_0x242
0072aa 30e4      	CPI  R30,LOW(0x4)
0072ab e0a0      	LDI  R26,HIGH(0x4)
0072ac 07fa      	CPC  R31,R26
0072ad f489      	BRNE _0x1A0098
                 ; 000D 02B6             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[0] - 0x30;
0072ae 940e cef4 	CALL SUBOPT_0x247
0072b0 89a8      	LDD  R26,Y+16
0072b1 89b9      	LDD  R27,Y+16+1
0072b2 9612      	ADIW R26,2
0072b3 e0e0      	LDI  R30,LOW(0)
0072b4 93ec      	ST   X,R30
0072b5 81ee      	LDD  R30,Y+6
0072b6 940e cee2 	CALL SUBOPT_0x244
                 ; 000D 02B7             buf[4]  = valStr[2] - 0x30;     buf[5]  = valStr[3] - 0x30;
0072b8 85e8      	LDD  R30,Y+8
0072b9 940e cee8 	CALL SUBOPT_0x245
0072bb 85e9      	LDD  R30,Y+9
0072bc 940e ceee 	CALL SUBOPT_0x246
                 ; 000D 02B8         }
                 ; 000D 02B9         else{
0072be c007      	RJMP _0x1A0099
                 _0x1A0098:
                 ; 000D 02BA             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
0072bf 940e cefa 	CALL SUBOPT_0x248
0072c1 940e c0b8 	CALL SUBOPT_0x12
                 ; 000D 02BB             return -1;
0072c3 efef      	LDI  R30,LOW(65535)
0072c4 efff      	LDI  R31,HIGH(65535)
0072c5 c022      	RJMP _0x20E0066
                 ; 000D 02BC         }
                 _0x1A0099:
                 _0x1A0097:
                 _0x1A0095:
                 ; 000D 02BD     }
                 _0x1A0093:
                 ; 000D 02BE 
                 ; 000D 02BF     printDebug("<sensorGetCurrentSetPoint> buf read");
                +
0072c6 e6e7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 955 ) )
0072c7 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 955 ) )
0072c8 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 955 ) )
0072c9 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 955 ) )
                 	__POINTD1FN _0x1A0000,955
0072ca 940e c042 	CALL SUBOPT_0x3
                 ; 000D 02C0     for(i=0;i<6;i++){
                +
0072cc e000     +LDI R16 , LOW ( 0 )
0072cd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A009B:
                +
0072ce 3006     +CPI R16 , LOW ( 6 )
0072cf e0e0     +LDI R30 , HIGH ( 6 )
0072d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
0072d1 f474      	BRGE _0x1A009C
                 ; 000D 02C1         printDebug("[%d]",buf[i]);
                +
0072d2 e8eb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 991 ) )
0072d3 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 991 ) )
0072d4 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 991 ) )
0072d5 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 991 ) )
                 	__POINTD1FN _0x1A0000,991
0072d6 940e e05b 	CALL __PUTPARD1
0072d8 01f8      	MOVW R30,R16
0072d9 89ac      	LDD  R26,Y+20
0072da 89bd      	LDD  R27,Y+20+1
0072db 940e c9e4 	CALL SUBOPT_0x182
                 ; 000D 02C2     }
                +
0072dd 5f0f     +SUBI R16 , LOW ( - 1 )
0072de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0072df cfee      	RJMP _0x1A009B
                 _0x1A009C:
                 ; 000D 02C3     printDebug("\r\n");
                +
0072e0 eded     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 49 ) )
0072e1 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 49 ) )
0072e2 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 49 ) )
0072e3 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 49 ) )
                 	__POINTD1FN _0x1A0000,49
0072e4 940e c042 	CALL SUBOPT_0x3
                 ; 000D 02C4 
                 ; 000D 02C5     return 0;
0072e6 e0e0      	LDI  R30,LOW(0)
0072e7 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0066:
0072e8 8119      	LDD  R17,Y+1
0072e9 8108      	LDD  R16,Y+0
0072ea 9666      	ADIW R28,22
0072eb 9508      	RET
                 ; 000D 02C6 }
                 ;/*============================================================*/
                 ;int sensorSetCurrentSetPoint(int ch,int pnt,unsigned char *buf)
                 ; 000D 02C9 {
                 _sensorSetCurrentSetPoint:
                 ; 000D 02CA     float   val=0;
                 ; 000D 02CB     long viADCbuffer = 0;
                 ; 000D 02CC     int i = 0;
                 ; 000D 02CD     float viVoltUseCaluate = 0.0;
                 ; 000D 02CE     float viRiaseUpVoltValue = 0.0;
                 ; 000D 02CF     const float viZeroSet = 1.667;
                 ; 000D 02D0 
                 ; 000D 02D1     if(operating_config.sensorEnable[ch] != 0x01){
0072ec 940e cf04 	CALL SUBOPT_0x249
0072ee e9e8      	LDI  R30,LOW(_0x1A009D*2)
0072ef e4f4      	LDI  R31,HIGH(_0x1A009D*2)
0072f0 e060      	LDI  R22,BYTE3(_0x1A009D*2)
0072f1 940e e0de 	CALL __INITLOCB
0072f3 940e c873 	CALL SUBOPT_0x14C
                 ;	ch -> Y+26
                 ;	pnt -> Y+24
                 ;	*buf -> Y+22
                 ;	val -> Y+18
                 ;	viADCbuffer -> Y+14
                 ;	i -> R16,R17
                 ;	viVoltUseCaluate -> Y+10
                 ;	viRiaseUpVoltValue -> Y+6
                 ;	viZeroSet -> Y+2
                +
0072f5 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
0072f6 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
0072f7 8daa      	LDD  R26,Y+26
0072f8 8dbb      	LDD  R27,Y+26+1
0072f9 940e ce20 	CALL SUBOPT_0x228
0072fb f061      	BREQ _0x1A009E
                 ; 000D 02D2         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d is disable\r\n",ch+1);
                +
0072fc e9e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 996 ) )
0072fd e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 996 ) )
0072fe e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 996 ) )
0072ff e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 996 ) )
                 	__POINTD1FN _0x1A0000,996
007300 940e cf0b 	CALL SUBOPT_0x24A
007302 9631      	ADIW R30,1
007303 940e c64a 	CALL SUBOPT_0xE9
                 ; 000D 02D3         return -1;
007305 efef      	LDI  R30,LOW(65535)
007306 efff      	LDI  R31,HIGH(65535)
007307 c142      	RJMP _0x20E0065
                 ; 000D 02D4     }
                 ; 000D 02D5 
                 ; 000D 02D6     if(sensor[ch].status != SENS_NORMAL){
                 _0x1A009E:
007308 8daa      	LDD  R26,Y+26
007309 8dbb      	LDD  R27,Y+26+1
00730a 940e ce25 	CALL SUBOPT_0x229
00730c 30e0      	CPI  R30,0
00730d f089      	BREQ _0x1A009F
                 ; 000D 02D7         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d error(0x%02X)\r\n",ch+1,sensor[ch].status);
                +
00730e ecec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1056 ) )
00730f e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1056 ) )
007310 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1056 ) )
007311 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1056 ) )
                 	__POINTD1FN _0x1A0000,1056
007312 940e cf0b 	CALL SUBOPT_0x24A
007314 940e ccdc 	CALL SUBOPT_0x200
007316 a1aa      	LDD  R26,Y+34
007317 a1bb      	LDD  R27,Y+34+1
007318 940e ce25 	CALL SUBOPT_0x229
00731a 940e ce2c 	CALL SUBOPT_0x22A
                 ; 000D 02D8         return -1;
00731c efef      	LDI  R30,LOW(65535)
00731d efff      	LDI  R31,HIGH(65535)
00731e c12b      	RJMP _0x20E0065
                 ; 000D 02D9     }
                 ; 000D 02DA 
                 ; 000D 02DB     printDebug("<sensorSetCurrentSetPoint> buf: [%d]/[%d][%d][%d][%d][%d]\r\n",
                 _0x1A009F:
                 ; 000D 02DC                                         buf[0],buf[1],buf[2],buf[3],buf[4],buf[5]);
                +
00731f e0eb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1119 ) )
007320 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1119 ) )
007321 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1119 ) )
007322 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1119 ) )
                 	__POINTD1FN _0x1A0000,1119
007323 940e e05b 	CALL __PUTPARD1
007325 8daa      	LDD  R26,Y+26
007326 8dbb      	LDD  R27,Y+26+1
007327 91ec      	LD   R30,X
007328 940e c2f3 	CALL SUBOPT_0x65
00732a 8dee      	LDD  R30,Y+30
00732b 8dff      	LDD  R31,Y+30+1
00732c 81e1      	LDD  R30,Z+1
00732d 940e c2f3 	CALL SUBOPT_0x65
00732f a1ea      	LDD  R30,Y+34
007330 a1fb      	LDD  R31,Y+34+1
007331 81e2      	LDD  R30,Z+2
007332 940e c2f3 	CALL SUBOPT_0x65
007334 a1ee      	LDD  R30,Y+38
007335 a1ff      	LDD  R31,Y+38+1
007336 81e3      	LDD  R30,Z+3
007337 940e c2f3 	CALL SUBOPT_0x65
007339 a5ea      	LDD  R30,Y+42
00733a a5fb      	LDD  R31,Y+42+1
00733b 81e4      	LDD  R30,Z+4
00733c 940e c2f3 	CALL SUBOPT_0x65
00733e a5ee      	LDD  R30,Y+46
00733f a5ff      	LDD  R31,Y+46+1
007340 81e5      	LDD  R30,Z+5
007341 940e c2f3 	CALL SUBOPT_0x65
007343 e188      	LDI  R24,24
007344 940e 9e24 	CALL _printDebug
007346 966c      	ADIW R28,28
                 ; 000D 02DD 
                 ; 000D 02DE     val =  (float) (0.0);
007347 e0e0      	LDI  R30,LOW(0)
                +
007348 8bea     +STD Y + 18 , R30
007349 8beb     +STD Y + 18 + 1 , R30
00734a 8bec     +STD Y + 18 + 2 , R30
00734b 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
                 ; 000D 02DF     val += (float) (buf[1] * 100);
00734c 89ee      	LDD  R30,Y+22
00734d 89ff      	LDD  R31,Y+22+1
00734e 81e1      	LDD  R30,Z+1
00734f e6a4      	LDI  R26,LOW(100)
007350 940e cf10 	CALL SUBOPT_0x24B
                 ; 000D 02E0     val += (float) (buf[2] * 10);
007352 81e2      	LDD  R30,Z+2
007353 e0aa      	LDI  R26,LOW(10)
007354 940e cf10 	CALL SUBOPT_0x24B
                 ; 000D 02E1     val += (float) (buf[3]);
007356 81e3      	LDD  R30,Z+3
007357 27ff      	CLR  R31
007358 2766      	CLR  R22
007359 2777      	CLR  R23
00735a 940e dd72 	CALL __CDF1
00735c 940e cf23 	CALL SUBOPT_0x24C
                 ; 000D 02E2     val += (float) (buf[4] * 0.1);
00735e 81e4      	LDD  R30,Z+4
00735f 940e cf30 	CALL SUBOPT_0x24D
007361 940e c482 	CALL SUBOPT_0x9E
007363 940e cf23 	CALL SUBOPT_0x24C
                 ; 000D 02E3     val += (float) (buf[5] * 0.01);
007365 81e5      	LDD  R30,Z+5
007366 940e cf30 	CALL SUBOPT_0x24D
                +
007368 e0aa     +LDI R26 , LOW ( 0x3C23D70A )
007369 edb7     +LDI R27 , HIGH ( 0x3C23D70A )
00736a e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
00736b e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
00736c 940e ddfc 	CALL __MULF12
00736e 940e cf36 	CALL SUBOPT_0x24E
007370 940e ddac 	CALL __ADDF12
007372 940e cf3b 	CALL SUBOPT_0x24F
                 ; 000D 02E4     if(buf[0] == 1){    val *= (float) (-1.0);  }
007374 89ae      	LDD  R26,Y+22
007375 89bf      	LDD  R27,Y+22+1
007376 91ac      	LD   R26,X
007377 30a1      	CPI  R26,LOW(0x1)
007378 f451      	BRNE _0x1A00A0
007379 940e cf36 	CALL SUBOPT_0x24E
                +
00737b e0e0     +LDI R30 , LOW ( 0xBF800000 )
00737c e0f0     +LDI R31 , HIGH ( 0xBF800000 )
00737d e860     +LDI R22 , BYTE3 ( 0xBF800000 )
00737e eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
00737f 940e ddfc 	CALL __MULF12
007381 940e cf3b 	CALL SUBOPT_0x24F
                 ; 000D 02E5 
                 ; 000D 02E6     printDebug("<sensorSetCurrentSetPoint> sensor %1d, point %1d, set to [%f]",ch+1,pnt,val);
                 _0x1A00A0:
                +
007383 e4e7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1179 ) )
007384 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1179 ) )
007385 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1179 ) )
007386 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1179 ) )
                 	__POINTD1FN _0x1A0000,1179
007387 940e cf0b 	CALL SUBOPT_0x24A
007389 940e ccdc 	CALL SUBOPT_0x200
00738b a1e8      	LDD  R30,Y+32
00738c a1f9      	LDD  R31,Y+32+1
00738d 940e cf40 	CALL SUBOPT_0x250
00738f 940e c522 	CALL SUBOPT_0xBB
007391 940e e05b 	CALL __PUTPARD1
007393 940e c2f9 	CALL SUBOPT_0x66
                 ; 000D 02E7 
                 ; 000D 02E8     if(pnt == CALPOINT(1)){
007395 8da8      	LDD  R26,Y+24
007396 8db9      	LDD  R27,Y+24+1
007397 36a5      	CPI  R26,LOW(0x65)
007398 e0e0      	LDI  R30,HIGH(0x65)
007399 07be      	CPC  R27,R30
00739a f5a9      	BRNE _0x1A00A1
                 ; 000D 02E9         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00739b 940e c172 	CALL SUBOPT_0x2E
00739d f021      	BREQ _0x1A00A3
00739e 940e c172 	CALL SUBOPT_0x2E
0073a0 30e3      	CPI  R30,LOW(0x3)
0073a1 f469      	BRNE _0x1A00A2
                 _0x1A00A3:
                 ; 000D 02EA //           viADCbuffer = 0;
                 ; 000D 02EB //             for(i=0;i<30;i++){
                 ; 000D 02EC //                viADCbuffer += read_adc(8+ch);
                 ; 000D 02ED //             }
                 ; 000D 02EE //
                 ; 000D 02EF //             epADCRef1[ch] = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 02F0 
                 ; 000D 02F1              viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
0073a2 940e cf45 	CALL SUBOPT_0x251
                 ; 000D 02F2              viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
0073a4 940e cf51 	CALL SUBOPT_0x252
                 ; 000D 02F3              epADCRef1[ch] = iAD595VoltToTemp(viVoltUseCaluate);        //0.213 *2 = 0.426
0073a6 940e cf5e 	CALL SUBOPT_0x253
0073a8 93ff      	PUSH R31
0073a9 93ef      	PUSH R30
0073aa 940e cf65 	CALL SUBOPT_0x254
0073ac 91af      	POP  R26
0073ad 91bf      	POP  R27
0073ae c009      	RJMP _0x1A00BF
                 ; 000D 02F4         }else{
                 _0x1A00A2:
                 ; 000D 02F5            epADCRef1[ch]       = adcData[ch];
0073af 8dea      	LDD  R30,Y+26
0073b0 8dfb      	LDD  R31,Y+26+1
0073b1 940e cf5e 	CALL SUBOPT_0x253
0073b3 940e cf69 	CALL SUBOPT_0x255
0073b5 940e c0fc 	CALL SUBOPT_0x1B
0073b7 01d0      	MOVW R26,R0
                 _0x1A00BF:
0073b8 940e e093 	CALL __EEPROMWRD
                 ; 000D 02F6         }
                 ; 000D 02F7 
                 ; 000D 02F8 
                 ; 000D 02F9 
                 ; 000D 02FA         epTempRef1[ch]      = val;
0073ba 8dea      	LDD  R30,Y+26
0073bb 8dfb      	LDD  R31,Y+26+1
0073bc 940e ceaa 	CALL SUBOPT_0x23B
0073be 940e cf6e 	CALL SUBOPT_0x256
                 ; 000D 02FB         //epADCRef1[ch]       = adcData[ch];
                 ; 000D 02FC         epIsPointSet1[ch]   = 1;
0073c0 52af      	SUBI R26,LOW(-_epIsPointSet1)
0073c1 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
0073c2 e0e1      	LDI  R30,LOW(1)
0073c3 940e cf77 	CALL SUBOPT_0x257
                 ; 000D 02FD         epIsPointSet2[ch]   = 0;                        // -- reset cal_point 2 -- //
0073c5 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0073c6 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0073c7 e0e0      	LDI  R30,LOW(0)
0073c8 940e cf77 	CALL SUBOPT_0x257
                 ; 000D 02FE         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
0073ca 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0073cb 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0073cc e0e0      	LDI  R30,LOW(0)
0073cd 940e e0a3 	CALL __EEPROMWRB
                 ; 000D 02FF     }
                 ; 000D 0300     else if(pnt == CALPOINT(2)){
0073cf c078      	RJMP _0x1A00A6
                 _0x1A00A1:
0073d0 8da8      	LDD  R26,Y+24
0073d1 8db9      	LDD  R27,Y+24+1
0073d2 36a6      	CPI  R26,LOW(0x66)
0073d3 e0e0      	LDI  R30,HIGH(0x66)
0073d4 07be      	CPC  R27,R30
0073d5 f5a1      	BRNE _0x1A00A7
                 ; 000D 0301 
                 ; 000D 0302         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0073d6 940e c172 	CALL SUBOPT_0x2E
0073d8 f021      	BREQ _0x1A00A9
0073d9 940e c172 	CALL SUBOPT_0x2E
0073db 30e3      	CPI  R30,LOW(0x3)
0073dc f479      	BRNE _0x1A00A8
                 _0x1A00A9:
                 ; 000D 0303 //           viADCbuffer = 0;
                 ; 000D 0304 //             for(i=0;i<30;i++){
                 ; 000D 0305 //                viADCbuffer += read_adc(8+ch);
                 ; 000D 0306 //             }
                 ; 000D 0307 //
                 ; 000D 0308 //             epADCRef2[ch] = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 0309 
                 ; 000D 030A              viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
0073dd 940e cf45 	CALL SUBOPT_0x251
                 ; 000D 030B              viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
0073df 940e cf51 	CALL SUBOPT_0x252
                 ; 000D 030C              epADCRef2[ch] = iAD595VoltToTemp(viVoltUseCaluate);        //0.213 *2 = 0.426
0073e1 940e ce9e 	CALL SUBOPT_0x239
0073e3 0fea      	ADD  R30,R26
0073e4 1ffb      	ADC  R31,R27
0073e5 93ff      	PUSH R31
0073e6 93ef      	PUSH R30
0073e7 940e cf65 	CALL SUBOPT_0x254
0073e9 91af      	POP  R26
0073ea 91bf      	POP  R27
0073eb c00b      	RJMP _0x1A00C0
                 ; 000D 030D         }else{
                 _0x1A00A8:
                 ; 000D 030E            epADCRef2[ch]       = adcData[ch];
0073ec 8dea      	LDD  R30,Y+26
0073ed 8dfb      	LDD  R31,Y+26+1
0073ee 940e ce9e 	CALL SUBOPT_0x239
0073f0 0fea      	ADD  R30,R26
0073f1 1ffb      	ADC  R31,R27
0073f2 940e cf69 	CALL SUBOPT_0x255
0073f4 940e c0fc 	CALL SUBOPT_0x1B
0073f6 01d0      	MOVW R26,R0
                 _0x1A00C0:
0073f7 940e e093 	CALL __EEPROMWRD
                 ; 000D 030F         }
                 ; 000D 0310 
                 ; 000D 0311         epTempRef2[ch]      = val;
0073f9 8dea      	LDD  R30,Y+26
0073fa 8dfb      	LDD  R31,Y+26+1
0073fb 940e ceaf 	CALL SUBOPT_0x23C
0073fd 940e cf6e 	CALL SUBOPT_0x256
                 ; 000D 0312         //epADCRef2[ch]       = adcData[ch];
                 ; 000D 0313         epIsPointSet2[ch]   = 1;
0073ff 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007400 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007401 e0e1      	LDI  R30,LOW(1)
007402 940e cf77 	CALL SUBOPT_0x257
                 ; 000D 0314         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
007404 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007405 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007406 e0e0      	LDI  R30,LOW(0)
007407 940e e0a3 	CALL __EEPROMWRB
                 ; 000D 0315     }
                 ; 000D 0316     else if(pnt == CALPOINT(3)){
007409 c03e      	RJMP _0x1A00AC
                 _0x1A00A7:
00740a 8da8      	LDD  R26,Y+24
00740b 8db9      	LDD  R27,Y+24+1
00740c 36a7      	CPI  R26,LOW(0x67)
00740d e0e0      	LDI  R30,HIGH(0x67)
00740e 07be      	CPC  R27,R30
00740f f569      	BRNE _0x1A00AD
                 ; 000D 0317         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007410 940e c172 	CALL SUBOPT_0x2E
007412 f021      	BREQ _0x1A00AF
007413 940e c172 	CALL SUBOPT_0x2E
007415 30e3      	CPI  R30,LOW(0x3)
007416 f469      	BRNE _0x1A00AE
                 _0x1A00AF:
                 ; 000D 0318 //           viADCbuffer = 0;
                 ; 000D 0319 //             for(i=0;i<30;i++){
                 ; 000D 031A //                viADCbuffer += read_adc(8+ch);
                 ; 000D 031B //             }
                 ; 000D 031C //
                 ; 000D 031D //             epADCRef3[ch] = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 031E 
                 ; 000D 031F              viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
007417 940e cf45 	CALL SUBOPT_0x251
                 ; 000D 0320              viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
007419 940e cf51 	CALL SUBOPT_0x252
                 ; 000D 0321              epADCRef3[ch] = iAD595VoltToTemp(viVoltUseCaluate);        //0.213 *2 = 0.426
00741b 940e cf7c 	CALL SUBOPT_0x258
00741d 93ff      	PUSH R31
00741e 93ef      	PUSH R30
00741f 940e cf65 	CALL SUBOPT_0x254
007421 91af      	POP  R26
007422 91bf      	POP  R27
007423 c009      	RJMP _0x1A00C1
                 ; 000D 0322         }else{
                 _0x1A00AE:
                 ; 000D 0323            epADCRef3[ch]       = adcData[ch];
007424 8dea      	LDD  R30,Y+26
007425 8dfb      	LDD  R31,Y+26+1
007426 940e cf7c 	CALL SUBOPT_0x258
007428 940e cf69 	CALL SUBOPT_0x255
00742a 940e c0fc 	CALL SUBOPT_0x1B
00742c 01d0      	MOVW R26,R0
                 _0x1A00C1:
00742d 940e e093 	CALL __EEPROMWRD
                 ; 000D 0324         }
                 ; 000D 0325 
                 ; 000D 0326         epTempRef3[ch]      = val;
00742f 8dea      	LDD  R30,Y+26
007430 8dfb      	LDD  R31,Y+26+1
007431 e4a4      	LDI  R26,LOW(_epTempRef3)
007432 e0b6      	LDI  R27,HIGH(_epTempRef3)
007433 940e df02 	CALL __LSLW2
007435 940e cf6e 	CALL SUBOPT_0x256
                 ; 000D 0327         //epADCRef3[ch]       = adcData[ch];
                 ; 000D 0328         epIsPointSet3[ch]   = 1;
007437 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007438 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007439 e0e1      	LDI  R30,LOW(1)
00743a 940e e0a3 	CALL __EEPROMWRB
                 ; 000D 0329     }
                 ; 000D 032A     else{
00743c c00b      	RJMP _0x1A00B2
                 _0x1A00AD:
                 ; 000D 032B         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
00743d ece4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 792 ) )
00743e e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 792 ) )
00743f e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 792 ) )
007440 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 792 ) )
                 	__POINTD1FN _0x1A0000,792
007441 940e c66d 	CALL SUBOPT_0xF1
007443 940e c64a 	CALL SUBOPT_0xE9
                 ; 000D 032C         return -1;
007445 efef      	LDI  R30,LOW(65535)
007446 efff      	LDI  R31,HIGH(65535)
007447 c002      	RJMP _0x20E0065
                 ; 000D 032D     }
                 _0x1A00B2:
                 _0x1A00AC:
                 _0x1A00A6:
                 ; 000D 032E 
                 ; 000D 032F     return 0;
007448 e0e0      	LDI  R30,LOW(0)
007449 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0065:
00744a 8119      	LDD  R17,Y+1
00744b 8108      	LDD  R16,Y+0
00744c 966c      	ADIW R28,28
00744d 9508      	RET
                 ; 000D 0330 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
00744e 940e e060 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
007450 91a0 15d2 	LDS  R26,_dataQ_len
007452 91b0 15d3 	LDS  R27,_dataQ_len+1
007454 971a      	SBIW R26,10
007455 f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
007456 efef      	LDI  R30,LOW(65535)
007457 efff      	LDI  R31,HIGH(65535)
007458 940c 7833 	JMP  _0x20E005B
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
00745a 940e cf83 	CALL SUBOPT_0x259
00745c 59e2      	SUBI R30,LOW(-_dataQ)
00745d 4efa      	SBCI R31,HIGH(-_dataQ)
00745e 940e cf89 	CALL SUBOPT_0x25A
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
007460 940e cf83 	CALL SUBOPT_0x259
                +
007462 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
007463 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
007464 81ac      	LDD  R26,Y+4
007465 81bd      	LDD  R27,Y+4+1
007466 83a0      	STD  Z+0,R26
007467 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
007468 940e cf83 	CALL SUBOPT_0x259
                +
00746a 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
00746b 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
00746c 940e c3f8 	CALL SUBOPT_0x8C
00746e 940e cf8e 	CALL SUBOPT_0x25B
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
007470 01d5      	MOVW R26,R10
007471 9611      	ADIW R26,1
007472 940e cf91 	CALL SUBOPT_0x25C
007474 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
007475 eda2      	LDI  R26,LOW(_dataQ_len)
007476 e1b5      	LDI  R27,HIGH(_dataQ_len)
007477 940e c396 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
007479 e0e0      	LDI  R30,LOW(0)
00747a e0f0      	LDI  R31,HIGH(0)
00747b 940c 7833 	JMP  _0x20E005B
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
00747d 93ba      	ST   -Y,R27
00747e 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
00747f 91e0 15d2 	LDS  R30,_dataQ_len
007481 91f0 15d3 	LDS  R31,_dataQ_len+1
007483 9730      	SBIW R30,0
007484 f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
007485 efef      	LDI  R30,LOW(65535)
007486 efff      	LDI  R31,HIGH(65535)
007487 940c 7816 	JMP  _0x20E005C
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
007489 940e cf96 	CALL SUBOPT_0x25D
00748b 59e2      	SUBI R30,LOW(-_dataQ)
00748c 4efa      	SBCI R31,HIGH(-_dataQ)
00748d 940e cf9c 	CALL SUBOPT_0x25E
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
00748f 940e cf96 	CALL SUBOPT_0x25D
                +
007491 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
007492 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
007493 01df      	MOVW R26,R30
007494 940e e027 	CALL __GETW1P
007496 81aa      	LDD  R26,Y+2
007497 81bb      	LDD  R27,Y+2+1
007498 93ed      	ST   X+,R30
007499 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
00749a 940e cf96 	CALL SUBOPT_0x25D
                +
00749c 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
00749d 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
00749e 01df      	MOVW R26,R30
00749f 940e e02b 	CALL __GETD1P
0074a1 81a8      	LD   R26,Y
0074a2 81b9      	LDD  R27,Y+1
0074a3 940e e036 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
0074a5 01d6      	MOVW R26,R12
0074a6 9611      	ADIW R26,1
0074a7 940e cf91 	CALL SUBOPT_0x25C
0074a9 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
0074aa eda2      	LDI  R26,LOW(_dataQ_len)
0074ab e1b5      	LDI  R27,HIGH(_dataQ_len)
0074ac 940c 780f 	JMP  _0x20E005E
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
0074ae 931a      	ST   -Y,R17
                 ;	current_status -> R17
0074af e010      	LDI  R17,0
0074b0 91e0 0103 	LDS  R30,259
0074b2 78e0      	ANDI R30,LOW(0x80)
0074b3 e0f0      	LDI  R31,0
0074b4 940e df09 	CALL __ASRW3
0074b6 940e df07 	CALL __ASRW4
0074b8 9730      	SBIW R30,0
0074b9 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
0074ba e0e0      	LDI  R30,LOW(0)
0074bb 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
0074bd 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
0074bf e6e6     +LDI R30 , LOW ( 0x40866666 )
0074c0 e6f6     +LDI R31 , HIGH ( 0x40866666 )
0074c1 e866     +LDI R22 , BYTE3 ( 0x40866666 )
0074c2 e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
0074c3 940e cfa4 	CALL SUBOPT_0x25F
                 ; 000F 0035         return 0;
0074c5 c041      	RJMP _0x20E0064
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
0074c6 e0e1      	LDI  R30,LOW(1)
0074c7 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
0074c9 940e 4464 	CALL _readBattery
0074cb 940e cfa4 	CALL SUBOPT_0x25F
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
0074cd 940e cfad 	CALL SUBOPT_0x260
0074cf 940e e0b4 	CALL __CPD10
0074d1 f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
0074d2 e0e0      	LDI  R30,LOW(0)
0074d3 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
0074d5 c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
0074d6 940e cfad 	CALL SUBOPT_0x260
0074d8 940e c169 	CALL SUBOPT_0x2D
0074da 940e de8f 	CALL __CMPF12
0074dc f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
0074dd e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
0074de c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
0074df e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
0074e0 91a0 15d9 	LDS  R26,_lastCheck_S00F0001000
0074e2 171a      	CP   R17,R26
0074e3 f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
0074e4 e0e0      	LDI  R30,LOW(0)
0074e5 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
0074e7 9310 15d9 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
0074e9 91e0 15d8 	LDS  R30,_t_flag_S00F0001000
0074eb 30e0      	CPI  R30,0
0074ec f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
0074ed ede4      	LDI  R30,LOW(_t_S00F0001000)
0074ee e1f5      	LDI  R31,HIGH(_t_S00F0001000)
0074ef 940e c145 	CALL SUBOPT_0x27
                 ; 000F 0053                 t_flag              = 1;
0074f1 e0e1      	LDI  R30,LOW(1)
0074f2 c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
0074f3 91a0 15d4 	LDS  R26,_t_S00F0001000
0074f5 91b0 15d5 	LDS  R27,_t_S00F0001000+1
0074f7 9180 15d6 	LDS  R24,_t_S00F0001000+2
0074f9 9190 15d7 	LDS  R25,_t_S00F0001000+3
0074fb 940e 41a1 	CALL _TIMER_checkTimerExceed
0074fd 9730      	SBIW R30,0
0074fe f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
0074ff 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
007501 e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
007502 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
007504 e0e1      	LDI  R30,LOW(1)
007505 e0f0      	LDI  R31,HIGH(1)
007506 c002      	RJMP _0x20E0063
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0064:
007507 e0e0      	LDI  R30,LOW(0)
007508 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0063:
007509 9119      	LD   R17,Y+
00750a 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
00750b 931a      	ST   -Y,R17
00750c 930a      	ST   -Y,R16
                 ;	res -> R16,R17
00750d 91e0 0100 	LDS  R30,256
00750f 940e cfb6 	CALL SUBOPT_0x261
007511 9730      	SBIW R30,0
007512 f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
007513 e0e1      	LDI  R30,LOW(1)
007514 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
007516 efef      	LDI  R30,LOW(255)
007517 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
007519 e0e0      	LDI  R30,LOW(0)
00751a 93e0 1421 	STS  _commLostTimer,R30
00751c 93e0 1422 	STS  _commLostTimer+1,R30
00751e 93e0 1423 	STS  _commLostTimer+2,R30
007520 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
007522 e0e1      	LDI  R30,LOW(1)
007523 e0f0      	LDI  R31,HIGH(1)
007524 c047      	RJMP _0x20E0062
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
007525 e0e0      	LDI  R30,LOW(0)
007526 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
007528 940e c95e 	CALL SUBOPT_0x16F
00752a 940e c1ca 	CALL SUBOPT_0x3A
00752c f029      	BREQ _0x1E0013
00752d 940e c95e 	CALL SUBOPT_0x16F
00752f 940e e0c0 	CALL __CPD02
007531 f409      	BRNE _0x1E0014
                 _0x1E0013:
007532 c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
007533 e9e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
007534 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
007535 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
007536 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
007537 940e c96e 	CALL SUBOPT_0x171
007539 940e c96e 	CALL SUBOPT_0x171
00753b 940e c11b 	CALL SUBOPT_0x21
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
00753d 940e c95e 	CALL SUBOPT_0x16F
00753f 940e 41a1 	CALL _TIMER_checkTimerExceed
007541 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
007542 2311      	TST  R17
007543 f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
007544 efef      	LDI  R30,LOW(255)
007545 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
007547 e0e0      	LDI  R30,LOW(0)
007548 e0f0      	LDI  R31,HIGH(0)
007549 c022      	RJMP _0x20E0062
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
00754a 2e00      	MOV  R0,R16
00754b 2a01      	OR   R0,R17
00754c f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
00754d 91a0 1480 	LDS  R26,_serverCommStatus
00754f 30a2      	CPI  R26,LOW(0x2)
007550 f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
007551 ece6     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
007552 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
007553 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
007554 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
007555 940e c042 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
007557 e0e2      	LDI  R30,LOW(2)
007558 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
00755a e0e1      	LDI  R30,LOW(1)
00755b e0f0      	LDI  R31,HIGH(1)
00755c c00f      	RJMP _0x20E0062
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
00755d 91e0 1480 	LDS  R30,_serverCommStatus
00755f 30e0      	CPI  R30,0
007560 f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
007561 eeea     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
007562 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
007563 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
007564 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
007565 940e c042 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
007567 e0e0      	LDI  R30,LOW(0)
007568 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
00756a e0e0      	LDI  R30,LOW(0)
00756b e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0062:
00756c 9109      	LD   R16,Y+
00756d 9119      	LD   R17,Y+
00756e 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
00756f 940e cfbb 	CALL SUBOPT_0x262
007571 f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
007572 e0e2      	LDI  R30,LOW(2)
007573 c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
007574 940e c14d 	CALL SUBOPT_0x28
                +
007576 e0e0     +LDI R30 , LOW ( 0x400 )
007577 e0f4     +LDI R31 , HIGH ( 0x400 )
007578 e060     +LDI R22 , BYTE3 ( 0x400 )
007579 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
00757a 940e dfaf 	CALL __DIVD21U
00757c 01df      	MOVW R26,R30
                +
00757d 91e0 1375+LDS R30 , _env_config + ( 16 )
00757f 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
007581 17ae      	CP   R26,R30
007582 07bf      	CPC  R27,R31
007583 f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
007584 e0e1      	LDI  R30,LOW(1)
007585 c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
007586 e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
007587 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
007589 30e0      	CPI  R30,0
00758a f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
00758b e0e1      	LDI  R30,LOW(1)
00758c e0f0      	LDI  R31,HIGH(1)
00758d 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
00758e c1aa      	RJMP _0x20E005F
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
00758f 93ba      	ST   -Y,R27
007590 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
007591 81a9      	LDD  R26,Y+1
007592 23aa      	TST  R26
007593 f022      	BRMI _0x1E0022
007594 81a8      	LD   R26,Y
007595 81b9      	LDD  R27,Y+1
007596 9715      	SBIW R26,5
007597 f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
007598 e0ec     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
007599 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
00759a e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
00759b e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
00759c 940e c7d0 	CALL SUBOPT_0x12E
00759e 940e c64a 	CALL SUBOPT_0xE9
                 ; 000F 00B1         return 0;
0075a0 e0e0      	LDI  R30,LOW(0)
0075a1 e0f0      	LDI  R31,HIGH(0)
0075a2 c01d      	RJMP _0x20E0061
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
0075a3 940e cfc6 	CALL SUBOPT_0x263
                +
0075a5 2f7e     +MOV R23 , R30
0075a6 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
0075a7 81a8      	LD   R26,Y
0075a8 81b9      	LDD  R27,Y+1
0075a9 940e ce25 	CALL SUBOPT_0x229
                +
0075ab 2fa7     +MOV R26 , R23
0075ac 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
0075ad 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
0075ae 940e cfc6 	CALL SUBOPT_0x263
0075b0 81a0      	LD   R26,Z
0075b1 3faf      	CPI  R26,LOW(0xFF)
0075b2 f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
0075b3 e0e0      	LDI  R30,LOW(0)
0075b4 e0f0      	LDI  R31,HIGH(0)
0075b5 c00a      	RJMP _0x20E0061
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
0075b6 940e cfc6 	CALL SUBOPT_0x263
0075b8 81e0      	LD   R30,Z
0075b9 30e0      	CPI  R30,0
0075ba f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
0075bb e0e1      	LDI  R30,LOW(1)
0075bc e0f0      	LDI  R31,HIGH(1)
0075bd c002      	RJMP _0x20E0061
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
0075be e0e0      	LDI  R30,LOW(0)
0075bf e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0061:
0075c0 9622      	ADIW R28,2
0075c1 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
0075c2 940e c3b3 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
0075c4 e000     +LDI R16 , LOW ( 0 )
0075c5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0075c6 81ab      	LDD  R26,Y+3
0075c7 23aa      	TST  R26
0075c8 f022      	BRMI _0x1E0029
0075c9 81aa      	LDD  R26,Y+2
0075ca 81bb      	LDD  R27,Y+2+1
0075cb 9715      	SBIW R26,5
0075cc f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
0075cd e4e1     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
0075ce e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
0075cf e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
0075d0 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
0075d1 940e c6e5 	CALL SUBOPT_0x104
0075d3 940e c64a 	CALL SUBOPT_0xE9
                 ; 000F 00CC         return 0;
0075d5 e0e0      	LDI  R30,LOW(0)
0075d6 e0f0      	LDI  R31,HIGH(0)
0075d7 c0cf      	RJMP _0x20E0060
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
0075d8 940e c781 	CALL SUBOPT_0x11F
                +
0075da 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0075db 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0075dc 81e0      	LD   R30,Z
0075dd 30e0      	CPI  R30,0
0075de f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
0075df e0e0      	LDI  R30,LOW(0)
0075e0 e0f0      	LDI  R31,HIGH(0)
0075e1 c0c5      	RJMP _0x20E0060
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
0075e2 940e c781 	CALL SUBOPT_0x11F
0075e4 940e c115 	CALL SUBOPT_0x20
0075e6 937f      	PUSH R23
0075e7 936f      	PUSH R22
0075e8 93ff      	PUSH R31
0075e9 93ef      	PUSH R30
0075ea 940e c70d 	CALL SUBOPT_0x10C
                +
0075ec 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
0075ed 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
0075ee 01df      	MOVW R26,R30
0075ef 940e e02b 	CALL __GETD1P
0075f1 91af      	POP  R26
0075f2 91bf      	POP  R27
0075f3 918f      	POP  R24
0075f4 919f      	POP  R25
0075f5 940e de8f 	CALL __CMPF12
0075f7 f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
0075f8 940e cfcb 	CALL SUBOPT_0x264
0075fa 81e0      	LD   R30,Z
0075fb 30e0      	CPI  R30,0
0075fc f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
0075fd 940e cfd0 	CALL SUBOPT_0x265
0075ff 940e c107 	CALL SUBOPT_0x1D
007601 81ac      	LDD  R26,Y+4
007602 81bd      	LDD  R27,Y+4+1
007603 940e cfd7 	CALL SUBOPT_0x266
007605 940e c111 	CALL SUBOPT_0x1F
                 ; 000F 00D9             flag_lower[ch] = 1;
007607 940e cfcb 	CALL SUBOPT_0x264
007609 e0a1      	LDI  R26,LOW(1)
00760a 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
00760b c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
00760c 940e cfd0 	CALL SUBOPT_0x265
00760e 940e c0fc 	CALL SUBOPT_0x1B
007610 940e c101 	CALL SUBOPT_0x1C
007612 f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
007613 940e cfdf 	CALL SUBOPT_0x267
007615 60e1      	ORI  R30,1
007616 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
007617 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
007618 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
007619 940e cfcb 	CALL SUBOPT_0x264
00761b e0a0      	LDI  R26,LOW(0)
00761c 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
00761d 940e cfdf 	CALL SUBOPT_0x267
00761f 7fee      	ANDI R30,0xFE
007620 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
007621 940e c781 	CALL SUBOPT_0x11F
007623 940e c115 	CALL SUBOPT_0x20
007625 937f      	PUSH R23
007626 936f      	PUSH R22
007627 93ff      	PUSH R31
007628 93ef      	PUSH R30
007629 940e c70d 	CALL SUBOPT_0x10C
                +
00762b 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00762c 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00762d 01df      	MOVW R26,R30
00762e 940e e02b 	CALL __GETD1P
007630 91af      	POP  R26
007631 91bf      	POP  R27
007632 918f      	POP  R24
007633 919f      	POP  R25
007634 940e de8f 	CALL __CMPF12
007636 f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
007637 940e cfdf 	CALL SUBOPT_0x267
007639 60e2      	ORI  R30,2
00763a 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
00763b 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
00763c c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
00763d 940e cfdf 	CALL SUBOPT_0x267
00763f 7fed      	ANDI R30,0xFD
007640 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
007641 940e c781 	CALL SUBOPT_0x11F
007643 940e c115 	CALL SUBOPT_0x20
007645 937f      	PUSH R23
007646 936f      	PUSH R22
007647 93ff      	PUSH R31
007648 93ef      	PUSH R30
007649 940e c70d 	CALL SUBOPT_0x10C
                +
00764b 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00764c 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00764d 01df      	MOVW R26,R30
00764e 940e e02b 	CALL __GETD1P
007650 91af      	POP  R26
007651 91bf      	POP  R27
007652 918f      	POP  R24
007653 919f      	POP  R25
007654 940e de8f 	CALL __CMPF12
007656 f009      	BREQ PC+2
007657 f410      	BRCC PC+3
007658 940c 767b 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
00765a 940e cfe5 	CALL SUBOPT_0x268
00765c 81e0      	LD   R30,Z
00765d 30e0      	CPI  R30,0
00765e f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
00765f 940e cfd0 	CALL SUBOPT_0x265
007661 940e c107 	CALL SUBOPT_0x1D
007663 81ac      	LDD  R26,Y+4
007664 81bd      	LDD  R27,Y+4+1
007665 940e cfea 	CALL SUBOPT_0x269
007667 940e c111 	CALL SUBOPT_0x1F
                 ; 000F 0101             flag_upper[ch] = 1;
007669 940e cfe5 	CALL SUBOPT_0x268
00766b e0a1      	LDI  R26,LOW(1)
00766c 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
00766d c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
00766e 940e cfd0 	CALL SUBOPT_0x265
007670 940e c0fc 	CALL SUBOPT_0x1B
007672 940e c101 	CALL SUBOPT_0x1C
007674 f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
007675 940e cfdf 	CALL SUBOPT_0x267
007677 60e4      	ORI  R30,4
007678 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
007679 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
00767a c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
00767b 940e cfe5 	CALL SUBOPT_0x268
00767d e0a0      	LDI  R26,LOW(0)
00767e 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
00767f 940e cfdf 	CALL SUBOPT_0x267
007681 7feb      	ANDI R30,0xFB
007682 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
007683 940e c781 	CALL SUBOPT_0x11F
007685 940e c115 	CALL SUBOPT_0x20
007687 937f      	PUSH R23
007688 936f      	PUSH R22
007689 93ff      	PUSH R31
00768a 93ef      	PUSH R30
00768b 940e c70d 	CALL SUBOPT_0x10C
                +
00768d 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00768e 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00768f 01df      	MOVW R26,R30
007690 940e e02b 	CALL __GETD1P
007692 91af      	POP  R26
007693 91bf      	POP  R27
007694 918f      	POP  R24
007695 919f      	POP  R25
007696 940e de8f 	CALL __CMPF12
007698 f009      	BREQ PC+2
007699 f410      	BRCC PC+3
00769a 940c 76a2 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
00769c 940e cfdf 	CALL SUBOPT_0x267
00769e 60e8      	ORI  R30,8
00769f 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
0076a0 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
0076a1 c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
0076a2 940e cfdf 	CALL SUBOPT_0x267
0076a4 7fe7      	ANDI R30,0XF7
0076a5 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
0076a6 01f8      	MOVW R30,R16
                 _0x20E0060:
0076a7 8119      	LDD  R17,Y+1
0076a8 8108      	LDD  R16,Y+0
0076a9 9624      	ADIW R28,4
0076aa 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
0076ab 940e e0d0 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
0076ad ef1f      	LDI  R17,255
0076ae 940e c02e 	CALL SUBOPT_0x0
                +
0076b0 e020     +LDI R18 , LOW ( 0 )
0076b1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
0076b2 3022     +CPI R18 , LOW ( 2 )
0076b3 e0e0     +LDI R30 , HIGH ( 2 )
0076b4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0076b5 f014      	BRLT PC+3
0076b6 940c 7723 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
0076b8 940e c0ca 	CALL SUBOPT_0x15
0076ba 81a0      	LD   R26,Z
0076bb 30a1      	CPI  R26,LOW(0x1)
0076bc f011      	BREQ PC+3
0076bd 940c 7720 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
0076bf 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
0076c0 9730      	SBIW R30,0
0076c1 f441      	BRNE _0x1E0042
0076c2 91e0 0103 	LDS  R30,259
0076c4 940e cfb6 	CALL SUBOPT_0x261
0076c6 940e df4c 	CALL __LNEGW1
0076c8 2f1e      	MOV  R17,R30
0076c9 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
0076ca 30e1      	CPI  R30,LOW(0x1)
0076cb e0a0      	LDI  R26,HIGH(0x1)
0076cc 07fa      	CPC  R31,R26
0076cd f451      	BRNE _0x1E0044
0076ce 91e0 0103 	LDS  R30,259
0076d0 70e8      	ANDI R30,LOW(0x8)
0076d1 e0f0      	LDI  R31,0
0076d2 940e df09 	CALL __ASRW3
0076d4 940e df4c 	CALL __LNEGW1
0076d6 2f1e      	MOV  R17,R30
0076d7 c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
0076d8 e7ee     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
0076d9 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
0076da e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
0076db e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
0076dc 940e c0b0 	CALL SUBOPT_0x11
0076de 940e c0b8 	CALL SUBOPT_0x12
0076e0 e0e0      	LDI  R30,LOW(0)
0076e1 e0f0      	LDI  R31,HIGH(0)
0076e2 940e e0d7 	CALL __LOADLOCR6
0076e4 c131      	RJMP _0x20E005C
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
0076e5 e0a0      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
0076e6 e1b6      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
0076e7 0fa2      	ADD  R26,R18
0076e8 1fb3      	ADC  R27,R19
0076e9 91ec      	LD   R30,X
0076ea 17e1      	CP   R30,R17
0076eb f081      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
0076ec 01f9      	MOVW R30,R18
0076ed efa8      	LDI  R26,LOW(_t_S00F0006000)
0076ee e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0076ef 940e cff2 	CALL SUBOPT_0x26A
                +
0076f1 e0a1     +LDI R26 , LOW ( 0x1 )
0076f2 e0b0     +LDI R27 , HIGH ( 0x1 )
0076f3 e080     +LDI R24 , BYTE3 ( 0x1 )
0076f4 e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
0076f5 940e 41b7 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
0076f7 01f9      	MOVW R30,R18
0076f8 50e0      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
0076f9 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
0076fa 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
0076fb c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
0076fc e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0076fd e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0076fe 940e c0a2 	CALL SUBOPT_0xF
007700 f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
007701 01f9      	MOVW R30,R18
007702 efa8      	LDI  R26,LOW(_t_S00F0006000)
007703 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
007704 940e cff6 	CALL SUBOPT_0x26B
007706 940e c101 	CALL SUBOPT_0x1C
007708 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
007709 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
00770a e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
00770b 0fa2      	ADD  R26,R18
00770c 1fb3      	ADC  R27,R19
00770d e0e1      	LDI  R30,LOW(1)
00770e 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
00770f 3010      	CPI  R17,0
007710 f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
007711 940e c15c 	CALL SUBOPT_0x2A
007713 e0e1      	LDI  R30,LOW(1)
007714 c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
007715 940e c15c 	CALL SUBOPT_0x2A
007717 e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
007718 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
007719 5f4f     +SUBI R20 , LOW ( - 1 )
00771a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
00771b c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
00771c e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
00771d e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
00771e 940e c0bd 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
007720 5f2f     +SUBI R18 , LOW ( - 1 )
007721 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
007722 cf8f      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
007723 01fa      	MOVW R30,R20
007724 940e e0d7 	CALL __LOADLOCR6
007726 c0ef      	RJMP _0x20E005C
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
007727 91e0 1434 	LDS  R30,_d_out
007729 30e0      	CPI  R30,0
00772a f011      	BREQ _0x1E004C
00772b e0e1      	LDI  R30,LOW(1)
00772c c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
00772d e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
00772e 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
007730 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
007732 30e0      	CPI  R30,0
007733 f011      	BREQ _0x1E004E
007734 e0e1      	LDI  R30,LOW(1)
007735 c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
007736 e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
007737 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E005F:
007739 e0e0      	LDI  R30,LOW(0)
00773a e0f0      	LDI  R31,HIGH(0)
00773b 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
00773c 940e c3b3 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
00773e e000     +LDI R16 , LOW ( 0 )
00773f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
007740 81aa      	LDD  R26,Y+2
007741 81bb      	LDD  R27,Y+2+1
007742 940e c737 	CALL SUBOPT_0x113
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
007744 940e 52ef 	CALL _isDeviceConfig
007746 9730      	SBIW R30,0
007747 f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
007748 81aa      	LDD  R26,Y+2
007749 81bb      	LDD  R27,Y+2+1
00774a 91ed      	LD   R30,X+
00774b 91fd      	LD   R31,X+
00774c 68f0      	ORI  R31,HIGH(0x8000)
00774d c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
00774e 81aa      	LDD  R26,Y+2
00774f 81bb      	LDD  R27,Y+2+1
007750 91ed      	LD   R30,X+
007751 91fd      	LD   R31,X+
007752 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
007753 93fe      	ST   -X,R31
007754 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
007755 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
007757 30e0      	CPI  R30,0
007758 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
007759 81aa      	LDD  R26,Y+2
00775a 81bb      	LDD  R27,Y+2+1
00775b 91ed      	LD   R30,X+
00775c 91fd      	LD   R31,X+
00775d 64f0      	ORI  R31,HIGH(0x4000)
00775e c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
00775f 81aa      	LDD  R26,Y+2
007760 81bb      	LDD  R27,Y+2+1
007761 91ed      	LD   R30,X+
007762 91fd      	LD   R31,X+
007763 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
007764 93fe      	ST   -X,R31
007765 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
007766 91a0 11b6 	LDS  R26,_operating_config
007768 31a0      	CPI  R26,LOW(0x10)
007769 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
00776a 81aa      	LDD  R26,Y+2
00776b 81bb      	LDD  R27,Y+2+1
00776c 91ed      	LD   R30,X+
00776d 91fd      	LD   R31,X+
00776e 60f8      	ORI  R31,HIGH(0x800)
00776f c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
007770 81aa      	LDD  R26,Y+2
007771 81bb      	LDD  R27,Y+2+1
007772 91ed      	LD   R30,X+
007773 91fd      	LD   R31,X+
007774 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
007775 93fe      	ST   -X,R31
007776 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
007777 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
007779 30e0      	CPI  R30,0
00777a f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
00777b 81aa      	LDD  R26,Y+2
00777c 81bb      	LDD  R27,Y+2+1
00777d 91ed      	LD   R30,X+
00777e 91fd      	LD   R31,X+
00777f 60f2      	ORI  R31,HIGH(0x200)
007780 c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
007781 81aa      	LDD  R26,Y+2
007782 81bb      	LDD  R27,Y+2+1
007783 91ed      	LD   R30,X+
007784 91fd      	LD   R31,X+
007785 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
007786 93fe      	ST   -X,R31
007787 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
007788 e000     +LDI R16 , LOW ( 0 )
007789 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
00778a 3005     +CPI R16 , LOW ( 5 )
00778b e0e0     +LDI R30 , HIGH ( 5 )
00778c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00778d f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
00778e 940e cffa 	CALL SUBOPT_0x26C
007790 f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
007791 940e d001 	CALL SUBOPT_0x26D
007793 2be6      	OR   R30,R22
007794 2bf7      	OR   R31,R23
007795 c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
007796 940e d001 	CALL SUBOPT_0x26D
007798 95e0      	COM  R30
007799 95f0      	COM  R31
00779a 23e6      	AND  R30,R22
00779b 23f7      	AND  R31,R23
                 _0x1E0067:
00779c 01dc      	MOVW R26,R24
00779d 93ed      	ST   X+,R30
00779e 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
00779f 5f0f     +SUBI R16 , LOW ( - 1 )
0077a0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0077a1 cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
0077a2 eaeb     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
0077a3 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
0077a4 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
0077a5 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
0077a6 940e c83e 	CALL SUBOPT_0x143
0077a8 940e c10c 	CALL SUBOPT_0x1E
0077aa 940e ca12 	CALL SUBOPT_0x189
                 ; 000F 0191 
                 ; 000F 0192     return 0;
0077ac 940e c5d2 	CALL SUBOPT_0xD6
0077ae 940c 7d28 	JMP  _0x20E0057
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
0077b0 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
0077b1 91a0 1680 	LDS  R26,_eventQ_len
0077b3 91b0 1681 	LDS  R27,_eventQ_len+1
0077b5 9754      	SBIW R26,20
0077b6 f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
0077b7 efef      	LDI  R30,LOW(65535)
0077b8 efff      	LDI  R31,HIGH(65535)
0077b9 c05c      	RJMP _0x20E005C
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
0077ba 940e d00f 	CALL SUBOPT_0x26E
0077bc 5fec      	SUBI R30,LOW(-_eventQ)
0077bd 4ef9      	SBCI R31,HIGH(-_eventQ)
0077be 940e c4fb 	CALL SUBOPT_0xB4
0077c0 940e cf8e 	CALL SUBOPT_0x25B
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
0077c2 940e d00f 	CALL SUBOPT_0x26E
                +
0077c4 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0077c5 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0077c6 81a9      	LDD  R26,Y+1
0077c7 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
0077c8 940e d00f 	CALL SUBOPT_0x26E
                +
0077ca 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0077cb 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0077cc 81a8      	LD   R26,Y
0077cd 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
0077ce 91a0 167c 	LDS  R26,_last_wr_eventQ
0077d0 91b0 167d 	LDS  R27,_last_wr_eventQ+1
0077d2 9611      	ADIW R26,1
0077d3 e1e4      	LDI  R30,LOW(20)
0077d4 e0f0      	LDI  R31,HIGH(20)
0077d5 940e dfe8 	CALL __MODW21
0077d7 93e0 167c 	STS  _last_wr_eventQ,R30
0077d9 93f0 167d 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
0077db e8a0      	LDI  R26,LOW(_eventQ_len)
0077dc e1b6      	LDI  R27,HIGH(_eventQ_len)
0077dd 91ed      	LD   R30,X+
0077de 91fd      	LD   R31,X+
0077df 9631      	ADIW R30,1
0077e0 c031      	RJMP _0x20E005D
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
0077e1 93ba      	ST   -Y,R27
0077e2 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
0077e3 91e0 1680 	LDS  R30,_eventQ_len
0077e5 91f0 1681 	LDS  R31,_eventQ_len+1
0077e7 9730      	SBIW R30,0
0077e8 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
0077e9 efef      	LDI  R30,LOW(65535)
0077ea efff      	LDI  R31,HIGH(65535)
0077eb c02a      	RJMP _0x20E005C
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
0077ec 940e d017 	CALL SUBOPT_0x26F
0077ee 5fec      	SUBI R30,LOW(-_eventQ)
0077ef 4ef9      	SBCI R31,HIGH(-_eventQ)
0077f0 940e cf9c 	CALL SUBOPT_0x25E
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
0077f2 940e d017 	CALL SUBOPT_0x26F
                +
0077f4 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0077f5 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0077f6 81e0      	LD   R30,Z
0077f7 81aa      	LDD  R26,Y+2
0077f8 81bb      	LDD  R27,Y+2+1
0077f9 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
0077fa 940e d017 	CALL SUBOPT_0x26F
                +
0077fc 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0077fd 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0077fe 940e d01f 	CALL SUBOPT_0x270
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
007800 91a0 167e 	LDS  R26,_last_rd_eventQ
007802 91b0 167f 	LDS  R27,_last_rd_eventQ+1
007804 9611      	ADIW R26,1
007805 e1e4      	LDI  R30,LOW(20)
007806 e0f0      	LDI  R31,HIGH(20)
007807 940e dfe8 	CALL __MODW21
007809 93e0 167e 	STS  _last_rd_eventQ,R30
00780b 93f0 167f 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
00780d e8a0      	LDI  R26,LOW(_eventQ_len)
00780e e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005E:
00780f 91ed      	LD   R30,X+
007810 91fd      	LD   R31,X+
007811 9731      	SBIW R30,1
                 _0x20E005D:
007812 93fe      	ST   -X,R31
007813 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
007814 e0e0      	LDI  R30,LOW(0)
007815 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005C:
007816 9626      	ADIW R28,6
007817 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
007818 93ba      	ST   -Y,R27
007819 93aa      	ST   -Y,R26
00781a 940e c1b2 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
00781c e000     +LDI R16 , LOW ( 0 )
00781d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
00781e 81ee      	LDD  R30,Y+6
00781f 81ff      	LDD  R31,Y+6+1
007820 170e      	CP   R16,R30
007821 071f      	CPC  R17,R31
007822 f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
007823 01f8      	MOVW R30,R16
007824 85a8      	LDD  R26,Y+8
007825 85b9      	LDD  R27,Y+8+1
007826 0fae      	ADD  R26,R30
007827 1fbf      	ADC  R27,R31
007828 91ac      	LD   R26,X
007829 d00b      	RCALL _checkAlarmFromSrc
00782a 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
00782b 2b24     +OR R18 , R20
00782c 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
00782d 5f0f     +SUBI R16 , LOW ( - 1 )
00782e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00782f cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
007830 01f9      	MOVW R30,R18
007831 940e e0d7 	CALL __LOADLOCR6
                 _0x20E005B:
007833 962a      	ADIW R28,10
007834 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
007835 93aa      	ST   -Y,R26
007836 940e d024 	CALL SUBOPT_0x271
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
007838 e020     +LDI R18 , LOW ( 0 )
007839 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00783a 81ec      	LDD  R30,Y+4
00783b e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
00783c 3ce0      	CPI  R30,LOW(0xC0)
00783d e0a0      	LDI  R26,HIGH(0xC0)
00783e 07fa      	CPC  R31,R26
00783f f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
007840 91a0 146f 	LDS  R26,_sensorStatus
007842 30a0      	CPI  R26,LOW(0x0)
007843 f011      	BREQ _0x22000D
007844 3faf      	CPI  R26,LOW(0xFF)
007845 f421      	BRNE _0x22000F
                 _0x22000D:
007846 91a0 1474 	LDS  R26,_dataStatus
007848 30a0      	CPI  R26,LOW(0x0)
007849 f011      	BREQ _0x22000C
                 _0x22000F:
                +
00784a e021     +LDI R18 , LOW ( 1 )
00784b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
00784c c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
00784d 3ce1      	CPI  R30,LOW(0xC1)
00784e e0a0      	LDI  R26,HIGH(0xC1)
00784f 07fa      	CPC  R31,R26
007850 f439      	BRNE _0x220011
007851 91e0 1474 	LDS  R30,_dataStatus
007853 70e1      	ANDI R30,LOW(0x1)
007854 f011      	BREQ _0x220012
                +
007855 e021     +LDI R18 , LOW ( 1 )
007856 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
007857 c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
007858 3ce2      	CPI  R30,LOW(0xC2)
007859 e0a0      	LDI  R26,HIGH(0xC2)
00785a 07fa      	CPC  R31,R26
00785b f439      	BRNE _0x220013
00785c 91e0 1474 	LDS  R30,_dataStatus
00785e 71e1      	ANDI R30,LOW(0x11)
00785f f011      	BREQ _0x220014
                +
007860 e021     +LDI R18 , LOW ( 1 )
007861 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
007862 c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
007863 3ce3      	CPI  R30,LOW(0xC3)
007864 e0a0      	LDI  R26,HIGH(0xC3)
007865 07fa      	CPC  R31,R26
007866 f439      	BRNE _0x220015
007867 91e0 1474 	LDS  R30,_dataStatus
007869 70e2      	ANDI R30,LOW(0x2)
00786a f011      	BREQ _0x220016
                +
00786b e021     +LDI R18 , LOW ( 1 )
00786c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
00786d c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
00786e 3ce4      	CPI  R30,LOW(0xC4)
00786f e0a0      	LDI  R26,HIGH(0xC4)
007870 07fa      	CPC  R31,R26
007871 f439      	BRNE _0x220017
007872 91e0 1474 	LDS  R30,_dataStatus
007874 70e4      	ANDI R30,LOW(0x4)
007875 f011      	BREQ _0x220018
                +
007876 e021     +LDI R18 , LOW ( 1 )
007877 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
007878 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
007879 3ce5      	CPI  R30,LOW(0xC5)
00787a e0a0      	LDI  R26,HIGH(0xC5)
00787b 07fa      	CPC  R31,R26
00787c f439      	BRNE _0x220019
00787d 91e0 1474 	LDS  R30,_dataStatus
00787f 71e4      	ANDI R30,LOW(0x14)
007880 f011      	BREQ _0x22001A
                +
007881 e021     +LDI R18 , LOW ( 1 )
007882 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
007883 c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
007884 3ce6      	CPI  R30,LOW(0xC6)
007885 e0a0      	LDI  R26,HIGH(0xC6)
007886 07fa      	CPC  R31,R26
007887 f439      	BRNE _0x22001B
007888 91e0 1474 	LDS  R30,_dataStatus
00788a 70e8      	ANDI R30,LOW(0x8)
00788b f011      	BREQ _0x22001C
                +
00788c e021     +LDI R18 , LOW ( 1 )
00788d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
00788e c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
00788f 3ce7      	CPI  R30,LOW(0xC7)
007890 e0a0      	LDI  R26,HIGH(0xC7)
007891 07fa      	CPC  R31,R26
007892 f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
007893 91a0 146f 	LDS  R26,_sensorStatus
007895 30a0      	CPI  R26,LOW(0x0)
007896 f011      	BREQ _0x22001F
007897 3faf      	CPI  R26,LOW(0xFF)
007898 f409      	BRNE _0x220020
                 _0x22001F:
007899 c002      	RJMP _0x22001E
                 _0x220020:
                +
00789a e021     +LDI R18 , LOW ( 1 )
00789b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
00789c c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
00789d 3ce8      	CPI  R30,LOW(0xC8)
00789e e0a0      	LDI  R26,HIGH(0xC8)
00789f 07fa      	CPC  R31,R26
0078a0 f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
0078a1 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0078a3 30a0      	CPI  R26,LOW(0x0)
0078a4 f021      	BREQ _0x220023
                +
0078a5 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0078a7 3faf      	CPI  R26,LOW(0xFF)
0078a8 f421      	BRNE _0x220025
                 _0x220023:
                +
0078a9 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
0078ab 30a0      	CPI  R26,LOW(0x0)
0078ac f011      	BREQ _0x220022
                 _0x220025:
                +
0078ad e021     +LDI R18 , LOW ( 1 )
0078ae e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
0078af c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
0078b0 3ce9      	CPI  R30,LOW(0xC9)
0078b1 e0a0      	LDI  R26,HIGH(0xC9)
0078b2 07fa      	CPC  R31,R26
0078b3 f439      	BRNE _0x220027
                +
0078b4 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078b6 70e1      	ANDI R30,LOW(0x1)
0078b7 f011      	BREQ _0x220028
                +
0078b8 e021     +LDI R18 , LOW ( 1 )
0078b9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
0078ba c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
0078bb 3cea      	CPI  R30,LOW(0xCA)
0078bc e0a0      	LDI  R26,HIGH(0xCA)
0078bd 07fa      	CPC  R31,R26
0078be f439      	BRNE _0x220029
                +
0078bf 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078c1 71e1      	ANDI R30,LOW(0x11)
0078c2 f011      	BREQ _0x22002A
                +
0078c3 e021     +LDI R18 , LOW ( 1 )
0078c4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
0078c5 c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
0078c6 3ceb      	CPI  R30,LOW(0xCB)
0078c7 e0a0      	LDI  R26,HIGH(0xCB)
0078c8 07fa      	CPC  R31,R26
0078c9 f439      	BRNE _0x22002B
                +
0078ca 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078cc 70e2      	ANDI R30,LOW(0x2)
0078cd f011      	BREQ _0x22002C
                +
0078ce e021     +LDI R18 , LOW ( 1 )
0078cf e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
0078d0 c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
0078d1 3cec      	CPI  R30,LOW(0xCC)
0078d2 e0a0      	LDI  R26,HIGH(0xCC)
0078d3 07fa      	CPC  R31,R26
0078d4 f439      	BRNE _0x22002D
                +
0078d5 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078d7 70e4      	ANDI R30,LOW(0x4)
0078d8 f011      	BREQ _0x22002E
                +
0078d9 e021     +LDI R18 , LOW ( 1 )
0078da e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
0078db c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
0078dc 3ced      	CPI  R30,LOW(0xCD)
0078dd e0a0      	LDI  R26,HIGH(0xCD)
0078de 07fa      	CPC  R31,R26
0078df f439      	BRNE _0x22002F
                +
0078e0 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078e2 71e4      	ANDI R30,LOW(0x14)
0078e3 f011      	BREQ _0x220030
                +
0078e4 e021     +LDI R18 , LOW ( 1 )
0078e5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
0078e6 c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
0078e7 3cee      	CPI  R30,LOW(0xCE)
0078e8 e0a0      	LDI  R26,HIGH(0xCE)
0078e9 07fa      	CPC  R31,R26
0078ea f439      	BRNE _0x220031
                +
0078eb 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078ed 70e8      	ANDI R30,LOW(0x8)
0078ee f011      	BREQ _0x220032
                +
0078ef e021     +LDI R18 , LOW ( 1 )
0078f0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
0078f1 c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
0078f2 3cef      	CPI  R30,LOW(0xCF)
0078f3 e0a0      	LDI  R26,HIGH(0xCF)
0078f4 07fa      	CPC  R31,R26
0078f5 f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0078f6 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0078f8 30a0      	CPI  R26,LOW(0x0)
0078f9 f021      	BREQ _0x220035
                +
0078fa 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0078fc 3faf      	CPI  R26,LOW(0xFF)
0078fd f409      	BRNE _0x220036
                 _0x220035:
0078fe c002      	RJMP _0x220034
                 _0x220036:
                +
0078ff e021     +LDI R18 , LOW ( 1 )
007900 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
007901 c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
007902 3de0      	CPI  R30,LOW(0xD0)
007903 e0a0      	LDI  R26,HIGH(0xD0)
007904 07fa      	CPC  R31,R26
007905 f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
007906 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007908 30a0      	CPI  R26,LOW(0x0)
007909 f021      	BREQ _0x220039
                +
00790a 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
00790c 3faf      	CPI  R26,LOW(0xFF)
00790d f421      	BRNE _0x22003B
                 _0x220039:
                +
00790e 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
007910 30a0      	CPI  R26,LOW(0x0)
007911 f011      	BREQ _0x220038
                 _0x22003B:
                +
007912 e021     +LDI R18 , LOW ( 1 )
007913 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
007914 c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
007915 3de1      	CPI  R30,LOW(0xD1)
007916 e0a0      	LDI  R26,HIGH(0xD1)
007917 07fa      	CPC  R31,R26
007918 f439      	BRNE _0x22003D
                +
007919 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00791b 70e1      	ANDI R30,LOW(0x1)
00791c f011      	BREQ _0x22003E
                +
00791d e021     +LDI R18 , LOW ( 1 )
00791e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
00791f c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
007920 3de2      	CPI  R30,LOW(0xD2)
007921 e0a0      	LDI  R26,HIGH(0xD2)
007922 07fa      	CPC  R31,R26
007923 f439      	BRNE _0x22003F
                +
007924 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007926 71e1      	ANDI R30,LOW(0x11)
007927 f011      	BREQ _0x220040
                +
007928 e021     +LDI R18 , LOW ( 1 )
007929 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
00792a c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
00792b 3de3      	CPI  R30,LOW(0xD3)
00792c e0a0      	LDI  R26,HIGH(0xD3)
00792d 07fa      	CPC  R31,R26
00792e f439      	BRNE _0x220041
                +
00792f 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007931 70e2      	ANDI R30,LOW(0x2)
007932 f011      	BREQ _0x220042
                +
007933 e021     +LDI R18 , LOW ( 1 )
007934 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
007935 c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
007936 3de4      	CPI  R30,LOW(0xD4)
007937 e0a0      	LDI  R26,HIGH(0xD4)
007938 07fa      	CPC  R31,R26
007939 f439      	BRNE _0x220043
                +
00793a 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00793c 70e4      	ANDI R30,LOW(0x4)
00793d f011      	BREQ _0x220044
                +
00793e e021     +LDI R18 , LOW ( 1 )
00793f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
007940 c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
007941 3de5      	CPI  R30,LOW(0xD5)
007942 e0a0      	LDI  R26,HIGH(0xD5)
007943 07fa      	CPC  R31,R26
007944 f439      	BRNE _0x220045
                +
007945 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007947 71e4      	ANDI R30,LOW(0x14)
007948 f011      	BREQ _0x220046
                +
007949 e021     +LDI R18 , LOW ( 1 )
00794a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
00794b c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
00794c 3de6      	CPI  R30,LOW(0xD6)
00794d e0a0      	LDI  R26,HIGH(0xD6)
00794e 07fa      	CPC  R31,R26
00794f f439      	BRNE _0x220047
                +
007950 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007952 70e8      	ANDI R30,LOW(0x8)
007953 f011      	BREQ _0x220048
                +
007954 e021     +LDI R18 , LOW ( 1 )
007955 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
007956 c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
007957 3de7      	CPI  R30,LOW(0xD7)
007958 e0a0      	LDI  R26,HIGH(0xD7)
007959 07fa      	CPC  R31,R26
00795a f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
00795b 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
00795d 30a0      	CPI  R26,LOW(0x0)
00795e f021      	BREQ _0x22004B
                +
00795f 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007961 3faf      	CPI  R26,LOW(0xFF)
007962 f409      	BRNE _0x22004C
                 _0x22004B:
007963 c002      	RJMP _0x22004A
                 _0x22004C:
                +
007964 e021     +LDI R18 , LOW ( 1 )
007965 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
007966 c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
007967 3de8      	CPI  R30,LOW(0xD8)
007968 e0a0      	LDI  R26,HIGH(0xD8)
007969 07fa      	CPC  R31,R26
00796a f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
00796b 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
00796d 30a0      	CPI  R26,LOW(0x0)
00796e f021      	BREQ _0x22004F
                +
00796f 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007971 3faf      	CPI  R26,LOW(0xFF)
007972 f421      	BRNE _0x220051
                 _0x22004F:
                +
007973 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
007975 30a0      	CPI  R26,LOW(0x0)
007976 f011      	BREQ _0x22004E
                 _0x220051:
                +
007977 e021     +LDI R18 , LOW ( 1 )
007978 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
007979 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
00797a 3de9      	CPI  R30,LOW(0xD9)
00797b e0a0      	LDI  R26,HIGH(0xD9)
00797c 07fa      	CPC  R31,R26
00797d f439      	BRNE _0x220053
                +
00797e 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007980 70e1      	ANDI R30,LOW(0x1)
007981 f011      	BREQ _0x220054
                +
007982 e021     +LDI R18 , LOW ( 1 )
007983 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
007984 c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
007985 3dea      	CPI  R30,LOW(0xDA)
007986 e0a0      	LDI  R26,HIGH(0xDA)
007987 07fa      	CPC  R31,R26
007988 f439      	BRNE _0x220055
                +
007989 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00798b 71e1      	ANDI R30,LOW(0x11)
00798c f011      	BREQ _0x220056
                +
00798d e021     +LDI R18 , LOW ( 1 )
00798e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
00798f c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
007990 3deb      	CPI  R30,LOW(0xDB)
007991 e0a0      	LDI  R26,HIGH(0xDB)
007992 07fa      	CPC  R31,R26
007993 f439      	BRNE _0x220057
                +
007994 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007996 70e2      	ANDI R30,LOW(0x2)
007997 f011      	BREQ _0x220058
                +
007998 e021     +LDI R18 , LOW ( 1 )
007999 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
00799a c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
00799b 3dec      	CPI  R30,LOW(0xDC)
00799c e0a0      	LDI  R26,HIGH(0xDC)
00799d 07fa      	CPC  R31,R26
00799e f439      	BRNE _0x220059
                +
00799f 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0079a1 70e4      	ANDI R30,LOW(0x4)
0079a2 f011      	BREQ _0x22005A
                +
0079a3 e021     +LDI R18 , LOW ( 1 )
0079a4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
0079a5 c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
0079a6 3ded      	CPI  R30,LOW(0xDD)
0079a7 e0a0      	LDI  R26,HIGH(0xDD)
0079a8 07fa      	CPC  R31,R26
0079a9 f439      	BRNE _0x22005B
                +
0079aa 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0079ac 71e4      	ANDI R30,LOW(0x14)
0079ad f011      	BREQ _0x22005C
                +
0079ae e021     +LDI R18 , LOW ( 1 )
0079af e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
0079b0 c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
0079b1 3dee      	CPI  R30,LOW(0xDE)
0079b2 e0a0      	LDI  R26,HIGH(0xDE)
0079b3 07fa      	CPC  R31,R26
0079b4 f439      	BRNE _0x22005D
                +
0079b5 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0079b7 70e8      	ANDI R30,LOW(0x8)
0079b8 f011      	BREQ _0x22005E
                +
0079b9 e021     +LDI R18 , LOW ( 1 )
0079ba e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
0079bb c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
0079bc 3def      	CPI  R30,LOW(0xDF)
0079bd e0a0      	LDI  R26,HIGH(0xDF)
0079be 07fa      	CPC  R31,R26
0079bf f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0079c0 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
0079c2 30a0      	CPI  R26,LOW(0x0)
0079c3 f021      	BREQ _0x220061
                +
0079c4 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
0079c6 3faf      	CPI  R26,LOW(0xFF)
0079c7 f409      	BRNE _0x220062
                 _0x220061:
0079c8 c002      	RJMP _0x220060
                 _0x220062:
                +
0079c9 e021     +LDI R18 , LOW ( 1 )
0079ca e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
0079cb c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
0079cc 3ee0      	CPI  R30,LOW(0xE0)
0079cd e0a0      	LDI  R26,HIGH(0xE0)
0079ce 07fa      	CPC  R31,R26
0079cf f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
0079d0 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0079d2 30a0      	CPI  R26,LOW(0x0)
0079d3 f021      	BREQ _0x220065
                +
0079d4 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0079d6 3faf      	CPI  R26,LOW(0xFF)
0079d7 f421      	BRNE _0x220067
                 _0x220065:
                +
0079d8 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
0079da 30a0      	CPI  R26,LOW(0x0)
0079db f011      	BREQ _0x220064
                 _0x220067:
                +
0079dc e021     +LDI R18 , LOW ( 1 )
0079dd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
0079de c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
0079df 3ee1      	CPI  R30,LOW(0xE1)
0079e0 e0a0      	LDI  R26,HIGH(0xE1)
0079e1 07fa      	CPC  R31,R26
0079e2 f439      	BRNE _0x220069
                +
0079e3 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079e5 70e1      	ANDI R30,LOW(0x1)
0079e6 f011      	BREQ _0x22006A
                +
0079e7 e021     +LDI R18 , LOW ( 1 )
0079e8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
0079e9 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
0079ea 3ee2      	CPI  R30,LOW(0xE2)
0079eb e0a0      	LDI  R26,HIGH(0xE2)
0079ec 07fa      	CPC  R31,R26
0079ed f439      	BRNE _0x22006B
                +
0079ee 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079f0 71e1      	ANDI R30,LOW(0x11)
0079f1 f011      	BREQ _0x22006C
                +
0079f2 e021     +LDI R18 , LOW ( 1 )
0079f3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
0079f4 c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
0079f5 3ee3      	CPI  R30,LOW(0xE3)
0079f6 e0a0      	LDI  R26,HIGH(0xE3)
0079f7 07fa      	CPC  R31,R26
0079f8 f439      	BRNE _0x22006D
                +
0079f9 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079fb 70e2      	ANDI R30,LOW(0x2)
0079fc f011      	BREQ _0x22006E
                +
0079fd e021     +LDI R18 , LOW ( 1 )
0079fe e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
0079ff c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
007a00 3ee4      	CPI  R30,LOW(0xE4)
007a01 e0a0      	LDI  R26,HIGH(0xE4)
007a02 07fa      	CPC  R31,R26
007a03 f439      	BRNE _0x22006F
                +
007a04 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a06 70e4      	ANDI R30,LOW(0x4)
007a07 f011      	BREQ _0x220070
                +
007a08 e021     +LDI R18 , LOW ( 1 )
007a09 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
007a0a c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
007a0b 3ee5      	CPI  R30,LOW(0xE5)
007a0c e0a0      	LDI  R26,HIGH(0xE5)
007a0d 07fa      	CPC  R31,R26
007a0e f439      	BRNE _0x220071
                +
007a0f 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a11 71e4      	ANDI R30,LOW(0x14)
007a12 f011      	BREQ _0x220072
                +
007a13 e021     +LDI R18 , LOW ( 1 )
007a14 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
007a15 c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
007a16 3ee6      	CPI  R30,LOW(0xE6)
007a17 e0a0      	LDI  R26,HIGH(0xE6)
007a18 07fa      	CPC  R31,R26
007a19 f439      	BRNE _0x220073
                +
007a1a 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a1c 70e8      	ANDI R30,LOW(0x8)
007a1d f011      	BREQ _0x220074
                +
007a1e e021     +LDI R18 , LOW ( 1 )
007a1f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
007a20 c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
007a21 3ee7      	CPI  R30,LOW(0xE7)
007a22 e0a0      	LDI  R26,HIGH(0xE7)
007a23 07fa      	CPC  R31,R26
007a24 f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007a25 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007a27 30a0      	CPI  R26,LOW(0x0)
007a28 f021      	BREQ _0x220077
                +
007a29 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007a2b 3faf      	CPI  R26,LOW(0xFF)
007a2c f409      	BRNE _0x220078
                 _0x220077:
007a2d c002      	RJMP _0x220076
                 _0x220078:
                +
007a2e e021     +LDI R18 , LOW ( 1 )
007a2f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
007a30 c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
007a31 37e1      	CPI  R30,LOW(0x71)
007a32 e0a0      	LDI  R26,HIGH(0x71)
007a33 07fa      	CPC  R31,R26
007a34 f409      	BRNE _0x220079
007a35 c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
007a36 37e2      	CPI  R30,LOW(0x72)
007a37 e0a0      	LDI  R26,HIGH(0x72)
007a38 07fa      	CPC  R31,R26
007a39 f481      	BRNE _0x22007A
                +
007a3a e000     +LDI R16 , LOW ( 0 )
007a3b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007a3c 3002     +CPI R16 , LOW ( 2 )
007a3d e0e0     +LDI R30 , HIGH ( 2 )
007a3e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007a3f f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
007a40 e7ac      	LDI  R26,LOW(_dinStatus)
007a41 e1b4      	LDI  R27,HIGH(_dinStatus)
007a42 0fa0      	ADD  R26,R16
007a43 1fb1      	ADC  R27,R17
007a44 91ac      	LD   R26,X
007a45 30a1      	CPI  R26,LOW(0x1)
007a46 f411      	BRNE _0x22007E
                +
007a47 e021     +LDI R18 , LOW ( 1 )
007a48 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007a49 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007a4a 37e3      	CPI  R30,LOW(0x73)
007a4b e0a0      	LDI  R26,HIGH(0x73)
007a4c 07fa      	CPC  R31,R26
007a4d f471      	BRNE _0x22007F
                +
007a4e e000     +LDI R16 , LOW ( 0 )
007a4f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007a50 3002     +CPI R16 , LOW ( 2 )
007a51 e0e0     +LDI R30 , HIGH ( 2 )
007a52 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007a53 f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
007a54 e7ac      	LDI  R26,LOW(_dinStatus)
007a55 e1b4      	LDI  R27,HIGH(_dinStatus)
007a56 940e d029 	CALL SUBOPT_0x272
007a58 f411      	BRNE _0x220083
                +
007a59 e021     +LDI R18 , LOW ( 1 )
007a5a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
007a5b c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
007a5c 34e0      	CPI  R30,LOW(0x40)
007a5d e0a0      	LDI  R26,HIGH(0x40)
007a5e 07fa      	CPC  R31,R26
007a5f f409      	BRNE _0x220084
007a60 c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
007a61 35e0      	CPI  R30,LOW(0x50)
007a62 e0a0      	LDI  R26,HIGH(0x50)
007a63 07fa      	CPC  R31,R26
007a64 f439      	BRNE _0x220085
007a65 91a0 147c 	LDS  R26,_dinStatus
007a67 30a1      	CPI  R26,LOW(0x1)
007a68 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007a69 e021     +LDI R18 , LOW ( 1 )
007a6a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
007a6b c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
007a6c 36e0      	CPI  R30,LOW(0x60)
007a6d e0a0      	LDI  R26,HIGH(0x60)
007a6e 07fa      	CPC  R31,R26
007a6f f439      	BRNE _0x220087
007a70 91e0 147c 	LDS  R30,_dinStatus
007a72 30e0      	CPI  R30,0
007a73 f411      	BRNE _0x220088
                +
007a74 e021     +LDI R18 , LOW ( 1 )
007a75 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
007a76 c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007a77 34e1      	CPI  R30,LOW(0x41)
007a78 e0a0      	LDI  R26,HIGH(0x41)
007a79 07fa      	CPC  R31,R26
007a7a f409      	BRNE _0x220089
007a7b c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
007a7c 35e1      	CPI  R30,LOW(0x51)
007a7d e0a0      	LDI  R26,HIGH(0x51)
007a7e 07fa      	CPC  R31,R26
007a7f f439      	BRNE _0x22008A
                +
007a80 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
007a82 30a1      	CPI  R26,LOW(0x1)
007a83 f411      	BRNE _0x22008B
                +
007a84 e021     +LDI R18 , LOW ( 1 )
007a85 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
007a86 c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
007a87 36e1      	CPI  R30,LOW(0x61)
007a88 e0a0      	LDI  R26,HIGH(0x61)
007a89 07fa      	CPC  R31,R26
007a8a f439      	BRNE _0x22008C
                +
007a8b 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
007a8d 30e0      	CPI  R30,0
007a8e f411      	BRNE _0x22008D
                +
007a8f e021     +LDI R18 , LOW ( 1 )
007a90 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
007a91 c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
007a92 38e0      	CPI  R30,LOW(0x80)
007a93 e0a0      	LDI  R26,HIGH(0x80)
007a94 07fa      	CPC  R31,R26
007a95 f409      	BRNE _0x22008E
007a96 c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
007a97 38e1      	CPI  R30,LOW(0x81)
007a98 e0a0      	LDI  R26,HIGH(0x81)
007a99 07fa      	CPC  R31,R26
007a9a f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
007a9b c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
007a9c 38e2      	CPI  R30,LOW(0x82)
007a9d e0a0      	LDI  R26,HIGH(0x82)
007a9e 07fa      	CPC  R31,R26
007a9f f439      	BRNE _0x220090
007aa0 91a0 147a 	LDS  R26,_powerSrcStatus
007aa2 30a1      	CPI  R26,LOW(0x1)
007aa3 f411      	BRNE _0x220091
                +
007aa4 e021     +LDI R18 , LOW ( 1 )
007aa5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
007aa6 c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
007aa7 38e3      	CPI  R30,LOW(0x83)
007aa8 e0a0      	LDI  R26,HIGH(0x83)
007aa9 07fa      	CPC  R31,R26
007aaa f439      	BRNE _0x220092
007aab 91a0 147b 	LDS  R26,_batteryStatus
007aad 30a1      	CPI  R26,LOW(0x1)
007aae f411      	BRNE _0x220093
                +
007aaf e021     +LDI R18 , LOW ( 1 )
007ab0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
007ab1 c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
007ab2 38e4      	CPI  R30,LOW(0x84)
007ab3 e0a0      	LDI  R26,HIGH(0x84)
007ab4 07fa      	CPC  R31,R26
007ab5 f409      	BRNE _0x220094
007ab6 c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
007ab7 38e5      	CPI  R30,LOW(0x85)
007ab8 e0a0      	LDI  R26,HIGH(0x85)
007ab9 07fa      	CPC  R31,R26
007aba f439      	BRNE _0x220095
007abb 91a0 14a7 	LDS  R26,_memoryAlarm
007abd 30a1      	CPI  R26,LOW(0x1)
007abe f411      	BRNE _0x220096
                +
007abf e021     +LDI R18 , LOW ( 1 )
007ac0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
007ac1 c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
007ac2 38e6      	CPI  R30,LOW(0x86)
007ac3 e0a0      	LDI  R26,HIGH(0x86)
007ac4 07fa      	CPC  R31,R26
007ac5 f439      	BRNE _0x220097
007ac6 91a0 14a7 	LDS  R26,_memoryAlarm
007ac8 30a2      	CPI  R26,LOW(0x2)
007ac9 f411      	BRNE _0x220098
                +
007aca e021     +LDI R18 , LOW ( 1 )
007acb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
007acc c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
007acd 38e7      	CPI  R30,LOW(0x87)
007ace e0a0      	LDI  R26,HIGH(0x87)
007acf 07fa      	CPC  R31,R26
007ad0 f439      	BRNE _0x220099
007ad1 91a0 1480 	LDS  R26,_serverCommStatus
007ad3 30a2      	CPI  R26,LOW(0x2)
007ad4 f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
007ad5 e021     +LDI R18 , LOW ( 1 )
007ad6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
007ad7 c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
007ad8 39e0      	CPI  R30,LOW(0x90)
007ad9 e0a0      	LDI  R26,HIGH(0x90)
007ada 07fa      	CPC  R31,R26
007adb f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
007adc 39e1      	CPI  R30,LOW(0x91)
007add e0a0      	LDI  R26,HIGH(0x91)
007ade 07fa      	CPC  R31,R26
007adf f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
007ae0 c004      	RJMP _0x22009E
                 _0x22009D:
007ae1 39e2      	CPI  R30,LOW(0x92)
007ae2 e0a0      	LDI  R26,HIGH(0x92)
007ae3 07fa      	CPC  R31,R26
007ae4 f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
007ae5 c004      	RJMP _0x2200A0
                 _0x22009F:
007ae6 39e3      	CPI  R30,LOW(0x93)
007ae7 e0a0      	LDI  R26,HIGH(0x93)
007ae8 07fa      	CPC  R31,R26
007ae9 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
007aea c004      	RJMP _0x2200A2
                 _0x2200A1:
007aeb 39e4      	CPI  R30,LOW(0x94)
007aec e0a0      	LDI  R26,HIGH(0x94)
007aed 07fa      	CPC  R31,R26
007aee f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
007aef c004      	RJMP _0x2200A4
                 _0x2200A3:
007af0 39ef      	CPI  R30,LOW(0x9F)
007af1 e0a0      	LDI  R26,HIGH(0x9F)
007af2 07fa      	CPC  R31,R26
007af3 f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
007af4 e0e2     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
007af5 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
007af6 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
007af7 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
007af8 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
007af9 e3e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
007afa e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
007afb e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
007afc e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
007afd 940e e05b 	CALL __PUTPARD1
007aff 85e8      	LDD  R30,Y+8
007b00 940e c156 	CALL SUBOPT_0x29
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
007b02 01f9      	MOVW R30,R18
007b03 940e e0d9 	CALL __LOADLOCR4
007b05 940c 7e8d 	JMP  _0x20E0054
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
007b07 93ba      	ST   -Y,R27
007b08 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b09 91e0 1692 	LDS  R30,_mtncAlarm
007b0b 91a0 1479 	LDS  R26,_mtncStatus
007b0d 17ea      	CP   R30,R26
007b0e f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
007b0f 91e0 1479 	LDS  R30,_mtncStatus
007b11 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
007b13 91e0 1479 	LDS  R30,_mtncStatus
007b15 81a8      	LD   R26,Y
007b16 81b9      	LDD  R27,Y+1
007b17 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
007b18 e0e1      	LDI  R30,LOW(1)
007b19 e0f0      	LDI  R31,HIGH(1)
007b1a c0ee      	RJMP _0x20E0059
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
007b1b c0eb      	RJMP _0x20E005A
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
007b1c 93ba      	ST   -Y,R27
007b1d 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b1e 91e0 1693 	LDS  R30,_powerSrcAlarm
007b20 91a0 147a 	LDS  R26,_powerSrcStatus
007b22 17ea      	CP   R30,R26
007b23 f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
007b24 91e0 169c 	LDS  R30,_lastCheck_S0110003000
007b26 17ea      	CP   R30,R26
007b27 f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
007b28 e0e0      	LDI  R30,LOW(0)
007b29 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
007b2b 91e0 147a 	LDS  R30,_powerSrcStatus
007b2d 93e0 169c 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
007b2f 91e0 169b 	LDS  R30,_t_flag_S0110003000
007b31 30e0      	CPI  R30,0
007b32 f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
007b33 91a0 147a 	LDS  R26,_powerSrcStatus
007b35 30a1      	CPI  R26,LOW(0x1)
007b36 f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007b37 e9e7      	LDI  R30,LOW(_t_S0110003000)
007b38 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007b39 940e c967 	CALL SUBOPT_0x170
007b3b c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
007b3c e9e7      	LDI  R30,LOW(_t_S0110003000)
007b3d e1f6      	LDI  R31,HIGH(_t_S0110003000)
007b3e 940e d02e 	CALL SUBOPT_0x273
                 _0x2200F2:
007b40 940e 41b7 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
007b42 e0e1      	LDI  R30,LOW(1)
007b43 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
007b45 c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
007b46 91a0 1697 	LDS  R26,_t_S0110003000
007b48 91b0 1698 	LDS  R27,_t_S0110003000+1
007b4a 9180 1699 	LDS  R24,_t_S0110003000+2
007b4c 9190 169a 	LDS  R25,_t_S0110003000+3
007b4e 940e 41a1 	CALL _TIMER_checkTimerExceed
007b50 9730      	SBIW R30,0
007b51 f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
007b52 91e0 147a 	LDS  R30,_powerSrcStatus
007b54 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
007b56 91e0 147a 	LDS  R30,_powerSrcStatus
007b58 940e d035 	CALL SUBOPT_0x274
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007b5a 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
007b5c e0e1      	LDI  R30,LOW(1)
007b5d e0f0      	LDI  R31,HIGH(1)
007b5e c0aa      	RJMP _0x20E0059
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
007b5f c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
007b60 e0e0      	LDI  R30,LOW(0)
007b61 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
007b63 c0a3      	RJMP _0x20E005A
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
007b64 93ba      	ST   -Y,R27
007b65 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b66 940e d03a 	CALL SUBOPT_0x275
007b68 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007b69 91e0 14a6 	LDS  R30,_batteryAlarm
007b6b 91a0 147b 	LDS  R26,_batteryStatus
007b6d 17ea      	CP   R30,R26
007b6e f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
007b6f 91e0 16a2 	LDS  R30,_lastCheck_S0110004000
007b71 17ea      	CP   R30,R26
007b72 f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
007b73 e0e0      	LDI  R30,LOW(0)
007b74 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
007b76 91e0 147b 	LDS  R30,_batteryStatus
007b78 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007b7a 91e0 16a1 	LDS  R30,_t_flag_S0110004000
007b7c 30e0      	CPI  R30,0
007b7d f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
007b7e e9ed      	LDI  R30,LOW(_t_S0110004000)
007b7f e1f6      	LDI  R31,HIGH(_t_S0110004000)
007b80 940e c145 	CALL SUBOPT_0x27
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
007b82 e0e1      	LDI  R30,LOW(1)
007b83 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
007b85 c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
007b86 91a0 169d 	LDS  R26,_t_S0110004000
007b88 91b0 169e 	LDS  R27,_t_S0110004000+1
007b8a 9180 169f 	LDS  R24,_t_S0110004000+2
007b8c 9190 16a0 	LDS  R25,_t_S0110004000+3
007b8e 940e 41a1 	CALL _TIMER_checkTimerExceed
007b90 9730      	SBIW R30,0
007b91 f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
007b92 91e0 147b 	LDS  R30,_batteryStatus
007b94 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
007b96 91e0 147b 	LDS  R30,_batteryStatus
007b98 940e d035 	CALL SUBOPT_0x274
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
007b9a 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
007b9c e0e1      	LDI  R30,LOW(1)
007b9d e0f0      	LDI  R31,HIGH(1)
007b9e c06a      	RJMP _0x20E0059
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
007b9f c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
007ba0 e0e0      	LDI  R30,LOW(0)
007ba1 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
007ba3 c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
007ba4 e0e0      	LDI  R30,LOW(0)
007ba5 93e0 169d 	STS  _t_S0110004000,R30
007ba7 93e0 169e 	STS  _t_S0110004000+1,R30
007ba9 93e0 169f 	STS  _t_S0110004000+2,R30
007bab 93e0 16a0 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
007bad 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
007baf e6e9      	LDI  R30,LOW(105)
007bb0 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
007bb2 91e0 14a6 	LDS  R30,_batteryAlarm
007bb4 30e0      	CPI  R30,0
007bb5 f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
007bb6 e0e0      	LDI  R30,LOW(0)
007bb7 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
007bb9 940e d045 	CALL SUBOPT_0x276
                 ; 0011 0109             return 1;
007bbb c04d      	RJMP _0x20E0059
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
007bbc c04a      	RJMP _0x20E005A
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
007bbd 93ba      	ST   -Y,R27
007bbe 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007bbf 940e d04c 	CALL SUBOPT_0x277
007bc1 f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
007bc2 91e0 14a7 	LDS  R30,_memoryAlarm
007bc4 91a0 1482 	LDS  R26,_memoryStatus
007bc6 17ea      	CP   R30,R26
007bc7 f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
007bc8 91e0 16a7 	LDS  R30,_t_flag_S0110005000
007bca 30e0      	CPI  R30,0
007bcb f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
007bcc eae3      	LDI  R30,LOW(_t_S0110005000)
007bcd e1f6      	LDI  R31,HIGH(_t_S0110005000)
007bce 940e c1d2 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
007bd0 e0e1      	LDI  R30,LOW(1)
007bd1 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
007bd3 c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
007bd4 91a0 16a3 	LDS  R26,_t_S0110005000
007bd6 91b0 16a4 	LDS  R27,_t_S0110005000+1
007bd8 9180 16a5 	LDS  R24,_t_S0110005000+2
007bda 9190 16a6 	LDS  R25,_t_S0110005000+3
007bdc 940e 41a1 	CALL _TIMER_checkTimerExceed
007bde 9730      	SBIW R30,0
007bdf f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
007be0 91e0 1482 	LDS  R30,_memoryStatus
007be2 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
007be4 91e0 1482 	LDS  R30,_memoryStatus
007be6 940e d035 	CALL SUBOPT_0x274
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
007be8 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
007bea e0e1      	LDI  R30,LOW(1)
007beb e0f0      	LDI  R31,HIGH(1)
007bec c01c      	RJMP _0x20E0059
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
007bed c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
007bee e0e0      	LDI  R30,LOW(0)
007bef 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
007bf1 c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
007bf2 e0e0      	LDI  R30,LOW(0)
007bf3 93e0 16a3 	STS  _t_S0110005000,R30
007bf5 93e0 16a4 	STS  _t_S0110005000+1,R30
007bf7 93e0 16a5 	STS  _t_S0110005000+2,R30
007bf9 93e0 16a6 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
007bfb 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
007bfd 91e0 14a6 	LDS  R30,_batteryAlarm
007bff 30e0      	CPI  R30,0
007c00 f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
007c01 e0e0      	LDI  R30,LOW(0)
007c02 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
007c04 940e d045 	CALL SUBOPT_0x276
                 ; 0011 0136             return 1;
007c06 c002      	RJMP _0x20E0059
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005A:
007c07 e0e0      	LDI  R30,LOW(0)
007c08 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0059:
007c09 9622      	ADIW R28,2
007c0a 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
007c0b 940e c6f9 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007c0d f022      	BRMI _0x2200C7
007c0e 81aa      	LDD  R26,Y+2
007c0f 81bb      	LDD  R27,Y+2+1
007c10 9712      	SBIW R26,2
007c11 f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
007c12 e6e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
007c13 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
007c14 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
007c15 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
007c16 940e c6e5 	CALL SUBOPT_0x104
007c18 940e c64a 	CALL SUBOPT_0xE9
                 ; 0011 0145         return 0;
007c1a c10b      	RJMP _0x20E0058
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
007c1b 940e d053 	CALL SUBOPT_0x278
007c1d 56ea      	SUBI R30,LOW(-_dinAlarm)
007c1e 4efb      	SBCI R31,HIGH(-_dinAlarm)
007c1f 81e0      	LD   R30,Z
007c20 17ea      	CP   R30,R26
007c21 f411      	BRNE PC+3
007c22 940c 7c64 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
007c24 940e d053 	CALL SUBOPT_0x278
007c26 54ee      	SUBI R30,LOW(-_lastCheck_S0110006000)
007c27 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
007c28 81e0      	LD   R30,Z
007c29 17ea      	CP   R30,R26
007c2a f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
007c2b 940e d05b 	CALL SUBOPT_0x279
007c2d e0a0      	LDI  R26,LOW(0)
007c2e 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
007c2f 81aa      	LDD  R26,Y+2
007c30 81bb      	LDD  R27,Y+2+1
007c31 54ae      	SUBI R26,LOW(-_lastCheck_S0110006000)
007c32 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
007c33 940e d060 	CALL SUBOPT_0x27A
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
007c35 940e d05b 	CALL SUBOPT_0x279
007c37 81e0      	LD   R30,Z
007c38 30e0      	CPI  R30,0
007c39 f469      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007c3a 81ea      	LDD  R30,Y+2
007c3b 81fb      	LDD  R31,Y+2+1
007c3c eaa8      	LDI  R26,LOW(_t_S0110006000)
007c3d e1b6      	LDI  R27,HIGH(_t_S0110006000)
007c3e 940e cff2 	CALL SUBOPT_0x26A
007c40 940e cd59 	CALL SUBOPT_0x20F
                 ; 0011 0151             t_flag[ch]          = 1;
007c42 940e d05b 	CALL SUBOPT_0x279
007c44 e0a1      	LDI  R26,LOW(1)
007c45 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007c46 c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007c47 81ea      	LDD  R30,Y+2
007c48 81fb      	LDD  R31,Y+2+1
007c49 eaa8      	LDI  R26,LOW(_t_S0110006000)
007c4a e1b6      	LDI  R27,HIGH(_t_S0110006000)
007c4b 940e cff6 	CALL SUBOPT_0x26B
007c4d 940e c101 	CALL SUBOPT_0x1C
007c4f f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
007c50 81aa      	LDD  R26,Y+2
007c51 81bb      	LDD  R27,Y+2+1
007c52 56aa      	SUBI R26,LOW(-_dinAlarm)
007c53 4ebb      	SBCI R27,HIGH(-_dinAlarm)
007c54 940e d060 	CALL SUBOPT_0x27A
                 ; 0011 0157                 *code           = dinStatus[ch];
007c56 81ea      	LDD  R30,Y+2
007c57 81fb      	LDD  R31,Y+2+1
007c58 58e4      	SUBI R30,LOW(-_dinStatus)
007c59 4efb      	SBCI R31,HIGH(-_dinStatus)
007c5a 940e d01f 	CALL SUBOPT_0x270
                 ; 0011 0158                 t_flag[ch]      = 0;
007c5c 940e d05b 	CALL SUBOPT_0x279
007c5e e0a0      	LDI  R26,LOW(0)
007c5f 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
007c60 e0e1      	LDI  R30,LOW(1)
007c61 e0f0      	LDI  R31,HIGH(1)
007c62 c0c5      	RJMP _0x20E0057
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
007c63 c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
007c64 940e d05b 	CALL SUBOPT_0x279
007c66 e0a0      	LDI  R26,LOW(0)
007c67 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007c68 c0bd      	RJMP _0x20E0058
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007c69 940e d067 	CALL SUBOPT_0x27B
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007c6b 59e1      	SUBI R30,LOW(-_sensorStatus)
007c6c 4efb      	SBCI R31,HIGH(-_sensorStatus)
007c6d 81a0      	LD   R26,Z
007c6e 81ea      	LDD  R30,Y+2
007c6f 81fb      	LDD  R31,Y+2+1
007c70 57e4      	SUBI R30,LOW(-_sensorAlarm)
007c71 4efb      	SBCI R31,HIGH(-_sensorAlarm)
007c72 81e0      	LD   R30,Z
007c73 17ea      	CP   R30,R26
007c74 f411      	BRNE PC+3
007c75 940c 7cc8 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007c77 940e d06c 	CALL SUBOPT_0x27C
007c79 81a0      	LD   R26,Z
007c7a 81ea      	LDD  R30,Y+2
007c7b 81fb      	LDD  R31,Y+2+1
007c7c 53e3      	SUBI R30,LOW(-_lastCheck_S0110007000)
007c7d 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
007c7e 81e0      	LD   R30,Z
007c7f 17ea      	CP   R30,R26
007c80 f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
007c81 940e d071 	CALL SUBOPT_0x27D
007c83 e0a0      	LDI  R26,LOW(0)
007c84 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
007c85 81aa      	LDD  R26,Y+2
007c86 81bb      	LDD  R27,Y+2+1
007c87 53a3      	SUBI R26,LOW(-_lastCheck_S0110007000)
007c88 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
007c89 940e d06c 	CALL SUBOPT_0x27C
007c8b 81e0      	LD   R30,Z
007c8c 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
007c8d 940e d071 	CALL SUBOPT_0x27D
007c8f 81e0      	LD   R30,Z
007c90 30e0      	CPI  R30,0
007c91 f4c9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007c92 940e d06c 	CALL SUBOPT_0x27C
007c94 81a0      	LD   R26,Z
007c95 3faf      	CPI  R26,LOW(0xFF)
007c96 f439      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
007c97 940e d076 	CALL SUBOPT_0x27E
                +
007c99 e1ae     +LDI R26 , LOW ( 0x1E )
007c9a e0b0     +LDI R27 , HIGH ( 0x1E )
007c9b e080     +LDI R24 , BYTE3 ( 0x1E )
007c9c e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
007c9d c006      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
007c9e 940e d076 	CALL SUBOPT_0x27E
                +
007ca0 e0a3     +LDI R26 , LOW ( 0x3 )
007ca1 e0b0     +LDI R27 , HIGH ( 0x3 )
007ca2 e080     +LDI R24 , BYTE3 ( 0x3 )
007ca3 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
                 _0x2200F4:
007ca4 940e 41b7 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
007ca6 940e d071 	CALL SUBOPT_0x27D
007ca8 e0a1      	LDI  R26,LOW(1)
007ca9 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
007caa c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
007cab 81ea      	LDD  R30,Y+2
007cac 81fb      	LDD  R31,Y+2+1
007cad eba4      	LDI  R26,LOW(_t_S0110007000)
007cae e1b6      	LDI  R27,HIGH(_t_S0110007000)
007caf 940e cff6 	CALL SUBOPT_0x26B
007cb1 940e c101 	CALL SUBOPT_0x1C
007cb3 f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
007cb4 81aa      	LDD  R26,Y+2
007cb5 81bb      	LDD  R27,Y+2+1
007cb6 57a4      	SUBI R26,LOW(-_sensorAlarm)
007cb7 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
007cb8 940e d06c 	CALL SUBOPT_0x27C
007cba 81e0      	LD   R30,Z
007cbb 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
007cbc 940e d06c 	CALL SUBOPT_0x27C
007cbe 940e d01f 	CALL SUBOPT_0x270
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
007cc0 940e d071 	CALL SUBOPT_0x27D
007cc2 e0a0      	LDI  R26,LOW(0)
007cc3 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
007cc4 e0e1      	LDI  R30,LOW(1)
007cc5 e0f0      	LDI  R31,HIGH(1)
007cc6 c061      	RJMP _0x20E0057
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
007cc7 c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
007cc8 940e d071 	CALL SUBOPT_0x27D
007cca e0a0      	LDI  R26,LOW(0)
007ccb 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
007ccc c059      	RJMP _0x20E0058
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
007ccd 940e d067 	CALL SUBOPT_0x27B
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007ccf 58ec      	SUBI R30,LOW(-_dataStatus)
007cd0 4efb      	SBCI R31,HIGH(-_dataStatus)
007cd1 81a0      	LD   R26,Z
007cd2 81ea      	LDD  R30,Y+2
007cd3 81fb      	LDD  R31,Y+2+1
007cd4 56ef      	SUBI R30,LOW(-_dataAlarm)
007cd5 4efb      	SBCI R31,HIGH(-_dataAlarm)
007cd6 81e0      	LD   R30,Z
007cd7 17ea      	CP   R30,R26
007cd8 f411      	BRNE PC+3
007cd9 940c 7d22 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
007cdb 940e d07b 	CALL SUBOPT_0x27F
007cdd 81e0      	LD   R30,Z
007cde 30e0      	CPI  R30,0
007cdf f489      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
007ce0 81ea      	LDD  R30,Y+2
007ce1 81fb      	LDD  R31,Y+2+1
007ce2 eda2      	LDI  R26,LOW(_t_S0110008000)
007ce3 e1b6      	LDI  R27,HIGH(_t_S0110008000)
007ce4 940e cff2 	CALL SUBOPT_0x26A
                +
007ce6 e0a3     +LDI R26 , LOW ( 0x3 )
007ce7 e0b0     +LDI R27 , HIGH ( 0x3 )
007ce8 e080     +LDI R24 , BYTE3 ( 0x3 )
007ce9 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
007cea 940e 41b7 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
007cec 940e d07b 	CALL SUBOPT_0x27F
007cee e0a1      	LDI  R26,LOW(1)
007cef 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
007cf0 c030      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
007cf1 81ea      	LDD  R30,Y+2
007cf2 81fb      	LDD  R31,Y+2+1
007cf3 eda2      	LDI  R26,LOW(_t_S0110008000)
007cf4 e1b6      	LDI  R27,HIGH(_t_S0110008000)
007cf5 940e cff6 	CALL SUBOPT_0x26B
007cf7 940e c101 	CALL SUBOPT_0x1C
007cf9 f139      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
007cfa 81aa      	LDD  R26,Y+2
007cfb 81bb      	LDD  R27,Y+2+1
007cfc 56af      	SUBI R26,LOW(-_dataAlarm)
007cfd 4ebb      	SBCI R27,HIGH(-_dataAlarm)
007cfe 81ea      	LDD  R30,Y+2
007cff 81fb      	LDD  R31,Y+2+1
007d00 58ec      	SUBI R30,LOW(-_dataStatus)
007d01 4efb      	SBCI R31,HIGH(-_dataStatus)
007d02 81e0      	LD   R30,Z
007d03 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
007d04 81ea      	LDD  R30,Y+2
007d05 81fb      	LDD  R31,Y+2+1
007d06 58ec      	SUBI R30,LOW(-_dataStatus)
007d07 4efb      	SBCI R31,HIGH(-_dataStatus)
007d08 940e d01f 	CALL SUBOPT_0x270
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
007d0a 940e d07b 	CALL SUBOPT_0x27F
007d0c e0a0      	LDI  R26,LOW(0)
007d0d 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
007d0e e9e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
007d0f e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
007d10 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
007d11 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
007d12 940e c6e5 	CALL SUBOPT_0x104
007d14 9631      	ADIW R30,1
007d15 940e df38 	CALL __CWD1
007d17 940e c7b4 	CALL SUBOPT_0x128
007d19 56ef      	SUBI R30,LOW(-_dataAlarm)
007d1a 4efb      	SBCI R31,HIGH(-_dataAlarm)
007d1b 81e0      	LD   R30,Z
007d1c 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
007d1e e0e1      	LDI  R30,LOW(1)
007d1f e0f0      	LDI  R31,HIGH(1)
007d20 c007      	RJMP _0x20E0057
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
007d21 c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
007d22 940e d07b 	CALL SUBOPT_0x27F
007d24 e0a0      	LDI  R26,LOW(0)
007d25 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0058:
007d26 e0e0      	LDI  R30,LOW(0)
007d27 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0057:
007d28 9624      	ADIW R28,4
007d29 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
007d2a 940e c3d2 	CALL SUBOPT_0x86
                 ;	period -> Y+0
007d2c f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
007d2d 940e c137 	CALL SUBOPT_0x25
007d2f 940e c13c 	CALL SUBOPT_0x26
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
007d31 e0e1      	LDI  R30,LOW(1)
007d32 c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
007d33 e8e7      	LDI  R30,LOW(_muteAlarmExpired)
007d34 e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
007d35 93fa      	ST   -Y,R31
007d36 93ea      	ST   -Y,R30
007d37 940e c4fb 	CALL SUBOPT_0xB4
007d39 940e 41b7 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
007d3b e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007d3c 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
007d3e e0e0      	LDI  R30,LOW(0)
007d3f e0f0      	LDI  R31,HIGH(0)
007d40 940c 81da 	JMP  _0x20E004A
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
007d42 91e0 148b 	LDS  R30,_muteMode
007d44 940e cd74 	CALL SUBOPT_0x213
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007d46 f0f1      	BREQ _0x20E0055
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007d47 30e2      	CPI  R30,LOW(0x2)
007d48 e0a0      	LDI  R26,HIGH(0x2)
007d49 07fa      	CPC  R31,R26
007d4a f469      	BRNE _0x2200E7
007d4b 91a0 1487 	LDS  R26,_muteAlarmExpired
007d4d 91b0 1488 	LDS  R27,_muteAlarmExpired+1
007d4f 9180 1489 	LDS  R24,_muteAlarmExpired+2
007d51 9190 148a 	LDS  R25,_muteAlarmExpired+3
007d53 940e 41a1 	CALL _TIMER_checkTimerExceed
007d55 9730      	SBIW R30,0
007d56 f459      	BRNE _0x20E0056
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007d57 c00d      	RJMP _0x20E0055
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007d58 ece7     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007d59 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007d5a e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007d5b e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007d5c 940e e05b 	CALL __PUTPARD1
007d5e 91e0 148b 	LDS  R30,_muteMode
007d60 940e c156 	CALL SUBOPT_0x29
                 ; 0011 01FF                                 return 1;
                 _0x20E0056:
007d62 e0e1      	LDI  R30,LOW(1)
007d63 e0f0      	LDI  R31,HIGH(1)
007d64 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0055:
007d65 e0e0      	LDI  R30,LOW(0)
007d66 e0f0      	LDI  R31,HIGH(0)
007d67 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007d68 940e c873 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007d6a 3005     +CPI R16 , LOW ( 5 )
007d6b e0e0     +LDI R30 , HIGH ( 5 )
007d6c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007d6d f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
007d6e e8ac      	LDI  R26,LOW(_sensorAlarm)
007d6f e1b4      	LDI  R27,HIGH(_sensorAlarm)
007d70 940e c878 	CALL SUBOPT_0x14D
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
007d72 e9a1      	LDI  R26,LOW(_dataAlarm)
007d73 e1b4      	LDI  R27,HIGH(_dataAlarm)
007d74 940e c878 	CALL SUBOPT_0x14D
                 ; 0011 0210     }
                +
007d76 5f0f     +SUBI R16 , LOW ( - 1 )
007d77 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d78 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007d79 e000     +LDI R16 , LOW ( 0 )
007d7a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007d7b 3100     +CPI R16 , LOW ( 16 )
007d7c e0e0     +LDI R30 , HIGH ( 16 )
007d7d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007d7e f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
007d7f e9a6      	LDI  R26,LOW(_dinAlarm)
007d80 e1b4      	LDI  R27,HIGH(_dinAlarm)
007d81 0fa0      	ADD  R26,R16
007d82 1fb1      	ADC  R27,R17
007d83 efef      	LDI  R30,LOW(255)
007d84 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
007d85 5f0f     +SUBI R16 , LOW ( - 1 )
007d86 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d87 cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
007d88 e000     +LDI R16 , LOW ( 0 )
007d89 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
007d8a 3100     +CPI R16 , LOW ( 16 )
007d8b e0e0     +LDI R30 , HIGH ( 16 )
007d8c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007d8d f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
007d8e e8a2      	LDI  R26,LOW(_ainAlarm)
007d8f e1b6      	LDI  R27,HIGH(_ainAlarm)
007d90 0fa0      	ADD  R26,R16
007d91 1fb1      	ADC  R27,R17
007d92 efef      	LDI  R30,LOW(255)
007d93 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
007d94 5f0f     +SUBI R16 , LOW ( - 1 )
007d95 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d96 cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
007d97 efef      	LDI  R30,LOW(255)
007d98 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
007d99 e0e0      	LDI  R30,LOW(0)
007d9a 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
007d9c 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
007d9e 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
007da0 93e0 1694 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
007da2 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
007da4 93e0 1695 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007da6 93e0 1696 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007da8 940c 822c 	JMP  _0x20E0048
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
007daa 93ba      	ST   -Y,R27
007dab 93aa      	ST   -Y,R26
007dac 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
007dad 940e c081 	CALL SUBOPT_0x9
007daf 8dac      	LDD  R26,Y+28
007db0 8dbd      	LDD  R27,Y+28+1
007db1 940e 485c 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
007db3 efe8     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
007db4 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
007db5 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
007db6 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
007db7 940e c3fb 	CALL SUBOPT_0x8D
007db9 940e c3fb 	CALL SUBOPT_0x8D
007dbb 940e c3fb 	CALL SUBOPT_0x8D
007dbd 940e e05b 	CALL __PUTPARD1
007dbf e08c      	LDI  R24,12
007dc0 d1de      	RCALL _printOLED
007dc1 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
007dc2 e0e9     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
007dc3 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
007dc4 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
007dc5 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
007dc6 940e c2b4 	CALL SUBOPT_0x5B
007dc8 940e c672 	CALL SUBOPT_0xF2
007dca 940e d080 	CALL SUBOPT_0x280
                 ; 0012 0019 
                 ; 0012 001A }
007dcc 966c      	ADIW R28,28
007dcd 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
007dce 940e c873 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
                 _0x240004:
                +
007dd0 3005     +CPI R16 , LOW ( 5 )
007dd1 e0e0     +LDI R30 , HIGH ( 5 )
007dd2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007dd3 f014      	BRLT PC+3
007dd4 940c 7e4b 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
007dd6 940e cffa 	CALL SUBOPT_0x26C
007dd8 f411      	BRNE PC+3
007dd9 940c 7e40 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
007ddb 940e d085 	CALL SUBOPT_0x281
                +
007ddd 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007dde 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007ddf 81e0      	LD   R30,Z
007de0 940e c161 	CALL SUBOPT_0x2B
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
007de2 f469      	BRNE _0x24000A
                +
007de3 e1e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007de4 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007de5 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007de6 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007de7 940e d08b 	CALL SUBOPT_0x282
007de9 940e d085 	CALL SUBOPT_0x281
007deb 940e c115 	CALL SUBOPT_0x20
007ded 940e d08f 	CALL SUBOPT_0x283
                 ; 0012 0028                                                 break;
007def c04f      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
007df0 38e1      	CPI  R30,LOW(0x81)
007df1 e0a0      	LDI  R26,HIGH(0x81)
007df2 07fa      	CPC  R31,R26
007df3 f449      	BRNE _0x24000B
                +
007df4 e1ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007df5 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007df6 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007df7 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007df8 940e d08b 	CALL SUBOPT_0x282
007dfa 940e d092 	CALL SUBOPT_0x284
                 ; 0012 002A                                                 break;
007dfc c042      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007dfd 38e2      	CPI  R30,LOW(0x82)
007dfe e0a0      	LDI  R26,HIGH(0x82)
007dff 07fa      	CPC  R31,R26
007e00 f449      	BRNE _0x24000C
                +
007e01 e2ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
007e02 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
007e03 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007e04 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007e05 940e d08b 	CALL SUBOPT_0x282
007e07 940e d092 	CALL SUBOPT_0x284
                 ; 0012 002C                                                 break;
007e09 c035      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007e0a 38e4      	CPI  R30,LOW(0x84)
007e0b e0a0      	LDI  R26,HIGH(0x84)
007e0c 07fa      	CPC  R31,R26
007e0d f449      	BRNE _0x24000D
                +
007e0e e3e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
007e0f e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
007e10 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
007e11 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
007e12 940e d08b 	CALL SUBOPT_0x282
007e14 940e d092 	CALL SUBOPT_0x284
                 ; 0012 002E                                                 break;
007e16 c028      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007e17 39e0      	CPI  R30,LOW(0x90)
007e18 e0a0      	LDI  R26,HIGH(0x90)
007e19 07fa      	CPC  R31,R26
007e1a f449      	BRNE _0x24000E
                +
007e1b e4e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007e1c e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007e1d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
007e1e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
007e1f 940e d08b 	CALL SUBOPT_0x282
007e21 940e d092 	CALL SUBOPT_0x284
                 ; 0012 0030                                                 break;
007e23 c01b      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007e24 3fef      	CPI  R30,LOW(0xFF)
007e25 e0a0      	LDI  R26,HIGH(0xFF)
007e26 07fa      	CPC  R31,R26
007e27 f449      	BRNE _0x240010
                +
007e28 e4eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007e29 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007e2a e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007e2b e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007e2c 940e d08b 	CALL SUBOPT_0x282
007e2e 940e d092 	CALL SUBOPT_0x284
                 ; 0012 0032                                                 break;
007e30 c00e      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
007e31 e5ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
007e32 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
007e33 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007e34 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007e35 940e d08b 	CALL SUBOPT_0x282
007e37 940e d085 	CALL SUBOPT_0x281
                +
007e39 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007e3a 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007e3b 81e0      	LD   R30,Z
007e3c 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0012 0034                                                 return;
007e3e c3ed      	RJMP _0x20E0048
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
007e3f c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
007e40 e9e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
007e41 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
007e42 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
007e43 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
007e44 940e d08b 	CALL SUBOPT_0x282
007e46 940e d092 	CALL SUBOPT_0x284
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007e48 5f0f     +SUBI R16 , LOW ( - 1 )
007e49 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007e4a cf85      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007e4b c3e0      	RJMP _0x20E0048
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007e4c 940e e060 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007e4e 81ec      	LDD  R30,Y+4
007e4f 30e0      	CPI  R30,0
007e50 f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
007e51 e9ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
007e52 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
007e53 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
007e54 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007e55 c033      	RJMP _0x240056
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007e56 940e d097 	CALL SUBOPT_0x285
007e58 f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007e59 eae3     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007e5a e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007e5b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007e5c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007e5d c02b      	RJMP _0x240056
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007e5e 940e d097 	CALL SUBOPT_0x285
007e60 f018      	BRLO _0x240017
007e61 940e d0a0 	CALL SUBOPT_0x286
007e63 f008      	BRLO _0x240018
                 _0x240017:
007e64 c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007e65 eae7     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007e66 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007e67 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007e68 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007e69 c01f      	RJMP _0x240056
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007e6a 940e d0a0 	CALL SUBOPT_0x286
007e6c f018      	BRLO _0x24001B
007e6d 940e d0a9 	CALL SUBOPT_0x287
007e6f f008      	BRLO _0x24001C
                 _0x24001B:
007e70 c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
007e71 eaeb     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
007e72 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
007e73 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
007e74 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007e75 c013      	RJMP _0x240056
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007e76 940e d0a9 	CALL SUBOPT_0x287
007e78 f018      	BRLO _0x24001F
007e79 940e d0b2 	CALL SUBOPT_0x288
007e7b f008      	BRLO _0x240020
                 _0x24001F:
007e7c c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007e7d eaef     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007e7e e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
007e7f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
007e80 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
007e81 c007      	RJMP _0x240056
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
007e82 940e d0b2 	CALL SUBOPT_0x288
007e84 f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
007e85 ebe3     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
007e86 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
007e87 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
007e88 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240056:
007e89 940e e05b 	CALL __PUTPARD1
007e8b 940e d0bb 	CALL SUBOPT_0x289
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0054:
007e8d 9625      	ADIW R28,5
007e8e 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
007e8f 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007e90 81aa      	LDD  R26,Y+2
007e91 23aa      	TST  R26
007e92 f022      	BRMI _0x240024
007e93 81a9      	LDD  R26,Y+1
007e94 81ba      	LDD  R27,Y+1+1
007e95 9718      	SBIW R26,8
007e96 f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
007e97 ebe7     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
007e98 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
007e99 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
007e9a e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
007e9b 940e c042 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
007e9d c045      	RJMP _0x20E0052
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
007e9e 81a9      	LDD  R26,Y+1
007e9f 81ba      	LDD  R27,Y+1+1
007ea0 e0e3      	LDI  R30,LOW(3)
007ea1 940e df79 	CALL __MULB1W2U
007ea3 5be1      	SUBI R30,LOW(-_din_config)
007ea4 4efd      	SBCI R31,HIGH(-_din_config)
007ea5 81a0      	LD   R26,Z
007ea6 30a1      	CPI  R26,LOW(0x1)
007ea7 f5d9      	BRNE _0x20E0052
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
007ea8 81a8      	LD   R26,Y
007ea9 30a0      	CPI  R26,LOW(0x0)
007eaa f011      	BREQ _0x240028
007eab 30a1      	CPI  R26,LOW(0x1)
007eac f409      	BRNE _0x240029
                 _0x240028:
007ead c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
007eae c034      	RJMP _0x20E0052
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
007eaf eeee     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
007eb0 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
007eb1 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
007eb2 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
007eb3 c024      	RJMP _0x20E0053
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
007eb4 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007eb5 81aa      	LDD  R26,Y+2
007eb6 23aa      	TST  R26
007eb7 f022      	BRMI _0x24002B
007eb8 81a9      	LDD  R26,Y+1
007eb9 81ba      	LDD  R27,Y+1+1
007eba 9718      	SBIW R26,8
007ebb f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
007ebc efe7     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
007ebd e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
007ebe e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
007ebf e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
007ec0 940e c042 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
007ec2 c020      	RJMP _0x20E0052
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
007ec3 81a9      	LDD  R26,Y+1
007ec4 81ba      	LDD  R27,Y+1+1
007ec5 e2e6      	LDI  R30,LOW(38)
007ec6 940e df79 	CALL __MULB1W2U
007ec8 58e1      	SUBI R30,LOW(-_dout_config)
007ec9 4efd      	SBCI R31,HIGH(-_dout_config)
007eca 81a0      	LD   R26,Z
007ecb 30a1      	CPI  R26,LOW(0x1)
007ecc f4b1      	BRNE _0x20E0052
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
007ecd 81a8      	LD   R26,Y
007ece 30a0      	CPI  R26,LOW(0x0)
007ecf f011      	BREQ _0x24002F
007ed0 30a1      	CPI  R26,LOW(0x1)
007ed1 f409      	BRNE _0x240030
                 _0x24002F:
007ed2 c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
007ed3 c00f      	RJMP _0x20E0052
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
007ed4 e2ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
007ed5 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
007ed6 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
007ed7 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0053:
007ed8 940e e05b 	CALL __PUTPARD1
007eda 81ed      	LDD  R30,Y+5
007edb 81fe      	LDD  R31,Y+5+1
007edc 940e cf40 	CALL SUBOPT_0x250
007ede 85e8      	LDD  R30,Y+8
007edf 940e c2f3 	CALL SUBOPT_0x65
007ee1 940e d080 	CALL SUBOPT_0x280
                 ; 0012 007E }
                 _0x20E0052:
007ee3 9623      	ADIW R28,3
007ee4 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007ee5 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007ee6 e3e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007ee7 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007ee8 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007ee9 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007eea 940e d0c0 	CALL SUBOPT_0x28A
007eec 940e d092 	CALL SUBOPT_0x284
                 ; 0012 0083 }
007eee c12e      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
007eef 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007ef0 e3ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
007ef1 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
007ef2 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
007ef3 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
007ef4 940e d0c0 	CALL SUBOPT_0x28A
007ef6 940e d092 	CALL SUBOPT_0x284
                 ; 0012 0088 }
007ef8 c124      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007ef9 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007efa e4e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007efb e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007efc e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007efd e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007efe 940e d0c0 	CALL SUBOPT_0x28A
007f00 940e d092 	CALL SUBOPT_0x284
                 ; 0012 008D }
007f02 c11a      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
007f03 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007f04 e4ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007f05 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007f06 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007f07 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007f08 940e d0c0 	CALL SUBOPT_0x28A
007f0a 940e d092 	CALL SUBOPT_0x284
                 ; 0012 0092 }
007f0c c110      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007f0d 972a      	SBIW R28,10
007f0e 940e d024 	CALL SUBOPT_0x271
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
007f10 e000     +LDI R16 , LOW ( 0 )
007f11 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
007f12 3005     +CPI R16 , LOW ( 5 )
007f13 e0e0     +LDI R30 , HIGH ( 5 )
007f14 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007f15 f014      	BRLT PC+3
007f16 940c 7f57 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007f18 940e cffa 	CALL SUBOPT_0x26C
007f1a f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007f1b 01f8      	MOVW R30,R16
007f1c 01de      	MOVW R26,R28
007f1d 9619      	ADIW R26,9
007f1e 0fea      	ADD  R30,R26
007f1f 1ffb      	ADC  R31,R27
007f20 010f      	MOVW R0,R30
007f21 e8ac      	LDI  R26,LOW(_sensorAlarm)
007f22 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007f23 940e d029 	CALL SUBOPT_0x272
007f25 f011      	BREQ _0x240035
007f26 e0e1      	LDI  R30,LOW(1)
007f27 c001      	RJMP _0x240036
                 _0x240035:
007f28 e0e0      	LDI  R30,LOW(0)
                 _0x240036:
007f29 01d0      	MOVW R26,R0
007f2a 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
007f2b e1ad     +LDI R26 , 29
007f2c 9fa0     +MUL R26 , R16
007f2d 01f0     +MOVW R30 , R0
007f2e 9fa1     +MUL R26 , R17
007f2f 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
007f30 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
007f31 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
007f32 81e0      	LD   R30,Z
007f33 30e0      	CPI  R30,0
007f34 f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
007f35 01f8      	MOVW R30,R16
007f36 01de      	MOVW R26,R28
007f37 9614      	ADIW R26,4
007f38 0fea      	ADD  R30,R26
007f39 1ffb      	ADC  R31,R27
007f3a 010f      	MOVW R0,R30
007f3b e9a1      	LDI  R26,LOW(_dataAlarm)
007f3c e1b4      	LDI  R27,HIGH(_dataAlarm)
007f3d 940e d029 	CALL SUBOPT_0x272
007f3f f011      	BREQ _0x240039
007f40 e0e1      	LDI  R30,LOW(1)
007f41 c001      	RJMP _0x24003A
                 _0x240039:
007f42 e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
007f43 01d0      	MOVW R26,R0
007f44 c005      	RJMP _0x240057
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
007f45 01de      	MOVW R26,R28
007f46 9614      	ADIW R26,4
007f47 0fa0      	ADD  R26,R16
007f48 1fb1      	ADC  R27,R17
007f49 e0e0      	LDI  R30,LOW(0)
                 _0x240057:
007f4a 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
007f4b c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
007f4c 01de      	MOVW R26,R28
007f4d 9619      	ADIW R26,9
007f4e 940e c878 	CALL SUBOPT_0x14D
                 ; 0012 00A8             flagData[i]         = 0;
007f50 01de      	MOVW R26,R28
007f51 9614      	ADIW R26,4
007f52 940e c878 	CALL SUBOPT_0x14D
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
007f54 5f0f     +SUBI R16 , LOW ( - 1 )
007f55 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007f56 cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
007f57 940e d03a 	CALL SUBOPT_0x275
007f59 f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
007f5a 91e0 14a6 	LDS  R30,_batteryAlarm
007f5c 30e0      	CPI  R30,0
007f5d f011      	BREQ _0x24003F
007f5e e0e1      	LDI  R30,LOW(1)
007f5f c001      	RJMP _0x240040
                 _0x24003F:
007f60 e0e0      	LDI  R30,LOW(0)
                 _0x240040:
007f61 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
007f62 c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
007f63 e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
007f64 940e d04c 	CALL SUBOPT_0x277
007f66 f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
007f67 91e0 14a7 	LDS  R30,_memoryAlarm
007f69 30e0      	CPI  R30,0
007f6a f011      	BREQ _0x240044
007f6b e0e1      	LDI  R30,LOW(1)
007f6c c001      	RJMP _0x240045
                 _0x240044:
007f6d e0e0      	LDI  R30,LOW(0)
                 _0x240045:
007f6e 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
007f6f c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
007f70 e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
007f71 e5e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
007f72 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
007f73 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
007f74 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
007f75 940e e05b 	CALL __PUTPARD1
007f77 85ed      	LDD  R30,Y+13
007f78 940e c2f3 	CALL SUBOPT_0x65
007f7a 89ea      	LDD  R30,Y+18
007f7b 940e c2f3 	CALL SUBOPT_0x65
007f7d 89ef      	LDD  R30,Y+23
007f7e 940e c2f3 	CALL SUBOPT_0x65
007f80 8dec      	LDD  R30,Y+28
007f81 940e c2f3 	CALL SUBOPT_0x65
007f83 a1e9      	LDD  R30,Y+33
007f84 940e c2f3 	CALL SUBOPT_0x65
007f86 8dec      	LDD  R30,Y+28
007f87 940e c2f3 	CALL SUBOPT_0x65
007f89 a1e9      	LDD  R30,Y+33
007f8a 940e c2f3 	CALL SUBOPT_0x65
007f8c a1ee      	LDD  R30,Y+38
007f8d 940e c2f3 	CALL SUBOPT_0x65
007f8f a5eb      	LDD  R30,Y+43
007f90 940e c2f3 	CALL SUBOPT_0x65
007f92 a9e8      	LDD  R30,Y+48
007f93 940e c2f3 	CALL SUBOPT_0x65
007f95 2fe3      	MOV  R30,R19
007f96 940e c2f3 	CALL SUBOPT_0x65
007f98 2fe2      	MOV  R30,R18
007f99 940e c2f3 	CALL SUBOPT_0x65
007f9b e380      	LDI  R24,48
007f9c d002      	RCALL _printOLED
007f9d 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
007f9e c129      	RJMP _0x20E004F
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
007f9f 92ff      	PUSH R15
007fa0 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
007fa1 97ef      	SBIW R28,63
007fa2 9721      	SBIW R28,1
007fa3 931a      	ST   -Y,R17
007fa4 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
007fa5 01de      	MOVW R26,R28
007fa6 96de      	ADIW R26,62
007fa7 940e deaf 	CALL __ADDW2R15
007fa9 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
007faa 940e cc72 	CALL SUBOPT_0x1F1
007fac 01de      	MOVW R26,R28
007fad 5bac      	SUBI R26,LOW(-(68))
007fae 4fbf      	SBCI R27,HIGH(-(68))
007faf 940e d0c5 	CALL SUBOPT_0x28B
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
007fb1 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
007fb2 e0a1      	LDI  R26,LOW(1)
007fb3 940e 40e9 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
007fb5 e0e2      	LDI  R30,LOW(2)
007fb6 93ea      	ST   -Y,R30
007fb7 01de      	MOVW R26,R28
007fb8 9613      	ADIW R26,3
007fb9 940e 4131 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
007fbb e0a4      	LDI  R26,LOW(4)
007fbc 940e 40e9 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
007fbe 01fe      	MOVW R30,R28
007fbf 96fe      	ADIW R30,62
007fc0 940e d02e 	CALL SUBOPT_0x273
007fc2 940e 41b7 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     /*bongkot OLED assume flag_oled_ack = 1(OLED has connect and ack);*/
                 ; 0012 00E1     //flag_oled_ack = 1;
                 ; 0012 00E2 
                 ; 0012 00E3     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004A:
007fc4 99f0      	SBIC 0x1E,0
007fc5 c00c      	RJMP _0x24004D
                +
007fc6 01de     +MOVW R26 , R28
007fc7 5ca2     +SUBI R26 , LOW ( - 62 )
007fc8 4fbf     +SBCI R27 , HIGH ( - 62 )
007fc9 900d     +LD R0 , X +
007fca 901d     +LD R1 , X +
007fcb 918d     +LD R24 , X +
007fcc 919c     +LD R25 , X
007fcd 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
007fce 940e 41a1 	CALL _TIMER_checkTimerExceed
007fd0 9730      	SBIW R30,0
007fd1 f009      	BREQ _0x24004E
                 _0x24004D:
007fd2 c001      	RJMP _0x24004C
                 _0x24004E:
007fd3 cff0      	RJMP _0x24004A
                 _0x24004C:
                 ; 0012 00E4 
                 ; 0012 00E5     if(!flag_oled_ack){
007fd4 99f0      	SBIC 0x1E,0
007fd5 c006      	RJMP _0x24004F
                 ; 0012 00E6         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
007fd6 e7e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
007fd7 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
007fd8 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
007fd9 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
007fda 940e c042 	CALL SUBOPT_0x3
                 ; 0012 00E7     }
                 ; 0012 00E8 
                 ; 0012 00E9 }
                 _0x24004F:
007fdc 8119      	LDD  R17,Y+1
007fdd 8108      	LDD  R16,Y+0
007fde 96ef      	ADIW R28,63
007fdf 9623      	ADIW R28,3
007fe0 90ff      	POP  R15
007fe1 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00F1 {
                 _OLED_reset:
                 ; 0012 00F2     OLED_RESET = 0;            // Active SOLED Reset
007fe2 98a5      	CBI  0x14,5
                 ; 0012 00F3     delay_ms(1);
007fe3 940e c36c 	CALL SUBOPT_0x75
007fe5 940e dcfc 	CALL _delay_ms
                 ; 0012 00F4     OLED_RESET = 1;            // Dective SOLED Reset for start use.
007fe7 9aa5      	SBI  0x14,5
                 ; 0012 00F5     delay_ms(1);
007fe8 940e c36c 	CALL SUBOPT_0x75
007fea 940e dcfc 	CALL _delay_ms
                 ; 0012 00F6 
                 ; 0012 00F7 }
007fec 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00FA {
                 _init_oled:
                 ; 0012 00FB     printDebug("Initializing OLED.. ");
                +
007fed e9e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
007fee e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
007fef e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
007ff0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
007ff1 940e c042 	CALL SUBOPT_0x3
                 ; 0012 00FC     flag_oled_ack = 0;
007ff3 98f0      	CBI  0x1E,0
                 ; 0012 00FD     OLED_reset();
007ff4 dfed      	RCALL _OLED_reset
                 ; 0012 00FE     printDebug("OK\r\n");
                +
007ff5 eae5     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
007ff6 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
007ff7 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
007ff8 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
007ff9 940e e05b 	CALL __PUTPARD1
007ffb e080      	LDI  R24,0
007ffc 940e 9e24 	CALL _printDebug
007ffe c1db      	RJMP _0x20E004A
                 ; 0012 00FF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
007fff 93aa      	ST   -Y,R26
                 ;	res -> Y+0
008000 81a8      	LD   R26,Y
008001 30a1      	CPI  R26,LOW(0x1)
008002 f010      	BRLO _0x260005
008003 31a0      	CPI  R26,LOW(0x10)
008004 f008      	BRLO _0x260006
                 _0x260005:
008005 c017      	RJMP _0x260004
                 _0x260006:
                +
008006 e7ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
008007 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
008008 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
008009 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
00800a 940e e05b 	CALL __PUTPARD1
00800c 81ec      	LDD  R30,Y+4
00800d e6aa      	LDI  R26,LOW(_error_msg*2)
00800e e0b1      	LDI  R27,HIGH(_error_msg*2)
00800f e080      	LDI  R24,BYTE3(_error_msg*2)
008010 27ff      	CLR  R31
008011 2766      	CLR  R22
008012 2777      	CLR  R23
008013 940e df1e 	CALL __LSLD1
008015 940e df1e 	CALL __LSLD1
008017 940e deb3 	CALL __ADDD12
008019 940e e040 	CALL __GETD1PF
00801b 940e ca12 	CALL SUBOPT_0x189
                 _0x260004:
                 _0x20E0051:
00801d 9621      	ADIW R28,1
00801e 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
00801f 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
008021 940e cfbb 	CALL SUBOPT_0x262
008023 f449      	BRNE _0x260007
                +
008024 e8e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
008025 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
008026 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
008027 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
008028 940e c042 	CALL SUBOPT_0x3
00802a efef      	LDI  R30,LOW(65535)
00802b efff      	LDI  R31,HIGH(65535)
00802c c09b      	RJMP _0x20E004F
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
00802d 940e cad1 	CALL SUBOPT_0x1AD
00802f 940e d0ce 	CALL SUBOPT_0x28C
                 ; 0013 002F     if(res != FR_OK){
008031 f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
008032 eaec     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
008033 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
008034 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
008035 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
008036 940e c3fb 	CALL SUBOPT_0x8D
008038 940e ca12 	CALL SUBOPT_0x189
                 ; 0013 0031         error(res);
00803a 940e d0d5 	CALL SUBOPT_0x28D
                 ; 0013 0032         return -1;
00803c c08b      	RJMP _0x20E004F
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
00803d 940e cad1 	CALL SUBOPT_0x1AD
00803f 940e ca3b 	CALL SUBOPT_0x192
008041 940e ca3b 	CALL SUBOPT_0x192
008043 b7ad      	IN   R26,SPL
008044 b7be      	IN   R27,SPH
008045 9711      	SBIW R26,1
008046 933f      	PUSH R19
008047 932f      	PUSH R18
008048 940e b764 	CALL _f_write
00804a 912f      	POP  R18
00804b 913f      	POP  R19
00804c 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
00804d 3010      	CPI  R17,0
00804e f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
00804f ede2     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
008050 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
008051 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
008052 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
008053 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
008055 940e c8e5 	CALL SUBOPT_0x15B
008057 81ae      	LDD  R26,Y+6
008058 81bf      	LDD  R27,Y+6+1
008059 940e 9ea8 	CALL _print_payload
                 ; 0013 0039         error(res);
00805b 2fa1      	MOV  R26,R17
00805c dfa2      	RCALL _error
                 ; 0013 003A         return -2;
00805d efee      	LDI  R30,LOW(65534)
00805e efff      	LDI  R31,HIGH(65534)
00805f c068      	RJMP _0x20E004F
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
008060 81ec      	LDD  R30,Y+4
008061 81fd      	LDD  R31,Y+4+1
008062 17e2      	CP   R30,R18
008063 07f3      	CPC  R31,R19
008064 f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
008065 efe4     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
008066 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
008067 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
008068 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
008069 940e e05b 	CALL __PUTPARD1
00806b 01f9      	MOVW R30,R18
00806c 940e c1a4 	CALL SUBOPT_0x34
00806e 85ec      	LDD  R30,Y+12
00806f 85fd      	LDD  R31,Y+12+1
008070 940e c822 	CALL SUBOPT_0x13E
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
008072 efed      	LDI  R30,LOW(65533)
008073 efff      	LDI  R31,HIGH(65533)
008074 c053      	RJMP _0x20E004F
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
008075 c050      	RJMP _0x20E0050
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
008076 940e c3a7 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
008078 940e cfbb 	CALL SUBOPT_0x262
00807a f449      	BRNE _0x26000B
                +
00807b e2e1     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
00807c e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
00807d e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
00807e e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
00807f 940e c042 	CALL SUBOPT_0x3
008081 efef      	LDI  R30,LOW(65535)
008082 efff      	LDI  R31,HIGH(65535)
008083 c044      	RJMP _0x20E004F
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
008084 940e cad1 	CALL SUBOPT_0x1AD
008086 940e d0ce 	CALL SUBOPT_0x28C
                 ; 0013 004D     if(res != FR_OK){
008088 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
008089 e4e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
00808a e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
00808b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
00808c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
00808d 940e c3fb 	CALL SUBOPT_0x8D
00808f 940e ca12 	CALL SUBOPT_0x189
                 ; 0013 004F         error(res);
008091 940e d0d5 	CALL SUBOPT_0x28D
                 ; 0013 0050         return -1;
008093 c034      	RJMP _0x20E004F
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
008094 940e cad1 	CALL SUBOPT_0x1AD
008096 940e ca3b 	CALL SUBOPT_0x192
008098 940e ca3b 	CALL SUBOPT_0x192
00809a b7ad      	IN   R26,SPL
00809b b7be      	IN   R27,SPH
00809c 9711      	SBIW R26,1
00809d 933f      	PUSH R19
00809e 932f      	PUSH R18
00809f 940e b601 	CALL _f_read
0080a1 912f      	POP  R18
0080a2 913f      	POP  R19
0080a3 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
0080a4 3010      	CPI  R17,0
0080a5 f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
0080a6 e6e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
0080a7 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
0080a8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
0080a9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
0080aa 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
0080ac 2fa1      	MOV  R26,R17
0080ad df51      	RCALL _error
                 ; 0013 0057         return -2;
0080ae efee      	LDI  R30,LOW(65534)
0080af efff      	LDI  R31,HIGH(65534)
0080b0 c017      	RJMP _0x20E004F
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
0080b1 81ec      	LDD  R30,Y+4
0080b2 81fd      	LDD  R31,Y+4+1
0080b3 17e2      	CP   R30,R18
0080b4 07f3      	CPC  R31,R19
0080b5 f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
0080b6 e8e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
0080b7 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
0080b8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
0080b9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
0080ba 940e e05b 	CALL __PUTPARD1
0080bc 01f9      	MOVW R30,R18
0080bd 940e c1a4 	CALL SUBOPT_0x34
0080bf 85ec      	LDD  R30,Y+12
0080c0 85fd      	LDD  R31,Y+12+1
0080c1 940e c822 	CALL SUBOPT_0x13E
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
0080c3 efed      	LDI  R30,LOW(65533)
0080c4 efff      	LDI  R31,HIGH(65533)
0080c5 c002      	RJMP _0x20E004F
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0050:
0080c6 e0e0      	LDI  R30,LOW(0)
0080c7 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
0080c8 940e e0d9 	CALL __LOADLOCR4
0080ca 962e      	ADIW R28,14
0080cb 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
0080cc 940e c664 	CALL SUBOPT_0xEE
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
0080ce e1ef      	LDI  R30,LOW(_root_path)
0080cf e1f9      	LDI  R31,HIGH(_root_path)
0080d0 940e d0db 	CALL SUBOPT_0x28E
0080d2 e1ad      	LDI  R26,LOW(_pfat)
0080d3 e1b9      	LDI  R27,HIGH(_pfat)
0080d4 940e bb2c 	CALL _f_getfree
0080d6 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
0080d7 3010      	CPI  R17,0
0080d8 f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
0080d9 ebe4     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
0080da e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
0080db e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
0080dc e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
0080dd 940e d0e2 	CALL SUBOPT_0x28F
0080df 940e c0b8 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
0080e1 2fa1      	MOV  R26,R17
0080e2 940e d0e8 	CALL SUBOPT_0x290
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
0080e4 c012      	RJMP _0x20E004E
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
0080e5 91e0 191d 	LDS  R30,_pfat
0080e7 91f0 191e 	LDS  R31,_pfat+1
0080e9 940e d0f6 	CALL SUBOPT_0x291
0080eb 940e d0f9 	CALL SUBOPT_0x292
0080ed 940e d0fe 	CALL SUBOPT_0x293
0080ef 940e df19 	CALL __LSRD1
0080f1 81ad      	LDD  R26,Y+5
0080f2 81be      	LDD  R27,Y+5+1
0080f3 940e e036 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
0080f5 e0e0      	LDI  R30,LOW(0)
0080f6 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
0080f7 8118      	LDD  R17,Y+0
0080f8 9627      	ADIW R28,7
0080f9 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
0080fa 931a      	ST   -Y,R17
                 ;	res -> R17
0080fb e0e0      	LDI  R30,LOW(0)
0080fc 93ea      	ST   -Y,R30
0080fd eeab      	LDI  R26,LOW(_fat)
0080fe e1b6      	LDI  R27,HIGH(_fat)
0080ff 940e b4a9 	CALL _f_mount
008101 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
008102 3010      	CPI  R17,0
008103 f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
008104 eee2     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
008105 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
008106 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
008107 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
008108 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
00810a 940e d0d5 	CALL SUBOPT_0x28D
                 ; 0013 0083         return -1;
00810c c008      	RJMP _0x20E004D
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
00810d e0e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
00810e e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
00810f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
008110 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
008111 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
008113 e0e0      	LDI  R30,LOW(0)
008114 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004D:
008115 9119      	LD   R17,Y+
008116 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
008117 93aa      	ST   -Y,R26
008118 97ef      	SBIW R28,63
008119 9763      	SBIW R28,19
00811a 50d2      	SUBI R29,2
00811b 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
00811c 940e cfbb 	CALL SUBOPT_0x262
00811e f449      	BRNE _0x260014
                +
00811f eae8     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
008120 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
008121 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
008122 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
008123 940e c042 	CALL SUBOPT_0x3
008125 efef      	LDI  R30,LOW(65535)
008126 efff      	LDI  R31,HIGH(65535)
008127 c048      	RJMP _0x20E004C
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
008128 01fe      	MOVW R30,R28
008129 9631      	ADIW R30,1
00812a 93fa      	ST   -Y,R31
00812b 93ea      	ST   -Y,R30
00812c 940e d103 	CALL SUBOPT_0x294
                +
00812e 01fe     +MOVW R30 , R28
00812f 5ae2     +SUBI R30 , LOW ( - 606 )
008130 4ffd     +SBCI R31 , HIGH ( - 606 )
008131 9001     +LD R0 , Z +
008132 81f0     +LD R31 , Z
008133 2de0     +MOV R30 , R0
                 	__GETW1SX 606
008134 940e c1a4 	CALL SUBOPT_0x34
008136 e088      	LDI  R24,8
008137 940e bf54 	CALL _sprintf
008139 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
00813a 01de     +MOVW R26 , R28
00813b 5aad     +SUBI R26 , LOW ( - 595 )
00813c 4fbd     +SBCI R27 , HIGH ( - 595 )
00813d 91ac     +LD R26 , X
                 	__GETB2SX 595
00813e 30a1      	CPI  R26,LOW(0x1)
00813f f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
008140 01fe      	MOVW R30,R28
008141 96f3      	ADIW R30,51
008142 940e d0db 	CALL SUBOPT_0x28E
008144 e0aa      	LDI  R26,LOW(10)
008145 c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
008146 01fe      	MOVW R30,R28
008147 96f3      	ADIW R30,51
008148 940e d0db 	CALL SUBOPT_0x28E
00814a e0a6      	LDI  R26,LOW(6)
                 _0x260021:
00814b 940e b4d4 	CALL _f_open
00814d 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
00814e 3018      	CPI  R17,8
00814f f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
008150 e0e0      	LDI  R30,LOW(0)
008151 e0f0      	LDI  R31,HIGH(0)
008152 c01d      	RJMP _0x20E004C
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
008153 3010      	CPI  R17,0
008154 f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
008155 ede1     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
008156 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
008157 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
008158 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
008159 940e c042 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
00815b 940e d0d5 	CALL SUBOPT_0x28D
                 ; 0013 00DB         return -1;
00815d c012      	RJMP _0x20E004C
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
00815e 01de      	MOVW R26,R28
00815f 96d3      	ADIW R26,51
008160 940e b981 	CALL _f_close
008162 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
008163 3010      	CPI  R17,0
008164 f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
008165 efe3     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
008166 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
008167 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
008168 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
008169 940e c042 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
00816b 940e d0d5 	CALL SUBOPT_0x28D
                 ; 0013 00E4         return -1;
00816d c002      	RJMP _0x20E004C
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
00816e e0e1      	LDI  R30,LOW(1)
00816f e0f0      	LDI  R31,HIGH(1)
                 _0x20E004C:
008170 8118      	LDD  R17,Y+0
008171 96ef      	ADIW R28,63
008172 9667      	ADIW R28,23
008173 5fde      	SUBI R29,-2
008174 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
008175 93ba      	ST   -Y,R27
008176 93aa      	ST   -Y,R26
008177 97e2      	SBIW R28,50
008178 931a      	ST   -Y,R17
008179 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
00817a 940e cfbb 	CALL SUBOPT_0x262
00817c f449      	BRNE _0x26001B
                +
00817d e1e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
00817e e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
00817f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
008180 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
008181 940e c042 	CALL SUBOPT_0x3
008183 efef      	LDI  R30,LOW(65535)
008184 efff      	LDI  R31,HIGH(65535)
008185 c02a      	RJMP _0x20E004B
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
008186 940e cc72 	CALL SUBOPT_0x1F1
008188 940e d103 	CALL SUBOPT_0x294
00818a adee      	LDD  R30,Y+62
00818b adff      	LDD  R31,Y+62+1
00818c 940e c1a4 	CALL SUBOPT_0x34
00818e e088      	LDI  R24,8
00818f 940e bf54 	CALL _sprintf
008191 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
008192 a9ee      	LDD  R30,Y+54
008193 a9ff      	LDD  R31,Y+54+1
008194 940e d108 	CALL SUBOPT_0x295
008196 e0a3      	LDI  R26,LOW(3)
008197 940e b4d4 	CALL _f_open
008199 2f0e      	MOV  R16,R30
00819a 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
00819b 2e00      	MOV  R0,R16
00819c 2a01      	OR   R0,R17
00819d f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
00819e e3e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
00819f e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
0081a0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
0081a1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
0081a2 940e e05b 	CALL __PUTPARD1
0081a4 ade8      	LDD  R30,Y+56
0081a5 adf9      	LDD  R31,Y+56+1
0081a6 940e c1a4 	CALL SUBOPT_0x34
0081a8 940e c0b8 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
0081aa 2fa0      	MOV  R26,R16
0081ab 940e d0e8 	CALL SUBOPT_0x290
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
0081ad c002      	RJMP _0x20E004B
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
0081ae e0e0      	LDI  R30,LOW(0)
0081af e0f0      	LDI  R31,HIGH(0)
                 _0x20E004B:
0081b0 8119      	LDD  R17,Y+1
0081b1 8108      	LDD  R16,Y+0
0081b2 96e8      	ADIW R28,56
0081b3 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
0081b4 940e c3b3 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
0081b6 940e cfbb 	CALL SUBOPT_0x262
0081b8 f449      	BRNE _0x26001D
                +
0081b9 e5ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
0081ba e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
0081bb e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
0081bc e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
0081bd 940e c042 	CALL SUBOPT_0x3
0081bf efef      	LDI  R30,LOW(65535)
0081c0 efff      	LDI  R31,HIGH(65535)
0081c1 c016      	RJMP _0x20E0049
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
0081c2 81aa      	LDD  R26,Y+2
0081c3 81bb      	LDD  R27,Y+2+1
0081c4 940e b981 	CALL _f_close
0081c6 2f0e      	MOV  R16,R30
0081c7 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
0081c8 2e00      	MOV  R0,R16
0081c9 2a01      	OR   R0,R17
0081ca f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
0081cb e8e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
0081cc e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
0081cd e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
0081ce e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
0081cf 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
0081d1 2fa0      	MOV  R26,R16
0081d2 de2c      	RCALL _error
                 ; 0013 0108         return -1;
0081d3 efef      	LDI  R30,LOW(65535)
0081d4 efff      	LDI  R31,HIGH(65535)
0081d5 c002      	RJMP _0x20E0049
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
0081d6 e0e0      	LDI  R30,LOW(0)
0081d7 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
0081d8 8119      	LDD  R17,Y+1
0081d9 8108      	LDD  R16,Y+0
                 _0x20E004A:
0081da 9624      	ADIW R28,4
0081db 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
0081dc 931a      	ST   -Y,R17
0081dd 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
0081de eae2     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
0081df e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
0081e0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
0081e1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
0081e2 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
0081e4 eeeb      	LDI  R30,LOW(_fat)
0081e5 e1f6      	LDI  R31,HIGH(_fat)
0081e6 93e0 191d 	STS  _pfat,R30
0081e8 93f0 191e 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
0081ea eea8      	LDI  R26,LOW(1000)
0081eb e0b3      	LDI  R27,HIGH(1000)
0081ec 940e dcfc 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
0081ee ece8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
0081ef e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
0081f0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
0081f1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
0081f2 940e c042 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
0081f4 df05      	RCALL _SD_mount
0081f5 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
0081f6 2311      	TST  R17
0081f7 f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
0081f8 eee8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
0081f9 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
0081fa e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
0081fb e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
0081fc 940e c042 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
0081fe efef      	LDI  R30,LOW(65535)
0081ff efff      	LDI  R31,HIGH(65535)
008200 c02b      	RJMP _0x20E0048
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
008201 e0e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
008202 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
008203 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
008204 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
008205 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
008207 eea8      	LDI  R26,LOW(1000)
008208 e0b3      	LDI  R27,HIGH(1000)
008209 940e dcfc 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
00820b e6ab      	LDI  R26,LOW(_sdFreeSpace)
00820c e1b4      	LDI  R27,HIGH(_sdFreeSpace)
00820d debe      	RCALL _SD_readMemoryRemain
00820e 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
00820f 2311      	TST  R17
008210 f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
008211 e2e5     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
008212 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
008213 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
008214 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
008215 940e c042 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
008217 efef      	LDI  R30,LOW(65535)
008218 efff      	LDI  R31,HIGH(65535)
008219 c012      	RJMP _0x20E0048
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
00821a e4ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
00821b e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
00821c e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
00821d e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
00821e 940e e05b 	CALL __PUTPARD1
008220 91e0 146b 	LDS  R30,_sdFreeSpace
008222 91f0 146c 	LDS  R31,_sdFreeSpace+1
008224 9160 146d 	LDS  R22,_sdFreeSpace+2
008226 9170 146e 	LDS  R23,_sdFreeSpace+3
008228 940e ca12 	CALL SUBOPT_0x189
                 ; 0013 012D 
                 ; 0013 012E     return 0;
00822a e0e0      	LDI  R30,LOW(0)
00822b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0048:
00822c 9109      	LD   R16,Y+
00822d 9119      	LD   R17,Y+
00822e 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
00822f 940e e060 	CALL __PUTPARD2
008231 9728      	SBIW R28,8
008232 940e e0d2 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008234 940e d10f 	CALL SUBOPT_0x296
008236 940e d114 	CALL SUBOPT_0x297
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
008238 f44a      	BRPL _0x280009
                +
008239 ebe8     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
00823a e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
00823b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
00823c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
00823d 940e c042 	CALL SUBOPT_0x3
00823f efef      	LDI  R30,LOW(65535)
008240 efff      	LDI  R31,HIGH(65535)
008241 c078      	RJMP _0x20E0047
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
008242 e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
008243 940e d11b 	CALL SUBOPT_0x298
008245 940e d121 	CALL SUBOPT_0x299
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
008247 940e d10f 	CALL SUBOPT_0x296
008249 940e cd0f 	CALL SUBOPT_0x207
00824b b7ed      	IN   R30,SPL
00824c b7fe      	IN   R31,SPH
00824d 9731      	SBIW R30,1
00824e 93fa      	ST   -Y,R31
00824f 93ea      	ST   -Y,R30
008250 934f      	PUSH R20
008251 933f      	PUSH R19
008252 940e c36c 	CALL SUBOPT_0x75
008254 ddca      	RCALL _SD_writeData
008255 913f      	POP  R19
008256 914f      	POP  R20
008257 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
008258 2311      	TST  R17
008259 f44a      	BRPL _0x28000A
                +
00825a eee6     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
00825b e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
00825c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
00825d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
00825e 940e c042 	CALL SUBOPT_0x3
008260 efef      	LDI  R30,LOW(65535)
008261 efff      	LDI  R31,HIGH(65535)
008262 c057      	RJMP _0x20E0047
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
008263 940e d10f 	CALL SUBOPT_0x296
008265 940e d125 	CALL SUBOPT_0x29A
008267 940e e05b 	CALL __PUTPARD1
008269 01fe      	MOVW R30,R28
00826a 9678      	ADIW R30,24
00826b 940e d129 	CALL SUBOPT_0x29B
00826d 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
00826f f44a      	BRPL _0x28000B
                +
008270 e1e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
008271 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
008272 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
008273 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
008274 940e c042 	CALL SUBOPT_0x3
008276 efef      	LDI  R30,LOW(65535)
008277 efff      	LDI  R31,HIGH(65535)
008278 c041      	RJMP _0x20E0047
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
008279 940e d10f 	CALL SUBOPT_0x296
00827b 940e d132 	CALL SUBOPT_0x29D
00827d 01fe      	MOVW R30,R28
00827e 9676      	ADIW R30,22
00827f 93fa      	ST   -Y,R31
008280 93ea      	ST   -Y,R30
008281 940e c365 	CALL SUBOPT_0x73
008283 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
008285 f44a      	BRPL _0x28000C
                +
008286 e4e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
008287 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
008288 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
008289 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
00828a 940e c042 	CALL SUBOPT_0x3
00828c efef      	LDI  R30,LOW(65535)
00828d efff      	LDI  R31,HIGH(65535)
00828e c02b      	RJMP _0x20E0047
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
00828f 940e d10f 	CALL SUBOPT_0x296
008291 940e d13b 	CALL SUBOPT_0x29E
008293 940e e05b 	CALL __PUTPARD1
008295 940e c31d 	CALL SUBOPT_0x6C
008297 940e c372 	CALL SUBOPT_0x77
008299 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
00829b f44a      	BRPL _0x28000D
                +
00829c e7e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
00829d e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
00829e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
00829f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
0082a0 940e c042 	CALL SUBOPT_0x3
0082a2 efef      	LDI  R30,LOW(65535)
0082a3 efff      	LDI  R31,HIGH(65535)
0082a4 c015      	RJMP _0x20E0047
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
0082a5 940e d10f 	CALL SUBOPT_0x296
0082a7 940e d142 	CALL SUBOPT_0x29F
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
0082a9 f45a      	BRPL _0x28000E
                +
0082aa eae3     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
0082ab e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
0082ac e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
0082ad e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
0082ae 940e c3fb 	CALL SUBOPT_0x8D
0082b0 940e ca12 	CALL SUBOPT_0x189
0082b2 efef      	LDI  R30,LOW(65535)
0082b3 efff      	LDI  R31,HIGH(65535)
0082b4 c005      	RJMP _0x20E0047
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
0082b5 e0e0      	LDI  R30,LOW(0)
0082b6 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
0082b8 85e8      	LDD  R30,Y+8
0082b9 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
0082ba 940e e0d9 	CALL __LOADLOCR4
0082bc 9668      	ADIW R28,24
0082bd 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
0082be 940e c63f 	CALL SUBOPT_0xE7
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0082c0 940e d151 	CALL SUBOPT_0x2A0
0082c2 940e d156 	CALL SUBOPT_0x2A1
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
0082c4 f44a      	BRPL _0x28000F
                +
0082c5 ede4     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
0082c6 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
0082c7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
0082c8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
0082c9 940e c042 	CALL SUBOPT_0x3
0082cb efef      	LDI  R30,LOW(65535)
0082cc efff      	LDI  R31,HIGH(65535)
0082cd c1b9      	RJMP _0x20E0044
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
0082ce 940e d151 	CALL SUBOPT_0x2A0
0082d0 940e d15d 	CALL SUBOPT_0x2A2
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
0082d2 f44a      	BRPL _0x280010
                +
0082d3 e0e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
0082d4 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
0082d5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
0082d6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
0082d7 940e c042 	CALL SUBOPT_0x3
0082d9 efef      	LDI  R30,LOW(65535)
0082da efff      	LDI  R31,HIGH(65535)
0082db c1ab      	RJMP _0x20E0044
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
0082dc 940e d164 	CALL SUBOPT_0x2A3
0082de 940e d16a 	CALL SUBOPT_0x2A4
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
0082e0 940e d170 	CALL SUBOPT_0x2A5
0082e2 f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
0082e3 e5ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
0082e4 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
0082e5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
0082e6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
0082e7 940e c042 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0082e9 940e d177 	CALL SUBOPT_0x2A6
                 ; 0014 0050         if(res < 0)
0082eb f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
0082ec e7ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
0082ed e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
0082ee e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
0082ef e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
0082f0 940e c2cc 	CALL SUBOPT_0x5F
0082f2 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
0082f4 e0e1      	LDI  R30,LOW(1)
0082f5 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
0082f7 e0e0      	LDI  R30,LOW(0)
0082f8 e0f0      	LDI  R31,HIGH(0)
0082f9 c18d      	RJMP _0x20E0044
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
0082fa 940e d11b 	CALL SUBOPT_0x298
0082fc 940e d121 	CALL SUBOPT_0x299
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
0082fe 940e d151 	CALL SUBOPT_0x2A0
008300 940e cd0f 	CALL SUBOPT_0x207
008302 b7ed      	IN   R30,SPL
008303 b7fe      	IN   R31,SPH
008304 9731      	SBIW R30,1
008305 93fa      	ST   -Y,R31
008306 93ea      	ST   -Y,R30
008307 934f      	PUSH R20
008308 933f      	PUSH R19
008309 940e c36c 	CALL SUBOPT_0x75
00830b dd6a      	RCALL _SD_readData
00830c 913f      	POP  R19
00830d 914f      	POP  R20
00830e 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
00830f 2311      	TST  R17
008310 f44a      	BRPL _0x280013
                +
008311 eaed     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
008312 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
008313 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
008314 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
008315 940e c042 	CALL SUBOPT_0x3
008317 efef      	LDI  R30,LOW(65535)
008318 efff      	LDI  R31,HIGH(65535)
008319 c16d      	RJMP _0x20E0044
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
00831a 940e d151 	CALL SUBOPT_0x2A0
00831c 940e d125 	CALL SUBOPT_0x29A
00831e 940e c66d 	CALL SUBOPT_0xF1
008320 940e d129 	CALL SUBOPT_0x29B
008322 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
008324 f44a      	BRPL _0x280014
                +
008325 ede7     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
008326 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
008327 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
008328 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
008329 940e c042 	CALL SUBOPT_0x3
00832b efef      	LDI  R30,LOW(65535)
00832c efff      	LDI  R31,HIGH(65535)
00832d c159      	RJMP _0x20E0044
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
00832e 940e d151 	CALL SUBOPT_0x2A0
008330 940e d132 	CALL SUBOPT_0x29D
008332 8dea      	LDD  R30,Y+26
008333 8dfb      	LDD  R31,Y+26+1
008334 93fa      	ST   -Y,R31
008335 93ea      	ST   -Y,R30
008336 940e c365 	CALL SUBOPT_0x73
008338 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
00833a f44a      	BRPL _0x280015
                +
00833b e0e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
00833c e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
00833d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
00833e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
00833f 940e c042 	CALL SUBOPT_0x3
008341 efef      	LDI  R30,LOW(65535)
008342 efff      	LDI  R31,HIGH(65535)
008343 c143      	RJMP _0x20E0044
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
008344 940e d151 	CALL SUBOPT_0x2A0
008346 940e d13b 	CALL SUBOPT_0x29E
008348 940e cebe 	CALL SUBOPT_0x23F
00834a 940e d129 	CALL SUBOPT_0x29B
00834c 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
00834e f44a      	BRPL _0x280016
                +
00834f e3e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
008350 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
008351 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
008352 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
008353 940e c042 	CALL SUBOPT_0x3
008355 efef      	LDI  R30,LOW(65535)
008356 efff      	LDI  R31,HIGH(65535)
008357 c12f      	RJMP _0x20E0044
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
008358 c124      	RJMP _0x20E0045
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
008359 93aa      	ST   -Y,R26
00835a 9728      	SBIW R28,8
00835b 940e e0d2 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00835d 940e d18d 	CALL SUBOPT_0x2A8
00835f 940e d114 	CALL SUBOPT_0x297
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
008361 f44a      	BRPL _0x280017
                +
008362 e5ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
008363 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
008364 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
008365 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
008366 940e c042 	CALL SUBOPT_0x3
008368 efef      	LDI  R30,LOW(65535)
008369 efff      	LDI  R31,HIGH(65535)
00836a c076      	RJMP _0x20E0046
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
00836b e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
00836c 940e d192 	CALL SUBOPT_0x2A9
00836e 940e d121 	CALL SUBOPT_0x299
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
008370 940e d18d 	CALL SUBOPT_0x2A8
008372 940e cd0f 	CALL SUBOPT_0x207
008374 b7ed      	IN   R30,SPL
008375 b7fe      	IN   R31,SPH
008376 9731      	SBIW R30,1
008377 93fa      	ST   -Y,R31
008378 93ea      	ST   -Y,R30
008379 934f      	PUSH R20
00837a 933f      	PUSH R19
00837b 940e c36c 	CALL SUBOPT_0x75
00837d dca1      	RCALL _SD_writeData
00837e 913f      	POP  R19
00837f 914f      	POP  R20
008380 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
008381 2311      	TST  R17
008382 f44a      	BRPL _0x280018
                +
008383 e8ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
008384 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
008385 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
008386 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
008387 940e c042 	CALL SUBOPT_0x3
008389 efef      	LDI  R30,LOW(65535)
00838a efff      	LDI  R31,HIGH(65535)
00838b c055      	RJMP _0x20E0046
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
00838c 940e d18d 	CALL SUBOPT_0x2A8
00838e 940e d125 	CALL SUBOPT_0x29A
008390 940e e05b 	CALL __PUTPARD1
008392 01fe      	MOVW R30,R28
008393 9674      	ADIW R30,20
008394 940e d129 	CALL SUBOPT_0x29B
008396 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
008398 f44a      	BRPL _0x280019
                +
008399 ebeb     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
00839a e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
00839b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
00839c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
00839d 940e c042 	CALL SUBOPT_0x3
00839f efef      	LDI  R30,LOW(65535)
0083a0 efff      	LDI  R31,HIGH(65535)
0083a1 c03f      	RJMP _0x20E0046
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
0083a2 940e d18d 	CALL SUBOPT_0x2A8
0083a4 940e d132 	CALL SUBOPT_0x29D
0083a6 01fe      	MOVW R30,R28
0083a7 9673      	ADIW R30,19
0083a8 940e d198 	CALL SUBOPT_0x2AA
0083aa 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
0083ac f44a      	BRPL _0x28001A
                +
0083ad eeee     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
0083ae e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
0083af e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
0083b0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
0083b1 940e c042 	CALL SUBOPT_0x3
0083b3 efef      	LDI  R30,LOW(65535)
0083b4 efff      	LDI  R31,HIGH(65535)
0083b5 c02b      	RJMP _0x20E0046
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
0083b6 940e d18d 	CALL SUBOPT_0x2A8
0083b8 940e d19c 	CALL SUBOPT_0x2AB
0083ba 940e e05b 	CALL __PUTPARD1
0083bc 940e c31d 	CALL SUBOPT_0x6C
0083be 940e c36c 	CALL SUBOPT_0x75
0083c0 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
0083c2 f44a      	BRPL _0x28001B
                +
0083c3 e1ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
0083c4 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
0083c5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
0083c6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
0083c7 940e c042 	CALL SUBOPT_0x3
0083c9 efef      	LDI  R30,LOW(65535)
0083ca efff      	LDI  R31,HIGH(65535)
0083cb c015      	RJMP _0x20E0046
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
0083cc 940e d18d 	CALL SUBOPT_0x2A8
0083ce 940e d142 	CALL SUBOPT_0x29F
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
0083d0 f45a      	BRPL _0x28001C
                +
0083d1 e4ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
0083d2 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
0083d3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
0083d4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
0083d5 940e c3fb 	CALL SUBOPT_0x8D
0083d7 940e ca12 	CALL SUBOPT_0x189
0083d9 efef      	LDI  R30,LOW(65535)
0083da efff      	LDI  R31,HIGH(65535)
0083db c005      	RJMP _0x20E0046
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0083dc e0e0      	LDI  R30,LOW(0)
0083dd 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0083df 85e8      	LDD  R30,Y+8
0083e0 85f9      	LDD  R31,Y+8+1
                 _0x20E0046:
0083e1 940e e0d9 	CALL __LOADLOCR4
0083e3 9664      	ADIW R28,20
0083e4 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0083e5 940e c63f 	CALL SUBOPT_0xE7
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0083e7 940e d151 	CALL SUBOPT_0x2A0
0083e9 940e d156 	CALL SUBOPT_0x2A1
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0083eb f44a      	BRPL _0x28001D
                +
0083ec e7ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
0083ed e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
0083ee e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
0083ef e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
0083f0 940e c042 	CALL SUBOPT_0x3
0083f2 efef      	LDI  R30,LOW(65535)
0083f3 efff      	LDI  R31,HIGH(65535)
0083f4 c092      	RJMP _0x20E0044
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
0083f5 940e d151 	CALL SUBOPT_0x2A0
0083f7 940e d15d 	CALL SUBOPT_0x2A2
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
0083f9 f44a      	BRPL _0x28001E
                +
0083fa eae9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
0083fb e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
0083fc e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
0083fd e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
0083fe 940e c042 	CALL SUBOPT_0x3
008400 efef      	LDI  R30,LOW(65535)
008401 efff      	LDI  R31,HIGH(65535)
008402 c084      	RJMP _0x20E0044
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
008403 940e d164 	CALL SUBOPT_0x2A3
008405 940e d16a 	CALL SUBOPT_0x2A4
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
008407 940e d170 	CALL SUBOPT_0x2A5
008409 f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
00840a ede4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
00840b e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
00840c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
00840d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
00840e 940e c042 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
008410 940e d1a3 	CALL SUBOPT_0x2AC
                 ; 0014 00A9         if(res < 0)
008412 f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
008413 e7ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
008414 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
008415 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
008416 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
008417 940e c313 	CALL SUBOPT_0x6A
008419 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
00841b e0e1      	LDI  R30,LOW(1)
00841c 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
00841e e0e0      	LDI  R30,LOW(0)
00841f e0f0      	LDI  R31,HIGH(0)
008420 c066      	RJMP _0x20E0044
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
008421 940e d192 	CALL SUBOPT_0x2A9
008423 940e d121 	CALL SUBOPT_0x299
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
008425 940e d151 	CALL SUBOPT_0x2A0
008427 940e cd0f 	CALL SUBOPT_0x207
008429 b7ed      	IN   R30,SPL
00842a b7fe      	IN   R31,SPH
00842b 9731      	SBIW R30,1
00842c 93fa      	ST   -Y,R31
00842d 93ea      	ST   -Y,R30
00842e 934f      	PUSH R20
00842f 933f      	PUSH R19
008430 940e c36c 	CALL SUBOPT_0x75
008432 dc43      	RCALL _SD_readData
008433 913f      	POP  R19
008434 914f      	POP  R20
008435 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
008436 2311      	TST  R17
008437 f44a      	BRPL _0x280021
                +
008438 efe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
008439 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
00843a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
00843b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
00843c 940e c042 	CALL SUBOPT_0x3
00843e efef      	LDI  R30,LOW(65535)
00843f efff      	LDI  R31,HIGH(65535)
008440 c046      	RJMP _0x20E0044
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
008441 940e d151 	CALL SUBOPT_0x2A0
008443 940e d125 	CALL SUBOPT_0x29A
008445 940e c66d 	CALL SUBOPT_0xF1
008447 940e d129 	CALL SUBOPT_0x29B
008449 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
00844b f44a      	BRPL _0x280022
                +
00844c e1ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
00844d e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
00844e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
00844f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
008450 940e c042 	CALL SUBOPT_0x3
008452 efef      	LDI  R30,LOW(65535)
008453 efff      	LDI  R31,HIGH(65535)
008454 c032      	RJMP _0x20E0044
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
008455 940e d151 	CALL SUBOPT_0x2A0
008457 940e d132 	CALL SUBOPT_0x29D
008459 8dea      	LDD  R30,Y+26
00845a 8dfb      	LDD  R31,Y+26+1
00845b 940e d198 	CALL SUBOPT_0x2AA
00845d 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
00845f f44a      	BRPL _0x280023
                +
008460 e4ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
008461 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
008462 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
008463 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
008464 940e c042 	CALL SUBOPT_0x3
008466 efef      	LDI  R30,LOW(65535)
008467 efff      	LDI  R31,HIGH(65535)
008468 c01e      	RJMP _0x20E0044
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
008469 940e d151 	CALL SUBOPT_0x2A0
00846b 940e d19c 	CALL SUBOPT_0x2AB
00846d 940e cebe 	CALL SUBOPT_0x23F
00846f 940e d198 	CALL SUBOPT_0x2AA
008471 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
008473 f44a      	BRPL _0x280024
                +
008474 e7e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
008475 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
008476 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
008477 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
008478 940e c042 	CALL SUBOPT_0x3
00847a efef      	LDI  R30,LOW(65535)
00847b efff      	LDI  R31,HIGH(65535)
00847c c00a      	RJMP _0x20E0044
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0045:
                +
00847d 85e8     +LDD R30 , Y + 8
00847e 85f9     +LDD R31 , Y + 8 + 1
00847f 856a     +LDD R22 , Y + 8 + 2
008480 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
008481 89a8      	LDD  R26,Y+16
008482 89b9      	LDD  R27,Y+16+1
008483 940e e036 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
008485 e0e1      	LDI  R30,LOW(1)
008486 e0f0      	LDI  R31,HIGH(1)
                 _0x20E0044:
008487 940e e0d9 	CALL __LOADLOCR4
008489 966a      	ADIW R28,26
00848a 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
00848b 940e c3b3 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
00848d 940e d1b4 	CALL SUBOPT_0x2AD
00848f 940e d1b9 	CALL SUBOPT_0x2AE
008491 940e ca3b 	CALL SUBOPT_0x192
008493 940e c372 	CALL SUBOPT_0x77
008495 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 00CE     if(res < 0)
008497 f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
008498 eae5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
008499 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
00849a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
00849b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
00849c 940e c042 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
00849e efef      	LDI  R30,LOW(65535)
00849f efff      	LDI  R31,HIGH(65535)
0084a0 c048      	RJMP _0x20E0042
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
0084a1 ede0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
0084a2 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
0084a3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
0084a4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
0084a5 c03b      	RJMP _0x20E0043
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
0084a6 940e cc7f 	CALL SUBOPT_0x1F4
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0084a8 eeee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
0084a9 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
0084aa e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
0084ab e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
0084ac 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0084ae 940e cc72 	CALL SUBOPT_0x1F1
0084b0 940e c372 	CALL SUBOPT_0x77
0084b2 940e c911 	CALL SUBOPT_0x162
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
0084b4 940e d1b9 	CALL SUBOPT_0x2AE
0084b6 01fe      	MOVW R30,R28
0084b7 9638      	ADIW R30,8
0084b8 940e d129 	CALL SUBOPT_0x29B
0084ba 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 00E1     if(res < 0)
0084bc f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
0084bd e1e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
0084be e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
0084bf e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
0084c0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
0084c1 940e c042 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
0084c3 efef      	LDI  R30,LOW(65535)
0084c4 efff      	LDI  R31,HIGH(65535)
0084c5 c049      	RJMP _0x20E0040
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
0084c6 c046      	RJMP _0x20E0041
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
0084c7 940e c3b3 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
0084c9 940e d1b4 	CALL SUBOPT_0x2AD
0084cb 940e d1c0 	CALL SUBOPT_0x2AF
0084cd 940e ca3b 	CALL SUBOPT_0x192
0084cf 940e c372 	CALL SUBOPT_0x77
0084d1 940e d188 	CALL SUBOPT_0x2A7
                 ; 0014 00EF     if(res < 0)
0084d3 f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
0084d4 e3eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
0084d5 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
0084d6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
0084d7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
0084d8 940e c042 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
0084da efef      	LDI  R30,LOW(65535)
0084db efff      	LDI  R31,HIGH(65535)
0084dc c00c      	RJMP _0x20E0042
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
0084dd e6e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
0084de e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
0084df e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
0084e0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0043:
0084e1 940e e05b 	CALL __PUTPARD1
0084e3 81ae      	LDD  R26,Y+6
0084e4 81bf      	LDD  R27,Y+6+1
0084e5 940e c7c8 	CALL SUBOPT_0x12C
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
0084e7 e0e0      	LDI  R30,LOW(0)
0084e8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0042:
0084e9 8119      	LDD  R17,Y+1
0084ea 8108      	LDD  R16,Y+0
0084eb 9626      	ADIW R28,6
0084ec 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
0084ed 940e cc7f 	CALL SUBOPT_0x1F4
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0084ef e8e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
0084f0 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
0084f1 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
0084f2 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
0084f3 940e cc7b 	CALL SUBOPT_0x1F3
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0084f5 940e cc72 	CALL SUBOPT_0x1F1
0084f7 940e c372 	CALL SUBOPT_0x77
0084f9 940e c911 	CALL SUBOPT_0x162
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
0084fb 940e d1c0 	CALL SUBOPT_0x2AF
0084fd 01fe      	MOVW R30,R28
0084fe 9638      	ADIW R30,8
0084ff 940e d129 	CALL SUBOPT_0x29B
008501 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 0102     if(res < 0)
008503 f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
008504 eae0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
008505 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
008506 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
008507 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
008508 940e c042 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
00850a efef      	LDI  R30,LOW(65535)
00850b efff      	LDI  R31,HIGH(65535)
00850c c002      	RJMP _0x20E0040
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0041:
00850d e0e0      	LDI  R30,LOW(0)
00850e e0f0      	LDI  R31,HIGH(0)
                 _0x20E0040:
00850f 8119      	LDD  R17,Y+1
008510 8108      	LDD  R16,Y+0
008511 9628      	ADIW R28,8
008512 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
008513 940e cbff 	CALL SUBOPT_0x1DA
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
008515 81ec      	LDD  R30,Y+4
008516 81fd      	LDD  R31,Y+4+1
008517 940e c2aa 	CALL SUBOPT_0x59
008519 940e d0fe 	CALL SUBOPT_0x293
                +
00851b 5fe0     +SUBI R30 , LOW ( - 16 )
00851c 4fff     +SBCI R31 , HIGH ( - 16 )
00851d 4f6f     +SBCI R22 , BYTE3 ( - 16 )
00851e 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
00851f 940e c494 	CALL SUBOPT_0xA0
                 ; 0014 0115 
                 ; 0014 0116     return address;
008521 940e c3d9 	CALL SUBOPT_0x87
008523 962a      	ADIW R28,10
008524 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
008525 93ba      	ST   -Y,R27
008526 93aa      	ST   -Y,R26
008527 97a0      	SBIW R28,32
008528 50d2      	SUBI R29,2
008529 931a      	ST   -Y,R17
00852a 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
00852b 01fe     +MOVW R30 , R28
00852c 5de9     +SUBI R30 , LOW ( - 551 )
00852d 4ffd     +SBCI R31 , HIGH ( - 551 )
00852e 9001     +LD R0 , Z +
00852f 81f0     +LD R31 , Z
008530 2de0     +MOV R30 , R0
                 	__GETW1SX 551
008531 93fa      	ST   -Y,R31
008532 93ea      	ST   -Y,R30
                +
008533 01de     +MOVW R26 , R28
008534 5da8     +SUBI R26 , LOW ( - 552 )
008535 4fbd     +SBCI R27 , HIGH ( - 552 )
008536 91ac     +LD R26 , X
                 	__GETB2SX 552
008537 dbdf      	RCALL _SD_createFile
008538 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
008539 2311      	TST  R17
00853a f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
00853b ece9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
00853c e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
00853d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
00853e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
00853f 940e d1c7 	CALL SUBOPT_0x2B0
008541 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
008543 efef      	LDI  R30,LOW(65535)
008544 efff      	LDI  R31,HIGH(65535)
008545 c075      	RJMP _0x20E003E
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
008546 2e00      	MOV  R0,R16
008547 2a01      	OR   R0,R17
008548 f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
008549 efe5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
00854a e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
00854b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
00854c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
00854d 940e d1c7 	CALL SUBOPT_0x2B0
00854f 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
008551 e0e0      	LDI  R30,LOW(0)
008552 e0f0      	LDI  R31,HIGH(0)
008553 c067      	RJMP _0x20E003E
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
008554 e1e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
008555 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
008556 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
008557 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
008558 940e d1c7 	CALL SUBOPT_0x2B0
00855a 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
00855c 01fe     +MOVW R30 , R28
00855d 5dee     +SUBI R30 , LOW ( - 546 )
00855e 4ffd     +SBCI R31 , HIGH ( - 546 )
00855f 9001     +LD R0 , Z +
008560 81f0     +LD R31 , Z
008561 2de0     +MOV R30 , R0
                 	__GETW1SX 546
008562 9730      	SBIW R30,0
008563 f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
008564 e3e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
008565 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
008566 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
008567 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
008568 940e c042 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
00856a c04e      	RJMP _0x20E003F
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
00856b 940e cc72 	CALL SUBOPT_0x1F1
                +
00856d 01de     +MOVW R26 , R28
00856e 5da7     +SUBI R26 , LOW ( - 553 )
00856f 4fbd     +SBCI R27 , HIGH ( - 553 )
008570 900d     +LD R0 , X +
008571 91bc     +LD R27 , X
008572 2da0     +MOV R26 , R0
                 	__GETW2SX 553
008573 dc01      	RCALL _SD_openFile
008574 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
008575 2311      	TST  R17
008576 f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
008577 e6e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
008578 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
008579 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
00857a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
00857b 940e d1c7 	CALL SUBOPT_0x2B0
00857d 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
00857f efef      	LDI  R30,LOW(65535)
008580 efff      	LDI  R31,HIGH(65535)
008581 c039      	RJMP _0x20E003E
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
008582 e9e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
008583 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
008584 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
008585 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
008586 940e c042 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
008588 940e d1d1 	CALL SUBOPT_0x2B1
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
00858a 940e cc72 	CALL SUBOPT_0x1F1
00858c 940e d1b9 	CALL SUBOPT_0x2AE
                +
00858e 01fe     +MOVW R30 , R28
00858f 5de6     +SUBI R30 , LOW ( - 554 )
008590 4ffd     +SBCI R31 , HIGH ( - 554 )
008591 9001     +LD R0 , Z +
008592 81f0     +LD R31 , Z
008593 2de0     +MOV R30 , R0
                 	__GETW1SX 554
008594 93fa      	ST   -Y,R31
008595 93ea      	ST   -Y,R30
                +
008596 01de     +MOVW R26 , R28
008597 5da6     +SUBI R26 , LOW ( - 554 )
008598 4fbd     +SBCI R27 , HIGH ( - 554 )
008599 900d     +LD R0 , X +
00859a 91bc     +LD R27 , X
00859b 2da0     +MOV R26 , R0
                 	__GETW2SX 554
00859c 940e d12d 	CALL SUBOPT_0x29C
                 ; 0014 013D             if(res < 0)
00859e f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
00859f ebe9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
0085a0 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
0085a1 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
0085a2 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
0085a3 940e c042 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
0085a5 940e d1d1 	CALL SUBOPT_0x2B1
                 ; 0014 0141                 return -1;
0085a7 efef      	LDI  R30,LOW(65535)
0085a8 efff      	LDI  R31,HIGH(65535)
0085a9 c011      	RJMP _0x20E003E
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
0085aa 01de      	MOVW R26,R28
0085ab 9612      	ADIW R26,2
0085ac dc07      	RCALL _SD_closeFile
0085ad 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
0085ae 2311      	TST  R17
0085af f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
0085b0 eeed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
0085b1 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
0085b2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
0085b3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
0085b4 940e c042 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
0085b6 efef      	LDI  R30,LOW(65535)
0085b7 efff      	LDI  R31,HIGH(65535)
0085b8 c002      	RJMP _0x20E003E
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E003F:
0085b9 e0e1      	LDI  R30,LOW(1)
0085ba e0f0      	LDI  R31,HIGH(1)
                 _0x20E003E:
0085bb 8119      	LDD  R17,Y+1
0085bc 8108      	LDD  R16,Y+0
0085bd 96a9      	ADIW R28,41
0085be 5fde      	SUBI R29,-2
0085bf 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
0085c0 940e e0d2 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
0085c2 e020     +LDI R18 , LOW ( 0 )
0085c3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0085c4 e1e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
0085c5 e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
0085c6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
0085c7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
0085c8 940e c042 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
0085ca eae8      	LDI  R30,LOW(_LOGFILE_DATA)
0085cb e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
0085cc 940e c68d 	CALL SUBOPT_0xF6
0085ce 940e d1e1 	CALL SUBOPT_0x2B2
                 ; 0014 0159     if(res < 0)
0085d0 f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
0085d1 940e d1ec 	CALL SUBOPT_0x2B3
0085d3 940e c2cc 	CALL SUBOPT_0x5F
0085d5 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
0085d7 5021     +SUBI R18 , LOW ( 1 )
0085d8 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
0085d9 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0085da e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0085db 940e c68d 	CALL SUBOPT_0xF6
0085dd 940e d1e1 	CALL SUBOPT_0x2B2
                 ; 0014 0160     if(res < 0)
0085df f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0085e0 940e d1ec 	CALL SUBOPT_0x2B3
0085e2 940e c313 	CALL SUBOPT_0x6A
0085e4 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
0085e6 5021     +SUBI R18 , LOW ( 1 )
0085e7 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
0085e8 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0085e9 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0085ea 940e c68d 	CALL SUBOPT_0xF6
0085ec 940e ca45 	CALL SUBOPT_0x194
0085ee df36      	RCALL _LOG_createFile
0085ef 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
0085f0 2311      	TST  R17
0085f1 f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
0085f2 940e d1ec 	CALL SUBOPT_0x2B3
0085f4 940e d1f1 	CALL SUBOPT_0x2B4
0085f6 940e c0b8 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
0085f8 5021     +SUBI R18 , LOW ( 1 )
0085f9 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
0085fa 01f9      	MOVW R30,R18
0085fb 940e e0d9 	CALL __LOADLOCR4
0085fd 9624      	ADIW R28,4
0085fe 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
0085ff 940e cc7f 	CALL SUBOPT_0x1F4
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
008601 d0b1      	RCALL _findFreeSlotDataLogQueue
008602 2f0e      	MOV  R16,R30
008603 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
008604 2311      	TST  R17
008605 f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
008606 e5ec     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
008607 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
008608 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
008609 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
00860a 940e c042 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
00860c efef      	LDI  R30,LOW(65535)
00860d efff      	LDI  R31,HIGH(65535)
00860e c038      	RJMP _0x20E003D
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
00860f 940e c94d 	CALL SUBOPT_0x16D
008611 55e0      	SUBI R30,LOW(-_dataLogQueue)
008612 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
008613 85ac      	LDD  R26,Y+12
008614 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
008615 940e c94d 	CALL SUBOPT_0x16D
                +
008617 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008618 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
008619 940e c5d9 	CALL SUBOPT_0xD8
00861b 940e cf8e 	CALL SUBOPT_0x25B
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
00861d 940e c94d 	CALL SUBOPT_0x16D
                +
00861f 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
008620 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
008621 81ae      	LDD  R26,Y+6
008622 81bf      	LDD  R27,Y+6+1
008623 83a0      	STD  Z+0,R26
008624 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
008625 940e c94d 	CALL SUBOPT_0x16D
                +
008627 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008628 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008629 940e c4fb 	CALL SUBOPT_0xB4
00862b 940e cf8e 	CALL SUBOPT_0x25B
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
00862d 91e0 1a1e 	LDS  R30,_dataLogQCount
00862f 5fef      	SUBI R30,-LOW(1)
008630 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
008632 e9e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
008633 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
008634 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
008635 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
008636 940e e05b 	CALL __PUTPARD1
008638 89e8      	LDD  R30,Y+16
008639 940e c2f3 	CALL SUBOPT_0x65
00863b 01f8      	MOVW R30,R16
00863c 940e cf40 	CALL SUBOPT_0x250
00863e 91e0 1a1e 	LDS  R30,_dataLogQCount
008640 940e c2f3 	CALL SUBOPT_0x65
008642 940e c2f9 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
008644 91e0 1a1e 	LDS  R30,_dataLogQCount
008646 e0f0      	LDI  R31,0
                 _0x20E003D:
008647 8119      	LDD  R17,Y+1
008648 8108      	LDD  R16,Y+0
008649 962d      	ADIW R28,13
00864a 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
00864b 940e c3b3 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
00864d 91e0 1a1e 	LDS  R30,_dataLogQCount
00864f 30e0      	CPI  R30,0
008650 f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
008651 eeee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
008652 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
008653 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
008654 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
008655 940e c042 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
008657 c0f5      	RJMP _0x20E003B
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
008658 e000     +LDI R16 , LOW ( 0 )
008659 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
00865a 300a     +CPI R16 , LOW ( 10 )
00865b e0e0     +LDI R30 , HIGH ( 10 )
00865c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
00865d f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
00865e 940e c94d 	CALL SUBOPT_0x16D
008660 55e0      	SUBI R30,LOW(-_dataLogQueue)
008661 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
008662 81e0      	LD   R30,Z
008663 85a8      	LDD  R26,Y+8
008664 17ea      	CP   R30,R26
008665 f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
008666 940e c94d 	CALL SUBOPT_0x16D
                +
008668 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008669 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00866a 940e d1f7 	CALL SUBOPT_0x2B5
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
00866c 940e c94d 	CALL SUBOPT_0x16D
                +
00866e 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00866f 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
008670 01df      	MOVW R26,R30
008671 940e e027 	CALL __GETW1P
008673 81ac      	LDD  R26,Y+4
008674 81bd      	LDD  R27,Y+4+1
008675 93ed      	ST   X+,R30
008676 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
008677 940e c94d 	CALL SUBOPT_0x16D
                +
008679 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00867a 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00867b 01df      	MOVW R26,R30
00867c 940e e02b 	CALL __GETD1P
00867e 81aa      	LDD  R26,Y+2
00867f 81bb      	LDD  R27,Y+2+1
008680 940e e036 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
008682 01f8      	MOVW R30,R16
008683 c0cb      	RJMP _0x20E003A
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
008684 5f0f     +SUBI R16 , LOW ( - 1 )
008685 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008686 cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
008687 e1ee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
008688 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
008689 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
00868a e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
00868b c0bc      	RJMP _0x20E003C
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
00868c 93aa      	ST   -Y,R26
00868d 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
00868e e010      	LDI  R17,LOW(0)
                 _0x2A000A:
00868f 301a      	CPI  R17,10
008690 f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
008691 940e d1ff 	CALL SUBOPT_0x2B6
008693 81e0      	LD   R30,Z
008694 81a9      	LDD  R26,Y+1
008695 17ea      	CP   R30,R26
008696 f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
008697 940e d1ff 	CALL SUBOPT_0x2B6
008699 940e d205 	CALL SUBOPT_0x2B7
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
00869b 91e0 1a1e 	LDS  R30,_dataLogQCount
00869d 50e1      	SUBI R30,LOW(1)
00869e 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
0086a0 e5ee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
0086a1 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
0086a2 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
0086a3 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
0086a4 940e ccc1 	CALL SUBOPT_0x1FB
0086a6 940e ccc6 	CALL SUBOPT_0x1FC
                 ; 0015 004B             return dataLogQCount;
0086a8 91e0 1a1e 	LDS  R30,_dataLogQCount
0086aa e0f0      	LDI  R31,0
0086ab c0da      	RJMP _0x20E0038
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
0086ac 5f1f      	SUBI R17,-1
0086ad cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
0086ae ebe3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
0086af e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
0086b0 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
0086b1 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
0086b2 c0cc      	RJMP _0x20E0039
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
0086b3 931a      	ST   -Y,R17
                 ;	i -> R17
0086b4 e010      	LDI  R17,LOW(0)
                 _0x2A000E:
0086b5 301a      	CPI  R17,10
0086b6 f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
0086b7 940e d1ff 	CALL SUBOPT_0x2B6
0086b9 81e0      	LD   R30,Z
0086ba 30e0      	CPI  R30,0
0086bb f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
0086bc 2fe1      	MOV  R30,R17
0086bd c0ea      	RJMP _0x20E0037
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
0086be 5f1f      	SUBI R17,-1
0086bf cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
0086c0 efef      	LDI  R30,LOW(255)
0086c1 c0e6      	RJMP _0x20E0037
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
0086c2 931a      	ST   -Y,R17
                 ;	i -> R17
0086c3 e010      	LDI  R17,LOW(0)
                 _0x2A0012:
0086c4 301a      	CPI  R17,10
0086c5 f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
0086c6 940e d1ff 	CALL SUBOPT_0x2B6
0086c8 940e d205 	CALL SUBOPT_0x2B7
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
0086ca 5f1f      	SUBI R17,-1
0086cb cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
0086cc c0db      	RJMP _0x20E0037
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
0086cd 93aa      	ST   -Y,R26
0086ce 931a      	ST   -Y,R17
0086cf 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
0086d0 d0b8      	RCALL _findFreeSlotEventLogQueue
0086d1 2f0e      	MOV  R16,R30
0086d2 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
0086d3 2311      	TST  R17
0086d4 f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
0086d5 efe5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
0086d6 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
0086d7 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
0086d8 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
0086d9 940e c042 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
0086db c071      	RJMP _0x20E003B
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
0086dc 940e d220 	CALL SUBOPT_0x2B8
0086de 5ded      	SUBI R30,LOW(-_eventLogQueue)
0086df 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0086e0 85a8      	LDD  R26,Y+8
0086e1 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
0086e2 940e d220 	CALL SUBOPT_0x2B8
                +
0086e4 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0086e5 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0086e6 940e c4c2 	CALL SUBOPT_0xA9
0086e8 940e cf8e 	CALL SUBOPT_0x25B
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
0086ea 940e d220 	CALL SUBOPT_0x2B8
                +
0086ec 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0086ed 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0086ee 81ab      	LDD  R26,Y+3
0086ef 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
0086f0 940e d220 	CALL SUBOPT_0x2B8
                +
0086f2 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0086f3 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0086f4 81aa      	LDD  R26,Y+2
0086f5 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
0086f6 91e0 19af 	LDS  R30,_eventLogQCount
0086f8 5fef      	SUBI R30,-LOW(1)
0086f9 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
0086fb e2ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
0086fc e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
0086fd e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
0086fe e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
0086ff 940e cc89 	CALL SUBOPT_0x1F6
008701 01f8      	MOVW R30,R16
008702 940e cf40 	CALL SUBOPT_0x250
008704 91e0 19af 	LDS  R30,_eventLogQCount
008706 940e c2f3 	CALL SUBOPT_0x65
008708 940e c2f9 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
00870a 91e0 19af 	LDS  R30,_eventLogQCount
00870c e0f0      	LDI  R31,0
00870d c041      	RJMP _0x20E003A
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
00870e 940e c3b3 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
008710 91e0 19af 	LDS  R30,_eventLogQCount
008712 30e0      	CPI  R30,0
008713 f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
008714 e8e9     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
008715 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
008716 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
008717 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
008718 940e c042 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
00871a c032      	RJMP _0x20E003B
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
00871b e000     +LDI R16 , LOW ( 0 )
00871c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
00871d 3104     +CPI R16 , LOW ( 20 )
00871e e0e0     +LDI R30 , HIGH ( 20 )
00871f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
008720 f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
008721 940e d220 	CALL SUBOPT_0x2B8
008723 5ded      	SUBI R30,LOW(-_eventLogQueue)
008724 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
008725 81e0      	LD   R30,Z
008726 85a8      	LDD  R26,Y+8
008727 17ea      	CP   R30,R26
008728 f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
008729 940e d220 	CALL SUBOPT_0x2B8
                +
00872b 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00872c 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00872d 940e d1f7 	CALL SUBOPT_0x2B5
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
00872f 940e d220 	CALL SUBOPT_0x2B8
                +
008731 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
008732 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
008733 81e0      	LD   R30,Z
008734 81ac      	LDD  R26,Y+4
008735 81bd      	LDD  R27,Y+4+1
008736 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
008737 940e d220 	CALL SUBOPT_0x2B8
                +
008739 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00873a 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00873b 81e0      	LD   R30,Z
00873c 81aa      	LDD  R26,Y+2
00873d 81bb      	LDD  R27,Y+2+1
00873e 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
00873f 01f8      	MOVW R30,R16
008740 c00e      	RJMP _0x20E003A
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
008741 5f0f     +SUBI R16 , LOW ( - 1 )
008742 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008743 cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
008744 ebeb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
008745 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
008746 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
008747 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003C:
008748 940e e05b 	CALL __PUTPARD1
00874a 85ec      	LDD  R30,Y+12
00874b 940e c156 	CALL SUBOPT_0x29
                 ; 0015 0099     return -1;
                 _0x20E003B:
00874d efef      	LDI  R30,LOW(65535)
00874e efff      	LDI  R31,HIGH(65535)
                 _0x20E003A:
00874f 8119      	LDD  R17,Y+1
008750 8108      	LDD  R16,Y+0
008751 9629      	ADIW R28,9
008752 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
008753 93aa      	ST   -Y,R26
008754 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
008755 e010      	LDI  R17,LOW(0)
                 _0x2A001B:
008756 3114      	CPI  R17,20
008757 f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
008758 940e d226 	CALL SUBOPT_0x2B9
00875a 81e0      	LD   R30,Z
00875b 81a9      	LDD  R26,Y+1
00875c 17ea      	CP   R30,R26
00875d f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
00875e 940e d226 	CALL SUBOPT_0x2B9
008760 940e d22c 	CALL SUBOPT_0x2BA
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
008762 940e d232 	CALL SUBOPT_0x2BB
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
008764 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008765 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008766 e0a0      	LDI  R26,LOW(0)
008767 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
008768 91e0 19af 	LDS  R30,_eventLogQCount
00876a 50e1      	SUBI R30,LOW(1)
00876b 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
00876d efed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
00876e e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
00876f e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
008770 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
008771 940e ccc1 	CALL SUBOPT_0x1FB
008773 940e ccc6 	CALL SUBOPT_0x1FC
                 ; 0015 00AA             return eventLogQCount;
008775 91e0 19af 	LDS  R30,_eventLogQCount
008777 e0f0      	LDI  R31,0
008778 c00d      	RJMP _0x20E0038
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
008779 5f1f      	SUBI R17,-1
00877a cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
00877b e5e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
00877c e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
00877d e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
00877e e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E0039:
00877f 940e e05b 	CALL __PUTPARD1
008781 81ed      	LDD  R30,Y+5
008782 940e c156 	CALL SUBOPT_0x29
                 ; 0015 00AE     return -1;
008784 efef      	LDI  R30,LOW(65535)
008785 efff      	LDI  R31,HIGH(65535)
                 _0x20E0038:
008786 8118      	LDD  R17,Y+0
008787 9622      	ADIW R28,2
008788 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
008789 931a      	ST   -Y,R17
                 ;	i -> R17
00878a e010      	LDI  R17,LOW(0)
                 _0x2A001F:
00878b 3114      	CPI  R17,20
00878c f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
00878d 940e d226 	CALL SUBOPT_0x2B9
00878f 81e0      	LD   R30,Z
008790 30e0      	CPI  R30,0
008791 f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
008792 2fe1      	MOV  R30,R17
008793 c014      	RJMP _0x20E0037
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
008794 5f1f      	SUBI R17,-1
008795 cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
008796 efef      	LDI  R30,LOW(255)
008797 c010      	RJMP _0x20E0037
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
008798 931a      	ST   -Y,R17
                 ;	i -> R17
008799 e010      	LDI  R17,LOW(0)
                 _0x2A0023:
00879a 3114      	CPI  R17,20
00879b f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
00879c 940e d226 	CALL SUBOPT_0x2B9
00879e 940e d22c 	CALL SUBOPT_0x2BA
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
0087a0 940e d232 	CALL SUBOPT_0x2BB
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
0087a2 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0087a3 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0087a4 e0a0      	LDI  R26,LOW(0)
0087a5 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
0087a6 5f1f      	SUBI R17,-1
0087a7 cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0037:
0087a8 9119      	LD   R17,Y+
0087a9 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
0087aa 93aa      	ST   -Y,R26
0087ab 97ef      	SBIW R28,63
0087ac 9761      	SBIW R28,17
0087ad e48e      	LDI  R24,78
0087ae e0a0      	LDI  R26,LOW(0)
0087af e0b0      	LDI  R27,HIGH(0)
0087b0 e9e6      	LDI  R30,LOW(_0x2C0003*2)
0087b1 e5fd      	LDI  R31,HIGH(_0x2C0003*2)
0087b2 e060      	LDI  R22,BYTE3(_0x2C0003*2)
0087b3 940e e0de 	CALL __INITLOCB
0087b5 940e e0d0 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
0087b7 91e0 14df 	LDS  R30,_currentPage
0087b9 30e0      	CPI  R30,0
0087ba f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
0087bb 01de     +MOVW R26 , R28
0087bc 5aaa     +SUBI R26 , LOW ( - 86 )
0087bd 4fbf     +SBCI R27 , HIGH ( - 86 )
0087be 91ac     +LD R26 , X
                 	__GETB2SX 86
0087bf 30a1      	CPI  R26,LOW(0x1)
0087c0 f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
0087c1 940e d23d 	CALL SUBOPT_0x2BC
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
0087c3 940c 9730 	JMP  _0x2C0006
                 _0x2C0004:
0087c5 91a0 14df 	LDS  R26,_currentPage
0087c7 30a1      	CPI  R26,LOW(0x1)
0087c8 f011      	BREQ PC+3
0087c9 940c 8825 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
0087cb 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
0087cd f409      	BRNE _0x2C000B
0087ce c04b      	RJMP _0x2C02B4
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
0087cf 30e2      	CPI  R30,LOW(0x2)
0087d0 e0a0      	LDI  R26,HIGH(0x2)
0087d1 07fa      	CPC  R31,R26
0087d2 f449      	BRNE _0x2C000C
0087d3 940e d255 	CALL SUBOPT_0x2BE
0087d5 f41c      	BRGE _0x2C000D
0087d6 e0e3      	LDI  R30,LOW(3)
0087d7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
0087d9 940e d25c 	CALL SUBOPT_0x2BF
0087db c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
0087dc 30e3      	CPI  R30,LOW(0x3)
0087dd e0a0      	LDI  R26,HIGH(0x3)
0087de 07fa      	CPC  R31,R26
0087df f451      	BRNE _0x2C000E
0087e0 940e d269 	CALL SUBOPT_0x2C0
0087e2 30a4      	CPI  R26,LOW(0x4)
0087e3 f01c      	BRLT _0x2C000F
0087e4 e0e0      	LDI  R30,LOW(0)
0087e5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
0087e7 940e d25c 	CALL SUBOPT_0x2BF
0087e9 c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
0087ea 30e4      	CPI  R30,LOW(0x4)
0087eb e0a0      	LDI  R26,HIGH(0x4)
0087ec 07fa      	CPC  R31,R26
0087ed f5a9      	BRNE _0x2C000A
0087ee 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0087f0 30e0      	CPI  R30,0
0087f1 f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
0087f2 940e d26f 	CALL SUBOPT_0x2C1
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
0087f4 c02e      	RJMP _0x2C0012
                 _0x2C0011:
0087f5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0087f7 30a1      	CPI  R26,LOW(0x1)
0087f8 f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
0087f9 e0ee      	LDI  R30,LOW(14)
0087fa 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
0087fc 940e d288 	CALL SUBOPT_0x2C3
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
0087fe c024      	RJMP _0x2C0014
                 _0x2C0013:
0087ff 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008801 30a2      	CPI  R26,LOW(0x2)
008802 f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
008803 e1e1      	LDI  R30,LOW(17)
008804 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
008806 940e d295 	CALL SUBOPT_0x2C4
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
008808 c01a      	RJMP _0x2C0016
                 _0x2C0015:
008809 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00880b 30a3      	CPI  R26,LOW(0x3)
00880c f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
00880d e2e2      	LDI  R30,LOW(34)
00880e 940e d2a2 	CALL SUBOPT_0x2C5
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
008810 e0e1      	LDI  R30,LOW(1)
008811 940e d2a8 	CALL SUBOPT_0x2C6
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
008813 940e d2b2 	CALL SUBOPT_0x2C7
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
008815 e1e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
008816 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
008817 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
008818 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
008819 c005      	RJMP _0x2C02B5
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C02B4:
00881a e0e0      	LDI  R30,LOW(0)
00881b 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
00881d 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02B5:
00881f 940e e05b 	CALL __PUTPARD1
008821 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
008823 940c 9730 	JMP  _0x2C0019
                 _0x2C0007:
008825 91a0 14df 	LDS  R26,_currentPage
008827 30a2      	CPI  R26,LOW(0x2)
008828 f011      	BREQ PC+3
008829 940c 8874 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
00882b 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
00882d f419      	BRNE _0x2C001E
00882e 940e d23d 	CALL SUBOPT_0x2BC
008830 c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
008831 30e2      	CPI  R30,LOW(0x2)
008832 e0a0      	LDI  R26,HIGH(0x2)
008833 07fa      	CPC  R31,R26
008834 f449      	BRNE _0x2C001F
008835 940e d255 	CALL SUBOPT_0x2BE
008837 f41c      	BRGE _0x2C0020
008838 e0e1      	LDI  R30,LOW(1)
008839 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
00883b 940e d25c 	CALL SUBOPT_0x2BF
00883d c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
00883e 30e3      	CPI  R30,LOW(0x3)
00883f e0a0      	LDI  R26,HIGH(0x3)
008840 07fa      	CPC  R31,R26
008841 f451      	BRNE _0x2C0021
008842 940e d269 	CALL SUBOPT_0x2C0
008844 30a2      	CPI  R26,LOW(0x2)
008845 f01c      	BRLT _0x2C0022
008846 e0e0      	LDI  R30,LOW(0)
008847 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
008849 940e d25c 	CALL SUBOPT_0x2BF
00884b c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
00884c 30e4      	CPI  R30,LOW(0x4)
00884d e0a0      	LDI  R26,HIGH(0x4)
00884e 07fa      	CPC  R31,R26
00884f f511      	BRNE _0x2C001D
008850 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008852 30e0      	CPI  R30,0
008853 f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
008854 e0e3      	LDI  R30,LOW(3)
008855 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
008857 940e d2bd 	CALL SUBOPT_0x2C9
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
008859 c018      	RJMP _0x2C0025
                 _0x2C0024:
00885a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00885c 30a1      	CPI  R26,LOW(0x1)
00885d f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
00885e e2e1      	LDI  R30,LOW(33)
00885f 940e d2ca 	CALL SUBOPT_0x2CA
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
008861 e0e2      	LDI  R30,LOW(2)
008862 940e d2a8 	CALL SUBOPT_0x2C6
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
008864 940e d2b2 	CALL SUBOPT_0x2C7
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
008866 940e d2d0 	CALL SUBOPT_0x2CB
008868 c005      	RJMP _0x2C02B6
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
008869 e0e0      	LDI  R30,LOW(0)
00886a 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
00886c 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02B6:
00886e 940e e05b 	CALL __PUTPARD1
008870 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
008872 940c 9730 	JMP  _0x2C0028
                 _0x2C001A:
008874 91a0 14df 	LDS  R26,_currentPage
008876 30a3      	CPI  R26,LOW(0x3)
008877 f011      	BREQ PC+3
008878 940c 8a59 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
00887a 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
00887c f419      	BRNE _0x2C002D
00887d 940e d26f 	CALL SUBOPT_0x2C1
00887f c1d7      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
008880 30e2      	CPI  R30,LOW(0x2)
008881 e0a0      	LDI  R26,HIGH(0x2)
008882 07fa      	CPC  R31,R26
008883 f449      	BRNE _0x2C002E
008884 940e d255 	CALL SUBOPT_0x2BE
008886 f41c      	BRGE _0x2C002F
008887 e0e2      	LDI  R30,LOW(2)
008888 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
00888a 940e d25c 	CALL SUBOPT_0x2BF
00888c c1ca      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
00888d 30e3      	CPI  R30,LOW(0x3)
00888e e0a0      	LDI  R26,HIGH(0x3)
00888f 07fa      	CPC  R31,R26
008890 f451      	BRNE _0x2C0030
008891 940e d269 	CALL SUBOPT_0x2C0
008893 30a3      	CPI  R26,LOW(0x3)
008894 f01c      	BRLT _0x2C0031
008895 e0e0      	LDI  R30,LOW(0)
008896 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
008898 940e d25c 	CALL SUBOPT_0x2BF
00889a c1bc      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
00889b 30e4      	CPI  R30,LOW(0x4)
00889c e0a0      	LDI  R26,HIGH(0x4)
00889d 07fa      	CPC  R31,R26
00889e f011      	BREQ PC+3
00889f 940c 8a57 	JMP _0x2C002C
0088a1 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0088a3 30e0      	CPI  R30,0
0088a4 f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
0088a5 e0e4      	LDI  R30,LOW(4)
0088a6 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
0088a8 e2e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
0088a9 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
0088aa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
0088ab e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
0088ac 940e d2d5 	CALL SUBOPT_0x2CC
                +
0088ae eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
0088af e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
0088b0 940e c1a4 	CALL SUBOPT_0x34
                +
0088b2 e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
0088b3 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
0088b4 940e c1a4 	CALL SUBOPT_0x34
0088b6 940e c2f9 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
0088b8 e3e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
0088b9 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
0088ba e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
0088bb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
0088bc 940e d2d5 	CALL SUBOPT_0x2CC
                +
0088be eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
0088bf e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
0088c0 940e c1a4 	CALL SUBOPT_0x34
                +
0088c2 e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
0088c3 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
0088c4 940e c1a4 	CALL SUBOPT_0x34
0088c6 e08c      	LDI  R24,12
0088c7 940e 7f9f 	CALL _printOLED
0088c9 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
0088ca c18c      	RJMP _0x2C0034
                 _0x2C0033:
0088cb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0088cd 30a1      	CPI  R26,LOW(0x1)
0088ce f011      	BREQ PC+3
0088cf 940c 897d 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
0088d1 e0e5      	LDI  R30,LOW(5)
0088d2 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
0088d4 01fe      	MOVW R30,R28
0088d5 9638      	ADIW R30,8
0088d6 940e c68d 	CALL SUBOPT_0xF6
0088d8 940e d2db 	CALL SUBOPT_0x2CD
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
0088da 940e d2ee 	CALL SUBOPT_0x2CE
0088dc 940e c4a6 	CALL SUBOPT_0xA3
0088de 940e a59f 	CALL _memset
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
0088e0 91a0 11b6 	LDS  R26,_operating_config
0088e2 31a0      	CPI  R26,LOW(0x10)
0088e3 f439      	BRNE _0x2C0036
0088e4 940e d2f2 	CALL SUBOPT_0x2CF
                +
0088e6 e4e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
0088e7 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
0088e8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
0088e9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
0088ea c011      	RJMP _0x2C02B7
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
0088eb 91a0 11b6 	LDS  R26,_operating_config
0088ed 32a0      	CPI  R26,LOW(0x20)
0088ee f439      	BRNE _0x2C0038
0088ef 940e d2f2 	CALL SUBOPT_0x2CF
                +
0088f1 e4ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
0088f2 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
0088f3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
0088f4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
0088f5 c006      	RJMP _0x2C02B7
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
0088f6 940e d2f2 	CALL SUBOPT_0x2CF
                +
0088f8 e5e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
0088f9 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
0088fa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
0088fb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C02B7:
0088fc 940e e05b 	CALL __PUTPARD1
0088fe 940e d2f7 	CALL SUBOPT_0x2D0
                 ; 0016 00A0                                 strcat(cmd,str);
008900 940e d2fc 	CALL SUBOPT_0x2D1
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
008902 940e c4a6 	CALL SUBOPT_0xA3
008904 940e a59f 	CALL _memset
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
008906 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
008908 30a1      	CPI  R26,LOW(0x1)
008909 f439      	BRNE _0x2C003A
00890a 940e d2f2 	CALL SUBOPT_0x2CF
                +
00890c e6e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
00890d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
00890e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
00890f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
008910 c006      	RJMP _0x2C02B8
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
008911 940e d2f2 	CALL SUBOPT_0x2CF
                +
008913 e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
008914 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
008915 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
008916 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B8:
008917 940e e05b 	CALL __PUTPARD1
008919 940e d2f7 	CALL SUBOPT_0x2D0
                 ; 0016 00A5                                 strcat(cmd,str);
00891b 940e d2fc 	CALL SUBOPT_0x2D1
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
00891d 940e c4a6 	CALL SUBOPT_0xA3
00891f 940e a59f 	CALL _memset
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
008921 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
008923 30a1      	CPI  R26,LOW(0x1)
008924 f439      	BRNE _0x2C003C
008925 940e d2f2 	CALL SUBOPT_0x2CF
                +
008927 e6e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
008928 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
008929 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
00892a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
00892b c006      	RJMP _0x2C02B9
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
00892c 940e d2f2 	CALL SUBOPT_0x2CF
                +
00892e e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
00892f e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
008930 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
008931 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B9:
008932 940e e05b 	CALL __PUTPARD1
008934 940e d2f7 	CALL SUBOPT_0x2D0
                 ; 0016 00AA                                 strcat(cmd,str);
008936 940e d2fc 	CALL SUBOPT_0x2D1
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
008938 940e c4a6 	CALL SUBOPT_0xA3
00893a 940e a59f 	CALL _memset
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
00893c e000     +LDI R16 , LOW ( 0 )
00893d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00893e e020     +LDI R18 , LOW ( 0 )
00893f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
008940 3005     +CPI R16 , LOW ( 5 )
008941 e0e0     +LDI R30 , HIGH ( 5 )
008942 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008943 f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
008944 940e d305 	CALL SUBOPT_0x2D2
008946 81a0      	LD   R26,Z
008947 30a1      	CPI  R26,LOW(0x1)
008948 f421      	BRNE _0x2C0041
008949 940e d30a 	CALL SUBOPT_0x2D3
00894b e4e5      	LDI  R30,LOW(69)
00894c c003      	RJMP _0x2C02BA
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
00894d 940e d30a 	CALL SUBOPT_0x2D3
00894f e4e4      	LDI  R30,LOW(68)
                 _0x2C02BA:
008950 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
008951 3004     +CPI R16 , LOW ( 4 )
008952 e0e0     +LDI R30 , HIGH ( 4 )
008953 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
008954 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
008955 940e d30a 	CALL SUBOPT_0x2D3
008957 e2ef      	LDI  R30,LOW(47)
008958 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
008959 5f0f     +SUBI R16 , LOW ( - 1 )
00895a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00895b cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
00895c 940e d30a 	CALL SUBOPT_0x2D3
00895e e2ec      	LDI  R30,LOW(44)
00895f 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
008960 940e d30a 	CALL SUBOPT_0x2D3
008962 e0e0      	LDI  R30,LOW(0)
008963 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
008964 01fe      	MOVW R30,R28
008965 9638      	ADIW R30,8
008966 93fa      	ST   -Y,R31
008967 93ea      	ST   -Y,R30
008968 01de      	MOVW R26,R28
008969 96dc      	ADIW R26,60
00896a 940e a5af 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
00896c e7e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
00896d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
00896e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
00896f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
008970 940e d312 	CALL SUBOPT_0x2D4
008972 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
008974 e8e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
008975 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
008976 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
008977 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
008978 940e d312 	CALL SUBOPT_0x2D4
00897a 940e d092 	CALL SUBOPT_0x284
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
00897c c0da      	RJMP _0x2C0044
                 _0x2C0035:
00897d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00897f 30a2      	CPI  R26,LOW(0x2)
008980 f011      	BREQ PC+3
008981 940c 8a50 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
008983 01fe      	MOVW R30,R28
008984 9638      	ADIW R30,8
008985 940e c68d 	CALL SUBOPT_0xF6
008987 940e d2db 	CALL SUBOPT_0x2CD
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
008989 e4a5      	LDI  R26,LOW(325)
00898a e0b1      	LDI  R27,HIGH(325)
00898b 940e a51d 	CALL _malloc
                +
00898d 01de     +MOVW R26 , R28
00898e 5aac     +SUBI R26 , LOW ( - 84 )
00898f 4fbf     +SBCI R27 , HIGH ( - 84 )
008990 93ed     +ST X + , R30
008991 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
008992 940e d318 	CALL SUBOPT_0x2D5
008994 9730      	SBIW R30,0
008995 f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
008996 e8ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
008997 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
008998 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
008999 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
00899a 940e c042 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
00899c 940e d26f 	CALL SUBOPT_0x2C1
00899e c0b8      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
00899f 940e d318 	CALL SUBOPT_0x2D5
0089a1 93fa      	ST   -Y,R31
0089a2 93ea      	ST   -Y,R30
0089a3 01de      	MOVW R26,R28
0089a4 5aac      	SUBI R26,LOW(-(84))
0089a5 4fbf      	SBCI R27,HIGH(-(84))
0089a6 940e 5e9f 	CALL _ETH_getConfig
0089a8 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
0089a9 2355      	TST  R21
0089aa f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
0089ab ebee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
0089ac e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
0089ad e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
0089ae e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
0089af c02c      	RJMP _0x2C02BB
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
0089b0 eee9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
0089b1 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
0089b2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
0089b3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
0089b4 940e c042 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
0089b6 e1e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
0089b7 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
0089b8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
0089b9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
0089ba 940e e05b 	CALL __PUTPARD1
                +
0089bc 01fe     +MOVW R30 , R28
0089bd 5aea     +SUBI R30 , LOW ( - 86 )
0089be 4fff     +SBCI R31 , HIGH ( - 86 )
0089bf 9001     +LD R0 , Z +
0089c0 81f0     +LD R31 , Z
0089c1 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0089c2 940e c1a4 	CALL SUBOPT_0x34
0089c4 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
0089c6 e000     +LDI R16 , LOW ( 0 )
0089c7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
0089c8 940e d31f 	CALL SUBOPT_0x2D6
0089ca 170e      	CP   R16,R30
0089cb 071f      	CPC  R17,R31
0089cc f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
0089cd 01f8      	MOVW R30,R16
0089ce 940e d326 	CALL SUBOPT_0x2D7
0089d0 0fae      	ADD  R26,R30
0089d1 1fbf      	ADC  R27,R31
0089d2 91ac      	LD   R26,X
0089d3 940e 4127 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
0089d5 5f0f     +SUBI R16 , LOW ( - 1 )
0089d6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0089d7 cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
0089d8 ebeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
0089d9 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
0089da e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
0089db e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C02BB:
0089dc 940e e05b 	CALL __PUTPARD1
0089de 940e c1ad 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
0089e0 940e d318 	CALL SUBOPT_0x2D5
0089e2 93fa      	ST   -Y,R31
0089e3 93ea      	ST   -Y,R30
0089e4 940e d32d 	CALL SUBOPT_0x2D8
0089e6 940e 9956 	CALL _getNetworkInfo
0089e8 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
0089e9 2355      	TST  R21
0089ea f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
0089eb e3ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
0089ec e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
0089ed e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
0089ee e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
0089ef 940e c042 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
0089f1 940e e0d7 	CALL __LOADLOCR6
0089f3 96ef      	ADIW R28,63
0089f4 9668      	ADIW R28,24
0089f5 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
0089f6 e0e6      	LDI  R30,LOW(6)
0089f7 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
0089f9 e6e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
0089fa e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
0089fb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
0089fc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
0089fd 940e d33c 	CALL SUBOPT_0x2D9
0089ff 940e d350 	CALL SUBOPT_0x2DA
008a01 940e d362 	CALL SUBOPT_0x2DB
008a03 940e d374 	CALL SUBOPT_0x2DC
008a05 940e d386 	CALL SUBOPT_0x2DD
008a07 940e d398 	CALL SUBOPT_0x2DE
008a09 940e d3aa 	CALL SUBOPT_0x2DF
008a0b 940e d3bc 	CALL SUBOPT_0x2E0
008a0d 940e d3ce 	CALL SUBOPT_0x2E1
008a0f 940e d3e0 	CALL SUBOPT_0x2E2
008a11 940e d3f2 	CALL SUBOPT_0x2E3
008a13 940e d404 	CALL SUBOPT_0x2E4
008a15 940e d416 	CALL SUBOPT_0x2E5
008a17 940e d428 	CALL SUBOPT_0x2E6
008a19 940e d43a 	CALL SUBOPT_0x2E7
008a1b 940e d44c 	CALL SUBOPT_0x2E8
008a1d e480      	LDI  R24,64
008a1e 940e 9e24 	CALL _printDebug
008a20 96ef      	ADIW R28,63
008a21 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008a22 eaed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
008a23 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
008a24 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
008a25 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
008a26 940e d33c 	CALL SUBOPT_0x2D9
008a28 940e d350 	CALL SUBOPT_0x2DA
008a2a 940e d362 	CALL SUBOPT_0x2DB
008a2c 940e d374 	CALL SUBOPT_0x2DC
008a2e 940e d386 	CALL SUBOPT_0x2DD
008a30 940e d398 	CALL SUBOPT_0x2DE
008a32 940e d3aa 	CALL SUBOPT_0x2DF
008a34 940e d3bc 	CALL SUBOPT_0x2E0
008a36 940e d3ce 	CALL SUBOPT_0x2E1
008a38 940e d3e0 	CALL SUBOPT_0x2E2
008a3a 940e d3f2 	CALL SUBOPT_0x2E3
008a3c 940e d404 	CALL SUBOPT_0x2E4
008a3e 940e d416 	CALL SUBOPT_0x2E5
008a40 940e d428 	CALL SUBOPT_0x2E6
008a42 940e d43a 	CALL SUBOPT_0x2E7
008a44 940e d44c 	CALL SUBOPT_0x2E8
008a46 e480      	LDI  R24,64
008a47 940e 7f9f 	CALL _printOLED
008a49 96ef      	ADIW R28,63
008a4a 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008a4b 940e d326 	CALL SUBOPT_0x2D7
008a4d 940e a538 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
008a4f c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
008a50 e0e0      	LDI  R30,LOW(0)
008a51 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
008a53 940e d2b8 	CALL SUBOPT_0x2C8
008a55 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
008a57 940c 9730 	JMP  _0x2C004E
                 _0x2C0029:
008a59 91a0 14df 	LDS  R26,_currentPage
008a5b 30a4      	CPI  R26,LOW(0x4)
008a5c f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008a5d 940e d461 	CALL SUBOPT_0x2EA
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
008a5f f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
008a60 30e3      	CPI  R30,LOW(0x3)
008a61 e0a0      	LDI  R26,HIGH(0x3)
008a62 07fa      	CPC  R31,R26
008a63 f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
008a64 30e1      	CPI  R30,LOW(0x1)
008a65 e0a0      	LDI  R26,HIGH(0x1)
008a66 07fa      	CPC  R31,R26
008a67 f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008a68 30e4      	CPI  R30,LOW(0x4)
008a69 e0a0      	LDI  R26,HIGH(0x4)
008a6a 07fa      	CPC  R31,R26
008a6b f429      	BRNE _0x2C0052
                 _0x2C0056:
008a6c e0e3      	LDI  R30,LOW(3)
008a6d 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
008a6f 940e d2bd 	CALL SUBOPT_0x2C9
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
008a71 940c 9730 	JMP  _0x2C0058
                 _0x2C004F:
008a73 91a0 14df 	LDS  R26,_currentPage
008a75 30a5      	CPI  R26,LOW(0x5)
008a76 f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
008a77 940e d461 	CALL SUBOPT_0x2EA
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
008a79 f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
008a7a 30e3      	CPI  R30,LOW(0x3)
008a7b e0a0      	LDI  R26,HIGH(0x3)
008a7c 07fa      	CPC  R31,R26
008a7d f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
008a7e 30e1      	CPI  R30,LOW(0x1)
008a7f e0a0      	LDI  R26,HIGH(0x1)
008a80 07fa      	CPC  R31,R26
008a81 f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008a82 30e4      	CPI  R30,LOW(0x4)
008a83 e0a0      	LDI  R26,HIGH(0x4)
008a84 07fa      	CPC  R31,R26
008a85 f429      	BRNE _0x2C005C
                 _0x2C0060:
008a86 e0e3      	LDI  R30,LOW(3)
008a87 940e d46a 	CALL SUBOPT_0x2EB
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
008a89 940e d2bd 	CALL SUBOPT_0x2C9
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
008a8b 940c 9730 	JMP  _0x2C0062
                 _0x2C0059:
008a8d 91a0 14df 	LDS  R26,_currentPage
008a8f 30a6      	CPI  R26,LOW(0x6)
008a90 f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
008a91 940e d461 	CALL SUBOPT_0x2EA
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
008a93 f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
008a94 30e3      	CPI  R30,LOW(0x3)
008a95 e0a0      	LDI  R26,HIGH(0x3)
008a96 07fa      	CPC  R31,R26
008a97 f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
008a98 30e1      	CPI  R30,LOW(0x1)
008a99 e0a0      	LDI  R26,HIGH(0x1)
008a9a 07fa      	CPC  R31,R26
008a9b f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008a9c 30e4      	CPI  R30,LOW(0x4)
008a9d e0a0      	LDI  R26,HIGH(0x4)
008a9e 07fa      	CPC  R31,R26
008a9f f429      	BRNE _0x2C0066
                 _0x2C006A:
008aa0 e0e3      	LDI  R30,LOW(3)
008aa1 940e d470 	CALL SUBOPT_0x2EC
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
008aa3 940e d2bd 	CALL SUBOPT_0x2C9
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
008aa5 940c 9730 	JMP  _0x2C006C
                 _0x2C0063:
008aa7 91a0 14df 	LDS  R26,_currentPage
008aa9 30a7      	CPI  R26,LOW(0x7)
008aaa f011      	BREQ PC+3
008aab 940c 8b31 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
008aad 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
008aaf f441      	BRNE _0x2C0071
008ab0 e0e2      	LDI  R30,LOW(2)
008ab1 940e d46a 	CALL SUBOPT_0x2EB
008ab3 940e d476 	CALL SUBOPT_0x2ED
008ab5 940e d47b 	CALL SUBOPT_0x2EE
008ab7 c077      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
008ab8 30e2      	CPI  R30,LOW(0x2)
008ab9 e0a0      	LDI  R26,HIGH(0x2)
008aba 07fa      	CPC  R31,R26
008abb f449      	BRNE _0x2C0072
008abc 940e d255 	CALL SUBOPT_0x2BE
008abe f41c      	BRGE _0x2C0073
008abf e0e1      	LDI  R30,LOW(1)
008ac0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
008ac2 940e d25c 	CALL SUBOPT_0x2BF
008ac4 c06a      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
008ac5 30e3      	CPI  R30,LOW(0x3)
008ac6 e0a0      	LDI  R26,HIGH(0x3)
008ac7 07fa      	CPC  R31,R26
008ac8 f451      	BRNE _0x2C0074
008ac9 940e d269 	CALL SUBOPT_0x2C0
008acb 30a2      	CPI  R26,LOW(0x2)
008acc f01c      	BRLT _0x2C0075
008acd e0e0      	LDI  R30,LOW(0)
008ace 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
008ad0 940e d25c 	CALL SUBOPT_0x2BF
008ad2 c05c      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
008ad3 30e4      	CPI  R30,LOW(0x4)
008ad4 e0a0      	LDI  R26,HIGH(0x4)
008ad5 07fa      	CPC  R31,R26
008ad6 f011      	BREQ PC+3
008ad7 940c 8b2f 	JMP _0x2C0070
008ad9 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008adb 30e0      	CPI  R30,0
008adc f561      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
008add e0e8      	LDI  R30,LOW(8)
008ade 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
008ae0 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
008ae2 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
008ae4 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
008ae6 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
008ae8 eee0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
008ae9 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
008aea e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
008aeb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
008aec 940e d484 	CALL SUBOPT_0x2EF
008aee 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008af0 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
008af2 940e d48a 	CALL SUBOPT_0x2F0
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
008af4 e0ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
008af5 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
008af6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
008af7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
008af8 940e d484 	CALL SUBOPT_0x2EF
008afa 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
008afc e1e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
008afd e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
008afe e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
008aff e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
008b00 940e e05b 	CALL __PUTPARD1
008b02 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b04 940e c2f3 	CALL SUBOPT_0x65
008b06 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
008b08 c026      	RJMP _0x2C0078
                 _0x2C0077:
008b09 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b0b 30a1      	CPI  R26,LOW(0x1)
008b0c f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
008b0d e0e9      	LDI  R30,LOW(9)
008b0e 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
008b10 e1ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008b11 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008b12 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008b13 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008b14 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
008b16 e000     +LDI R16 , LOW ( 0 )
008b17 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
008b18 300c     +CPI R16 , LOW ( 12 )
008b19 e0e0     +LDI R30 , HIGH ( 12 )
008b1a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008b1b f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
008b1c 940e d48f 	CALL SUBOPT_0x2F1
008b1e e2ae      	LDI  R26,LOW(_setIp_S0160000000)
008b1f e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
008b20 940e d497 	CALL SUBOPT_0x2F2
008b22 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0148                                 }
                +
008b24 5f0f     +SUBI R16 , LOW ( - 1 )
008b25 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008b26 cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
008b27 c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
008b28 e0e0      	LDI  R30,LOW(0)
008b29 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
008b2b 940e d2b8 	CALL SUBOPT_0x2C8
008b2d 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
008b2f 940c 9730 	JMP  _0x2C007E
                 _0x2C006D:
008b31 91a0 14df 	LDS  R26,_currentPage
008b33 30a8      	CPI  R26,LOW(0x8)
008b34 f011      	BREQ PC+3
008b35 940c 8bc9 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
008b37 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
008b39 f431      	BRNE _0x2C0083
008b3a e0e7      	LDI  R30,LOW(7)
008b3b 940e d282 	CALL SUBOPT_0x2C2
008b3d 940e d49c 	CALL SUBOPT_0x2F3
008b3f c087      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
008b40 30e2      	CPI  R30,LOW(0x2)
008b41 e0a0      	LDI  R26,HIGH(0x2)
008b42 07fa      	CPC  R31,R26
008b43 f449      	BRNE _0x2C0084
008b44 940e d255 	CALL SUBOPT_0x2BE
008b46 f41c      	BRGE _0x2C0085
008b47 e0e2      	LDI  R30,LOW(2)
008b48 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
008b4a 940e d48a 	CALL SUBOPT_0x2F0
008b4c c07a      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008b4d 30e3      	CPI  R30,LOW(0x3)
008b4e e0a0      	LDI  R26,HIGH(0x3)
008b4f 07fa      	CPC  R31,R26
008b50 f451      	BRNE _0x2C0086
008b51 940e d269 	CALL SUBOPT_0x2C0
008b53 30a3      	CPI  R26,LOW(0x3)
008b54 f01c      	BRLT _0x2C0087
008b55 e0e0      	LDI  R30,LOW(0)
008b56 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
008b58 940e d48a 	CALL SUBOPT_0x2F0
008b5a c06c      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
008b5b 30e4      	CPI  R30,LOW(0x4)
008b5c e0a0      	LDI  R26,HIGH(0x4)
008b5d 07fa      	CPC  R31,R26
008b5e f011      	BREQ PC+3
008b5f 940c 8bc7 	JMP _0x2C0082
008b61 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008b63 30e0      	CPI  R30,0
008b64 f4c9      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
008b65 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008b67 940e df47 	CALL __LNEGB1
008b69 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
008b6b e2ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008b6c e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008b6d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
008b6e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
008b6f 940e d4a1 	CALL SUBOPT_0x2F4
008b71 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008b73 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
008b75 940e d4aa 	CALL SUBOPT_0x2F5
008b77 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008b79 940e c2f3 	CALL SUBOPT_0x65
008b7b 940e d080 	CALL SUBOPT_0x280
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008b7d c049      	RJMP _0x2C008A
                 _0x2C0089:
008b7e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b80 30a1      	CPI  R26,LOW(0x1)
008b81 f4c9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
008b82 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b84 940e df47 	CALL __LNEGB1
008b86 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
008b88 e5e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
008b89 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
008b8a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
008b8b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
008b8c 940e d4a1 	CALL SUBOPT_0x2F4
008b8e 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b90 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
008b92 940e d4aa 	CALL SUBOPT_0x2F5
008b94 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b96 940e c2f3 	CALL SUBOPT_0x65
008b98 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
008b9a c02c      	RJMP _0x2C008C
                 _0x2C008B:
008b9b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b9d 30a2      	CPI  R26,LOW(0x2)
008b9e f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
008b9f 91e0 1a5e 	LDS  R30,_devEn_S0160000000
                +
008ba1 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
008ba3 91e0 1a5f 	LDS  R30,_almEn_S0160000000
                +
008ba5 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
008ba7 940e d4af 	CALL SUBOPT_0x2F6
                 ; 0016 0167                                 if(res < 0){
008ba9 f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008baa 940e d4b6 	CALL SUBOPT_0x2F7
                 ; 0016 0169                                     currentPage = P_FAILED;
008bac e2e5      	LDI  R30,LOW(37)
008bad 940e d2ca 	CALL SUBOPT_0x2CA
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
008baf 940e d4bc 	CALL SUBOPT_0x2F8
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
008bb1 940e d4c3 	CALL SUBOPT_0x2F9
008bb3 c007      	RJMP _0x2C02BC
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
008bb4 e2e4      	LDI  R30,LOW(36)
008bb5 940e d2ca 	CALL SUBOPT_0x2CA
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
008bb7 940e d4bc 	CALL SUBOPT_0x2F8
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
008bb9 940e d4c8 	CALL SUBOPT_0x2FA
                 _0x2C02BC:
008bbb 940e e05b 	CALL __PUTPARD1
008bbd 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
008bbf c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
008bc0 e0e0      	LDI  R30,LOW(0)
008bc1 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
008bc3 940e d2b8 	CALL SUBOPT_0x2C8
008bc5 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
008bc7 940c 9730 	JMP  _0x2C0091
                 _0x2C007F:
008bc9 91a0 14df 	LDS  R26,_currentPage
008bcb 30a9      	CPI  R26,LOW(0x9)
008bcc f011      	BREQ PC+3
008bcd 940c 8c42 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
008bcf 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
008bd1 f431      	BRNE _0x2C0096
008bd2 e0e7      	LDI  R30,LOW(7)
008bd3 940e d46a 	CALL SUBOPT_0x2EB
008bd5 940e d49c 	CALL SUBOPT_0x2F3
008bd7 c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
008bd8 30e2      	CPI  R30,LOW(0x2)
008bd9 e0a0      	LDI  R26,HIGH(0x2)
008bda 07fa      	CPC  R31,R26
008bdb f451      	BRNE _0x2C0097
008bdc 940e d269 	CALL SUBOPT_0x2C0
008bde 30ad      	CPI  R26,LOW(0xD)
008bdf f01c      	BRLT _0x2C0098
008be0 e0e0      	LDI  R30,LOW(0)
008be1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
008be3 940e d4cd 	CALL SUBOPT_0x2FB
008be5 c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
008be6 30e3      	CPI  R30,LOW(0x3)
008be7 e0a0      	LDI  R26,HIGH(0x3)
008be8 07fa      	CPC  R31,R26
008be9 f449      	BRNE _0x2C0099
008bea 940e d255 	CALL SUBOPT_0x2BE
008bec f41c      	BRGE _0x2C009A
008bed e0ec      	LDI  R30,LOW(12)
008bee 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
008bf0 940e d4cd 	CALL SUBOPT_0x2FB
008bf2 c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
008bf3 30e4      	CPI  R30,LOW(0x4)
008bf4 e0a0      	LDI  R26,HIGH(0x4)
008bf5 07fa      	CPC  R31,R26
008bf6 f011      	BREQ PC+3
008bf7 940c 8c40 	JMP _0x2C0095
008bf9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008bfb 30ac      	CPI  R26,LOW(0xC)
008bfc f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
008bfd e0e0      	LDI  R30,LOW(0)
008bfe 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
008c00 e0ea      	LDI  R30,LOW(10)
008c01 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
008c03 ebe0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008c04 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008c05 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008c06 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008c07 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
008c09 e000     +LDI R16 , LOW ( 0 )
008c0a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
008c0b 300c     +CPI R16 , LOW ( 12 )
008c0c e0e0     +LDI R30 , HIGH ( 12 )
008c0d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008c0e f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
008c0f 940e d48f 	CALL SUBOPT_0x2F1
008c11 e3aa      	LDI  R26,LOW(_setMask_S0160000000)
008c12 e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
008c13 940e d497 	CALL SUBOPT_0x2F2
008c15 940e d080 	CALL SUBOPT_0x280
                 ; 0016 018B                                 }
                +
008c17 5f0f     +SUBI R16 , LOW ( - 1 )
008c18 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008c19 cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
008c1a c025      	RJMP _0x2C00A0
                 _0x2C009C:
008c1b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c1d 30ac      	CPI  R26,LOW(0xC)
008c1e f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
008c1f 940e d4d2 	CALL SUBOPT_0x2FC
008c21 f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
008c22 940e d4dd 	CALL SUBOPT_0x2FD
008c24 30e3      	CPI  R30,LOW(0x3)
008c25 f010      	BRLO _0x2C00A3
008c26 940e d4e6 	CALL SUBOPT_0x2FE
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
008c28 c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
008c29 940e d4dd 	CALL SUBOPT_0x2FD
008c2b 30ea      	CPI  R30,LOW(0xA)
008c2c f010      	BRLO _0x2C00A5
008c2d 940e d4e6 	CALL SUBOPT_0x2FE
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
008c2f 940e d4ee 	CALL SUBOPT_0x2FF
008c31 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
008c32 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
008c33 81e0      	LD   R30,Z
008c34 940e c2f3 	CALL SUBOPT_0x65
008c36 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
008c38 c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
008c39 e0e0      	LDI  R30,LOW(0)
008c3a 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
008c3c 940e d2b8 	CALL SUBOPT_0x2C8
008c3e 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
008c40 940c 9730 	JMP  _0x2C00A7
                 _0x2C0092:
008c42 91a0 14df 	LDS  R26,_currentPage
008c44 30aa      	CPI  R26,LOW(0xA)
008c45 f011      	BREQ PC+3
008c46 940c 8cbf 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
008c48 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
008c4a f441      	BRNE _0x2C00AC
008c4b e0e9      	LDI  R30,LOW(9)
008c4c 940e d282 	CALL SUBOPT_0x2C2
                +
008c4e e1ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008c4f e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008c50 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008c51 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008c52 c066      	RJMP _0x2C02BD
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
008c53 30e2      	CPI  R30,LOW(0x2)
008c54 e0a0      	LDI  R26,HIGH(0x2)
008c55 07fa      	CPC  R31,R26
008c56 f451      	BRNE _0x2C00AD
008c57 940e d269 	CALL SUBOPT_0x2C0
008c59 30ad      	CPI  R26,LOW(0xD)
008c5a f01c      	BRLT _0x2C00AE
008c5b e0e0      	LDI  R30,LOW(0)
008c5c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
008c5e 940e d4cd 	CALL SUBOPT_0x2FB
008c60 c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
008c61 30e3      	CPI  R30,LOW(0x3)
008c62 e0a0      	LDI  R26,HIGH(0x3)
008c63 07fa      	CPC  R31,R26
008c64 f449      	BRNE _0x2C00AF
008c65 940e d255 	CALL SUBOPT_0x2BE
008c67 f41c      	BRGE _0x2C00B0
008c68 e0ec      	LDI  R30,LOW(12)
008c69 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008c6b 940e d4cd 	CALL SUBOPT_0x2FB
008c6d c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
008c6e 30e4      	CPI  R30,LOW(0x4)
008c6f e0a0      	LDI  R26,HIGH(0x4)
008c70 07fa      	CPC  R31,R26
008c71 f011      	BREQ PC+3
008c72 940c 8cbd 	JMP _0x2C00AB
008c74 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c76 30ac      	CPI  R26,LOW(0xC)
008c77 f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
008c78 e0e0      	LDI  R30,LOW(0)
008c79 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008c7b e0eb      	LDI  R30,LOW(11)
008c7c 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
008c7e ebe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008c7f e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008c80 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008c81 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008c82 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008c84 e000     +LDI R16 , LOW ( 0 )
008c85 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
008c86 300c     +CPI R16 , LOW ( 12 )
008c87 e0e0     +LDI R30 , HIGH ( 12 )
008c88 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008c89 f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
008c8a 940e d48f 	CALL SUBOPT_0x2F1
008c8c e4a6      	LDI  R26,LOW(_setGw_S0160000000)
008c8d e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
008c8e 940e d497 	CALL SUBOPT_0x2F2
008c90 940e d080 	CALL SUBOPT_0x280
                 ; 0016 01AB                                 }
                +
008c92 5f0f     +SUBI R16 , LOW ( - 1 )
008c93 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008c94 cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
008c95 c027      	RJMP _0x2C00B6
                 _0x2C00B2:
008c96 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c98 30ac      	CPI  R26,LOW(0xC)
008c99 f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
008c9a 940e d4d2 	CALL SUBOPT_0x2FC
008c9c f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
008c9d 940e d4fe 	CALL SUBOPT_0x300
008c9f 30e3      	CPI  R30,LOW(0x3)
008ca0 f010      	BRLO _0x2C00B9
008ca1 940e d507 	CALL SUBOPT_0x301
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
008ca3 c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
008ca4 940e d4fe 	CALL SUBOPT_0x300
008ca6 30ea      	CPI  R30,LOW(0xA)
008ca7 f010      	BRLO _0x2C00BB
008ca8 940e d507 	CALL SUBOPT_0x301
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
008caa 940e d4ee 	CALL SUBOPT_0x2FF
008cac 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
008cad 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
008cae 81e0      	LD   R30,Z
008caf 940e c2f3 	CALL SUBOPT_0x65
008cb1 940e d080 	CALL SUBOPT_0x280
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
008cb3 c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
008cb4 e0e0      	LDI  R30,LOW(0)
008cb5 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
008cb7 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02BD:
008cb9 940e e05b 	CALL __PUTPARD1
008cbb 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
008cbd 940c 9730 	JMP  _0x2C00BD
                 _0x2C00A8:
008cbf 91a0 14df 	LDS  R26,_currentPage
008cc1 30ab      	CPI  R26,LOW(0xB)
008cc2 f011      	BREQ PC+3
008cc3 940c 8d3c 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
008cc5 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
008cc7 f441      	BRNE _0x2C00C2
008cc8 e0ea      	LDI  R30,LOW(10)
008cc9 940e d282 	CALL SUBOPT_0x2C2
                +
008ccb ebe0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008ccc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008ccd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008cce e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008ccf c066      	RJMP _0x2C02BE
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
008cd0 30e2      	CPI  R30,LOW(0x2)
008cd1 e0a0      	LDI  R26,HIGH(0x2)
008cd2 07fa      	CPC  R31,R26
008cd3 f451      	BRNE _0x2C00C3
008cd4 940e d269 	CALL SUBOPT_0x2C0
008cd6 30ad      	CPI  R26,LOW(0xD)
008cd7 f01c      	BRLT _0x2C00C4
008cd8 e0e0      	LDI  R30,LOW(0)
008cd9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
008cdb 940e d4cd 	CALL SUBOPT_0x2FB
008cdd c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
008cde 30e3      	CPI  R30,LOW(0x3)
008cdf e0a0      	LDI  R26,HIGH(0x3)
008ce0 07fa      	CPC  R31,R26
008ce1 f449      	BRNE _0x2C00C5
008ce2 940e d255 	CALL SUBOPT_0x2BE
008ce4 f41c      	BRGE _0x2C00C6
008ce5 e0ec      	LDI  R30,LOW(12)
008ce6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
008ce8 940e d4cd 	CALL SUBOPT_0x2FB
008cea c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
008ceb 30e4      	CPI  R30,LOW(0x4)
008cec e0a0      	LDI  R26,HIGH(0x4)
008ced 07fa      	CPC  R31,R26
008cee f011      	BREQ PC+3
008cef 940c 8d3a 	JMP _0x2C00C1
008cf1 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cf3 30ac      	CPI  R26,LOW(0xC)
008cf4 f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
008cf5 e0e0      	LDI  R30,LOW(0)
008cf6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
008cf8 e0ec      	LDI  R30,LOW(12)
008cf9 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
008cfb ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
008cfc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
008cfd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
008cfe e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
008cff 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
008d01 e000     +LDI R16 , LOW ( 0 )
008d02 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
008d03 300c     +CPI R16 , LOW ( 12 )
008d04 e0e0     +LDI R30 , HIGH ( 12 )
008d05 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008d06 f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
008d07 940e d48f 	CALL SUBOPT_0x2F1
008d09 e5a2      	LDI  R26,LOW(_setServer_S0160000000)
008d0a e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
008d0b 940e d497 	CALL SUBOPT_0x2F2
008d0d 940e d080 	CALL SUBOPT_0x280
                 ; 0016 01CB                                 }
                +
008d0f 5f0f     +SUBI R16 , LOW ( - 1 )
008d10 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008d11 cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
008d12 c027      	RJMP _0x2C00CC
                 _0x2C00C8:
008d13 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d15 30ac      	CPI  R26,LOW(0xC)
008d16 f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
008d17 940e d4d2 	CALL SUBOPT_0x2FC
008d19 f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
008d1a 940e d50f 	CALL SUBOPT_0x302
008d1c 30e3      	CPI  R30,LOW(0x3)
008d1d f010      	BRLO _0x2C00CF
008d1e 940e d518 	CALL SUBOPT_0x303
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
008d20 c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
008d21 940e d50f 	CALL SUBOPT_0x302
008d23 30ea      	CPI  R30,LOW(0xA)
008d24 f010      	BRLO _0x2C00D1
008d25 940e d518 	CALL SUBOPT_0x303
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
008d27 940e d4ee 	CALL SUBOPT_0x2FF
008d29 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
008d2a 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
008d2b 81e0      	LD   R30,Z
008d2c 940e c2f3 	CALL SUBOPT_0x65
008d2e 940e d080 	CALL SUBOPT_0x280
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
008d30 c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
008d31 e0e0      	LDI  R30,LOW(0)
008d32 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
008d34 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02BE:
008d36 940e e05b 	CALL __PUTPARD1
008d38 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
008d3a 940c 9730 	JMP  _0x2C00D3
                 _0x2C00BE:
008d3c 91a0 14df 	LDS  R26,_currentPage
008d3e 30ac      	CPI  R26,LOW(0xC)
008d3f f011      	BREQ PC+3
008d40 940c 8dc8 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
008d42 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008d44 f441      	BRNE _0x2C00D8
008d45 e0eb      	LDI  R30,LOW(11)
008d46 940e d282 	CALL SUBOPT_0x2C2
                +
008d48 ebe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008d49 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008d4a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008d4b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008d4c c075      	RJMP _0x2C02BF
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008d4d 30e2      	CPI  R30,LOW(0x2)
008d4e e0a0      	LDI  R26,HIGH(0x2)
008d4f 07fa      	CPC  R31,R26
008d50 f451      	BRNE _0x2C00D9
008d51 940e d269 	CALL SUBOPT_0x2C0
008d53 30ad      	CPI  R26,LOW(0xD)
008d54 f01c      	BRLT _0x2C00DA
008d55 e0e0      	LDI  R30,LOW(0)
008d56 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
008d58 940e d4cd 	CALL SUBOPT_0x2FB
008d5a c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008d5b 30e3      	CPI  R30,LOW(0x3)
008d5c e0a0      	LDI  R26,HIGH(0x3)
008d5d 07fa      	CPC  R31,R26
008d5e f449      	BRNE _0x2C00DB
008d5f 940e d255 	CALL SUBOPT_0x2BE
008d61 f41c      	BRGE _0x2C00DC
008d62 e0ec      	LDI  R30,LOW(12)
008d63 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
008d65 940e d4cd 	CALL SUBOPT_0x2FB
008d67 c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
008d68 30e4      	CPI  R30,LOW(0x4)
008d69 e0a0      	LDI  R26,HIGH(0x4)
008d6a 07fa      	CPC  R31,R26
008d6b f011      	BREQ PC+3
008d6c 940c 8dc6 	JMP _0x2C00D7
008d6e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d70 30ac      	CPI  R26,LOW(0xC)
008d71 f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008d72 e0ed      	LDI  R30,LOW(13)
008d73 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008d75 ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
008d76 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
008d77 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
008d78 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
008d79 940e d33c 	CALL SUBOPT_0x2D9
008d7b 940e d350 	CALL SUBOPT_0x2DA
008d7d 940e d362 	CALL SUBOPT_0x2DB
008d7f 940e d374 	CALL SUBOPT_0x2DC
008d81 940e d386 	CALL SUBOPT_0x2DD
008d83 940e d398 	CALL SUBOPT_0x2DE
008d85 940e d3aa 	CALL SUBOPT_0x2DF
008d87 940e d3bc 	CALL SUBOPT_0x2E0
008d89 940e d3ce 	CALL SUBOPT_0x2E1
008d8b 940e d3e0 	CALL SUBOPT_0x2E2
008d8d 940e d3f2 	CALL SUBOPT_0x2E3
008d8f 940e d404 	CALL SUBOPT_0x2E4
008d91 940e d416 	CALL SUBOPT_0x2E5
008d93 940e d428 	CALL SUBOPT_0x2E6
008d95 940e d43a 	CALL SUBOPT_0x2E7
008d97 940e d44c 	CALL SUBOPT_0x2E8
008d99 e480      	LDI  R24,64
008d9a 940e 7f9f 	CALL _printOLED
008d9c 96ef      	ADIW R28,63
008d9d 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
008d9e c027      	RJMP _0x2C00DF
                 _0x2C00DE:
008d9f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008da1 30ac      	CPI  R26,LOW(0xC)
008da2 f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
008da3 940e d4d2 	CALL SUBOPT_0x2FC
008da5 f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
008da6 940e d520 	CALL SUBOPT_0x304
008da8 30e3      	CPI  R30,LOW(0x3)
008da9 f010      	BRLO _0x2C00E2
008daa 940e d529 	CALL SUBOPT_0x305
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
008dac c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
008dad 940e d520 	CALL SUBOPT_0x304
008daf 30ea      	CPI  R30,LOW(0xA)
008db0 f010      	BRLO _0x2C00E4
008db1 940e d529 	CALL SUBOPT_0x305
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
008db3 940e d4ee 	CALL SUBOPT_0x2FF
008db5 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
008db6 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
008db7 81e0      	LD   R30,Z
008db8 940e c2f3 	CALL SUBOPT_0x65
008dba 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
008dbc c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
008dbd e0e0      	LDI  R30,LOW(0)
008dbe 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
008dc0 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02BF:
008dc2 940e e05b 	CALL __PUTPARD1
008dc4 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
008dc6 940c 9730 	JMP  _0x2C00E6
                 _0x2C00D4:
008dc8 91a0 14df 	LDS  R26,_currentPage
008dca 30ad      	CPI  R26,LOW(0xD)
008dcb f571      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
008dcc 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
008dce f431      	BRNE _0x2C00EB
008dcf e0e7      	LDI  R30,LOW(7)
008dd0 940e d46a 	CALL SUBOPT_0x2EB
008dd2 940e d49c 	CALL SUBOPT_0x2F3
008dd4 c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
008dd5 30e2      	CPI  R30,LOW(0x2)
008dd6 e0a0      	LDI  R26,HIGH(0x2)
008dd7 07fa      	CPC  R31,R26
008dd8 f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
008dd9 30e3      	CPI  R30,LOW(0x3)
008dda e0a0      	LDI  R26,HIGH(0x3)
008ddb 07fa      	CPC  R31,R26
008ddc f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
008ddd 30e4      	CPI  R30,LOW(0x4)
008dde e0a0      	LDI  R26,HIGH(0x4)
008ddf 07fa      	CPC  R31,R26
008de0 f4b9      	BRNE _0x2C00EA
008de1 e2e4      	LDI  R30,LOW(36)
008de2 940e d2ca 	CALL SUBOPT_0x2CA
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
008de4 e0ed      	LDI  R30,LOW(13)
008de5 940e d531 	CALL SUBOPT_0x306
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
008de7 940e d32d 	CALL SUBOPT_0x2D8
008de9 940e 5f0d 	CALL _ETH_setConfig
008deb 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008dec 2355      	TST  R21
008ded f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008dee eeec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008def e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008df0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008df1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008df2 940e c042 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008df4 940e d4c8 	CALL SUBOPT_0x2FA
008df6 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
008df8 940c 9730 	JMP  _0x2C00F0
                 _0x2C00E7:
008dfa 91a0 14df 	LDS  R26,_currentPage
008dfc 30ae      	CPI  R26,LOW(0xE)
008dfd f011      	BREQ PC+3
008dfe 940c 8e4f 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008e00 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008e02 f431      	BRNE _0x2C00F5
008e03 e0e1      	LDI  R30,LOW(1)
008e04 940e d46a 	CALL SUBOPT_0x2EB
008e06 940e d537 	CALL SUBOPT_0x307
008e08 c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
008e09 30e2      	CPI  R30,LOW(0x2)
008e0a e0a0      	LDI  R26,HIGH(0x2)
008e0b 07fa      	CPC  R31,R26
008e0c f449      	BRNE _0x2C00F6
008e0d 940e d255 	CALL SUBOPT_0x2BE
008e0f f41c      	BRGE _0x2C00F7
008e10 e0e1      	LDI  R30,LOW(1)
008e11 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008e13 940e d25c 	CALL SUBOPT_0x2BF
008e15 c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008e16 30e3      	CPI  R30,LOW(0x3)
008e17 e0a0      	LDI  R26,HIGH(0x3)
008e18 07fa      	CPC  R31,R26
008e19 f451      	BRNE _0x2C00F8
008e1a 940e d269 	CALL SUBOPT_0x2C0
008e1c 30a2      	CPI  R26,LOW(0x2)
008e1d f01c      	BRLT _0x2C00F9
008e1e e0e0      	LDI  R30,LOW(0)
008e1f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008e21 940e d25c 	CALL SUBOPT_0x2BF
008e23 c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008e24 30e4      	CPI  R30,LOW(0x4)
008e25 e0a0      	LDI  R26,HIGH(0x4)
008e26 07fa      	CPC  R31,R26
008e27 f529      	BRNE _0x2C00F4
008e28 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008e2a 30e0      	CPI  R30,0
008e2b f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
008e2c e0ef      	LDI  R30,LOW(15)
008e2d 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008e2f 940e d53c 	CALL SUBOPT_0x308
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008e31 c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008e32 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e34 30a1      	CPI  R26,LOW(0x1)
008e35 f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008e36 e2e1      	LDI  R30,LOW(33)
008e37 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
008e39 e1e0      	LDI  R30,LOW(16)
008e3a 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
008e3c e0ee      	LDI  R30,LOW(14)
008e3d 940e d2a8 	CALL SUBOPT_0x2C6
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008e3f 940e d2b2 	CALL SUBOPT_0x2C7
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008e41 940e d2d0 	CALL SUBOPT_0x2CB
008e43 c005      	RJMP _0x2C02C0
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008e44 e0e0      	LDI  R30,LOW(0)
008e45 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
008e47 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02C0:
008e49 940e e05b 	CALL __PUTPARD1
008e4b 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008e4d 940c 9730 	JMP  _0x2C00FF
                 _0x2C00F1:
008e4f 91a0 14df 	LDS  R26,_currentPage
008e51 30af      	CPI  R26,LOW(0xF)
008e52 f549      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008e53 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008e55 f0f9      	BREQ _0x2C02C1
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008e56 30e2      	CPI  R30,LOW(0x2)
008e57 e0a0      	LDI  R26,HIGH(0x2)
008e58 07fa      	CPC  R31,R26
008e59 f451      	BRNE _0x2C0105
008e5a 940e d269 	CALL SUBOPT_0x2C0
008e5c 30a5      	CPI  R26,LOW(0x5)
008e5d f01c      	BRLT _0x2C0106
008e5e e0e0      	LDI  R30,LOW(0)
008e5f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008e61 940e d53c 	CALL SUBOPT_0x308
008e63 c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008e64 30e3      	CPI  R30,LOW(0x3)
008e65 e0a0      	LDI  R26,HIGH(0x3)
008e66 07fa      	CPC  R31,R26
008e67 f449      	BRNE _0x2C0107
008e68 940e d255 	CALL SUBOPT_0x2BE
008e6a f41c      	BRGE _0x2C0108
008e6b e0e4      	LDI  R30,LOW(4)
008e6c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008e6e 940e d53c 	CALL SUBOPT_0x308
008e70 c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008e71 30e4      	CPI  R30,LOW(0x4)
008e72 e0a0      	LDI  R26,HIGH(0x4)
008e73 07fa      	CPC  R31,R26
008e74 f429      	BRNE _0x2C0103
                 _0x2C02C1:
008e75 e0ee      	LDI  R30,LOW(14)
008e76 940e d282 	CALL SUBOPT_0x2C2
008e78 940e d288 	CALL SUBOPT_0x2C3
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
008e7a 940c 9730 	JMP  _0x2C010A
                 _0x2C0100:
008e7c 91a0 14df 	LDS  R26,_currentPage
008e7e 31a0      	CPI  R26,LOW(0x10)
008e7f f011      	BREQ PC+3
008e80 940c 8f05 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008e82 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008e84 f431      	BRNE _0x2C010F
008e85 e0ee      	LDI  R30,LOW(14)
008e86 940e d46a 	CALL SUBOPT_0x2EB
008e88 940e d288 	CALL SUBOPT_0x2C3
008e8a c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
008e8b 30e2      	CPI  R30,LOW(0x2)
008e8c e0a0      	LDI  R26,HIGH(0x2)
008e8d 07fa      	CPC  R31,R26
008e8e f449      	BRNE _0x2C0110
008e8f 940e d255 	CALL SUBOPT_0x2BE
008e91 f41c      	BRGE _0x2C0111
008e92 e0e5      	LDI  R30,LOW(5)
008e93 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
008e95 940e d25c 	CALL SUBOPT_0x2BF
008e97 c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
008e98 30e3      	CPI  R30,LOW(0x3)
008e99 e0a0      	LDI  R26,HIGH(0x3)
008e9a 07fa      	CPC  R31,R26
008e9b f451      	BRNE _0x2C0112
008e9c 940e d269 	CALL SUBOPT_0x2C0
008e9e 30a6      	CPI  R26,LOW(0x6)
008e9f f01c      	BRLT _0x2C0113
008ea0 e0e0      	LDI  R30,LOW(0)
008ea1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
008ea3 940e d25c 	CALL SUBOPT_0x2BF
008ea5 c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
008ea6 30e4      	CPI  R30,LOW(0x4)
008ea7 e0a0      	LDI  R26,HIGH(0x4)
008ea8 07fa      	CPC  R31,R26
008ea9 f011      	BREQ PC+3
008eaa 940c 8f03 	JMP _0x2C010E
008eac 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008eae 30a5      	CPI  R26,LOW(0x5)
008eaf f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
008eb0 940e d543 	CALL SUBOPT_0x309
008eb2 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
008eb3 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
008eb4 940e d547 	CALL SUBOPT_0x30A
008eb6 940e df47 	CALL __LNEGB1
008eb8 940e d54e 	CALL SUBOPT_0x30B
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
008eba 940e d556 	CALL SUBOPT_0x30C
008ebc 940e d547 	CALL SUBOPT_0x30A
008ebe 940e c2f3 	CALL SUBOPT_0x65
008ec0 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
008ec2 c040      	RJMP _0x2C0116
                 _0x2C0115:
008ec3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ec5 30a5      	CPI  R26,LOW(0x5)
008ec6 f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
008ec7 940e d55d 	CALL SUBOPT_0x30D
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
008ec9 e0e0      	LDI  R30,LOW(0)
008eca 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
008ecc e000     +LDI R16 , LOW ( 0 )
008ecd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
008ece 3005     +CPI R16 , LOW ( 5 )
008ecf e0e0     +LDI R30 , HIGH ( 5 )
008ed0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008ed1 f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
008ed2 940e d305 	CALL SUBOPT_0x2D2
008ed4 010f      	MOVW R0,R30
008ed5 e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
008ed6 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
008ed7 0fa0      	ADD  R26,R16
008ed8 1fb1      	ADC  R27,R17
008ed9 91ec      	LD   R30,X
008eda 01d0      	MOVW R26,R0
008edb 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
008edc 5f0f     +SUBI R16 , LOW ( - 1 )
008edd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008ede cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
008edf 940e d4af 	CALL SUBOPT_0x2F6
                 ; 0016 025A                                 if(res < 0){
008ee1 f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008ee2 940e d4b6 	CALL SUBOPT_0x2F7
                 ; 0016 025C                                     currentPage = P_FAILED;
008ee4 e2e5      	LDI  R30,LOW(37)
008ee5 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
008ee7 e0ee      	LDI  R30,LOW(14)
008ee8 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
008eea e1e0      	LDI  R30,LOW(16)
008eeb 940e d531 	CALL SUBOPT_0x306
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
008eed 940e d4c3 	CALL SUBOPT_0x2F9
008eef c007      	RJMP _0x2C02C2
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008ef0 940e d55d 	CALL SUBOPT_0x30D
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008ef2 e1e0      	LDI  R30,LOW(16)
008ef3 940e d531 	CALL SUBOPT_0x306
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008ef5 940e d4c8 	CALL SUBOPT_0x2FA
                 _0x2C02C2:
008ef7 940e e05b 	CALL __PUTPARD1
008ef9 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
008efb c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
008efc e0e0      	LDI  R30,LOW(0)
008efd 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008eff 940e d2b8 	CALL SUBOPT_0x2C8
008f01 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008f03 940c 9730 	JMP  _0x2C011E
                 _0x2C010B:
008f05 91a0 14df 	LDS  R26,_currentPage
008f07 31a1      	CPI  R26,LOW(0x11)
008f08 f011      	BREQ PC+3
008f09 940c 8f65 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
008f0b 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
008f0d f431      	BRNE _0x2C0123
008f0e e0e1      	LDI  R30,LOW(1)
008f0f 940e d470 	CALL SUBOPT_0x2EC
008f11 940e d537 	CALL SUBOPT_0x307
008f13 c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008f14 30e2      	CPI  R30,LOW(0x2)
008f15 e0a0      	LDI  R26,HIGH(0x2)
008f16 07fa      	CPC  R31,R26
008f17 f449      	BRNE _0x2C0124
008f18 940e d255 	CALL SUBOPT_0x2BE
008f1a f41c      	BRGE _0x2C0125
008f1b e0e1      	LDI  R30,LOW(1)
008f1c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
008f1e 940e d25c 	CALL SUBOPT_0x2BF
008f20 c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008f21 30e3      	CPI  R30,LOW(0x3)
008f22 e0a0      	LDI  R26,HIGH(0x3)
008f23 07fa      	CPC  R31,R26
008f24 f451      	BRNE _0x2C0126
008f25 940e d269 	CALL SUBOPT_0x2C0
008f27 30a2      	CPI  R26,LOW(0x2)
008f28 f01c      	BRLT _0x2C0127
008f29 e0e0      	LDI  R30,LOW(0)
008f2a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
008f2c 940e d25c 	CALL SUBOPT_0x2BF
008f2e c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
008f2f 30e4      	CPI  R30,LOW(0x4)
008f30 e0a0      	LDI  R26,HIGH(0x4)
008f31 07fa      	CPC  R31,R26
008f32 f589      	BRNE _0x2C0122
008f33 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008f35 30e0      	CPI  R30,0
008f36 f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
008f37 e1e2      	LDI  R30,LOW(18)
008f38 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
008f3a 91e0 148b 	LDS  R30,_muteMode
008f3c 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
008f3e 940e d564 	CALL SUBOPT_0x30E
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
008f40 940e d4aa 	CALL SUBOPT_0x2F5
008f42 91e0 1a65 	LDS  R30,_mute_S0160000000
008f44 940e c2f3 	CALL SUBOPT_0x65
008f46 940e d080 	CALL SUBOPT_0x280
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
008f48 c01b      	RJMP _0x2C012A
                 _0x2C0129:
008f49 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f4b 30a1      	CPI  R26,LOW(0x1)
008f4c f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
008f4d e2e1      	LDI  R30,LOW(33)
008f4e 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
008f50 e1e3      	LDI  R30,LOW(19)
008f51 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
008f53 e1e1      	LDI  R30,LOW(17)
008f54 940e d2a8 	CALL SUBOPT_0x2C6
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
008f56 940e d2b2 	CALL SUBOPT_0x2C7
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
008f58 940e d2d0 	CALL SUBOPT_0x2CB
008f5a c005      	RJMP _0x2C02C3
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
008f5b e0e0      	LDI  R30,LOW(0)
008f5c 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
008f5e 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02C3:
008f60 940e e05b 	CALL __PUTPARD1
008f62 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
008f64 c7cb      	RJMP _0x2C012D
                 _0x2C011F:
008f65 91a0 14df 	LDS  R26,_currentPage
008f67 31a2      	CPI  R26,LOW(0x12)
008f68 f011      	BREQ PC+3
008f69 940c 8fc3 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
008f6b 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
008f6d f431      	BRNE _0x2C0132
008f6e e1e1      	LDI  R30,LOW(17)
008f6f 940e d282 	CALL SUBOPT_0x2C2
008f71 940e d295 	CALL SUBOPT_0x2C4
008f73 c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
008f74 30e2      	CPI  R30,LOW(0x2)
008f75 e0a0      	LDI  R26,HIGH(0x2)
008f76 07fa      	CPC  R31,R26
008f77 f449      	BRNE _0x2C0133
008f78 940e d255 	CALL SUBOPT_0x2BE
008f7a f41c      	BRGE _0x2C0134
008f7b e0e1      	LDI  R30,LOW(1)
008f7c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
008f7e 940e d564 	CALL SUBOPT_0x30E
008f80 c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
008f81 30e3      	CPI  R30,LOW(0x3)
008f82 e0a0      	LDI  R26,HIGH(0x3)
008f83 07fa      	CPC  R31,R26
008f84 f451      	BRNE _0x2C0135
008f85 940e d269 	CALL SUBOPT_0x2C0
008f87 30a2      	CPI  R26,LOW(0x2)
008f88 f01c      	BRLT _0x2C0136
008f89 e0e0      	LDI  R30,LOW(0)
008f8a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
008f8c 940e d564 	CALL SUBOPT_0x30E
008f8e c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
008f8f 30e4      	CPI  R30,LOW(0x4)
008f90 e0a0      	LDI  R26,HIGH(0x4)
008f91 07fa      	CPC  R31,R26
008f92 f579      	BRNE _0x2C0131
008f93 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008f95 30e0      	CPI  R30,0
008f96 f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
008f97 91e0 1a65 	LDS  R30,_mute_S0160000000
008f99 940e df47 	CALL __LNEGB1
008f9b 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
008f9d 940e d4aa 	CALL SUBOPT_0x2F5
008f9f 91e0 1a65 	LDS  R30,_mute_S0160000000
008fa1 940e c2f3 	CALL SUBOPT_0x65
008fa3 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
008fa5 c01c      	RJMP _0x2C0139
                 _0x2C0138:
008fa6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fa8 30a1      	CPI  R26,LOW(0x1)
008fa9 f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
008faa 940e d569 	CALL SUBOPT_0x30F
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
008fac e1e2      	LDI  R30,LOW(18)
008fad 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
008faf 91e0 1a65 	LDS  R30,_mute_S0160000000
008fb1 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
008fb3 e0e0      	LDI  R30,LOW(0)
008fb4 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
008fb6 940e d4c8 	CALL SUBOPT_0x2FA
008fb8 c005      	RJMP _0x2C02C4
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
008fb9 e0e0      	LDI  R30,LOW(0)
008fba 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
008fbc 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02C4:
008fbe 940e e05b 	CALL __PUTPARD1
008fc0 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
008fc2 c76d      	RJMP _0x2C013C
                 _0x2C012E:
008fc3 91a0 14df 	LDS  R26,_currentPage
008fc5 31a3      	CPI  R26,LOW(0x13)
008fc6 f011      	BREQ PC+3
008fc7 940c 9025 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
008fc9 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008fcb f431      	BRNE _0x2C0141
008fcc e1e1      	LDI  R30,LOW(17)
008fcd 940e d46a 	CALL SUBOPT_0x2EB
008fcf 940e d295 	CALL SUBOPT_0x2C4
008fd1 c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
008fd2 30e2      	CPI  R30,LOW(0x2)
008fd3 e0a0      	LDI  R26,HIGH(0x2)
008fd4 07fa      	CPC  R31,R26
008fd5 f481      	BRNE _0x2C0142
008fd6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fd8 30a4      	CPI  R26,LOW(0x4)
008fd9 f414      	BRGE _0x2C0143
008fda 940e d570 	CALL SUBOPT_0x310
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
008fdc 940e d269 	CALL SUBOPT_0x2C0
008fde 30a5      	CPI  R26,LOW(0x5)
008fdf f01c      	BRLT _0x2C0144
008fe0 e0e0      	LDI  R30,LOW(0)
008fe1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
008fe3 940e d575 	CALL SUBOPT_0x311
008fe5 c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
008fe6 30e3      	CPI  R30,LOW(0x3)
008fe7 e0a0      	LDI  R26,HIGH(0x3)
008fe8 07fa      	CPC  R31,R26
008fe9 f479      	BRNE _0x2C0145
008fea 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fec 30a4      	CPI  R26,LOW(0x4)
008fed f414      	BRGE _0x2C0146
008fee 940e d570 	CALL SUBOPT_0x310
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
008ff0 940e d255 	CALL SUBOPT_0x2BE
008ff2 f41c      	BRGE _0x2C0147
008ff3 e0e4      	LDI  R30,LOW(4)
008ff4 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
008ff6 940e d575 	CALL SUBOPT_0x311
008ff8 c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
008ff9 30e4      	CPI  R30,LOW(0x4)
008ffa e0a0      	LDI  R26,HIGH(0x4)
008ffb 07fa      	CPC  R31,R26
008ffc f539      	BRNE _0x2C0140
008ffd 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fff 30a4      	CPI  R26,LOW(0x4)
009000 f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
009001 e1e4      	LDI  R30,LOW(20)
009002 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
009004 940e d57a 	CALL SUBOPT_0x312
009006 940e d2b2 	CALL SUBOPT_0x2C7
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
009008 e2eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
009009 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
00900a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
00900b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
00900c 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
00900e c015      	RJMP _0x2C014A
                 _0x2C0149:
00900f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009011 30a4      	CPI  R26,LOW(0x4)
009012 f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
009013 940e d543 	CALL SUBOPT_0x309
009015 5daa      	SUBI R26,LOW(-_newPwd_S0160000000)
009016 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
009017 940e d582 	CALL SUBOPT_0x313
009019 f024      	BRLT _0x2C014C
00901a 940e d587 	CALL SUBOPT_0x314
00901c e0a0      	LDI  R26,LOW(0)
00901d 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
00901e 940e d58d 	CALL SUBOPT_0x315
009020 940e d587 	CALL SUBOPT_0x314
009022 940e d594 	CALL SUBOPT_0x316
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
009024 c70b      	RJMP _0x2C014D
                 _0x2C013D:
009025 91a0 14df 	LDS  R26,_currentPage
009027 31a4      	CPI  R26,LOW(0x14)
009028 f011      	BREQ PC+3
009029 940c 90b5 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
00902b 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
00902d f431      	BRNE _0x2C0152
00902e e1e1      	LDI  R30,LOW(17)
00902f 940e d46a 	CALL SUBOPT_0x2EB
009031 940e d295 	CALL SUBOPT_0x2C4
009033 c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
009034 30e2      	CPI  R30,LOW(0x2)
009035 e0a0      	LDI  R26,HIGH(0x2)
009036 07fa      	CPC  R31,R26
009037 f481      	BRNE _0x2C0153
009038 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00903a 30a4      	CPI  R26,LOW(0x4)
00903b f414      	BRGE _0x2C0154
00903c 940e d570 	CALL SUBOPT_0x310
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
00903e 940e d269 	CALL SUBOPT_0x2C0
009040 30a5      	CPI  R26,LOW(0x5)
009041 f01c      	BRLT _0x2C0155
009042 e0e0      	LDI  R30,LOW(0)
009043 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
009045 940e d575 	CALL SUBOPT_0x311
009047 c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
009048 30e3      	CPI  R30,LOW(0x3)
009049 e0a0      	LDI  R26,HIGH(0x3)
00904a 07fa      	CPC  R31,R26
00904b f479      	BRNE _0x2C0156
00904c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00904e 30a4      	CPI  R26,LOW(0x4)
00904f f414      	BRGE _0x2C0157
009050 940e d570 	CALL SUBOPT_0x310
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
009052 940e d255 	CALL SUBOPT_0x2BE
009054 f41c      	BRGE _0x2C0158
009055 e0e4      	LDI  R30,LOW(4)
009056 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
009058 940e d575 	CALL SUBOPT_0x311
00905a c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
00905b 30e4      	CPI  R30,LOW(0x4)
00905c e0a0      	LDI  R26,HIGH(0x4)
00905d 07fa      	CPC  R31,R26
00905e f011      	BREQ PC+3
00905f 940c 90b4 	JMP _0x2C0151
009061 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009063 30a4      	CPI  R26,LOW(0x4)
009064 f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
009065 940e d598 	CALL SUBOPT_0x317
009067 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
009068 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
009069 940e d129 	CALL SUBOPT_0x29B
00906b 940e a541 	CALL _memcmp
00906d 30e0      	CPI  R30,0
00906e f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
00906f e3e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
009070 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
009071 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
009072 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
009073 940e c042 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
009075 940e d598 	CALL SUBOPT_0x317
009077 940e d59d 	CALL SUBOPT_0x318
009079 940e a59f 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
00907b 940e d57a 	CALL SUBOPT_0x312
00907d 940e a59f 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
00907f e2e5      	LDI  R30,LOW(37)
009080 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
009082 e1e1      	LDI  R30,LOW(17)
009083 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
009085 e1e4      	LDI  R30,LOW(20)
009086 940e d531 	CALL SUBOPT_0x306
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
009088 940e d4c3 	CALL SUBOPT_0x2F9
00908a c00f      	RJMP _0x2C02C5
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
00908b 940e d5a1 	CALL SUBOPT_0x319
00908d e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
00908e e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00908f 940e d129 	CALL SUBOPT_0x29B
009091 940e 9add 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
009093 940e d569 	CALL SUBOPT_0x30F
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
009095 e1e4      	LDI  R30,LOW(20)
009096 940e d531 	CALL SUBOPT_0x306
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
009098 940e d4c8 	CALL SUBOPT_0x2FA
                 _0x2C02C5:
00909a 940e e05b 	CALL __PUTPARD1
00909c 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
00909e c015      	RJMP _0x2C015D
                 _0x2C015A:
00909f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090a1 30a4      	CPI  R26,LOW(0x4)
0090a2 f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
0090a3 940e d543 	CALL SUBOPT_0x309
0090a5 5da6      	SUBI R26,LOW(-_confPwd_S0160000000)
0090a6 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
0090a7 940e d582 	CALL SUBOPT_0x313
0090a9 f024      	BRLT _0x2C015F
0090aa 940e d5aa 	CALL SUBOPT_0x31A
0090ac e0a0      	LDI  R26,LOW(0)
0090ad 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
0090ae 940e d58d 	CALL SUBOPT_0x315
0090b0 940e d5aa 	CALL SUBOPT_0x31A
0090b2 940e d594 	CALL SUBOPT_0x316
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
0090b4 c67b      	RJMP _0x2C0160
                 _0x2C014E:
0090b5 91a0 14df 	LDS  R26,_currentPage
0090b7 31a5      	CPI  R26,LOW(0x15)
0090b8 f011      	BREQ PC+3
0090b9 940c 914a 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
0090bb 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
0090bd f419      	BRNE _0x2C0165
0090be 940e d5b0 	CALL SUBOPT_0x31B
0090c0 c088      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
0090c1 30e2      	CPI  R30,LOW(0x2)
0090c2 e0a0      	LDI  R26,HIGH(0x2)
0090c3 07fa      	CPC  R31,R26
0090c4 f449      	BRNE _0x2C0166
0090c5 940e d255 	CALL SUBOPT_0x2BE
0090c7 f41c      	BRGE _0x2C0167
0090c8 e0e3      	LDI  R30,LOW(3)
0090c9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
0090cb 940e d25c 	CALL SUBOPT_0x2BF
0090cd c07b      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
0090ce 30e3      	CPI  R30,LOW(0x3)
0090cf e0a0      	LDI  R26,HIGH(0x3)
0090d0 07fa      	CPC  R31,R26
0090d1 f451      	BRNE _0x2C0168
0090d2 940e d269 	CALL SUBOPT_0x2C0
0090d4 30a4      	CPI  R26,LOW(0x4)
0090d5 f01c      	BRLT _0x2C0169
0090d6 e0e0      	LDI  R30,LOW(0)
0090d7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
0090d9 940e d25c 	CALL SUBOPT_0x2BF
0090db c06d      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
0090dc 30e4      	CPI  R30,LOW(0x4)
0090dd e0a0      	LDI  R26,HIGH(0x4)
0090de 07fa      	CPC  R31,R26
0090df f011      	BREQ PC+3
0090e0 940c 9149 	JMP _0x2C0164
0090e2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0090e4 30e0      	CPI  R30,0
0090e5 f571      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
0090e6 e1e6      	LDI  R30,LOW(22)
0090e7 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
0090e9 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
0090ea e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0090eb 940e 98e6 	CALL _get_current_vref
0090ed 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
0090ee 2355      	TST  R21
0090ef f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
0090f0 e0e2      	LDI  R30,LOW(2)
0090f1 93e0 1a66 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
0090f3 e0e5      	LDI  R30,LOW(5)
                +
0090f4 93e0 1a67+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
0090f6 e0e6      	LDI  R30,LOW(6)
                +
0090f7 93e0 1a68+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
0090f9 e6e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
0090fa e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
0090fb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
0090fc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
0090fd 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
0090ff e000     +LDI R16 , LOW ( 0 )
009100 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
009101 3003     +CPI R16 , LOW ( 3 )
009102 e0e0     +LDI R30 , HIGH ( 3 )
009103 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
009104 f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
009105 940e d5b7 	CALL SUBOPT_0x31C
009107 01f8      	MOVW R30,R16
009108 940e cf40 	CALL SUBOPT_0x250
00910a e6a6      	LDI  R26,LOW(_vRef_S0160000000)
00910b e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
00910c 940e d497 	CALL SUBOPT_0x2F2
00910e 940e d080 	CALL SUBOPT_0x280
                 ; 0016 02F5                                 }
                +
009110 5f0f     +SUBI R16 , LOW ( - 1 )
009111 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009112 cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
009113 c035      	RJMP _0x2C0170
                 _0x2C016B:
009114 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009116 30a1      	CPI  R26,LOW(0x1)
009117 f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
009118 e1e7      	LDI  R30,LOW(23)
009119 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
00911b e0e0      	LDI  R30,LOW(0)
00911c 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
00911e 940e d5be 	CALL SUBOPT_0x31D
009120 940e d092 	CALL SUBOPT_0x284
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
009122 c026      	RJMP _0x2C0172
                 _0x2C0171:
009123 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009125 30a2      	CPI  R26,LOW(0x2)
009126 f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
009127 e1ea      	LDI  R30,LOW(26)
009128 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
00912a e0e0      	LDI  R30,LOW(0)
00912b 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
00912d 940e d5c9 	CALL SUBOPT_0x31E
00912f 940e d5d0 	CALL SUBOPT_0x31F
009131 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
009133 c015      	RJMP _0x2C0174
                 _0x2C0173:
009134 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009136 30a3      	CPI  R26,LOW(0x3)
009137 f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
009138 e2e0      	LDI  R30,LOW(32)
009139 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
00913b e7ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
00913c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
00913d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
00913e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
00913f c005      	RJMP _0x2C02C6
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
009140 e0e0      	LDI  R30,LOW(0)
009141 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
009143 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02C6:
009145 940e e05b 	CALL __PUTPARD1
009147 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
009149 c5e6      	RJMP _0x2C0177
                 _0x2C0161:
00914a 91a0 14df 	LDS  R26,_currentPage
00914c 31a6      	CPI  R26,LOW(0x16)
00914d f011      	BREQ PC+3
00914e 940c 91b1 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
009150 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
009152 f431      	BRNE _0x2C017C
009153 e1e5      	LDI  R30,LOW(21)
009154 940e d282 	CALL SUBOPT_0x2C2
009156 940e d5d5 	CALL SUBOPT_0x320
009158 c057      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
009159 30e2      	CPI  R30,LOW(0x2)
00915a e0a0      	LDI  R26,HIGH(0x2)
00915b 07fa      	CPC  R31,R26
00915c f451      	BRNE _0x2C017D
00915d 940e d269 	CALL SUBOPT_0x2C0
00915f 30a4      	CPI  R26,LOW(0x4)
009160 f01c      	BRLT _0x2C017E
009161 e0e0      	LDI  R30,LOW(0)
009162 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
009164 940e d5da 	CALL SUBOPT_0x321
009166 c049      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
009167 30e3      	CPI  R30,LOW(0x3)
009168 e0a0      	LDI  R26,HIGH(0x3)
009169 07fa      	CPC  R31,R26
00916a f449      	BRNE _0x2C017F
00916b 940e d255 	CALL SUBOPT_0x2BE
00916d f41c      	BRGE _0x2C0180
00916e e0e3      	LDI  R30,LOW(3)
00916f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
009171 940e d5da 	CALL SUBOPT_0x321
009173 c03c      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
009174 30e4      	CPI  R30,LOW(0x4)
009175 e0a0      	LDI  R26,HIGH(0x4)
009176 07fa      	CPC  R31,R26
009177 f5c1      	BRNE _0x2C017B
009178 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00917a 30a3      	CPI  R26,LOW(0x3)
00917b f481      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
00917c e2e4      	LDI  R30,LOW(36)
00917d 940e d2a2 	CALL SUBOPT_0x2C5
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
00917f e1e6      	LDI  R30,LOW(22)
009180 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
009182 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
009183 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
009184 940e 9a77 	CALL _set_vref
                 ; 0016 031B                                 cursor = 0;
009186 e0e0      	LDI  R30,LOW(0)
009187 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
009189 940e d4c8 	CALL SUBOPT_0x2FA
00918b c020      	RJMP _0x2C02C7
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
00918c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00918e 30a3      	CPI  R26,LOW(0x3)
00918f f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
009190 940e d543 	CALL SUBOPT_0x309
009192 59aa      	SUBI R26,LOW(-_vRef_S0160000000)
009193 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
009194 940e d582 	CALL SUBOPT_0x313
009196 f020      	BRLO _0x2C0185
009197 940e d5df 	CALL SUBOPT_0x322
009199 e0a0      	LDI  R26,LOW(0)
00919a 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
00919b 940e d5b7 	CALL SUBOPT_0x31C
00919d 940e d556 	CALL SUBOPT_0x30C
00919f 940e d5df 	CALL SUBOPT_0x322
0091a1 81e0      	LD   R30,Z
0091a2 940e c2f3 	CALL SUBOPT_0x65
0091a4 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
0091a6 c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
0091a7 e0e0      	LDI  R30,LOW(0)
0091a8 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
0091aa 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02C7:
0091ac 940e e05b 	CALL __PUTPARD1
0091ae 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
0091b0 c57f      	RJMP _0x2C0187
                 _0x2C0178:
0091b1 91a0 14df 	LDS  R26,_currentPage
0091b3 31a7      	CPI  R26,LOW(0x17)
0091b4 f011      	BREQ PC+3
0091b5 940c 920c 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
0091b7 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
0091b9 f449      	BRNE _0x2C018C
0091ba e1e5      	LDI  R30,LOW(21)
0091bb 940e d46a 	CALL SUBOPT_0x2EB
0091bd e0e0      	LDI  R30,LOW(0)
0091be 93e0 1a69 	STS  _prb1_S0160000000,R30
0091c0 940e d5d5 	CALL SUBOPT_0x320
0091c2 c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
0091c3 30e2      	CPI  R30,LOW(0x2)
0091c4 e0a0      	LDI  R26,HIGH(0x2)
0091c5 07fa      	CPC  R31,R26
0091c6 f451      	BRNE _0x2C018D
0091c7 940e d269 	CALL SUBOPT_0x2C0
0091c9 30a2      	CPI  R26,LOW(0x2)
0091ca f01c      	BRLT _0x2C018E
0091cb e0e0      	LDI  R30,LOW(0)
0091cc 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
0091ce 940e d5e5 	CALL SUBOPT_0x323
0091d0 c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
0091d1 30e3      	CPI  R30,LOW(0x3)
0091d2 e0a0      	LDI  R26,HIGH(0x3)
0091d3 07fa      	CPC  R31,R26
0091d4 f449      	BRNE _0x2C018F
0091d5 940e d255 	CALL SUBOPT_0x2BE
0091d7 f41c      	BRGE _0x2C0190
0091d8 e0e1      	LDI  R30,LOW(1)
0091d9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
0091db 940e d5e5 	CALL SUBOPT_0x323
0091dd c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
0091de 30e4      	CPI  R30,LOW(0x4)
0091df e0a0      	LDI  R26,HIGH(0x4)
0091e0 07fa      	CPC  R31,R26
0091e1 f549      	BRNE _0x2C018B
0091e2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0091e4 30e0      	CPI  R30,0
0091e5 f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
0091e6 940e d5ea 	CALL SUBOPT_0x324
0091e8 f018      	BRLO _0x2C0193
0091e9 e0e0      	LDI  R30,LOW(0)
0091ea 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
0091ec 940e d5f1 	CALL SUBOPT_0x325
0091ee 940e d5d0 	CALL SUBOPT_0x31F
0091f0 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
0091f2 c018      	RJMP _0x2C0194
                 _0x2C0192:
0091f3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0091f5 30a1      	CPI  R26,LOW(0x1)
0091f6 f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
0091f7 e1e8      	LDI  R30,LOW(24)
0091f8 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
0091fa e0e0      	LDI  R30,LOW(0)
0091fb 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
0091fd 940e d5c9 	CALL SUBOPT_0x31E
0091ff 940e d5f8 	CALL SUBOPT_0x326
009201 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
009203 c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
009204 e0e0      	LDI  R30,LOW(0)
009205 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
009207 940e d2b8 	CALL SUBOPT_0x2C8
009209 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
00920b c524      	RJMP _0x2C0197
                 _0x2C0188:
00920c 91a0 14df 	LDS  R26,_currentPage
00920e 31a8      	CPI  R26,LOW(0x18)
00920f f011      	BREQ PC+3
009210 940c 926a 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
009212 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
009214 f459      	BRNE _0x2C019C
009215 e1e7      	LDI  R30,LOW(23)
009216 940e d282 	CALL SUBOPT_0x2C2
009218 e0e0      	LDI  R30,LOW(0)
009219 93e0 1a6a 	STS  _prb2_S0160000000,R30
00921b 940e d5be 	CALL SUBOPT_0x31D
00921d 940e d092 	CALL SUBOPT_0x284
00921f c049      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
009220 30e2      	CPI  R30,LOW(0x2)
009221 e0a0      	LDI  R26,HIGH(0x2)
009222 07fa      	CPC  R31,R26
009223 f451      	BRNE _0x2C019D
009224 940e d269 	CALL SUBOPT_0x2C0
009226 30a2      	CPI  R26,LOW(0x2)
009227 f01c      	BRLT _0x2C019E
009228 e0e0      	LDI  R30,LOW(0)
009229 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
00922b 940e d5e5 	CALL SUBOPT_0x323
00922d c03b      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
00922e 30e3      	CPI  R30,LOW(0x3)
00922f e0a0      	LDI  R26,HIGH(0x3)
009230 07fa      	CPC  R31,R26
009231 f449      	BRNE _0x2C019F
009232 940e d255 	CALL SUBOPT_0x2BE
009234 f41c      	BRGE _0x2C01A0
009235 e0e1      	LDI  R30,LOW(1)
009236 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
009238 940e d5e5 	CALL SUBOPT_0x323
00923a c02e      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
00923b 30e4      	CPI  R30,LOW(0x4)
00923c e0a0      	LDI  R26,HIGH(0x4)
00923d 07fa      	CPC  R31,R26
00923e f551      	BRNE _0x2C019B
00923f 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009241 30e0      	CPI  R30,0
009242 f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
009243 91a0 1a6a 	LDS  R26,_prb2_S0160000000
009245 5faf      	SUBI R26,-LOW(1)
009246 93a0 1a6a 	STS  _prb2_S0160000000,R26
009248 30a5      	CPI  R26,LOW(0x5)
009249 f018      	BRLO _0x2C01A3
00924a e0e0      	LDI  R30,LOW(0)
00924b 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
00924d 940e d5f1 	CALL SUBOPT_0x325
00924f 940e d5f8 	CALL SUBOPT_0x326
009251 940e d092 	CALL SUBOPT_0x284
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
009253 c015      	RJMP _0x2C01A4
                 _0x2C01A2:
009254 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009256 30a1      	CPI  R26,LOW(0x1)
009257 f451      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
009258 e1e9      	LDI  R30,LOW(25)
009259 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
00925b 940e d5fd 	CALL SUBOPT_0x327
00925d 940e d5f8 	CALL SUBOPT_0x326
00925f 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
009261 c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
009262 e0e0      	LDI  R30,LOW(0)
009263 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
009265 940e d2b8 	CALL SUBOPT_0x2C8
009267 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359     else if ( currentPage == P_CAL1_CONFIRM )
009269 c4c6      	RJMP _0x2C01A7
                 _0x2C0198:
00926a 91a0 14df 	LDS  R26,_currentPage
00926c 31a9      	CPI  R26,LOW(0x19)
00926d f599      	BRNE _0x2C01A8
                 ; 0016 035A     {
                 ; 0016 035B         switch(key){
00926e 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 035C         case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
009270 f451      	BRNE _0x2C01AC
009271 e1e8      	LDI  R30,LOW(24)
009272 940e d282 	CALL SUBOPT_0x2C2
009274 940e d5c9 	CALL SUBOPT_0x31E
009276 940e d5f8 	CALL SUBOPT_0x326
009278 940e d092 	CALL SUBOPT_0x284
00927a c025      	RJMP _0x2C01AB
                 ; 0016 035D         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01AC:
00927b 30e2      	CPI  R30,LOW(0x2)
00927c e0a0      	LDI  R26,HIGH(0x2)
00927d 07fa      	CPC  R31,R26
00927e f109      	BREQ _0x2C01AB
                 ; 0016 035E         case KEY_DOWN   :   /* no operation */                                                                  break;
00927f 30e3      	CPI  R30,LOW(0x3)
009280 e0a0      	LDI  R26,HIGH(0x3)
009281 07fa      	CPC  R31,R26
009282 f0e9      	BREQ _0x2C01AB
                 ; 0016 035F         case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
009283 30e4      	CPI  R30,LOW(0x4)
009284 e0a0      	LDI  R26,HIGH(0x4)
009285 07fa      	CPC  R31,R26
009286 f4c9      	BRNE _0x2C01AB
009287 940e d604 	CALL SUBOPT_0x328
009289 91a0 1a6a 	LDS  R26,_prb2_S0160000000
00928b 27bb      	CLR  R27
00928c 940e 6f23 	CALL _sensorCalibrate1
00928e 01af      	MOVW R20,R30
                 ; 0016 0360                             if(res < 0){
00928f 2355      	TST  R21
009290 f432      	BRPL _0x2C01B0
                 ; 0016 0361                                 currentPage = P_FAILED;
009291 e2e5      	LDI  R30,LOW(37)
009292 940e d60a 	CALL SUBOPT_0x329
                 ; 0016 0362                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364                                 cursor      = 0;
                 ; 0016 0365                                 printOLED("FL");
009294 940e d4c3 	CALL SUBOPT_0x2F9
009296 c005      	RJMP _0x2C02C8
                 ; 0016 0366                             }
                 ; 0016 0367                             else{
                 _0x2C01B0:
                 ; 0016 0368                                 currentPage = P_FINISH;
009297 e2e4      	LDI  R30,LOW(36)
009298 940e d60a 	CALL SUBOPT_0x329
                 ; 0016 0369                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B                                 cursor      = 0;
                 ; 0016 036C                                 printOLED("FI");
00929a 940e d4c8 	CALL SUBOPT_0x2FA
                 _0x2C02C8:
00929c 940e e05b 	CALL __PUTPARD1
00929e 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 036D                             }
                 ; 0016 036E                             break;
                 ; 0016 036F         }
                 _0x2C01AB:
                 ; 0016 0370     }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
0092a0 c48f      	RJMP _0x2C01B2
                 _0x2C01A8:
0092a1 91a0 14df 	LDS  R26,_currentPage
0092a3 31aa      	CPI  R26,LOW(0x1A)
0092a4 f011      	BREQ PC+3
0092a5 940c 92f2 	JMP _0x2C01B3
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
0092a7 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
0092a9 f431      	BRNE _0x2C01B7
0092aa e1e5      	LDI  R30,LOW(21)
0092ab 940e d470 	CALL SUBOPT_0x2EC
0092ad 940e d5d5 	CALL SUBOPT_0x320
0092af c041      	RJMP _0x2C01B6
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B7:
0092b0 30e2      	CPI  R30,LOW(0x2)
0092b1 e0a0      	LDI  R26,HIGH(0x2)
0092b2 07fa      	CPC  R31,R26
0092b3 f451      	BRNE _0x2C01B8
0092b4 940e d269 	CALL SUBOPT_0x2C0
0092b6 30a2      	CPI  R26,LOW(0x2)
0092b7 f01c      	BRLT _0x2C01B9
0092b8 e0e0      	LDI  R30,LOW(0)
0092b9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01B9:
0092bb 940e d5e5 	CALL SUBOPT_0x323
0092bd c033      	RJMP _0x2C01B6
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B8:
0092be 30e3      	CPI  R30,LOW(0x3)
0092bf e0a0      	LDI  R26,HIGH(0x3)
0092c0 07fa      	CPC  R31,R26
0092c1 f449      	BRNE _0x2C01BA
0092c2 940e d255 	CALL SUBOPT_0x2BE
0092c4 f41c      	BRGE _0x2C01BB
0092c5 e0e1      	LDI  R30,LOW(1)
0092c6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01BB:
0092c8 940e d5e5 	CALL SUBOPT_0x323
0092ca c026      	RJMP _0x2C01B6
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01BA:
0092cb 30e4      	CPI  R30,LOW(0x4)
0092cc e0a0      	LDI  R26,HIGH(0x4)
0092cd 07fa      	CPC  R31,R26
0092ce f511      	BRNE _0x2C01B6
0092cf 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0092d1 30e0      	CPI  R30,0
0092d2 f469      	BRNE _0x2C01BD
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
0092d3 940e d5ea 	CALL SUBOPT_0x324
0092d5 f018      	BRLO _0x2C01BE
0092d6 e0e0      	LDI  R30,LOW(0)
0092d7 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01BE:
0092d9 940e d5f1 	CALL SUBOPT_0x325
0092db 940e d5d0 	CALL SUBOPT_0x31F
0092dd 940e d092 	CALL SUBOPT_0x284
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
0092df c011      	RJMP _0x2C01BF
                 _0x2C01BD:
0092e0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092e2 30a1      	CPI  R26,LOW(0x1)
0092e3 f431      	BRNE _0x2C01C0
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
0092e4 e1eb      	LDI  R30,LOW(27)
0092e5 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
0092e7 940e d611 	CALL SUBOPT_0x32A
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
0092e9 c007      	RJMP _0x2C01C1
                 _0x2C01C0:
                 ; 0016 0381                                 currentPage = P_MONITOR;
0092ea e0e0      	LDI  R30,LOW(0)
0092eb 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
0092ed 940e d2b8 	CALL SUBOPT_0x2C8
0092ef 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0384                             }
                 _0x2C01C1:
                 _0x2C01BF:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01B6:
                 ; 0016 0387     }
                 ; 0016 0388     else if ( currentPage == P_CAL2_MENU )
0092f1 c43e      	RJMP _0x2C01C2
                 _0x2C01B3:
0092f2 91a0 14df 	LDS  R26,_currentPage
0092f4 31ab      	CPI  R26,LOW(0x1B)
0092f5 f011      	BREQ PC+3
0092f6 940c 93a6 	JMP _0x2C01C3
                 ; 0016 0389     {
                 ; 0016 038A         switch(key){
0092f8 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 038B         case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
0092fa f451      	BRNE _0x2C01C7
0092fb e1ea      	LDI  R30,LOW(26)
0092fc 940e d282 	CALL SUBOPT_0x2C2
0092fe 940e d5c9 	CALL SUBOPT_0x31E
009300 940e d5d0 	CALL SUBOPT_0x31F
009302 940e d092 	CALL SUBOPT_0x284
009304 c0a0      	RJMP _0x2C01C6
                 ; 0016 038C         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C7:
009305 30e2      	CPI  R30,LOW(0x2)
009306 e0a0      	LDI  R26,HIGH(0x2)
009307 07fa      	CPC  R31,R26
009308 f449      	BRNE _0x2C01C8
009309 940e d255 	CALL SUBOPT_0x2BE
00930b f41c      	BRGE _0x2C01C9
00930c e0e3      	LDI  R30,LOW(3)
00930d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01C9:
00930f 940e d25c 	CALL SUBOPT_0x2BF
009311 c093      	RJMP _0x2C01C6
                 ; 0016 038D         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C8:
009312 30e3      	CPI  R30,LOW(0x3)
009313 e0a0      	LDI  R26,HIGH(0x3)
009314 07fa      	CPC  R31,R26
009315 f451      	BRNE _0x2C01CA
009316 940e d269 	CALL SUBOPT_0x2C0
009318 30a4      	CPI  R26,LOW(0x4)
009319 f01c      	BRLT _0x2C01CB
00931a e0e0      	LDI  R30,LOW(0)
00931b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01CB:
00931d 940e d25c 	CALL SUBOPT_0x2BF
00931f c085      	RJMP _0x2C01C6
                 ; 0016 038E         case KEY_OK     :   if(cursor < 3){
                 _0x2C01CA:
009320 30e4      	CPI  R30,LOW(0x4)
009321 e0a0      	LDI  R26,HIGH(0x4)
009322 07fa      	CPC  R31,R26
009323 f011      	BREQ PC+3
009324 940c 93a5 	JMP _0x2C01C6
009326 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009328 30a3      	CPI  R26,LOW(0x3)
009329 f014      	BRLT PC+3
00932a 940c 9390 	JMP _0x2C01CD
                 ; 0016 038F                                 if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
00932c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00932e 30e0      	CPI  R30,0
00932f f411      	BRNE _0x2C01CE
009330 e1ec      	LDI  R30,LOW(28)
009331 c00b      	RJMP _0x2C02C9
                 ; 0016 0390                                 else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 _0x2C01CE:
009332 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009334 30a1      	CPI  R26,LOW(0x1)
009335 f411      	BRNE _0x2C01D0
009336 e1ed      	LDI  R30,LOW(29)
009337 c005      	RJMP _0x2C02C9
                 ; 0016 0391                                 else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 _0x2C01D0:
009338 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00933a 30a2      	CPI  R26,LOW(0x2)
00933b f419      	BRNE _0x2C01D2
00933c e1ee      	LDI  R30,LOW(30)
                 _0x2C02C9:
00933d 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0392 
                 ; 0016 0393                                 printOLED("CP%1d%1d",cursor+1,prb1+1);
                 _0x2C01D2:
                +
00933f eae5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
009340 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
009341 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
009342 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
009343 940e e05b 	CALL __PUTPARD1
009345 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009347 e0f0      	LDI  R31,0
009348 fde7      	SBRC R30,7
009349 efff      	SER  R31
00934a 940e ccdc 	CALL SUBOPT_0x200
00934c 940e d5d0 	CALL SUBOPT_0x31F
00934e 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0394 
                 ; 0016 0395                                 res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
009350 940e d604 	CALL SUBOPT_0x328
009352 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009354 e0f0      	LDI  R31,0
009355 fde7      	SBRC R30,7
009356 efff      	SER  R31
009357 59eb      	SUBI R30,LOW(-101)
009358 4fff      	SBCI R31,HIGH(-101)
009359 940e d616 	CALL SUBOPT_0x32B
00935b 940e 716c 	CALL _sensorGetCurrentSetPoint
00935d 01af      	MOVW R20,R30
                 ; 0016 0396                                 if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
00935e 2355      	TST  R21
00935f f442      	BRPL _0x2C01D3
009360 e6eb      	LDI  R30,LOW(_calPnt_S0160000000)
009361 e1fa      	LDI  R31,HIGH(_calPnt_S0160000000)
009362 940e c68d 	CALL SUBOPT_0xF6
009364 e0a6      	LDI  R26,LOW(6)
009365 e0b0      	LDI  R27,0
009366 940e a59f 	CALL _memset
                 ; 0016 0397                                 for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 _0x2C01D3:
                +
009368 e000     +LDI R16 , LOW ( 0 )
009369 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01D5:
                +
00936a 3006     +CPI R16 , LOW ( 6 )
00936b e0e0     +LDI R30 , HIGH ( 6 )
00936c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
00936d f4f4      	BRGE _0x2C01D6
00936e 940e d61b 	CALL SUBOPT_0x32C
009370 01f8      	MOVW R30,R16
009371 940e cf40 	CALL SUBOPT_0x250
009373 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
009374 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009375 940e d497 	CALL SUBOPT_0x2F2
009377 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0398                                                     printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                +
009379 ebe7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 959 ) )
00937a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 959 ) )
00937b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 959 ) )
00937c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 959 ) )
                 	__POINTD1FN _0x2C0000,959
00937d 940e e05b 	CALL __PUTPARD1
00937f 01f8      	MOVW R30,R16
009380 940e cf40 	CALL SUBOPT_0x250
009382 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
009383 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009384 0fa0      	ADD  R26,R16
009385 1fb1      	ADC  R27,R17
009386 91ec      	LD   R30,X
009387 940e ce2c 	CALL SUBOPT_0x22A
                +
009389 5f0f     +SUBI R16 , LOW ( - 1 )
00938a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00938b cfde      	RJMP _0x2C01D5
                 _0x2C01D6:
                 ; 0016 0399                                 cursor      = 0;
00938c e0e0      	LDI  R30,LOW(0)
00938d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 039A                             }
                 ; 0016 039B                             else if(cursor == 3){       // -- Calculate
00938f c015      	RJMP _0x2C01D7
                 _0x2C01CD:
009390 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009392 30a3      	CPI  R26,LOW(0x3)
009393 f451      	BRNE _0x2C01D8
                 ; 0016 039C                                 currentPage = P_CAL2_CONFIRM;
009394 e1ef      	LDI  R30,LOW(31)
009395 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 039D                                 cursor      = 0;
                 ; 0016 039E                                 printOLED("CC%1d",prb1+1);
009397 940e d5fd 	CALL SUBOPT_0x327
009399 940e d5d0 	CALL SUBOPT_0x31F
00939b 940e d092 	CALL SUBOPT_0x284
                 ; 0016 039F                             }
                 ; 0016 03A0                             else{                       // -- Exit -- should not occur
00939d c007      	RJMP _0x2C01D9
                 _0x2C01D8:
                 ; 0016 03A1                                 currentPage = P_MONITOR;
00939e e0e0      	LDI  R30,LOW(0)
00939f 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 03A2                                 cursor      = 0;
                 ; 0016 03A3                                 printOLED("M0");
0093a1 940e d2b8 	CALL SUBOPT_0x2C8
0093a3 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 03A4                             }
                 _0x2C01D9:
                 _0x2C01D7:
                 ; 0016 03A5             break;
                 ; 0016 03A6         }
                 _0x2C01C6:
                 ; 0016 03A7     }
                 ; 0016 03A8     else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
0093a5 c38a      	RJMP _0x2C01DA
                 _0x2C01C3:
0093a6 91a0 14df 	LDS  R26,_currentPage
0093a8 31ac      	CPI  R26,LOW(0x1C)
0093a9 f029      	BREQ _0x2C01DC
0093aa 31ad      	CPI  R26,LOW(0x1D)
0093ab f019      	BREQ _0x2C01DC
0093ac 31ae      	CPI  R26,LOW(0x1E)
0093ad f009      	BREQ _0x2C01DC
0093ae c0c7      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 03A9     {
                 ; 0016 03AA         switch(key){
0093af 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 03AB         case KEY_MODE   :   currentPage = P_CAL2_MENU;
0093b1 f4c9      	BRNE _0x2C01E1
0093b2 e1eb      	LDI  R30,LOW(27)
0093b3 93e0 14df 	STS  _currentPage,R30
                 ; 0016 03AC                             if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
0093b5 91a0 14df 	LDS  R26,_currentPage
0093b7 31ac      	CPI  R26,LOW(0x1C)
0093b8 f411      	BRNE _0x2C01E2
0093b9 e0e0      	LDI  R30,LOW(0)
0093ba c00b      	RJMP _0x2C02CA
                 ; 0016 03AD                             else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 _0x2C01E2:
0093bb 91a0 14df 	LDS  R26,_currentPage
0093bd 31ad      	CPI  R26,LOW(0x1D)
0093be f411      	BRNE _0x2C01E4
0093bf e0e1      	LDI  R30,LOW(1)
0093c0 c005      	RJMP _0x2C02CA
                 ; 0016 03AE                             else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 _0x2C01E4:
0093c1 91a0 14df 	LDS  R26,_currentPage
0093c3 31ae      	CPI  R26,LOW(0x1E)
0093c4 f419      	BRNE _0x2C01E6
0093c5 e0e2      	LDI  R30,LOW(2)
                 _0x2C02CA:
0093c6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 03AF                             printOLED("M8%1d",cursor);                                                                      break;
                 _0x2C01E6:
0093c8 940e d611 	CALL SUBOPT_0x32A
0093ca c0aa      	RJMP _0x2C01E0
                 ; 0016 03B0         case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E1:
0093cb 30e2      	CPI  R30,LOW(0x2)
0093cc e0a0      	LDI  R26,HIGH(0x2)
0093cd 07fa      	CPC  R31,R26
0093ce f451      	BRNE _0x2C01E7
0093cf 940e d269 	CALL SUBOPT_0x2C0
0093d1 30a7      	CPI  R26,LOW(0x7)
0093d2 f01c      	BRLT _0x2C01E8
0093d3 e0e0      	LDI  R30,LOW(0)
0093d4 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01E8:
0093d6 940e d622 	CALL SUBOPT_0x32D
0093d8 c09c      	RJMP _0x2C01E0
                 ; 0016 03B1         case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E7:
0093d9 30e3      	CPI  R30,LOW(0x3)
0093da e0a0      	LDI  R26,HIGH(0x3)
0093db 07fa      	CPC  R31,R26
0093dc f449      	BRNE _0x2C01E9
0093dd 940e d255 	CALL SUBOPT_0x2BE
0093df f41c      	BRGE _0x2C01EA
0093e0 e0e6      	LDI  R30,LOW(6)
0093e1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
0093e3 940e d622 	CALL SUBOPT_0x32D
0093e5 c08f      	RJMP _0x2C01E0
                 ; 0016 03B2         case KEY_OK     :   if(cursor == 6){
                 _0x2C01E9:
0093e6 30e4      	CPI  R30,LOW(0x4)
0093e7 e0a0      	LDI  R26,HIGH(0x4)
0093e8 07fa      	CPC  R31,R26
0093e9 f011      	BREQ PC+3
0093ea 940c 9475 	JMP _0x2C01E0
0093ec 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0093ee 30a6      	CPI  R26,LOW(0x6)
0093ef f011      	BREQ PC+3
0093f0 940c 9436 	JMP _0x2C01EC
                 ; 0016 03B3 
                 ; 0016 03B4                                 if(currentPage == P_CAL2_SPT1){
0093f2 91a0 14df 	LDS  R26,_currentPage
0093f4 31ac      	CPI  R26,LOW(0x1C)
0093f5 f451      	BRNE _0x2C01ED
                 ; 0016 03B5                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
0093f6 940e d604 	CALL SUBOPT_0x328
0093f8 e6e5      	LDI  R30,LOW(101)
0093f9 e0f0      	LDI  R31,HIGH(101)
0093fa 940e d616 	CALL SUBOPT_0x32B
0093fc 940e 72ec 	CALL _sensorSetCurrentSetPoint
0093fe 01af      	MOVW R20,R30
                 ; 0016 03B6                                 }
                 ; 0016 03B7                                 else if(currentPage == P_CAL2_SPT2){
0093ff c01e      	RJMP _0x2C01EE
                 _0x2C01ED:
009400 91a0 14df 	LDS  R26,_currentPage
009402 31ad      	CPI  R26,LOW(0x1D)
009403 f451      	BRNE _0x2C01EF
                 ; 0016 03B8                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
009404 940e d604 	CALL SUBOPT_0x328
009406 e6e6      	LDI  R30,LOW(102)
009407 e0f0      	LDI  R31,HIGH(102)
009408 940e d616 	CALL SUBOPT_0x32B
00940a 940e 72ec 	CALL _sensorSetCurrentSetPoint
00940c 01af      	MOVW R20,R30
                 ; 0016 03B9                                 }
                 ; 0016 03BA                                 else if(currentPage == P_CAL2_SPT3){
00940d c010      	RJMP _0x2C01F0
                 _0x2C01EF:
00940e 91a0 14df 	LDS  R26,_currentPage
009410 31ae      	CPI  R26,LOW(0x1E)
009411 f451      	BRNE _0x2C01F1
                 ; 0016 03BB                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
009412 940e d604 	CALL SUBOPT_0x328
009414 e6e7      	LDI  R30,LOW(103)
009415 e0f0      	LDI  R31,HIGH(103)
009416 940e d616 	CALL SUBOPT_0x32B
009418 940e 72ec 	CALL _sensorSetCurrentSetPoint
00941a 01af      	MOVW R20,R30
                 ; 0016 03BC                                 }
                 ; 0016 03BD                                 else{
00941b c002      	RJMP _0x2C01F2
                 _0x2C01F1:
                 ; 0016 03BE                                     // -- should not occur -- //
                 ; 0016 03BF                                     res = -1;
                +
00941c ef4f     +LDI R20 , LOW ( - 1 )
00941d ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 ; 0016 03C0                                 }
                 _0x2C01F2:
                 _0x2C01F0:
                 _0x2C01EE:
                 ; 0016 03C1 
                 ; 0016 03C2                                 if(res < 0){
00941e 2355      	TST  R21
00941f f44a      	BRPL _0x2C01F3
                 ; 0016 03C3                                     currentPage = P_FAILED;
009420 940e d627 	CALL SUBOPT_0x32E
                 ; 0016 03C4                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5                                     tmpPrevPage = currentPage;
009422 91e0 14df 	LDS  R30,_currentPage
009424 940e d531 	CALL SUBOPT_0x306
                 ; 0016 03C6                                     cursor      = 0;
                 ; 0016 03C7                                     printOLED("FL");
009426 940e d4c3 	CALL SUBOPT_0x2F9
009428 c008      	RJMP _0x2C02CB
                 ; 0016 03C8                                 }
                 ; 0016 03C9                                 else{
                 _0x2C01F3:
                 ; 0016 03CA                                     currentPage = P_FINISH;
009429 940e d62e 	CALL SUBOPT_0x32F
                 ; 0016 03CB                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC                                     tmpPrevPage = currentPage;
00942b 91e0 14df 	LDS  R30,_currentPage
00942d 940e d531 	CALL SUBOPT_0x306
                 ; 0016 03CD                                     cursor      = 0;
                 ; 0016 03CE                                     printOLED("FI");
00942f 940e d4c8 	CALL SUBOPT_0x2FA
                 _0x2C02CB:
009431 940e e05b 	CALL __PUTPARD1
009433 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 03CF                                 }
                 ; 0016 03D0                             }
                 ; 0016 03D1                             else if(cursor == 0){   // toggle '+' & '-'
009435 c03f      	RJMP _0x2C01F5
                 _0x2C01EC:
009436 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009438 30e0      	CPI  R30,0
009439 f4c9      	BRNE _0x2C01F6
                 ; 0016 03D2                                 if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
00943a 940e d543 	CALL SUBOPT_0x309
00943c 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
00943d 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
00943e 91ec      	LD   R30,X
00943f 5fef      	SUBI R30,-LOW(1)
009440 93ec      	ST   X,R30
009441 30e2      	CPI  R30,LOW(0x2)
009442 f020      	BRLO _0x2C01F7
009443 940e d635 	CALL SUBOPT_0x330
009445 e0a0      	LDI  R26,LOW(0)
009446 83a0      	STD  Z+0,R26
                 ; 0016 03D3                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01F7:
009447 940e d61b 	CALL SUBOPT_0x32C
009449 940e d556 	CALL SUBOPT_0x30C
00944b 940e d635 	CALL SUBOPT_0x330
00944d 81e0      	LD   R30,Z
00944e 940e c2f3 	CALL SUBOPT_0x65
009450 940e d080 	CALL SUBOPT_0x280
                 ; 0016 03D4                             }
                 ; 0016 03D5                             else if(cursor < 6){
009452 c022      	RJMP _0x2C01F8
                 _0x2C01F6:
009453 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009455 30a6      	CPI  R26,LOW(0x6)
009456 f4bc      	BRGE _0x2C01F9
                 ; 0016 03D6                                 if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
009457 940e d543 	CALL SUBOPT_0x309
009459 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
00945a 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
00945b 940e d582 	CALL SUBOPT_0x313
00945d f020      	BRLO _0x2C01FA
00945e 940e d635 	CALL SUBOPT_0x330
009460 e0a0      	LDI  R26,LOW(0)
009461 83a0      	STD  Z+0,R26
                 ; 0016 03D7                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01FA:
009462 940e d61b 	CALL SUBOPT_0x32C
009464 940e d556 	CALL SUBOPT_0x30C
009466 940e d635 	CALL SUBOPT_0x330
009468 81e0      	LD   R30,Z
009469 940e c2f3 	CALL SUBOPT_0x65
00946b 940e d080 	CALL SUBOPT_0x280
                 ; 0016 03D8                             }
                 ; 0016 03D9                             else{                       // -- Exit -- should not occur
00946d c007      	RJMP _0x2C01FB
                 _0x2C01F9:
                 ; 0016 03DA                                 currentPage = P_MONITOR;
00946e e0e0      	LDI  R30,LOW(0)
00946f 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 03DB                                 cursor      = 0;
                 ; 0016 03DC                                 printOLED("M0");
009471 940e d2b8 	CALL SUBOPT_0x2C8
009473 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 03DD                             }
                 _0x2C01FB:
                 _0x2C01F8:
                 _0x2C01F5:
                 ; 0016 03DE             break;
                 ; 0016 03DF         }
                 _0x2C01E0:
                 ; 0016 03E0     }
                 ; 0016 03E1     else if ( currentPage == P_CAL2_CONFIRM )
009475 c2ba      	RJMP _0x2C01FC
                 _0x2C01DB:
009476 91a0 14df 	LDS  R26,_currentPage
009478 31af      	CPI  R26,LOW(0x1F)
009479 f589      	BRNE _0x2C01FD
                 ; 0016 03E2     {
                 ; 0016 03E3         switch(key){
00947a 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 03E4         case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
00947c f431      	BRNE _0x2C0201
00947d e1eb      	LDI  R30,LOW(27)
00947e 940e d46a 	CALL SUBOPT_0x2EB
009480 940e d611 	CALL SUBOPT_0x32A
009482 c027      	RJMP _0x2C0200
                 ; 0016 03E5         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C0201:
009483 30e2      	CPI  R30,LOW(0x2)
009484 e0a0      	LDI  R26,HIGH(0x2)
009485 07fa      	CPC  R31,R26
009486 f119      	BREQ _0x2C0200
                 ; 0016 03E6         case KEY_DOWN   :   /* no operation */                                                                  break;
009487 30e3      	CPI  R30,LOW(0x3)
009488 e0a0      	LDI  R26,HIGH(0x3)
009489 07fa      	CPC  R31,R26
00948a f0f9      	BREQ _0x2C0200
                 ; 0016 03E7         case KEY_OK     :   res = sensorCalibrate2(prb1);
00948b 30e4      	CPI  R30,LOW(0x4)
00948c e0a0      	LDI  R26,HIGH(0x4)
00948d 07fa      	CPC  R31,R26
00948e f4d9      	BRNE _0x2C0200
00948f 91a0 1a69 	LDS  R26,_prb1_S0160000000
009491 27bb      	CLR  R27
009492 940e 6ff1 	CALL _sensorCalibrate2
009494 01af      	MOVW R20,R30
                 ; 0016 03E8                             if(res < 0){
009495 2355      	TST  R21
009496 f442      	BRPL _0x2C0205
                 ; 0016 03E9                                 currentPage = P_FAILED;
009497 940e d627 	CALL SUBOPT_0x32E
                 ; 0016 03EA                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB                                 tmpPrevPage = P_CAL2_CONFIRM;
009499 e1ef      	LDI  R30,LOW(31)
00949a 940e d531 	CALL SUBOPT_0x306
                 ; 0016 03EC                                 cursor      = 0;
                 ; 0016 03ED                                 printOLED("FL");
00949c 940e d4c3 	CALL SUBOPT_0x2F9
00949e c007      	RJMP _0x2C02CC
                 ; 0016 03EE                             }
                 ; 0016 03EF                             else{
                 _0x2C0205:
                 ; 0016 03F0                                 currentPage = P_FINISH;
00949f 940e d62e 	CALL SUBOPT_0x32F
                 ; 0016 03F1                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2                                 tmpPrevPage = P_CAL2_CONFIRM;
0094a1 e1ef      	LDI  R30,LOW(31)
0094a2 940e d531 	CALL SUBOPT_0x306
                 ; 0016 03F3                                 cursor      = 0;
                 ; 0016 03F4                                 printOLED("FI");
0094a4 940e d4c8 	CALL SUBOPT_0x2FA
                 _0x2C02CC:
0094a6 940e e05b 	CALL __PUTPARD1
0094a8 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 03F5                             }
                 ; 0016 03F6                             break;
                 ; 0016 03F7         }
                 _0x2C0200:
                 ; 0016 03F8     }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
0094aa c285      	RJMP _0x2C0207
                 _0x2C01FD:
0094ab 91a0 14df 	LDS  R26,_currentPage
0094ad 32a0      	CPI  R26,LOW(0x20)
0094ae f591      	BRNE _0x2C0208
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
0094af 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
0094b1 f449      	BRNE _0x2C020C
0094b2 e1e5      	LDI  R30,LOW(21)
0094b3 93e0 14df 	STS  _currentPage,R30
0094b5 e0e3      	LDI  R30,LOW(3)
0094b6 93e0 1a1f 	STS  _cursor_S0160000000,R30
0094b8 940e d5d5 	CALL SUBOPT_0x320
0094ba c025      	RJMP _0x2C020B
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C020C:
0094bb 30e2      	CPI  R30,LOW(0x2)
0094bc e0a0      	LDI  R26,HIGH(0x2)
0094bd 07fa      	CPC  R31,R26
0094be f109      	BREQ _0x2C020B
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
0094bf 30e3      	CPI  R30,LOW(0x3)
0094c0 e0a0      	LDI  R26,HIGH(0x3)
0094c1 07fa      	CPC  R31,R26
0094c2 f0e9      	BREQ _0x2C020B
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
0094c3 30e4      	CPI  R30,LOW(0x4)
0094c4 e0a0      	LDI  R26,HIGH(0x4)
0094c5 07fa      	CPC  R31,R26
0094c6 f4c9      	BRNE _0x2C020B
0094c7 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
0094c8 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0094c9 940e c68d 	CALL SUBOPT_0xF6
0094cb 940e c372 	CALL SUBOPT_0x77
0094cd 940e a59f 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
0094cf 940e d5a1 	CALL SUBOPT_0x319
0094d1 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
0094d2 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0094d3 940e d129 	CALL SUBOPT_0x29B
0094d5 d607      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
0094d6 e2e4      	LDI  R30,LOW(36)
0094d7 940e d2a2 	CALL SUBOPT_0x2C5
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
0094d9 e2e0      	LDI  R30,LOW(32)
0094da 940e d531 	CALL SUBOPT_0x306
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
0094dc 940e d4c8 	CALL SUBOPT_0x2FA
0094de 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C020B:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
0094e0 c24f      	RJMP _0x2C0210
                 _0x2C0208:
0094e1 91a0 14df 	LDS  R26,_currentPage
0094e3 32a1      	CPI  R26,LOW(0x21)
0094e4 f011      	BREQ PC+3
0094e5 940c 95c2 	JMP _0x2C0211
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
0094e7 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
0094e9 f569      	BRNE _0x2C0215
0094ea 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
0094ec e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
0094ed 30e2      	CPI  R30,LOW(0x2)
0094ee e0a0      	LDI  R26,HIGH(0x2)
0094ef 07fa      	CPC  R31,R26
0094f0 f431      	BRNE _0x2C0219
0094f1 e0e2      	LDI  R30,LOW(2)
0094f2 940e d46a 	CALL SUBOPT_0x2EB
0094f4 940e d476 	CALL SUBOPT_0x2ED
0094f6 c013      	RJMP _0x2C02CD
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0219:
0094f7 30ee      	CPI  R30,LOW(0xE)
0094f8 e0a0      	LDI  R26,HIGH(0xE)
0094f9 07fa      	CPC  R31,R26
0094fa f431      	BRNE _0x2C021A
0094fb e0ee      	LDI  R30,LOW(14)
0094fc 940e d46a 	CALL SUBOPT_0x2EB
0094fe 940e d63b 	CALL SUBOPT_0x331
009500 c009      	RJMP _0x2C02CD
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C021A:
009501 31e1      	CPI  R30,LOW(0x11)
009502 e0a0      	LDI  R26,HIGH(0x11)
009503 07fa      	CPC  R31,R26
009504 f459      	BRNE _0x2C0218
009505 e1e1      	LDI  R30,LOW(17)
009506 940e d46a 	CALL SUBOPT_0x2EB
009508 940e d640 	CALL SUBOPT_0x332
                 _0x2C02CD:
00950a 940e e05b 	CALL __PUTPARD1
00950c 940e d556 	CALL SUBOPT_0x30C
00950e 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0410                             }
                 _0x2C0218:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
009510 940e d645 	CALL SUBOPT_0x333
009512 940e d59d 	CALL SUBOPT_0x318
009514 940e a59f 	CALL _memset
009516 c0aa      	RJMP _0x2C0214
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0215:
009517 30e2      	CPI  R30,LOW(0x2)
009518 e0a0      	LDI  R26,HIGH(0x2)
009519 07fa      	CPC  R31,R26
00951a f481      	BRNE _0x2C021C
00951b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00951d 30a4      	CPI  R26,LOW(0x4)
00951e f414      	BRGE _0x2C021D
00951f 940e d570 	CALL SUBOPT_0x310
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C021D:
009521 940e d269 	CALL SUBOPT_0x2C0
009523 30a5      	CPI  R26,LOW(0x5)
009524 f01c      	BRLT _0x2C021E
009525 e0e0      	LDI  R30,LOW(0)
009526 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C021E:
009528 940e d575 	CALL SUBOPT_0x311
00952a c096      	RJMP _0x2C0214
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C021C:
00952b 30e3      	CPI  R30,LOW(0x3)
00952c e0a0      	LDI  R26,HIGH(0x3)
00952d 07fa      	CPC  R31,R26
00952e f479      	BRNE _0x2C021F
00952f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009531 30a4      	CPI  R26,LOW(0x4)
009532 f414      	BRGE _0x2C0220
009533 940e d570 	CALL SUBOPT_0x310
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C0220:
009535 940e d255 	CALL SUBOPT_0x2BE
009537 f41c      	BRGE _0x2C0221
009538 e0e4      	LDI  R30,LOW(4)
009539 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0221:
00953b 940e d575 	CALL SUBOPT_0x311
00953d c083      	RJMP _0x2C0214
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C021F:
00953e 30e4      	CPI  R30,LOW(0x4)
00953f e0a0      	LDI  R26,HIGH(0x4)
009540 07fa      	CPC  R31,R26
009541 f011      	BREQ PC+3
009542 940c 95c1 	JMP _0x2C0214
009544 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009546 30a4      	CPI  R26,LOW(0x4)
009547 f011      	BREQ PC+3
009548 940c 95ac 	JMP _0x2C0223
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
00954a 940e d645 	CALL SUBOPT_0x333
00954c 940e d31f 	CALL SUBOPT_0x2D6
00954e 940e d129 	CALL SUBOPT_0x29B
009550 d59f      	RCALL _recmp
009551 9730      	SBIW R30,0
009552 f061      	BREQ _0x2C0224
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
009553 e2e3      	LDI  R30,LOW(35)
009554 940e d282 	CALL SUBOPT_0x2C2
009556 940e d64a 	CALL SUBOPT_0x334
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
009558 940e d645 	CALL SUBOPT_0x333
00955a 940e d59d 	CALL SUBOPT_0x318
00955c 940e a59f 	CALL _memset
                 ; 0016 041D                                     break;
00955e c062      	RJMP _0x2C0214
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C0224:
00955f 940e d64f 	CALL SUBOPT_0x335
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
009561 f431      	BRNE _0x2C0228
009562 e0e7      	LDI  R30,LOW(7)
009563 940e d282 	CALL SUBOPT_0x2C2
009565 940e d49c 	CALL SUBOPT_0x2F3
009567 c043      	RJMP _0x2C0227
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C0228:
009568 31e0      	CPI  R30,LOW(0x10)
009569 e0a0      	LDI  R26,HIGH(0x10)
00956a 07fa      	CPC  R31,R26
00956b f521      	BRNE _0x2C0229
00956c e1e0      	LDI  R30,LOW(16)
00956d 940e d282 	CALL SUBOPT_0x2C2
                +
00956f ede4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 988 ) )
009570 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 988 ) )
009571 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 988 ) )
009572 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 988 ) )
                 	__POINTD1FN _0x2C0000,988
009573 940e d45e 	CALL SUBOPT_0x2E9
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
009575 e000     +LDI R16 , LOW ( 0 )
009576 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C022B:
                +
009577 3005     +CPI R16 , LOW ( 5 )
009578 e0e0     +LDI R30 , HIGH ( 5 )
009579 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00957a f4a4      	BRGE _0x2C022C
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
00957b 01d8      	MOVW R26,R16
00957c 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
00957d 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
00957e 940e d305 	CALL SUBOPT_0x2D2
009580 81e0      	LD   R30,Z
009581 940e d54e 	CALL SUBOPT_0x30B
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
009583 01f8      	MOVW R30,R16
009584 940e cf40 	CALL SUBOPT_0x250
009586 e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
009587 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
009588 940e d497 	CALL SUBOPT_0x2F2
00958a 940e d080 	CALL SUBOPT_0x280
                 ; 0016 0427                                                       }
                +
00958c 5f0f     +SUBI R16 , LOW ( - 1 )
00958d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00958e cfe8      	RJMP _0x2C022B
                 _0x2C022C:
                 ; 0016 0428                                                       break;
00958f c01b      	RJMP _0x2C0227
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C0229:
009590 31e3      	CPI  R30,LOW(0x13)
009591 e0a0      	LDI  R26,HIGH(0x13)
009592 07fa      	CPC  R31,R26
009593 f471      	BRNE _0x2C022E
009594 e1e3      	LDI  R30,LOW(19)
009595 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
009597 940e d598 	CALL SUBOPT_0x317
009599 940e d59d 	CALL SUBOPT_0x318
00959b 940e d2b2 	CALL SUBOPT_0x2C7
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
00959d ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
00959e e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
00959f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
0095a0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
0095a1 c005      	RJMP _0x2C02CE
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C022E:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
0095a2 e0e0      	LDI  R30,LOW(0)
0095a3 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
0095a5 940e d2b8 	CALL SUBOPT_0x2C8
                 _0x2C02CE:
0095a7 940e e05b 	CALL __PUTPARD1
0095a9 940e d0bb 	CALL SUBOPT_0x289
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C0227:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
0095ab c015      	RJMP _0x2C022F
                 _0x2C0223:
0095ac 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095ae 30a4      	CPI  R26,LOW(0x4)
0095af f48c      	BRGE _0x2C0230
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
0095b0 940e d543 	CALL SUBOPT_0x309
0095b2 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
0095b3 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
0095b4 940e d582 	CALL SUBOPT_0x313
0095b6 f024      	BRLT _0x2C0231
0095b7 940e d656 	CALL SUBOPT_0x336
0095b9 e0a0      	LDI  R26,LOW(0)
0095ba 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0231:
0095bb 940e d58d 	CALL SUBOPT_0x315
0095bd 940e d656 	CALL SUBOPT_0x336
0095bf 940e d594 	CALL SUBOPT_0x316
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C0230:
                 _0x2C022F:
                 ; 0016 043A         }
                 _0x2C0214:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
0095c1 c16e      	RJMP _0x2C0232
                 _0x2C0211:
0095c2 91a0 14df 	LDS  R26,_currentPage
0095c4 32a2      	CPI  R26,LOW(0x22)
0095c5 f011      	BREQ PC+3
0095c6 940c 963d 	JMP _0x2C0233
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
0095c8 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
0095ca f419      	BRNE _0x2C0237
0095cb 940e d5b0 	CALL SUBOPT_0x31B
0095cd c06e      	RJMP _0x2C0236
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0237:
0095ce 30e2      	CPI  R30,LOW(0x2)
0095cf e0a0      	LDI  R26,HIGH(0x2)
0095d0 07fa      	CPC  R31,R26
0095d1 f481      	BRNE _0x2C0238
0095d2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095d4 30a4      	CPI  R26,LOW(0x4)
0095d5 f414      	BRGE _0x2C0239
0095d6 940e d570 	CALL SUBOPT_0x310
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C0239:
0095d8 940e d269 	CALL SUBOPT_0x2C0
0095da 30a5      	CPI  R26,LOW(0x5)
0095db f01c      	BRLT _0x2C023A
0095dc e0e0      	LDI  R30,LOW(0)
0095dd 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023A:
0095df 940e d575 	CALL SUBOPT_0x311
0095e1 c05a      	RJMP _0x2C0236
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0238:
0095e2 30e3      	CPI  R30,LOW(0x3)
0095e3 e0a0      	LDI  R26,HIGH(0x3)
0095e4 07fa      	CPC  R31,R26
0095e5 f479      	BRNE _0x2C023B
0095e6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095e8 30a4      	CPI  R26,LOW(0x4)
0095e9 f414      	BRGE _0x2C023C
0095ea 940e d570 	CALL SUBOPT_0x310
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C023C:
0095ec 940e d255 	CALL SUBOPT_0x2BE
0095ee f41c      	BRGE _0x2C023D
0095ef e0e4      	LDI  R30,LOW(4)
0095f0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023D:
0095f2 940e d575 	CALL SUBOPT_0x311
0095f4 c047      	RJMP _0x2C0236
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C023B:
0095f5 30e4      	CPI  R30,LOW(0x4)
0095f6 e0a0      	LDI  R26,HIGH(0x4)
0095f7 07fa      	CPC  R31,R26
0095f8 f011      	BREQ PC+3
0095f9 940c 963c 	JMP _0x2C0236
0095fb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095fd 30a4      	CPI  R26,LOW(0x4)
0095fe f541      	BRNE _0x2C023F
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
0095ff 940e d645 	CALL SUBOPT_0x333
                +
009601 01fe     +MOVW R30 , R28
009602 5be0     +SUBI R30 , LOW ( - 80 )
009603 4fff     +SBCI R31 , HIGH ( - 80 )
009604 9001     +LD R0 , Z +
009605 81f0     +LD R31 , Z
009606 2de0     +MOV R30 , R0
                 	__GETW1SX 80
009607 940e d129 	CALL SUBOPT_0x29B
009609 d4e6      	RCALL _recmp
00960a 9730      	SBIW R30,0
00960b f079      	BREQ _0x2C0240
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
00960c e0e1      	LDI  R30,LOW(1)
00960d 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
00960f e2e3      	LDI  R30,LOW(35)
009610 940e d282 	CALL SUBOPT_0x2C2
009612 940e d64a 	CALL SUBOPT_0x334
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
009614 940e d645 	CALL SUBOPT_0x333
009616 940e d59d 	CALL SUBOPT_0x318
009618 940e a59f 	CALL _memset
                 ; 0016 044B                                     break;
00961a c021      	RJMP _0x2C0236
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C0240:
00961b e1e5      	LDI  R30,LOW(21)
00961c 940e d282 	CALL SUBOPT_0x2C2
00961e 940e d5d5 	CALL SUBOPT_0x320
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
009620 940e d645 	CALL SUBOPT_0x333
009622 940e d59d 	CALL SUBOPT_0x318
009624 940e a59f 	CALL _memset
                 ; 0016 0451                                 break;
009626 c015      	RJMP _0x2C0236
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C023F:
009627 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009629 30a4      	CPI  R26,LOW(0x4)
00962a f48c      	BRGE _0x2C0242
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
00962b 940e d543 	CALL SUBOPT_0x309
00962d 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
00962e 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
00962f 940e d582 	CALL SUBOPT_0x313
009631 f024      	BRLT _0x2C0243
009632 940e d656 	CALL SUBOPT_0x336
009634 e0a0      	LDI  R26,LOW(0)
009635 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0243:
009636 940e d58d 	CALL SUBOPT_0x315
009638 940e d656 	CALL SUBOPT_0x336
00963a 940e d594 	CALL SUBOPT_0x316
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C0242:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C0236:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
00963c c0f3      	RJMP _0x2C0244
                 _0x2C0233:
00963d 91a0 14df 	LDS  R26,_currentPage
00963f 32a3      	CPI  R26,LOW(0x23)
009640 f011      	BREQ PC+3
009641 940c 9687 	JMP _0x2C0245
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
009643 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
009645 f409      	BRNE _0x2C0249
009646 c03f      	RJMP _0x2C0248
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C0249:
009647 30e2      	CPI  R30,LOW(0x2)
009648 e0a0      	LDI  R26,HIGH(0x2)
009649 07fa      	CPC  R31,R26
00964a f1d9      	BREQ _0x2C0248
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
00964b 30e3      	CPI  R30,LOW(0x3)
00964c e0a0      	LDI  R26,HIGH(0x3)
00964d 07fa      	CPC  R31,R26
00964e f1b9      	BREQ _0x2C0248
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
00964f 30e4      	CPI  R30,LOW(0x4)
009650 e0a0      	LDI  R26,HIGH(0x4)
009651 07fa      	CPC  R31,R26
009652 f599      	BRNE _0x2C0248
009653 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
009655 940e cd74 	CALL SUBOPT_0x213
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
009657 f459      	BRNE _0x2C0250
009658 e0e1      	LDI  R30,LOW(1)
009659 93e0 14df 	STS  _currentPage,R30
00965b e0e3      	LDI  R30,LOW(3)
00965c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00965e efe8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00965f e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
009660 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
009661 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
009662 c01d      	RJMP _0x2C02CF
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0250:
009663 30e2      	CPI  R30,LOW(0x2)
009664 e0a0      	LDI  R26,HIGH(0x2)
009665 07fa      	CPC  R31,R26
009666 f431      	BRNE _0x2C0251
009667 e0e2      	LDI  R30,LOW(2)
009668 940e d46a 	CALL SUBOPT_0x2EB
00966a 940e d476 	CALL SUBOPT_0x2ED
00966c c013      	RJMP _0x2C02CF
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0251:
00966d 30ee      	CPI  R30,LOW(0xE)
00966e e0a0      	LDI  R26,HIGH(0xE)
00966f 07fa      	CPC  R31,R26
009670 f431      	BRNE _0x2C0252
009671 e0ee      	LDI  R30,LOW(14)
009672 940e d46a 	CALL SUBOPT_0x2EB
009674 940e d63b 	CALL SUBOPT_0x331
009676 c009      	RJMP _0x2C02CF
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0252:
009677 31e1      	CPI  R30,LOW(0x11)
009678 e0a0      	LDI  R26,HIGH(0x11)
009679 07fa      	CPC  R31,R26
00967a f459      	BRNE _0x2C024F
00967b e1e1      	LDI  R30,LOW(17)
00967c 940e d46a 	CALL SUBOPT_0x2EB
00967e 940e d640 	CALL SUBOPT_0x332
                 _0x2C02CF:
009680 940e e05b 	CALL __PUTPARD1
009682 940e d556 	CALL SUBOPT_0x30C
009684 940e d092 	CALL SUBOPT_0x284
                 ; 0016 0469                             }
                 _0x2C024F:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C0248:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
009686 c0a9      	RJMP _0x2C0254
                 _0x2C0245:
009687 91a0 14df 	LDS  R26,_currentPage
009689 32a4      	CPI  R26,LOW(0x24)
00968a f019      	BREQ _0x2C0256
00968b 32a5      	CPI  R26,LOW(0x25)
00968c f009      	BREQ _0x2C0256
00968d c0a2      	RJMP _0x2C0255
                 _0x2C0256:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
00968e 940e d250 	CALL SUBOPT_0x2BD
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
009690 f409      	BRNE _0x2C025B
009691 c09e      	RJMP _0x2C025A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C025B:
009692 30e2      	CPI  R30,LOW(0x2)
009693 e0a0      	LDI  R26,HIGH(0x2)
009694 07fa      	CPC  R31,R26
009695 f409      	BRNE _0x2C025C
009696 c099      	RJMP _0x2C025A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C025C:
009697 30e3      	CPI  R30,LOW(0x3)
009698 e0a0      	LDI  R26,HIGH(0x3)
009699 07fa      	CPC  R31,R26
00969a f409      	BRNE _0x2C025D
00969b c094      	RJMP _0x2C025A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C025D:
00969c 30e4      	CPI  R30,LOW(0x4)
00969d e0a0      	LDI  R26,HIGH(0x4)
00969e 07fa      	CPC  R31,R26
00969f f011      	BREQ PC+3
0096a0 940c 9730 	JMP _0x2C025A
0096a2 940e d64f 	CALL SUBOPT_0x335
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
0096a4 f499      	BRNE _0x2C0262
0096a5 e0e7      	LDI  R30,LOW(7)
0096a6 940e d65c 	CALL SUBOPT_0x337
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
0096a8 30a8      	CPI  R26,LOW(0x8)
0096a9 f411      	BRNE _0x2C0263
0096aa e0e0      	LDI  R30,LOW(0)
0096ab c005      	RJMP _0x2C02D0
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0263:
0096ac 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096ae 30ad      	CPI  R26,LOW(0xD)
0096af f419      	BRNE _0x2C0265
0096b0 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D0:
0096b1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0265:
                +
0096b3 e2e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
0096b4 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
0096b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
0096b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
0096b7 c06e      	RJMP _0x2C02D1
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0262:
0096b8 30ee      	CPI  R30,LOW(0xE)
0096b9 e0a0      	LDI  R26,HIGH(0xE)
0096ba 07fa      	CPC  R31,R26
0096bb f431      	BRNE _0x2C0266
0096bc e0ee      	LDI  R30,LOW(14)
0096bd 940e d46a 	CALL SUBOPT_0x2EB
0096bf 940e d63b 	CALL SUBOPT_0x331
0096c1 c064      	RJMP _0x2C02D1
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0266:
0096c2 31e1      	CPI  R30,LOW(0x11)
0096c3 e0a0      	LDI  R26,HIGH(0x11)
0096c4 07fa      	CPC  R31,R26
0096c5 f489      	BRNE _0x2C0267
0096c6 e1e1      	LDI  R30,LOW(17)
0096c7 940e d65c 	CALL SUBOPT_0x337
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
0096c9 31a2      	CPI  R26,LOW(0x12)
0096ca f411      	BRNE _0x2C0268
0096cb e0e0      	LDI  R30,LOW(0)
0096cc c005      	RJMP _0x2C02D2
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0268:
0096cd 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096cf 31a4      	CPI  R26,LOW(0x14)
0096d0 f419      	BRNE _0x2C026A
0096d1 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D2:
0096d2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C026A:
0096d4 940e d640 	CALL SUBOPT_0x332
0096d6 c04f      	RJMP _0x2C02D1
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0267:
0096d7 31e5      	CPI  R30,LOW(0x15)
0096d8 e0a0      	LDI  R26,HIGH(0x15)
0096d9 07fa      	CPC  R31,R26
0096da f4c9      	BRNE _0x2C026B
0096db e1e5      	LDI  R30,LOW(21)
0096dc 940e d65c 	CALL SUBOPT_0x337
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
0096de 31a6      	CPI  R26,LOW(0x16)
0096df f411      	BRNE _0x2C026C
0096e0 e0e0      	LDI  R30,LOW(0)
0096e1 c00b      	RJMP _0x2C02D3
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C026C:
0096e2 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096e4 31ab      	CPI  R26,LOW(0x1B)
0096e5 f411      	BRNE _0x2C026E
0096e6 e0e2      	LDI  R30,LOW(2)
0096e7 c005      	RJMP _0x2C02D3
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C026E:
0096e8 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096ea 32a0      	CPI  R26,LOW(0x20)
0096eb f419      	BRNE _0x2C0270
0096ec e0e3      	LDI  R30,LOW(3)
                 _0x2C02D3:
0096ed 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0270:
                +
0096ef e8e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
0096f0 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
0096f1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
0096f2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
0096f3 c032      	RJMP _0x2C02D1
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C026B:
0096f4 31e8      	CPI  R30,LOW(0x18)
0096f5 e0a0      	LDI  R26,HIGH(0x18)
0096f6 07fa      	CPC  R31,R26
0096f7 f461      	BRNE _0x2C0271
0096f8 e1e8      	LDI  R30,LOW(24)
0096f9 940e d282 	CALL SUBOPT_0x2C2
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
0096fb 940e d5c9 	CALL SUBOPT_0x31E
0096fd 91e0 1a6a 	LDS  R30,_prb2_S0160000000
0096ff e0f0      	LDI  R31,0
009700 9631      	ADIW R30,1
009701 940e df38 	CALL __CWD1
009703 c028      	RJMP _0x2C02D4
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0271:
009704 31eb      	CPI  R30,LOW(0x1B)
009705 e0a0      	LDI  R26,HIGH(0x1B)
009706 07fa      	CPC  R31,R26
009707 f541      	BRNE _0x2C0261
009708 e1eb      	LDI  R30,LOW(27)
009709 940e d65c 	CALL SUBOPT_0x337
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
00970b 31ac      	CPI  R26,LOW(0x1C)
00970c f411      	BRNE _0x2C0273
00970d e0e0      	LDI  R30,LOW(0)
00970e c011      	RJMP _0x2C02D5
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0273:
00970f 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009711 31ad      	CPI  R26,LOW(0x1D)
009712 f411      	BRNE _0x2C0275
009713 e0e1      	LDI  R30,LOW(1)
009714 c00b      	RJMP _0x2C02D5
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0275:
009715 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009717 31ae      	CPI  R26,LOW(0x1E)
009718 f411      	BRNE _0x2C0277
009719 e0e2      	LDI  R30,LOW(2)
00971a c005      	RJMP _0x2C02D5
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0277:
00971b 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00971d 31af      	CPI  R26,LOW(0x1F)
00971e f419      	BRNE _0x2C0279
00971f e0e3      	LDI  R30,LOW(3)
                 _0x2C02D5:
009720 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0279:
                +
009722 e9ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
009723 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
009724 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
009725 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C02D1:
009726 940e e05b 	CALL __PUTPARD1
009728 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00972a 940e df32 	CALL __CBD1
                 _0x2C02D4:
00972c 940e e05b 	CALL __PUTPARD1
00972e 940e d092 	CALL SUBOPT_0x284
                 ; 0016 048D                             }
                 _0x2C0261:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C025A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0255:
                 _0x2C0254:
                 _0x2C0244:
                 _0x2C0232:
                 _0x2C0210:
                 _0x2C0207:
                 _0x2C01FC:
                 _0x2C01DA:
                 _0x2C01C2:
                 _0x2C01B2:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
009730 940e e0d7 	CALL __LOADLOCR6
009732 96ef      	ADIW R28,63
009733 9668      	ADIW R28,24
009734 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
009735 940e cf04 	CALL SUBOPT_0x249
009737 eee4      	LDI  R30,LOW(_0x2C027A*2)
009738 e5fd      	LDI  R31,HIGH(_0x2C027A*2)
009739 e060      	LDI  R22,BYTE3(_0x2C027A*2)
00973a 940e e0de 	CALL __INITLOCB
00973c 940e d024 	CALL SUBOPT_0x271
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
00973e e020     +LDI R18 , LOW ( 0 )
00973f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
009740 8da8      	LDD  R26,Y+24
009741 8db9      	LDD  R27,Y+24+1
009742 e1ed      	LDI  R30,LOW(29)
009743 940e df79 	CALL __MULB1W2U
009745 54e2      	SUBI R30,LOW(-_sensor_config)
009746 4efe      	SBCI R31,HIGH(-_sensor_config)
009747 01df      	MOVW R26,R30
009748 940e d661 	CALL SUBOPT_0x338
00974a 01de      	MOVW R26,R28
00974b 9656      	ADIW R26,22
00974c d0ae      	RCALL _get_current_sampling
00974d 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
00974e 2311      	TST  R17
00974f f42a      	BRPL _0x2C027B
                 ; 0016 04A8         val[0] = 0;
009750 e0e0      	LDI  R30,LOW(0)
009751 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
009752 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
009753 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
009754 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C027B:
                +
009755 e020     +LDI R18 , LOW ( 0 )
009756 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
009757 89ac      	LDD  R26,Y+20
009758 e6e4      	LDI  R30,LOW(100)
009759 02ea      	MULS R30,R26
00975a 01f0      	MOVW R30,R0
                +
00975b 0f2e     +ADD R18 , R30
00975c 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
00975d 89ad      	LDD  R26,Y+21
00975e e0ea      	LDI  R30,LOW(10)
00975f 02ea      	MULS R30,R26
009760 01f0      	MOVW R30,R0
                +
009761 0f2e     +ADD R18 , R30
009762 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
009763 89ee      	LDD  R30,Y+22
009764 e0f0      	LDI  R31,0
009765 fde7      	SBRC R30,7
009766 efff      	SER  R31
                +
009767 0f2e     +ADD R18 , R30
009768 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
009769 940e c2af 	CALL SUBOPT_0x5A
00976b e0e0      	LDI  R30,LOW(0)
00976c 93ea      	ST   -Y,R30
00976d 940e cc15 	CALL SUBOPT_0x1DF
00976f 940e a59f 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
009771 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
009772 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
009773 8da8      	LDD  R26,Y+24
009774 8db9      	LDD  R27,Y+24+1
009775 940e ce20 	CALL SUBOPT_0x228
009777 f439      	BRNE _0x2C027C
009778 940e c2af 	CALL SUBOPT_0x5A
                +
00977a edea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 994 ) )
00977b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 994 ) )
00977c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 994 ) )
00977d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 994 ) )
                 	__POINTD1FN _0x2C0000,994
00977e c006      	RJMP _0x2C02D6
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C027C:
00977f 940e c2af 	CALL SUBOPT_0x5A
                +
009781 edee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 998 ) )
009782 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 998 ) )
009783 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 998 ) )
009784 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 998 ) )
                 	__POINTD1FN _0x2C0000,998
                 _0x2C02D6:
009785 940e e05b 	CALL __PUTPARD1
009787 940e d2f7 	CALL SUBOPT_0x2D0
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
009789 01fe      	MOVW R30,R28
00978a 9634      	ADIW R30,4
00978b 940e c68d 	CALL SUBOPT_0xF6
00978d 940e cc15 	CALL SUBOPT_0x1DF
00978f 940e a59f 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
009791 8da8      	LDD  R26,Y+24
009792 8db9      	LDD  R27,Y+24+1
009793 e1ed      	LDI  R30,LOW(29)
009794 940e df79 	CALL __MULB1W2U
                +
009796 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
009797 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
009798 81a0      	LD   R26,Z
009799 30a1      	CPI  R26,LOW(0x1)
00979a f449      	BRNE _0x2C027E
00979b 01fe      	MOVW R30,R28
00979c 9634      	ADIW R30,4
00979d 93fa      	ST   -Y,R31
00979e 93ea      	ST   -Y,R30
                +
00979f eee2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1002 ) )
0097a0 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1002 ) )
0097a1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1002 ) )
0097a2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1002 ) )
                 	__POINTD1FN _0x2C0000,1002
0097a3 c008      	RJMP _0x2C02D7
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C027E:
0097a4 01fe      	MOVW R30,R28
0097a5 9634      	ADIW R30,4
0097a6 93fa      	ST   -Y,R31
0097a7 93ea      	ST   -Y,R30
                +
0097a8 eee9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1009 ) )
0097a9 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1009 ) )
0097aa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1009 ) )
0097ab e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1009 ) )
                 	__POINTD1FN _0x2C0000,1009
                 _0x2C02D7:
0097ac 940e e05b 	CALL __PUTPARD1
0097ae 940e d2f7 	CALL SUBOPT_0x2D0
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
0097b0 efe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1017 ) )
0097b1 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1017 ) )
0097b2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1017 ) )
0097b3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1017 ) )
                 	__POINTD1FN _0x2C0000,1017
0097b4 940e c66d 	CALL SUBOPT_0xF1
0097b6 940e cf40 	CALL SUBOPT_0x250
0097b8 940e d666 	CALL SUBOPT_0x339
0097ba 01fe      	MOVW R30,R28
0097bb 967c      	ADIW R30,28
0097bc 940e c1a4 	CALL SUBOPT_0x34
0097be 01fe      	MOVW R30,R28
0097bf 9678      	ADIW R30,24
0097c0 940e c1a4 	CALL SUBOPT_0x34
0097c2 940e d66b 	CALL SUBOPT_0x33A
0097c4 a9ac      	LDD  R26,Y+52
0097c5 a9bd      	LDD  R27,Y+52+1
0097c6 940e cfd7 	CALL SUBOPT_0x266
0097c8 940e d674 	CALL SUBOPT_0x33B
0097ca 940e d67f 	CALL SUBOPT_0x33C
0097cc 940e d688 	CALL SUBOPT_0x33D
0097ce 940e d68f 	CALL SUBOPT_0x33E
0097d0 e28c      	LDI  R24,44
0097d1 940e 9e24 	CALL _printDebug
0097d3 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
0097d4 e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1035 ) )
0097d5 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1035 ) )
0097d6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1035 ) )
0097d7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1035 ) )
                 	__POINTD1FN _0x2C0000,1035
0097d8 940e c66d 	CALL SUBOPT_0xF1
0097da 940e cf40 	CALL SUBOPT_0x250
0097dc 940e d666 	CALL SUBOPT_0x339
0097de 01fe      	MOVW R30,R28
0097df 967c      	ADIW R30,28
0097e0 940e c1a4 	CALL SUBOPT_0x34
0097e2 01fe      	MOVW R30,R28
0097e3 9678      	ADIW R30,24
0097e4 940e c1a4 	CALL SUBOPT_0x34
0097e6 940e d66b 	CALL SUBOPT_0x33A
0097e8 a9ac      	LDD  R26,Y+52
0097e9 a9bd      	LDD  R27,Y+52+1
0097ea 940e cfd7 	CALL SUBOPT_0x266
0097ec 940e d674 	CALL SUBOPT_0x33B
0097ee 940e d67f 	CALL SUBOPT_0x33C
0097f0 940e d688 	CALL SUBOPT_0x33D
0097f2 940e d68f 	CALL SUBOPT_0x33E
0097f4 e28c      	LDI  R24,44
0097f5 940e 7f9f 	CALL _printOLED
0097f7 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
0097f8 940e e0d9 	CALL __LOADLOCR4
0097fa c159      	RJMP _0x20E0035
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
0097fb 940e d69e 	CALL SUBOPT_0x33F
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
0097fd e2ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1078 ) )
0097fe e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1078 ) )
0097ff e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1078 ) )
009800 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1078 ) )
                 	__POINTD1FN _0x2C0000,1078
009801 940e c042 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
009803 85aa      	LDD  R26,Y+10
009804 85bb      	LDD  R27,Y+10+1
009805 e1e0      	LDI  R30,LOW(3600)
009806 e0fe      	LDI  R31,HIGH(3600)
009807 940e df97 	CALL __DIVW21U
009809 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
00980a 85aa      	LDD  R26,Y+10
00980b 85bb      	LDD  R27,Y+10+1
00980c e1e0      	LDI  R30,LOW(3600)
00980d e0fe      	LDI  R31,HIGH(3600)
00980e 940e dfe5 	CALL __MODW21U
009810 83ee      	STD  Y+6,R30
009811 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
009812 2400      	CLR  R0
009813 1604      	CP   R0,R20
009814 0605      	CPC  R0,R21
009815 f440      	BRSH _0x2C0281
                +
009816 3e48     +CPI R20 , LOW ( 1000 )
009817 e0e3     +LDI R30 , HIGH ( 1000 )
009818 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
009819 f420      	BRSH _0x2C0281
00981a 81ae      	LDD  R26,Y+6
00981b 81bf      	LDD  R27,Y+6+1
00981c 9710      	SBIW R26,0
00981d f009      	BREQ _0x2C0282
                 _0x2C0281:
00981e c00b      	RJMP _0x2C0280
                 _0x2C0282:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
00981f e5ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1126 ) )
009820 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1126 ) )
009821 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1126 ) )
009822 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1126 ) )
                 	__POINTD1FN _0x2C0000,1126
009823 940e d6a4 	CALL SUBOPT_0x340
009825 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
009827 940e d6a9 	CALL SUBOPT_0x341
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
009829 c0b8      	RJMP _0x20E0036
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0280:
00982a 85aa      	LDD  R26,Y+10
00982b 85bb      	LDD  R27,Y+10+1
00982c e3ec      	LDI  R30,LOW(60)
00982d e0f0      	LDI  R31,HIGH(60)
00982e 940e df97 	CALL __DIVW21U
009830 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
009831 85aa      	LDD  R26,Y+10
009832 85bb      	LDD  R27,Y+10+1
009833 e3ec      	LDI  R30,LOW(60)
009834 e0f0      	LDI  R31,HIGH(60)
009835 940e dfe5 	CALL __MODW21U
009837 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
009838 2400      	CLR  R0
009839 1600      	CP   R0,R16
00983a 0601      	CPC  R0,R17
00983b f440      	BRSH _0x2C0284
                +
00983c 3e08     +CPI R16 , LOW ( 1000 )
00983d e0e3     +LDI R30 , HIGH ( 1000 )
00983e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
00983f f420      	BRSH _0x2C0284
009840 2400      	CLR  R0
009841 1602      	CP   R0,R18
009842 0603      	CPC  R0,R19
009843 f009      	BREQ _0x2C0285
                 _0x2C0284:
009844 c00b      	RJMP _0x2C0283
                 _0x2C0285:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
009845 e7ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1158 ) )
009846 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1158 ) )
009847 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1158 ) )
009848 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1158 ) )
                 	__POINTD1FN _0x2C0000,1158
009849 940e d6d5 	CALL SUBOPT_0x342
00984b 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
00984d 940e d6da 	CALL SUBOPT_0x343
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
00984f c092      	RJMP _0x20E0036
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0283:
009850 85aa      	LDD  R26,Y+10
009851 85bb      	LDD  R27,Y+10+1
009852 3ea8      	CPI  R26,LOW(0x3E8)
009853 e0e3      	LDI  R30,HIGH(0x3E8)
009854 07be      	CPC  R27,R30
009855 f5a8      	BRSH _0x2C0286
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
009856 e9ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1191 ) )
009857 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1191 ) )
009858 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1191 ) )
009859 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1191 ) )
                 	__POINTD1FN _0x2C0000,1191
00985a 940e e05b 	CALL __PUTPARD1
00985c 85ee      	LDD  R30,Y+14
00985d 85ff      	LDD  R31,Y+14+1
00985e 940e c1a4 	CALL SUBOPT_0x34
009860 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
009862 940e d706 	CALL SUBOPT_0x344
009864 940e df97 	CALL __DIVW21U
009866 85a8      	LDD  R26,Y+8
009867 85b9      	LDD  R27,Y+8+1
009868 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
009869 940e d706 	CALL SUBOPT_0x344
00986b 940e dfe5 	CALL __MODW21U
00986d 01df      	MOVW R26,R30
00986e e0ea      	LDI  R30,LOW(10)
00986f e0f0      	LDI  R31,HIGH(10)
009870 940e df97 	CALL __DIVW21U
                +
009872 85a8     +LDD R26 , Y + 8
009873 85b9     +LDD R27 , Y + 8 + 1
009874 9611     +ADIW R26 , 1
009875 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
009876 940e d706 	CALL SUBOPT_0x344
009878 940e dfe5 	CALL __MODW21U
00987a 01df      	MOVW R26,R30
00987b e0ea      	LDI  R30,LOW(10)
00987c e0f0      	LDI  R31,HIGH(10)
00987d 940e dfe5 	CALL __MODW21U
                +
00987f 85a8     +LDD R26 , Y + 8
009880 85b9     +LDD R27 , Y + 8 + 1
009881 9612     +ADIW R26 , 2
009882 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
009883 85a8      	LDD  R26,Y+8
009884 85b9      	LDD  R27,Y+8+1
009885 9613      	ADIW R26,3
009886 e0e0      	LDI  R30,LOW(0)
009887 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
009888 e0e0      	LDI  R30,LOW(0)
009889 e0f0      	LDI  R31,HIGH(0)
00988a c057      	RJMP _0x20E0036
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0286:
                +
00988b 3e08     +CPI R16 , LOW ( 1000 )
00988c e0e3     +LDI R30 , HIGH ( 1000 )
00988d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
00988e f4d0      	BRSH _0x2C0287
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
00988f ece0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1224 ) )
009890 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1224 ) )
009891 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1224 ) )
009892 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1224 ) )
                 	__POINTD1FN _0x2C0000,1224
009893 940e d6d5 	CALL SUBOPT_0x342
009895 01f9      	MOVW R30,R18
009896 940e c822 	CALL SUBOPT_0x13E
                 ; 0016 04FC         if(min_c > 30){
                +
009898 312f     +CPI R18 , LOW ( 31 )
009899 e0e0     +LDI R30 , HIGH ( 31 )
00989a 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
00989b f010      	BRLO _0x2C0288
                 ; 0016 04FD             min++;
                +
00989c 5f0f     +SUBI R16 , LOW ( - 1 )
00989d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0288:
                +
00989e eee8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1264 ) )
00989f e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1264 ) )
0098a0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1264 ) )
0098a1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1264 ) )
                 	__POINTD1FN _0x2C0000,1264
0098a2 940e d6d5 	CALL SUBOPT_0x342
0098a4 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
0098a6 940e d6da 	CALL SUBOPT_0x343
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
0098a8 c039      	RJMP _0x20E0036
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0287:
                +
0098a9 3e48     +CPI R20 , LOW ( 1000 )
0098aa e0e3     +LDI R30 , HIGH ( 1000 )
0098ab 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
0098ac f568      	BRSH _0x2C0289
                 ; 0016 0508         min   = hr_c / 60;
0098ad 81ae      	LDD  R26,Y+6
0098ae 81bf      	LDD  R27,Y+6+1
0098af e3ec      	LDI  R30,LOW(60)
0098b0 e0f0      	LDI  R31,HIGH(60)
0098b1 940e df97 	CALL __DIVW21U
0098b3 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
0098b4 81ae      	LDD  R26,Y+6
0098b5 81bf      	LDD  R27,Y+6+1
0098b6 e3ec      	LDI  R30,LOW(60)
0098b7 e0f0      	LDI  R31,HIGH(60)
0098b8 940e dfe5 	CALL __MODW21U
0098ba 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
0098bb efe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1278 ) )
0098bc e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1278 ) )
0098bd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1278 ) )
0098be e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1278 ) )
                 	__POINTD1FN _0x2C0000,1278
0098bf 940e d6a4 	CALL SUBOPT_0x340
0098c1 01f8      	MOVW R30,R16
0098c2 940e c1a4 	CALL SUBOPT_0x34
0098c4 01f9      	MOVW R30,R18
0098c5 940e c1a4 	CALL SUBOPT_0x34
0098c7 940e c2f9 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
0098c9 310f     +CPI R16 , LOW ( 31 )
0098ca e0e0     +LDI R30 , HIGH ( 31 )
0098cb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
0098cc f010      	BRLO _0x2C028A
                 ; 0016 050C             hr++;
                +
0098cd 5f4f     +SUBI R20 , LOW ( - 1 )
0098ce 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C028A:
                +
0098cf e2e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1325 ) )
0098d0 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1325 ) )
0098d1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1325 ) )
0098d2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1325 ) )
                 	__POINTD1FN _0x2C0000,1325
0098d3 940e d6a4 	CALL SUBOPT_0x340
0098d5 940e c0b8 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
0098d7 940e d6a9 	CALL SUBOPT_0x341
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
0098d9 c008      	RJMP _0x20E0036
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0289:
                +
0098da e3e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1338 ) )
0098db e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1338 ) )
0098dc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1338 ) )
0098dd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1338 ) )
                 	__POINTD1FN _0x2C0000,1338
0098de 940e c042 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
0098e0 efef      	LDI  R30,LOW(65535)
0098e1 efff      	LDI  R31,HIGH(65535)
                 _0x20E0036:
0098e2 940e e0d7 	CALL __LOADLOCR6
0098e4 962c      	ADIW R28,12
0098e5 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
0098e6 93ba      	ST   -Y,R27
0098e7 93aa      	ST   -Y,R26
0098e8 9762      	SBIW R28,18
0098e9 940e e0d0 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
0098eb 940e d70b 	CALL SUBOPT_0x345
0098ed 01df      	MOVW R26,R30
0098ee 01cb      	MOVW R24,R22
0098ef 940e c708 	CALL SUBOPT_0x10B
0098f1 940e de8f 	CALL __CMPF12
0098f3 f009      	BREQ PC+2
0098f4 f410      	BRCC PC+3
0098f5 940c 98fa 	JMP  _0x2C028B
                 ; 0016 0526         return -1;
0098f7 efef      	LDI  R30,LOW(65535)
0098f8 efff      	LDI  R31,HIGH(65535)
0098f9 c058      	RJMP _0x20E0034
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C028B:
0098fa 940e d70b 	CALL SUBOPT_0x345
0098fc 940e d710 	CALL SUBOPT_0x346
                 ; 0016 052A     ftoa(vref,2,valTmp);
0098fe 940e d715 	CALL SUBOPT_0x347
009900 e0e2      	LDI  R30,LOW(2)
009901 93ea      	ST   -Y,R30
009902 01de      	MOVW R26,R28
009903 9653      	ADIW R26,19
009904 940e a2ba 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
009906 01de      	MOVW R26,R28
009907 961e      	ADIW R26,14
009908 940e a5e6 	CALL _strlen
00990a 30e4      	CPI  R30,LOW(0x4)
00990b e0a0      	LDI  R26,HIGH(0x4)
00990c 07fa      	CPC  R31,R26
00990d f019      	BREQ _0x2C028C
00990e efef      	LDI  R30,LOW(65535)
00990f efff      	LDI  R31,HIGH(65535)
009910 c041      	RJMP _0x20E0034
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C028C:
                +
009911 e5e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1375 ) )
009912 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1375 ) )
009913 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1375 ) )
009914 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1375 ) )
                 	__POINTD1FN _0x2C0000,1375
009915 940e e05b 	CALL __PUTPARD1
009917 940e d70b 	CALL SUBOPT_0x345
009919 940e e05b 	CALL __PUTPARD1
00991b 01fe      	MOVW R30,R28
00991c 9676      	ADIW R30,22
00991d 940e c822 	CALL SUBOPT_0x13E
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
00991f 85ee      	LDD  R30,Y+14
009920 53e0      	SUBI R30,LOW(48)
009921 8da8      	LDD  R26,Y+24
009922 8db9      	LDD  R27,Y+24+1
009923 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
009924 89e8      	LDD  R30,Y+16
009925 53e0      	SUBI R30,LOW(48)
                +
009926 8da8     +LDD R26 , Y + 24
009927 8db9     +LDD R27 , Y + 24 + 1
009928 9611     +ADIW R26 , 1
009929 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
00992a 89e9      	LDD  R30,Y+17
00992b 53e0      	SUBI R30,LOW(48)
                +
00992c 8da8     +LDD R26 , Y + 24
00992d 8db9     +LDD R27 , Y + 24 + 1
00992e 9612     +ADIW R26 , 2
00992f 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
009930 e8e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1417 ) )
009931 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1417 ) )
009932 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1417 ) )
009933 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1417 ) )
                 	__POINTD1FN _0x2C0000,1417
009934 940e c042 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
009936 e000     +LDI R16 , LOW ( 0 )
009937 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C028E:
                +
009938 3003     +CPI R16 , LOW ( 3 )
009939 e0e0     +LDI R30 , HIGH ( 3 )
00993a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
00993b f474      	BRGE _0x2C028F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
00993c e9ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1444 ) )
00993d e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1444 ) )
00993e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1444 ) )
00993f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1444 ) )
                 	__POINTD1FN _0x2C0000,1444
009940 940e e05b 	CALL __PUTPARD1
009942 01f8      	MOVW R30,R16
009943 8dac      	LDD  R26,Y+28
009944 8dbd      	LDD  R27,Y+28+1
009945 940e c9e4 	CALL SUBOPT_0x182
                 ; 0016 0542     }
                +
009947 5f0f     +SUBI R16 , LOW ( - 1 )
009948 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009949 cfee      	RJMP _0x2C028E
                 _0x2C028F:
                 ; 0016 0543     printDebug("\r\n");
                +
00994a ebeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
00994b e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
00994c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
00994d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
00994e 940e c042 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
009950 e0e0      	LDI  R30,LOW(0)
009951 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0034:
009952 940e e0d7 	CALL __LOADLOCR6
                 _0x20E0035:
009954 966a      	ADIW R28,26
009955 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
009956 93ba      ; 0016 0551     offset = 7;
009957 93aa      	ST   -Y,R27
009958 9760      	ST   -Y,R26
009959 940e e0d2 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
00995b e027     +LDI R18 , LOW ( 7 )
00995c e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
00995d 0189      	MOVW R16,R18
                 _0x2C0291:
00995e 940e d71a 	CALL SUBOPT_0x348
009960 f554      	BRGE _0x2C0292
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009961 940e d71f 	CALL SUBOPT_0x349
009963 0fea      	ADD  R30,R26
009964 1ffb      	ADC  R31,R27
009965 93ff      	PUSH R31
009966 93ef      	PUSH R30
009967 940e d725 	CALL SUBOPT_0x34A
009969 93ef      	PUSH R30
00996a 940e d733 	CALL SUBOPT_0x34B
00996c 91af      	POP  R26
00996d 0fea      	ADD  R30,R26
00996e 91af      	POP  R26
00996f 91bf      	POP  R27
009970 940e d73e 	CALL SUBOPT_0x34C
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
009972 940e d747 	CALL SUBOPT_0x34D
009974 940e d74d 	CALL SUBOPT_0x34E
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
009976 9631      	ADIW R30,1
009977 940e d747 	CALL SUBOPT_0x34D
009979 940e d758 	CALL SUBOPT_0x34F
00997b 940e cccc 	CALL SUBOPT_0x1FD
00997d 940e d75d 	CALL SUBOPT_0x350
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
00997f 9632      	ADIW R30,2
009980 940e d747 	CALL SUBOPT_0x34D
009982 940e d758 	CALL SUBOPT_0x34F
009984 940e cf91 	CALL SUBOPT_0x25C
009986 01db      	MOVW R26,R22
009987 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
009988 5f0f     +SUBI R16 , LOW ( - 1 )
009989 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00998a cfd3      	RJMP _0x2C0291
                 _0x2C0292:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
00998b e02b     +LDI R18 , LOW ( 11 )
00998c e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
00998d 0189      	MOVW R16,R18
                 _0x2C0294:
00998e 940e d71a 	CALL SUBOPT_0x348
009990 f554      	BRGE _0x2C0295
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009991 940e d764 	CALL SUBOPT_0x351
009993 0fea      	ADD  R30,R26
009994 1ffb      	ADC  R31,R27
009995 93ff      	PUSH R31
009996 93ef      	PUSH R30
009997 940e d725 	CALL SUBOPT_0x34A
009999 93ef      	PUSH R30
00999a 940e d733 	CALL SUBOPT_0x34B
00999c 91af      	POP  R26
00999d 0fea      	ADD  R30,R26
00999e 91af      	POP  R26
00999f 91bf      	POP  R27
0099a0 940e d73e 	CALL SUBOPT_0x34C
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
0099a2 940e d76a 	CALL SUBOPT_0x352
0099a4 940e d74d 	CALL SUBOPT_0x34E
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
0099a6 9631      	ADIW R30,1
0099a7 940e d76a 	CALL SUBOPT_0x352
0099a9 940e d758 	CALL SUBOPT_0x34F
0099ab 940e cccc 	CALL SUBOPT_0x1FD
0099ad 940e d75d 	CALL SUBOPT_0x350
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
0099af 9632      	ADIW R30,2
0099b0 940e d76a 	CALL SUBOPT_0x352
0099b2 940e d758 	CALL SUBOPT_0x34F
0099b4 940e cf91 	CALL SUBOPT_0x25C
0099b6 01db      	MOVW R26,R22
0099b7 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
0099b8 5f0f     +SUBI R16 , LOW ( - 1 )
0099b9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0099ba cfd3      	RJMP _0x2C0294
                 _0x2C0295:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
0099bb e02f     +LDI R18 , LOW ( 15 )
0099bc e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
0099bd 0189      	MOVW R16,R18
                 _0x2C0297:
0099be 940e d71a 	CALL SUBOPT_0x348
0099c0 f554      	BRGE _0x2C0298
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0099c1 940e d770 	CALL SUBOPT_0x353
0099c3 0fea      	ADD  R30,R26
0099c4 1ffb      	ADC  R31,R27
0099c5 93ff      	PUSH R31
0099c6 93ef      	PUSH R30
0099c7 940e d725 	CALL SUBOPT_0x34A
0099c9 93ef      	PUSH R30
0099ca 940e d733 	CALL SUBOPT_0x34B
0099cc 91af      	POP  R26
0099cd 0fea      	ADD  R30,R26
0099ce 91af      	POP  R26
0099cf 91bf      	POP  R27
0099d0 940e d73e 	CALL SUBOPT_0x34C
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
0099d2 940e d776 	CALL SUBOPT_0x354
0099d4 940e d74d 	CALL SUBOPT_0x34E
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
0099d6 9631      	ADIW R30,1
0099d7 940e d776 	CALL SUBOPT_0x354
0099d9 940e d758 	CALL SUBOPT_0x34F
0099db 940e cccc 	CALL SUBOPT_0x1FD
0099dd 940e d75d 	CALL SUBOPT_0x350
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
0099df 9632      	ADIW R30,2
0099e0 940e d776 	CALL SUBOPT_0x354
0099e2 940e d758 	CALL SUBOPT_0x34F
0099e4 940e cf91 	CALL SUBOPT_0x25C
0099e6 01db      	MOVW R26,R22
0099e7 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
0099e8 5f0f     +SUBI R16 , LOW ( - 1 )
0099e9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0099ea cfd3      	RJMP _0x2C0297
                 _0x2C0298:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
0099eb e125     +LDI R18 , LOW ( 21 )
0099ec e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
0099ed 0189      	MOVW R16,R18
                 _0x2C029A:
0099ee 940e d71a 	CALL SUBOPT_0x348
0099f0 f5ac      	BRGE _0x2C029B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0099f1 01f8      	MOVW R30,R16
0099f2 1be2      	SUB  R30,R18
0099f3 0bf3      	SBC  R31,R19
0099f4 01de      	MOVW R26,R28
0099f5 9614      	ADIW R26,4
0099f6 0fea      	ADD  R30,R26
0099f7 1ffb      	ADC  R31,R27
0099f8 93ff      	PUSH R31
0099f9 93ef      	PUSH R30
0099fa 940e d725 	CALL SUBOPT_0x34A
0099fc 93ef      	PUSH R30
0099fd 940e d733 	CALL SUBOPT_0x34B
0099ff 91af      	POP  R26
009a00 0fea      	ADD  R30,R26
009a01 91af      	POP  R26
009a02 91bf      	POP  R27
009a03 940e d73e 	CALL SUBOPT_0x34C
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
009a05 940e d77c 	CALL SUBOPT_0x355
009a07 940e d786 	CALL SUBOPT_0x356
009a09 01df      	MOVW R26,R30
009a0a e6e4      	LDI  R30,LOW(100)
009a0b e0f0      	LDI  R31,HIGH(100)
009a0c 940e dfaa 	CALL __DIVW21
009a0e 01db      	MOVW R26,R22
009a0f 940e d73e 	CALL SUBOPT_0x34C
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
009a11 9631      	ADIW R30,1
009a12 940e d77c 	CALL SUBOPT_0x355
009a14 91ac      	LD   R26,X
009a15 27bb      	CLR  R27
009a16 940e cccc 	CALL SUBOPT_0x1FD
009a18 940e d75d 	CALL SUBOPT_0x350
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
009a1a 9632      	ADIW R30,2
009a1b 940e d77c 	CALL SUBOPT_0x355
009a1d 91ac      	LD   R26,X
009a1e 27bb      	CLR  R27
009a1f 940e cf91 	CALL SUBOPT_0x25C
009a21 01db      	MOVW R26,R22
009a22 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
009a23 5f0f     +SUBI R16 , LOW ( - 1 )
009a24 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a25 cfc8      	RJMP _0x2C029A
                 _0x2C029B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
009a26 eae1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1449 ) )
009a27 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1449 ) )
009a28 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1449 ) )
009a29 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1449 ) )
                 	__POINTD1FN _0x2C0000,1449
009a2a 940e e05b 	CALL __PUTPARD1
009a2c 89ec      	LDD  R30,Y+20
009a2d 940e c2f3 	CALL SUBOPT_0x65
009a2f 8de9      	LDD  R30,Y+25
009a30 940e c2f3 	CALL SUBOPT_0x65
009a32 8dee      	LDD  R30,Y+30
009a33 940e c2f3 	CALL SUBOPT_0x65
009a35 a1eb      	LDD  R30,Y+35
009a36 940e c2f3 	CALL SUBOPT_0x65
009a38 940e c900 	CALL SUBOPT_0x160
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
009a3a ece6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1486 ) )
009a3b e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1486 ) )
009a3c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1486 ) )
009a3d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1486 ) )
                 	__POINTD1FN _0x2C0000,1486
009a3e 940e e05b 	CALL __PUTPARD1
009a40 89e8      	LDD  R30,Y+16
009a41 940e c2f3 	CALL SUBOPT_0x65
009a43 89ed      	LDD  R30,Y+21
009a44 940e c2f3 	CALL SUBOPT_0x65
009a46 8dea      	LDD  R30,Y+26
009a47 940e c2f3 	CALL SUBOPT_0x65
009a49 8def      	LDD  R30,Y+31
009a4a 940e c2f3 	CALL SUBOPT_0x65
009a4c 940e c900 	CALL SUBOPT_0x160
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
009a4e eeeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1523 ) )
009a4f e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1523 ) )
009a50 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1523 ) )
009a51 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1523 ) )
                 	__POINTD1FN _0x2C0000,1523
009a52 940e cc89 	CALL SUBOPT_0x1F6
009a54 89e9      	LDD  R30,Y+17
009a55 940e c2f3 	CALL SUBOPT_0x65
009a57 89ee      	LDD  R30,Y+22
009a58 940e c2f3 	CALL SUBOPT_0x65
009a5a 8deb      	LDD  R30,Y+27
009a5b 940e c2f3 	CALL SUBOPT_0x65
009a5d 940e c900 	CALL SUBOPT_0x160
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
009a5f e1e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1560 ) )
009a60 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1560 ) )
009a61 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1560 ) )
009a62 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1560 ) )
                 	__POINTD1FN _0x2C0000,1560
009a63 940e e05b 	CALL __PUTPARD1
009a65 85e8      	LDD  R30,Y+8
009a66 940e c2f3 	CALL SUBOPT_0x65
009a68 85ed      	LDD  R30,Y+13
009a69 940e c2f3 	CALL SUBOPT_0x65
009a6b 89ea      	LDD  R30,Y+18
009a6c 940e c2f3 	CALL SUBOPT_0x65
009a6e 89ef      	LDD  R30,Y+23
009a6f 940e c2f3 	CALL SUBOPT_0x65
009a71 940e c900 	CALL SUBOPT_0x160
                 ; 0016 0575 
                 ; 0016 0576     return 0;
009a73 940e c87d 	CALL SUBOPT_0x14E
009a75 966e      	ADIW R28,30
009a76 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
009a77 940e c664 ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
009a79 930a      	CALL SUBOPT_0xEE
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
009a7a 81ae      ;	tmpf -> Y+2
009a7b 81bf      	LDD  R26,Y+6
009a7c 940e caec 	LDD  R27,Y+6+1
009a7e 81ee      	CALL SUBOPT_0x1B1
009a7f 81ff      	LDD  R30,Y+6
009a80 940e caf1 	LDD  R31,Y+6+1
009a82 81ee      	CALL SUBOPT_0x1B2
009a83 81ff      	LDD  R30,Y+6
009a84 940e d0f6 	LDD  R31,Y+6+1
009a86 0fea      	CALL SUBOPT_0x291
009a87 1ffb      	ADD  R30,R26
009a88 018f      	ADC  R31,R27
                 	MOVW R16,R30
009a89 940e ccf8 ; 0016 05D9     tmpf = (float) (tmp / 100.0);
009a8b 01df      	CALL SUBOPT_0x203
009a8c 01cb      	MOVW R26,R30
                +
009a8d e0e0     +LDI R30 , LOW ( 0x42C80000 )
009a8e e0f0     +LDI R31 , HIGH ( 0x42C80000 )
009a8f ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
009a90 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
009a91 940e de4a 	CALL __DIVF21
009a93 940e c4f1 	CALL SUBOPT_0xB2
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
009a95 e3e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1597 ) )
009a96 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1597 ) )
009a97 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1597 ) )
009a98 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1597 ) )
                 	__POINTD1FN _0x2C0000,1597
009a99 940e c7af 	CALL SUBOPT_0x127
009a9b 91ec      	LD   R30,X
009a9c 940e c2f3 	CALL SUBOPT_0x65
009a9e 85ee      	LDD  R30,Y+14
009a9f 85ff      	LDD  R31,Y+14+1
009aa0 81e1      	LDD  R30,Z+1
009aa1 940e c2f3 	CALL SUBOPT_0x65
009aa3 89ea      	LDD  R30,Y+18
009aa4 89fb      	LDD  R31,Y+18+1
009aa5 81e2      	LDD  R30,Z+2
009aa6 940e c2f3 	CALL SUBOPT_0x65
009aa8 01f8      	MOVW R30,R16
009aa9 940e cf40 	CALL SUBOPT_0x250
009aab 940e c547 	CALL SUBOPT_0xC2
009aad 940e e05b 	CALL __PUTPARD1
009aaf e184      	LDI  R24,20
009ab0 940e 9e24 	CALL _printDebug
009ab2 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
009ab3 940e c4f6 	CALL SUBOPT_0xB3
009ab5 e8a9      	LDI  R26,LOW(_eep_vref_val)
009ab6 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009ab7 940e e093 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
009ab9 c07a      	RJMP _0x20E0033
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
009aba 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
009abb 81a8      	LD   R26,Y
009abc 34a1      	CPI  R26,LOW(0x41)
009abd f010      	BRLO _0x2C029D
009abe 34a7      	CPI  R26,LOW(0x47)
009abf f008      	BRLO _0x2C029E
                 _0x2C029D:
009ac0 c004      	RJMP _0x2C029C
                 _0x2C029E:
009ac1 940e d789 	CALL SUBOPT_0x357
009ac3 97f7      	SBIW R30,55
009ac4 c20e      	RJMP _0x20E0030
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C029C:
009ac5 81a8      	LD   R26,Y
009ac6 36a1      	CPI  R26,LOW(0x61)
009ac7 f010      	BRLO _0x2C02A1
009ac8 36a7      	CPI  R26,LOW(0x67)
009ac9 f008      	BRLO _0x2C02A2
                 _0x2C02A1:
009aca c005      	RJMP _0x2C02A0
                 _0x2C02A2:
009acb 940e d789 	CALL SUBOPT_0x357
009acd 55e7      	SUBI R30,LOW(87)
009ace 40f0      	SBCI R31,HIGH(87)
009acf c203      	RJMP _0x20E0030
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C02A0:
009ad0 81a8      	LD   R26,Y
009ad1 33a0      	CPI  R26,LOW(0x30)
009ad2 f010      	BRLO _0x2C02A5
009ad3 33aa      	CPI  R26,LOW(0x3A)
009ad4 f008      	BRLO _0x2C02A6
                 _0x2C02A5:
009ad5 c004      	RJMP _0x2C02A4
                 _0x2C02A6:
009ad6 940e d789 	CALL SUBOPT_0x357
009ad8 97f0      	SBIW R30,48
009ad9 c1f9      	RJMP _0x20E0030
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C02A4:
009ada e0e0      	LDI  R30,LOW(0)
009adb e0f0      	LDI  R31,HIGH(0)
009adc c1f6      	RJMP _0x20E0030
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
009add 940e c3b3 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009adf e000     +LDI R16 , LOW ( 0 )
009ae0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AB:
009ae1 940e c3b8 	CALL SUBOPT_0x82
009ae3 f45c      	BRGE _0x2C02AC
                 ; 0016 05FE         dest[i] = src[i];
009ae4 01f8      	MOVW R30,R16
009ae5 940e ca9c 	CALL SUBOPT_0x1A4
009ae7 010f      	MOVW R0,R30
009ae8 940e c3bd 	CALL SUBOPT_0x83
009aea 940e c7e8 	CALL SUBOPT_0x132
                 ; 0016 05FF     }
                +
009aec 5f0f     +SUBI R16 , LOW ( - 1 )
009aed 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009aee cff2      	RJMP _0x2C02AB
                 _0x2C02AC:
                 ; 0016 0600     return 0;
009aef c044      	RJMP _0x20E0033
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
009af0 940e c3b3 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009af2 e000     +LDI R16 , LOW ( 0 )
009af3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AE:
009af4 940e c3b8 	CALL SUBOPT_0x82
009af6 f544      	BRGE _0x2C02AF
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
009af7 e5eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1635 ) )
009af8 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1635 ) )
009af9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1635 ) )
009afa e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1635 ) )
                 	__POINTD1FN _0x2C0000,1635
009afb 940e e05b 	CALL __PUTPARD1
009afd 01f8      	MOVW R30,R16
009afe 85aa      	LDD  R26,Y+10
009aff 85bb      	LDD  R27,Y+10+1
009b00 0fae      	ADD  R26,R30
009b01 1fbf      	ADC  R27,R31
009b02 91ec      	LD   R30,X
009b03 940e c2f3 	CALL SUBOPT_0x65
009b05 01f8      	MOVW R30,R16
009b06 85ac      	LDD  R26,Y+12
009b07 85bd      	LDD  R27,Y+12+1
009b08 0fae      	ADD  R26,R30
009b09 1fbf      	ADC  R27,R31
009b0a 940e e087 	CALL __EEPROMRDB
009b0c 940e c2f3 	CALL SUBOPT_0x65
009b0e e8ad      	LDI  R26,LOW(_userPwd)
009b0f e0b5      	LDI  R27,HIGH(_userPwd)
009b10 940e c695 	CALL SUBOPT_0xF8
009b12 940e c2f3 	CALL SUBOPT_0x65
009b14 e9a1      	LDI  R26,LOW(_servicePwd)
009b15 e0b5      	LDI  R27,HIGH(_servicePwd)
009b16 940e c695 	CALL SUBOPT_0xF8
009b18 940e c2f3 	CALL SUBOPT_0x65
009b1a 940e c900 	CALL SUBOPT_0x160
                 ; 0016 0609     }
                +
009b1c 5f0f     +SUBI R16 , LOW ( - 1 )
009b1d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b1e cfd5      	RJMP _0x2C02AE
                 _0x2C02AF:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
009b1f e000     +LDI R16 , LOW ( 0 )
009b20 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02B1:
009b21 940e c3b8 	CALL SUBOPT_0x82
009b23 f484      	BRGE _0x2C02B2
                 ; 0016 060C         if(src1[i] != src2[i]){
009b24 01f8      	MOVW R30,R16
009b25 940e ce1b 	CALL SUBOPT_0x227
009b27 900c      	LD   R0,X
009b28 940e c3bd 	CALL SUBOPT_0x83
009b2a 940e e087 	CALL __EEPROMRDB
009b2c 15e0      	CP   R30,R0
009b2d f019      	BREQ _0x2C02B3
                 ; 0016 060D             return -1;
009b2e efef      	LDI  R30,LOW(65535)
009b2f efff      	LDI  R31,HIGH(65535)
009b30 c005      	RJMP _0x20E0032
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C02B3:
                +
009b31 5f0f     +SUBI R16 , LOW ( - 1 )
009b32 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b33 cfed      	RJMP _0x2C02B1
                 _0x2C02B2:
                 ; 0016 0610     return 0;
                 _0x20E0033:
009b34 e0e0      	LDI  R30,LOW(0)
009b35 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0032:
009b36 8119      	LDD  R17,Y+1
009b37 8108      	LDD  R16,Y+0
009b38 9628      	ADIW R28,8
009b39 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;#include "sensor.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;flash unsigned char cmdGetADCSensor[]       = "$CMDGAS";         // -- Get ADC sensor value -- //   ,chID(1)
                 ;
                 ;//flash unsigned char cmdSetSensorType[]   = "$CMDSST";        // -- Set Type Sensor -- //   $CMDSST,01#     //01=TMEC,02=PT100,03=K (AD595)
                 ;
                 ;
                 ;
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void iGetSensorValue(){
                 ; 0017 0027 void iGetSensorValue(){
                 
                 	.CSEG
                 _iGetSensorValue:
                 ; 0017 0028     printDebug("[Get ADC of sensor]\r\n");
                +
009b3a e9e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
009b3b e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
009b3c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
009b3d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
009b3e 940e c042 	CALL SUBOPT_0x3
                 ; 0017 0029     iSensorGetADCValue();
009b40 940e 6ab6 	CALL _iSensorGetADCValue
                 ; 0017 002A }
009b42 9508      	RET
                 ;int debugSetSensorType(){
                 ; 0017 002B int debugSetSensorType(){
                 ; 0017 002C     unsigned char i=0;
                 ; 0017 002D     unsigned char buffer[4];
                 ; 0017 002E     unsigned int sensorType;
                 ; 0017 002F     unsigned int pointID;
                 ; 0017 0030     float pointValue;         //std value
                 ; 0017 0031 
                 ; 0017 0032 
                 ; 0017 0033     printDebug("\r\n<Debug>SetCal: \r\n");
                 ;	i -> R17
                 ;	buffer -> Y+10
                 ;	sensorType -> R18,R19
                 ;	pointID -> R20,R21
                 ;	pointValue -> Y+6
                 ; 0017 0034     memset(buffer,0,sizeof(buffer));
                 ; 0017 0035     for(i=0;i<2;i++){
                 ; 0017 0036        buffer[i] = rxPackage3[i+8];
                 ; 0017 0037     }
                 ; 0017 0038     sensorType = atoi(buffer);
                 ; 0017 0039     printDebug("Sensor Type:%d \r\n",sensorType);
                 ; 0017 003A 
                 ; 0017 003B 
                 ; 0017 003C     return 0;
                 ; 0017 003D }
                 ;
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0040 {
                 _DEBUG_setDateTime:
                 ; 0017 0041     unsigned char   i;
                 ; 0017 0042     unsigned char   buffer[32];
                 ; 0017 0043     int             tz;
                 ; 0017 0044 
                 ; 0017 0045     struct rtc_structure rtcSet;
                 ; 0017 0046 
                 ; 0017 0047     for(i=0;i<4;i++)
009b43 97ea      	SBIW R28,58
009b44 940e e0d2 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
009b46 e010      	LDI  R17,LOW(0)
                 _0x2E0008:
009b47 3014      	CPI  R17,4
009b48 f450      	BRSH _0x2E0009
                 ; 0017 0048     {
                 ; 0017 0049         buffer[i] = rxPackage3[i+8];
009b49 940e c4d4 	CALL SUBOPT_0xAC
009b4b 940e d78c 	CALL SUBOPT_0x358
                +
009b4d 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009b4e 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009b4f 81e0      	LD   R30,Z
009b50 93ec      	ST   X,R30
                 ; 0017 004A     }
009b51 5f1f      	SUBI R17,-1
009b52 cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 004B     buffer[4] = 0;
009b53 940e d791 	CALL SUBOPT_0x359
                 ; 0017 004C 
                 ; 0017 004D     rtcSet.year = atol(buffer);
009b55 940e c4bd 	CALL SUBOPT_0xA8
                 ; 0017 004E 
                 ; 0017 004F     printDebug("get year = %d\r\n",rtcSet.year);
                +
009b57 ede2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 60 ) )
009b58 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 60 ) )
009b59 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 60 ) )
009b5a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 60 ) )
                 	__POINTD1FN _0x2E0000,60
009b5b 940e cc6e 	CALL SUBOPT_0x1F0
009b5d 940e ca12 	CALL SUBOPT_0x189
                 ; 0017 0050 
                 ; 0017 0051     for(i=0;i<2;i++)
009b5f e010      	LDI  R17,LOW(0)
                 _0x2E000B:
009b60 3012      	CPI  R17,2
009b61 f450      	BRSH _0x2E000C
                 ; 0017 0052     {
                 ; 0017 0053         buffer[i] = rxPackage3[i+13];
009b62 940e c4d4 	CALL SUBOPT_0xAC
009b64 940e d78c 	CALL SUBOPT_0x358
                +
009b66 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
009b67 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
009b68 81e0      	LD   R30,Z
009b69 93ec      	ST   X,R30
                 ; 0017 0054     }
009b6a 5f1f      	SUBI R17,-1
009b6b cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0055     buffer[2] = 0;
009b6c 940e d797 	CALL SUBOPT_0x35A
                 ; 0017 0056 
                 ; 0017 0057     rtcSet.month = atol(buffer);
009b6e 940e d79d 	CALL SUBOPT_0x35B
                 ; 0017 0058 
                 ; 0017 0059     printDebug("get month = %d\r\n",rtcSet.month);
                +
009b70 eee2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 76 ) )
009b71 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 76 ) )
009b72 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 76 ) )
009b73 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 76 ) )
                 	__POINTD1FN _0x2E0000,76
009b74 940e c3fb 	CALL SUBOPT_0x8D
009b76 940e ca12 	CALL SUBOPT_0x189
                 ; 0017 005A 
                 ; 0017 005B     for(i=0;i<2;i++)
009b78 e010      	LDI  R17,LOW(0)
                 _0x2E000E:
009b79 3012      	CPI  R17,2
009b7a f450      	BRSH _0x2E000F
                 ; 0017 005C     {
                 ; 0017 005D         buffer[i] = rxPackage3[i+16];
009b7b 940e c4d4 	CALL SUBOPT_0xAC
009b7d 940e d78c 	CALL SUBOPT_0x358
                +
009b7f 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
009b80 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
009b81 81e0      	LD   R30,Z
009b82 93ec      	ST   X,R30
                 ; 0017 005E     }
009b83 5f1f      	SUBI R17,-1
009b84 cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 005F     buffer[2] = 0;
009b85 940e d797 	CALL SUBOPT_0x35A
                 ; 0017 0060 
                 ; 0017 0061     rtcSet.date = atol(buffer);
009b87 940e c64f 	CALL SUBOPT_0xEA
                 ; 0017 0062 
                 ; 0017 0063     printDebug("get date = %d\r\n",rtcSet.date);
                +
009b89 efe3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 93 ) )
009b8a e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 93 ) )
009b8b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 93 ) )
009b8c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 93 ) )
                 	__POINTD1FN _0x2E0000,93
009b8d 940e c2b4 	CALL SUBOPT_0x5B
009b8f 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 0064 
                 ; 0017 0065     for(i=0;i<2;i++)
009b91 e010      	LDI  R17,LOW(0)
                 _0x2E0011:
009b92 3012      	CPI  R17,2
009b93 f450      	BRSH _0x2E0012
                 ; 0017 0066     {
                 ; 0017 0067         buffer[i] = rxPackage3[i+19];
009b94 940e c4d4 	CALL SUBOPT_0xAC
009b96 940e d78c 	CALL SUBOPT_0x358
                +
009b98 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
009b99 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
009b9a 81e0      	LD   R30,Z
009b9b 93ec      	ST   X,R30
                 ; 0017 0068     }
009b9c 5f1f      	SUBI R17,-1
009b9d cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0069     buffer[2] = 0;
009b9e 940e d797 	CALL SUBOPT_0x35A
                 ; 0017 006A 
                 ; 0017 006B     rtcSet.hour = atol(buffer);
009ba0 940e d7a2 	CALL SUBOPT_0x35C
                 ; 0017 006C 
                 ; 0017 006D     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
009ba2 e0e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 109 ) )
009ba3 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 109 ) )
009ba4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 109 ) )
009ba5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 109 ) )
                 	__POINTD1FN _0x2E0000,109
009ba6 940e e05b 	CALL __PUTPARD1
009ba8 940e c5f0 	CALL SUBOPT_0xDC
009baa 940e ca12 	CALL SUBOPT_0x189
                 ; 0017 006E 
                 ; 0017 006F     for(i=0;i<2;i++)
009bac e010      	LDI  R17,LOW(0)
                 _0x2E0014:
009bad 3012      	CPI  R17,2
009bae f450      	BRSH _0x2E0015
                 ; 0017 0070     {
                 ; 0017 0071         buffer[i] = rxPackage3[i+22];
009baf 940e c4d4 	CALL SUBOPT_0xAC
009bb1 940e d78c 	CALL SUBOPT_0x358
                +
009bb3 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
009bb4 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
009bb5 81e0      	LD   R30,Z
009bb6 93ec      	ST   X,R30
                 ; 0017 0072     }
009bb7 5f1f      	SUBI R17,-1
009bb8 cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 0073     buffer[2] = 0;
009bb9 940e d797 	CALL SUBOPT_0x35A
                 ; 0017 0074 
                 ; 0017 0075     rtcSet.min = atol(buffer);
009bbb 940e d7a7 	CALL SUBOPT_0x35D
                 ; 0017 0076 
                 ; 0017 0077     printDebug("get min = %d\r\n",rtcSet.min);
                +
009bbd e1e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 125 ) )
009bbe e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 125 ) )
009bbf e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 125 ) )
009bc0 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 125 ) )
                 	__POINTD1FN _0x2E0000,125
009bc1 940e e05b 	CALL __PUTPARD1
009bc3 940e c672 	CALL SUBOPT_0xF2
009bc5 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 0078 
                 ; 0017 0079     for(i=0;i<2;i++)
009bc7 e010      	LDI  R17,LOW(0)
                 _0x2E0017:
009bc8 3012      	CPI  R17,2
009bc9 f450      	BRSH _0x2E0018
                 ; 0017 007A     {
                 ; 0017 007B         buffer[i] = rxPackage3[i+25];
009bca 940e c4d4 	CALL SUBOPT_0xAC
009bcc 940e d78c 	CALL SUBOPT_0x358
                +
009bce 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
009bcf 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
009bd0 81e0      	LD   R30,Z
009bd1 93ec      	ST   X,R30
                 ; 0017 007C     }
009bd2 5f1f      	SUBI R17,-1
009bd3 cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 007D     buffer[2] = 0;
009bd4 940e d797 	CALL SUBOPT_0x35A
                 ; 0017 007E 
                 ; 0017 007F     rtcSet.sec = atol(buffer);
                +
009bd6 8fe8     +STD Y + 24 , R30
009bd7 8ff9     +STD Y + 24 + 1 , R31
009bd8 8f6a     +STD Y + 24 + 2 , R22
009bd9 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0017 0080 
                 ; 0017 0081     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
009bda e2e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 140 ) )
009bdb e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 140 ) )
009bdc e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 140 ) )
009bdd e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 140 ) )
                 	__POINTD1FN _0x2E0000,140
009bde 940e d7ac 	CALL SUBOPT_0x35E
009be0 940e ca12 	CALL SUBOPT_0x189
                 ; 0017 0082 
                 ; 0017 0083     for(i=0;i<3;i++)
009be2 e010      	LDI  R17,LOW(0)
                 _0x2E001A:
009be3 3013      	CPI  R17,3
009be4 f450      	BRSH _0x2E001B
                 ; 0017 0084     {
                 ; 0017 0085         buffer[i] = rxPackage3[i+28];
009be5 940e c4d4 	CALL SUBOPT_0xAC
009be7 940e d78c 	CALL SUBOPT_0x358
                +
009be9 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
009bea 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
009beb 81e0      	LD   R30,Z
009bec 93ec      	ST   X,R30
                 ; 0017 0086     }
009bed 5f1f      	SUBI R17,-1
009bee cff4      	RJMP _0x2E001A
                 _0x2E001B:
                 ; 0017 0087     buffer[4] = 0;
009bef 940e d791 	CALL SUBOPT_0x359
                 ; 0017 0088 
                 ; 0017 0089     tz = atol(buffer);
009bf1 019f      	MOVW R18,R30
                 ; 0017 008A 
                 ; 0017 008B     printDebug("get timezone = %+d\r\n",tz);
                +
009bf2 e3e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 155 ) )
009bf3 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 155 ) )
009bf4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 155 ) )
009bf5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 155 ) )
                 	__POINTD1FN _0x2E0000,155
009bf6 940e c0b0 	CALL SUBOPT_0x11
009bf8 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 008C 
                 ; 0017 008D     RTC_setDateTime(rtcSet,tz);
009bfa 01fe      	MOVW R30,R28
009bfb 9634      	ADIW R30,4
009bfc e1aa      	LDI  R26,26
009bfd 940e e065 	CALL __PUTPARL
009bff 01d9      	MOVW R26,R18
009c00 940e 47f8 	CALL _RTC_setDateTime
                 ; 0017 008E 
                 ; 0017 008F     return 0;
009c02 940e c87d 	CALL SUBOPT_0x14E
009c04 96ee      	ADIW R28,62
009c05 9508      	RET
                 ; 0017 0090 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0093 {
                 _DEBUG_resetAlarm:
                 ; 0017 0094     resetAlarm();
009c06 940e 7d68 	CALL _resetAlarm
                 ; 0017 0095 
                 ; 0017 0096     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
009c08 e4e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 176 ) )
009c09 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 176 ) )
009c0a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 176 ) )
009c0b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 176 ) )
                 	__POINTD1FN _0x2E0000,176
009c0c 940e c042 	CALL SUBOPT_0x3
                 ; 0017 0097 }
009c0e 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 009A {
                 _DEBUG_ClearLogFile:
                 ; 0017 009B     int         res;
                 ; 0017 009C 
                 ; 0017 009D     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
009c0f 931a      	ST   -Y,R17
009c10 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
009c11 e6e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 211 ) )
009c12 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 211 ) )
009c13 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 211 ) )
009c14 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 211 ) )
                 	__POINTD1FN _0x2E0000,211
009c15 940e c042 	CALL SUBOPT_0x3
                 ; 0017 009E 
                 ; 0017 009F     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
009c17 940e d177 	CALL SUBOPT_0x2A6
                 ; 0017 00A0     if(res < 0)
009c19 f432      	BRPL _0x2E001C
                 ; 0017 00A1     {
                 ; 0017 00A2         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
009c1a 940e d7b3 	CALL SUBOPT_0x35F
009c1c 940e c2cc 	CALL SUBOPT_0x5F
009c1e 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 00A3     }
                 ; 0017 00A4 
                 ; 0017 00A5     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E001C:
009c20 940e d1a3 	CALL SUBOPT_0x2AC
                 ; 0017 00A6     if(res < 0)
009c22 f432      	BRPL _0x2E001D
                 ; 0017 00A7     {
                 ; 0017 00A8         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
009c23 940e d7b3 	CALL SUBOPT_0x35F
009c25 940e c313 	CALL SUBOPT_0x6A
009c27 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 00A9     }
                 ; 0017 00AA 
                 ; 0017 00AB     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001D:
009c29 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
009c2a e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
009c2b 93fa      	ST   -Y,R31
009c2c 93ea      	ST   -Y,R30
009c2d e0e1      	LDI  R30,LOW(1)
009c2e 93ea      	ST   -Y,R30
009c2f 940e ca45 	CALL SUBOPT_0x194
009c31 940e 8525 	CALL _LOG_createFile
009c33 018f      	MOVW R16,R30
                 ; 0017 00AC     if(res < 0)
009c34 2311      	TST  R17
009c35 f432      	BRPL _0x2E001E
                 ; 0017 00AD     {
                 ; 0017 00AE         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
009c36 940e d7b3 	CALL SUBOPT_0x35F
009c38 940e d1f1 	CALL SUBOPT_0x2B4
009c3a 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 00AF     }
                 ; 0017 00B0 
                 ; 0017 00B1     return;
                 _0x2E001E:
009c3c 9109      	LD   R16,Y+
009c3d 9119      	LD   R17,Y+
009c3e 9508      	RET
                 ; 0017 00B2 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 00B5 {
                 _DEBUG_setRealVref:
                 ; 0017 00B6     unsigned char i;
                 ; 0017 00B7     unsigned char rxStrSetVREF[6];
                 ; 0017 00B8 
                 ; 0017 00B9     for(i=0;i<=5;i++)
009c3f 9726      	SBIW R28,6
009c40 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
009c41 e010      	LDI  R17,LOW(0)
                 _0x2E0020:
009c42 3016      	CPI  R17,6
009c43 f450      	BRSH _0x2E0021
                 ; 0017 00BA     {
                 ; 0017 00BB         rxStrSetVREF[i] = rxPackage3[i+8];
009c44 940e c4d4 	CALL SUBOPT_0xAC
009c46 940e d7b8 	CALL SUBOPT_0x360
                +
009c48 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009c49 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009c4a 81e0      	LD   R30,Z
009c4b 93ec      	ST   X,R30
                 ; 0017 00BC     }
009c4c 5f1f      	SUBI R17,-1
009c4d cff4      	RJMP _0x2E0020
                 _0x2E0021:
                 ; 0017 00BD     rxStrSetVREF[5] = '\0';
009c4e e0e0      	LDI  R30,LOW(0)
009c4f 83ee      	STD  Y+6,R30
                 ; 0017 00BE     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009c50 ece6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 304 ) )
009c51 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 304 ) )
009c52 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 304 ) )
009c53 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 304 ) )
                 	__POINTD1FN _0x2E0000,304
009c54 940e e05b 	CALL __PUTPARD1
009c56 01fe      	MOVW R30,R28
009c57 9635      	ADIW R30,5
009c58 940e c1a4 	CALL SUBOPT_0x34
009c5a 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 00BF     eep_vref_val = (atof(rxStrSetVREF));
009c5c 01de      	MOVW R26,R28
009c5d 9611      	ADIW R26,1
009c5e 940e a377 	CALL _atof
009c60 e8a9      	LDI  R26,LOW(_eep_vref_val)
009c61 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009c62 940e e093 	CALL __EEPROMWRD
                 ; 0017 00C0     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
009c64 efe4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 350 ) )
009c65 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 350 ) )
009c66 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 350 ) )
009c67 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 350 ) )
                 	__POINTD1FN _0x2E0000,350
009c68 940e e05b 	CALL __PUTPARD1
009c6a e8a9      	LDI  R26,LOW(_eep_vref_val)
009c6b e0b5      	LDI  R27,HIGH(_eep_vref_val)
009c6c 940e c86d 	CALL SUBOPT_0x14B
                 ; 0017 00C1 }
009c6e 8118      	LDD  R17,Y+0
009c6f 9627      	ADIW R28,7
009c70 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00C4 {
                 _DEBUG_sensorSelect:
                 ; 0017 00C5     unsigned char ch[2];
                 ; 0017 00C6 
                 ; 0017 00C7     if(TEMP_SEL != TEMP_TYPE_K){
009c71 9722      	SBIW R28,2
                 ;	ch -> Y+0
009c72 940e c172 	CALL SUBOPT_0x2E
009c74 f039      	BREQ _0x2E0022
                 ; 0017 00C8         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
009c75 e1ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 391 ) )
009c76 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 391 ) )
009c77 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 391 ) )
009c78 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 391 ) )
                 	__POINTD1FN _0x2E0000,391
009c79 940e c042 	CALL SUBOPT_0x3
                 ; 0017 00C9         return;
009c7b c042      	RJMP _0x20E0031
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     if(rxPackage3[8] == 'N'){
                 _0x2E0022:
                +
009c7c 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009c7e 34ae      	CPI  R26,LOW(0x4E)
009c7f f449      	BRNE _0x2E0023
                 ; 0017 00CD         hwCalId     = 9;
009c80 940e d7bd 	CALL SUBOPT_0x361
                 ; 0017 00CE         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
009c82 e5e0     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 442 ) )
009c83 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 442 ) )
009c84 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 442 ) )
009c85 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 442 ) )
                 	__POINTD1FN _0x2E0000,442
009c86 940e c042 	CALL SUBOPT_0x3
                 ; 0017 00CF     }
                 ; 0017 00D0     else if(isdigit(rxPackage3[8])){
009c88 c035      	RJMP _0x2E0024
                 _0x2E0023:
                +
009c89 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009c8b 940e bfb2 	CALL _isdigit
009c8d 30e0      	CPI  R30,0
009c8e f0f9      	BREQ _0x2E0025
                 ; 0017 00D1         ch[0]       = rxPackage3[8];
                +
009c8f 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009c91 83e8      	ST   Y,R30
                 ; 0017 00D2         ch[1]       = '\0';
009c92 e0e0      	LDI  R30,LOW(0)
009c93 83e9      	STD  Y+1,R30
                 ; 0017 00D3         hwCalId     = atoi(ch);
009c94 01de      	MOVW R26,R28
009c95 940e a23d 	CALL _atoi
009c97 93e0 10f4 	STS  _hwCalId,R30
009c99 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00D4 
                 ; 0017 00D5         SENSOR_SELECT(hwCalId);
009c9b 940e c497 	CALL SUBOPT_0xA1
009c9d 91e0 10f4 	LDS  R30,_hwCalId
009c9f 940e c4a1 	CALL SUBOPT_0xA2
                 ; 0017 00D6         delay_ms(50);           // -- for multiplex stable -- //
009ca1 940e c37e 	CALL SUBOPT_0x7A
                 ; 0017 00D7 
                 ; 0017 00D8         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
009ca3 e7e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 483 ) )
009ca4 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 483 ) )
009ca5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 483 ) )
009ca6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 483 ) )
                 	__POINTD1FN _0x2E0000,483
009ca7 940e c184 	CALL SUBOPT_0x30
009ca9 940e c1a4 	CALL SUBOPT_0x34
009cab 940e c0b8 	CALL SUBOPT_0x12
                 ; 0017 00D9     }
                 ; 0017 00DA     else{
009cad c010      	RJMP _0x2E0026
                 _0x2E0025:
                 ; 0017 00DB         hwCalId     = 9;
009cae 940e d7bd 	CALL SUBOPT_0x361
                 ; 0017 00DC         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
009cb0 eae5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 527 ) )
009cb1 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 527 ) )
009cb2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 527 ) )
009cb3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 527 ) )
                 	__POINTD1FN _0x2E0000,527
009cb4 940e e05b 	CALL __PUTPARD1
                +
009cb6 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009cb8 940e c2f3 	CALL SUBOPT_0x65
                +
009cba 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009cbc 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0017 00DD     }
                 _0x2E0026:
                 _0x2E0024:
                 ; 0017 00DE 
                 ; 0017 00DF     return;
                 _0x20E0031:
009cbe 9622      	ADIW R28,2
009cbf 9508      	RET
                 ; 0017 00E0 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00E3 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00E4     if(flag){
009cc0 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
009cc1 81e8      	LD   R30,Y
009cc2 30e0      	CPI  R30,0
009cc3 f021      	BREQ _0x2E0027
                 ; 0017 00E5         config_oper.deviceEnable        =   0x01;
                +
009cc4 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009cc5 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009cc6 e0e1      	LDI  R30,LOW(1)
009cc7 c003      	RJMP _0x2E0068
                 ; 0017 00E6     }
                 ; 0017 00E7     else{
                 _0x2E0027:
                 ; 0017 00E8         config_oper.deviceEnable        =   0x00;
                +
009cc8 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009cc9 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009cca e0e0      	LDI  R30,LOW(0)
                 _0x2E0068:
009ccb 940e e0a3 	CALL __EEPROMWRB
                 ; 0017 00E9     }
                 ; 0017 00EA 
                 ; 0017 00EB     config_oper_flag                    =   0x01;
009ccd e4a3      	LDI  R26,LOW(_config_oper_flag)
009cce e0b5      	LDI  R27,HIGH(_config_oper_flag)
009ccf 940e c7ed 	CALL SUBOPT_0x133
                 ; 0017 00EC     is_operating_config_update          =   1;
009cd1 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00ED 
                 ; 0017 00EE     return;
                 _0x20E0030:
009cd3 9621      	ADIW R28,1
009cd4 9508      	RET
                 ; 0017 00EF }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00F2 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00F3     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00F4     unsigned char i;
                 ; 0017 00F5     unsigned char set_str[24];
                 ; 0017 00F6 
                 ; 0017 00F7     for(i=0;i<24;i++){
009cd5 9768      	SBIW R28,24
009cd6 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
009cd7 e010      	LDI  R17,LOW(0)
                 _0x2E002A:
009cd8 3118      	CPI  R17,24
009cd9 f598      	BRSH _0x2E002B
                 ; 0017 00F8         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
009cda 940e c4d4 	CALL SUBOPT_0xAC
                +
009cdc 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009cdd 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009cde 81a0      	LD   R26,Z
009cdf 32ac      	CPI  R26,LOW(0x2C)
009ce0 f021      	BREQ _0x2E002D
009ce1 940e bfcf 	CALL _isxdigit
009ce3 30e0      	CPI  R30,0
009ce4 f009      	BREQ _0x2E002E
                 _0x2E002D:
009ce5 c013      	RJMP _0x2E002C
                 _0x2E002E:
                 ; 0017 00F9             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
009ce6 eee4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 590 ) )
009ce7 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 590 ) )
009ce8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 590 ) )
009ce9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 590 ) )
                 	__POINTD1FN _0x2E0000,590
009cea 940e d7c4 	CALL SUBOPT_0x362
                +
009cec 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009ced 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009cee 81e0      	LD   R30,Z
009cef 940e c2f3 	CALL SUBOPT_0x65
009cf1 940e c4d4 	CALL SUBOPT_0xAC
                +
009cf3 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009cf4 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009cf5 81e0      	LD   R30,Z
009cf6 940e ce2c 	CALL SUBOPT_0x22A
                 ; 0017 00FA             return;
009cf8 c09d      	RJMP _0x20E002F
                 ; 0017 00FB         }
                 ; 0017 00FC         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E002C:
009cf9 940e c4d4 	CALL SUBOPT_0xAC
009cfb 010f      	MOVW R0,R30
009cfc 01de      	MOVW R26,R28
009cfd 9611      	ADIW R26,1
009cfe 0fea      	ADD  R30,R26
009cff 1ffb      	ADC  R31,R27
009d00 93ff      	PUSH R31
009d01 93ef      	PUSH R30
009d02 01f0      	MOVW R30,R0
                +
009d03 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009d04 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009d05 81a0      	LD   R26,Z
009d06 940e bfde 	CALL _tolower
009d08 91af      	POP  R26
009d09 91bf      	POP  R27
009d0a 93ec      	ST   X,R30
                 ; 0017 00FD     }
009d0b 5f1f      	SUBI R17,-1
009d0c cfcb      	RJMP _0x2E002A
                 _0x2E002B:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
009d0d e2e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 651 ) )
009d0e e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 651 ) )
009d0f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 651 ) )
009d10 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 651 ) )
                 	__POINTD1FN _0x2E0000,651
009d11 940e c042 	CALL SUBOPT_0x3
                 ; 0017 0100 
                 ; 0017 0101     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
009d13 e5e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 703 ) )
009d14 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 703 ) )
009d15 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 703 ) )
009d16 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 703 ) )
                 	__POINTD1FN _0x2E0000,703
009d17 940e c042 	CALL SUBOPT_0x3
                 ; 0017 0102     for(i=0;i<24;i++){
009d19 e010      	LDI  R17,LOW(0)
                 _0x2E0030:
009d1a 3118      	CPI  R17,24
009d1b f010      	BRLO PC+3
009d1c 940c 9d87 	JMP _0x2E0031
                 ; 0017 0103         if((i%3) == 0)      {   continue;                       }
009d1e 940e d7c8 	CALL SUBOPT_0x363
009d20 9730      	SBIW R30,0
009d21 f409      	BRNE _0x2E0032
009d22 c062      	RJMP _0x2E002F
                 ; 0017 0104         else if((i%3) == 1) {
                 _0x2E0032:
009d23 940e d7c8 	CALL SUBOPT_0x363
009d25 30e1      	CPI  R30,LOW(0x1)
009d26 e0a0      	LDI  R26,HIGH(0x1)
009d27 07fa      	CPC  R31,R26
009d28 f581      	BRNE _0x2E0034
                 ; 0017 0105 
                 ; 0017 0106             printDebug("[%c",set_str[i]);
                +
009d29 e7ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 743 ) )
009d2a e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 743 ) )
009d2b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 743 ) )
009d2c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 743 ) )
                 	__POINTD1FN _0x2E0000,743
009d2d 940e d7c4 	CALL SUBOPT_0x362
009d2f 01de      	MOVW R26,R28
009d30 9615      	ADIW R26,5
009d31 940e c9e4 	CALL SUBOPT_0x182
                 ; 0017 0107 
                 ; 0017 0108             DEVICE_SERIAL[i/3]      = 0x00;
009d33 940e d7cf 	CALL SUBOPT_0x364
009d35 01df      	MOVW R26,R30
009d36 e0e0      	LDI  R30,LOW(0)
009d37 940e e0a3 	CALL __EEPROMWRB
                 ; 0017 0109 
                 ; 0017 010A             if(isdigit(set_str[i])){
009d39 940e c4d4 	CALL SUBOPT_0xAC
009d3b 940e d7b8 	CALL SUBOPT_0x360
009d3d 940e d7d8 	CALL SUBOPT_0x365
009d3f f051      	BREQ _0x2E0035
                 ; 0017 010B                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
009d40 940e d7cf 	CALL SUBOPT_0x364
009d42 010f      	MOVW R0,R30
009d43 940e c4d4 	CALL SUBOPT_0xAC
009d45 940e d7b8 	CALL SUBOPT_0x360
009d47 91ec      	LD   R30,X
009d48 53e0      	SUBI R30,LOW(48)
009d49 c009      	RJMP _0x2E0069
                 ; 0017 010C             }
                 ; 0017 010D             else{
                 _0x2E0035:
                 ; 0017 010E                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009d4a 940e d7cf 	CALL SUBOPT_0x364
009d4c 010f      	MOVW R0,R30
009d4d 940e c4d4 	CALL SUBOPT_0xAC
009d4f 940e d7b8 	CALL SUBOPT_0x360
009d51 91ec      	LD   R30,X
009d52 55e7      	SUBI R30,LOW(87)
                 _0x2E0069:
009d53 95e2      	SWAP R30
009d54 7fe0      	ANDI R30,0xF0
009d55 01d0      	MOVW R26,R0
009d56 940e e0a3 	CALL __EEPROMWRB
                 ; 0017 010F             }
                 ; 0017 0110         }
                 ; 0017 0111         else if((i%3) == 2) {
009d58 c02c      	RJMP _0x2E0037
                 _0x2E0034:
009d59 940e d7c8 	CALL SUBOPT_0x363
009d5b 30e2      	CPI  R30,LOW(0x2)
009d5c e0a0      	LDI  R26,HIGH(0x2)
009d5d 07fa      	CPC  R31,R26
009d5e f531      	BRNE _0x2E0038
                 ; 0017 0112 
                 ; 0017 0113             printDebug("%c]",set_str[i]);
                +
009d5f e8e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 747 ) )
009d60 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 747 ) )
009d61 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 747 ) )
009d62 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 747 ) )
                 	__POINTD1FN _0x2E0000,747
009d63 940e d7c4 	CALL SUBOPT_0x362
009d65 01de      	MOVW R26,R28
009d66 9615      	ADIW R26,5
009d67 940e c9e4 	CALL SUBOPT_0x182
                 ; 0017 0114 
                 ; 0017 0115             if(isdigit(set_str[i])){
009d69 940e c4d4 	CALL SUBOPT_0xAC
009d6b 940e d7b8 	CALL SUBOPT_0x360
009d6d 940e d7d8 	CALL SUBOPT_0x365
009d6f f049      	BREQ _0x2E0039
                 ; 0017 0116                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
009d70 940e d7cf 	CALL SUBOPT_0x364
009d72 940e d7dd 	CALL SUBOPT_0x366
009d74 940e d7b8 	CALL SUBOPT_0x360
009d76 91ec      	LD   R30,X
009d77 53e0      	SUBI R30,LOW(48)
009d78 c008      	RJMP _0x2E006A
                 ; 0017 0117             }
                 ; 0017 0118             else{
                 _0x2E0039:
                 ; 0017 0119                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
009d79 940e d7cf 	CALL SUBOPT_0x364
009d7b 940e d7dd 	CALL SUBOPT_0x366
009d7d 940e d7b8 	CALL SUBOPT_0x360
009d7f 91ec      	LD   R30,X
009d80 55e7      	SUBI R30,LOW(87)
                 _0x2E006A:
009d81 29e0      	OR   R30,R0
009d82 01db      	MOVW R26,R22
009d83 940e e0a3 	CALL __EEPROMWRB
                 ; 0017 011A             }
                 ; 0017 011B         }
                 ; 0017 011C     }
                 _0x2E0038:
                 _0x2E0037:
                 _0x2E002F:
009d85 5f1f      	SUBI R17,-1
009d86 cf93      	RJMP _0x2E0030
                 _0x2E0031:
                 ; 0017 011D 
                 ; 0017 011E     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
009d87 e8e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 751 ) )
009d88 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 751 ) )
009d89 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 751 ) )
009d8a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 751 ) )
                 	__POINTD1FN _0x2E0000,751
009d8b 940e c042 	CALL SUBOPT_0x3
                 ; 0017 011F     for(i=0;i<8;i++){
009d8d e010      	LDI  R17,LOW(0)
                 _0x2E003C:
009d8e 3018      	CPI  R17,8
009d8f f420      	BRSH _0x2E003D
                 ; 0017 0120         printDebug("[%02X]",DEVICE_SERIAL[i]);
009d90 940e d7e4 	CALL SUBOPT_0x367
                 ; 0017 0121     }
009d92 5f1f      	SUBI R17,-1
009d93 cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0122     printDebug("\r\n");
009d94 940e d7f0 	CALL SUBOPT_0x368
                 ; 0017 0123 
                 ; 0017 0124     return;
                 _0x20E002F:
009d96 8118      	LDD  R17,Y+0
009d97 9669      	ADIW R28,25
009d98 9508      	RET
                 ; 0017 0125 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0128 {
                 _DEBUG_readSerialNumber:
                 ; 0017 0129     unsigned char i;
                 ; 0017 012A 
                 ; 0017 012B     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
009d99 931a      	ST   -Y,R17
                 ;	i -> R17
                +
009d9a ebee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 808 ) )
009d9b e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 808 ) )
009d9c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 808 ) )
009d9d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 808 ) )
                 	__POINTD1FN _0x2E0000,808
009d9e 940e c042 	CALL SUBOPT_0x3
                 ; 0017 012C     for(i=0;i<8;i++){
009da0 e010      	LDI  R17,LOW(0)
                 _0x2E003F:
009da1 3018      	CPI  R17,8
009da2 f420      	BRSH _0x2E0040
                 ; 0017 012D         printDebug("[%02X]",DEVICE_SERIAL[i]);
009da3 940e d7e4 	CALL SUBOPT_0x367
                 ; 0017 012E     }
009da5 5f1f      	SUBI R17,-1
009da6 cffa      	RJMP _0x2E003F
                 _0x2E0040:
                 ; 0017 012F     printDebug("\r\n");
009da7 940e d7f0 	CALL SUBOPT_0x368
                 ; 0017 0130 
                 ; 0017 0131     return;
009da9 9119      	LD   R17,Y+
009daa 9508      	RET
                 ; 0017 0132 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 013A {
                 _debug_req:
                 ; 0017 013B     flag_PackageTerminate3 = 0;
009dab e0e0      	LDI  R30,LOW(0)
009dac 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 013C 
                 ; 0017 013D     printDebug("Get Debug Req.:");
                +
009dae eee7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 849 ) )
009daf e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 849 ) )
009db0 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 849 ) )
009db1 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 849 ) )
                 	__POINTD1FN _0x2E0000,849
009db2 940e c042 	CALL SUBOPT_0x3
                 ; 0017 013E 
                 ; 0017 013F 
                 ; 0017 0140     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
009db4 940e d7f6 	CALL SUBOPT_0x369
                +
009db6 eaea     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009db7 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009db8 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009db9 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
009dba 940e d7fb 	CALL SUBOPT_0x36A
009dbc f411      	BRNE _0x2E0041
                 ; 0017 0141         DEBUG_setDateTime();
009dbd dd85      	RCALL _DEBUG_setDateTime
                 ; 0017 0142     }
                 ; 0017 0143     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
009dbe c064      	RJMP _0x2E0042
                 _0x2E0041:
009dbf 940e d7f6 	CALL SUBOPT_0x369
                +
009dc1 ebe2     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009dc2 e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009dc3 e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009dc4 e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
009dc5 940e d7fb 	CALL SUBOPT_0x36A
009dc7 f411      	BRNE _0x2E0043
                 ; 0017 0144         DEBUG_resetAlarm();
009dc8 de3d      	RCALL _DEBUG_resetAlarm
                 ; 0017 0145     }
                 ; 0017 0146     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
009dc9 c059      	RJMP _0x2E0044
                 _0x2E0043:
009dca 940e d7f6 	CALL SUBOPT_0x369
                +
009dcc ebea     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
009dcd e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
009dce e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
009dcf e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
009dd0 940e d7fb 	CALL SUBOPT_0x36A
009dd2 f411      	BRNE _0x2E0045
                 ; 0017 0147         DEBUG_ClearLogFile();
009dd3 de3b      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0148     }
                 ; 0017 0149     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009dd4 c04e      	RJMP _0x2E0046
                 _0x2E0045:
009dd5 940e d7f6 	CALL SUBOPT_0x369
                +
009dd7 ece2     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009dd8 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009dd9 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009dda e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009ddb 940e d7fb 	CALL SUBOPT_0x36A
009ddd f411      	BRNE _0x2E0047
                 ; 0017 014A         DEBUG_setRealVref();
009dde de60      	RCALL _DEBUG_setRealVref
                 ; 0017 014B     }
                 ; 0017 014C     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
009ddf c043      	RJMP _0x2E0048
                 _0x2E0047:
009de0 940e d7f6 	CALL SUBOPT_0x369
                +
009de2 ecea     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
009de3 e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009de4 e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009de5 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009de6 940e d7fb 	CALL SUBOPT_0x36A
009de8 f411      	BRNE _0x2E0049
                 ; 0017 014D         DEBUG_sensorSelect();
009de9 de87      	RCALL _DEBUG_sensorSelect
                 ; 0017 014E     }
                 ; 0017 014F     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009dea c038      	RJMP _0x2E004A
                 _0x2E0049:
009deb 940e d7f6 	CALL SUBOPT_0x369
                +
009ded ede2     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
009dee e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
009def e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
009df0 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
009df1 940e d7fb 	CALL SUBOPT_0x36A
009df3 f419      	BRNE _0x2E004B
                 ; 0017 0150         DEBUG_setDeviceEnable(1);
009df4 e0a1      	LDI  R26,LOW(1)
009df5 deca      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0151     }
                 ; 0017 0152     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009df6 c02c      	RJMP _0x2E004C
                 _0x2E004B:
009df7 940e d7f6 	CALL SUBOPT_0x369
                +
009df9 edea     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009dfa e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009dfb e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009dfc e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009dfd 940e d7fb 	CALL SUBOPT_0x36A
009dff f419      	BRNE _0x2E004D
                 ; 0017 0153         DEBUG_setDeviceEnable(0);
009e00 e0a0      	LDI  R26,LOW(0)
009e01 debe      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0154     }
                 ; 0017 0155     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
009e02 c020      	RJMP _0x2E004E
                 _0x2E004D:
009e03 940e d7f6 	CALL SUBOPT_0x369
                +
009e05 eee2     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009e06 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009e07 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009e08 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009e09 940e d7fb 	CALL SUBOPT_0x36A
009e0b f411      	BRNE _0x2E004F
                 ; 0017 0156         DEBUG_setSerialNumber();
009e0c dec8      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0157     }
                 ; 0017 0158     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009e0d c015      	RJMP _0x2E0050
                 _0x2E004F:
009e0e 940e d7f6 	CALL SUBOPT_0x369
                +
009e10 eeea     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
009e11 e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
009e12 e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
009e13 e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009e14 940e d7fb 	CALL SUBOPT_0x36A
009e16 f411      	BRNE _0x2E0051
                 ; 0017 0159         DEBUG_readSerialNumber();
009e17 df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 015A     }
                 ; 0017 015B     else if(!strncmpf(rxPackage3,cmdGetADCSensor,7)){
009e18 c00a      	RJMP _0x2E0052
                 _0x2E0051:
009e19 940e d7f6 	CALL SUBOPT_0x369
                +
009e1b efe2     +LDI R30 , LOW ( 2 * _cmdGetADCSensor + ( 0 ) )
009e1c e0f1     +LDI R31 , HIGH ( 2 * _cmdGetADCSensor + ( 0 ) )
009e1d e060     +LDI R22 , BYTE3 ( 2 * _cmdGetADCSensor + ( 0 ) )
009e1e e070     +LDI R23 , BYTE4 ( 2 * _cmdGetADCSensor + ( 0 ) )
                 	__POINTD1FN _cmdGetADCSensor,0
009e1f 940e d7fb 	CALL SUBOPT_0x36A
009e21 f409      	BRNE _0x2E0053
                 ; 0017 015C         iGetSensorValue();
009e22 dd17      	RCALL _iGetSensorValue
                 ; 0017 015D     }
                 ; 0017 015E 
                 ; 0017 015F     return;
                 _0x2E0053:
                 _0x2E0052:
                 _0x2E0050:
                 _0x2E004E:
                 _0x2E004C:
                 _0x2E004A:
                 _0x2E0048:
                 _0x2E0046:
                 _0x2E0044:
                 _0x2E0042:
009e23 9508      	RET
                 ; 0017 0160 }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0163 {
                 _printDebug:
009e24 92ff      	PUSH R15
009e25 2ef8      	MOV  R15,R24
                 ; 0017 0164     char textBuffer[256];
                 ; 0017 0165     va_list argptr;
                 ; 0017 0166 
                 ; 0017 0167     va_start(argptr, fmtstr);
009e26 50d1      	SUBI R29,1
009e27 931a      	ST   -Y,R17
009e28 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
009e29 01de      	MOVW R26,R28
009e2a 50a2      	SUBI R26,LOW(-(254))
009e2b 4fbf      	SBCI R27,HIGH(-(254))
009e2c 940e deaf 	CALL __ADDW2R15
009e2e 018d      	MOVW R16,R26
                 ; 0017 0168     vsprintf(textBuffer,fmtstr,argptr);
009e2f 940e cc72 	CALL SUBOPT_0x1F1
009e31 01de      	MOVW R26,R28
009e32 5fac      	SUBI R26,LOW(-(260))
009e33 4fbe      	SBCI R27,HIGH(-(260))
009e34 940e d0c5 	CALL SUBOPT_0x28B
                 ; 0017 0169     send_uart(3,textBuffer);
009e36 e0e3      	LDI  R30,LOW(3)
009e37 93ea      	ST   -Y,R30
009e38 01de      	MOVW R26,R28
009e39 9613      	ADIW R26,3
009e3a 940e 4131 	CALL _send_uart
                 ; 0017 016A     va_end(argptr);
                 ; 0017 016B 
                 ; 0017 016C     return;
009e3c 8119      	LDD  R17,Y+1
009e3d 8108      	LDD  R16,Y+0
009e3e 9622      	ADIW R28,2
009e3f 5fdf      	SUBI R29,-1
009e40 90ff      	POP  R15
009e41 9508      	RET
                 ; 0017 016D }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 0170 {
                 _print_hex_ascii_line:
                 ; 0017 0171 
                 ; 0017 0172     int i;
                 ; 0017 0173     int gap;
                 ; 0017 0174     const unsigned char *ch;
                 ; 0017 0175 
                 ; 0017 0176     // offset //
                 ; 0017 0177     printDebug("%05d   ", offset);
009e42 940e caa6 	CALL SUBOPT_0x1A6
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009e44 efe7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 865 ) )
009e45 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 865 ) )
009e46 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 865 ) )
009e47 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 865 ) )
                 	__POINTD1FN _0x2E0000,865
009e48 940e c7b4 	CALL SUBOPT_0x128
009e4a 940e c64a 	CALL SUBOPT_0xE9
                 ; 0017 0178 
                 ; 0017 0179 
                 ; 0017 017A     // hex //
                 ; 0017 017B     ch = payload;
                +
009e4c 854a     +LDD R20 , Y + 10
009e4d 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 017C     for(i = 0; i < len; i++) {
                +
009e4e e000     +LDI R16 , LOW ( 0 )
009e4f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0055:
009e50 85e8      	LDD  R30,Y+8
009e51 85f9      	LDD  R31,Y+8+1
009e52 170e      	CP   R16,R30
009e53 071f      	CPC  R17,R31
009e54 f494      	BRGE _0x2E0056
                 ; 0017 017D         printDebug("%02x ", *ch);
                +
009e55 efef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 873 ) )
009e56 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 873 ) )
009e57 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 873 ) )
009e58 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 873 ) )
                 	__POINTD1FN _0x2E0000,873
009e59 940e d802 	CALL SUBOPT_0x36B
                 ; 0017 017E 
                 ; 0017 017F         ch++;
                +
009e5b 5f4f     +SUBI R20 , LOW ( - 1 )
009e5c 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0180         // print extra space after 8th byte for visual aid //
                 ; 0017 0181         if (i == 7){
009e5d e0e7      	LDI  R30,LOW(7)
009e5e e0f0      	LDI  R31,HIGH(7)
009e5f 17e0      	CP   R30,R16
009e60 07f1      	CPC  R31,R17
009e61 f411      	BRNE _0x2E0057
                 ; 0017 0182             printDebug(" ");
009e62 940e d808 	CALL SUBOPT_0x36C
                 ; 0017 0183 
                 ; 0017 0184         }
                 ; 0017 0185     }
                 _0x2E0057:
                +
009e64 5f0f     +SUBI R16 , LOW ( - 1 )
009e65 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009e66 cfe9      	RJMP _0x2E0055
                 _0x2E0056:
                 ; 0017 0186     // print space to handle line less than 8 bytes //
                 ; 0017 0187     if (len < 8){
009e67 85a8      	LDD  R26,Y+8
009e68 85b9      	LDD  R27,Y+8+1
009e69 9718      	SBIW R26,8
009e6a f414      	BRGE _0x2E0058
                 ; 0017 0188         printDebug(" ");
009e6b 940e d808 	CALL SUBOPT_0x36C
                 ; 0017 0189 
                 ; 0017 018A     }
                 ; 0017 018B 
                 ; 0017 018C     // fill hex gap with spaces if not full line //
                 ; 0017 018D     if (len < 16) {
                 _0x2E0058:
009e6d 85a8      	LDD  R26,Y+8
009e6e 85b9      	LDD  R27,Y+8+1
009e6f 9750      	SBIW R26,16
009e70 f48c      	BRGE _0x2E0059
                 ; 0017 018E         gap = 16 - len;
009e71 85a8      	LDD  R26,Y+8
009e72 85b9      	LDD  R27,Y+8+1
009e73 e1e0      	LDI  R30,LOW(16)
009e74 e0f0      	LDI  R31,HIGH(16)
009e75 1bea      	SUB  R30,R26
009e76 0bfb      	SBC  R31,R27
009e77 019f      	MOVW R18,R30
                 ; 0017 018F         for (i = 0; i < gap; i++) {
                +
009e78 e000     +LDI R16 , LOW ( 0 )
009e79 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005B:
                +
009e7a 1702     +CP R16 , R18
009e7b 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
009e7c f42c      	BRGE _0x2E005C
                 ; 0017 0190             printDebug("   ");
009e7d 940e d80e 	CALL SUBOPT_0x36D
                 ; 0017 0191 
                 ; 0017 0192         }
                +
009e7f 5f0f     +SUBI R16 , LOW ( - 1 )
009e80 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009e81 cff8      	RJMP _0x2E005B
                 _0x2E005C:
                 ; 0017 0193     }
                 ; 0017 0194     printDebug("   ");
                 _0x2E0059:
009e82 940e d80e 	CALL SUBOPT_0x36D
                 ; 0017 0195 
                 ; 0017 0196 
                 ; 0017 0197     // ascii (if printable) //
                 ; 0017 0198     ch = payload;
                +
009e84 854a     +LDD R20 , Y + 10
009e85 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0199     for(i = 0; i < len; i++) {
                +
009e86 e000     +LDI R16 , LOW ( 0 )
009e87 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005E:
009e88 85e8      	LDD  R30,Y+8
009e89 85f9      	LDD  R31,Y+8+1
009e8a 170e      	CP   R16,R30
009e8b 071f      	CPC  R17,R31
009e8c f4c4      	BRGE _0x2E005F
                 ; 0017 019A         if (isprint(*ch)){
009e8d 01da      	MOVW R26,R20
009e8e 91ac      	LD   R26,X
009e8f 940e bfbb 	CALL _isprint
009e91 30e0      	CPI  R30,0
009e92 f039      	BREQ _0x2E0060
                 ; 0017 019B             printDebug("%c", *ch);
                +
009e93 e7ee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 744 ) )
009e94 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 744 ) )
009e95 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 744 ) )
009e96 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 744 ) )
                 	__POINTD1FN _0x2E0000,744
009e97 940e d802 	CALL SUBOPT_0x36B
                 ; 0017 019C 
                 ; 0017 019D         }
                 ; 0017 019E         else{
009e99 c006      	RJMP _0x2E0061
                 _0x2E0060:
                 ; 0017 019F             printDebug(".");
                +
009e9a e0e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 879 ) )
009e9b e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 879 ) )
009e9c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 879 ) )
009e9d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 879 ) )
                 	__POINTD1FN _0x2E0000,879
009e9e 940e c042 	CALL SUBOPT_0x3
                 ; 0017 01A0 
                 ; 0017 01A1         }
                 _0x2E0061:
                 ; 0017 01A2         ch++;
                +
009ea0 5f4f     +SUBI R20 , LOW ( - 1 )
009ea1 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 01A3     }
                +
009ea2 5f0f     +SUBI R16 , LOW ( - 1 )
009ea3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009ea4 cfe3      	RJMP _0x2E005E
                 _0x2E005F:
                 ; 0017 01A4 
                 ; 0017 01A5     printDebug("\r\n");
009ea5 940e d7f0 	CALL SUBOPT_0x368
                 ; 0017 01A6 
                 ; 0017 01A7 
                 ; 0017 01A8 return;
009ea7 c0ee      	RJMP _0x20E002D
                 ; 0017 01A9 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 01AC {
                 _print_payload:
                 ; 0017 01AD 
                 ; 0017 01AE     int len_rem = len;
                 ; 0017 01AF     int line_width = 16;            // number of bytes per line //
                 ; 0017 01B0     int line_len;
                 ; 0017 01B1     int offset = 0;                    // zero-based offset counter //
                 ; 0017 01B2     const unsigned char *ch = payload;
                 ; 0017 01B3 
                 ; 0017 01B4     if (len <= 0)
009ea8 93ba      	ST   -Y,R27
009ea9 93aa      	ST   -Y,R26
009eaa 9724      	SBIW R28,4
009eab e0e0      	LDI  R30,LOW(0)
009eac 83ea      	STD  Y+2,R30
009ead 83eb      	STD  Y+3,R30
009eae 940e e0d0 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
009eb0 850a     +LDD R16 , Y + 10
009eb1 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009eb2 e120     +LDI R18 , LOW ( 16 )
009eb3 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
009eb4 85ec      	LDD  R30,Y+12
009eb5 85fd      	LDD  R31,Y+12+1
009eb6 83ee      	STD  Y+6,R30
009eb7 83ff      	STD  Y+6+1,R31
009eb8 85aa      	LDD  R26,Y+10
009eb9 85bb      	LDD  R27,Y+10+1
009eba 940e e0b8 	CALL __CPW02
009ebc f574      	BRGE _0x20E002E
                 ; 0017 01B5         return;
                 ; 0017 01B6 
                 ; 0017 01B7     // data fits on one line //
                 ; 0017 01B8     if (len <= line_width) {
009ebd 172a      	CP   R18,R26
009ebe 073b      	CPC  R19,R27
009ebf f03c      	BRLT _0x2E0063
                 ; 0017 01B9         print_hex_ascii_line(ch, len, offset);
009ec0 940e c8e5 	CALL SUBOPT_0x15B
009ec2 940e cad1 	CALL SUBOPT_0x1AD
009ec4 940e d814 	CALL SUBOPT_0x36E
                 ; 0017 01BA         return;
009ec6 c024      	RJMP _0x20E002E
                 ; 0017 01BB     }
                 ; 0017 01BC     // data spans multiple lines //
                 ; 0017 01BD     for ( ;; ) {
                 _0x2E0063:
                 _0x2E0065:
                 ; 0017 01BE         // compute current line length //
                 ; 0017 01BF         line_len = line_width % len_rem;
009ec7 01f8      	MOVW R30,R16
009ec8 01d9      	MOVW R26,R18
009ec9 940e dfe8 	CALL __MODW21
009ecb 01af      	MOVW R20,R30
                 ; 0017 01C0         // print line //
                 ; 0017 01C1         print_hex_ascii_line(ch, line_len, offset);
009ecc 940e c8e5 	CALL SUBOPT_0x15B
009ece 935a      	ST   -Y,R21
009ecf 934a      	ST   -Y,R20
009ed0 940e d814 	CALL SUBOPT_0x36E
                 ; 0017 01C2         // compute total remaining //
                 ; 0017 01C3         len_rem = len_rem - line_len;
                +
009ed2 1b04     +SUB R16 , R20
009ed3 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01C4         // shift pointer to remaining bytes to print //
                 ; 0017 01C5         ch = ch + line_len;
009ed4 01fa      	MOVW R30,R20
009ed5 940e ca9c 	CALL SUBOPT_0x1A4
009ed7 83ee      	STD  Y+6,R30
009ed8 83ff      	STD  Y+6+1,R31
                 ; 0017 01C6         // add offset //
                 ; 0017 01C7         offset = offset + line_width;
009ed9 01f9      	MOVW R30,R18
009eda 85a8      	LDD  R26,Y+8
009edb 85b9      	LDD  R27,Y+8+1
009edc 0fea      	ADD  R30,R26
009edd 1ffb      	ADC  R31,R27
009ede 87e8      	STD  Y+8,R30
009edf 87f9      	STD  Y+8+1,R31
                 ; 0017 01C8         // check if we have line width chars or less //
                 ; 0017 01C9         if (len_rem <= line_width) {
                +
009ee0 1720     +CP R18 , R16
009ee1 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009ee2 f03c      	BRLT _0x2E0067
                 ; 0017 01CA             // print last line and get out //
                 ; 0017 01CB             print_hex_ascii_line(ch, len_rem, offset);
009ee3 940e c8e5 	CALL SUBOPT_0x15B
009ee5 931a      	ST   -Y,R17
009ee6 930a      	ST   -Y,R16
009ee7 940e d814 	CALL SUBOPT_0x36E
                 ; 0017 01CC             break;
009ee9 c001      	RJMP _0x2E0066
                 ; 0017 01CD         }
                 ; 0017 01CE     }
                 _0x2E0067:
009eea cfdc      	RJMP _0x2E0065
                 _0x2E0066:
                 ; 0017 01CF 
                 ; 0017 01D0     return;
                 _0x20E002E:
009eeb 940e e0d7 	CALL __LOADLOCR6
009eed 962e      	ADIW R28,14
009eee 9508      	RET
                 ; 0017 01D1 }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
009eef 9726      	SBIW R28,6
009ef0 940e c22b 	CALL SUBOPT_0x46
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
009ef2 940e d818 	CALL SUBOPT_0x36F
009ef4 170e      	CP   R16,R30
009ef5 071f      	CPC  R17,R31
009ef6 f014      	BRLT PC+3
009ef7 940c 9f96 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
009ef9 870a     +STD Y + 10 , R16
009efa 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
009efb 01f8      	MOVW R30,R16
009efc 9631      	ADIW R30,1
009efd 019f      	MOVW R18,R30
                 _0x300008:
009efe 940e d818 	CALL SUBOPT_0x36F
009f00 172e      	CP   R18,R30
009f01 073f      	CPC  R19,R31
009f02 f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
009f03 940e d81d 	CALL SUBOPT_0x370
009f05 940e d823 	CALL SUBOPT_0x371
009f07 937f      	PUSH R23
009f08 936f      	PUSH R22
009f09 93ff      	PUSH R31
009f0a 93ef      	PUSH R30
009f0b 940e d827 	CALL SUBOPT_0x372
009f0d 940e d823 	CALL SUBOPT_0x371
009f0f 91af      	POP  R26
009f10 91bf      	POP  R27
009f11 918f      	POP  R24
009f12 919f      	POP  R25
009f13 940e de8f 	CALL __CMPF12
009f15 f009      	BREQ PC+2
009f16 f410      	BRCC PC+3
009f17 940c 9f1b 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
009f19 872a     +STD Y + 10 , R18
009f1a 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
009f1b 5f2f     +SUBI R18 , LOW ( - 1 )
009f1c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009f1d cfe0      	RJMP _0x300008
                 _0x300009:
                +
009f1e e020     +LDI R18 , LOW ( 0 )
009f1f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
009f20 940e d818 	CALL SUBOPT_0x36F
009f22 9631      	ADIW R30,1
009f23 172e      	CP   R18,R30
009f24 073f      	CPC  R19,R31
009f25 f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
009f26 940e d827 	CALL SUBOPT_0x372
009f28 940e d82e 	CALL SUBOPT_0x373
009f2a 940e c505 	CALL SUBOPT_0xB6
                 ; 0018 0016             a[max][j] = a[i][j];
009f2c 940e d827 	CALL SUBOPT_0x372
009f2e 940e d832 	CALL SUBOPT_0x374
009f30 010f      	MOVW R0,R30
009f31 940e d839 	CALL SUBOPT_0x375
009f33 940e d82e 	CALL SUBOPT_0x373
009f35 01d0      	MOVW R26,R0
009f36 940e e036 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
009f38 940e d839 	CALL SUBOPT_0x375
009f3a 940e d832 	CALL SUBOPT_0x374
009f3c 940e cf89 	CALL SUBOPT_0x25A
                 ; 0018 0018         }
                +
009f3e 5f2f     +SUBI R18 , LOW ( - 1 )
009f3f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009f40 cfdf      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
009f41 9120 1a71+LDS R18 , 0 + ( _n )
009f43 9130 1a72+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
009f45 1720     +CP R18 , R16
009f46 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009f47 f414      	BRGE PC+3
009f48 940c 9f93 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
009f4a 01f8      	MOVW R30,R16
009f4b 9631      	ADIW R30,1
009f4c 01af      	MOVW R20,R30
                 _0x300012:
009f4d 940e d818 	CALL SUBOPT_0x36F
009f4f 174e      	CP   R20,R30
009f50 075f      	CPC  R21,R31
009f51 f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
009f52 01fa      	MOVW R30,R20
009f53 940e defe 	CALL __LSLW4
009f55 58ed      	SUBI R30,LOW(-_a)
009f56 4ef5      	SBCI R31,HIGH(-_a)
009f57 010f      	MOVW R0,R30
009f58 940e d832 	CALL SUBOPT_0x374
009f5a 93ff      	PUSH R31
009f5b 93ef      	PUSH R30
009f5c 01df      	MOVW R26,R30
009f5d 940e e02b 	CALL __GETD1P
009f5f 937f      	PUSH R23
009f60 936f      	PUSH R22
009f61 93ff      	PUSH R31
009f62 93ef      	PUSH R30
009f63 01d0      	MOVW R26,R0
009f64 01f8      	MOVW R30,R16
009f65 940e cff6 	CALL SUBOPT_0x26B
009f67 937f      	PUSH R23
009f68 936f      	PUSH R22
009f69 93ff      	PUSH R31
009f6a 93ef      	PUSH R30
009f6b 940e d839 	CALL SUBOPT_0x375
009f6d 940e d823 	CALL SUBOPT_0x371
009f6f 91af      	POP  R26
009f70 91bf      	POP  R27
009f71 918f      	POP  R24
009f72 919f      	POP  R25
009f73 940e de4a 	CALL __DIVF21
009f75 937f      	PUSH R23
009f76 936f      	PUSH R22
009f77 93ff      	PUSH R31
009f78 93ef      	PUSH R30
009f79 940e d839 	CALL SUBOPT_0x375
009f7b 940e d82e 	CALL SUBOPT_0x373
009f7d 91af      	POP  R26
009f7e 91bf      	POP  R27
009f7f 918f      	POP  R24
009f80 919f      	POP  R25
009f81 940e ddfc 	CALL __MULF12
009f83 91af      	POP  R26
009f84 91bf      	POP  R27
009f85 918f      	POP  R24
009f86 919f      	POP  R25
009f87 940e cd8d 	CALL SUBOPT_0x216
009f89 91af      	POP  R26
009f8a 91bf      	POP  R27
009f8b 940e e036 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
009f8d 5f4f     +SUBI R20 , LOW ( - 1 )
009f8e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
009f8f cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
009f90 5021     +SUBI R18 , LOW ( 1 )
009f91 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009f92 cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
009f93 5f0f     +SUBI R16 , LOW ( - 1 )
009f94 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f95 cf5c      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
                 _0x20E002D:
009f96 940e e0d7 	CALL __LOADLOCR6
009f98 962c      	ADIW R28,12
009f99 9508      	RET
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
009f9a 940e e0d0 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
009f9c 940e d818 	CALL SUBOPT_0x36F
009f9e 9731      	SBIW R30,1
009f9f 018f      	MOVW R16,R30
                 _0x300015:
009fa0 2311      	TST  R17
009fa1 f412      	BRPL PC+3
009fa2 940c a00d 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
009fa4 940e d839 	CALL SUBOPT_0x375
009fa6 940e d83f 	CALL SUBOPT_0x376
009fa8 93ff      	PUSH R31
009fa9 93ef      	PUSH R30
009faa 940e d839 	CALL SUBOPT_0x375
009fac 01df      	MOVW R26,R30
009fad 940e d818 	CALL SUBOPT_0x36F
009faf 940e cff6 	CALL SUBOPT_0x26B
009fb1 937f      	PUSH R23
009fb2 936f      	PUSH R22
009fb3 93ff      	PUSH R31
009fb4 93ef      	PUSH R30
009fb5 940e d839 	CALL SUBOPT_0x375
009fb7 940e d823 	CALL SUBOPT_0x371
009fb9 91af      	POP  R26
009fba 91bf      	POP  R27
009fbb 918f      	POP  R24
009fbc 919f      	POP  R25
009fbd 940e de4a 	CALL __DIVF21
009fbf 91af      	POP  R26
009fc0 91bf      	POP  R27
009fc1 940e e036 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
009fc3 940e d839 	CALL SUBOPT_0x375
009fc5 01df      	MOVW R26,R30
009fc6 01f8      	MOVW R30,R16
009fc7 940e ceb4 	CALL SUBOPT_0x23D
009fc9 940e d846 	CALL SUBOPT_0x377
009fcb 940e e036 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
009fcd 01f8      	MOVW R30,R16
009fce 9731      	SBIW R30,1
009fcf 019f      	MOVW R18,R30
                 _0x300018:
009fd0 2333      	TST  R19
009fd1 f1c2      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
009fd2 940e d81d 	CALL SUBOPT_0x370
009fd4 010f      	MOVW R0,R30
009fd5 940e d83f 	CALL SUBOPT_0x376
009fd7 93ff      	PUSH R31
009fd8 93ef      	PUSH R30
009fd9 01df      	MOVW R26,R30
009fda 940e e02b 	CALL __GETD1P
009fdc 937f      	PUSH R23
009fdd 936f      	PUSH R22
009fde 93ff      	PUSH R31
009fdf 93ef      	PUSH R30
009fe0 01d0      	MOVW R26,R0
009fe1 01f8      	MOVW R30,R16
009fe2 940e cff6 	CALL SUBOPT_0x26B
009fe4 937f      	PUSH R23
009fe5 936f      	PUSH R22
009fe6 93ff      	PUSH R31
009fe7 93ef      	PUSH R30
009fe8 940e d839 	CALL SUBOPT_0x375
009fea 01df      	MOVW R26,R30
009feb 940e d818 	CALL SUBOPT_0x36F
009fed 940e cff6 	CALL SUBOPT_0x26B
009fef 91af      	POP  R26
009ff0 91bf      	POP  R27
009ff1 918f      	POP  R24
009ff2 919f      	POP  R25
009ff3 940e ddfc 	CALL __MULF12
009ff5 91af      	POP  R26
009ff6 91bf      	POP  R27
009ff7 918f      	POP  R24
009ff8 919f      	POP  R25
009ff9 940e cd8d 	CALL SUBOPT_0x216
009ffb 91af      	POP  R26
009ffc 91bf      	POP  R27
009ffd 940e e036 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
009fff 940e d81d 	CALL SUBOPT_0x370
00a001 01df      	MOVW R26,R30
00a002 01f8      	MOVW R30,R16
00a003 940e ceb4 	CALL SUBOPT_0x23D
00a005 940e c402 	CALL SUBOPT_0x8E
                 ; 0018 0045         }
                +
00a007 5021     +SUBI R18 , LOW ( 1 )
00a008 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
00a009 cfc6      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
00a00a 5001     +SUBI R16 , LOW ( 1 )
00a00b 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00a00c cf93      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
00a00d 940e e0d7 	CALL __LOADLOCR6
00a00f 9626      	ADIW R28,6
00a010 9508      	RET
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
00a011 940e c3a7 	CALL SUBOPT_0x7F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
00a013 940e d846 	CALL SUBOPT_0x377
00a015 93e0 1a73 	STS  _a,R30
00a017 93f0 1a74 	STS  _a+1,R31
00a019 9360 1a75 	STS  _a+2,R22
00a01b 9370 1a76 	STS  _a+3,R23
00a01d 940e c522 	CALL SUBOPT_0xBB
                +
00a01f 93e0 1a77+STS _a + ( 4 ) , R30
00a021 93f0 1a78+STS _a + ( 4 ) + 1 , R31
00a023 9360 1a79+STS _a + ( 4 ) + 2 , R22
00a025 9370 1a7a+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
00a027 940e c522 	CALL SUBOPT_0xBB
00a029 940e c52c 	CALL SUBOPT_0xBD
00a02b 940e ddfc 	CALL __MULF12
                +
00a02d 93e0 1a7b+STS _a + ( 8 ) , R30
00a02f 93f0 1a7c+STS _a + ( 8 ) + 1 , R31
00a031 9360 1a7d+STS _a + ( 8 ) + 2 , R22
00a033 9370 1a7e+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
00a035 940e c5c8 	CALL SUBOPT_0xD4
                +
00a037 93e0 1a7f+STS _a + ( 12 ) , R30
00a039 93f0 1a80+STS _a + ( 12 ) + 1 , R31
00a03b 9360 1a81+STS _a + ( 12 ) + 2 , R22
00a03d 9370 1a82+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
00a03f e8e3     +LDI R30 , LOW ( _a + ( 16 ) )
00a040 e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
00a041 940e d84b 	CALL SUBOPT_0x378
00a043 940e c5b9 	CALL SUBOPT_0xD1
                +
00a045 93e0 1a87+STS _a + ( 20 ) , R30
00a047 93f0 1a88+STS _a + ( 20 ) + 1 , R31
00a049 9360 1a89+STS _a + ( 20 ) + 2 , R22
00a04b 9370 1a8a+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
00a04d 940e c5b9 	CALL SUBOPT_0xD1
00a04f 940e c515 	CALL SUBOPT_0xB9
00a051 940e ddfc 	CALL __MULF12
                +
00a053 93e0 1a8b+STS _a + ( 24 ) , R30
00a055 93f0 1a8c+STS _a + ( 24 ) + 1 , R31
00a057 9360 1a8d+STS _a + ( 24 ) + 2 , R22
00a059 9370 1a8e+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
00a05b 940e c2d1 	CALL SUBOPT_0x60
                +
00a05d 93e0 1a8f+STS _a + ( 28 ) , R30
00a05f 93f0 1a90+STS _a + ( 28 ) + 1 , R31
00a061 9360 1a91+STS _a + ( 28 ) + 2 , R22
00a063 9370 1a92+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
00a065 e9e3     +LDI R30 , LOW ( _a + ( 32 ) )
00a066 e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
00a067 940e d84b 	CALL SUBOPT_0x378
00a069 940e c547 	CALL SUBOPT_0xC2
                +
00a06b 93e0 1a97+STS _a + ( 36 ) , R30
00a06d 93f0 1a98+STS _a + ( 36 ) + 1 , R31
00a06f 9360 1a99+STS _a + ( 36 ) + 2 , R22
00a071 9370 1a9a+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
00a073 940e c547 	CALL SUBOPT_0xC2
00a075 940e c5be 	CALL SUBOPT_0xD2
00a077 940e ddfc 	CALL __MULF12
                +
00a079 93e0 1a9b+STS _a + ( 40 ) , R30
00a07b 93f0 1a9c+STS _a + ( 40 ) + 1 , R31
00a07d 9360 1a9d+STS _a + ( 40 ) + 2 , R22
00a07f 9370 1a9e+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
00a081 940e c5cd 	CALL SUBOPT_0xD5
                +
00a083 93e0 1a9f+STS _a + ( 44 ) , R30
00a085 93f0 1aa0+STS _a + ( 44 ) + 1 , R31
00a087 9360 1aa1+STS _a + ( 44 ) + 2 , R22
00a089 9370 1aa2+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D /*  bongkot printDebug disable
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                 ; 0018 0060         printDebug("\t\t");
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
                 ; 0018 0063         printDebug("\r\n");
                 ; 0018 0064     }
                 ; 0018 0065 */
                 ; 0018 0066     forwardSubstitution();
00a08b de63      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
00a08c df0d      	RCALL _reverseElimination
                 ; 0018 0068 /*  bongkot printDebug disable
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                 ; 0018 006B         printDebug("\t\t");
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
                 ; 0018 006E         printDebug("\r\n");
                 ; 0018 006F     }
                 ; 0018 0070 */
                 ; 0018 0071     *resA = a[2][3];
                +
00a08d 91e0 1a9f+LDS R30 , _a + ( 44 )
00a08f 91f0 1aa0+LDS R31 , _a + ( 44 ) + 1
00a091 9160 1aa1+LDS R22 , _a + ( 44 ) + 2
00a093 9170 1aa2+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
00a095 85a8      	LDD  R26,Y+8
00a096 85b9      	LDD  R27,Y+8+1
00a097 940e e036 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
00a099 91e0 1a8f+LDS R30 , _a + ( 28 )
00a09b 91f0 1a90+LDS R31 , _a + ( 28 ) + 1
00a09d 9160 1a91+LDS R22 , _a + ( 28 ) + 2
00a09f 9170 1a92+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
00a0a1 81ae      	LDD  R26,Y+6
00a0a2 81bf      	LDD  R27,Y+6+1
00a0a3 940e e036 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
00a0a5 91e0 1a7f+LDS R30 , _a + ( 12 )
00a0a7 91f0 1a80+LDS R31 , _a + ( 12 ) + 1
00a0a9 9160 1a81+LDS R22 , _a + ( 12 ) + 2
00a0ab 9170 1a82+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
00a0ad 81ac      	LDD  R26,Y+4
00a0ae 81bd      	LDD  R27,Y+4+1
00a0af 940e e036 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075 /*  bongkot printDebug disable  */
                 ; 0018 0076 //    printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                 ; 0018 0077 
                 ; 0018 0078     return;
00a0b1 940e e0d9 	CALL __LOADLOCR4
00a0b3 96a2      	ADIW R28,34
00a0b4 9508      	RET
                 ; 0018 0079 }
                 ;#include "smoothFilter.h"
                 ;
                 ;int indexWrite = 0;
                 ;int gItemSize = 0;
                 ;unsigned int * smoothBuffer;
                 ;iSmoothData_t iSmoothData;
                 ;
                 ;pviSmoothHandle_t pviSmoothSensorHandle;
                 ;
                 ;iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 ; 0019 000A iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 
                 	.CSEG
                 ; 0019 000B     int * ptrSmoothBuffer;
                 ; 0019 000C     iSmoothData_t iSmoothData;
                 ; 0019 000D     iSmoothData.status = 0;
                 ;	*pviSmoothHandle_p -> Y+12
                 ;	adcValue_p -> Y+10
                 ;	*ptrSmoothBuffer -> R16,R17
                 ;	iSmoothData -> Y+2
                 ; 0019 000E     if(indexWrite<gItemSize){
                 ; 0019 000F         iSmoothData.status = 0;
                 ; 0019 0010         ptrSmoothBuffer = pviSmoothHandle_p;
                 ; 0019 0011         *ptrSmoothBuffer = adcValue_p;
                 ; 0019 0012         indexWrite++;
                 ; 0019 0013     }else if(indexWrite==gItemSize){
                 ; 0019 0014        iSmoothData.status = 1;
                 ; 0019 0015        indexWrite = 0;
                 ; 0019 0016        gItemSize = 0;
                 ; 0019 0017        free(smoothBuffer);
                 ; 0019 0018     }
                 ; 0019 0019 
                 ; 0019 001A 
                 ; 0019 001B     return iSmoothData;
                 ; 0019 001C }
                 ;
                 ;pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001E pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001F    pviSmoothHandle_t  pviSmoothHandle;
                 ; 0019 0020    smoothBuffer = (int *)malloc(itemSize);
                 ;	itemSize -> Y+2
                 ;	*pviSmoothHandle -> R16,R17
                 ; 0019 0021    if(smoothBuffer!=NULL){
                 ; 0019 0022      pviSmoothHandle = smoothBuffer;
                 ; 0019 0023      gItemSize = itemSize;
                 ; 0019 0024    }else{
                 ; 0019 0025      return   pviSmoothHandle = (int *)0;
                 ; 0019 0026    }
                 ; 0019 0027    return  pviSmoothHandle;
                 ; 0019 0028 }
                 ;#include "ad595.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;
                 ;float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 ; 001A 0005 float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 
                 	.CSEG
                 ; 001A 0006      int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 0007      float  viADCToVolt = 0.0;
                 ; 001A 0008      //const float  viZeroSet   = 1.68;
                 ; 001A 0009      const float  viZeroSet   = 1.667;
                 ; 001A 000A      float viVoltUpLevel = 0.0;
                 ; 001A 000B      float ivTempValue = 0.0;
                 ; 001A 000C      float factorA = 0.0;
                 ; 001A 000D      float factorB = 0.0;
                 ; 001A 000E      float factorC = 0.0;
                 ; 001A 000F 
                 ; 001A 0010      /////////range 1 Temp C(-10 to -100)
                 ; 001A 0011      float viVoltPoint1_1 = -0.094;
                 ; 001A 0012      float viVoltPoint2_1 = -0.552;
                 ; 001A 0013      float viVoltPoint3_1 = -0.876;
                 ; 001A 0014      float viTempOutPoint1_1 = -10.0;
                 ; 001A 0015      float viTempOutPoint2_1 = -60.0;
                 ; 001A 0016      float viTempOutPoint3_1 = -100.0;
                 ; 001A 0017 
                 ; 001A 0018      /////////range 2 Temp C(-100 to -200)
                 ; 001A 0019      float viVoltPoint1_2 = -0.876;
                 ; 001A 001A      float viVoltPoint2_2 = -1.269;
                 ; 001A 001B      float viVoltPoint3_2 = -1.454;
                 ; 001A 001C      float viTempOutPoint1_2 = -100.0;
                 ; 001A 001D      float viTempOutPoint2_2 = -160.0;
                 ; 001A 001E      float viTempOutPoint3_2 = -200.0;
                 ; 001A 001F 
                 ; 001A 0020      const float viVoltPointTable[5][3]  = {
                 ; 001A 0021             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 0022             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 0023             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 0024             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 0025             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 0026      };
                 ; 001A 0027 
                 ; 001A 0028      const float viTempOutPointTable[5][3]  = {
                 ; 001A 0029             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 002A             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 002B             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 002C             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 002D             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 002E      };
                 ; 001A 002F 
                 ; 001A 0030      viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
                 ;	viADC_p -> Y+200
                 ;	viADCLoop_p -> Y+198
                 ;	viADCSmooth -> R16,R17
                 ;	viADCToVolt -> Y+194
                 ;	viZeroSet -> Y+190
                 ;	viVoltUpLevel -> Y+186
                 ;	ivTempValue -> Y+182
                 ;	factorA -> Y+178
                 ;	factorB -> Y+174
                 ;	factorC -> Y+170
                 ;	viVoltPoint1_1 -> Y+166
                 ;	viVoltPoint2_1 -> Y+162
                 ;	viVoltPoint3_1 -> Y+158
                 ;	viTempOutPoint1_1 -> Y+154
                 ;	viTempOutPoint2_1 -> Y+150
                 ;	viTempOutPoint3_1 -> Y+146
                 ;	viVoltPoint1_2 -> Y+142
                 ;	viVoltPoint2_2 -> Y+138
                 ;	viVoltPoint3_2 -> Y+134
                 ;	viTempOutPoint1_2 -> Y+130
                 ;	viTempOutPoint2_2 -> Y+126
                 ;	viTempOutPoint3_2 -> Y+122
                 ;	viVoltPointTable -> Y+62
                 ;	viTempOutPointTable -> Y+2
                 ; 001A 0031      viVoltUpLevel = viADCToVolt - viZeroSet;
                 ; 001A 0032 
                 ; 001A 0033 
                 ; 001A 0034 //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 0035 //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0036 //          printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0037 //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.876)) ){
                 ; 001A 0038 //
                 ; 001A 0039 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 003A //        gaussian(viVoltPoint1_1,  viVoltPoint2_1,  viVoltPoint3_1, viTempOutPoint1_1, viTempOutPoint2_1, viTempOutPoint3_1, &factorA, &factorB, &factorC);
                 ; 001A 003B //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 003C //
                 ; 001A 003D //         printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 003E //     }else if((viVoltUpLevel < (-0.876)) && (viVoltUpLevel >= (-1.454)) ){
                 ; 001A 003F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0040 //        gaussian(viVoltPoint1_2,  viVoltPoint2_2,  viVoltPoint3_2, viTempOutPoint1_2, viTempOutPoint2_2, viTempOutPoint3_2, &factorA, &factorB, &factorC);
                 ; 001A 0041 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0042 //
                 ; 001A 0043 //         printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0044 //     }else if(viVoltUpLevel < ((-1.454)+10.0)){
                 ; 001A 0045 //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0046 //         printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0047 //     }
                 ; 001A 0048 
                 ; 001A 0049 
                 ; 001A 004A //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 004B //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 004C //        //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 004D //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 ; 001A 004E //
                 ; 001A 004F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0050 //        gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
                 ; 001A 0051 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0052 //
                 ; 001A 0053 //        // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0054 //     }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 ; 001A 0055 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0056 //        gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                 ; 001A 0057 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0058 //
                 ; 001A 0059 //        // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 005A //     }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 ; 001A 005B //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 005C //        gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                 ; 001A 005D //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 005E //
                 ; 001A 005F //        // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0060 //     }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 ; 001A 0061 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0062 //        gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                 ; 001A 0063 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0064 //
                 ; 001A 0065 //        // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0066 //     }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.464)) ){        //-1.454 + 20.0   | 20 = +compencess
                 ; 001A 0067 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0068 //        gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                 ; 001A 0069 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 006A //
                 ; 001A 006B //         //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 006C //     }
                 ; 001A 006D //     else if(viVoltUpLevel < (-1.464)){
                 ; 001A 006E //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 006F //         //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0070 //     }
                 ; 001A 0071 //     //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0072 
                 ; 001A 0073 
                 ; 001A 0074      if(viVoltUpLevel >= (-0.094)){
                 ; 001A 0075           ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0076         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0077      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 ; 001A 0078 
                 ; 001A 0079         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 007A         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
                 ; 001A 007B         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 007C 
                 ; 001A 007D         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 007E      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 ; 001A 007F         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0080         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                 ; 001A 0081         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0082 
                 ; 001A 0083         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0084      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 ; 001A 0085         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0086         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                 ; 001A 0087         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0088 
                 ; 001A 0089         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 008A      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 ; 001A 008B         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 008C         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                 ; 001A 008D         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 008E 
                 ; 001A 008F         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0090      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 ; 001A 0091         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0092         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                 ; 001A 0093         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0094 
                 ; 001A 0095          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0096      }
                 ; 001A 0097      else if(viVoltUpLevel < (-1.504)){
                 ; 001A 0098         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0099          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 009A      }
                 ; 001A 009B      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 009C      return ivTempValue;
                 ; 001A 009D }
                 ;
                 ;float iAD595ADCToVolt(unsigned long viADC_p,float viADCLoop_p){            //Volt Uplevel
                 ; 001A 009F float iAD595ADCToVolt(unsigned long viADC_p,float viADCLoop_p){
                 _iAD595ADCToVolt:
                 ; 001A 00A0      float    viADCSmooth =  (float)(viADC_p/viADCLoop_p);           //(float)(viADCbuffer/30.0);
                 ; 001A 00A1      float  viADCToVolt = 0.0;
                 ; 001A 00A2      //const float  viZeroSet   = 1.68;
                 ; 001A 00A3      const float  viZeroSet   = 1.667;
                 ; 001A 00A4      float viVoltUpLevel = 0.0;
                 ; 001A 00A5      float ivVoltValue = 0.0;
                 ; 001A 00A6 
                 ; 001A 00A7      viADCToVolt = (float)((viADCSmooth/1024.0)*3.30);      //    - 0  +
00a0b5 940e e060 	CALL __PUTPARD2
00a0b7 9764      	SBIW R28,20
00a0b8 e180      	LDI  R24,16
00a0b9 e0a0      	LDI  R26,LOW(0)
00a0ba e0b0      	LDI  R27,HIGH(0)
00a0bb ecee      	LDI  R30,LOW(_0x34001B*2)
00a0bc e6f8      	LDI  R31,HIGH(_0x34001B*2)
00a0bd e060      	LDI  R22,BYTE3(_0x34001B*2)
00a0be 940e e0de 	CALL __INITLOCB
                 ;	viADC_p -> Y+24
                 ;	viADCLoop_p -> Y+20
                 ;	viADCSmooth -> Y+16
                 ;	viADCToVolt -> Y+12
                 ;	viZeroSet -> Y+8
                 ;	viVoltUpLevel -> Y+4
                 ;	ivVoltValue -> Y+0
00a0c0 940e c5f0 	CALL SUBOPT_0xDC
00a0c2 940e ce0a 	CALL SUBOPT_0x224
00a0c4 940e e06d 	CALL __CDF2U
00a0c6 940e de4a 	CALL __DIVF21
00a0c8 940e d851 	CALL SUBOPT_0x379
                +
00a0ca e0e0     +LDI R30 , LOW ( 0x44800000 )
00a0cb e0f0     +LDI R31 , HIGH ( 0x44800000 )
00a0cc e860     +LDI R22 , BYTE3 ( 0x44800000 )
00a0cd e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
00a0ce 940e de4a 	CALL __DIVF21
                +
00a0d0 e3a3     +LDI R26 , LOW ( 0x40533333 )
00a0d1 e3b3     +LDI R27 , HIGH ( 0x40533333 )
00a0d2 e583     +LDI R24 , BYTE3 ( 0x40533333 )
00a0d3 e490     +LDI R25 , BYTE4 ( 0x40533333 )
                 	__GETD2N 0x40533333
00a0d4 940e ddfc 	CALL __MULF12
00a0d6 940e c659 	CALL SUBOPT_0xEC
                 ; 001A 00A8      viVoltUpLevel = viADCToVolt;
00a0d8 940e c4dc 	CALL SUBOPT_0xAE
                 ; 001A 00A9      //viVoltUpLevel = viADCToVolt - viZeroSet;
                 ; 001A 00AA 
                 ; 001A 00AB 
                 ; 001A 00AC      return viVoltUpLevel;
00a0da 966c      	ADIW R28,28
00a0db 9508      	RET
                 ; 001A 00AD }
                 ;
                 ;float iAD595ADCToVoltage(float viADC_arg){
                 ; 001A 00AF float iAD595ADCToVoltage(float viADC_arg){
                 ; 001A 00B0      float    viADCSmooth =  viADC_arg;
                 ; 001A 00B1      float  viADCToVolt = 0.0;
                 ; 001A 00B2      const float  viZeroSet = 1.667;
                 ; 001A 00B3      const float  viOffset = 0.213;
                 ; 001A 00B4      float viVoltUpLevel = 0.0;
                 ; 001A 00B5      float ivVoltValue = 0.0;
                 ; 001A 00B6 
                 ; 001A 00B7      viADCToVolt = (float)((viADCSmooth/1024.0)*3.30);    //      - 0  +
                 ;	viADC_arg -> Y+24
                 ;	viADCSmooth -> Y+20
                 ;	viADCToVolt -> Y+16
                 ;	viZeroSet -> Y+12
                 ;	viOffset -> Y+8
                 ;	viVoltUpLevel -> Y+4
                 ;	ivVoltValue -> Y+0
                 ; 001A 00B8      viVoltUpLevel = (viADCToVolt+viOffset) - viZeroSet;
                 ; 001A 00B9 
                 ; 001A 00BA      return viVoltUpLevel;
                 ; 001A 00BB }
                 ;
                 ;float iAD595VoltToTemp(float viVolt_arg){
                 ; 001A 00BD float iAD595VoltToTemp(float viVolt_arg){
                 _iAD595VoltToTemp:
                 ; 001A 00BE      //int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 00BF      float  viADCToVolt = 0.0;
                 ; 001A 00C0      //const float  viZeroSet   = 1.68;
                 ; 001A 00C1      const float  viZeroSet   = 1.667;
                 ; 001A 00C2      float viVoltUpLevel = 0.0;
                 ; 001A 00C3      float ivTempValue = 0.0;
                 ; 001A 00C4      float factorA = 0.0;
                 ; 001A 00C5      float factorB = 0.0;
                 ; 001A 00C6      float factorC = 0.0;
                 ; 001A 00C7 
                 ; 001A 00C8      /////////range 1 Temp C(-10 to -100)
                 ; 001A 00C9      float viVoltPoint1_1 = -0.094;
                 ; 001A 00CA      float viVoltPoint2_1 = -0.552;
                 ; 001A 00CB      float viVoltPoint3_1 = -0.876;
                 ; 001A 00CC      float viTempOutPoint1_1 = -10.0;
                 ; 001A 00CD      float viTempOutPoint2_1 = -60.0;
                 ; 001A 00CE      float viTempOutPoint3_1 = -100.0;
                 ; 001A 00CF 
                 ; 001A 00D0      /////////range 2 Temp C(-100 to -200)
                 ; 001A 00D1      float viVoltPoint1_2 = -0.876;
                 ; 001A 00D2      float viVoltPoint2_2 = -1.269;
                 ; 001A 00D3      float viVoltPoint3_2 = -1.454;
                 ; 001A 00D4      float viTempOutPoint1_2 = -100.0;
                 ; 001A 00D5      float viTempOutPoint2_2 = -160.0;
                 ; 001A 00D6      float viTempOutPoint3_2 = -200.0;
                 ; 001A 00D7 
                 ; 001A 00D8      const float viVoltPointTable[5][3]  = {
                 ; 001A 00D9             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 00DA             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 00DB             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 00DC             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 00DD             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 00DE      };
                 ; 001A 00DF 
                 ; 001A 00E0      const float viTempOutPointTable[5][3]  = {
                 ; 001A 00E1             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 00E2             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 00E3             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 00E4             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 00E5             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 00E6      };
                 ; 001A 00E7 
                 ; 001A 00E8      //viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
                 ; 001A 00E9      viVoltUpLevel = viVolt_arg;
00a0dc 940e e060 	CALL __PUTPARD2
00a0de 97ef      	SBIW R28,63
00a0df 97ef      	SBIW R28,63
00a0e0 97ef      	SBIW R28,63
00a0e1 9727      	SBIW R28,7
00a0e2 ec84      	LDI  R24,196
00a0e3 e0a0      	LDI  R26,LOW(0)
00a0e4 e0b0      	LDI  R27,HIGH(0)
00a0e5 efe2      	LDI  R30,LOW(_0x34001D*2)
00a0e6 e6f8      	LDI  R31,HIGH(_0x34001D*2)
00a0e7 e060      	LDI  R22,BYTE3(_0x34001D*2)
00a0e8 940e e0de 	CALL __INITLOCB
                 ;	viVolt_arg -> Y+196
                 ;	viADCToVolt -> Y+192
                 ;	viZeroSet -> Y+188
                 ;	viVoltUpLevel -> Y+184
                 ;	ivTempValue -> Y+180
                 ;	factorA -> Y+176
                 ;	factorB -> Y+172
                 ;	factorC -> Y+168
                 ;	viVoltPoint1_1 -> Y+164
                 ;	viVoltPoint2_1 -> Y+160
                 ;	viVoltPoint3_1 -> Y+156
                 ;	viTempOutPoint1_1 -> Y+152
                 ;	viTempOutPoint2_1 -> Y+148
                 ;	viTempOutPoint3_1 -> Y+144
                 ;	viVoltPoint1_2 -> Y+140
                 ;	viVoltPoint2_2 -> Y+136
                 ;	viVoltPoint3_2 -> Y+132
                 ;	viTempOutPoint1_2 -> Y+128
                 ;	viTempOutPoint2_2 -> Y+124
                 ;	viTempOutPoint3_2 -> Y+120
                 ;	viVoltPointTable -> Y+60
                 ;	viTempOutPointTable -> Y+0
                +
00a0ea 01fe     +MOVW R30 , R28
00a0eb 53ec     +SUBI R30 , LOW ( - 196 )
00a0ec 4fff     +SBCI R31 , HIGH ( - 196 )
00a0ed 9001     +LD R0 , Z +
00a0ee 9011     +LD R1 , Z +
00a0ef 9161     +LD R22 , Z +
00a0f0 8170     +LD R23 , Z
00a0f1 01f0     +MOVW R30 , R0
                 	__GETD1SX 196
                +
00a0f2 01de     +MOVW R26 , R28
00a0f3 54a8     +SUBI R26 , LOW ( - 184 )
00a0f4 4fbf     +SBCI R27 , HIGH ( - 184 )
00a0f5 93ed     +ST X + , R30
00a0f6 93fd     +ST X + , R31
00a0f7 936d     +ST X + , R22
00a0f8 937c     +ST X , R23
                 	__PUTD1SX 184
                 ; 001A 00EA 
                 ; 001A 00EB 
                 ; 001A 00EC      if(viVoltUpLevel >= (-0.094)){
00a0f9 940e d854 	CALL SUBOPT_0x37A
00a0fb f008      	BRLO _0x34001E
                 ; 001A 00ED           ivTempValue = (viVoltUpLevel*1000) / 10.0;
00a0fc c110      	RJMP _0x340037
                 ; 001A 00EE         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00EF      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 _0x34001E:
00a0fd 940e d854 	CALL SUBOPT_0x37A
00a0ff f428      	BRSH _0x340021
00a100 940e d863 	CALL SUBOPT_0x37B
00a102 940e d86c 	CALL SUBOPT_0x37C
00a104 f408      	BRSH _0x340022
                 _0x340021:
00a105 c02d      	RJMP _0x340020
                 _0x340022:
                 ; 001A 00F0 
                 ; 001A 00F1         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00F2         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
00a106 940e ce03 	CALL SUBOPT_0x223
                +
00a108 01fe     +MOVW R30 , R28
00a109 5bec     +SUBI R30 , LOW ( - 68 )
00a10a 4fff     +SBCI R31 , HIGH ( - 68 )
00a10b 9001     +LD R0 , Z +
00a10c 9011     +LD R1 , Z +
00a10d 9161     +LD R22 , Z +
00a10e 8170     +LD R23 , Z
00a10f 01f0     +MOVW R30 , R0
                 	__GETD1SX 68
00a110 940e e05b 	CALL __PUTPARD1
                +
00a112 01fe     +MOVW R30 , R28
00a113 5be4     +SUBI R30 , LOW ( - 76 )
00a114 4fff     +SBCI R31 , HIGH ( - 76 )
00a115 9001     +LD R0 , Z +
00a116 9011     +LD R1 , Z +
00a117 9161     +LD R22 , Z +
00a118 8170     +LD R23 , Z
00a119 01f0     +MOVW R30 , R0
                 	__GETD1SX 76
00a11a 940e c3fb 	CALL SUBOPT_0x8D
00a11c 940e e05b 	CALL __PUTPARD1
00a11e 940e c5f0 	CALL SUBOPT_0xDC
00a120 940e d7ac 	CALL SUBOPT_0x35E
00a122 940e d873 	CALL SUBOPT_0x37D
                 ; 001A 00F3         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a124 937f      	PUSH R23
00a125 936f      	PUSH R22
00a126 93ff      	PUSH R31
00a127 93ef      	PUSH R30
00a128 940e d89a 	CALL SUBOPT_0x37E
00a12a 940e d8a3 	CALL SUBOPT_0x37F
00a12c 91af      	POP  R26
00a12d 91bf      	POP  R27
00a12e 918f      	POP  R24
00a12f 919f      	POP  R25
00a130 940e d8ae 	CALL SUBOPT_0x380
00a132 c0ee      	RJMP _0x340038
                 ; 001A 00F4 
                 ; 001A 00F5         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00F6      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 _0x340020:
00a133 940e d863 	CALL SUBOPT_0x37B
00a135 940e d86c 	CALL SUBOPT_0x37C
00a137 f418      	BRSH _0x340025
00a138 940e d8bb 	CALL SUBOPT_0x381
00a13a f408      	BRSH _0x340026
                 _0x340025:
00a13b c026      	RJMP _0x340024
                 _0x340026:
                 ; 001A 00F7         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00F8         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                +
00a13c 01fe     +MOVW R30 , R28
00a13d 5be8     +SUBI R30 , LOW ( - 72 )
00a13e 4fff     +SBCI R31 , HIGH ( - 72 )
00a13f 9001     +LD R0 , Z +
00a140 9011     +LD R1 , Z +
00a141 9161     +LD R22 , Z +
00a142 8170     +LD R23 , Z
00a143 01f0     +MOVW R30 , R0
                 	__GETD1SX 72
00a144 940e d8c3 	CALL SUBOPT_0x382
00a146 9670      	ADIW R30,16
00a147 940e c375 	CALL SUBOPT_0x78
00a149 01fe      	MOVW R30,R28
00a14a 5bec      	SUBI R30,LOW(-(68))
00a14b 4fff      	SBCI R31,HIGH(-(68))
00a14c 9674      	ADIW R30,20
00a14d 940e c375 	CALL SUBOPT_0x78
00a14f 940e c672 	CALL SUBOPT_0xF2
00a151 940e c676 	CALL SUBOPT_0xF3
00a153 940e d8c9 	CALL SUBOPT_0x383
                 ; 001A 00F9         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a155 937f      	PUSH R23
00a156 936f      	PUSH R22
00a157 93ff      	PUSH R31
00a158 93ef      	PUSH R30
00a159 940e d8e7 	CALL SUBOPT_0x384
00a15b 91af      	POP  R26
00a15c 91bf      	POP  R27
00a15d 918f      	POP  R24
00a15e 919f      	POP  R25
00a15f 940e d8ae 	CALL SUBOPT_0x380
00a161 c0bf      	RJMP _0x340038
                 ; 001A 00FA 
                 ; 001A 00FB         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00FC      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 _0x340024:
00a162 940e d8bb 	CALL SUBOPT_0x381
00a164 f418      	BRSH _0x340029
00a165 940e d8e9 	CALL SUBOPT_0x385
00a167 f408      	BRSH _0x34002A
                 _0x340029:
00a168 c032      	RJMP _0x340028
                 _0x34002A:
                 ; 001A 00FD         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00FE         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                +
00a169 01fe     +MOVW R30 , R28
00a16a 5aec     +SUBI R30 , LOW ( - 84 )
00a16b 4fff     +SBCI R31 , HIGH ( - 84 )
00a16c 9001     +LD R0 , Z +
00a16d 9011     +LD R1 , Z +
00a16e 9161     +LD R22 , Z +
00a16f 8170     +LD R23 , Z
00a170 01f0     +MOVW R30 , R0
                 	__GETD1SX 84
00a171 940e d8c3 	CALL SUBOPT_0x382
00a173 967c      	ADIW R30,28
00a174 940e c375 	CALL SUBOPT_0x78
00a176 01fe      	MOVW R30,R28
00a177 5bec      	SUBI R30,LOW(-(68))
00a178 4fff      	SBCI R31,HIGH(-(68))
00a179 96b0      	ADIW R30,32
00a17a 940e c375 	CALL SUBOPT_0x78
                +
00a17c a1ec     +LDD R30 , Y + 36
00a17d a1fd     +LDD R31 , Y + 36 + 1
00a17e a16e     +LDD R22 , Y + 36 + 2
00a17f a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
00a180 940e e05b 	CALL __PUTPARD1
                +
00a182 a5ec     +LDD R30 , Y + 44
00a183 a5fd     +LDD R31 , Y + 44 + 1
00a184 a56e     +LDD R22 , Y + 44 + 2
00a185 a57f     +LDD R23 , Y + 44 + 3
                 	__GETD1S 44
00a186 940e e05b 	CALL __PUTPARD1
                +
00a188 a9ec     +LDD R30 , Y + 52
00a189 a9fd     +LDD R31 , Y + 52 + 1
00a18a a96e     +LDD R22 , Y + 52 + 2
00a18b a97f     +LDD R23 , Y + 52 + 3
                 	__GETD1S 52
00a18c 940e d873 	CALL SUBOPT_0x37D
                 ; 001A 00FF         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a18e 937f      	PUSH R23
00a18f 936f      	PUSH R22
00a190 93ff      	PUSH R31
00a191 93ef      	PUSH R30
00a192 940e d8e7 	CALL SUBOPT_0x384
00a194 91af      	POP  R26
00a195 91bf      	POP  R27
00a196 918f      	POP  R24
00a197 919f      	POP  R25
00a198 940e d8ae 	CALL SUBOPT_0x380
00a19a c086      	RJMP _0x340038
                 ; 001A 0100 
                 ; 001A 0101         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0102      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 _0x340028:
00a19b 940e d8e9 	CALL SUBOPT_0x385
00a19d f418      	BRSH _0x34002D
00a19e 940e d8f1 	CALL SUBOPT_0x386
00a1a0 f408      	BRSH _0x34002E
                 _0x34002D:
00a1a1 c02f      	RJMP _0x34002C
                 _0x34002E:
                 ; 001A 0103         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0104         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                +
00a1a2 01fe     +MOVW R30 , R28
00a1a3 5ae0     +SUBI R30 , LOW ( - 96 )
00a1a4 4fff     +SBCI R31 , HIGH ( - 96 )
00a1a5 9001     +LD R0 , Z +
00a1a6 9011     +LD R1 , Z +
00a1a7 9161     +LD R22 , Z +
00a1a8 8170     +LD R23 , Z
00a1a9 01f0     +MOVW R30 , R0
                 	__GETD1SX 96
00a1aa 940e d8c3 	CALL SUBOPT_0x382
00a1ac 96b8      	ADIW R30,40
00a1ad 940e c375 	CALL SUBOPT_0x78
00a1af 01fe      	MOVW R30,R28
00a1b0 5bec      	SUBI R30,LOW(-(68))
00a1b1 4fff      	SBCI R31,HIGH(-(68))
00a1b2 96bc      	ADIW R30,44
00a1b3 940e c375 	CALL SUBOPT_0x78
00a1b5 940e c683 	CALL SUBOPT_0xF4
                +
00a1b7 ade8     +LDD R30 , Y + 56
00a1b8 adf9     +LDD R31 , Y + 56 + 1
00a1b9 ad6a     +LDD R22 , Y + 56 + 2
00a1ba ad7b     +LDD R23 , Y + 56 + 3
                 	__GETD1S 56
00a1bb 940e e05b 	CALL __PUTPARD1
00a1bd 01fe      	MOVW R30,R28
00a1be 96f8      	ADIW R30,56
00a1bf 9638      	ADIW R30,8
00a1c0 940e c375 	CALL SUBOPT_0x78
00a1c2 940e d8c9 	CALL SUBOPT_0x383
                 ; 001A 0105         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a1c4 937f      	PUSH R23
00a1c5 936f      	PUSH R22
00a1c6 93ff      	PUSH R31
00a1c7 93ef      	PUSH R30
00a1c8 940e d8e7 	CALL SUBOPT_0x384
00a1ca 91af      	POP  R26
00a1cb 91bf      	POP  R27
00a1cc 918f      	POP  R24
00a1cd 919f      	POP  R25
00a1ce 940e d8ae 	CALL SUBOPT_0x380
00a1d0 c050      	RJMP _0x340038
                 ; 001A 0106 
                 ; 001A 0107         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0108      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 _0x34002C:
00a1d1 940e d8f1 	CALL SUBOPT_0x386
00a1d3 f428      	BRSH _0x340031
00a1d4 940e d863 	CALL SUBOPT_0x37B
00a1d6 940e cd32 	CALL SUBOPT_0x20A
00a1d8 f408      	BRSH _0x340032
                 _0x340031:
00a1d9 c02e      	RJMP _0x340030
                 _0x340032:
                 ; 001A 0109         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 010A         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                +
00a1da 01fe     +MOVW R30 , R28
00a1db 59e4     +SUBI R30 , LOW ( - 108 )
00a1dc 4fff     +SBCI R31 , HIGH ( - 108 )
00a1dd 9001     +LD R0 , Z +
00a1de 9011     +LD R1 , Z +
00a1df 9161     +LD R22 , Z +
00a1e0 8170     +LD R23 , Z
00a1e1 01f0     +MOVW R30 , R0
                 	__GETD1SX 108
00a1e2 940e d8c3 	CALL SUBOPT_0x382
00a1e4 96f4      	ADIW R30,52
00a1e5 940e c375 	CALL SUBOPT_0x78
00a1e7 01fe      	MOVW R30,R28
00a1e8 5bec      	SUBI R30,LOW(-(68))
00a1e9 4fff      	SBCI R31,HIGH(-(68))
00a1ea 96f8      	ADIW R30,56
00a1eb 940e c375 	CALL SUBOPT_0x78
00a1ed 940e ce03 	CALL SUBOPT_0x223
00a1ef 01fe      	MOVW R30,R28
00a1f0 9670      	ADIW R30,16
00a1f1 96f4      	ADIW R30,52
00a1f2 940e c375 	CALL SUBOPT_0x78
00a1f4 01fe      	MOVW R30,R28
00a1f5 9674      	ADIW R30,20
00a1f6 96f8      	ADIW R30,56
00a1f7 940e c375 	CALL SUBOPT_0x78
00a1f9 940e d8c9 	CALL SUBOPT_0x383
                 ; 001A 010B         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a1fb 937f      	PUSH R23
00a1fc 936f      	PUSH R22
00a1fd 93ff      	PUSH R31
00a1fe 93ef      	PUSH R30
00a1ff 940e d8e7 	CALL SUBOPT_0x384
00a201 91af      	POP  R26
00a202 91bf      	POP  R27
00a203 918f      	POP  R24
00a204 919f      	POP  R25
00a205 940e d8ae 	CALL SUBOPT_0x380
00a207 c019      	RJMP _0x340038
                 ; 001A 010C 
                 ; 001A 010D          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 010E      }
                 ; 001A 010F      else if(viVoltUpLevel < (-1.504)){
                 _0x340030:
00a208 940e d863 	CALL SUBOPT_0x37B
00a20a 940e cd32 	CALL SUBOPT_0x20A
00a20c f4d8      	BRSH _0x340034
                 ; 001A 0110         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 _0x340037:
                +
00a20d 01de     +MOVW R26 , R28
00a20e 54a8     +SUBI R26 , LOW ( - 184 )
00a20f 4fbf     +SBCI R27 , HIGH ( - 184 )
00a210 900d     +LD R0 , X +
00a211 901d     +LD R1 , X +
00a212 918d     +LD R24 , X +
00a213 919c     +LD R25 , X
00a214 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
                +
00a215 e0e0     +LDI R30 , LOW ( 0x447A0000 )
00a216 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00a217 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00a218 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00a219 940e ddfc 	CALL __MULF12
00a21b 01df      	MOVW R26,R30
00a21c 01cb      	MOVW R24,R22
00a21d 940e c708 	CALL SUBOPT_0x10B
00a21f 940e de4a 	CALL __DIVF21
                 _0x340038:
                +
00a221 01de     +MOVW R26 , R28
00a222 54ac     +SUBI R26 , LOW ( - 180 )
00a223 4fbf     +SBCI R27 , HIGH ( - 180 )
00a224 93ed     +ST X + , R30
00a225 93fd     +ST X + , R31
00a226 936d     +ST X + , R22
00a227 937c     +ST X , R23
                 	__PUTD1SX 180
                 ; 001A 0111          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0112      }
                 ; 001A 0113      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0114      return ivTempValue;
                 _0x340034:
                +
00a228 01fe     +MOVW R30 , R28
00a229 54ec     +SUBI R30 , LOW ( - 180 )
00a22a 4fff     +SBCI R31 , HIGH ( - 180 )
00a22b 9001     +LD R0 , Z +
00a22c 9011     +LD R1 , Z +
00a22d 9161     +LD R22 , Z +
00a22e 8170     +LD R23 , Z
00a22f 01f0     +MOVW R30 , R0
                 	__GETD1SX 180
00a230 96ef      	ADIW R28,63
00a231 96ef      	ADIW R28,63
00a232 96ef      	ADIW R28,63
00a233 962b      	ADIW R28,11
00a234 9508      	RET
                 ; 001A 0115 }
                 ;#include <stdlib.h>
                 ;#include "gaussianAD595.h"
                 ;#include "debug.h"
                 ;
                 
                 	.CSEG
                 _fabs:
00a235 940e e060 	CALL __PUTPARD2
00a237 91e9          ld   r30,y+
00a238 91f9          ld   r31,y+
00a239 9169          ld   r22,y+
00a23a 9179          ld   r23,y+
00a23b 777f          cbr  r23,0x80
00a23c 9508          ret
                 _atoi:
00a23d 93ba      	ST   -Y,R27
00a23e 93aa      	ST   -Y,R26
00a23f 81b9         	ldd  r27,y+1
00a240 81a8         	ld   r26,y
                 __atoi0:
00a241 91ec         	ld   r30,x
00a242 2f8a              mov  r24,r26
00a243 2fae      	MOV  R26,R30
00a244 940e bfc4 	CALL _isspace
00a246 2fa8              mov  r26,r24
00a247 23ee         	tst  r30
00a248 f011         	breq __atoi1
00a249 9611         	adiw r26,1
00a24a cff6         	rjmp __atoi0
                 __atoi1:
00a24b 94e8         	clt
00a24c 91ec         	ld   r30,x
00a24d 32ed         	cpi  r30,'-'
00a24e f411         	brne __atoi2
00a24f 9468         	set
00a250 c002         	rjmp __atoi3
                 __atoi2:
00a251 32eb         	cpi  r30,'+'
00a252 f409         	brne __atoi4
                 __atoi3:
00a253 9611         	adiw r26,1
                 __atoi4:
00a254 2766         	clr  r22
00a255 2777         	clr  r23
                 __atoi5:
00a256 91ec         	ld   r30,x
00a257 2f8a              mov  r24,r26
00a258 2fae      	MOV  R26,R30
00a259 940e bfb2 	CALL _isdigit
00a25b 2fa8              mov  r26,r24
00a25c 23ee         	tst  r30
00a25d f079         	breq __atoi6
00a25e 01fb         	movw r30,r22
00a25f 0f66         	lsl  r22
00a260 1f77         	rol  r23
00a261 0f66         	lsl  r22
00a262 1f77         	rol  r23
00a263 0f6e         	add  r22,r30
00a264 1f7f         	adc  r23,r31
00a265 0f66         	lsl  r22
00a266 1f77         	rol  r23
00a267 91ed         	ld   r30,x+
00a268 27ff         	clr  r31
00a269 53e0         	subi r30,'0'
00a26a 0f6e         	add  r22,r30
00a26b 1f7f         	adc  r23,r31
00a26c cfe9         	rjmp __atoi5
                 __atoi6:
00a26d 01fb         	movw r30,r22
00a26e f41e         	brtc __atoi7
00a26f 95e0         	com  r30
00a270 95f0         	com  r31
00a271 9631         	adiw r30,1
                 __atoi7:
00a272 9622         	adiw r28,2
00a273 9508         	ret
                 _atol:
00a274 93ba      	ST   -Y,R27
00a275 93aa      	ST   -Y,R26
00a276 81b9          ldd  r27,y+1
00a277 81a8          ld   r26,y
                 __atol0:
00a278 91ec          ld   r30,x
00a279 93af          push r26
00a27a 2fae      	MOV  R26,R30
00a27b 940e bfc4 	CALL _isspace
00a27d 91af          pop  r26
00a27e 23ee          tst  r30
00a27f f011          breq __atol1
00a280 9611          adiw r26,1
00a281 cff6          rjmp __atol0
                 __atol1:
00a282 94e8          clt
00a283 91ec          ld   r30,x
00a284 32ed          cpi  r30,'-'
00a285 f411          brne __atol2
00a286 9468          set
00a287 c002          rjmp __atol3
                 __atol2:
00a288 32eb          cpi  r30,'+'
00a289 f409          brne __atol4
                 __atol3:
00a28a 9611          adiw r26,1
                 __atol4:
00a28b 2400          clr  r0
00a28c 2411          clr  r1
00a28d 2788          clr  r24
00a28e 2799          clr  r25
                 __atol5:
00a28f 91ec          ld   r30,x
00a290 93af          push r26
00a291 2fae      	MOV  R26,R30
00a292 940e bfb2 	CALL _isdigit
00a294 91af          pop  r26
00a295 23ee          tst  r30
00a296 f089          breq __atol6
00a297 01f0          movw r30,r0
00a298 01bc          movw r22,r24
00a299 d01b          rcall __atol8
00a29a d01a          rcall __atol8
00a29b 0e0e          add  r0,r30
00a29c 1e1f          adc  r1,r31
00a29d 1f86          adc  r24,r22
00a29e 1f97          adc  r25,r23
00a29f d015          rcall __atol8
00a2a0 91ed          ld   r30,x+
00a2a1 27ff          clr  r31
00a2a2 53e0          subi r30,'0'
00a2a3 0e0e          add  r0,r30
00a2a4 1e1f          adc  r1,r31
00a2a5 1f8f          adc  r24,r31
00a2a6 1f9f          adc  r25,r31
00a2a7 cfe7          rjmp __atol5
                 __atol6:
00a2a8 01f0          movw r30,r0
00a2a9 01bc          movw r22,r24
00a2aa f446          brtc __atol7
00a2ab 95e0          com  r30
00a2ac 95f0          com  r31
00a2ad 9560          com  r22
00a2ae 9570          com  r23
00a2af 2788          clr  r24
00a2b0 9631          adiw r30,1
00a2b1 1f68          adc  r22,r24
00a2b2 1f78          adc  r23,r24
                 __atol7:
00a2b3 9622          adiw r28,2
00a2b4 9508          ret
                 
                 __atol8:
00a2b5 0c00          lsl  r0
00a2b6 1c11          rol  r1
00a2b7 1f88          rol  r24
00a2b8 1f99          rol  r25
00a2b9 9508          ret
                 _ftoa:
00a2ba 93ba      	ST   -Y,R27
00a2bb 93aa      	ST   -Y,R26
00a2bc 9724      	SBIW R28,4
00a2bd 940e cd0a 	CALL SUBOPT_0x206
00a2bf e3ef      	LDI  R30,LOW(63)
00a2c0 83eb      	STD  Y+3,R30
00a2c1 931a      	ST   -Y,R17
00a2c2 930a      	ST   -Y,R16
00a2c3 85eb      	LDD  R30,Y+11
00a2c4 85fc      	LDD  R31,Y+11+1
00a2c5 3fef      	CPI  R30,LOW(0xFFFF)
00a2c6 efaf      	LDI  R26,HIGH(0xFFFF)
00a2c7 07fa      	CPC  R31,R26
00a2c8 f449      	BRNE _0x200000D
00a2c9 940e c8e5 	CALL SUBOPT_0x15B
                +
00a2cb eba8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00a2cc e6b9     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
00a2cd e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
00a2ce e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
00a2cf 940e a5c0 	CALL _strcpyf
00a2d1 c0a1      	RJMP _0x20E002C
                 _0x200000D:
00a2d2 3fef      	CPI  R30,LOW(0x7FFF)
00a2d3 e7af      	LDI  R26,HIGH(0x7FFF)
00a2d4 07fa      	CPC  R31,R26
00a2d5 f449      	BRNE _0x200000C
00a2d6 940e c8e5 	CALL SUBOPT_0x15B
                +
00a2d8 eba9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00a2d9 e6b9     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
00a2da e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
00a2db e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
00a2dc 940e a5c0 	CALL _strcpyf
00a2de c094      	RJMP _0x20E002C
                 _0x200000C:
00a2df 85ac      	LDD  R26,Y+12
00a2e0 23aa      	TST  R26
00a2e1 f452      	BRPL _0x200000F
00a2e2 940e c318 	CALL SUBOPT_0x6B
00a2e4 940e dd06 	CALL __ANEGF1
00a2e6 940e d8f9 	CALL SUBOPT_0x387
00a2e8 940e d8fe 	CALL SUBOPT_0x388
00a2ea e2ed      	LDI  R30,LOW(45)
00a2eb 93ec      	ST   X,R30
                 _0x200000F:
00a2ec 85a8      	LDD  R26,Y+8
00a2ed 30a7      	CPI  R26,LOW(0x7)
00a2ee f010      	BRLO _0x2000010
00a2ef e0e6      	LDI  R30,LOW(6)
00a2f0 87e8      	STD  Y+8,R30
                 _0x2000010:
00a2f1 8518      	LDD  R17,Y+8
                 _0x2000011:
00a2f2 2fe1      	MOV  R30,R17
00a2f3 5011      	SUBI R17,1
00a2f4 30e0      	CPI  R30,0
00a2f5 f029      	BREQ _0x2000013
00a2f6 940e d905 	CALL SUBOPT_0x389
00a2f8 940e c4f1 	CALL SUBOPT_0xB2
00a2fa cff7      	RJMP _0x2000011
                 _0x2000013:
00a2fb 940e d90e 	CALL SUBOPT_0x38A
00a2fd 940e ddac 	CALL __ADDF12
00a2ff 940e d8f9 	CALL SUBOPT_0x387
00a301 e010      	LDI  R17,LOW(0)
00a302 940e d846 	CALL SUBOPT_0x377
00a304 940e c4f1 	CALL SUBOPT_0xB2
                 _0x2000014:
00a306 940e d90e 	CALL SUBOPT_0x38A
00a308 940e de8f 	CALL __CMPF12
00a30a f098      	BRLO _0x2000016
00a30b 940e c4fb 	CALL SUBOPT_0xB4
00a30d 940e d915 	CALL SUBOPT_0x38B
00a30f 940e c4f1 	CALL SUBOPT_0xB2
00a311 5f1f      	SUBI R17,-LOW(1)
00a312 3217      	CPI  R17,39
00a313 f048      	BRLO _0x2000017
00a314 940e c8e5 	CALL SUBOPT_0x15B
                +
00a316 ebad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
00a317 e6b9     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
00a318 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
00a319 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
00a31a 940e a5c0 	CALL _strcpyf
00a31c c056      	RJMP _0x20E002C
                 _0x2000017:
00a31d cfe8      	RJMP _0x2000014
                 _0x2000016:
00a31e 3010      	CPI  R17,0
00a31f f429      	BRNE _0x2000018
00a320 940e d8fe 	CALL SUBOPT_0x388
00a322 e3e0      	LDI  R30,LOW(48)
00a323 93ec      	ST   X,R30
00a324 c026      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
00a325 2fe1      	MOV  R30,R17
00a326 5011      	SUBI R17,1
00a327 30e0      	CPI  R30,0
00a328 f111      	BREQ _0x200001C
00a329 940e d905 	CALL SUBOPT_0x389
00a32b 940e d91a 	CALL SUBOPT_0x38C
00a32d 01df      	MOVW R26,R30
00a32e 01cb      	MOVW R24,R22
00a32f 940e c017 	CALL _floor
00a331 940e c66b 	CALL SUBOPT_0xF0
00a333 940e d91f 	CALL SUBOPT_0x38D
00a335 940e de4a 	CALL __DIVF21
00a337 940e dd39 	CALL __CFD1U
00a339 2f0e      	MOV  R16,R30
00a33a 940e d8fe 	CALL SUBOPT_0x388
00a33c 940e d924 	CALL SUBOPT_0x38E
00a33e 940e c4fb 	CALL SUBOPT_0xB4
00a340 940e d92a 	CALL SUBOPT_0x38F
00a342 940e ddfc 	CALL __MULF12
00a344 940e d91f 	CALL SUBOPT_0x38D
00a346 940e cd8d 	CALL SUBOPT_0x216
00a348 940e d8f9 	CALL SUBOPT_0x387
00a34a cfda      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00a34b 85e8      	LDD  R30,Y+8
00a34c 30e0      	CPI  R30,0
00a34d f109      	BREQ _0x20E002B
00a34e 940e d8fe 	CALL SUBOPT_0x388
00a350 e2ee      	LDI  R30,LOW(46)
00a351 93ec      	ST   X,R30
                 _0x200001E:
00a352 85e8      	LDD  R30,Y+8
00a353 50e1      	SUBI R30,LOW(1)
00a354 87e8      	STD  Y+8,R30
00a355 5fef      	SUBI R30,-LOW(1)
00a356 f0c1      	BREQ _0x2000020
00a357 940e d91f 	CALL SUBOPT_0x38D
00a359 940e d915 	CALL SUBOPT_0x38B
00a35b 940e d8f9 	CALL SUBOPT_0x387
00a35d 940e c318 	CALL SUBOPT_0x6B
00a35f 940e dd39 	CALL __CFD1U
00a361 2f0e      	MOV  R16,R30
00a362 940e d8fe 	CALL SUBOPT_0x388
00a364 940e d924 	CALL SUBOPT_0x38E
00a366 940e d91f 	CALL SUBOPT_0x38D
00a368 940e d92a 	CALL SUBOPT_0x38F
00a36a 940e cd8d 	CALL SUBOPT_0x216
00a36c 940e d8f9 	CALL SUBOPT_0x387
00a36e cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002B:
00a36f 81ae      	LDD  R26,Y+6
00a370 81bf      	LDD  R27,Y+6+1
00a371 e0e0      	LDI  R30,LOW(0)
00a372 93ec      	ST   X,R30
                 _0x20E002C:
00a373 8119      	LDD  R17,Y+1
00a374 8108      	LDD  R16,Y+0
00a375 962d      	ADIW R28,13
00a376 9508      	RET
                 _atof:
00a377 93ba      	ST   -Y,R27
00a378 93aa      	ST   -Y,R26
00a379 972a      	SBIW R28,10
00a37a 940e e0d0 	CALL __SAVELOCR6
00a37c e0e0      	LDI  R30,LOW(0)
                +
00a37d 87e8     +STD Y + 8 , R30
00a37e 87e9     +STD Y + 8 + 1 , R30
00a37f 87ea     +STD Y + 8 + 2 , R30
00a380 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
00a381 89a8      	LDD  R26,Y+16
00a382 89b9      	LDD  R27,Y+16+1
00a383 91ec      	LD   R30,X
00a384 2f5e      	MOV  R21,R30
00a385 2fae      	MOV  R26,R30
00a386 940e bfc4 	CALL _isspace
00a388 30e0      	CPI  R30,0
00a389 f019      	BREQ _0x200003E
00a38a 940e d92f 	CALL SUBOPT_0x390
00a38c cff4      	RJMP _0x200003C
                 _0x200003E:
00a38d e0e0      	LDI  R30,LOW(0)
00a38e 83ef      	STD  Y+7,R30
00a38f 325b      	CPI  R21,43
00a390 f021      	BREQ _0x2000073
00a391 325d      	CPI  R21,45
00a392 f439      	BRNE _0x2000041
00a393 e0e1      	LDI  R30,LOW(1)
00a394 83ef      	STD  Y+7,R30
                 _0x2000073:
00a395 89e8      	LDD  R30,Y+16
00a396 89f9      	LDD  R31,Y+16+1
00a397 9631      	ADIW R30,1
00a398 8be8      	STD  Y+16,R30
00a399 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
00a39a e0e0      	LDI  R30,LOW(0)
00a39b 2f4e      	MOV  R20,R30
00a39c 2f5e      	MOV  R21,R30
                +
00a39d 8908     +LDD R16 , Y + 16
00a39e 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
00a39f 89a8      	LDD  R26,Y+16
00a3a0 89b9      	LDD  R27,Y+16+1
00a3a1 940e d7d8 	CALL SUBOPT_0x365
00a3a3 f449      	BRNE _0x2000045
00a3a4 89a8      	LDD  R26,Y+16
00a3a5 89b9      	LDD  R27,Y+16+1
00a3a6 91ac      	LD   R26,X
00a3a7 e2ee      	LDI  R30,LOW(46)
00a3a8 940e df42 	CALL __EQB12
00a3aa 2f5e      	MOV  R21,R30
00a3ab 30e0      	CPI  R30,0
00a3ac f021      	BREQ _0x2000044
                 _0x2000045:
00a3ad 2b45      	OR   R20,R21
00a3ae 940e d92f 	CALL SUBOPT_0x390
00a3b0 cfee      	RJMP _0x2000042
                 _0x2000044:
                +
00a3b1 8928     +LDD R18 , Y + 16
00a3b2 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
00a3b3 3040      	CPI  R20,0
00a3b4 f0e9      	BREQ _0x2000047
00a3b5 89e8      	LDD  R30,Y+16
00a3b6 89f9      	LDD  R31,Y+16+1
00a3b7 9731      	SBIW R30,1
00a3b8 8be8      	STD  Y+16,R30
00a3b9 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
00a3ba 89a8      	LDD  R26,Y+16
00a3bb 89b9      	LDD  R27,Y+16+1
00a3bc 91ac      	LD   R26,X
00a3bd 32ae      	CPI  R26,LOW(0x2E)
00a3be f099      	BREQ _0x200004A
00a3bf 89a8      	LDD  R26,Y+16
00a3c0 89b9      	LDD  R27,Y+16+1
00a3c1 940e d786 	CALL SUBOPT_0x356
00a3c3 97f0      	SBIW R30,48
00a3c4 940e c5d9 	CALL SUBOPT_0xD8
00a3c6 940e d92a 	CALL SUBOPT_0x38F
00a3c8 940e c489 	CALL SUBOPT_0x9F
00a3ca 940e d79d 	CALL SUBOPT_0x35B
00a3cc 89e8      	LDD  R30,Y+16
00a3cd 89f9      	LDD  R31,Y+16+1
00a3ce 9731      	SBIW R30,1
00a3cf 8be8      	STD  Y+16,R30
00a3d0 8bf9      	STD  Y+16+1,R31
00a3d1 cfe8      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00a3d2 940e d846 	CALL SUBOPT_0x377
00a3d4 940e c64f 	CALL SUBOPT_0xEA
                 _0x200004B:
00a3d6 89a8      	LDD  R26,Y+16
00a3d7 89b9      	LDD  R27,Y+16+1
00a3d8 9711      	SBIW R26,1
00a3d9 8ba8      	STD  Y+16,R26
00a3da 8bb9      	STD  Y+16+1,R27
00a3db 17a0      	CP   R26,R16
00a3dc 07b1      	CPC  R27,R17
00a3dd f0a0      	BRLO _0x200004D
00a3de 940e d786 	CALL SUBOPT_0x356
00a3e0 97f0      	SBIW R30,48
00a3e1 940e c088 	CALL SUBOPT_0xB
00a3e3 940e d92a 	CALL SUBOPT_0x38F
00a3e5 940e ddfc 	CALL __MULF12
00a3e7 940e c5d9 	CALL SUBOPT_0xD8
00a3e9 940e ddac 	CALL __ADDF12
00a3eb 940e d79d 	CALL SUBOPT_0x35B
00a3ed 940e d935 	CALL SUBOPT_0x391
00a3ef 940e c64f 	CALL SUBOPT_0xEA
00a3f1 cfe4      	RJMP _0x200004B
                 _0x200004D:
00a3f2 01d9      	MOVW R26,R18
                +
00a3f3 5f2f     +SUBI R18 , LOW ( - 1 )
00a3f4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a3f5 915c      	LD   R21,X
00a3f6 3655      	CPI  R21,101
00a3f7 f019      	BREQ _0x200004F
00a3f8 3455      	CPI  R21,69
00a3f9 f009      	BREQ _0x200004F
00a3fa c057      	RJMP _0x200004E
                 _0x200004F:
00a3fb e0e0      	LDI  R30,LOW(0)
00a3fc 2f4e      	MOV  R20,R30
00a3fd 83ee      	STD  Y+6,R30
00a3fe 01d9      	MOVW R26,R18
00a3ff 915c      	LD   R21,X
00a400 325b      	CPI  R21,43
00a401 f021      	BREQ _0x2000074
00a402 325d      	CPI  R21,45
00a403 f421      	BRNE _0x2000053
00a404 e0e1      	LDI  R30,LOW(1)
00a405 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
00a406 5f2f     +SUBI R18 , LOW ( - 1 )
00a407 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
00a408 01d9      	MOVW R26,R18
                +
00a409 5f2f     +SUBI R18 , LOW ( - 1 )
00a40a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a40b 91ec      	LD   R30,X
00a40c 2f5e      	MOV  R21,R30
00a40d 2fae      	MOV  R26,R30
00a40e 940e bfb2 	CALL _isdigit
00a410 30e0      	CPI  R30,0
00a411 f039      	BREQ _0x2000056
00a412 e0aa      	LDI  R26,LOW(10)
00a413 024a      	MULS R20,R26
00a414 01f0      	MOVW R30,R0
00a415 0fe5      	ADD  R30,R21
00a416 53e0      	SUBI R30,LOW(48)
00a417 2f4e      	MOV  R20,R30
00a418 cfef      	RJMP _0x2000054
                 _0x2000056:
00a419 3247      	CPI  R20,39
00a41a f068      	BRLO _0x2000057
00a41b 81ef      	LDD  R30,Y+7
00a41c 30e0      	CPI  R30,0
00a41d f029      	BREQ _0x2000058
                +
00a41e efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00a41f efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
00a420 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
00a421 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
00a422 c03a      	RJMP _0x20E002A
                 _0x2000058:
                +
00a423 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
00a424 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
00a425 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
00a426 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
00a427 c035      	RJMP _0x20E002A
                 _0x2000057:
00a428 e250      	LDI  R21,LOW(32)
00a429 940e d846 	CALL SUBOPT_0x377
00a42b 940e c64f 	CALL SUBOPT_0xEA
                 _0x2000059:
00a42d 3050      	CPI  R21,0
00a42e f079      	BREQ _0x200005B
00a42f 940e c5de 	CALL SUBOPT_0xD9
00a431 940e c088 	CALL SUBOPT_0xB
00a433 940e d938 	CALL SUBOPT_0x392
00a435 2fe4      	MOV  R30,R20
00a436 23e5      	AND  R30,R21
00a437 f021      	BREQ _0x200005C
00a438 940e d935 	CALL SUBOPT_0x391
00a43a 940e c64f 	CALL SUBOPT_0xEA
                 _0x200005C:
00a43c 9556      	LSR  R21
00a43d cfef      	RJMP _0x2000059
                 _0x200005B:
00a43e 81ee      	LDD  R30,Y+6
00a43f 30e0      	CPI  R30,0
00a440 f039      	BREQ _0x200005D
00a441 940e c5de 	CALL SUBOPT_0xD9
00a443 940e c5d9 	CALL SUBOPT_0xD8
00a445 940e de4a 	CALL __DIVF21
00a447 c006      	RJMP _0x2000075
                 _0x200005D:
00a448 940e c5de 	CALL SUBOPT_0xD9
00a44a 940e c5d9 	CALL SUBOPT_0xD8
00a44c 940e ddfc 	CALL __MULF12
                 _0x2000075:
                +
00a44e 87e8     +STD Y + 8 , R30
00a44f 87f9     +STD Y + 8 + 1 , R31
00a450 876a     +STD Y + 8 + 2 , R22
00a451 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
00a452 81ef      	LDD  R30,Y+7
00a453 30e0      	CPI  R30,0
00a454 f031      	BREQ _0x200005F
00a455 940e c25f 	CALL SUBOPT_0x4F
00a457 940e dd06 	CALL __ANEGF1
00a459 940e d79d 	CALL SUBOPT_0x35B
                 _0x200005F:
00a45b 940e c25f 	CALL SUBOPT_0x4F
                 _0x20E002A:
00a45d 940e e0d7 	CALL __LOADLOCR6
00a45f 9662      	ADIW R28,18
00a460 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
00a461 940e c439 	CALL SUBOPT_0x94
00a463 940e df38 	CALL __CWD1
00a465 940e d93c 	CALL SUBOPT_0x393
00a467 c0d7      	RJMP _0x20E0027
                 _rand:
00a468 91e0 1aa9 	LDS  R30,__seed_G100
00a46a 91f0 1aaa 	LDS  R31,__seed_G100+1
00a46c 9160 1aab 	LDS  R22,__seed_G100+2
00a46e 9170 1aac 	LDS  R23,__seed_G100+3
                +
00a470 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00a471 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
00a472 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
00a473 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
00a474 940e df59 	CALL __MULD12U
                +
00a476 59ee     +SUBI R30 , LOW ( - 30562 )
00a477 48f8     +SBCI R31 , HIGH ( - 30562 )
00a478 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
00a479 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
00a47a 940e d93c 	CALL SUBOPT_0x393
00a47c 01fb      	movw r30,r22
00a47d 77ff      	andi r31,0x7F
00a47e 9508      	RET
                 _allocate_block_G100:
00a47f 940e d69e 	CALL SUBOPT_0x33F
                +
00a481 e80a     +LDI R16 , LOW ( 7562 )
00a482 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
00a483 01d8      	MOVW R26,R16
00a484 940e c737 	CALL SUBOPT_0x113
                 _0x2000061:
00a486 2e00      	MOV  R0,R16
00a487 2a01      	OR   R0,R17
00a488 f199      	BREQ _0x2000063
00a489 01d8      	MOVW R26,R16
00a48a 940e e027 	CALL __GETW1P
00a48c 0fe0      	ADD  R30,R16
00a48d 1ff1      	ADC  R31,R17
00a48e 9634      	ADIW R30,4
00a48f 01af      	MOVW R20,R30
00a490 9612      	ADIW R26,2
00a491 940e e027 	CALL __GETW1P
00a493 019f      	MOVW R18,R30
00a494 9730      	SBIW R30,0
00a495 f019      	BREQ _0x2000064
                +
00a496 832e     +STD Y + 6 , R18
00a497 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
00a498 c004      	RJMP _0x2000065
                 _0x2000064:
00a499 e0e0      	LDI  R30,LOW(8704)
00a49a e2f2      	LDI  R31,HIGH(8704)
00a49b 83ee      	STD  Y+6,R30
00a49c 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00a49d 81ae      	LDD  R26,Y+6
00a49e 81bf      	LDD  R27,Y+6+1
00a49f 1ba4      	SUB  R26,R20
00a4a0 0bb5      	SBC  R27,R21
00a4a1 85e8      	LDD  R30,Y+8
00a4a2 85f9      	LDD  R31,Y+8+1
00a4a3 9634      	ADIW R30,4
00a4a4 17ae      	CP   R26,R30
00a4a5 07bf      	CPC  R27,R31
00a4a6 f098      	BRLO _0x2000066
00a4a7 01fa      	MOVW R30,R20
                +
00a4a8 01d8     +MOVW R26 , R16
00a4a9 9612     +ADIW R26 , 2
00a4aa 93ed     +ST X + , R30
00a4ab 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00a4ac 01f9      	MOVW R30,R18
                +
00a4ad 01da     +MOVW R26 , R20
00a4ae 9612     +ADIW R26 , 2
00a4af 93ed     +ST X + , R30
00a4b0 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
00a4b1 85e8      	LDD  R30,Y+8
00a4b2 85f9      	LDD  R31,Y+8+1
00a4b3 01da      	MOVW R26,R20
00a4b4 93ed      	ST   X+,R30
00a4b5 93fc      	ST   X,R31
                +
00a4b6 5f4c     +SUBI R20 , LOW ( - 4 )
00a4b7 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
00a4b8 01fa      	MOVW R30,R20
00a4b9 c004      	RJMP _0x20E0029
                 _0x2000066:
00a4ba 0189      	MOVW R16,R18
00a4bb cfca      	RJMP _0x2000061
                 _0x2000063:
00a4bc e0e0      	LDI  R30,LOW(0)
00a4bd e0f0      	LDI  R31,HIGH(0)
                 _0x20E0029:
00a4be 940e e0d7 	CALL __LOADLOCR6
00a4c0 962a      	ADIW R28,10
00a4c1 9508      	RET
                 _find_prev_block_G100:
00a4c2 940e c3a7 	CALL SUBOPT_0x7F
                +
00a4c4 e80a     +LDI R16 , LOW ( 7562 )
00a4c5 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
00a4c6 2e00      	MOV  R0,R16
00a4c7 2a01      	OR   R0,R17
00a4c8 f079      	BREQ _0x2000069
00a4c9 01d8      	MOVW R26,R16
00a4ca 9612      	ADIW R26,2
00a4cb 940e e027 	CALL __GETW1P
00a4cd 019f      	MOVW R18,R30
00a4ce 01df      	MOVW R26,R30
00a4cf 81ec      	LDD  R30,Y+4
00a4d0 81fd      	LDD  R31,Y+4+1
00a4d1 17ea      	CP   R30,R26
00a4d2 07fb      	CPC  R31,R27
00a4d3 f411      	BRNE _0x200006A
00a4d4 01f8      	MOVW R30,R16
00a4d5 c004      	RJMP _0x20E0028
                 _0x200006A:
00a4d6 0189      	MOVW R16,R18
00a4d7 cfee      	RJMP _0x2000067
                 _0x2000069:
00a4d8 e0e0      	LDI  R30,LOW(0)
00a4d9 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00a4da 940e e0d9 	CALL __LOADLOCR4
00a4dc 9626      	ADIW R28,6
00a4dd 9508      	RET
                 _realloc:
00a4de 940e d69e 	CALL SUBOPT_0x33F
00a4e0 85ea      	LDD  R30,Y+10
00a4e1 85fb      	LDD  R31,Y+10+1
00a4e2 9730      	SBIW R30,0
00a4e3 f1a9      	BREQ _0x200006B
00a4e4 9734      	SBIW R30,4
00a4e5 018f      	MOVW R16,R30
00a4e6 01d8      	MOVW R26,R16
00a4e7 dfda      	RCALL _find_prev_block_G100
00a4e8 019f      	MOVW R18,R30
00a4e9 9730      	SBIW R30,0
00a4ea f171      	BREQ _0x200006C
00a4eb 01d8      	MOVW R26,R16
00a4ec 9612      	ADIW R26,2
00a4ed 940e e027 	CALL __GETW1P
                +
00a4ef 01d9     +MOVW R26 , R18
00a4f0 9612     +ADIW R26 , 2
00a4f1 93ed     +ST X + , R30
00a4f2 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
00a4f3 85e8      	LDD  R30,Y+8
00a4f4 85f9      	LDD  R31,Y+8+1
00a4f5 9730      	SBIW R30,0
00a4f6 f111      	BREQ _0x200006D
00a4f7 85a8      	LDD  R26,Y+8
00a4f8 85b9      	LDD  R27,Y+8+1
00a4f9 df85      	RCALL _allocate_block_G100
00a4fa 01af      	MOVW R20,R30
00a4fb 9730      	SBIW R30,0
00a4fc f0b9      	BREQ _0x200006E
00a4fd 01d8      	MOVW R26,R16
00a4fe 940e d945 	CALL SUBOPT_0x394
00a500 01df      	MOVW R26,R30
00a501 85e8      	LDD  R30,Y+8
00a502 85f9      	LDD  R31,Y+8+1
00a503 17ae      	CP   R26,R30
00a504 07bf      	CPC  R27,R31
00a505 f420      	BRSH _0x200006F
00a506 81ee      	LDD  R30,Y+6
00a507 81ff      	LDD  R31,Y+6+1
00a508 87e8      	STD  Y+8,R30
00a509 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00a50a 935a      	ST   -Y,R21
00a50b 934a      	ST   -Y,R20
00a50c 940e cad1 	CALL SUBOPT_0x1AD
00a50e 85ac      	LDD  R26,Y+12
00a50f 85bd      	LDD  R27,Y+12+1
00a510 940e a580 	CALL _memmove
00a512 940c abb8 	JMP  _0x20E001F
                 _0x200006E:
00a514 01f8      	MOVW R30,R16
                +
00a515 01d9     +MOVW R26 , R18
00a516 9612     +ADIW R26 , 2
00a517 93ed     +ST X + , R30
00a518 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
00a519 e0e0      	LDI  R30,LOW(0)
00a51a e0f0      	LDI  R31,HIGH(0)
00a51b 940c abb9 	JMP  _0x20E001E
                 _malloc:
00a51d 940e c3b3 	CALL SUBOPT_0x81
                +
00a51f e000     +LDI R16 , LOW ( 0 )
00a520 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a521 81ea      	LDD  R30,Y+2
00a522 81fb      	LDD  R31,Y+2+1
00a523 9730      	SBIW R30,0
00a524 f071      	BREQ _0x2000070
00a525 81aa      	LDD  R26,Y+2
00a526 81bb      	LDD  R27,Y+2+1
00a527 df57      	RCALL _allocate_block_G100
00a528 018f      	MOVW R16,R30
00a529 9730      	SBIW R30,0
00a52a f041      	BREQ _0x2000071
00a52b 931a      	ST   -Y,R17
00a52c 930a      	ST   -Y,R16
00a52d e0e0      	LDI  R30,LOW(0)
00a52e 93ea      	ST   -Y,R30
00a52f 81ad      	LDD  R26,Y+5
00a530 81be      	LDD  R27,Y+5+1
00a531 940e a59f 	CALL _memset
                 _0x2000071:
                 _0x2000070:
00a533 01f8      	MOVW R30,R16
00a534 8119      	LDD  R17,Y+1
00a535 8108      	LDD  R16,Y+0
00a536 940c a5e4 	JMP  _0x20E0026
                 _free:
00a538 940e c439 	CALL SUBOPT_0x94
00a53a 93fa      	ST   -Y,R31
00a53b 93ea      	ST   -Y,R30
00a53c 940e c68a 	CALL SUBOPT_0xF5
00a53e df9f      	RCALL _realloc
                 _0x20E0027:
00a53f 9622      	ADIW R28,2
00a540 9508      	RET
                 
                 	.CSEG
                 _memcmp:
00a541 93ba      	ST   -Y,R27
00a542 93aa      	ST   -Y,R26
00a543 2766          clr  r22
00a544 2777          clr  r23
00a545 9189          ld   r24,y+
00a546 9199          ld   r25,y+
00a547 91e9          ld   r30,y+
00a548 91f9          ld   r31,y+
00a549 91a9          ld   r26,y+
00a54a 91b9          ld   r27,y+
                 memcmp0:
00a54b 9600          adiw r24,0
00a54c f029          breq memcmp1
00a54d 9701          sbiw r24,1
00a54e 916d          ld   r22,x+
00a54f 9171          ld   r23,z+
00a550 1767          cp   r22,r23
00a551 f3c9          breq memcmp0
                 memcmp1:
00a552 1b67          sub  r22,r23
00a553 f410          brcc memcmp2
00a554 efef          ldi  r30,-1
00a555 9508          ret
                 memcmp2:
00a556 e0e0          ldi  r30,0
00a557 f009          breq memcmp3
00a558 95e3          inc  r30
                 memcmp3:
00a559 9508          ret
                 _memcpy:
00a55a 93ba      	ST   -Y,R27
00a55b 93aa      	ST   -Y,R26
00a55c 8199          ldd  r25,y+1
00a55d 8188          ld   r24,y
00a55e 9600          adiw r24,0
00a55f f041          breq memcpy1
00a560 81bd          ldd  r27,y+5
00a561 81ac          ldd  r26,y+4
00a562 81fb          ldd  r31,y+3
00a563 81ea          ldd  r30,y+2
                 memcpy0:
00a564 9161          ld   r22,z+
00a565 936d          st   x+,r22
00a566 9701          sbiw r24,1
00a567 f7e1          brne memcpy0
                 memcpy1:
00a568 81fd          ldd  r31,y+5
00a569 81ec          ldd  r30,y+4
00a56a 940c abda 	JMP  _0x20E001D
                 _memcpyf:
00a56c 93ba      	ST   -Y,R27
00a56d 93aa      	ST   -Y,R26
00a56e 8199          ldd  r25,y+1
00a56f 8188          ld   r24,y
00a570 9600          adiw r24,0
00a571 f051          breq memcpyf1
00a572 81bf          ldd  r27,y+7
00a573 81ae          ldd  r26,y+6
00a574 816c          ldd  r22,y+4
00a575 81fb          ldd  r31,y+3
00a576 81ea          ldd  r30,y+2
00a577 bf6b          out  rampz,r22
                 memcpyf0:
00a578 9007          elpm r0,z+
00a579 920d          st   x+,r0
00a57a 9701          sbiw r24,1
00a57b f7e1          brne memcpyf0
                 memcpyf1:
00a57c 81ff          ldd  r31,y+7
00a57d 81ee          ldd  r30,y+6
00a57e 940c ab95 	JMP  _0x20E0020
                 _memmove:
00a580 93ba      	ST   -Y,R27
00a581 93aa      	ST   -Y,R26
00a582 8199          ldd  r25,y+1
00a583 8188          ld   r24,y
00a584 9600          adiw r24,0
00a585 f0a9          breq memmove3
00a586 81bd          ldd  r27,y+5
00a587 81ac          ldd  r26,y+4
00a588 81fb          ldd  r31,y+3
00a589 81ea          ldd  r30,y+2
00a58a 17ea          cp   r30,r26
00a58b 07fb          cpc  r31,r27
00a58c f071          breq memmove3
00a58d f02c          brlt memmove1
                 memmove0:
00a58e 9161          ld   r22,z+
00a58f 936d          st   x+,r22
00a590 9701          sbiw r24,1
00a591 f7e1          brne memmove0
00a592 c008          rjmp memmove3
                 memmove1:
00a593 0fa8          add  r26,r24
00a594 1fb9          adc  r27,r25
00a595 0fe8          add  r30,r24
00a596 1ff9          adc  r31,r25
                 memmove2:
00a597 9162          ld   r22,-z
00a598 936e          st   -x,r22
00a599 9701          sbiw r24,1
00a59a f7e1          brne memmove2
                 memmove3:
00a59b 81fd          ldd  r31,y+5
00a59c 81ec          ldd  r30,y+4
00a59d 940c abda 	JMP  _0x20E001D
                 _memset:
00a59f 93ba      	ST   -Y,R27
00a5a0 93aa      	ST   -Y,R26
00a5a1 81b9          ldd  r27,y+1
00a5a2 81a8          ld   r26,y
00a5a3 9610          adiw r26,0
00a5a4 f031          breq memset1
00a5a5 81fc          ldd  r31,y+4
00a5a6 81eb          ldd  r30,y+3
00a5a7 816a          ldd  r22,y+2
                 memset0:
00a5a8 9361          st   z+,r22
00a5a9 9711          sbiw r26,1
00a5aa f7e9          brne memset0
                 memset1:
00a5ab 81eb          ldd  r30,y+3
00a5ac 81fc          ldd  r31,y+4
00a5ad 9625      	ADIW R28,5
00a5ae 9508      	RET
                 _strcat:
00a5af 93ba      	ST   -Y,R27
00a5b0 93aa      	ST   -Y,R26
00a5b1 91e9          ld   r30,y+
00a5b2 91f9          ld   r31,y+
00a5b3 91a9          ld   r26,y+
00a5b4 91b9          ld   r27,y+
00a5b5 01cd          movw r24,r26
                 strcat0:
00a5b6 916d          ld   r22,x+
00a5b7 2366          tst  r22
00a5b8 f7e9          brne strcat0
00a5b9 9711          sbiw r26,1
                 strcat1:
00a5ba 9161          ld   r22,z+
00a5bb 936d          st   x+,r22
00a5bc 2366          tst  r22
00a5bd f7e1          brne strcat1
00a5be 01fc          movw r30,r24
00a5bf 9508          ret
                 _strcpyf:
00a5c0 940e e060 	CALL __PUTPARD2
00a5c2 91e9          ld   r30,y+
00a5c3 91f9          ld   r31,y+
00a5c4 9169          ld   r22,y+
00a5c5 9179          ld   r23,y+
00a5c6 91a9          ld   r26,y+
00a5c7 91b9          ld   r27,y+
00a5c8 01cd          movw r24,r26
00a5c9 bf6b          out  rampz,r22
                 strcpyf0:
00a5ca 9007          elpm r0,z+
00a5cb 920d          st   x+,r0
00a5cc 2000          tst  r0
00a5cd f7e1          brne strcpyf0
00a5ce 01fc          movw r30,r24
00a5cf 9508          ret
                 _strcspn:
00a5d0 93ba      	ST   -Y,R27
00a5d1 93aa      	ST   -Y,R26
00a5d2 81bb          ldd  r27,y+3
00a5d3 81aa          ldd  r26,y+2
00a5d4 2788          clr  r24
00a5d5 2799          clr  r25
                 strcspn0:
00a5d6 916d          ld   r22,x+
00a5d7 2366          tst  r22
00a5d8 f051          breq strcspn2
00a5d9 81f9          ldd  r31,y+1
00a5da 81e8          ld   r30,y
                 strcspn1:
00a5db 9171          ld   r23,z+
00a5dc 2377          tst  r23
00a5dd f019          breq strcspn3
00a5de 1767          cp   r22,r23
00a5df f019          breq strcspn2
00a5e0 cffa          rjmp strcspn1
                 strcspn3:
00a5e1 9601          adiw r24,1
00a5e2 cff3          rjmp strcspn0
                 strcspn2:
00a5e3 01fc          movw r30,r24
                 _0x20E0026:
00a5e4 9624      	ADIW R28,4
00a5e5 9508      	RET
                 _strlen:
00a5e6 93ba      	ST   -Y,R27
00a5e7 93aa      	ST   -Y,R26
00a5e8 91a9          ld   r26,y+
00a5e9 91b9          ld   r27,y+
00a5ea 27ee          clr  r30
00a5eb 27ff          clr  r31
                 strlen0:
00a5ec 916d          ld   r22,x+
00a5ed 2366          tst  r22
00a5ee f011          breq strlen1
00a5ef 9631          adiw r30,1
00a5f0 cffb          rjmp strlen0
                 strlen1:
00a5f1 9508          ret
                 _strlenf:
00a5f2 940e e060 	CALL __PUTPARD2
00a5f4 27aa          clr  r26
00a5f5 27bb          clr  r27
00a5f6 91e9          ld   r30,y+
00a5f7 91f9          ld   r31,y+
00a5f8 9169          ld   r22,y+
00a5f9 9179          ld   r23,y+
00a5fa bf6b          out  rampz,r22
                 strlenf0:
00a5fb 9007          elpm r0,z+
00a5fc 2000          tst  r0
00a5fd f011          breq strlenf1
00a5fe 9611          adiw r26,1
00a5ff cffb          rjmp strlenf0
                 strlenf1:
00a600 01fd          movw r30,r26
00a601 9508          ret
                 _strncmpf:
00a602 93aa      	ST   -Y,R26
00a603 9179          ld   r23,y+
00a604 91e9          ld   r30,y+
00a605 91f9          ld   r31,y+
00a606 9169          ld   r22,y+
00a607 9009          ld   r0,y+
00a608 91a9          ld   r26,y+
00a609 91b9          ld   r27,y+
00a60a 2400          clr  r0
00a60b 2411          clr  r1
00a60c bf6b          out  rampz,r22
                 strncmpf0:
00a60d 2377          tst  r23
00a60e f049          breq strncmpf1
00a60f 957a          dec  r23
00a610 901d          ld   r1,x+
00a611 9007          elpm r0,z+
00a612 1401          cp   r0,r1
00a613 f421          brne strncmpf1
00a614 2000          tst  r0
00a615 f7b9          brne strncmpf0
                 strncmpf3:
00a616 27ee          clr  r30
00a617 c005          rjmp strncmpf2
                 strncmpf1:
00a618 1810          sub  r1,r0
00a619 f3e1          breq strncmpf3
00a61a e0e1          ldi  r30,1
00a61b f408          brcc strncmpf2
00a61c 50e2          subi r30,2
                 strncmpf2:
00a61d 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
00a61e 931a      	ST   -Y,R17
00a61f e3e2      	LDI  R30,LOW(50)
00a620 93e0 1aaf 	STS  _timer2_G102,R30
00a622 efef      	LDI  R30,LOW(255)
00a623 bdee      	OUT  0x2E,R30
                 _0x2040004:
00a624 b5ed      	IN   R30,0x2D
00a625 ffe7      	SBRS R30,7
00a626 cffd      	RJMP _0x2040004
                 _0x2040008:
00a627 efef      	LDI  R30,LOW(255)
00a628 bdee      	OUT  0x2E,R30
                 _0x204000A:
00a629 b5ed      	IN   R30,0x2D
00a62a ffe7      	SBRS R30,7
00a62b cffd      	RJMP _0x204000A
00a62c b51e      	IN   R17,46
00a62d 3f1f      	CPI  R17,255
00a62e f021      	BREQ _0x204000D
00a62f 91e0 1aaf 	LDS  R30,_timer2_G102
00a631 30e0      	CPI  R30,0
00a632 f409      	BRNE _0x204000E
                 _0x204000D:
00a633 c001      	RJMP _0x2040009
                 _0x204000E:
00a634 cff2      	RJMP _0x2040008
                 _0x2040009:
00a635 2fe1      	MOV  R30,R17
00a636 9119      	LD   R17,Y+
00a637 9508      	RET
                 _release_spi_G102:
00a638 9a28      	SBI  0x5,0
00a639 efef      	LDI  R30,LOW(255)
00a63a bdee      	OUT  0x2E,R30
                 _0x204000F:
00a63b b5ed      	IN   R30,0x2D
00a63c ffe7      	SBRS R30,7
00a63d cffd      	RJMP _0x204000F
00a63e 9508      	RET
                 _rx_datablock_G102:
00a63f 93ba      	ST   -Y,R27
00a640 93aa      	ST   -Y,R26
00a641 940e e0d2 	CALL __SAVELOCR4
00a643 e0ea      	LDI  R30,LOW(10)
00a644 93e0 1aae 	STS  _timer1_G102,R30
                 _0x2040013:
00a646 efef      	LDI  R30,LOW(255)
00a647 bdee      	OUT  0x2E,R30
                 _0x2040015:
00a648 b5ed      	IN   R30,0x2D
00a649 ffe7      	SBRS R30,7
00a64a cffd      	RJMP _0x2040015
00a64b b51e      	IN   R17,46
00a64c 3f1f      	CPI  R17,255
00a64d f421      	BRNE _0x2040018
00a64e 91e0 1aae 	LDS  R30,_timer1_G102
00a650 30e0      	CPI  R30,0
00a651 f409      	BRNE _0x2040019
                 _0x2040018:
00a652 c001      	RJMP _0x2040014
                 _0x2040019:
00a653 cff2      	RJMP _0x2040013
                 _0x2040014:
00a654 3f1e      	CPI  R17,254
00a655 f021      	BREQ _0x204001A
00a656 e0e0      	LDI  R30,LOW(0)
00a657 940e e0d9 	CALL __LOADLOCR4
00a659 c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00a65a 812e     +LDD R18 , Y + 6
00a65b 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00a65c efef      	LDI  R30,LOW(255)
00a65d bdee      	OUT  0x2E,R30
                 _0x204001E:
00a65e b5ed      	IN   R30,0x2D
00a65f ffe7      	SBRS R30,7
00a660 cffd      	RJMP _0x204001E
00a661 933f      	PUSH R19
00a662 932f      	PUSH R18
                +
00a663 5f2f     +SUBI R18 , LOW ( - 1 )
00a664 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a665 b5ee      	IN   R30,0x2E
00a666 91af      	POP  R26
00a667 91bf      	POP  R27
00a668 93ec      	ST   X,R30
00a669 efef      	LDI  R30,LOW(255)
00a66a bdee      	OUT  0x2E,R30
                 _0x2040021:
00a66b b5ed      	IN   R30,0x2D
00a66c ffe7      	SBRS R30,7
00a66d cffd      	RJMP _0x2040021
00a66e 933f      	PUSH R19
00a66f 932f      	PUSH R18
                +
00a670 5f2f     +SUBI R18 , LOW ( - 1 )
00a671 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a672 b5ee      	IN   R30,0x2E
00a673 91af      	POP  R26
00a674 91bf      	POP  R27
00a675 93ec      	ST   X,R30
00a676 efef      	LDI  R30,LOW(255)
00a677 bdee      	OUT  0x2E,R30
                 _0x2040024:
00a678 b5ed      	IN   R30,0x2D
00a679 ffe7      	SBRS R30,7
00a67a cffd      	RJMP _0x2040024
00a67b 933f      	PUSH R19
00a67c 932f      	PUSH R18
                +
00a67d 5f2f     +SUBI R18 , LOW ( - 1 )
00a67e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a67f b5ee      	IN   R30,0x2E
00a680 91af      	POP  R26
00a681 91bf      	POP  R27
00a682 93ec      	ST   X,R30
00a683 efef      	LDI  R30,LOW(255)
00a684 bdee      	OUT  0x2E,R30
                 _0x2040027:
00a685 b5ed      	IN   R30,0x2D
00a686 ffe7      	SBRS R30,7
00a687 cffd      	RJMP _0x2040027
00a688 933f      	PUSH R19
00a689 932f      	PUSH R18
                +
00a68a 5f2f     +SUBI R18 , LOW ( - 1 )
00a68b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a68c b5ee      	IN   R30,0x2E
00a68d 91af      	POP  R26
00a68e 91bf      	POP  R27
00a68f 93ec      	ST   X,R30
00a690 81ec      	LDD  R30,Y+4
00a691 81fd      	LDD  R31,Y+4+1
00a692 9734      	SBIW R30,4
00a693 83ec      	STD  Y+4,R30
00a694 83fd      	STD  Y+4+1,R31
00a695 f631      	BRNE _0x204001C
00a696 efef      	LDI  R30,LOW(255)
00a697 bdee      	OUT  0x2E,R30
                 _0x204002A:
00a698 b5ed      	IN   R30,0x2D
00a699 ffe7      	SBRS R30,7
00a69a cffd      	RJMP _0x204002A
00a69b efef      	LDI  R30,LOW(255)
00a69c bdee      	OUT  0x2E,R30
                 _0x204002D:
00a69d b5ed      	IN   R30,0x2D
00a69e ffe7      	SBRS R30,7
00a69f cffd      	RJMP _0x204002D
00a6a0 e0e1      	LDI  R30,LOW(1)
00a6a1 940e e0d9 	CALL __LOADLOCR4
00a6a3 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
00a6a4 93aa      	ST   -Y,R26
00a6a5 940e e0d2 	CALL __SAVELOCR4
00a6a7 df76      	RCALL _wait_ready_G102
00a6a8 3fef      	CPI  R30,LOW(0xFF)
00a6a9 f021      	BREQ _0x2040030
00a6aa e0e0      	LDI  R30,LOW(0)
00a6ab 940e e0d9 	CALL __LOADLOCR4
00a6ad c4b3      	RJMP _0x20E0021
                 _0x2040030:
00a6ae 81ec      	LDD  R30,Y+4
00a6af bdee      	OUT  0x2E,R30
                 _0x2040031:
00a6b0 b5ed      	IN   R30,0x2D
00a6b1 ffe7      	SBRS R30,7
00a6b2 cffd      	RJMP _0x2040031
00a6b3 81ac      	LDD  R26,Y+4
00a6b4 3fad      	CPI  R26,LOW(0xFD)
00a6b5 f171      	BREQ _0x2040034
00a6b6 e000      	LDI  R16,LOW(0)
                +
00a6b7 812d     +LDD R18 , Y + 5
00a6b8 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
00a6b9 01d9      	MOVW R26,R18
                +
00a6ba 5f2f     +SUBI R18 , LOW ( - 1 )
00a6bb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a6bc 91ec      	LD   R30,X
00a6bd bdee      	OUT  0x2E,R30
                 _0x2040038:
00a6be b5ed      	IN   R30,0x2D
00a6bf ffe7      	SBRS R30,7
00a6c0 cffd      	RJMP _0x2040038
00a6c1 01d9      	MOVW R26,R18
                +
00a6c2 5f2f     +SUBI R18 , LOW ( - 1 )
00a6c3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a6c4 91ec      	LD   R30,X
00a6c5 bdee      	OUT  0x2E,R30
                 _0x204003B:
00a6c6 b5ed      	IN   R30,0x2D
00a6c7 ffe7      	SBRS R30,7
00a6c8 cffd      	RJMP _0x204003B
00a6c9 5001      	SUBI R16,LOW(1)
00a6ca 3000      	CPI  R16,0
00a6cb f769      	BRNE _0x2040036
00a6cc efef      	LDI  R30,LOW(255)
00a6cd bdee      	OUT  0x2E,R30
                 _0x204003E:
00a6ce b5ed      	IN   R30,0x2D
00a6cf ffe7      	SBRS R30,7
00a6d0 cffd      	RJMP _0x204003E
00a6d1 efef      	LDI  R30,LOW(255)
00a6d2 bdee      	OUT  0x2E,R30
                 _0x2040041:
00a6d3 b5ed      	IN   R30,0x2D
00a6d4 ffe7      	SBRS R30,7
00a6d5 cffd      	RJMP _0x2040041
00a6d6 efef      	LDI  R30,LOW(255)
00a6d7 bdee      	OUT  0x2E,R30
                 _0x2040044:
00a6d8 b5ed      	IN   R30,0x2D
00a6d9 ffe7      	SBRS R30,7
00a6da cffd      	RJMP _0x2040044
00a6db b51e      	IN   R17,46
00a6dc 2fe1      	MOV  R30,R17
00a6dd 71ef      	ANDI R30,LOW(0x1F)
00a6de 30e5      	CPI  R30,LOW(0x5)
00a6df f021      	BREQ _0x2040047
00a6e0 e0e0      	LDI  R30,LOW(0)
00a6e1 940e e0d9 	CALL __LOADLOCR4
00a6e3 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
00a6e4 e0e1      	LDI  R30,LOW(1)
00a6e5 940e e0d9 	CALL __LOADLOCR4
00a6e7 c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00a6e8 940e e060 	CALL __PUTPARD2
00a6ea 931a      	ST   -Y,R17
00a6eb 930a      	ST   -Y,R16
00a6ec 81ee      	LDD  R30,Y+6
00a6ed 78e0      	ANDI R30,LOW(0x80)
00a6ee f089      	BREQ _0x2040048
00a6ef 81ee      	LDD  R30,Y+6
00a6f0 77ef      	ANDI R30,0x7F
00a6f1 83ee      	STD  Y+6,R30
00a6f2 e7e7      	LDI  R30,LOW(119)
00a6f3 93ea      	ST   -Y,R30
                +
00a6f4 e0a0     +LDI R26 , LOW ( 0x0 )
00a6f5 e0b0     +LDI R27 , HIGH ( 0x0 )
00a6f6 e080     +LDI R24 , BYTE3 ( 0x0 )
00a6f7 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a6f8 dfef      	RCALL _send_cmd_G102
00a6f9 2f0e      	MOV  R16,R30
00a6fa 3002      	CPI  R16,2
00a6fb f020      	BRLO _0x2040049
00a6fc 2fe0      	MOV  R30,R16
00a6fd 8119      	LDD  R17,Y+1
00a6fe 8108      	LDD  R16,Y+0
00a6ff c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
00a700 9a28      	SBI  0x5,0
00a701 9828      	CBI  0x5,0
00a702 df1b      	RCALL _wait_ready_G102
00a703 3fef      	CPI  R30,LOW(0xFF)
00a704 f021      	BREQ _0x204004A
00a705 efef      	LDI  R30,LOW(255)
00a706 8119      	LDD  R17,Y+1
00a707 8108      	LDD  R16,Y+0
00a708 c458      	RJMP _0x20E0021
                 _0x204004A:
00a709 81ee      	LDD  R30,Y+6
00a70a bdee      	OUT  0x2E,R30
                 _0x204004B:
00a70b b5ed      	IN   R30,0x2D
00a70c ffe7      	SBRS R30,7
00a70d cffd      	RJMP _0x204004B
00a70e 81ed      	LDD  R30,Y+5
00a70f bdee      	OUT  0x2E,R30
                 _0x204004E:
00a710 b5ed      	IN   R30,0x2D
00a711 ffe7      	SBRS R30,7
00a712 cffd      	RJMP _0x204004E
00a713 81ec      	LDD  R30,Y+4
00a714 bdee      	OUT  0x2E,R30
                 _0x2040051:
00a715 b5ed      	IN   R30,0x2D
00a716 ffe7      	SBRS R30,7
00a717 cffd      	RJMP _0x2040051
00a718 81eb      	LDD  R30,Y+3
00a719 bdee      	OUT  0x2E,R30
                 _0x2040054:
00a71a b5ed      	IN   R30,0x2D
00a71b ffe7      	SBRS R30,7
00a71c cffd      	RJMP _0x2040054
00a71d 81ea      	LDD  R30,Y+2
00a71e bdee      	OUT  0x2E,R30
                 _0x2040057:
00a71f b5ed      	IN   R30,0x2D
00a720 ffe7      	SBRS R30,7
00a721 cffd      	RJMP _0x2040057
00a722 e011      	LDI  R17,LOW(1)
00a723 81ae      	LDD  R26,Y+6
00a724 34a0      	CPI  R26,LOW(0x40)
00a725 f411      	BRNE _0x204005A
00a726 e915      	LDI  R17,LOW(149)
00a727 c004      	RJMP _0x204005B
                 _0x204005A:
00a728 81ae      	LDD  R26,Y+6
00a729 34a8      	CPI  R26,LOW(0x48)
00a72a f409      	BRNE _0x204005C
00a72b e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00a72c bd1e      	OUT  0x2E,R17
                 _0x204005D:
00a72d b5ed      	IN   R30,0x2D
00a72e ffe7      	SBRS R30,7
00a72f cffd      	RJMP _0x204005D
00a730 81ae      	LDD  R26,Y+6
00a731 34ac      	CPI  R26,LOW(0x4C)
00a732 f429      	BRNE _0x2040060
00a733 efef      	LDI  R30,LOW(255)
00a734 bdee      	OUT  0x2E,R30
                 _0x2040061:
00a735 b5ed      	IN   R30,0x2D
00a736 ffe7      	SBRS R30,7
00a737 cffd      	RJMP _0x2040061
                 _0x2040060:
00a738 ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00a739 efef      	LDI  R30,LOW(255)
00a73a bdee      	OUT  0x2E,R30
                 _0x2040067:
00a73b b5ed      	IN   R30,0x2D
00a73c ffe7      	SBRS R30,7
00a73d cffd      	RJMP _0x2040067
00a73e b50e      	IN   R16,46
00a73f ff07      	SBRS R16,7
00a740 c003      	RJMP _0x204006A
00a741 5011      	SUBI R17,LOW(1)
00a742 3010      	CPI  R17,0
00a743 f409      	BRNE _0x204006B
                 _0x204006A:
00a744 c001      	RJMP _0x2040066
                 _0x204006B:
00a745 cff3      	RJMP _0x2040065
                 _0x2040066:
00a746 2fe0      	MOV  R30,R16
00a747 8119      	LDD  R17,Y+1
00a748 8108      	LDD  R16,Y+0
00a749 c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00a74a 93ba      	ST   -Y,R27
00a74b 93aa      	ST   -Y,R26
00a74c 931a      	ST   -Y,R17
00a74d e014      	LDI  R17,4
                 _0x204006D:
00a74e efef      	LDI  R30,LOW(255)
00a74f bdee      	OUT  0x2E,R30
                 _0x204006F:
00a750 b5ed      	IN   R30,0x2D
00a751 ffe7      	SBRS R30,7
00a752 cffd      	RJMP _0x204006F
00a753 81a9      	LDD  R26,Y+1
00a754 81ba      	LDD  R27,Y+1+1
00a755 9611      	ADIW R26,1
00a756 83a9      	STD  Y+1,R26
00a757 83ba      	STD  Y+1+1,R27
00a758 9711      	SBIW R26,1
00a759 b5ee      	IN   R30,0x2E
00a75a 93ec      	ST   X,R30
00a75b 5011      	SUBI R17,LOW(1)
00a75c 3010      	CPI  R17,0
00a75d f781      	BRNE _0x204006D
00a75e c554      	RJMP _0x20E001B
                 _disk_initialize:
00a75f 93aa      	ST   -Y,R26
00a760 9724      	SBIW R28,4
00a761 940e e0d2 	CALL __SAVELOCR4
00a763 85e8      	LDD  R30,Y+8
00a764 30e0      	CPI  R30,0
00a765 f011      	BREQ _0x2040072
00a766 e0e1      	LDI  R30,LOW(1)
00a767 c0c4      	RJMP _0x20E0025
                 _0x2040072:
00a768 9808      	CBI  0x1,0
00a769 9809      	CBI  0x1,1
00a76a e0ea      	LDI  R30,LOW(10)
00a76b 93e0 1aae 	STS  _timer1_G102,R30
                 _0x2040073:
00a76d 91e0 1aae 	LDS  R30,_timer1_G102
00a76f 30e0      	CPI  R30,0
00a770 f7e1      	BRNE _0x2040073
00a771 91e0 1aad 	LDS  R30,_status_G102
00a773 70e2      	ANDI R30,LOW(0x2)
00a774 f009      	BREQ _0x2040076
00a775 c0b4      	RJMP _0x20E0024
                 _0x2040076:
00a776 9a20      	SBI  0x4,0
00a777 9a28      	SBI  0x5,0
00a778 b1e5      	IN   R30,0x5
00a779 7fe9      	ANDI R30,LOW(0xF9)
00a77a b9e5      	OUT  0x5,R30
00a77b 9a2b      	SBI  0x5,3
00a77c 9823      	CBI  0x4,3
00a77d b1e4      	IN   R30,0x4
00a77e 60e7      	ORI  R30,LOW(0x7)
00a77f b9e4      	OUT  0x4,R30
00a780 e5e2      	LDI  R30,LOW(82)
00a781 bdec      	OUT  0x2C,R30
00a782 e0e0      	LDI  R30,LOW(0)
00a783 bded      	OUT  0x2D,R30
00a784 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
00a785 e01a      	LDI  R17,LOW(10)
                 _0x204007B:
00a786 efef      	LDI  R30,LOW(255)
00a787 bdee      	OUT  0x2E,R30
                 _0x204007D:
00a788 b5ed      	IN   R30,0x2D
00a789 ffe7      	SBRS R30,7
00a78a cffd      	RJMP _0x204007D
00a78b 5011      	SUBI R17,LOW(1)
00a78c 3010      	CPI  R17,0
00a78d f7c1      	BRNE _0x204007B
00a78e e4e0      	LDI  R30,LOW(64)
00a78f 93ea      	ST   -Y,R30
                +
00a790 e0a0     +LDI R26 , LOW ( 0x0 )
00a791 e0b0     +LDI R27 , HIGH ( 0x0 )
00a792 e080     +LDI R24 , BYTE3 ( 0x0 )
00a793 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a794 df53      	RCALL _send_cmd_G102
00a795 2f0e      	MOV  R16,R30
00a796 5031      	SUBI R19,LOW(1)
00a797 3001      	CPI  R16,1
00a798 f011      	BREQ _0x2040080
00a799 3030      	CPI  R19,0
00a79a f409      	BRNE _0x2040081
                 _0x2040080:
00a79b c001      	RJMP _0x2040079
                 _0x2040081:
00a79c cfe8      	RJMP _0x2040078
                 _0x2040079:
00a79d e030      	LDI  R19,LOW(0)
00a79e 3001      	CPI  R16,1
00a79f f011      	BREQ PC+3
00a7a0 940c a80a 	JMP _0x2040082
00a7a2 e6e4      	LDI  R30,LOW(100)
00a7a3 93e0 1aae 	STS  _timer1_G102,R30
00a7a5 e4e8      	LDI  R30,LOW(72)
00a7a6 93ea      	ST   -Y,R30
                +
00a7a7 eaaa     +LDI R26 , LOW ( 0x1AA )
00a7a8 e0b1     +LDI R27 , HIGH ( 0x1AA )
00a7a9 e080     +LDI R24 , BYTE3 ( 0x1AA )
00a7aa e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00a7ab df3c      	RCALL _send_cmd_G102
00a7ac 30e1      	CPI  R30,LOW(0x1)
00a7ad f591      	BRNE _0x2040083
00a7ae 01de      	MOVW R26,R28
00a7af 9614      	ADIW R26,4
00a7b0 df99      	RCALL _rx_spi4_G102
00a7b1 81ae      	LDD  R26,Y+6
00a7b2 30a1      	CPI  R26,LOW(0x1)
00a7b3 f419      	BRNE _0x2040085
00a7b4 81af      	LDD  R26,Y+7
00a7b5 3aaa      	CPI  R26,LOW(0xAA)
00a7b6 f009      	BREQ _0x2040086
                 _0x2040085:
00a7b7 c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
00a7b8 91e0 1aae 	LDS  R30,_timer1_G102
00a7ba 30e0      	CPI  R30,0
00a7bb f049      	BREQ _0x204008A
00a7bc eee9      	LDI  R30,LOW(233)
00a7bd 93ea      	ST   -Y,R30
                +
00a7be e0a0     +LDI R26 , LOW ( 0x40000000 )
00a7bf e0b0     +LDI R27 , HIGH ( 0x40000000 )
00a7c0 e080     +LDI R24 , BYTE3 ( 0x40000000 )
00a7c1 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00a7c2 df25      	RCALL _send_cmd_G102
00a7c3 30e0      	CPI  R30,0
00a7c4 f409      	BRNE _0x204008B
                 _0x204008A:
00a7c5 c001      	RJMP _0x2040089
                 _0x204008B:
00a7c6 cff1      	RJMP _0x2040087
                 _0x2040089:
00a7c7 91e0 1aae 	LDS  R30,_timer1_G102
00a7c9 30e0      	CPI  R30,0
00a7ca f049      	BREQ _0x204008D
00a7cb e7ea      	LDI  R30,LOW(122)
00a7cc 93ea      	ST   -Y,R30
                +
00a7cd e0a0     +LDI R26 , LOW ( 0x0 )
00a7ce e0b0     +LDI R27 , HIGH ( 0x0 )
00a7cf e080     +LDI R24 , BYTE3 ( 0x0 )
00a7d0 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a7d1 df16      	RCALL _send_cmd_G102
00a7d2 30e0      	CPI  R30,0
00a7d3 f009      	BREQ _0x204008E
                 _0x204008D:
00a7d4 c00a      	RJMP _0x204008C
                 _0x204008E:
00a7d5 01de      	MOVW R26,R28
00a7d6 9614      	ADIW R26,4
00a7d7 df72      	RCALL _rx_spi4_G102
00a7d8 81ec      	LDD  R30,Y+4
00a7d9 74e0      	ANDI R30,LOW(0x40)
00a7da f011      	BREQ _0x204008F
00a7db e0ec      	LDI  R30,LOW(12)
00a7dc c001      	RJMP _0x2040090
                 _0x204008F:
00a7dd e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
00a7de 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
00a7df c02a      	RJMP _0x2040092
                 _0x2040083:
00a7e0 eee9      	LDI  R30,LOW(233)
00a7e1 93ea      	ST   -Y,R30
                +
00a7e2 e0a0     +LDI R26 , LOW ( 0x0 )
00a7e3 e0b0     +LDI R27 , HIGH ( 0x0 )
00a7e4 e080     +LDI R24 , BYTE3 ( 0x0 )
00a7e5 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a7e6 df01      	RCALL _send_cmd_G102
00a7e7 30e2      	CPI  R30,LOW(0x2)
00a7e8 f418      	BRSH _0x2040093
00a7e9 e032      	LDI  R19,LOW(2)
00a7ea ee09      	LDI  R16,LOW(233)
00a7eb c002      	RJMP _0x2040094
                 _0x2040093:
00a7ec e031      	LDI  R19,LOW(1)
00a7ed e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
00a7ee 91e0 1aae 	LDS  R30,_timer1_G102
00a7f0 30e0      	CPI  R30,0
00a7f1 f041      	BREQ _0x2040098
00a7f2 930a      	ST   -Y,R16
                +
00a7f3 e0a0     +LDI R26 , LOW ( 0x0 )
00a7f4 e0b0     +LDI R27 , HIGH ( 0x0 )
00a7f5 e080     +LDI R24 , BYTE3 ( 0x0 )
00a7f6 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a7f7 def0      	RCALL _send_cmd_G102
00a7f8 30e0      	CPI  R30,0
00a7f9 f409      	BRNE _0x2040099
                 _0x2040098:
00a7fa c001      	RJMP _0x2040097
                 _0x2040099:
00a7fb cff2      	RJMP _0x2040095
                 _0x2040097:
00a7fc 91e0 1aae 	LDS  R30,_timer1_G102
00a7fe 30e0      	CPI  R30,0
00a7ff f049      	BREQ _0x204009B
00a800 e5e0      	LDI  R30,LOW(80)
00a801 93ea      	ST   -Y,R30
                +
00a802 e0a0     +LDI R26 , LOW ( 0x200 )
00a803 e0b2     +LDI R27 , HIGH ( 0x200 )
00a804 e080     +LDI R24 , BYTE3 ( 0x200 )
00a805 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a806 dee1      	RCALL _send_cmd_G102
00a807 30e0      	CPI  R30,0
00a808 f009      	BREQ _0x204009A
                 _0x204009B:
00a809 e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00a80a 9330 1ab0 	STS  _card_type_G102,R19
00a80c de2b      	RCALL _release_spi_G102
00a80d 3030      	CPI  R19,0
00a80e f051      	BREQ _0x204009D
00a80f 91e0 1aad 	LDS  R30,_status_G102
00a811 7fee      	ANDI R30,0xFE
00a812 93e0 1aad 	STS  _status_G102,R30
00a814 e5e0      	LDI  R30,LOW(80)
00a815 bdec      	OUT  0x2C,R30
00a816 e0e1      	LDI  R30,LOW(1)
00a817 bded      	OUT  0x2D,R30
00a818 c011      	RJMP _0x204009E
                 _0x204009D:
00a819 9828      	CBI  0x5,0
00a81a de03      	RCALL _wait_ready_G102
00a81b de1c      	RCALL _release_spi_G102
00a81c e0e0      	LDI  R30,LOW(0)
00a81d bdec      	OUT  0x2C,R30
00a81e b1e4      	IN   R30,0x4
00a81f 7fe0      	ANDI R30,LOW(0xF0)
00a820 b9e4      	OUT  0x4,R30
00a821 b1e5      	IN   R30,0x5
00a822 7fe0      	ANDI R30,LOW(0xF0)
00a823 b9e5      	OUT  0x5,R30
00a824 9820      	CBI  0x4,0
00a825 91e0 1aad 	LDS  R30,_status_G102
00a827 60e1      	ORI  R30,1
00a828 93e0 1aad 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00a82a 91e0 1aad 	LDS  R30,_status_G102
                 _0x20E0025:
00a82c 940e e0d9 	CALL __LOADLOCR4
00a82e 9629      	ADIW R28,9
00a82f 9508      	RET
                 _disk_status:
00a830 93aa      	ST   -Y,R26
00a831 81e8      	LD   R30,Y
00a832 30e0      	CPI  R30,0
00a833 f011      	BREQ _0x204009F
00a834 e0e1      	LDI  R30,LOW(1)
00a835 c002      	RJMP _0x20E0023
                 _0x204009F:
00a836 91e0 1aad 	LDS  R30,_status_G102
                 _0x20E0023:
00a838 9621      	ADIW R28,1
00a839 9508      	RET
                 _disk_read:
00a83a 93aa      	ST   -Y,R26
00a83b 81ef      	LDD  R30,Y+7
00a83c 30e0      	CPI  R30,0
00a83d f419      	BRNE _0x20400A1
00a83e 81e8      	LD   R30,Y
00a83f 30e0      	CPI  R30,0
00a840 f411      	BRNE _0x20400A0
                 _0x20400A1:
00a841 e0e4      	LDI  R30,LOW(4)
00a842 c352      	RJMP _0x20E0020
                 _0x20400A0:
00a843 91e0 1aad 	LDS  R30,_status_G102
00a845 70e1      	ANDI R30,LOW(0x1)
00a846 f011      	BREQ _0x20400A3
00a847 e0e3      	LDI  R30,LOW(3)
00a848 c34c      	RJMP _0x20E0020
                 _0x20400A3:
00a849 91e0 1ab0 	LDS  R30,_card_type_G102
00a84b 70e8      	ANDI R30,LOW(0x8)
00a84c f471      	BRNE _0x20400A4
                +
00a84d 81e9     +LDD R30 , Y + 1
00a84e 81fa     +LDD R31 , Y + 1 + 1
00a84f 816b     +LDD R22 , Y + 1 + 2
00a850 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a851 e0a0     +LDI R26 , LOW ( 0x200 )
00a852 e0b2     +LDI R27 , HIGH ( 0x200 )
00a853 e080     +LDI R24 , BYTE3 ( 0x200 )
00a854 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a855 940e df59 	CALL __MULD12U
                +
00a857 83e9     +STD Y + 1 , R30
00a858 83fa     +STD Y + 1 + 1 , R31
00a859 836b     +STD Y + 1 + 2 , R22
00a85a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00a85b 81a8      	LD   R26,Y
00a85c 30a1      	CPI  R26,LOW(0x1)
00a85d f4b1      	BRNE _0x20400A5
00a85e e5e1      	LDI  R30,LOW(81)
00a85f 93ea      	ST   -Y,R30
                +
00a860 81aa     +LDD R26 , Y + 2
00a861 81bb     +LDD R27 , Y + 2 + 1
00a862 818c     +LDD R24 , Y + 2 + 2
00a863 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a864 de83      	RCALL _send_cmd_G102
00a865 30e0      	CPI  R30,0
00a866 f449      	BRNE _0x20400A7
00a867 81ed      	LDD  R30,Y+5
00a868 81fe      	LDD  R31,Y+5+1
00a869 93fa      	ST   -Y,R31
00a86a 93ea      	ST   -Y,R30
00a86b e0a0      	LDI  R26,LOW(512)
00a86c e0b2      	LDI  R27,HIGH(512)
00a86d ddd1      	RCALL _rx_datablock_G102
00a86e 30e0      	CPI  R30,0
00a86f f409      	BRNE _0x20400A8
                 _0x20400A7:
00a870 c002      	RJMP _0x20400A6
                 _0x20400A8:
00a871 e0e0      	LDI  R30,LOW(0)
00a872 83e8      	ST   Y,R30
                 _0x20400A6:
00a873 c023      	RJMP _0x20400A9
                 _0x20400A5:
00a874 e5e2      	LDI  R30,LOW(82)
00a875 93ea      	ST   -Y,R30
                +
00a876 81aa     +LDD R26 , Y + 2
00a877 81bb     +LDD R27 , Y + 2 + 1
00a878 818c     +LDD R24 , Y + 2 + 2
00a879 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a87a de6d      	RCALL _send_cmd_G102
00a87b 30e0      	CPI  R30,0
00a87c f4d1      	BRNE _0x20400AA
                 _0x20400AC:
00a87d 81ed      	LDD  R30,Y+5
00a87e 81fe      	LDD  R31,Y+5+1
00a87f 93fa      	ST   -Y,R31
00a880 93ea      	ST   -Y,R30
00a881 e0a0      	LDI  R26,LOW(512)
00a882 e0b2      	LDI  R27,HIGH(512)
00a883 ddbb      	RCALL _rx_datablock_G102
00a884 30e0      	CPI  R30,0
00a885 f051      	BREQ _0x20400AD
00a886 81ed      	LDD  R30,Y+5
00a887 81fe      	LDD  R31,Y+5+1
00a888 50e0      	SUBI R30,LOW(-512)
00a889 4ffe      	SBCI R31,HIGH(-512)
00a88a 83ed      	STD  Y+5,R30
00a88b 83fe      	STD  Y+5+1,R31
00a88c 81e8      	LD   R30,Y
00a88d 50e1      	SUBI R30,LOW(1)
00a88e 83e8      	ST   Y,R30
00a88f f769      	BRNE _0x20400AC
                 _0x20400AD:
00a890 e4ec      	LDI  R30,LOW(76)
00a891 93ea      	ST   -Y,R30
                +
00a892 e0a0     +LDI R26 , LOW ( 0x0 )
00a893 e0b0     +LDI R27 , HIGH ( 0x0 )
00a894 e080     +LDI R24 , BYTE3 ( 0x0 )
00a895 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a896 de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
00a897 dda0      	RCALL _release_spi_G102
00a898 81e8      	LD   R30,Y
00a899 30e0      	CPI  R30,0
00a89a f011      	BREQ _0x20400AF
00a89b e0e1      	LDI  R30,LOW(1)
00a89c c001      	RJMP _0x20400B0
                 _0x20400AF:
00a89d e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
00a89e c2f6      	RJMP _0x20E0020
                 _disk_write:
00a89f 93aa      	ST   -Y,R26
00a8a0 81ef      	LDD  R30,Y+7
00a8a1 30e0      	CPI  R30,0
00a8a2 f419      	BRNE _0x20400B3
00a8a3 81e8      	LD   R30,Y
00a8a4 30e0      	CPI  R30,0
00a8a5 f411      	BRNE _0x20400B2
                 _0x20400B3:
00a8a6 e0e4      	LDI  R30,LOW(4)
00a8a7 c2ed      	RJMP _0x20E0020
                 _0x20400B2:
00a8a8 91e0 1aad 	LDS  R30,_status_G102
00a8aa 70e1      	ANDI R30,LOW(0x1)
00a8ab f011      	BREQ _0x20400B5
00a8ac e0e3      	LDI  R30,LOW(3)
00a8ad c2e7      	RJMP _0x20E0020
                 _0x20400B5:
00a8ae 91e0 1aad 	LDS  R30,_status_G102
00a8b0 70e4      	ANDI R30,LOW(0x4)
00a8b1 f011      	BREQ _0x20400B6
00a8b2 e0e2      	LDI  R30,LOW(2)
00a8b3 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
00a8b4 91e0 1ab0 	LDS  R30,_card_type_G102
00a8b6 70e8      	ANDI R30,LOW(0x8)
00a8b7 f471      	BRNE _0x20400B7
                +
00a8b8 81e9     +LDD R30 , Y + 1
00a8b9 81fa     +LDD R31 , Y + 1 + 1
00a8ba 816b     +LDD R22 , Y + 1 + 2
00a8bb 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a8bc e0a0     +LDI R26 , LOW ( 0x200 )
00a8bd e0b2     +LDI R27 , HIGH ( 0x200 )
00a8be e080     +LDI R24 , BYTE3 ( 0x200 )
00a8bf e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a8c0 940e df59 	CALL __MULD12U
                +
00a8c2 83e9     +STD Y + 1 , R30
00a8c3 83fa     +STD Y + 1 + 1 , R31
00a8c4 836b     +STD Y + 1 + 2 , R22
00a8c5 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
00a8c6 81a8      	LD   R26,Y
00a8c7 30a1      	CPI  R26,LOW(0x1)
00a8c8 f4a9      	BRNE _0x20400B8
00a8c9 e5e8      	LDI  R30,LOW(88)
00a8ca 93ea      	ST   -Y,R30
                +
00a8cb 81aa     +LDD R26 , Y + 2
00a8cc 81bb     +LDD R27 , Y + 2 + 1
00a8cd 818c     +LDD R24 , Y + 2 + 2
00a8ce 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a8cf de18      	RCALL _send_cmd_G102
00a8d0 30e0      	CPI  R30,0
00a8d1 f441      	BRNE _0x20400BA
00a8d2 81ed      	LDD  R30,Y+5
00a8d3 81fe      	LDD  R31,Y+5+1
00a8d4 93fa      	ST   -Y,R31
00a8d5 93ea      	ST   -Y,R30
00a8d6 efae      	LDI  R26,LOW(254)
00a8d7 ddcc      	RCALL _tx_datablock_G102
00a8d8 30e0      	CPI  R30,0
00a8d9 f409      	BRNE _0x20400BB
                 _0x20400BA:
00a8da c002      	RJMP _0x20400B9
                 _0x20400BB:
00a8db e0e0      	LDI  R30,LOW(0)
00a8dc 83e8      	ST   Y,R30
                 _0x20400B9:
00a8dd c030      	RJMP _0x20400BC
                 _0x20400B8:
00a8de 91e0 1ab0 	LDS  R30,_card_type_G102
00a8e0 70e6      	ANDI R30,LOW(0x6)
00a8e1 f039      	BREQ _0x20400BD
00a8e2 ede7      	LDI  R30,LOW(215)
00a8e3 93ea      	ST   -Y,R30
00a8e4 81a9      	LDD  R26,Y+1
00a8e5 27bb      	CLR  R27
00a8e6 2788      	CLR  R24
00a8e7 2799      	CLR  R25
00a8e8 ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00a8e9 e5e9      	LDI  R30,LOW(89)
00a8ea 93ea      	ST   -Y,R30
                +
00a8eb 81aa     +LDD R26 , Y + 2
00a8ec 81bb     +LDD R27 , Y + 2 + 1
00a8ed 818c     +LDD R24 , Y + 2 + 2
00a8ee 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a8ef ddf8      	RCALL _send_cmd_G102
00a8f0 30e0      	CPI  R30,0
00a8f1 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
00a8f2 81ed      	LDD  R30,Y+5
00a8f3 81fe      	LDD  R31,Y+5+1
00a8f4 93fa      	ST   -Y,R31
00a8f5 93ea      	ST   -Y,R30
00a8f6 efac      	LDI  R26,LOW(252)
00a8f7 ddac      	RCALL _tx_datablock_G102
00a8f8 30e0      	CPI  R30,0
00a8f9 f051      	BREQ _0x20400C1
00a8fa 81ed      	LDD  R30,Y+5
00a8fb 81fe      	LDD  R31,Y+5+1
00a8fc 50e0      	SUBI R30,LOW(-512)
00a8fd 4ffe      	SBCI R31,HIGH(-512)
00a8fe 83ed      	STD  Y+5,R30
00a8ff 83fe      	STD  Y+5+1,R31
00a900 81e8      	LD   R30,Y
00a901 50e1      	SUBI R30,LOW(1)
00a902 83e8      	ST   Y,R30
00a903 f771      	BRNE _0x20400C0
                 _0x20400C1:
00a904 e0e0      	LDI  R30,LOW(0)
00a905 e0f0      	LDI  R31,HIGH(0)
00a906 93fa      	ST   -Y,R31
00a907 93ea      	ST   -Y,R30
00a908 efad      	LDI  R26,LOW(253)
00a909 dd9a      	RCALL _tx_datablock_G102
00a90a 30e0      	CPI  R30,0
00a90b f411      	BRNE _0x20400C3
00a90c e0e1      	LDI  R30,LOW(1)
00a90d 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
00a90e dd29      	RCALL _release_spi_G102
00a90f 81e8      	LD   R30,Y
00a910 30e0      	CPI  R30,0
00a911 f011      	BREQ _0x20400C4
00a912 e0e1      	LDI  R30,LOW(1)
00a913 c001      	RJMP _0x20400C5
                 _0x20400C4:
00a914 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
00a915 c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00a916 93ba      	ST   -Y,R27
00a917 93aa      	ST   -Y,R26
00a918 9760      	SBIW R28,16
00a919 940e e0d0 	CALL __SAVELOCR6
00a91b 8de9      	LDD  R30,Y+25
00a91c 30e0      	CPI  R30,0
00a91d f011      	BREQ _0x20400C7
00a91e e0e4      	LDI  R30,LOW(4)
00a91f c182      	RJMP _0x20E0022
                 _0x20400C7:
00a920 e011      	LDI  R17,LOW(1)
00a921 91e0 1aad 	LDS  R30,_status_G102
00a923 70e1      	ANDI R30,LOW(0x1)
00a924 f011      	BREQ _0x20400C8
00a925 e0e3      	LDI  R30,LOW(3)
00a926 c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00a927 894e     +LDD R20 , Y + 22
00a928 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00a929 8de8      	LDD  R30,Y+24
00a92a 30e0      	CPI  R30,0
00a92b f431      	BRNE _0x20400CC
00a92c 9828      	CBI  0x5,0
00a92d dcf0      	RCALL _wait_ready_G102
00a92e 3fef      	CPI  R30,LOW(0xFF)
00a92f f409      	BRNE _0x20400CD
00a930 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
00a931 c16e      	RJMP _0x20400CB
                 _0x20400CC:
00a932 30e1      	CPI  R30,LOW(0x1)
00a933 f011      	BREQ PC+3
00a934 940c a990 	JMP _0x20400CE
00a936 e4e9      	LDI  R30,LOW(73)
00a937 93ea      	ST   -Y,R30
                +
00a938 e0a0     +LDI R26 , LOW ( 0x0 )
00a939 e0b0     +LDI R27 , HIGH ( 0x0 )
00a93a e080     +LDI R24 , BYTE3 ( 0x0 )
00a93b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a93c ddab      	RCALL _send_cmd_G102
00a93d 30e0      	CPI  R30,0
00a93e f449      	BRNE _0x20400D0
00a93f 01fe      	MOVW R30,R28
00a940 9636      	ADIW R30,6
00a941 93fa      	ST   -Y,R31
00a942 93ea      	ST   -Y,R30
00a943 e1a0      	LDI  R26,LOW(16)
00a944 e0b0      	LDI  R27,0
00a945 dcf9      	RCALL _rx_datablock_G102
00a946 30e0      	CPI  R30,0
00a947 f409      	BRNE _0x20400D1
                 _0x20400D0:
00a948 c046      	RJMP _0x20400CF
                 _0x20400D1:
00a949 81ee      	LDD  R30,Y+6
00a94a 95e2      	SWAP R30
00a94b 70ef      	ANDI R30,0xF
00a94c 95e6      	LSR  R30
00a94d 95e6      	LSR  R30
00a94e 30e1      	CPI  R30,LOW(0x1)
00a94f f469      	BRNE _0x20400D2
00a950 e0e0      	LDI  R30,0
00a951 85fe      	LDD  R31,Y+14
00a952 85af      	LDD  R26,Y+15
00a953 e0b0      	LDI  R27,0
00a954 0fea      	ADD  R30,R26
00a955 1ffb      	ADC  R31,R27
00a956 9631      	ADIW R30,1
00a957 019f      	MOVW R18,R30
00a958 01d9      	MOVW R26,R18
00a959 2788      	CLR  R24
00a95a 2799      	CLR  R25
00a95b e0ea      	LDI  R30,LOW(10)
00a95c c02c      	RJMP _0x2040101
                 _0x20400D2:
00a95d 85eb      	LDD  R30,Y+11
00a95e 70ef      	ANDI R30,LOW(0xF)
00a95f 2fae      	MOV  R26,R30
00a960 89e8      	LDD  R30,Y+16
00a961 78e0      	ANDI R30,LOW(0x80)
00a962 1fee      	ROL  R30
00a963 e0e0      	LDI  R30,0
00a964 1fee      	ROL  R30
00a965 0fae      	ADD  R26,R30
00a966 85ef      	LDD  R30,Y+15
00a967 70e3      	ANDI R30,LOW(0x3)
00a968 0fee      	LSL  R30
00a969 0fea      	ADD  R30,R26
00a96a 5fee      	SUBI R30,-LOW(2)
00a96b 2f0e      	MOV  R16,R30
00a96c 85ee      	LDD  R30,Y+14
00a96d 95e2      	SWAP R30
00a96e 70ef      	ANDI R30,0xF
00a96f 95e6      	LSR  R30
00a970 95e6      	LSR  R30
00a971 2fae      	MOV  R26,R30
00a972 85ed      	LDD  R30,Y+13
00a973 e0f0      	LDI  R31,0
00a974 940e df02 	CALL __LSLW2
00a976 e0b0      	LDI  R27,0
00a977 0fae      	ADD  R26,R30
00a978 1fbf      	ADC  R27,R31
00a979 85ec      	LDD  R30,Y+12
00a97a 70e3      	ANDI R30,LOW(0x3)
00a97b e0f0      	LDI  R31,0
00a97c 940e df02 	CALL __LSLW2
00a97e 2ffe      	MOV  R31,R30
00a97f e0e0      	LDI  R30,0
00a980 0fea      	ADD  R30,R26
00a981 1ffb      	ADC  R31,R27
00a982 9631      	ADIW R30,1
00a983 019f      	MOVW R18,R30
00a984 01d9      	MOVW R26,R18
00a985 2788      	CLR  R24
00a986 2799      	CLR  R25
00a987 2fe0      	MOV  R30,R16
00a988 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
00a989 940e dee6 	CALL __LSLD12
00a98b 01da      	MOVW R26,R20
00a98c 940e e036 	CALL __PUTDP1
00a98e e010      	LDI  R17,LOW(0)
                 _0x20400CF:
00a98f c110      	RJMP _0x20400CB
                 _0x20400CE:
00a990 30e2      	CPI  R30,LOW(0x2)
00a991 f439      	BRNE _0x20400D4
00a992 01da      	MOVW R26,R20
00a993 e0e0      	LDI  R30,LOW(512)
00a994 e0f2      	LDI  R31,HIGH(512)
00a995 93ed      	ST   X+,R30
00a996 93fc      	ST   X,R31
00a997 e010      	LDI  R17,LOW(0)
00a998 c107      	RJMP _0x20400CB
                 _0x20400D4:
00a999 30e3      	CPI  R30,LOW(0x3)
00a99a f011      	BREQ PC+3
00a99b 940c aa45 	JMP _0x20400D5
00a99d 91e0 1ab0 	LDS  R30,_card_type_G102
00a99f 70e4      	ANDI R30,LOW(0x4)
00a9a0 f179      	BREQ _0x20400D6
00a9a1 eced      	LDI  R30,LOW(205)
00a9a2 93ea      	ST   -Y,R30
                +
00a9a3 e0a0     +LDI R26 , LOW ( 0x0 )
00a9a4 e0b0     +LDI R27 , HIGH ( 0x0 )
00a9a5 e080     +LDI R24 , BYTE3 ( 0x0 )
00a9a6 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a9a7 dd40      	RCALL _send_cmd_G102
00a9a8 30e0      	CPI  R30,0
00a9a9 f529      	BRNE _0x20400D7
00a9aa efef      	LDI  R30,LOW(255)
00a9ab bdee      	OUT  0x2E,R30
                 _0x20400D8:
00a9ac b5ed      	IN   R30,0x2D
00a9ad ffe7      	SBRS R30,7
00a9ae cffd      	RJMP _0x20400D8
00a9af 01fe      	MOVW R30,R28
00a9b0 9636      	ADIW R30,6
00a9b1 93fa      	ST   -Y,R31
00a9b2 93ea      	ST   -Y,R30
00a9b3 e1a0      	LDI  R26,LOW(16)
00a9b4 e0b0      	LDI  R27,0
00a9b5 dc89      	RCALL _rx_datablock_G102
00a9b6 30e0      	CPI  R30,0
00a9b7 f0b9      	BREQ _0x20400DB
00a9b8 e300      	LDI  R16,LOW(48)
                 _0x20400DD:
00a9b9 3000      	CPI  R16,0
00a9ba f039      	BREQ _0x20400DE
00a9bb efef      	LDI  R30,LOW(255)
00a9bc bdee      	OUT  0x2E,R30
                 _0x20400DF:
00a9bd b5ed      	IN   R30,0x2D
00a9be ffe7      	SBRS R30,7
00a9bf cffd      	RJMP _0x20400DF
00a9c0 5001      	SUBI R16,1
00a9c1 cff7      	RJMP _0x20400DD
                 _0x20400DE:
00a9c2 89e8      	LDD  R30,Y+16
00a9c3 95e2      	SWAP R30
00a9c4 70ef      	ANDI R30,0xF
                +
00a9c5 e1a0     +LDI R26 , LOW ( 0x10 )
00a9c6 e0b0     +LDI R27 , HIGH ( 0x10 )
00a9c7 e080     +LDI R24 , BYTE3 ( 0x10 )
00a9c8 e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00a9c9 940e dee6 	CALL __LSLD12
00a9cb 01da      	MOVW R26,R20
00a9cc 940e e036 	CALL __PUTDP1
00a9ce e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
00a9cf c074      	RJMP _0x20400E2
                 _0x20400D6:
00a9d0 e4e9      	LDI  R30,LOW(73)
00a9d1 93ea      	ST   -Y,R30
                +
00a9d2 e0a0     +LDI R26 , LOW ( 0x0 )
00a9d3 e0b0     +LDI R27 , HIGH ( 0x0 )
00a9d4 e080     +LDI R24 , BYTE3 ( 0x0 )
00a9d5 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a9d6 dd11      	RCALL _send_cmd_G102
00a9d7 30e0      	CPI  R30,0
00a9d8 f449      	BRNE _0x20400E4
00a9d9 01fe      	MOVW R30,R28
00a9da 9636      	ADIW R30,6
00a9db 93fa      	ST   -Y,R31
00a9dc 93ea      	ST   -Y,R30
00a9dd e1a0      	LDI  R26,LOW(16)
00a9de e0b0      	LDI  R27,0
00a9df dc5f      	RCALL _rx_datablock_G102
00a9e0 30e0      	CPI  R30,0
00a9e1 f409      	BRNE _0x20400E5
                 _0x20400E4:
00a9e2 c061      	RJMP _0x20400E3
                 _0x20400E5:
00a9e3 91e0 1ab0 	LDS  R30,_card_type_G102
00a9e5 70e2      	ANDI R30,LOW(0x2)
00a9e6 f151      	BREQ _0x20400E6
00a9e7 89e8      	LDD  R30,Y+16
00a9e8 73ef      	ANDI R30,LOW(0x3F)
00a9e9 27ff      	CLR  R31
00a9ea 2766      	CLR  R22
00a9eb 2777      	CLR  R23
00a9ec 940e df1e 	CALL __LSLD1
00a9ee 937f      	PUSH R23
00a9ef 936f      	PUSH R22
00a9f0 93ff      	PUSH R31
00a9f1 93ef      	PUSH R30
00a9f2 89e9      	LDD  R30,Y+17
00a9f3 78e0      	ANDI R30,LOW(0x80)
00a9f4 27ff      	CLR  R31
00a9f5 2766      	CLR  R22
00a9f6 2777      	CLR  R23
00a9f7 01df      	MOVW R26,R30
00a9f8 01cb      	MOVW R24,R22
00a9f9 e0e7      	LDI  R30,LOW(7)
00a9fa 940e def2 	CALL __LSRD12
00a9fc 91af      	POP  R26
00a9fd 91bf      	POP  R27
00a9fe 918f      	POP  R24
00a9ff 919f      	POP  R25
00aa00 940e deb3 	CALL __ADDD12
                +
00aa02 5fef     +SUBI R30 , LOW ( - 1 )
00aa03 4fff     +SBCI R31 , HIGH ( - 1 )
00aa04 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00aa05 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00aa06 01df      	MOVW R26,R30
00aa07 01cb      	MOVW R24,R22
00aa08 89eb      	LDD  R30,Y+19
00aa09 95e2      	SWAP R30
00aa0a 70ef      	ANDI R30,0xF
00aa0b 95e6      	LSR  R30
00aa0c 95e6      	LSR  R30
00aa0d 50e1      	SUBI R30,LOW(1)
00aa0e 940e dee6 	CALL __LSLD12
00aa10 c02f      	RJMP _0x2040102
                 _0x20400E6:
00aa11 89e8      	LDD  R30,Y+16
00aa12 77ec      	ANDI R30,LOW(0x7C)
00aa13 95e6      	LSR  R30
00aa14 95e6      	LSR  R30
00aa15 27ff      	CLR  R31
00aa16 2766      	CLR  R22
00aa17 2777      	CLR  R23
                +
00aa18 5fef     +SUBI R30 , LOW ( - 1 )
00aa19 4fff     +SBCI R31 , HIGH ( - 1 )
00aa1a 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00aa1b 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00aa1c 937f      	PUSH R23
00aa1d 936f      	PUSH R22
00aa1e 93ff      	PUSH R31
00aa1f 93ef      	PUSH R30
00aa20 89e9      	LDD  R30,Y+17
00aa21 70e3      	ANDI R30,LOW(0x3)
00aa22 27ff      	CLR  R31
00aa23 2766      	CLR  R22
00aa24 2777      	CLR  R23
00aa25 01df      	MOVW R26,R30
00aa26 01cb      	MOVW R24,R22
00aa27 e0e3      	LDI  R30,LOW(3)
00aa28 940e dee6 	CALL __LSLD12
00aa2a 01df      	MOVW R26,R30
00aa2b 01cb      	MOVW R24,R22
00aa2c 89e9      	LDD  R30,Y+17
00aa2d 7ee0      	ANDI R30,LOW(0xE0)
00aa2e 95e2      	SWAP R30
00aa2f 70ef      	ANDI R30,0xF
00aa30 95e6      	LSR  R30
00aa31 27ff      	CLR  R31
00aa32 2766      	CLR  R22
00aa33 2777      	CLR  R23
00aa34 940e deb3 	CALL __ADDD12
                +
00aa36 5fef     +SUBI R30 , LOW ( - 1 )
00aa37 4fff     +SBCI R31 , HIGH ( - 1 )
00aa38 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00aa39 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00aa3a 91af      	POP  R26
00aa3b 91bf      	POP  R27
00aa3c 918f      	POP  R24
00aa3d 919f      	POP  R25
00aa3e 940e df59 	CALL __MULD12U
                 _0x2040102:
00aa40 01da      	MOVW R26,R20
00aa41 940e e036 	CALL __PUTDP1
00aa43 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
00aa44 c05b      	RJMP _0x20400CB
                 _0x20400D5:
00aa45 30ea      	CPI  R30,LOW(0xA)
00aa46 f431      	BRNE _0x20400E8
00aa47 91e0 1ab0 	LDS  R30,_card_type_G102
00aa49 01da      	MOVW R26,R20
00aa4a 93ec      	ST   X,R30
00aa4b e010      	LDI  R17,LOW(0)
00aa4c c053      	RJMP _0x20400CB
                 _0x20400E8:
00aa4d 30eb      	CPI  R30,LOW(0xB)
00aa4e f499      	BRNE _0x20400E9
00aa4f e4e9      	LDI  R30,LOW(73)
00aa50 93ea      	ST   -Y,R30
                +
00aa51 e0a0     +LDI R26 , LOW ( 0x0 )
00aa52 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa53 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa54 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa55 dc92      	RCALL _send_cmd_G102
00aa56 30e0      	CPI  R30,0
00aa57 f439      	BRNE _0x20400EB
00aa58 935a      	ST   -Y,R21
00aa59 934a      	ST   -Y,R20
00aa5a e1a0      	LDI  R26,LOW(16)
00aa5b e0b0      	LDI  R27,0
00aa5c dbe2      	RCALL _rx_datablock_G102
00aa5d 30e0      	CPI  R30,0
00aa5e f409      	BRNE _0x20400EC
                 _0x20400EB:
00aa5f c001      	RJMP _0x20400EA
                 _0x20400EC:
00aa60 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
00aa61 c03e      	RJMP _0x20400CB
                 _0x20400E9:
00aa62 30ec      	CPI  R30,LOW(0xC)
00aa63 f499      	BRNE _0x20400ED
00aa64 e4ea      	LDI  R30,LOW(74)
00aa65 93ea      	ST   -Y,R30
                +
00aa66 e0a0     +LDI R26 , LOW ( 0x0 )
00aa67 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa68 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa69 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa6a dc7d      	RCALL _send_cmd_G102
00aa6b 30e0      	CPI  R30,0
00aa6c f439      	BRNE _0x20400EF
00aa6d 935a      	ST   -Y,R21
00aa6e 934a      	ST   -Y,R20
00aa6f e1a0      	LDI  R26,LOW(16)
00aa70 e0b0      	LDI  R27,0
00aa71 dbcd      	RCALL _rx_datablock_G102
00aa72 30e0      	CPI  R30,0
00aa73 f409      	BRNE _0x20400F0
                 _0x20400EF:
00aa74 c001      	RJMP _0x20400EE
                 _0x20400F0:
00aa75 e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00aa76 c029      	RJMP _0x20400CB
                 _0x20400ED:
00aa77 30ed      	CPI  R30,LOW(0xD)
00aa78 f469      	BRNE _0x20400F1
00aa79 e7ea      	LDI  R30,LOW(122)
00aa7a 93ea      	ST   -Y,R30
                +
00aa7b e0a0     +LDI R26 , LOW ( 0x0 )
00aa7c e0b0     +LDI R27 , HIGH ( 0x0 )
00aa7d e080     +LDI R24 , BYTE3 ( 0x0 )
00aa7e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa7f dc68      	RCALL _send_cmd_G102
00aa80 30e0      	CPI  R30,0
00aa81 f419      	BRNE _0x20400F2
00aa82 01da      	MOVW R26,R20
00aa83 dcc6      	RCALL _rx_spi4_G102
00aa84 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
00aa85 c01a      	RJMP _0x20400CB
                 _0x20400F1:
00aa86 30ee      	CPI  R30,LOW(0xE)
00aa87 f4b9      	BRNE _0x20400F9
00aa88 eced      	LDI  R30,LOW(205)
00aa89 93ea      	ST   -Y,R30
                +
00aa8a e0a0     +LDI R26 , LOW ( 0x0 )
00aa8b e0b0     +LDI R27 , HIGH ( 0x0 )
00aa8c e080     +LDI R24 , BYTE3 ( 0x0 )
00aa8d e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa8e dc59      	RCALL _send_cmd_G102
00aa8f 30e0      	CPI  R30,0
00aa90 f469      	BRNE _0x20400F4
00aa91 efef      	LDI  R30,LOW(255)
00aa92 bdee      	OUT  0x2E,R30
                 _0x20400F5:
00aa93 b5ed      	IN   R30,0x2D
00aa94 ffe7      	SBRS R30,7
00aa95 cffd      	RJMP _0x20400F5
00aa96 935a      	ST   -Y,R21
00aa97 934a      	ST   -Y,R20
00aa98 e4a0      	LDI  R26,LOW(64)
00aa99 e0b0      	LDI  R27,0
00aa9a dba4      	RCALL _rx_datablock_G102
00aa9b 30e0      	CPI  R30,0
00aa9c f009      	BREQ _0x20400F8
00aa9d e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
00aa9e c001      	RJMP _0x20400CB
                 _0x20400F9:
00aa9f e014      	LDI  R17,LOW(4)
                 _0x20400CB:
00aaa0 db97      	RCALL _release_spi_G102
00aaa1 2fe1      	MOV  R30,R17
                 _0x20E0022:
00aaa2 940e e0d7 	CALL __LOADLOCR6
00aaa4 966a      	ADIW R28,26
00aaa5 9508      	RET
                 _disk_timerproc:
00aaa6 931a      	ST   -Y,R17
00aaa7 930a      	ST   -Y,R16
00aaa8 9110 1aae 	LDS  R17,_timer1_G102
00aaaa 3010      	CPI  R17,0
00aaab f019      	BREQ _0x20400FA
00aaac 5011      	SUBI R17,LOW(1)
00aaad 9310 1aae 	STS  _timer1_G102,R17
                 _0x20400FA:
00aaaf 9110 1aaf 	LDS  R17,_timer2_G102
00aab1 3010      	CPI  R17,0
00aab2 f019      	BREQ _0x20400FB
00aab3 5011      	SUBI R17,LOW(1)
00aab4 9310 1aaf 	STS  _timer2_G102,R17
                 _0x20400FB:
00aab6 9110 1ab1 	LDS  R17,_pv_S102000B000
00aab8 b1e0      	IN   R30,0x0
00aab9 70e2      	ANDI R30,LOW(0x2)
00aaba 2fae      	MOV  R26,R30
00aabb b1e0      	IN   R30,0x0
00aabc 70e1      	ANDI R30,LOW(0x1)
00aabd 2bea      	OR   R30,R26
00aabe 93e0 1ab1 	STS  _pv_S102000B000,R30
00aac0 17e1      	CP   R30,R17
00aac1 f481      	BRNE _0x20400FC
00aac2 9100 1aad 	LDS  R16,_status_G102
00aac4 70e2      	ANDI R30,LOW(0x2)
00aac5 f011      	BREQ _0x20400FD
00aac6 6004      	ORI  R16,LOW(4)
00aac7 c001      	RJMP _0x20400FE
                 _0x20400FD:
00aac8 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
00aac9 91e0 1ab1 	LDS  R30,_pv_S102000B000
00aacb 70e1      	ANDI R30,LOW(0x1)
00aacc f011      	BREQ _0x20400FF
00aacd 6003      	ORI  R16,LOW(3)
00aace c001      	RJMP _0x2040100
                 _0x20400FF:
00aacf 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
00aad0 9300 1aad 	STS  _status_G102,R16
                 _0x20400FC:
00aad2 9109      	LD   R16,Y+
00aad3 9119      	LD   R17,Y+
00aad4 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
00aad5 9727      	SBIW R28,7
00aad6 91a0 1463 	LDS  R26,_prtc_get_time
00aad8 91b0 1464 	LDS  R27,_prtc_get_time+1
00aada 9180 1465 	LDS  R24,_prtc_get_time+2
00aadc 9190 1466 	LDS  R25,_prtc_get_time+3
00aade 940e e0c0 	CALL __CPD02
00aae0 f059      	BREQ _0x2060004
00aae1 91a0 1467 	LDS  R26,_prtc_get_date
00aae3 91b0 1468 	LDS  R27,_prtc_get_date+1
00aae5 9180 1469 	LDS  R24,_prtc_get_date+2
00aae7 9190 146a 	LDS  R25,_prtc_get_date+3
00aae9 940e e0c0 	CALL __CPD02
00aaeb f429      	BRNE _0x2060003
                 _0x2060004:
                +
00aaec e0e0     +LDI R30 , LOW ( 0x3A210000 )
00aaed e0f0     +LDI R31 , HIGH ( 0x3A210000 )
00aaee e261     +LDI R22 , BYTE3 ( 0x3A210000 )
00aaef e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
00aaf0 c070      	RJMP _0x20E0021
                 _0x2060003:
00aaf1 940e c28d 	CALL SUBOPT_0x56
00aaf3 940e c2e7 	CALL SUBOPT_0x63
00aaf5 01de      	MOVW R26,R28
00aaf6 9618      	ADIW R26,8
                +
00aaf7 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
00aaf9 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
00aafb 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
00aafd bf6c     +OUT EIND , R22
00aafe 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
00aaff 01fe      	MOVW R30,R28
00ab00 9633      	ADIW R30,3
00ab01 940e d108 	CALL SUBOPT_0x295
00ab03 01de      	MOVW R26,R28
00ab04 9614      	ADIW R26,4
                +
00ab05 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
00ab07 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
00ab09 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
00ab0b bf6c     +OUT EIND , R22
00ab0c 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
00ab0d 81e8      	LD   R30,Y
00ab0e 81f9      	LDD  R31,Y+1
00ab0f 5bec      	SUBI R30,LOW(1980)
00ab10 40f7      	SBCI R31,HIGH(1980)
00ab11 2766      	CLR  R22
00ab12 2777      	CLR  R23
00ab13 01df      	MOVW R26,R30
00ab14 01cb      	MOVW R24,R22
00ab15 e1e9      	LDI  R30,LOW(25)
00ab16 940e dee6 	CALL __LSLD12
00ab18 937f      	PUSH R23
00ab19 936f      	PUSH R22
00ab1a 93ff      	PUSH R31
00ab1b 93ef      	PUSH R30
00ab1c 81ea      	LDD  R30,Y+2
00ab1d 940e d94a 	CALL SUBOPT_0x395
00ab1f 01df      	MOVW R26,R30
00ab20 01cb      	MOVW R24,R22
00ab21 e1e5      	LDI  R30,LOW(21)
00ab22 940e dee6 	CALL __LSLD12
00ab24 91af      	POP  R26
00ab25 91bf      	POP  R27
00ab26 918f      	POP  R24
00ab27 919f      	POP  R25
00ab28 940e decc 	CALL __ORD12
00ab2a 01df      	MOVW R26,R30
00ab2b 01cb      	MOVW R24,R22
00ab2c 81eb      	LDD  R30,Y+3
00ab2d 940e d94a 	CALL SUBOPT_0x395
00ab2f 940e df2d 	CALL __LSLD16
00ab31 940e decc 	CALL __ORD12
00ab33 937f      	PUSH R23
00ab34 936f      	PUSH R22
00ab35 93ff      	PUSH R31
00ab36 93ef      	PUSH R30
00ab37 81ee      	LDD  R30,Y+6
00ab38 940e d94a 	CALL SUBOPT_0x395
00ab3a 01df      	MOVW R26,R30
00ab3b 01cb      	MOVW R24,R22
00ab3c e0eb      	LDI  R30,LOW(11)
00ab3d 940e dee6 	CALL __LSLD12
00ab3f 91af      	POP  R26
00ab40 91bf      	POP  R27
00ab41 918f      	POP  R24
00ab42 919f      	POP  R25
00ab43 940e decc 	CALL __ORD12
00ab45 937f      	PUSH R23
00ab46 936f      	PUSH R22
00ab47 93ff      	PUSH R31
00ab48 93ef      	PUSH R30
00ab49 81ed      	LDD  R30,Y+5
00ab4a 940e d94a 	CALL SUBOPT_0x395
00ab4c 01df      	MOVW R26,R30
00ab4d 01cb      	MOVW R24,R22
00ab4e e0e5      	LDI  R30,LOW(5)
00ab4f 940e dee6 	CALL __LSLD12
00ab51 91af      	POP  R26
00ab52 91bf      	POP  R27
00ab53 918f      	POP  R24
00ab54 919f      	POP  R25
00ab55 940e decc 	CALL __ORD12
00ab57 01df      	MOVW R26,R30
00ab58 01cb      	MOVW R24,R22
00ab59 81ec      	LDD  R30,Y+4
00ab5a e0f0      	LDI  R31,0
00ab5b 95f5      	ASR  R31
00ab5c 95e7      	ROR  R30
00ab5d 940e df38 	CALL __CWD1
00ab5f 940e decc 	CALL __ORD12
                 _0x20E0021:
00ab61 9627      	ADIW R28,7
00ab62 9508      	RET
                 _mem_cpy_G103:
00ab63 940e c3a7 	CALL SUBOPT_0x7F
                +
00ab65 8508     +LDD R16 , Y + 8
00ab66 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00ab67 812e     +LDD R18 , Y + 6
00ab68 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
00ab69 81ec      	LDD  R30,Y+4
00ab6a 81fd      	LDD  R31,Y+4+1
00ab6b 9731      	SBIW R30,1
00ab6c 83ec      	STD  Y+4,R30
00ab6d 83fd      	STD  Y+4+1,R31
00ab6e 9631      	ADIW R30,1
00ab6f f061      	BREQ _0x2060008
00ab70 931f      	PUSH R17
00ab71 930f      	PUSH R16
                +
00ab72 5f0f     +SUBI R16 , LOW ( - 1 )
00ab73 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ab74 01d9      	MOVW R26,R18
                +
00ab75 5f2f     +SUBI R18 , LOW ( - 1 )
00ab76 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ab77 91ec      	LD   R30,X
00ab78 91af      	POP  R26
00ab79 91bf      	POP  R27
00ab7a 93ec      	ST   X,R30
00ab7b cfed      	RJMP _0x2060006
                 _0x2060008:
00ab7c 940e e0d9 	CALL __LOADLOCR4
00ab7e c433      	RJMP _0x20E0018
                 _mem_set_G103:
00ab7f 940e c3b3 	CALL SUBOPT_0x81
                +
00ab81 810e     +LDD R16 , Y + 6
00ab82 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
00ab83 81ea      	LDD  R30,Y+2
00ab84 81fb      	LDD  R31,Y+2+1
00ab85 9731      	SBIW R30,1
00ab86 83ea      	STD  Y+2,R30
00ab87 83fb      	STD  Y+2+1,R31
00ab88 9631      	ADIW R30,1
00ab89 f049      	BREQ _0x206000E
00ab8a 931f      	PUSH R17
00ab8b 930f      	PUSH R16
                +
00ab8c 5f0f     +SUBI R16 , LOW ( - 1 )
00ab8d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ab8e 81ec      	LDD  R30,Y+4
00ab8f 91af      	POP  R26
00ab90 91bf      	POP  R27
00ab91 93ec      	ST   X,R30
00ab92 cff0      	RJMP _0x206000C
                 _0x206000E:
00ab93 8119      	LDD  R17,Y+1
00ab94 8108      	LDD  R16,Y+0
                 _0x20E0020:
00ab95 9628      	ADIW R28,8
00ab96 9508      	RET
                 _mem_cmp_G103:
00ab97 940e caa6 	CALL SUBOPT_0x1A6
                +
00ab99 850a     +LDD R16 , Y + 10
00ab9a 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
00ab9b 8528     +LDD R18 , Y + 8
00ab9c 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
00ab9d e040     +LDI R20 , LOW ( 0 )
00ab9e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
00ab9f 81ee      	LDD  R30,Y+6
00aba0 81ff      	LDD  R31,Y+6+1
00aba1 9731      	SBIW R30,1
00aba2 83ee      	STD  Y+6,R30
00aba3 83ff      	STD  Y+6+1,R31
00aba4 9631      	ADIW R30,1
00aba5 f081      	BREQ _0x2060012
00aba6 01d8      	MOVW R26,R16
                +
00aba7 5f0f     +SUBI R16 , LOW ( - 1 )
00aba8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00aba9 900c      	LD   R0,X
00abaa 2411      	CLR  R1
00abab 01d9      	MOVW R26,R18
                +
00abac 5f2f     +SUBI R18 , LOW ( - 1 )
00abad 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00abae 91ac      	LD   R26,X
00abaf 27bb      	CLR  R27
00abb0 01f0      	MOVW R30,R0
00abb1 1bea      	SUB  R30,R26
00abb2 0bfb      	SBC  R31,R27
00abb3 01af      	MOVW R20,R30
00abb4 9730      	SBIW R30,0
00abb5 f009      	BREQ _0x2060013
                 _0x2060012:
00abb6 c001      	RJMP _0x2060011
                 _0x2060013:
00abb7 cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
00abb8 01fa      	MOVW R30,R20
                 _0x20E001E:
00abb9 940e e0d7 	CALL __LOADLOCR6
00abbb 962c      	ADIW R28,12
00abbc 9508      	RET
                 _chk_chrf_G103:
00abbd 93ba      	ST   -Y,R27
00abbe 93aa      	ST   -Y,R26
                 _0x2060014:
00abbf 940e c4f6 	CALL SUBOPT_0xB3
                +
00abc1 bf6b     +OUT RAMPZ , R22
00abc2 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00abc3 30e0      	CPI  R30,0
00abc4 f051      	BREQ _0x2060017
00abc5 940e c4f6 	CALL SUBOPT_0xB3
                +
00abc7 bf6b     +OUT RAMPZ , R22
00abc8 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00abc9 81e8      	LD   R30,Y
00abca 81f9      	LDD  R31,Y+1
00abcb e0b0      	LDI  R27,0
00abcc 17ea      	CP   R30,R26
00abcd 07fb      	CPC  R31,R27
00abce f409      	BRNE _0x2060018
                 _0x2060017:
00abcf c005      	RJMP _0x2060016
                 _0x2060018:
00abd0 01de      	MOVW R26,R28
00abd1 9612      	ADIW R26,2
00abd2 940e d94e 	CALL SUBOPT_0x396
00abd4 cfea      	RJMP _0x2060014
                 _0x2060016:
00abd5 940e c4f6 	CALL SUBOPT_0xB3
                +
00abd7 bf6b     +OUT RAMPZ , R22
00abd8 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00abd9 e0f0      	LDI  R31,0
                 _0x20E001D:
00abda 9626      	ADIW R28,6
00abdb 9508      	RET
                 _move_window_G103:
00abdc 940e e060 	CALL __PUTPARD2
00abde 9724      	SBIW R28,4
00abdf 931a      	ST   -Y,R17
00abe0 85a9      	LDD  R26,Y+9
00abe1 85ba      	LDD  R27,Y+9+1
00abe2 969e      	ADIW R26,46
00abe3 940e d956 	CALL SUBOPT_0x397
00abe5 940e d95d 	CALL SUBOPT_0x398
00abe7 940e d0f9 	CALL SUBOPT_0x292
00abe9 940e e0c6 	CALL __CPD12
00abeb f411      	BRNE PC+3
00abec 940c ac3e 	JMP _0x2060019
00abee 85e9      	LDD  R30,Y+9
00abef 85fa      	LDD  R31,Y+9+1
00abf0 81e4      	LDD  R30,Z+4
00abf1 30e0      	CPI  R30,0
00abf2 f199      	BREQ _0x206001A
00abf3 940e d962 	CALL SUBOPT_0x399
00abf5 30e0      	CPI  R30,0
00abf6 f011      	BREQ _0x206001B
00abf7 e0e1      	LDI  R30,LOW(1)
00abf8 c046      	RJMP _0x20E001C
                 _0x206001B:
00abf9 85a9      	LDD  R26,Y+9
00abfa 85ba      	LDD  R27,Y+9+1
00abfb 9614      	ADIW R26,4
00abfc e0e0      	LDI  R30,LOW(0)
00abfd 93ec      	ST   X,R30
00abfe 85e9      	LDD  R30,Y+9
00abff 85fa      	LDD  R31,Y+9+1
00ac00 940e d972 	CALL SUBOPT_0x39A
00ac02 010d      	MOVW R0,R26
00ac03 85a9      	LDD  R26,Y+9
00ac04 85ba      	LDD  R27,Y+9+1
00ac05 965a      	ADIW R26,26
00ac06 940e e02b 	CALL __GETD1P
00ac08 01d0      	MOVW R26,R0
00ac09 940e deb3 	CALL __ADDD12
00ac0b 940e d0f9 	CALL SUBOPT_0x292
00ac0d 940e e0cb 	CALL __CPD21
00ac0f f4b0      	BRSH _0x206001C
00ac10 85e9      	LDD  R30,Y+9
00ac11 85fa      	LDD  R31,Y+9+1
00ac12 8113      	LDD  R17,Z+3
                 _0x206001E:
00ac13 3012      	CPI  R17,2
00ac14 f088      	BRLO _0x206001F
00ac15 85a9      	LDD  R26,Y+9
00ac16 85ba      	LDD  R27,Y+9+1
00ac17 965a      	ADIW R26,26
00ac18 940e e02b 	CALL __GETD1P
00ac1a 940e d0f9 	CALL SUBOPT_0x292
00ac1c 940e deb3 	CALL __ADDD12
                +
00ac1e 83e9     +STD Y + 1 , R30
00ac1f 83fa     +STD Y + 1 + 1 , R31
00ac20 836b     +STD Y + 1 + 2 , R22
00ac21 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00ac22 940e d962 	CALL SUBOPT_0x399
00ac24 5011      	SUBI R17,1
00ac25 cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
00ac26 940e d95d 	CALL SUBOPT_0x398
00ac28 940e e0b4 	CALL __CPD10
00ac2a f099      	BREQ _0x2060020
00ac2b 85e9      	LDD  R30,Y+9
00ac2c 85fa      	LDD  R31,Y+9+1
00ac2d 81a1      	LDD  R26,Z+1
00ac2e 93aa      	ST   -Y,R26
00ac2f 85ea      	LDD  R30,Y+10
00ac30 85fb      	LDD  R31,Y+10+1
00ac31 96f2      	ADIW R30,50
00ac32 940e d977 	CALL SUBOPT_0x39B
00ac34 f011      	BREQ _0x2060021
00ac35 e0e1      	LDI  R30,LOW(1)
00ac36 c008      	RJMP _0x20E001C
                 _0x2060021:
00ac37 940e d95d 	CALL SUBOPT_0x398
                +
00ac39 85a9     +LDD R26 , Y + 9
00ac3a 85ba     +LDD R27 , Y + 9 + 1
00ac3b 969e     +ADIW R26 , 46
00ac3c 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
00ac3e e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
00ac3f 8118      	LDD  R17,Y+0
00ac40 962b      	ADIW R28,11
00ac41 9508      	RET
                 _sync_G103:
00ac42 93ba      	ST   -Y,R27
00ac43 93aa      	ST   -Y,R26
00ac44 931a      	ST   -Y,R17
00ac45 81e9      	LDD  R30,Y+1
00ac46 81fa      	LDD  R31,Y+1+1
00ac47 93fa      	ST   -Y,R31
00ac48 93ea      	ST   -Y,R30
00ac49 940e d982 	CALL SUBOPT_0x39C
00ac4b 2f1e      	MOV  R17,R30
00ac4c 3010      	CPI  R17,0
00ac4d f011      	BREQ PC+3
00ac4e 940c acb2 	JMP _0x2060022
00ac50 81a9      	LDD  R26,Y+1
00ac51 81ba      	LDD  R27,Y+1+1
00ac52 91ac      	LD   R26,X
00ac53 30a3      	CPI  R26,LOW(0x3)
00ac54 f429      	BRNE _0x2060024
00ac55 81e9      	LDD  R30,Y+1
00ac56 81fa      	LDD  R31,Y+1+1
00ac57 81e5      	LDD  R30,Z+5
00ac58 30e0      	CPI  R30,0
00ac59 f409      	BRNE _0x2060025
                 _0x2060024:
00ac5a c04b      	RJMP _0x2060023
                 _0x2060025:
00ac5b 81a9      	LDD  R26,Y+1
00ac5c 81ba      	LDD  R27,Y+1+1
00ac5d 969e      	ADIW R26,46
00ac5e 940e c402 	CALL SUBOPT_0x8E
00ac60 81e9      	LDD  R30,Y+1
00ac61 81fa      	LDD  R31,Y+1+1
00ac62 940e d986 	CALL SUBOPT_0x39D
00ac64 81e9      	LDD  R30,Y+1
00ac65 81fa      	LDD  R31,Y+1+1
00ac66 96f2      	ADIW R30,50
00ac67 50e2      	SUBI R30,LOW(-510)
00ac68 4ffe      	SBCI R31,HIGH(-510)
00ac69 e5a5      	LDI  R26,LOW(43605)
00ac6a eaba      	LDI  R27,HIGH(43605)
00ac6b 83a0      	STD  Z+0,R26
00ac6c 83b1      	STD  Z+1,R27
00ac6d 81e9      	LDD  R30,Y+1
00ac6e 81fa      	LDD  R31,Y+1+1
00ac6f 96f2      	ADIW R30,50
                +
00ac70 e5a2     +LDI R26 , LOW ( 0x41615252 )
00ac71 e5b2     +LDI R27 , HIGH ( 0x41615252 )
00ac72 e681     +LDI R24 , BYTE3 ( 0x41615252 )
00ac73 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
00ac74 940e cf8e 	CALL SUBOPT_0x25B
00ac76 81e9      	LDD  R30,Y+1
00ac77 81fa      	LDD  R31,Y+1+1
00ac78 96f2      	ADIW R30,50
00ac79 51ec      	SUBI R30,LOW(-484)
00ac7a 4ffe      	SBCI R31,HIGH(-484)
                +
00ac7b e7a2     +LDI R26 , LOW ( 0x61417272 )
00ac7c e7b2     +LDI R27 , HIGH ( 0x61417272 )
00ac7d e481     +LDI R24 , BYTE3 ( 0x61417272 )
00ac7e e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00ac7f 940e cf8e 	CALL SUBOPT_0x25B
00ac81 81e9      	LDD  R30,Y+1
00ac82 81fa      	LDD  R31,Y+1+1
00ac83 96f2      	ADIW R30,50
00ac84 51e8      	SUBI R30,LOW(-488)
00ac85 4ffe      	SBCI R31,HIGH(-488)
00ac86 010f      	MOVW R0,R30
00ac87 81a9      	LDD  R26,Y+1
00ac88 81ba      	LDD  R27,Y+1+1
00ac89 961e      	ADIW R26,14
00ac8a 940e d991 	CALL SUBOPT_0x39E
00ac8c 96f2      	ADIW R30,50
00ac8d 51e4      	SUBI R30,LOW(-492)
00ac8e 4ffe      	SBCI R31,HIGH(-492)
00ac8f 010f      	MOVW R0,R30
00ac90 81a9      	LDD  R26,Y+1
00ac91 81ba      	LDD  R27,Y+1+1
00ac92 961a      	ADIW R26,10
00ac93 940e d991 	CALL SUBOPT_0x39E
00ac95 81a1      	LDD  R26,Z+1
00ac96 93aa      	ST   -Y,R26
00ac97 81ea      	LDD  R30,Y+2
00ac98 81fb      	LDD  R31,Y+2+1
00ac99 96f2      	ADIW R30,50
00ac9a 93fa      	ST   -Y,R31
00ac9b 93ea      	ST   -Y,R30
00ac9c 81ec      	LDD  R30,Y+4
00ac9d 81fd      	LDD  R31,Y+4+1
00ac9e 940e d999 	CALL SUBOPT_0x39F
00aca0 dbfe      	RCALL _disk_write
00aca1 81a9      	LDD  R26,Y+1
00aca2 81ba      	LDD  R27,Y+1+1
00aca3 9615      	ADIW R26,5
00aca4 e0e0      	LDI  R30,LOW(0)
00aca5 93ec      	ST   X,R30
                 _0x2060023:
00aca6 81e9      	LDD  R30,Y+1
00aca7 81fa      	LDD  R31,Y+1+1
00aca8 81a1      	LDD  R26,Z+1
00aca9 93aa      	ST   -Y,R26
00acaa e0e0      	LDI  R30,LOW(0)
00acab 93ea      	ST   -Y,R30
00acac e0a0      	LDI  R26,LOW(0)
00acad e0b0      	LDI  R27,HIGH(0)
00acae dc67      	RCALL _disk_ioctl
00acaf 30e0      	CPI  R30,0
00acb0 f009      	BREQ _0x2060026
00acb1 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
00acb2 2fe1      	MOV  R30,R17
                 _0x20E001B:
00acb3 8118      	LDD  R17,Y+0
00acb4 9623      	ADIW R28,3
00acb5 9508      	RET
                 _get_fat:
00acb6 940e e060 	CALL __PUTPARD2
00acb8 9724      	SBIW R28,4
00acb9 940e e0d2 	CALL __SAVELOCR4
00acbb 940e c5d9 	CALL SUBOPT_0xD8
00acbd 940e d9a1 	CALL SUBOPT_0x3A0
00acbf f050      	BRLO _0x2060028
00acc0 85ac      	LDD  R26,Y+12
00acc1 85bd      	LDD  R27,Y+12+1
00acc2 965e      	ADIW R26,30
00acc3 940e e02b 	CALL __GETD1P
00acc5 940e c5d9 	CALL SUBOPT_0xD8
00acc7 940e e0cb 	CALL __CPD21
00acc9 f018      	BRLO _0x2060027
                 _0x2060028:
00acca 940e d9a9 	CALL SUBOPT_0x3A1
00accc c071      	RJMP _0x20E001A
                 _0x2060027:
00accd 85ac      	LDD  R26,Y+12
00acce 85bd      	LDD  R27,Y+12+1
00accf 9692      	ADIW R26,34
00acd0 940e d9ae 	CALL SUBOPT_0x3A2
00acd2 85ac      	LDD  R26,Y+12
00acd3 85bd      	LDD  R27,Y+12+1
00acd4 91ec      	LD   R30,X
00acd5 940e cd74 	CALL SUBOPT_0x213
00acd7 f581      	BRNE _0x206002D
                +
00acd8 8528     +LDD R18 , Y + 8
00acd9 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
00acda 01f9      	MOVW R30,R18
00acdb 95f6      	LSR  R31
00acdc 95e7      	ROR  R30
                +
00acdd 0f2e     +ADD R18 , R30
00acde 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
00acdf 940e cad1 	CALL SUBOPT_0x1AD
00ace1 940e d9b2 	CALL SUBOPT_0x3A3
00ace3 940e d9b9 	CALL SUBOPT_0x3A4
00ace5 f009      	BREQ _0x206002E
00ace6 c055      	RJMP _0x206002C
                 _0x206002E:
00ace7 940e d9bf 	CALL SUBOPT_0x3A5
00ace9 910c      	LD   R16,X
00acea 2711      	CLR  R17
                +
00aceb 5f2f     +SUBI R18 , LOW ( - 1 )
00acec 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00aced 940e cad1 	CALL SUBOPT_0x1AD
00acef 940e d9b2 	CALL SUBOPT_0x3A3
00acf1 940e d9b9 	CALL SUBOPT_0x3A4
00acf3 f009      	BREQ _0x206002F
00acf4 c047      	RJMP _0x206002C
                 _0x206002F:
00acf5 940e d9bf 	CALL SUBOPT_0x3A5
00acf7 91ec      	LD   R30,X
00acf8 2ffe      	MOV  R31,R30
00acf9 e0e0      	LDI  R30,0
                +
00acfa 2b0e     +OR R16 , R30
00acfb 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
00acfc 85e8      	LDD  R30,Y+8
00acfd 70e1      	ANDI R30,LOW(0x1)
00acfe f021      	BREQ _0x2060030
00acff 01f8      	MOVW R30,R16
00ad00 940e df10 	CALL __LSRW4
00ad02 c002      	RJMP _0x206022B
                 _0x2060030:
00ad03 01f8      	MOVW R30,R16
00ad04 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
00ad05 2766      	CLR  R22
00ad06 2777      	CLR  R23
00ad07 c036      	RJMP _0x20E001A
                 _0x206002D:
00ad08 30e2      	CPI  R30,LOW(0x2)
00ad09 e0a0      	LDI  R26,HIGH(0x2)
00ad0a 07fa      	CPC  R31,R26
00ad0b f4a9      	BRNE _0x2060033
00ad0c 940e cad1 	CALL SUBOPT_0x1AD
00ad0e 940e c278 	CALL SUBOPT_0x52
00ad10 940e d9c7 	CALL SUBOPT_0x3A6
00ad12 940e c2aa 	CALL SUBOPT_0x59
00ad14 940e d9b9 	CALL SUBOPT_0x3A4
00ad16 f529      	BRNE _0x206002C
00ad17 85a8      	LDD  R26,Y+8
00ad18 85b9      	LDD  R27,Y+8+1
00ad19 e0e2      	LDI  R30,LOW(2)
00ad1a 940e d9ce 	CALL SUBOPT_0x3A7
00ad1c 0fae      	ADD  R26,R30
00ad1d 1fbf      	ADC  R27,R31
00ad1e 940e c10c 	CALL SUBOPT_0x1E
00ad20 c01d      	RJMP _0x20E001A
                 _0x2060033:
00ad21 30e3      	CPI  R30,LOW(0x3)
00ad22 e0a0      	LDI  R26,HIGH(0x3)
00ad23 07fa      	CPC  R31,R26
00ad24 f4b9      	BRNE _0x206002C
00ad25 940e cad1 	CALL SUBOPT_0x1AD
00ad27 940e c278 	CALL SUBOPT_0x52
00ad29 940e d9d5 	CALL SUBOPT_0x3A8
00ad2b 940e c2aa 	CALL SUBOPT_0x59
00ad2d 940e d9b9 	CALL SUBOPT_0x3A4
00ad2f f461      	BRNE _0x206002C
00ad30 85a8      	LDD  R26,Y+8
00ad31 85b9      	LDD  R27,Y+8+1
00ad32 e0e4      	LDI  R30,LOW(4)
00ad33 940e d9ce 	CALL SUBOPT_0x3A7
00ad35 940e c0fc 	CALL SUBOPT_0x1B
                +
00ad37 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00ad38 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00ad39 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00ad3a 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00ad3b c002      	RJMP _0x20E001A
                 _0x206002C:
00ad3c 940e c137 	CALL SUBOPT_0x25
                 _0x20E001A:
00ad3e 940e e0d9 	CALL __LOADLOCR4
00ad40 962e      	ADIW R28,14
00ad41 9508      	RET
                 _put_fat:
00ad42 940e e060 	CALL __PUTPARD2
00ad44 9724      	SBIW R28,4
00ad45 940e e0d0 	CALL __SAVELOCR6
00ad47 940e d9dc 	CALL SUBOPT_0x3A9
00ad49 940e d9a1 	CALL SUBOPT_0x3A0
00ad4b f050      	BRLO _0x2060038
00ad4c 89aa      	LDD  R26,Y+18
00ad4d 89bb      	LDD  R27,Y+18+1
00ad4e 965e      	ADIW R26,30
00ad4f 940e e02b 	CALL __GETD1P
00ad51 940e d9dc 	CALL SUBOPT_0x3A9
00ad53 940e e0cb 	CALL __CPD21
00ad55 f010      	BRLO _0x2060037
                 _0x2060038:
00ad56 e052      	LDI  R21,LOW(2)
00ad57 c08a      	RJMP _0x206003A
                 _0x2060037:
00ad58 89aa      	LDD  R26,Y+18
00ad59 89bb      	LDD  R27,Y+18+1
00ad5a 9692      	ADIW R26,34
00ad5b 940e e02b 	CALL __GETD1P
00ad5d 940e c505 	CALL SUBOPT_0xB6
00ad5f 89aa      	LDD  R26,Y+18
00ad60 89bb      	LDD  R27,Y+18+1
00ad61 91ec      	LD   R30,X
00ad62 940e cd74 	CALL SUBOPT_0x213
00ad64 f011      	BREQ PC+3
00ad65 940c adae 	JMP _0x206003E
                +
00ad67 850e     +LDD R16 , Y + 14
00ad68 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
00ad69 01f8      	MOVW R30,R16
00ad6a 95f6      	LSR  R31
00ad6b 95e7      	ROR  R30
                +
00ad6c 0f0e     +ADD R16 , R30
00ad6d 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00ad6e 940e d18d 	CALL SUBOPT_0x2A8
00ad70 940e d9e1 	CALL SUBOPT_0x3AA
00ad72 f009      	BREQ _0x206003F
00ad73 c069      	RJMP _0x206003D
                 _0x206003F:
00ad74 940e d9f1 	CALL SUBOPT_0x3AB
00ad76 f051      	BREQ _0x2060040
00ad77 01d9      	MOVW R26,R18
00ad78 91ec      	LD   R30,X
00ad79 70ef      	ANDI R30,LOW(0xF)
00ad7a 2fae      	MOV  R26,R30
00ad7b 85ea      	LDD  R30,Y+10
00ad7c e0f0      	LDI  R31,0
00ad7d 940e defe 	CALL __LSLW4
00ad7f 2bea      	OR   R30,R26
00ad80 c001      	RJMP _0x2060041
                 _0x2060040:
00ad81 85ea      	LDD  R30,Y+10
                 _0x2060041:
00ad82 01d9      	MOVW R26,R18
00ad83 93ec      	ST   X,R30
                +
00ad84 5f0f     +SUBI R16 , LOW ( - 1 )
00ad85 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ad86 89aa      	LDD  R26,Y+18
00ad87 89bb      	LDD  R27,Y+18+1
00ad88 9614      	ADIW R26,4
00ad89 e0e1      	LDI  R30,LOW(1)
00ad8a 93ec      	ST   X,R30
00ad8b 940e d18d 	CALL SUBOPT_0x2A8
00ad8d 940e d9e1 	CALL SUBOPT_0x3AA
00ad8f f009      	BREQ _0x2060043
00ad90 c04c      	RJMP _0x206003D
                 _0x2060043:
00ad91 940e d9f1 	CALL SUBOPT_0x3AB
00ad93 f049      	BREQ _0x2060044
00ad94 940e c278 	CALL SUBOPT_0x52
00ad96 e0e4      	LDI  R30,LOW(4)
00ad97 940e def2 	CALL __LSRD12
00ad99 27ff      	CLR  R31
00ad9a 2766      	CLR  R22
00ad9b 2777      	CLR  R23
00ad9c c00e      	RJMP _0x2060045
                 _0x2060044:
00ad9d 01d9      	MOVW R26,R18
00ad9e 91ec      	LD   R30,X
00ad9f 7fe0      	ANDI R30,LOW(0xF0)
00ada0 2e1e      	MOV  R1,R30
00ada1 940e c278 	CALL SUBOPT_0x52
00ada3 e0e8      	LDI  R30,LOW(8)
00ada4 940e def2 	CALL __LSRD12
00ada6 27ff      	CLR  R31
00ada7 2766      	CLR  R22
00ada8 2777      	CLR  R23
00ada9 70ef      	ANDI R30,LOW(0xF)
00adaa 29e1      	OR   R30,R1
                 _0x2060045:
00adab 01d9      	MOVW R26,R18
00adac 93ec      	ST   X,R30
00adad c02f      	RJMP _0x206003D
                 _0x206003E:
00adae 30e2      	CPI  R30,LOW(0x2)
00adaf e0a0      	LDI  R26,HIGH(0x2)
00adb0 07fa      	CPC  R31,R26
00adb1 f499      	BRNE _0x2060047
00adb2 940e d18d 	CALL SUBOPT_0x2A8
00adb4 940e cd9b 	CALL SUBOPT_0x218
00adb6 940e d9c7 	CALL SUBOPT_0x3A6
00adb8 940e d9fc 	CALL SUBOPT_0x3AC
00adba f511      	BRNE _0x206003D
00adbb 85ae      	LDD  R26,Y+14
00adbc 85bf      	LDD  R27,Y+14+1
00adbd e0e2      	LDI  R30,LOW(2)
00adbe 940e da05 	CALL SUBOPT_0x3AD
00adc0 85aa      	LDD  R26,Y+10
00adc1 85bb      	LDD  R27,Y+10+1
00adc2 83a0      	STD  Z+0,R26
00adc3 83b1      	STD  Z+1,R27
00adc4 c018      	RJMP _0x206003D
                 _0x2060047:
00adc5 30e3      	CPI  R30,LOW(0x3)
00adc6 e0a0      	LDI  R26,HIGH(0x3)
00adc7 07fa      	CPC  R31,R26
00adc8 f499      	BRNE _0x206004B
00adc9 940e d18d 	CALL SUBOPT_0x2A8
00adcb 940e cd9b 	CALL SUBOPT_0x218
00adcd 940e d9d5 	CALL SUBOPT_0x3A8
00adcf 940e d9fc 	CALL SUBOPT_0x3AC
00add1 f459      	BRNE _0x206003D
00add2 85ae      	LDD  R26,Y+14
00add3 85bf      	LDD  R27,Y+14+1
00add4 e0e4      	LDI  R30,LOW(4)
00add5 940e da05 	CALL SUBOPT_0x3AD
00add7 940e c278 	CALL SUBOPT_0x52
00add9 940e cf8e 	CALL SUBOPT_0x25B
00addb c001      	RJMP _0x206003D
                 _0x206004B:
00addc e052      	LDI  R21,LOW(2)
                 _0x206003D:
00addd 89aa      	LDD  R26,Y+18
00adde 89bb      	LDD  R27,Y+18+1
00addf 9614      	ADIW R26,4
00ade0 e0e1      	LDI  R30,LOW(1)
00ade1 93ec      	ST   X,R30
                 _0x206003A:
00ade2 2fe5      	MOV  R30,R21
00ade3 940e e0d7 	CALL __LOADLOCR6
00ade5 9664      	ADIW R28,20
00ade6 9508      	RET
                 _remove_chain_G103:
00ade7 940e e060 	CALL __PUTPARD2
00ade9 9724      	SBIW R28,4
00adea 931a      	ST   -Y,R17
00adeb 940e da0e 	CALL SUBOPT_0x3AE
00aded 940e d9a1 	CALL SUBOPT_0x3A0
00adef f018      	BRLO _0x206004D
00adf0 940e da13 	CALL SUBOPT_0x3AF
00adf2 f010      	BRLO _0x206004C
                 _0x206004D:
00adf3 e012      	LDI  R17,LOW(2)
00adf4 c03e      	RJMP _0x206004F
                 _0x206004C:
00adf5 e010      	LDI  R17,LOW(0)
                 _0x2060050:
00adf6 940e da13 	CALL SUBOPT_0x3AF
00adf8 f5d0      	BRSH _0x2060052
00adf9 940e ca40 	CALL SUBOPT_0x193
00adfb 940e c2fe 	CALL SUBOPT_0x67
00adfd deb8      	RCALL _get_fat
                +
00adfe 83e9     +STD Y + 1 , R30
00adff 83fa     +STD Y + 1 + 1 , R31
00ae00 836b     +STD Y + 1 + 2 , R22
00ae01 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00ae02 940e da1c 	CALL SUBOPT_0x3B0
00ae04 940e e0b4 	CALL __CPD10
00ae06 f161      	BREQ _0x2060052
00ae07 940e d0f9 	CALL SUBOPT_0x292
00ae09 940e da21 	CALL SUBOPT_0x3B1
00ae0b f411      	BRNE _0x2060054
00ae0c e012      	LDI  R17,LOW(2)
00ae0d c025      	RJMP _0x2060052
                 _0x2060054:
00ae0e 940e d0f9 	CALL SUBOPT_0x292
00ae10 940e c1ca 	CALL SUBOPT_0x3A
00ae12 f411      	BRNE _0x2060055
00ae13 e011      	LDI  R17,LOW(1)
00ae14 c01e      	RJMP _0x2060052
                 _0x2060055:
00ae15 940e ca40 	CALL SUBOPT_0x193
00ae17 940e c1fe 	CALL SUBOPT_0x3F
00ae19 940e c164 	CALL SUBOPT_0x2C
00ae1b df26      	RCALL _put_fat
00ae1c 2f1e      	MOV  R17,R30
00ae1d 3010      	CPI  R17,0
00ae1e f4a1      	BRNE _0x2060052
00ae1f 85e9      	LDD  R30,Y+9
00ae20 85fa      	LDD  R31,Y+9+1
00ae21 940e da29 	CALL SUBOPT_0x3B2
00ae23 f051      	BREQ _0x2060057
00ae24 85a9      	LDD  R26,Y+9
00ae25 85ba      	LDD  R27,Y+9+1
00ae26 961e      	ADIW R26,14
00ae27 940e c429 	CALL SUBOPT_0x92
00ae29 85a9      	LDD  R26,Y+9
00ae2a 85ba      	LDD  R27,Y+9+1
00ae2b 9615      	ADIW R26,5
00ae2c e0e1      	LDI  R30,LOW(1)
00ae2d 93ec      	ST   X,R30
                 _0x2060057:
00ae2e 940e da1c 	CALL SUBOPT_0x3B0
00ae30 940e da2f 	CALL SUBOPT_0x3B3
00ae32 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00ae33 2fe1      	MOV  R30,R17
00ae34 8118      	LDD  R17,Y+0
00ae35 c26f      	RJMP _0x20E0016
                 _create_chain_G103:
00ae36 940e e060 	CALL __PUTPARD2
00ae38 9760      	SBIW R28,16
00ae39 89ac      	LDD  R26,Y+20
00ae3a 89bd      	LDD  R27,Y+20+1
00ae3b 965e      	ADIW R26,30
00ae3c 940e e02b 	CALL __GETD1P
00ae3e 940e c494 	CALL SUBOPT_0xA0
00ae40 940e c08d 	CALL SUBOPT_0xC
00ae42 940e e0b4 	CALL __CPD10
00ae44 f4b1      	BRNE _0x2060058
00ae45 89ac      	LDD  R26,Y+20
00ae46 89bd      	LDD  R27,Y+20+1
00ae47 961a      	ADIW R26,10
00ae48 940e d9ae 	CALL SUBOPT_0x3A2
00ae4a 940e c4c2 	CALL SUBOPT_0xA9
00ae4c 940e e0c0 	CALL __CPD02
00ae4e f039      	BREQ _0x206005A
00ae4f 940e c3d9 	CALL SUBOPT_0x87
00ae51 940e c4c2 	CALL SUBOPT_0xA9
00ae53 940e e0cb 	CALL __CPD21
00ae55 f020      	BRLO _0x2060059
                 _0x206005A:
00ae56 940e d9a9 	CALL SUBOPT_0x3A1
00ae58 940e c4bd 	CALL SUBOPT_0xA8
                 _0x2060059:
00ae5a c01d      	RJMP _0x206005C
                 _0x2060058:
00ae5b 940e da34 	CALL SUBOPT_0x3B4
00ae5d 940e cf36 	CALL SUBOPT_0x24E
00ae5f de56      	RCALL _get_fat
00ae60 940e c64f 	CALL SUBOPT_0xEA
00ae62 940e c088 	CALL SUBOPT_0xB
00ae64 940e d9a1 	CALL SUBOPT_0x3A0
00ae66 f418      	BRSH _0x206005D
00ae67 940e d9a9 	CALL SUBOPT_0x3A1
00ae69 c083      	RJMP _0x20E0019
                 _0x206005D:
00ae6a 940e c3d9 	CALL SUBOPT_0x87
00ae6c 940e c088 	CALL SUBOPT_0xB
00ae6e 940e e0cb 	CALL __CPD21
00ae70 f418      	BRSH _0x206005E
00ae71 940e c5de 	CALL SUBOPT_0xD9
00ae73 c079      	RJMP _0x20E0019
                 _0x206005E:
00ae74 940e c08d 	CALL SUBOPT_0xC
00ae76 940e c4bd 	CALL SUBOPT_0xA8
                 _0x206005C:
00ae78 940e c3e5 	CALL SUBOPT_0x89
00ae7a 940e d79d 	CALL SUBOPT_0x35B
                 _0x2060060:
00ae7c 940e c25f 	CALL SUBOPT_0x4F
00ae7e 940e c527 	CALL SUBOPT_0xBC
00ae80 940e d79d 	CALL SUBOPT_0x35B
00ae82 940e c3d9 	CALL SUBOPT_0x87
00ae84 940e c5d9 	CALL SUBOPT_0xD8
00ae86 940e e0cb 	CALL __CPD21
00ae88 f050      	BRLO _0x2060062
00ae89 940e da39 	CALL SUBOPT_0x3B5
00ae8b 940e d79d 	CALL SUBOPT_0x35B
00ae8d 940e da3e 	CALL SUBOPT_0x3B6
00ae8f f418      	BRSH _0x2060063
00ae90 940e da45 	CALL SUBOPT_0x3B7
00ae92 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00ae93 940e da34 	CALL SUBOPT_0x3B4
00ae95 940e c278 	CALL SUBOPT_0x52
00ae97 de1e      	RCALL _get_fat
00ae98 940e c659 	CALL SUBOPT_0xEC
00ae9a 940e e0b4 	CALL __CPD10
00ae9c f091      	BREQ _0x2060061
00ae9d 940e c2ba 	CALL SUBOPT_0x5C
00ae9f f029      	BREQ _0x2060066
00aea0 940e c088 	CALL SUBOPT_0xB
00aea2 940e da21 	CALL SUBOPT_0x3B1
00aea4 f419      	BRNE _0x2060065
                 _0x2060066:
00aea5 940e c5de 	CALL SUBOPT_0xD9
00aea7 c045      	RJMP _0x20E0019
                 _0x2060065:
00aea8 940e da3e 	CALL SUBOPT_0x3B6
00aeaa f419      	BRNE _0x2060068
00aeab 940e da45 	CALL SUBOPT_0x3B7
00aead c03f      	RJMP _0x20E0019
                 _0x2060068:
00aeae cfcd      	RJMP _0x2060060
                 _0x2060061:
00aeaf 940e da34 	CALL SUBOPT_0x3B4
00aeb1 940e d715 	CALL SUBOPT_0x347
                +
00aeb3 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00aeb4 efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00aeb5 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00aeb6 e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00aeb7 de8a      	RCALL _put_fat
00aeb8 30e0      	CPI  R30,0
00aeb9 f019      	BREQ _0x2060069
00aeba 940e c137 	CALL SUBOPT_0x25
00aebc c030      	RJMP _0x20E0019
                 _0x2060069:
00aebd 940e c08d 	CALL SUBOPT_0xC
00aebf 940e e0b4 	CALL __CPD10
00aec1 f071      	BREQ _0x206006A
00aec2 940e da34 	CALL SUBOPT_0x3B4
00aec4 940e c5c8 	CALL SUBOPT_0xD4
00aec6 940e e05b 	CALL __PUTPARD1
00aec8 940e d9dc 	CALL SUBOPT_0x3A9
00aeca de77      	RCALL _put_fat
00aecb 30e0      	CPI  R30,0
00aecc f019      	BREQ _0x206006B
00aecd 940e c137 	CALL SUBOPT_0x25
00aecf c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00aed0 940e c25f 	CALL SUBOPT_0x4F
                +
00aed2 89ac     +LDD R26 , Y + 20
00aed3 89bd     +LDD R27 , Y + 20 + 1
00aed4 961a     +ADIW R26 , 10
00aed5 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00aed7 89ec      	LDD  R30,Y+20
00aed8 89fd      	LDD  R31,Y+20+1
00aed9 940e da29 	CALL SUBOPT_0x3B2
00aedb f079      	BREQ _0x206006C
00aedc 89ac      	LDD  R26,Y+20
00aedd 89bd      	LDD  R27,Y+20+1
00aede 961e      	ADIW R26,14
00aedf 940e e031 	CALL __GETD1P_INC
00aee1 9731      	SBIW R30,1
00aee2 4060      	SBCI R22,0
00aee3 4070      	SBCI R23,0
00aee4 940e e03b 	CALL __PUTDP1_DEC
00aee6 89ac      	LDD  R26,Y+20
00aee7 89bd      	LDD  R27,Y+20+1
00aee8 9615      	ADIW R26,5
00aee9 e0e1      	LDI  R30,LOW(1)
00aeea 93ec      	ST   X,R30
                 _0x206006C:
00aeeb 940e c25f 	CALL SUBOPT_0x4F
                 _0x20E0019:
00aeed 9666      	ADIW R28,22
00aeee 9508      	RET
                 _clust2sect:
00aeef 940e e060 	CALL __PUTPARD2
00aef1 940e c3d9 	CALL SUBOPT_0x87
                +
00aef3 50e2     +SUBI R30 , LOW ( 2 )
00aef4 40f0     +SBCI R31 , HIGH ( 2 )
00aef5 4060     +SBCI R22 , BYTE3 ( 2 )
00aef6 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00aef7 940e c494 	CALL SUBOPT_0xA0
00aef9 81ec      	LDD  R30,Y+4
00aefa 81fd      	LDD  R31,Y+4+1
                +
00aefb 8da6     +LDD R26 , Z + 30
00aefc 8db7     +LDD R27 , Z + 30 + 1
00aefd a180     +LDD R24 , Z + 30 + 2
00aefe a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00aeff 940e da39 	CALL SUBOPT_0x3B5
00af01 940e c53d 	CALL SUBOPT_0xC0
00af03 940e c3f8 	CALL SUBOPT_0x8C
00af05 940e e0cb 	CALL __CPD21
00af07 f018      	BRLO _0x206006D
00af08 940e da45 	CALL SUBOPT_0x3B7
00af0a c38f      	RJMP _0x20E0012
                 _0x206006D:
00af0b 81ec      	LDD  R30,Y+4
00af0c 81fd      	LDD  R31,Y+4+1
00af0d 940e d0f6 	CALL SUBOPT_0x291
00af0f 940e c3f8 	CALL SUBOPT_0x8C
00af11 940e d0fe 	CALL SUBOPT_0x293
00af13 937f      	PUSH R23
00af14 936f      	PUSH R22
00af15 93ff      	PUSH R31
00af16 93ef      	PUSH R30
00af17 81ac      	LDD  R26,Y+4
00af18 81bd      	LDD  R27,Y+4+1
00af19 969a      	ADIW R26,42
00af1a 940e e02b 	CALL __GETD1P
00af1c 91af      	POP  R26
00af1d 91bf      	POP  R27
00af1e 918f      	POP  R24
00af1f 919f      	POP  R25
00af20 940e deb3 	CALL __ADDD12
00af22 c377      	RJMP _0x20E0012
                 _dir_seek_G103:
00af23 940e c664 	CALL SUBOPT_0xEE
00af25 930a      	ST   -Y,R16
00af26 81ee      	LDD  R30,Y+6
00af27 81ff      	LDD  R31,Y+6+1
                +
00af28 85a8     +LDD R26 , Y + 8
00af29 85b9     +LDD R27 , Y + 8 + 1
00af2a 9614     +ADIW R26 , 4
00af2b 93ed     +ST X + , R30
00af2c 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00af2d 85a8      	LDD  R26,Y+8
00af2e 85b9      	LDD  R27,Y+8+1
00af2f 9616      	ADIW R26,6
00af30 940e e02b 	CALL __GETD1P
00af32 940e c669 	CALL SUBOPT_0xEF
00af34 940e da21 	CALL SUBOPT_0x3B1
00af36 f029      	BREQ _0x206006F
00af37 940e da4a 	CALL SUBOPT_0x3B8
00af39 940e da4f 	CALL SUBOPT_0x3B9
00af3b f010      	BRLO _0x206006E
                 _0x206006F:
00af3c e0e2      	LDI  R30,LOW(2)
00af3d c072      	RJMP _0x20E0017
                 _0x206006E:
00af3e 940e cc77 	CALL SUBOPT_0x1F2
00af40 f429      	BRNE _0x2060072
00af41 940e da4a 	CALL SUBOPT_0x3B8
00af43 81a0      	LD   R26,Z
00af44 30a3      	CPI  R26,LOW(0x3)
00af45 f009      	BREQ _0x2060073
                 _0x2060072:
00af46 c008      	RJMP _0x2060071
                 _0x2060073:
00af47 940e da4a 	CALL SUBOPT_0x3B8
00af49 96b6      	ADIW R30,38
00af4a 01df      	MOVW R26,R30
00af4b 940e e02b 	CALL __GETD1P
00af4d 940e c4f1 	CALL SUBOPT_0xB2
                 _0x2060071:
00af4f 940e cc77 	CALL SUBOPT_0x1F2
00af51 f491      	BRNE _0x2060074
00af52 940e da58 	CALL SUBOPT_0x3BA
00af54 940e da4a 	CALL SUBOPT_0x3B8
00af56 9638      	ADIW R30,8
00af57 01df      	MOVW R26,R30
00af58 940e c9dd 	CALL SUBOPT_0x181
00af5a f010      	BRLO _0x2060075
00af5b e0e2      	LDI  R30,LOW(2)
00af5c c053      	RJMP _0x20E0017
                 _0x2060075:
00af5d 940e da4a 	CALL SUBOPT_0x3B8
00af5f 96b6      	ADIW R30,38
00af60 01df      	MOVW R26,R30
00af61 940e e02b 	CALL __GETD1P
00af63 c031      	RJMP _0x206022C
                 _0x2060074:
00af64 940e da4a 	CALL SUBOPT_0x3B8
00af66 81e2      	LDD  R30,Z+2
00af67 e1a0      	LDI  R26,LOW(16)
00af68 9fea      	MUL  R30,R26
00af69 0180      	MOVW R16,R0
                 _0x2060077:
00af6a 81ae      	LDD  R26,Y+6
00af6b 81bf      	LDD  R27,Y+6+1
00af6c 17a0      	CP   R26,R16
00af6d 07b1      	CPC  R27,R17
00af6e f0f8      	BRLO _0x2060079
00af6f 940e da60 	CALL SUBOPT_0x3BB
00af71 940e c4c2 	CALL SUBOPT_0xA9
00af73 dd42      	RCALL _get_fat
00af74 940e c669 	CALL SUBOPT_0xEF
00af76 940e c1ca 	CALL SUBOPT_0x3A
00af78 f411      	BRNE _0x206007A
00af79 e0e1      	LDI  R30,LOW(1)
00af7a c035      	RJMP _0x20E0017
                 _0x206007A:
00af7b 940e c4fb 	CALL SUBOPT_0xB4
00af7d 940e d9a1 	CALL SUBOPT_0x3A0
00af7f f028      	BRLO _0x206007C
00af80 940e da4a 	CALL SUBOPT_0x3B8
00af82 940e da4f 	CALL SUBOPT_0x3B9
00af84 f010      	BRLO _0x206007B
                 _0x206007C:
00af85 e0e2      	LDI  R30,LOW(2)
00af86 c029      	RJMP _0x20E0017
                 _0x206007B:
00af87 81ee      	LDD  R30,Y+6
00af88 81ff      	LDD  R31,Y+6+1
00af89 1be0      	SUB  R30,R16
00af8a 0bf1      	SBC  R31,R17
00af8b 83ee      	STD  Y+6,R30
00af8c 83ff      	STD  Y+6+1,R31
00af8d cfdc      	RJMP _0x2060077
                 _0x2060079:
00af8e 940e da58 	CALL SUBOPT_0x3BA
00af90 940e da60 	CALL SUBOPT_0x3BB
00af92 940e c4c2 	CALL SUBOPT_0xA9
00af94 df5a      	RCALL _clust2sect
                 _0x206022C:
00af95 01df      	MOVW R26,R30
00af96 01cb      	MOVW R24,R22
00af97 81ee      	LDD  R30,Y+6
00af98 81ff      	LDD  R31,Y+6+1
00af99 940e df10 	CALL __LSRW4
00af9b 940e da63 	CALL SUBOPT_0x3BC
                +
00af9d 85a8     +LDD R26 , Y + 8
00af9e 85b9     +LDD R27 , Y + 8 + 1
00af9f 961e     +ADIW R26 , 14
00afa0 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00afa2 940e da4a 	CALL SUBOPT_0x3B8
00afa4 96f2      	ADIW R30,50
00afa5 01df      	MOVW R26,R30
00afa6 81ee      	LDD  R30,Y+6
00afa7 81ff      	LDD  R31,Y+6+1
00afa8 940e da68 	CALL SUBOPT_0x3BD
                +
00afaa 85a8     +LDD R26 , Y + 8
00afab 85b9     +LDD R27 , Y + 8 + 1
00afac 9652     +ADIW R26 , 18
00afad 93ed     +ST X + , R30
00afae 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00afaf e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00afb0 8119      	LDD  R17,Y+1
00afb1 8108      	LDD  R16,Y+0
                 _0x20E0018:
00afb2 962a      	ADIW R28,10
00afb3 9508      	RET
                 _dir_next_G103:
00afb4 93aa      	ST   -Y,R26
00afb5 9724      	SBIW R28,4
00afb6 940e e0d2 	CALL __SAVELOCR4
00afb8 85a9      	LDD  R26,Y+9
00afb9 85ba      	LDD  R27,Y+9+1
00afba 9614      	ADIW R26,4
00afbb 940e e027 	CALL __GETW1P
00afbd 9631      	ADIW R30,1
00afbe 018f      	MOVW R16,R30
00afbf 2e00      	MOV  R0,R16
00afc0 2a01      	OR   R0,R17
00afc1 f031      	BREQ _0x206007F
00afc2 85a9      	LDD  R26,Y+9
00afc3 85ba      	LDD  R27,Y+9+1
00afc4 961e      	ADIW R26,14
00afc5 940e da70 	CALL SUBOPT_0x3BE
00afc7 f411      	BRNE _0x206007E
                 _0x206007F:
00afc8 e0e4      	LDI  R30,LOW(4)
00afc9 c0d9      	RJMP _0x20E0015
                 _0x206007E:
00afca 01f8      	MOVW R30,R16
00afcb 70ef      	ANDI R30,LOW(0xF)
00afcc f011      	BREQ PC+3
00afcd 940c b090 	JMP _0x2060081
00afcf 85a9      	LDD  R26,Y+9
00afd0 85ba      	LDD  R27,Y+9+1
00afd1 961e      	ADIW R26,14
00afd2 940e c429 	CALL SUBOPT_0x92
00afd4 85a9      	LDD  R26,Y+9
00afd5 85ba      	LDD  R27,Y+9+1
00afd6 961a      	ADIW R26,10
00afd7 940e da70 	CALL SUBOPT_0x3BE
00afd9 f451      	BRNE _0x2060082
00afda 940e da75 	CALL SUBOPT_0x3BF
00afdc 9638      	ADIW R30,8
00afdd 01df      	MOVW R26,R30
00afde 940e cbc6 	CALL SUBOPT_0x1D1
00afe0 f010      	BRLO _0x2060083
00afe1 e0e4      	LDI  R30,LOW(4)
00afe2 c0c0      	RJMP _0x20E0015
                 _0x2060083:
00afe3 c0ac      	RJMP _0x2060084
                 _0x2060082:
00afe4 01f8      	MOVW R30,R16
00afe5 940e df10 	CALL __LSRW4
00afe7 010f      	MOVW R0,R30
00afe8 940e da75 	CALL SUBOPT_0x3BF
00afea 940e d0f6 	CALL SUBOPT_0x291
00afec 9731      	SBIW R30,1
00afed 21e0      	AND  R30,R0
00afee 21f1      	AND  R31,R1
00afef 9730      	SBIW R30,0
00aff0 f011      	BREQ PC+3
00aff1 940c b090 	JMP _0x2060085
00aff3 940e da7a 	CALL SUBOPT_0x3C0
00aff5 940e da7d 	CALL SUBOPT_0x3C1
00aff7 dcbe      	RCALL _get_fat
00aff8 940e c4bd 	CALL SUBOPT_0xA8
00affa 940e c4c2 	CALL SUBOPT_0xA9
00affc 940e d9a1 	CALL SUBOPT_0x3A0
00affe f410      	BRSH _0x2060086
00afff e0e2      	LDI  R30,LOW(2)
00b000 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00b001 940e c4c2 	CALL SUBOPT_0xA9
00b003 940e c1ca 	CALL SUBOPT_0x3A
00b005 f411      	BRNE _0x2060087
00b006 e0e1      	LDI  R30,LOW(1)
00b007 c09b      	RJMP _0x20E0015
                 _0x2060087:
00b008 940e da75 	CALL SUBOPT_0x3BF
00b00a 940e da84 	CALL SUBOPT_0x3C2
00b00c 940e c4c2 	CALL SUBOPT_0xA9
00b00e 940e e0cb 	CALL __CPD21
00b010 f410      	BRSH PC+3
00b011 940c b07f 	JMP _0x2060088
00b013 85e8      	LDD  R30,Y+8
00b014 30e0      	CPI  R30,0
00b015 f411      	BRNE _0x2060089
00b016 e0e4      	LDI  R30,LOW(4)
00b017 c08b      	RJMP _0x20E0015
                 _0x2060089:
00b018 940e da7a 	CALL SUBOPT_0x3C0
00b01a 940e da7d 	CALL SUBOPT_0x3C1
00b01c de19      	RCALL _create_chain_G103
00b01d 940e c4dc 	CALL SUBOPT_0xAE
00b01f 940e e0b4 	CALL __CPD10
00b021 f411      	BRNE _0x206008A
00b022 e0e7      	LDI  R30,LOW(7)
00b023 c07f      	RJMP _0x20E0015
                 _0x206008A:
00b024 940e c4c2 	CALL SUBOPT_0xA9
00b026 940e da21 	CALL SUBOPT_0x3B1
00b028 f411      	BRNE _0x206008B
00b029 e0e2      	LDI  R30,LOW(2)
00b02a c078      	RJMP _0x20E0015
                 _0x206008B:
00b02b 940e c4c2 	CALL SUBOPT_0xA9
00b02d 940e c1ca 	CALL SUBOPT_0x3A
00b02f f411      	BRNE _0x206008C
00b030 e0e1      	LDI  R30,LOW(1)
00b031 c071      	RJMP _0x20E0015
                 _0x206008C:
00b032 940e da7a 	CALL SUBOPT_0x3C0
00b034 940e d982 	CALL SUBOPT_0x39C
00b036 30e0      	CPI  R30,0
00b037 f011      	BREQ _0x206008D
00b038 e0e1      	LDI  R30,LOW(1)
00b039 c069      	RJMP _0x20E0015
                 _0x206008D:
00b03a 940e da75 	CALL SUBOPT_0x3BF
00b03c 940e d986 	CALL SUBOPT_0x39D
00b03e 940e da75 	CALL SUBOPT_0x3BF
00b040 01df      	MOVW R26,R30
00b041 96be      	ADIW R30,46
00b042 93ff      	PUSH R31
00b043 93ef      	PUSH R30
00b044 01fd      	MOVW R30,R26
00b045 93fa      	ST   -Y,R31
00b046 93ea      	ST   -Y,R30
00b047 940e c2aa 	CALL SUBOPT_0x59
00b049 dea5      	RCALL _clust2sect
00b04a 91af      	POP  R26
00b04b 91bf      	POP  R27
00b04c 940e e036 	CALL __PUTDP1
00b04e e030      	LDI  R19,LOW(0)
                 _0x206008F:
00b04f 940e da75 	CALL SUBOPT_0x3BF
00b051 81e2      	LDD  R30,Z+2
00b052 173e      	CP   R19,R30
00b053 f4c0      	BRSH _0x2060090
00b054 940e da75 	CALL SUBOPT_0x3BF
00b056 9634      	ADIW R30,4
00b057 e0a1      	LDI  R26,LOW(1)
00b058 83a0      	STD  Z+0,R26
00b059 940e da7a 	CALL SUBOPT_0x3C0
00b05b 940e d982 	CALL SUBOPT_0x39C
00b05d 30e0      	CPI  R30,0
00b05e f011      	BREQ _0x2060091
00b05f e0e1      	LDI  R30,LOW(1)
00b060 c042      	RJMP _0x20E0015
                 _0x2060091:
00b061 940e da75 	CALL SUBOPT_0x3BF
00b063 96be      	ADIW R30,46
00b064 01df      	MOVW R26,R30
00b065 940e c429 	CALL SUBOPT_0x92
00b067 9731      	SBIW R30,1
00b068 4060      	SBCI R22,0
00b069 4070      	SBCI R23,0
00b06a 5f3f      	SUBI R19,-1
00b06b cfe3      	RJMP _0x206008F
                 _0x2060090:
00b06c 940e da75 	CALL SUBOPT_0x3BF
00b06e 96be      	ADIW R30,46
00b06f 93ff      	PUSH R31
00b070 93ef      	PUSH R30
00b071 01df      	MOVW R26,R30
00b072 940e e02b 	CALL __GETD1P
00b074 01df      	MOVW R26,R30
00b075 01cb      	MOVW R24,R22
00b076 2fe3      	MOV  R30,R19
00b077 940e d94a 	CALL SUBOPT_0x395
00b079 940e c53d 	CALL SUBOPT_0xC0
00b07b 91af      	POP  R26
00b07c 91bf      	POP  R27
00b07d 940e e036 	CALL __PUTDP1
                 _0x2060088:
00b07f 940e c3e5 	CALL SUBOPT_0x89
                +
00b081 85a9     +LDD R26 , Y + 9
00b082 85ba     +LDD R27 , Y + 9 + 1
00b083 961a     +ADIW R26 , 10
00b084 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00b086 940e da7a 	CALL SUBOPT_0x3C0
00b088 940e c2aa 	CALL SUBOPT_0x59
00b08a de64      	RCALL _clust2sect
                +
00b08b 85a9     +LDD R26 , Y + 9
00b08c 85ba     +LDD R27 , Y + 9 + 1
00b08d 961e     +ADIW R26 , 14
00b08e 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00b090 01f8      	MOVW R30,R16
                +
00b091 85a9     +LDD R26 , Y + 9
00b092 85ba     +LDD R27 , Y + 9 + 1
00b093 9614     +ADIW R26 , 4
00b094 93ed     +ST X + , R30
00b095 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00b096 940e da75 	CALL SUBOPT_0x3BF
00b098 96f2      	ADIW R30,50
00b099 01df      	MOVW R26,R30
00b09a 01f8      	MOVW R30,R16
00b09b 940e da68 	CALL SUBOPT_0x3BD
                +
00b09d 85a9     +LDD R26 , Y + 9
00b09e 85ba     +LDD R27 , Y + 9 + 1
00b09f 9652     +ADIW R26 , 18
00b0a0 93ed     +ST X + , R30
00b0a1 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00b0a2 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00b0a3 940e e0d9 	CALL __LOADLOCR4
                 _0x20E0016:
00b0a5 962b      	ADIW R28,11
00b0a6 9508      	RET
                 _dir_find_G103:
00b0a7 940e c3a7 	CALL SUBOPT_0x7F
00b0a9 940e d1b4 	CALL SUBOPT_0x2AD
00b0ab 940e c68a 	CALL SUBOPT_0xF5
00b0ad de75      	RCALL _dir_seek_G103
00b0ae 2f1e      	MOV  R17,R30
00b0af 3010      	CPI  R17,0
00b0b0 f021      	BREQ _0x2060092
00b0b1 2fe1      	MOV  R30,R17
00b0b2 940e e0d9 	CALL __LOADLOCR4
00b0b4 c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00b0b5 940e da89 	CALL SUBOPT_0x3C3
00b0b7 940e da8c 	CALL SUBOPT_0x3C4
00b0b9 f4e9      	BRNE _0x2060095
00b0ba 81ac      	LDD  R26,Y+4
00b0bb 81bd      	LDD  R27,Y+4+1
00b0bc 9652      	ADIW R26,18
00b0bd 912d      	LD   R18,X+
00b0be 913c      	LD   R19,X
00b0bf 01d9      	MOVW R26,R18
00b0c0 910c      	LD   R16,X
00b0c1 3000      	CPI  R16,0
00b0c2 f411      	BRNE _0x2060097
00b0c3 e014      	LDI  R17,LOW(4)
00b0c4 c012      	RJMP _0x2060095
                 _0x2060097:
00b0c5 01f9      	MOVW R30,R18
00b0c6 85e3      	LDD  R30,Z+11
00b0c7 70e8      	ANDI R30,LOW(0x8)
00b0c8 f429      	BRNE _0x2060099
00b0c9 940e da97 	CALL SUBOPT_0x3C5
00b0cb dacb      	RCALL _mem_cmp_G103
00b0cc 9730      	SBIW R30,0
00b0cd f009      	BREQ _0x206009A
                 _0x2060099:
00b0ce c001      	RJMP _0x2060098
                 _0x206009A:
00b0cf c007      	RJMP _0x2060095
                 _0x2060098:
00b0d0 940e d1b4 	CALL SUBOPT_0x2AD
00b0d2 e0a0      	LDI  R26,LOW(0)
00b0d3 dee0      	RCALL _dir_next_G103
00b0d4 2f1e      	MOV  R17,R30
00b0d5 3010      	CPI  R17,0
00b0d6 f2f1      	BREQ _0x2060094
                 _0x2060095:
00b0d7 2fe1      	MOV  R30,R17
00b0d8 940e e0d9 	CALL __LOADLOCR4
00b0da c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00b0db 940e c3a7 	CALL SUBOPT_0x7F
00b0dd 940e d1b4 	CALL SUBOPT_0x2AD
00b0df 940e c68a 	CALL SUBOPT_0xF5
00b0e1 de41      	RCALL _dir_seek_G103
00b0e2 2f1e      	MOV  R17,R30
00b0e3 3010      	CPI  R17,0
00b0e4 f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00b0e5 940e da89 	CALL SUBOPT_0x3C3
00b0e7 940e da8c 	CALL SUBOPT_0x3C4
00b0e9 f489      	BRNE _0x20600AA
00b0ea 81ec      	LDD  R30,Y+4
00b0eb 81fd      	LDD  R31,Y+4+1
00b0ec 89a2      	LDD  R26,Z+18
00b0ed 89b3      	LDD  R27,Z+19
00b0ee 910c      	LD   R16,X
00b0ef 3e05      	CPI  R16,229
00b0f0 f011      	BREQ _0x20600AD
00b0f1 3000      	CPI  R16,0
00b0f2 f409      	BRNE _0x20600AC
                 _0x20600AD:
00b0f3 c007      	RJMP _0x20600AA
                 _0x20600AC:
00b0f4 940e d1b4 	CALL SUBOPT_0x2AD
00b0f6 e0a1      	LDI  R26,LOW(1)
00b0f7 debc      	RCALL _dir_next_G103
00b0f8 2f1e      	MOV  R17,R30
00b0f9 3010      	CPI  R17,0
00b0fa f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00b0fb 3010      	CPI  R17,0
00b0fc f539      	BRNE _0x20600AF
00b0fd 940e da89 	CALL SUBOPT_0x3C3
00b0ff 940e da8c 	CALL SUBOPT_0x3C4
00b101 f511      	BRNE _0x20600B0
00b102 81ac      	LDD  R26,Y+4
00b103 81bd      	LDD  R27,Y+4+1
00b104 9652      	ADIW R26,18
00b105 912d      	LD   R18,X+
00b106 913c      	LD   R19,X
00b107 933a      	ST   -Y,R19
00b108 932a      	ST   -Y,R18
00b109 e0e0      	LDI  R30,LOW(0)
00b10a e0f0      	LDI  R31,HIGH(0)
00b10b 93fa      	ST   -Y,R31
00b10c 93ea      	ST   -Y,R30
00b10d e2a0      	LDI  R26,LOW(32)
00b10e e0b0      	LDI  R27,0
00b10f da6f      	RCALL _mem_set_G103
00b110 940e da97 	CALL SUBOPT_0x3C5
00b112 da50      	RCALL _mem_cpy_G103
00b113 81ac      	LDD  R26,Y+4
00b114 81bd      	LDD  R27,Y+4+1
00b115 9654      	ADIW R26,20
00b116 940e e027 	CALL __GETW1P
00b118 85e3      	LDD  R30,Z+11
00b119 71e8      	ANDI R30,LOW(0x18)
                +
00b11a 01d9     +MOVW R26 , R18
00b11b 961c     +ADIW R26 , 12
00b11c 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00b11d 81ac      	LDD  R26,Y+4
00b11e 81bd      	LDD  R27,Y+4+1
00b11f 940e e027 	CALL __GETW1P
00b121 9634      	ADIW R30,4
00b122 e0a1      	LDI  R26,LOW(1)
00b123 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00b124 2fe1      	MOV  R30,R17
00b125 940e e0d9 	CALL __LOADLOCR4
00b127 c172      	RJMP _0x20E0012
                 _create_name_G103:
00b128 93ba      	ST   -Y,R27
00b129 93aa      	ST   -Y,R26
00b12a 9725      	SBIW R28,5
00b12b 940e e0d0 	CALL __SAVELOCR6
00b12d 85ad      	LDD  R26,Y+13
00b12e 85be      	LDD  R27,Y+13+1
00b12f 9654      	ADIW R26,20
00b130 914d      	LD   R20,X+
00b131 915c      	LD   R21,X
00b132 935a      	ST   -Y,R21
00b133 934a      	ST   -Y,R20
00b134 e2e0      	LDI  R30,LOW(32)
00b135 e0f0      	LDI  R31,HIGH(32)
00b136 93fa      	ST   -Y,R31
00b137 93ea      	ST   -Y,R30
00b138 940e c235 	CALL SUBOPT_0x48
00b13a da44      	RCALL _mem_set_G103
00b13b e0e0      	LDI  R30,LOW(0)
00b13c 87e8      	STD  Y+8,R30
00b13d 87e9      	STD  Y+8+1,R30
00b13e 2f1e      	MOV  R17,R30
00b13f 2f2e      	MOV  R18,R30
00b140 e0e8      	LDI  R30,LOW(8)
00b141 87ea      	STD  Y+10,R30
00b142 85ab      	LDD  R26,Y+11
00b143 85bc      	LDD  R27,Y+11+1
00b144 940e d945 	CALL SUBOPT_0x394
00b146 85e8      	LDD  R30,Y+8
00b147 85f9      	LDD  R31,Y+8+1
00b148 940e ce1b 	CALL SUBOPT_0x227
00b14a 91ac      	LD   R26,X
00b14b 32ae      	CPI  R26,LOW(0x2E)
00b14c f549      	BRNE _0x20600B3
                 _0x20600B5:
00b14d 940e c3ac 	CALL SUBOPT_0x80
00b14f 940e ce1b 	CALL SUBOPT_0x227
00b151 910c      	LD   R16,X
00b152 320e      	CPI  R16,46
00b153 f421      	BRNE _0x20600B8
00b154 85a8      	LDD  R26,Y+8
00b155 85b9      	LDD  R27,Y+8+1
00b156 9713      	SBIW R26,3
00b157 f00c      	BRLT _0x20600B7
                 _0x20600B8:
00b158 c003      	RJMP _0x20600B6
                 _0x20600B7:
00b159 940e daa1 	CALL SUBOPT_0x3C6
00b15b cff1      	RJMP _0x20600B5
                 _0x20600B6:
00b15c 320f      	CPI  R16,47
00b15d f021      	BREQ _0x20600BB
00b15e 350c      	CPI  R16,92
00b15f f011      	BREQ _0x20600BB
00b160 3201      	CPI  R16,33
00b161 f408      	BRSH _0x20600BC
                 _0x20600BB:
00b162 c002      	RJMP _0x20600BA
                 _0x20600BC:
00b163 e0e6      	LDI  R30,LOW(6)
00b164 c07d      	RJMP _0x20E0013
                 _0x20600BA:
00b165 85e8      	LDD  R30,Y+8
00b166 85f9      	LDD  R31,Y+8+1
00b167 940e ca9c 	CALL SUBOPT_0x1A4
00b169 85ab      	LDD  R26,Y+11
00b16a 85bc      	LDD  R27,Y+11+1
00b16b 93ed      	ST   X+,R30
00b16c 93fc      	ST   X,R31
00b16d 3201      	CPI  R16,33
00b16e f410      	BRSH _0x20600BD
00b16f e2e4      	LDI  R30,LOW(36)
00b170 c001      	RJMP _0x20600BE
                 _0x20600BD:
00b171 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00b172 01da     +MOVW R26 , R20
00b173 961b     +ADIW R26 , 11
00b174 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00b175 c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00b176 940e c3ac 	CALL SUBOPT_0x80
00b178 940e ce1b 	CALL SUBOPT_0x227
00b17a 910c      	LD   R16,X
00b17b 3201      	CPI  R16,33
00b17c f020      	BRLO _0x20600C4
00b17d 320f      	CPI  R16,47
00b17e f011      	BREQ _0x20600C4
00b17f 350c      	CPI  R16,92
00b180 f409      	BRNE _0x20600C3
                 _0x20600C4:
00b181 c035      	RJMP _0x20600C2
                 _0x20600C3:
00b182 320e      	CPI  R16,46
00b183 f019      	BREQ _0x20600C7
00b184 85ea      	LDD  R30,Y+10
00b185 172e      	CP   R18,R30
00b186 f068      	BRLO _0x20600C6
                 _0x20600C7:
00b187 85aa      	LDD  R26,Y+10
00b188 30a8      	CPI  R26,LOW(0x8)
00b189 f411      	BRNE _0x20600CA
00b18a 320e      	CPI  R16,46
00b18b f011      	BREQ _0x20600C9
                 _0x20600CA:
00b18c e0e6      	LDI  R30,LOW(6)
00b18d c054      	RJMP _0x20E0013
                 _0x20600C9:
00b18e e028      	LDI  R18,LOW(8)
00b18f e0eb      	LDI  R30,LOW(11)
00b190 87ea      	STD  Y+10,R30
00b191 0f11      	LSL  R17
00b192 0f11      	LSL  R17
00b193 c022      	RJMP _0x20600C0
                 _0x20600C6:
00b194 3800      	CPI  R16,128
00b195 f018      	BRLO _0x20600CC
00b196 6013      	ORI  R17,LOW(3)
00b197 e0e6      	LDI  R30,LOW(6)
00b198 c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00b199 efea     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00b19a e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00b19b e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00b19c e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00b19d 940e e05b 	CALL __PUTPARD1
00b19f 2fa0      	MOV  R26,R16
00b1a0 27bb      	CLR  R27
00b1a1 da1b      	RCALL _chk_chrf_G103
00b1a2 9730      	SBIW R30,0
00b1a3 f011      	BREQ _0x20600D2
00b1a4 e0e6      	LDI  R30,LOW(6)
00b1a5 c03c      	RJMP _0x20E0013
                 _0x20600D2:
00b1a6 3401      	CPI  R16,65
00b1a7 f010      	BRLO _0x20600D4
00b1a8 350b      	CPI  R16,91
00b1a9 f008      	BRLO _0x20600D5
                 _0x20600D4:
00b1aa c002      	RJMP _0x20600D3
                 _0x20600D5:
00b1ab 6012      	ORI  R17,LOW(2)
00b1ac c007      	RJMP _0x20600D6
                 _0x20600D3:
00b1ad 3601      	CPI  R16,97
00b1ae f010      	BRLO _0x20600D8
00b1af 370b      	CPI  R16,123
00b1b0 f008      	BRLO _0x20600D9
                 _0x20600D8:
00b1b1 c002      	RJMP _0x20600D7
                 _0x20600D9:
00b1b2 6011      	ORI  R17,LOW(1)
00b1b3 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00b1b4 940e daa1 	CALL SUBOPT_0x3C6
                 _0x20600C0:
00b1b6 cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00b1b7 85e8      	LDD  R30,Y+8
00b1b8 85f9      	LDD  R31,Y+8+1
00b1b9 940e ca9c 	CALL SUBOPT_0x1A4
00b1bb 85ab      	LDD  R26,Y+11
00b1bc 85bc      	LDD  R27,Y+11+1
00b1bd 93ed      	ST   X+,R30
00b1be 93fc      	ST   X,R31
00b1bf 3201      	CPI  R16,33
00b1c0 f410      	BRSH _0x20600DA
00b1c1 e0e4      	LDI  R30,LOW(4)
00b1c2 c001      	RJMP _0x20600DB
                 _0x20600DA:
00b1c3 e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00b1c4 2f0e      	MOV  R16,R30
00b1c5 3020      	CPI  R18,0
00b1c6 f411      	BRNE _0x20600DD
00b1c7 e0e6      	LDI  R30,LOW(6)
00b1c8 c019      	RJMP _0x20E0013
                 _0x20600DD:
00b1c9 01da      	MOVW R26,R20
00b1ca 91ac      	LD   R26,X
00b1cb 3ea5      	CPI  R26,LOW(0xE5)
00b1cc f419      	BRNE _0x20600DE
00b1cd 01da      	MOVW R26,R20
00b1ce e0e5      	LDI  R30,LOW(5)
00b1cf 93ec      	ST   X,R30
                 _0x20600DE:
00b1d0 85aa      	LDD  R26,Y+10
00b1d1 30a8      	CPI  R26,LOW(0x8)
00b1d2 f411      	BRNE _0x20600DF
00b1d3 0f11      	LSL  R17
00b1d4 0f11      	LSL  R17
                 _0x20600DF:
00b1d5 2fe1      	MOV  R30,R17
00b1d6 70e3      	ANDI R30,LOW(0x3)
00b1d7 30e1      	CPI  R30,LOW(0x1)
00b1d8 f409      	BRNE _0x20600E0
00b1d9 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00b1da 2fe1      	MOV  R30,R17
00b1db 70ec      	ANDI R30,LOW(0xC)
00b1dc 30e4      	CPI  R30,LOW(0x4)
00b1dd f409      	BRNE _0x20600E1
00b1de 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00b1df 01fa      	MOVW R30,R20
                +
00b1e0 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00b1e1 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00b1e2 940e e0d7 	CALL __LOADLOCR6
00b1e4 962f      	ADIW R28,15
00b1e5 9508      	RET
                 _follow_path_G103:
00b1e6 940e c3a7 	CALL SUBOPT_0x7F
                 _0x20600F7:
00b1e8 e0e1      	LDI  R30,LOW(1)
00b1e9 30e0      	CPI  R30,0
00b1ea f029      	BREQ _0x20600FA
00b1eb 81ac      	LDD  R26,Y+4
00b1ec 81bd      	LDD  R27,Y+4+1
00b1ed 91ac      	LD   R26,X
00b1ee 32a0      	CPI  R26,LOW(0x20)
00b1ef f009      	BREQ _0x20600FB
                 _0x20600FA:
00b1f0 c006      	RJMP _0x20600F9
                 _0x20600FB:
00b1f1 81ec      	LDD  R30,Y+4
00b1f2 81fd      	LDD  R31,Y+4+1
00b1f3 9631      	ADIW R30,1
00b1f4 83ec      	STD  Y+4,R30
00b1f5 83fd      	STD  Y+4+1,R31
00b1f6 cff1      	RJMP _0x20600F7
                 _0x20600F9:
00b1f7 81ac      	LDD  R26,Y+4
00b1f8 81bd      	LDD  R27,Y+4+1
00b1f9 91ac      	LD   R26,X
00b1fa 32af      	CPI  R26,LOW(0x2F)
00b1fb f029      	BREQ _0x20600FD
00b1fc 81ac      	LDD  R26,Y+4
00b1fd 81bd      	LDD  R27,Y+4+1
00b1fe 91ac      	LD   R26,X
00b1ff 35ac      	CPI  R26,LOW(0x5C)
00b200 f459      	BRNE _0x20600FC
                 _0x20600FD:
00b201 81ec      	LDD  R30,Y+4
00b202 81fd      	LDD  R31,Y+4+1
00b203 9631      	ADIW R30,1
00b204 83ec      	STD  Y+4,R30
00b205 83fd      	STD  Y+4+1,R31
00b206 81ae      	LDD  R26,Y+6
00b207 81bf      	LDD  R27,Y+6+1
00b208 9616      	ADIW R26,6
00b209 940e c402 	CALL SUBOPT_0x8E
00b20b c00a      	RJMP _0x20600FF
                 _0x20600FC:
00b20c 81ae      	LDD  R26,Y+6
00b20d 81bf      	LDD  R27,Y+6+1
00b20e 940e e027 	CALL __GETW1P
00b210 9676      	ADIW R30,22
00b211 01df      	MOVW R26,R30
00b212 940e e02b 	CALL __GETD1P
00b214 940e daac 	CALL SUBOPT_0x3C8
                 _0x20600FF:
00b216 81ac      	LDD  R26,Y+4
00b217 81bd      	LDD  R27,Y+4+1
00b218 91ac      	LD   R26,X
00b219 27bb      	CLR  R27
00b21a 9790      	SBIW R26,32
00b21b f460      	BRSH _0x2060100
00b21c 940e c8e5 	CALL SUBOPT_0x15B
00b21e 940e c68a 	CALL SUBOPT_0xF5
00b220 dd02      	RCALL _dir_seek_G103
00b221 2f1e      	MOV  R17,R30
00b222 81ae      	LDD  R26,Y+6
00b223 81bf      	LDD  R27,Y+6+1
00b224 9652      	ADIW R26,18
00b225 940e c737 	CALL SUBOPT_0x113
00b227 c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00b228 940e c8e5 	CALL SUBOPT_0x15B
00b22a 01de      	MOVW R26,R28
00b22b 9616      	ADIW R26,6
00b22c defb      	RCALL _create_name_G103
00b22d 2f1e      	MOV  R17,R30
00b22e 3010      	CPI  R17,0
00b22f f5a9      	BRNE _0x2060104
00b230 81ae      	LDD  R26,Y+6
00b231 81bf      	LDD  R27,Y+6+1
00b232 de74      	RCALL _dir_find_G103
00b233 2f1e      	MOV  R17,R30
00b234 81ae      	LDD  R26,Y+6
00b235 81bf      	LDD  R27,Y+6+1
00b236 9654      	ADIW R26,20
00b237 940e e027 	CALL __GETW1P
00b239 85e3      	LDD  R30,Z+11
00b23a 70e4      	ANDI R30,LOW(0x4)
00b23b 2f0e      	MOV  R16,R30
00b23c 3010      	CPI  R17,0
00b23d f039      	BREQ _0x2060106
00b23e 3014      	CPI  R17,4
00b23f f411      	BRNE _0x2060108
00b240 3000      	CPI  R16,0
00b241 f009      	BREQ _0x2060109
                 _0x2060108:
00b242 c001      	RJMP _0x2060107
                 _0x2060109:
00b243 e015      	LDI  R17,LOW(5)
                 _0x2060107:
00b244 c020      	RJMP _0x2060104
                 _0x2060106:
00b245 3000      	CPI  R16,0
00b246 f4f1      	BRNE _0x2060104
00b247 81ae      	LDD  R26,Y+6
00b248 81bf      	LDD  R27,Y+6+1
00b249 9652      	ADIW R26,18
00b24a 912d      	LD   R18,X+
00b24b 913c      	LD   R19,X
00b24c 01f9      	MOVW R30,R18
00b24d 85e3      	LDD  R30,Z+11
00b24e 71e0      	ANDI R30,LOW(0x10)
00b24f f411      	BRNE _0x206010B
00b250 e015      	LDI  R17,LOW(5)
00b251 c013      	RJMP _0x2060104
                 _0x206010B:
00b252 940e dab2 	CALL SUBOPT_0x3C9
00b254 940e df2d 	CALL __LSLD16
00b256 937f      	PUSH R23
00b257 936f      	PUSH R22
00b258 93ff      	PUSH R31
00b259 93ef      	PUSH R30
00b25a 940e dab6 	CALL SUBOPT_0x3CA
00b25c 91af      	POP  R26
00b25d 91bf      	POP  R27
00b25e 918f      	POP  R24
00b25f 919f      	POP  R25
00b260 940e dabb 	CALL SUBOPT_0x3CB
00b262 940e daac 	CALL SUBOPT_0x3C8
00b264 cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00b265 2fe1      	MOV  R30,R17
00b266 940e e0d9 	CALL __LOADLOCR4
00b268 9628      	ADIW R28,8
00b269 9508      	RET
                 _check_fs_G103:
00b26a 940e e060 	CALL __PUTPARD2
00b26c 81ec      	LDD  R30,Y+4
00b26d 81fd      	LDD  R31,Y+4+1
00b26e 81a1      	LDD  R26,Z+1
00b26f 93aa      	ST   -Y,R26
00b270 81ed      	LDD  R30,Y+5
00b271 81fe      	LDD  R31,Y+5+1
00b272 96f2      	ADIW R30,50
00b273 93fa      	ST   -Y,R31
00b274 93ea      	ST   -Y,R30
                +
00b275 81eb     +LDD R30 , Y + 3
00b276 81fc     +LDD R31 , Y + 3 + 1
00b277 816d     +LDD R22 , Y + 3 + 2
00b278 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00b279 940e dac0 	CALL SUBOPT_0x3CC
00b27b f011      	BREQ _0x206010C
00b27c e0e3      	LDI  R30,LOW(3)
00b27d c01c      	RJMP _0x20E0012
                 _0x206010C:
00b27e 81ec      	LDD  R30,Y+4
00b27f 81fd      	LDD  R31,Y+4+1
00b280 940e dac7 	CALL SUBOPT_0x3CD
00b282 f011      	BREQ _0x206010D
00b283 e0e2      	LDI  R30,LOW(2)
00b284 c015      	RJMP _0x20E0012
                 _0x206010D:
00b285 81ac      	LDD  R26,Y+4
00b286 81bd      	LDD  R27,Y+4+1
00b287 59a8      	SUBI R26,LOW(-104)
00b288 4fbf      	SBCI R27,HIGH(-104)
00b289 940e dad1 	CALL SUBOPT_0x3CE
00b28b f411      	BRNE _0x206010E
00b28c e0e0      	LDI  R30,LOW(0)
00b28d c00c      	RJMP _0x20E0012
                 _0x206010E:
00b28e 81ec      	LDD  R30,Y+4
00b28f 81fd      	LDD  R31,Y+4+1
00b290 96f2      	ADIW R30,50
00b291 5aee      	SUBI R30,LOW(-82)
00b292 4fff      	SBCI R31,HIGH(-82)
00b293 01df      	MOVW R26,R30
00b294 940e dad1 	CALL SUBOPT_0x3CE
00b296 f411      	BRNE _0x206010F
00b297 e0e0      	LDI  R30,LOW(0)
00b298 c001      	RJMP _0x20E0012
                 _0x206010F:
00b299 e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00b29a 9626      	ADIW R28,6
00b29b 9508      	RET
                 _chk_mounted:
00b29c 93aa      	ST   -Y,R26
00b29d 9764      	SBIW R28,20
00b29e 940e e0d0 	CALL __SAVELOCR6
00b2a0 8dad      	LDD  R26,Y+29
00b2a1 8dbe      	LDD  R27,Y+29+1
00b2a2 940e e027 	CALL __GETW1P
00b2a4 87e8      	STD  Y+8,R30
00b2a5 87f9      	STD  Y+8+1,R31
00b2a6 85a8      	LDD  R26,Y+8
00b2a7 85b9      	LDD  R27,Y+8+1
00b2a8 91ec      	LD   R30,X
00b2a9 53e0      	SUBI R30,LOW(48)
00b2aa 2f0e      	MOV  R16,R30
00b2ab 300a      	CPI  R16,10
00b2ac f420      	BRSH _0x2060111
00b2ad 9611      	ADIW R26,1
00b2ae 91ac      	LD   R26,X
00b2af 33aa      	CPI  R26,LOW(0x3A)
00b2b0 f009      	BREQ _0x2060112
                 _0x2060111:
00b2b1 c00a      	RJMP _0x2060110
                 _0x2060112:
00b2b2 85e8      	LDD  R30,Y+8
00b2b3 85f9      	LDD  R31,Y+8+1
00b2b4 9632      	ADIW R30,2
00b2b5 940e ca38 	CALL SUBOPT_0x191
00b2b7 8dad      	LDD  R26,Y+29
00b2b8 8dbe      	LDD  R27,Y+29+1
00b2b9 93ed      	ST   X+,R30
00b2ba 93fc      	ST   X,R31
00b2bb c002      	RJMP _0x2060113
                 _0x2060110:
00b2bc 9100 1ab6 	LDS  R16,_Drive_G103
                 _0x2060113:
00b2be 3001      	CPI  R16,1
00b2bf f010      	BRLO _0x2060114
00b2c0 e0eb      	LDI  R30,LOW(11)
00b2c1 c1c3      	RJMP _0x20E0010
                 _0x2060114:
00b2c2 2fe0      	MOV  R30,R16
00b2c3 940e dadf 	CALL SUBOPT_0x3CF
00b2c5 940e d945 	CALL SUBOPT_0x394
00b2c7 8dab      	LDD  R26,Y+27
00b2c8 8dbc      	LDD  R27,Y+27+1
00b2c9 93ed      	ST   X+,R30
00b2ca 93fc      	ST   X,R31
00b2cb 81ee      	LDD  R30,Y+6
00b2cc 81ff      	LDD  R31,Y+6+1
00b2cd 9730      	SBIW R30,0
00b2ce f411      	BRNE _0x2060115
00b2cf e0ec      	LDI  R30,LOW(12)
00b2d0 c1b4      	RJMP _0x20E0010
                 _0x2060115:
00b2d1 81ae      	LDD  R26,Y+6
00b2d2 81bf      	LDD  R27,Y+6+1
00b2d3 91ec      	LD   R30,X
00b2d4 30e0      	CPI  R30,0
00b2d5 f089      	BREQ _0x2060116
00b2d6 81ee      	LDD  R30,Y+6
00b2d7 81ff      	LDD  R31,Y+6+1
00b2d8 81a1      	LDD  R26,Z+1
00b2d9 940e a830 	CALL _disk_status
00b2db 2f5e      	MOV  R21,R30
00b2dc fd50      	SBRC R21,0
00b2dd c009      	RJMP _0x2060117
00b2de 8dea      	LDD  R30,Y+26
00b2df 30e0      	CPI  R30,0
00b2e0 f011      	BREQ _0x2060119
00b2e1 fd52      	SBRC R21,2
00b2e2 c001      	RJMP _0x206011A
                 _0x2060119:
00b2e3 c002      	RJMP _0x2060118
                 _0x206011A:
00b2e4 e0ea      	LDI  R30,LOW(10)
00b2e5 c19f      	RJMP _0x20E0010
                 _0x2060118:
00b2e6 c19d      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00b2e7 81ae      	LDD  R26,Y+6
00b2e8 81bf      	LDD  R27,Y+6+1
00b2e9 e0e0      	LDI  R30,LOW(0)
00b2ea 93ec      	ST   X,R30
00b2eb 2fe0      	MOV  R30,R16
                +
00b2ec 81ae     +LDD R26 , Y + 6
00b2ed 81bf     +LDD R27 , Y + 6 + 1
00b2ee 9611     +ADIW R26 , 1
00b2ef 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00b2f0 81ee      	LDD  R30,Y+6
00b2f1 81ff      	LDD  R31,Y+6+1
00b2f2 81a1      	LDD  R26,Z+1
00b2f3 940e a75f 	CALL _disk_initialize
00b2f5 2f5e      	MOV  R21,R30
00b2f6 ff50      	SBRS R21,0
00b2f7 c002      	RJMP _0x206011B
00b2f8 e0e3      	LDI  R30,LOW(3)
00b2f9 c18b      	RJMP _0x20E0010
                 _0x206011B:
00b2fa 8dea      	LDD  R30,Y+26
00b2fb 30e0      	CPI  R30,0
00b2fc f011      	BREQ _0x206011D
00b2fd fd52      	SBRC R21,2
00b2fe c001      	RJMP _0x206011E
                 _0x206011D:
00b2ff c002      	RJMP _0x206011C
                 _0x206011E:
00b300 e0ea      	LDI  R30,LOW(10)
00b301 c183      	RJMP _0x20E0010
                 _0x206011C:
00b302 940e c8e5 	CALL SUBOPT_0x15B
00b304 940e da45 	CALL SUBOPT_0x3B7
                +
00b306 8fe8     +STD Y + 24 , R30
00b307 8ff9     +STD Y + 24 + 1 , R31
00b308 8f6a     +STD Y + 24 + 2 , R22
00b309 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00b30a 01df      	MOVW R26,R30
00b30b 01cb      	MOVW R24,R22
00b30c df5d      	RCALL _check_fs_G103
00b30d 2f1e      	MOV  R17,R30
00b30e 3011      	CPI  R17,1
00b30f f4b1      	BRNE _0x206011F
00b310 81ee      	LDD  R30,Y+6
00b311 81ff      	LDD  R31,Y+6+1
00b312 96f2      	ADIW R30,50
00b313 54e2      	SUBI R30,LOW(-446)
00b314 4ffe      	SBCI R31,HIGH(-446)
00b315 019f      	MOVW R18,R30
00b316 01f9      	MOVW R30,R18
00b317 81e4      	LDD  R30,Z+4
00b318 30e0      	CPI  R30,0
00b319 f061      	BREQ _0x2060120
00b31a 01d9      	MOVW R26,R18
00b31b 9618      	ADIW R26,8
00b31c 940e e02b 	CALL __GETD1P
00b31e 940e c542 	CALL SUBOPT_0xC1
00b320 940e c8e5 	CALL SUBOPT_0x15B
00b322 940e ce0a 	CALL SUBOPT_0x224
00b324 df45      	RCALL _check_fs_G103
00b325 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00b326 3013      	CPI  R17,3
00b327 f411      	BRNE _0x2060121
00b328 e0e1      	LDI  R30,LOW(1)
00b329 c15b      	RJMP _0x20E0010
                 _0x2060121:
00b32a 3010      	CPI  R17,0
00b32b f449      	BRNE _0x2060123
00b32c 81ae      	LDD  R26,Y+6
00b32d 81bf      	LDD  R27,Y+6+1
00b32e 96dd      	ADIW R26,61
00b32f 940e e027 	CALL __GETW1P
00b331 30e0      	CPI  R30,LOW(0x200)
00b332 e0a2      	LDI  R26,HIGH(0x200)
00b333 07fa      	CPC  R31,R26
00b334 f011      	BREQ _0x2060122
                 _0x2060123:
00b335 e0ed      	LDI  R30,LOW(13)
00b336 c14e      	RJMP _0x20E0010
                 _0x2060122:
00b337 81ae      	LDD  R26,Y+6
00b338 81bf      	LDD  R27,Y+6+1
00b339 5ba8      	SUBI R26,LOW(-72)
00b33a 4fbf      	SBCI R27,HIGH(-72)
00b33b 940e c10c 	CALL SUBOPT_0x1E
00b33d 940e cf3b 	CALL SUBOPT_0x24F
00b33f 940e c5c8 	CALL SUBOPT_0xD4
00b341 940e e0b4 	CALL __CPD10
00b343 f441      	BRNE _0x2060125
00b344 81ae      	LDD  R26,Y+6
00b345 81bf      	LDD  R27,Y+6+1
00b346 5aaa      	SUBI R26,LOW(-86)
00b347 4fbf      	SBCI R27,HIGH(-86)
00b348 940e e02b 	CALL __GETD1P
00b34a 940e cf3b 	CALL SUBOPT_0x24F
                 _0x2060125:
00b34c 940e c5c8 	CALL SUBOPT_0xD4
                +
00b34e 81ae     +LDD R26 , Y + 6
00b34f 81bf     +LDD R27 , Y + 6 + 1
00b350 965a     +ADIW R26 , 26
00b351 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00b353 81ee      	LDD  R30,Y+6
00b354 81ff      	LDD  R31,Y+6+1
00b355 5bee      	SUBI R30,LOW(-66)
00b356 4fff      	SBCI R31,HIGH(-66)
00b357 81e0      	LD   R30,Z
                +
00b358 81ae     +LDD R26 , Y + 6
00b359 81bf     +LDD R27 , Y + 6 + 1
00b35a 9613     +ADIW R26 , 3
00b35b 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00b35c 81ee      	LDD  R30,Y+6
00b35d 81ff      	LDD  R31,Y+6+1
00b35e 81e3      	LDD  R30,Z+3
00b35f e0f0      	LDI  R31,0
00b360 940e cf36 	CALL SUBOPT_0x24E
00b362 940e d0fe 	CALL SUBOPT_0x293
00b364 940e cf3b 	CALL SUBOPT_0x24F
00b366 940e dae7 	CALL SUBOPT_0x3D0
00b368 940e c5be 	CALL SUBOPT_0xD2
00b36a 940e da63 	CALL SUBOPT_0x3BC
                +
00b36c 81ae     +LDD R26 , Y + 6
00b36d 81bf     +LDD R27 , Y + 6 + 1
00b36e 9692     +ADIW R26 , 34
00b36f 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00b371 81ee      	LDD  R30,Y+6
00b372 81ff      	LDD  R31,Y+6+1
00b373 ade7      	LDD  R30,Z+63
                +
00b374 81ae     +LDD R26 , Y + 6
00b375 81bf     +LDD R27 , Y + 6 + 1
00b376 9612     +ADIW R26 , 2
00b377 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00b378 81ae      	LDD  R26,Y+6
00b379 81bf      	LDD  R27,Y+6+1
00b37a 5bad      	SUBI R26,LOW(-67)
00b37b 4fbf      	SBCI R27,HIGH(-67)
00b37c 940e e027 	CALL __GETW1P
                +
00b37e 81ae     +LDD R26 , Y + 6
00b37f 81bf     +LDD R27 , Y + 6 + 1
00b380 9618     +ADIW R26 , 8
00b381 93ed     +ST X + , R30
00b382 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00b383 81ae      	LDD  R26,Y+6
00b384 81bf      	LDD  R27,Y+6+1
00b385 5bab      	SUBI R26,LOW(-69)
00b386 4fbf      	SBCI R27,HIGH(-69)
00b387 940e c10c 	CALL SUBOPT_0x1E
00b389 940e daee 	CALL SUBOPT_0x3D1
00b38b 940e c2d1 	CALL SUBOPT_0x60
00b38d 940e e0b4 	CALL __CPD10
00b38f f441      	BRNE _0x2060126
00b390 81ae      	LDD  R26,Y+6
00b391 81bf      	LDD  R27,Y+6+1
00b392 5aae      	SUBI R26,LOW(-82)
00b393 4fbf      	SBCI R27,HIGH(-82)
00b394 940e e02b 	CALL __GETD1P
00b396 940e daee 	CALL SUBOPT_0x3D1
                 _0x2060126:
00b398 940e dae7 	CALL SUBOPT_0x3D0
00b39a 940e d9dc 	CALL SUBOPT_0x3A9
00b39c 2766      	CLR  R22
00b39d 2777      	CLR  R23
00b39e 940e c53d 	CALL SUBOPT_0xC0
00b3a0 940e cf36 	CALL SUBOPT_0x24E
00b3a2 940e debd 	CALL __SUBD12
00b3a4 937f      	PUSH R23
00b3a5 936f      	PUSH R22
00b3a6 93ff      	PUSH R31
00b3a7 93ef      	PUSH R30
00b3a8 940e daf3 	CALL SUBOPT_0x3D2
00b3aa 91af      	POP  R26
00b3ab 91bf      	POP  R27
00b3ac 918f      	POP  R24
00b3ad 919f      	POP  R25
00b3ae 2766      	CLR  R22
00b3af 2777      	CLR  R23
00b3b0 940e dec2 	CALL __SUBD21
00b3b2 81ee      	LDD  R30,Y+6
00b3b3 81ff      	LDD  R31,Y+6+1
00b3b4 940e d0f6 	CALL SUBOPT_0x291
00b3b6 940e df38 	CALL __CWD1
00b3b8 940e dfaf 	CALL __DIVD21U
                +
00b3ba 5fee     +SUBI R30 , LOW ( - 2 )
00b3bb 4fff     +SBCI R31 , HIGH ( - 2 )
00b3bc 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00b3bd 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00b3be 940e d710 	CALL SUBOPT_0x346
                +
00b3c0 81ae     +LDD R26 , Y + 6
00b3c1 81bf     +LDD R27 , Y + 6 + 1
00b3c2 965e     +ADIW R26 , 30
00b3c3 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00b3c5 e011      	LDI  R17,LOW(1)
00b3c6 940e c278 	CALL SUBOPT_0x52
                +
00b3c8 3fa7     +CPI R26 , LOW ( 0xFF7 )
00b3c9 e0ef     +LDI R30 , HIGH ( 0xFF7 )
00b3ca 07be     +CPC R27 , R30
00b3cb e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00b3cc 078e     +CPC R24 , R30
00b3cd e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00b3ce 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00b3cf f008      	BRLO _0x2060127
00b3d0 e012      	LDI  R17,LOW(2)
                 _0x2060127:
00b3d1 940e c278 	CALL SUBOPT_0x52
                +
00b3d3 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00b3d4 efef     +LDI R30 , HIGH ( 0xFFF7 )
00b3d5 07be     +CPC R27 , R30
00b3d6 e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00b3d7 078e     +CPC R24 , R30
00b3d8 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00b3d9 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00b3da f008      	BRLO _0x2060128
00b3db e013      	LDI  R17,LOW(3)
                 _0x2060128:
00b3dc 3013      	CPI  R17,3
00b3dd f439      	BRNE _0x2060129
00b3de 81ae      	LDD  R26,Y+6
00b3df 81bf      	LDD  R27,Y+6+1
00b3e0 5aa2      	SUBI R26,LOW(-94)
00b3e1 4fbf      	SBCI R27,HIGH(-94)
00b3e2 940e e02b 	CALL __GETD1P
00b3e4 c002      	RJMP _0x206022D
                 _0x2060129:
00b3e5 940e dafb 	CALL SUBOPT_0x3D3
                 _0x206022D:
                +
00b3e7 81ae     +LDD R26 , Y + 6
00b3e8 81bf     +LDD R27 , Y + 6 + 1
00b3e9 9696     +ADIW R26 , 38
00b3ea 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00b3ec 940e dafb 	CALL SUBOPT_0x3D3
00b3ee 937f      	PUSH R23
00b3ef 936f      	PUSH R22
00b3f0 93ff      	PUSH R31
00b3f1 93ef      	PUSH R30
00b3f2 940e daf3 	CALL SUBOPT_0x3D2
00b3f4 91af      	POP  R26
00b3f5 91bf      	POP  R27
00b3f6 918f      	POP  R24
00b3f7 919f      	POP  R25
00b3f8 940e da63 	CALL SUBOPT_0x3BC
                +
00b3fa 81ae     +LDD R26 , Y + 6
00b3fb 81bf     +LDD R27 , Y + 6 + 1
00b3fc 969a     +ADIW R26 , 42
00b3fd 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00b3ff 81ae      	LDD  R26,Y+6
00b400 81bf      	LDD  R27,Y+6+1
00b401 961e      	ADIW R26,14
00b402 940e c137 	CALL SUBOPT_0x25
00b404 940e e036 	CALL __PUTDP1
00b406 81ae      	LDD  R26,Y+6
00b407 81bf      	LDD  R27,Y+6+1
00b408 9614      	ADIW R26,4
00b409 e0e0      	LDI  R30,LOW(0)
00b40a 93ec      	ST   X,R30
00b40b 3013      	CPI  R17,3
00b40c f011      	BREQ PC+3
00b40d 940c b470 	JMP _0x206012B
00b40f 81ae      	LDD  R26,Y+6
00b410 81bf      	LDD  R27,Y+6+1
00b411 9615      	ADIW R26,5
00b412 93ec      	ST   X,R30
00b413 81ae      	LDD  R26,Y+6
00b414 81bf      	LDD  R27,Y+6+1
00b415 59ae      	SUBI R26,LOW(-98)
00b416 4fbf      	SBCI R27,HIGH(-98)
00b417 940e e027 	CALL __GETW1P
00b419 940e c5be 	CALL SUBOPT_0xD2
00b41b 940e da63 	CALL SUBOPT_0x3BC
                +
00b41d 81ae     +LDD R26 , Y + 6
00b41e 81bf     +LDD R27 , Y + 6 + 1
00b41f 9652     +ADIW R26 , 18
00b420 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00b422 81ee      	LDD  R30,Y+6
00b423 81ff      	LDD  R31,Y+6+1
00b424 81a1      	LDD  R26,Z+1
00b425 93aa      	ST   -Y,R26
00b426 81ef      	LDD  R30,Y+7
00b427 85f8      	LDD  R31,Y+7+1
00b428 96f2      	ADIW R30,50
00b429 93fa      	ST   -Y,R31
00b42a 93ea      	ST   -Y,R30
00b42b 85e9      	LDD  R30,Y+9
00b42c 85fa      	LDD  R31,Y+9+1
00b42d 940e d999 	CALL SUBOPT_0x39F
00b42f 940e a83a 	CALL _disk_read
00b431 30e0      	CPI  R30,0
00b432 f511      	BRNE _0x206012D
00b433 81ee      	LDD  R30,Y+6
00b434 81ff      	LDD  R31,Y+6+1
00b435 940e dac7 	CALL SUBOPT_0x3CD
00b437 f4e9      	BRNE _0x206012D
00b438 81ae      	LDD  R26,Y+6
00b439 81bf      	LDD  R27,Y+6+1
00b43a 96d2      	ADIW R26,50
00b43b 940e e02b 	CALL __GETD1P
                +
00b43d 35e2     +CPI R30 , LOW ( 0x41615252 )
00b43e e5a2     +LDI R26 , HIGH ( 0x41615252 )
00b43f 07fa     +CPC R31 , R26
00b440 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00b441 076a     +CPC R22 , R26
00b442 e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00b443 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00b444 f481      	BRNE _0x206012D
00b445 81ee      	LDD  R30,Y+6
00b446 81ff      	LDD  R31,Y+6+1
00b447 96f2      	ADIW R30,50
00b448 51ec      	SUBI R30,LOW(-484)
00b449 4ffe      	SBCI R31,HIGH(-484)
00b44a 01df      	MOVW R26,R30
00b44b 940e e02b 	CALL __GETD1P
                +
00b44d 37e2     +CPI R30 , LOW ( 0x61417272 )
00b44e e7a2     +LDI R26 , HIGH ( 0x61417272 )
00b44f 07fa     +CPC R31 , R26
00b450 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00b451 076a     +CPC R22 , R26
00b452 e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00b453 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00b454 f009      	BREQ _0x206012E
                 _0x206012D:
00b455 c01a      	RJMP _0x206012C
                 _0x206012E:
00b456 81ee      	LDD  R30,Y+6
00b457 81ff      	LDD  R31,Y+6+1
00b458 96f2      	ADIW R30,50
00b459 51e4      	SUBI R30,LOW(-492)
00b45a 4ffe      	SBCI R31,HIGH(-492)
00b45b 01df      	MOVW R26,R30
00b45c 940e e02b 	CALL __GETD1P
                +
00b45e 81ae     +LDD R26 , Y + 6
00b45f 81bf     +LDD R27 , Y + 6 + 1
00b460 961a     +ADIW R26 , 10
00b461 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00b463 81ee      	LDD  R30,Y+6
00b464 81ff      	LDD  R31,Y+6+1
00b465 96f2      	ADIW R30,50
00b466 51e8      	SUBI R30,LOW(-488)
00b467 4ffe      	SBCI R31,HIGH(-488)
00b468 01df      	MOVW R26,R30
00b469 940e e02b 	CALL __GETD1P
                +
00b46b 81ae     +LDD R26 , Y + 6
00b46c 81bf     +LDD R27 , Y + 6 + 1
00b46d 961e     +ADIW R26 , 14
00b46e 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00b470 81ae      	LDD  R26,Y+6
00b471 81bf      	LDD  R27,Y+6+1
00b472 931c      	ST   X,R17
00b473 969e      	ADIW R26,46
00b474 940e c402 	CALL SUBOPT_0x8E
00b476 81ae      	LDD  R26,Y+6
00b477 81bf      	LDD  R27,Y+6+1
00b478 9656      	ADIW R26,22
00b479 940e c402 	CALL SUBOPT_0x8E
00b47b eba4      	LDI  R26,LOW(_Fsid_G103)
00b47c e1ba      	LDI  R27,HIGH(_Fsid_G103)
00b47d 940e c396 	CALL SUBOPT_0x7C
                +
00b47f 81ae     +LDD R26 , Y + 6
00b480 81bf     +LDD R27 , Y + 6 + 1
00b481 9616     +ADIW R26 , 6
00b482 93ed     +ST X + , R30
00b483 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00b484 e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00b485 940e e0d7 	CALL __LOADLOCR6
00b487 966f      	ADIW R28,31
00b488 9508      	RET
                 _validate_G103:
00b489 940e d067 	CALL SUBOPT_0x27B
00b48b 9730      	SBIW R30,0
00b48c f071      	BREQ _0x2060130
00b48d 81aa      	LDD  R26,Y+2
00b48e 81bb      	LDD  R27,Y+2+1
00b48f 91ec      	LD   R30,X
00b490 30e0      	CPI  R30,0
00b491 f049      	BREQ _0x2060130
00b492 81ea      	LDD  R30,Y+2
00b493 81fb      	LDD  R31,Y+2+1
00b494 81a6      	LDD  R26,Z+6
00b495 81b7      	LDD  R27,Z+7
00b496 81e8      	LD   R30,Y
00b497 81f9      	LDD  R31,Y+1
00b498 17ea      	CP   R30,R26
00b499 07fb      	CPC  R31,R27
00b49a f011      	BREQ _0x206012F
                 _0x2060130:
00b49b e0e9      	LDI  R30,LOW(9)
00b49c c00a      	RJMP _0x20E000F
                 _0x206012F:
00b49d 81ea      	LDD  R30,Y+2
00b49e 81fb      	LDD  R31,Y+2+1
00b49f 81a1      	LDD  R26,Z+1
00b4a0 940e a830 	CALL _disk_status
00b4a2 70e1      	ANDI R30,LOW(0x1)
00b4a3 f011      	BREQ _0x2060132
00b4a4 e0e3      	LDI  R30,LOW(3)
00b4a5 c001      	RJMP _0x20E000F
                 _0x2060132:
00b4a6 e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00b4a7 9624      	ADIW R28,4
00b4a8 9508      	RET
                 _f_mount:
00b4a9 940e c3b3 	CALL SUBOPT_0x81
00b4ab 81ac      	LDD  R26,Y+4
00b4ac 30a1      	CPI  R26,LOW(0x1)
00b4ad f010      	BRLO _0x2060133
00b4ae e0eb      	LDI  R30,LOW(11)
00b4af c020      	RJMP _0x20E000E
                 _0x2060133:
00b4b0 81ec      	LDD  R30,Y+4
00b4b1 940e dadf 	CALL SUBOPT_0x3CF
00b4b3 910d      	LD   R16,X+
00b4b4 911c      	LD   R17,X
00b4b5 2e00      	MOV  R0,R16
00b4b6 2a01      	OR   R0,R17
00b4b7 f019      	BREQ _0x2060134
00b4b8 01d8      	MOVW R26,R16
00b4b9 e0e0      	LDI  R30,LOW(0)
00b4ba 93ec      	ST   X,R30
                 _0x2060134:
00b4bb 81ea      	LDD  R30,Y+2
00b4bc 81fb      	LDD  R31,Y+2+1
00b4bd 9730      	SBIW R30,0
00b4be f021      	BREQ _0x2060135
00b4bf 81aa      	LDD  R26,Y+2
00b4c0 81bb      	LDD  R27,Y+2+1
00b4c1 e0e0      	LDI  R30,LOW(0)
00b4c2 93ec      	ST   X,R30
                 _0x2060135:
00b4c3 81ec      	LDD  R30,Y+4
00b4c4 eba2      	LDI  R26,LOW(_FatFs_G103)
00b4c5 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b4c6 e0f0      	LDI  R31,0
00b4c7 0fee      	LSL  R30
00b4c8 1fff      	ROL  R31
00b4c9 0fea      	ADD  R30,R26
00b4ca 1ffb      	ADC  R31,R27
00b4cb 81aa      	LDD  R26,Y+2
00b4cc 81bb      	LDD  R27,Y+2+1
00b4cd 83a0      	STD  Z+0,R26
00b4ce 83b1      	STD  Z+1,R27
00b4cf e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00b4d0 8119      	LDD  R17,Y+1
00b4d1 8108      	LDD  R16,Y+0
00b4d2 9625      	ADIW R28,5
00b4d3 9508      	RET
                 _f_open:
00b4d4 93aa      	ST   -Y,R26
00b4d5 97a2      	SBIW R28,34
00b4d6 940e e0d2 	CALL __SAVELOCR4
00b4d8 a5a9      	LDD  R26,Y+41
00b4d9 a5ba      	LDD  R27,Y+41+1
00b4da 940e c737 	CALL SUBOPT_0x113
00b4dc a1ee      	LDD  R30,Y+38
00b4dd 71ef      	ANDI R30,LOW(0x1F)
00b4de a3ee      	STD  Y+38,R30
00b4df 01fe      	MOVW R30,R28
00b4e0 96b7      	ADIW R30,39
00b4e1 93fa      	ST   -Y,R31
00b4e2 93ea      	ST   -Y,R30
00b4e3 940e c31d 	CALL SUBOPT_0x6C
00b4e5 a5ea      	LDD  R30,Y+42
00b4e6 71ee      	ANDI R30,LOW(0x1E)
00b4e7 2fae      	MOV  R26,R30
00b4e8 ddb3      	RCALL _chk_mounted
00b4e9 2f1e      	MOV  R17,R30
00b4ea 3010      	CPI  R17,0
00b4eb f011      	BREQ _0x2060136
00b4ec 2fe1      	MOV  R30,R17
00b4ed c10f      	RJMP _0x20E000D
                 _0x2060136:
00b4ee 01fe      	MOVW R30,R28
00b4ef 9634      	ADIW R30,4
00b4f0 a3ec      	STD  Y+36,R30
00b4f1 a3fd      	STD  Y+36+1,R31
00b4f2 940e c2bc 	CALL SUBOPT_0x5D
00b4f4 a5a9      	LDD  R26,Y+41
00b4f5 a5ba      	LDD  R27,Y+41+1
00b4f6 dcef      	RCALL _follow_path_G103
00b4f7 2f1e      	MOV  R17,R30
00b4f8 a1ee      	LDD  R30,Y+38
00b4f9 71ec      	ANDI R30,LOW(0x1C)
00b4fa f411      	BRNE PC+3
00b4fb 940c b590 	JMP _0x2060137
00b4fd 9728      	SBIW R28,8
00b4fe 3010      	CPI  R17,0
00b4ff f089      	BREQ _0x2060138
00b500 3014      	CPI  R17,4
00b501 f421      	BRNE _0x2060139
00b502 01de      	MOVW R26,R28
00b503 9658      	ADIW R26,24
00b504 dbd6      	RCALL _dir_register_G103
00b505 2f1e      	MOV  R17,R30
                 _0x2060139:
00b506 3010      	CPI  R17,0
00b507 f019      	BREQ _0x206013A
00b508 2fe1      	MOV  R30,R17
00b509 9628      	ADIW R28,8
00b50a c0f2      	RJMP _0x20E000D
                 _0x206013A:
00b50b a5ee      	LDD  R30,Y+46
00b50c 60e8      	ORI  R30,8
00b50d a7ee      	STD  Y+46,R30
                +
00b50e a52a     +LDD R18 , Y + 42
00b50f a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b510 c066      	RJMP _0x206013B
                 _0x2060138:
00b511 a5ee      	LDD  R30,Y+46
00b512 70e4      	ANDI R30,LOW(0x4)
00b513 f019      	BREQ _0x206013C
00b514 e0e8      	LDI  R30,LOW(8)
00b515 9628      	ADIW R28,8
00b516 c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
00b517 a52a     +LDD R18 , Y + 42
00b518 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b519 2e02      	MOV  R0,R18
00b51a 2a03      	OR   R0,R19
00b51b f021      	BREQ _0x206013E
00b51c 01f9      	MOVW R30,R18
00b51d 85e3      	LDD  R30,Z+11
00b51e 71e1      	ANDI R30,LOW(0x11)
00b51f f019      	BREQ _0x206013D
                 _0x206013E:
00b520 e0e7      	LDI  R30,LOW(7)
00b521 9628      	ADIW R28,8
00b522 c0da      	RJMP _0x20E000D
                 _0x206013D:
00b523 a5ee      	LDD  R30,Y+46
00b524 70e8      	ANDI R30,LOW(0x8)
00b525 f411      	BRNE PC+3
00b526 940c b577 	JMP _0x2060140
00b528 940e dab2 	CALL SUBOPT_0x3C9
00b52a 940e df2d 	CALL __LSLD16
00b52c 937f      	PUSH R23
00b52d 936f      	PUSH R22
00b52e 93ff      	PUSH R31
00b52f 93ef      	PUSH R30
00b530 940e dab6 	CALL SUBOPT_0x3CA
00b532 91af      	POP  R26
00b533 91bf      	POP  R27
00b534 918f      	POP  R24
00b535 919f      	POP  R25
00b536 940e dabb 	CALL SUBOPT_0x3CB
00b538 940e c494 	CALL SUBOPT_0xA0
00b53a 01f9      	MOVW R30,R18
00b53b 9674      	ADIW R30,20
00b53c e0a0      	LDI  R26,LOW(0)
00b53d e0b0      	LDI  R27,HIGH(0)
00b53e 83a0      	STD  Z+0,R26
00b53f 83b1      	STD  Z+1,R27
00b540 01f9      	MOVW R30,R18
00b541 967a      	ADIW R30,26
00b542 83a0      	STD  Z+0,R26
00b543 83b1      	STD  Z+1,R27
00b544 01f9      	MOVW R30,R18
00b545 967c      	ADIW R30,28
00b546 940e c164 	CALL SUBOPT_0x2C
00b548 940e cf8e 	CALL SUBOPT_0x25B
00b54a 8da8      	LDD  R26,Y+24
00b54b 8db9      	LDD  R27,Y+24+1
00b54c 9614      	ADIW R26,4
00b54d e0e1      	LDI  R30,LOW(1)
00b54e 93ec      	ST   X,R30
00b54f 8da8      	LDD  R26,Y+24
00b550 8db9      	LDD  R27,Y+24+1
00b551 969e      	ADIW R26,46
00b552 940e d9ae 	CALL SUBOPT_0x3A2
00b554 940e c3d9 	CALL SUBOPT_0x87
00b556 940e e0b4 	CALL __CPD10
00b558 f0a1      	BREQ _0x2060141
00b559 940e d151 	CALL SUBOPT_0x2A0
00b55b 940e c4fb 	CALL SUBOPT_0xB4
00b55d d889      	RCALL _remove_chain_G103
00b55e 2f1e      	MOV  R17,R30
00b55f 3010      	CPI  R17,0
00b560 f019      	BREQ _0x2060142
00b561 2fe1      	MOV  R30,R17
00b562 9628      	ADIW R28,8
00b563 c099      	RJMP _0x20E000D
                 _0x2060142:
00b564 940e c3d9 	CALL SUBOPT_0x87
00b566 940e c5e3 	CALL SUBOPT_0xDA
                +
00b568 8da8     +LDD R26 , Y + 24
00b569 8db9     +LDD R27 , Y + 24 + 1
00b56a 961a     +ADIW R26 , 10
00b56b 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00b56d 940e d151 	CALL SUBOPT_0x2A0
00b56f 940e c2aa 	CALL SUBOPT_0x59
00b571 940e db03 	CALL SUBOPT_0x3D4
00b573 f019      	BREQ _0x2060143
00b574 2fe1      	MOV  R30,R17
00b575 9628      	ADIW R28,8
00b576 c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00b577 a5ee      	LDD  R30,Y+46
00b578 70e8      	ANDI R30,LOW(0x8)
00b579 f0a1      	BREQ _0x2060144
00b57a 01f9      	MOVW R30,R18
00b57b 963b      	ADIW R30,11
00b57c e0a0      	LDI  R26,LOW(0)
00b57d 83a0      	STD  Z+0,R26
00b57e 940e aad5 	CALL _get_fattime
00b580 940e c4dc 	CALL SUBOPT_0xAE
                +
00b582 01d9     +MOVW R26 , R18
00b583 961e     +ADIW R26 , 14
00b584 940e e036+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00b586 8da8      	LDD  R26,Y+24
00b587 8db9      	LDD  R27,Y+24+1
00b588 9614      	ADIW R26,4
00b589 e0e1      	LDI  R30,LOW(1)
00b58a 93ec      	ST   X,R30
00b58b a5ee      	LDD  R30,Y+46
00b58c 62e0      	ORI  R30,0x20
00b58d a7ee      	STD  Y+46,R30
                 _0x2060144:
00b58e 9628      	ADIW R28,8
00b58f c019      	RJMP _0x2060145
                 _0x2060137:
00b590 3010      	CPI  R17,0
00b591 f011      	BREQ _0x2060146
00b592 2fe1      	MOV  R30,R17
00b593 c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00b594 a12a     +LDD R18 , Y + 34
00b595 a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00b596 2e02      	MOV  R0,R18
00b597 2a03      	OR   R0,R19
00b598 f021      	BREQ _0x2060148
00b599 01f9      	MOVW R30,R18
00b59a 85e3      	LDD  R30,Z+11
00b59b 71e0      	ANDI R30,LOW(0x10)
00b59c f011      	BREQ _0x2060147
                 _0x2060148:
00b59d e0e4      	LDI  R30,LOW(4)
00b59e c05e      	RJMP _0x20E000D
                 _0x2060147:
00b59f a1ee      	LDD  R30,Y+38
00b5a0 70e2      	ANDI R30,LOW(0x2)
00b5a1 f021      	BREQ _0x206014B
00b5a2 01f9      	MOVW R30,R18
00b5a3 85e3      	LDD  R30,Z+11
00b5a4 70e1      	ANDI R30,LOW(0x1)
00b5a5 f409      	BRNE _0x206014C
                 _0x206014B:
00b5a6 c002      	RJMP _0x206014A
                 _0x206014C:
00b5a7 e0e7      	LDI  R30,LOW(7)
00b5a8 c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00b5a9 89a8      	LDD  R26,Y+16
00b5aa 89b9      	LDD  R27,Y+16+1
00b5ab 969e      	ADIW R26,46
00b5ac 940e e02b 	CALL __GETD1P
                +
00b5ae a5a9     +LDD R26 , Y + 41
00b5af a5ba     +LDD R27 , Y + 41 + 1
00b5b0 965a     +ADIW R26 , 26
00b5b1 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00b5b3 a1ea      	LDD  R30,Y+34
00b5b4 a1fb      	LDD  R31,Y+34+1
                +
00b5b5 a5a9     +LDD R26 , Y + 41
00b5b6 a5ba     +LDD R27 , Y + 41 + 1
00b5b7 965e     +ADIW R26 , 30
00b5b8 93ed     +ST X + , R30
00b5b9 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00b5ba a1ee      	LDD  R30,Y+38
                +
00b5bb a5a9     +LDD R26 , Y + 41
00b5bc a5ba     +LDD R27 , Y + 41 + 1
00b5bd 9614     +ADIW R26 , 4
00b5be 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00b5bf 940e dab2 	CALL SUBOPT_0x3C9
00b5c1 940e df2d 	CALL __LSLD16
00b5c3 937f      	PUSH R23
00b5c4 936f      	PUSH R22
00b5c5 93ff      	PUSH R31
00b5c6 93ef      	PUSH R30
00b5c7 940e dab6 	CALL SUBOPT_0x3CA
00b5c9 91af      	POP  R26
00b5ca 91bf      	POP  R27
00b5cb 918f      	POP  R24
00b5cc 919f      	POP  R25
00b5cd 940e dabb 	CALL SUBOPT_0x3CB
                +
00b5cf a5a9     +LDD R26 , Y + 41
00b5d0 a5ba     +LDD R27 , Y + 41 + 1
00b5d1 961e     +ADIW R26 , 14
00b5d2 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00b5d4 01d9      	MOVW R26,R18
00b5d5 965c      	ADIW R26,28
00b5d6 940e e02b 	CALL __GETD1P
                +
00b5d8 a5a9     +LDD R26 , Y + 41
00b5d9 a5ba     +LDD R27 , Y + 41 + 1
00b5da 961a     +ADIW R26 , 10
00b5db 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00b5dd a5a9      	LDD  R26,Y+41
00b5de a5ba      	LDD  R27,Y+41+1
00b5df 9616      	ADIW R26,6
00b5e0 940e c402 	CALL SUBOPT_0x8E
00b5e2 a5a9      	LDD  R26,Y+41
00b5e3 a5ba      	LDD  R27,Y+41+1
00b5e4 9615      	ADIW R26,5
00b5e5 efef      	LDI  R30,LOW(255)
00b5e6 93ec      	ST   X,R30
00b5e7 a5a9      	LDD  R26,Y+41
00b5e8 a5ba      	LDD  R27,Y+41+1
00b5e9 9656      	ADIW R26,22
00b5ea 940e c402 	CALL SUBOPT_0x8E
00b5ec 89e8      	LDD  R30,Y+16
00b5ed 89f9      	LDD  R31,Y+16+1
00b5ee a5a9      	LDD  R26,Y+41
00b5ef a5ba      	LDD  R27,Y+41+1
00b5f0 93ed      	ST   X+,R30
00b5f1 93fc      	ST   X,R31
00b5f2 89a8      	LDD  R26,Y+16
00b5f3 89b9      	LDD  R27,Y+16+1
00b5f4 9616      	ADIW R26,6
00b5f5 940e e027 	CALL __GETW1P
                +
00b5f7 a5a9     +LDD R26 , Y + 41
00b5f8 a5ba     +LDD R27 , Y + 41 + 1
00b5f9 9612     +ADIW R26 , 2
00b5fa 93ed     +ST X + , R30
00b5fb 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00b5fc e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00b5fd 940e e0d9 	CALL __LOADLOCR4
00b5ff 96ab      	ADIW R28,43
00b600 9508      	RET
                 _f_read:
00b601 93ba      	ST   -Y,R27
00b602 93aa      	ST   -Y,R26
00b603 972e      	SBIW R28,14
00b604 940e e0d0 	CALL __SAVELOCR6
00b606 8de8      	LDD  R30,Y+24
00b607 8df9      	LDD  R31,Y+24+1
00b608 83ee      	STD  Y+6,R30
00b609 83ff      	STD  Y+6+1,R31
00b60a 89ac      	LDD  R26,Y+20
00b60b 89bd      	LDD  R27,Y+20+1
00b60c 940e c737 	CALL SUBOPT_0x113
00b60e 940e db08 	CALL SUBOPT_0x3D5
00b610 8dec      	LDD  R30,Y+28
00b611 8dfd      	LDD  R31,Y+28+1
00b612 940e db0b 	CALL SUBOPT_0x3D6
00b614 f011      	BREQ _0x206014D
00b615 2fe1      	MOV  R30,R17
00b616 c149      	RJMP _0x20E000C
                 _0x206014D:
00b617 8dea      	LDD  R30,Y+26
00b618 8dfb      	LDD  R31,Y+26+1
00b619 81a4      	LDD  R26,Z+4
00b61a 78a0      	ANDI R26,LOW(0x80)
00b61b f011      	BREQ _0x206014E
00b61c e0e2      	LDI  R30,LOW(2)
00b61d c142      	RJMP _0x20E000C
                 _0x206014E:
00b61e 8dea      	LDD  R30,Y+26
00b61f 8dfb      	LDD  R31,Y+26+1
00b620 81a4      	LDD  R26,Z+4
00b621 70a1      	ANDI R26,LOW(0x1)
00b622 f411      	BRNE _0x206014F
00b623 e0e7      	LDI  R30,LOW(7)
00b624 c13b      	RJMP _0x20E000C
                 _0x206014F:
00b625 8dea      	LDD  R30,Y+26
00b626 8dfb      	LDD  R31,Y+26+1
                +
00b627 85a2     +LDD R26 , Z + 10
00b628 85b3     +LDD R27 , Z + 10 + 1
00b629 8584     +LDD R24 , Z + 10 + 2
00b62a 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b62b 939f      	PUSH R25
00b62c 938f      	PUSH R24
00b62d 93bf      	PUSH R27
00b62e 93af      	PUSH R26
00b62f 940e db12 	CALL SUBOPT_0x3D7
00b631 91ef      	POP  R30
00b632 91ff      	POP  R31
00b633 916f      	POP  R22
00b634 917f      	POP  R23
00b635 940e debd 	CALL __SUBD12
00b637 940e d79d 	CALL SUBOPT_0x35B
00b639 940e c25f 	CALL SUBOPT_0x4F
00b63b 89ae      	LDD  R26,Y+22
00b63c 89bf      	LDD  R27,Y+22+1
00b63d 2788      	CLR  R24
00b63e 2799      	CLR  R25
00b63f 940e e0c6 	CALL __CPD12
00b641 f420      	BRSH _0x2060150
00b642 85e8      	LDD  R30,Y+8
00b643 85f9      	LDD  R31,Y+8+1
00b644 8bee      	STD  Y+22,R30
00b645 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00b646 89ee      	LDD  R30,Y+22
00b647 89ff      	LDD  R31,Y+22+1
00b648 9730      	SBIW R30,0
00b649 f411      	BRNE PC+3
00b64a 940c b75f 	JMP _0x2060153
00b64c 940e db12 	CALL SUBOPT_0x3D7
00b64e 940e db19 	CALL SUBOPT_0x3D8
00b650 f011      	BREQ PC+3
00b651 940c b72a 	JMP _0x2060154
00b653 8dea      	LDD  R30,Y+26
00b654 8dfb      	LDD  R31,Y+26+1
00b655 8005      	LDD  R0,Z+5
00b656 8daa      	LDD  R26,Y+26
00b657 8dbb      	LDD  R27,Y+26+1
00b658 940e e027 	CALL __GETW1P
00b65a 81e2      	LDD  R30,Z+2
00b65b 160e      	CP   R0,R30
00b65c f178      	BRLO _0x2060155
00b65d 940e db12 	CALL SUBOPT_0x3D7
00b65f 940e e0c0 	CALL __CPD02
00b661 f431      	BRNE _0x2060156
00b662 8daa      	LDD  R26,Y+26
00b663 8dbb      	LDD  R27,Y+26+1
00b664 961e      	ADIW R26,14
00b665 940e e02b 	CALL __GETD1P
00b667 c006      	RJMP _0x2060157
                 _0x2060156:
00b668 940e db08 	CALL SUBOPT_0x3D5
00b66a 940e db1e 	CALL SUBOPT_0x3D9
00b66c 940e acb6 	CALL _get_fat
                 _0x2060157:
00b66e 940e d851 	CALL SUBOPT_0x379
00b670 940e d9a1 	CALL SUBOPT_0x3A0
00b672 f420      	BRSH _0x2060159
00b673 940e db25 	CALL SUBOPT_0x3DA
00b675 e0e2      	LDI  R30,LOW(2)
00b676 c0e9      	RJMP _0x20E000C
                 _0x2060159:
00b677 940e cd9b 	CALL SUBOPT_0x218
00b679 940e c1ca 	CALL SUBOPT_0x3A
00b67b f421      	BRNE _0x206015A
00b67c 940e db25 	CALL SUBOPT_0x3DA
00b67e e0e1      	LDI  R30,LOW(1)
00b67f c0e0      	RJMP _0x20E000C
                 _0x206015A:
00b680 940e c08d 	CALL SUBOPT_0xC
                +
00b682 8daa     +LDD R26 , Y + 26
00b683 8dbb     +LDD R27 , Y + 26 + 1
00b684 9652     +ADIW R26 , 18
00b685 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00b687 8daa      	LDD  R26,Y+26
00b688 8dbb      	LDD  R27,Y+26+1
00b689 9615      	ADIW R26,5
00b68a e0e0      	LDI  R30,LOW(0)
00b68b 93ec      	ST   X,R30
                 _0x2060155:
00b68c 940e db08 	CALL SUBOPT_0x3D5
00b68e 940e db1e 	CALL SUBOPT_0x3D9
00b690 d85e      	RCALL _clust2sect
00b691 940e c659 	CALL SUBOPT_0xEC
00b693 940e e0b4 	CALL __CPD10
00b695 f421      	BRNE _0x206015B
00b696 940e db25 	CALL SUBOPT_0x3DA
00b698 e0e2      	LDI  R30,LOW(2)
00b699 c0c6      	RJMP _0x20E000C
                 _0x206015B:
00b69a 940e db2c 	CALL SUBOPT_0x3DB
00b69c 940e c088 	CALL SUBOPT_0xB
00b69e 940e c4d7 	CALL SUBOPT_0xAD
00b6a0 940e c64f 	CALL SUBOPT_0xEA
00b6a2 89ae      	LDD  R26,Y+22
00b6a3 89bf      	LDD  R27,Y+22+1
00b6a4 940e db31 	CALL SUBOPT_0x3DC
00b6a6 f411      	BRNE PC+3
00b6a7 940c b6f5 	JMP _0x206015C
00b6a9 8dea      	LDD  R30,Y+26
00b6aa 8dfb      	LDD  R31,Y+26+1
00b6ab 81e5      	LDD  R30,Z+5
00b6ac 940e daa8 	CALL SUBOPT_0x3C7
00b6ae 010f      	MOVW R0,R30
00b6af 940e db39 	CALL SUBOPT_0x3DD
00b6b1 81e2      	LDD  R30,Z+2
00b6b2 940e caa1 	CALL SUBOPT_0x1A5
00b6b4 f450      	BRSH _0x206015D
00b6b5 940e db39 	CALL SUBOPT_0x3DD
00b6b7 940e d0f6 	CALL SUBOPT_0x291
00b6b9 01df      	MOVW R26,R30
00b6ba 940e db2c 	CALL SUBOPT_0x3DB
00b6bc 1bae      	SUB  R26,R30
00b6bd 0bbf      	SBC  R27,R31
00b6be 01ad      	MOVW R20,R26
                 _0x206015D:
00b6bf 940e db39 	CALL SUBOPT_0x3DD
00b6c1 940e db3e 	CALL SUBOPT_0x3DE
                +
00b6c3 85ef     +LDD R30 , Y + 15
00b6c4 89f8     +LDD R31 , Y + 15 + 1
00b6c5 8969     +LDD R22 , Y + 15 + 2
00b6c6 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b6c7 940e e05b 	CALL __PUTPARD1
00b6c9 2fa4      	MOV  R26,R20
00b6ca 940e a83a 	CALL _disk_read
00b6cc 30e0      	CPI  R30,0
00b6cd f021      	BREQ _0x206015E
00b6ce 940e db25 	CALL SUBOPT_0x3DA
00b6d0 e0e1      	LDI  R30,LOW(1)
00b6d1 c08e      	RJMP _0x20E000C
                 _0x206015E:
00b6d2 8dea      	LDD  R30,Y+26
00b6d3 8dfb      	LDD  R31,Y+26+1
00b6d4 81a4      	LDD  R26,Z+4
00b6d5 74a0      	ANDI R26,LOW(0x40)
00b6d6 f029      	BREQ _0x2060160
00b6d7 940e db45 	CALL SUBOPT_0x3DF
00b6d9 940e db4d 	CALL SUBOPT_0x3E0
00b6db f008      	BRLO _0x2060161
                 _0x2060160:
00b6dc c013      	RJMP _0x206015F
                 _0x2060161:
00b6dd 940e db45 	CALL SUBOPT_0x3DF
00b6df 940e db55 	CALL SUBOPT_0x3E1
00b6e1 81ae      	LDD  R26,Y+6
00b6e2 81bf      	LDD  R27,Y+6+1
00b6e3 2788      	CLR  R24
00b6e4 2799      	CLR  R25
00b6e5 940e c107 	CALL SUBOPT_0x1D
00b6e7 8dec      	LDD  R30,Y+28
00b6e8 8dfd      	LDD  R31,Y+28+1
00b6e9 96b0      	ADIW R30,32
00b6ea 93fa      	ST   -Y,R31
00b6eb 93ea      	ST   -Y,R30
00b6ec e0a0      	LDI  R26,LOW(512)
00b6ed e0b2      	LDI  R27,HIGH(512)
00b6ee 940e ab63 	CALL _mem_cpy_G103
                 _0x206015F:
00b6f0 8daa      	LDD  R26,Y+26
00b6f1 8dbb      	LDD  R27,Y+26+1
00b6f2 940e db5e 	CALL SUBOPT_0x3E2
00b6f4 c053      	RJMP _0x2060151
                 _0x206015C:
00b6f5 8dea      	LDD  R30,Y+26
00b6f6 8dfb      	LDD  R31,Y+26+1
00b6f7 81a4      	LDD  R26,Z+4
00b6f8 74a0      	ANDI R26,LOW(0x40)
00b6f9 f089      	BREQ _0x2060162
00b6fa 940e db39 	CALL SUBOPT_0x3DD
00b6fc 940e db69 	CALL SUBOPT_0x3E3
00b6fe 8ded      	LDD  R30,Y+29
00b6ff 8dfe      	LDD  R31,Y+29+1
00b700 940e db71 	CALL SUBOPT_0x3E4
00b702 f021      	BREQ _0x2060163
00b703 940e db25 	CALL SUBOPT_0x3DA
00b705 e0e1      	LDI  R30,LOW(1)
00b706 c059      	RJMP _0x20E000C
                 _0x2060163:
00b707 8daa      	LDD  R26,Y+26
00b708 8dbb      	LDD  R27,Y+26+1
00b709 940e db7c 	CALL SUBOPT_0x3E5
                 _0x2060162:
00b70b 940e db45 	CALL SUBOPT_0x3DF
00b70d 940e e0c6 	CALL __CPD12
00b70f f079      	BREQ _0x2060164
00b710 940e db39 	CALL SUBOPT_0x3DD
00b712 940e db69 	CALL SUBOPT_0x3E3
                +
00b714 85ef     +LDD R30 , Y + 15
00b715 89f8     +LDD R31 , Y + 15 + 1
00b716 8969     +LDD R22 , Y + 15 + 2
00b717 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b718 940e dac0 	CALL SUBOPT_0x3CC
00b71a f021      	BREQ _0x2060165
00b71b 940e db25 	CALL SUBOPT_0x3DA
00b71d e0e1      	LDI  R30,LOW(1)
00b71e c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00b71f 940e c5de 	CALL SUBOPT_0xD9
                +
00b721 8daa     +LDD R26 , Y + 26
00b722 8dbb     +LDD R27 , Y + 26 + 1
00b723 9656     +ADIW R26 , 22
00b724 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00b726 8daa      	LDD  R26,Y+26
00b727 8dbb      	LDD  R27,Y+26+1
00b728 940e db81 	CALL SUBOPT_0x3E6
                 _0x2060154:
00b72a 8daa      	LDD  R26,Y+26
00b72b 8dbb      	LDD  R27,Y+26+1
00b72c 940e db86 	CALL SUBOPT_0x3E7
00b72e e0a0      	LDI  R26,LOW(512)
00b72f e0b2      	LDI  R27,HIGH(512)
00b730 1bae      	SUB  R26,R30
00b731 0bbf      	SBC  R27,R31
00b732 019d      	MOVW R18,R26
00b733 89ee      	LDD  R30,Y+22
00b734 89ff      	LDD  R31,Y+22+1
00b735 17e2      	CP   R30,R18
00b736 07f3      	CPC  R31,R19
00b737 f410      	BRSH _0x2060166
                +
00b738 892e     +LDD R18 , Y + 22
00b739 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00b73a 940e c8e5 	CALL SUBOPT_0x15B
00b73c 8dac      	LDD  R26,Y+28
00b73d 8dbd      	LDD  R27,Y+28+1
00b73e 940e db86 	CALL SUBOPT_0x3E7
00b740 8dac      	LDD  R26,Y+28
00b741 8dbd      	LDD  R27,Y+28+1
00b742 9690      	ADIW R26,32
00b743 940e c107 	CALL SUBOPT_0x1D
00b745 01d9      	MOVW R26,R18
00b746 940e ab63 	CALL _mem_cpy_G103
                 _0x2060151:
00b748 01f9      	MOVW R30,R18
00b749 940e ca9c 	CALL SUBOPT_0x1A4
00b74b 83ee      	STD  Y+6,R30
00b74c 83ff      	STD  Y+6+1,R31
00b74d 8dea      	LDD  R30,Y+26
00b74e 8dfb      	LDD  R31,Y+26+1
00b74f 940e db8b 	CALL SUBOPT_0x3E8
00b751 01d0      	MOVW R26,R0
00b752 940e e036 	CALL __PUTDP1
00b754 89ac      	LDD  R26,Y+20
00b755 89bd      	LDD  R27,Y+20+1
00b756 940e db94 	CALL SUBOPT_0x3E9
00b758 89ee      	LDD  R30,Y+22
00b759 89ff      	LDD  R31,Y+22+1
00b75a 1be2      	SUB  R30,R18
00b75b 0bf3      	SBC  R31,R19
00b75c 8bee      	STD  Y+22,R30
00b75d 8bff      	STD  Y+22+1,R31
00b75e cee7      	RJMP _0x2060152
                 _0x2060153:
00b75f e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00b760 940e e0d7 	CALL __LOADLOCR6
00b762 966c      	ADIW R28,28
00b763 9508      	RET
                 _f_write:
00b764 93ba      	ST   -Y,R27
00b765 93aa      	ST   -Y,R26
00b766 972a      	SBIW R28,10
00b767 940e e0d0 	CALL __SAVELOCR6
00b769 89ec      	LDD  R30,Y+20
00b76a 89fd      	LDD  R31,Y+20+1
00b76b 83ee      	STD  Y+6,R30
00b76c 83ff      	STD  Y+6+1,R31
00b76d 89a8      	LDD  R26,Y+16
00b76e 89b9      	LDD  R27,Y+16+1
00b76f 940e c737 	CALL SUBOPT_0x113
00b771 940e db9b 	CALL SUBOPT_0x3EA
00b773 8de8      	LDD  R30,Y+24
00b774 8df9      	LDD  R31,Y+24+1
00b775 940e db0b 	CALL SUBOPT_0x3D6
00b777 f011      	BREQ _0x2060167
00b778 2fe1      	MOV  R30,R17
00b779 c182      	RJMP _0x20E000B
                 _0x2060167:
00b77a 89ee      	LDD  R30,Y+22
00b77b 89ff      	LDD  R31,Y+22+1
00b77c 81a4      	LDD  R26,Z+4
00b77d 78a0      	ANDI R26,LOW(0x80)
00b77e f011      	BREQ _0x2060168
00b77f e0e2      	LDI  R30,LOW(2)
00b780 c17b      	RJMP _0x20E000B
                 _0x2060168:
00b781 89ee      	LDD  R30,Y+22
00b782 89ff      	LDD  R31,Y+22+1
00b783 81a4      	LDD  R26,Z+4
00b784 70a2      	ANDI R26,LOW(0x2)
00b785 f411      	BRNE _0x2060169
00b786 e0e7      	LDI  R30,LOW(7)
00b787 c174      	RJMP _0x20E000B
                 _0x2060169:
00b788 89ee      	LDD  R30,Y+22
00b789 89ff      	LDD  R31,Y+22+1
                +
00b78a 85a2     +LDD R26 , Z + 10
00b78b 85b3     +LDD R27 , Z + 10 + 1
00b78c 8584     +LDD R24 , Z + 10 + 2
00b78d 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b78e 89ea      	LDD  R30,Y+18
00b78f 89fb      	LDD  R31,Y+18+1
00b790 940e da63 	CALL SUBOPT_0x3BC
00b792 937f      	PUSH R23
00b793 936f      	PUSH R22
00b794 93ff      	PUSH R31
00b795 93ef      	PUSH R30
00b796 940e db9e 	CALL SUBOPT_0x3EB
00b798 91af      	POP  R26
00b799 91bf      	POP  R27
00b79a 918f      	POP  R24
00b79b 919f      	POP  R25
00b79c 940e e0cb 	CALL __CPD21
00b79e f418      	BRSH _0x206016A
00b79f e0e0      	LDI  R30,LOW(0)
00b7a0 8bea      	STD  Y+18,R30
00b7a1 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00b7a2 89ea      	LDD  R30,Y+18
00b7a3 89fb      	LDD  R31,Y+18+1
00b7a4 9730      	SBIW R30,0
00b7a5 f411      	BRNE PC+3
00b7a6 940c b8e2 	JMP _0x206016D
00b7a8 940e dba4 	CALL SUBOPT_0x3EC
00b7aa 940e db19 	CALL SUBOPT_0x3D8
00b7ac f011      	BREQ PC+3
00b7ad 940c b8a7 	JMP _0x206016E
00b7af 89ee      	LDD  R30,Y+22
00b7b0 89ff      	LDD  R31,Y+22+1
00b7b1 8005      	LDD  R0,Z+5
00b7b2 940e dbab 	CALL SUBOPT_0x3ED
00b7b4 81e2      	LDD  R30,Z+2
00b7b5 160e      	CP   R0,R30
00b7b6 f410      	BRSH PC+3
00b7b7 940c b801 	JMP _0x206016F
00b7b9 89ae      	LDD  R26,Y+22
00b7ba 89bf      	LDD  R27,Y+22+1
00b7bb 9616      	ADIW R26,6
00b7bc 940e da70 	CALL SUBOPT_0x3BE
00b7be f4c1      	BRNE _0x2060170
00b7bf 89ae      	LDD  R26,Y+22
00b7c0 89bf      	LDD  R27,Y+22+1
00b7c1 961e      	ADIW R26,14
00b7c2 940e e02b 	CALL __GETD1P
00b7c4 940e c659 	CALL SUBOPT_0xEC
00b7c6 940e e0b4 	CALL __CPD10
00b7c8 f469      	BRNE _0x2060171
00b7c9 940e db9b 	CALL SUBOPT_0x3EA
00b7cb 940e c164 	CALL SUBOPT_0x2C
00b7cd 940e ae36 	CALL _create_chain_G103
00b7cf 940e c64f 	CALL SUBOPT_0xEA
                +
00b7d1 89ae     +LDD R26 , Y + 22
00b7d2 89bf     +LDD R27 , Y + 22 + 1
00b7d3 961e     +ADIW R26 , 14
00b7d4 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00b7d6 c008      	RJMP _0x2060172
                 _0x2060170:
00b7d7 940e db9b 	CALL SUBOPT_0x3EA
00b7d9 940e dbb0 	CALL SUBOPT_0x3EE
00b7db 940e ae36 	CALL _create_chain_G103
00b7dd 940e c64f 	CALL SUBOPT_0xEA
                 _0x2060172:
00b7df 940e c5de 	CALL SUBOPT_0xD9
00b7e1 940e e0b4 	CALL __CPD10
00b7e3 f409      	BRNE _0x2060173
00b7e4 c0fd      	RJMP _0x206016D
                 _0x2060173:
00b7e5 940e c088 	CALL SUBOPT_0xB
00b7e7 940e da21 	CALL SUBOPT_0x3B1
00b7e9 f421      	BRNE _0x2060174
00b7ea 940e dbb7 	CALL SUBOPT_0x3EF
00b7ec e0e2      	LDI  R30,LOW(2)
00b7ed c10e      	RJMP _0x20E000B
                 _0x2060174:
00b7ee 940e c2ba 	CALL SUBOPT_0x5C
00b7f0 f421      	BRNE _0x2060175
00b7f1 940e dbb7 	CALL SUBOPT_0x3EF
00b7f3 e0e1      	LDI  R30,LOW(1)
00b7f4 c107      	RJMP _0x20E000B
                 _0x2060175:
00b7f5 940e c5de 	CALL SUBOPT_0xD9
                +
00b7f7 89ae     +LDD R26 , Y + 22
00b7f8 89bf     +LDD R27 , Y + 22 + 1
00b7f9 9652     +ADIW R26 , 18
00b7fa 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00b7fc 89ae      	LDD  R26,Y+22
00b7fd 89bf      	LDD  R27,Y+22+1
00b7fe 9615      	ADIW R26,5
00b7ff e0e0      	LDI  R30,LOW(0)
00b800 93ec      	ST   X,R30
                 _0x206016F:
00b801 89ee      	LDD  R30,Y+22
00b802 89ff      	LDD  R31,Y+22+1
00b803 81a4      	LDD  R26,Z+4
00b804 74a0      	ANDI R26,LOW(0x40)
00b805 f089      	BREQ _0x2060176
00b806 940e dbab 	CALL SUBOPT_0x3ED
00b808 940e dbbe 	CALL SUBOPT_0x3F0
00b80a 8de9      	LDD  R30,Y+25
00b80b 8dfa      	LDD  R31,Y+25+1
00b80c 940e db71 	CALL SUBOPT_0x3E4
00b80e f021      	BREQ _0x2060177
00b80f 940e dbb7 	CALL SUBOPT_0x3EF
00b811 e0e1      	LDI  R30,LOW(1)
00b812 c0e9      	RJMP _0x20E000B
                 _0x2060177:
00b813 89ae      	LDD  R26,Y+22
00b814 89bf      	LDD  R27,Y+22+1
00b815 940e db7c 	CALL SUBOPT_0x3E5
                 _0x2060176:
00b817 940e db9b 	CALL SUBOPT_0x3EA
00b819 940e dbb0 	CALL SUBOPT_0x3EE
00b81b 940e aeef 	CALL _clust2sect
00b81d 940e d79d 	CALL SUBOPT_0x35B
00b81f 940e c25f 	CALL SUBOPT_0x4F
00b821 940e e0b4 	CALL __CPD10
00b823 f421      	BRNE _0x2060178
00b824 940e dbb7 	CALL SUBOPT_0x3EF
00b826 e0e2      	LDI  R30,LOW(2)
00b827 c0d4      	RJMP _0x20E000B
                 _0x2060178:
00b828 940e dbc6 	CALL SUBOPT_0x3F1
00b82a 940e c5d9 	CALL SUBOPT_0xD8
00b82c 940e c4d7 	CALL SUBOPT_0xAD
00b82e 940e d79d 	CALL SUBOPT_0x35B
00b830 89aa      	LDD  R26,Y+18
00b831 89bb      	LDD  R27,Y+18+1
00b832 940e db31 	CALL SUBOPT_0x3DC
00b834 f411      	BRNE PC+3
00b835 940c b87e 	JMP _0x2060179
00b837 89ee      	LDD  R30,Y+22
00b838 89ff      	LDD  R31,Y+22+1
00b839 81e5      	LDD  R30,Z+5
00b83a 940e daa8 	CALL SUBOPT_0x3C7
00b83c 010f      	MOVW R0,R30
00b83d 940e dbab 	CALL SUBOPT_0x3ED
00b83f 81e2      	LDD  R30,Z+2
00b840 940e caa1 	CALL SUBOPT_0x1A5
00b842 f450      	BRSH _0x206017A
00b843 940e dbab 	CALL SUBOPT_0x3ED
00b845 940e d0f6 	CALL SUBOPT_0x291
00b847 01df      	MOVW R26,R30
00b848 940e dbc6 	CALL SUBOPT_0x3F1
00b84a 1bae      	SUB  R26,R30
00b84b 0bbf      	SBC  R27,R31
00b84c 01ad      	MOVW R20,R26
                 _0x206017A:
00b84d 940e dbab 	CALL SUBOPT_0x3ED
00b84f 940e db3e 	CALL SUBOPT_0x3DE
00b851 940e c2ec 	CALL SUBOPT_0x64
00b853 2fa4      	MOV  R26,R20
00b854 940e a89f 	CALL _disk_write
00b856 30e0      	CPI  R30,0
00b857 f021      	BREQ _0x206017B
00b858 940e dbb7 	CALL SUBOPT_0x3EF
00b85a e0e1      	LDI  R30,LOW(1)
00b85b c0a0      	RJMP _0x20E000B
                 _0x206017B:
00b85c 940e dbcb 	CALL SUBOPT_0x3F2
00b85e 940e db4d 	CALL SUBOPT_0x3E0
00b860 f4c0      	BRSH _0x206017C
00b861 940e dbd3 	CALL SUBOPT_0x3F3
                +
00b863 89a6     +LDD R26 , Z + 22
00b864 89b7     +LDD R27 , Z + 22 + 1
00b865 8d80     +LDD R24 , Z + 22 + 2
00b866 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b867 940e c5cd 	CALL SUBOPT_0xD5
00b869 940e db55 	CALL SUBOPT_0x3E1
00b86b 85a8      	LDD  R26,Y+8
00b86c 85b9      	LDD  R27,Y+8+1
00b86d 2788      	CLR  R24
00b86e 2799      	CLR  R25
00b86f 940e c107 	CALL SUBOPT_0x1D
00b871 e0a0      	LDI  R26,LOW(512)
00b872 e0b2      	LDI  R27,HIGH(512)
00b873 940e ab63 	CALL _mem_cpy_G103
00b875 89ae      	LDD  R26,Y+22
00b876 89bf      	LDD  R27,Y+22+1
00b877 940e db7c 	CALL SUBOPT_0x3E5
                 _0x206017C:
00b879 89ae      	LDD  R26,Y+22
00b87a 89bf      	LDD  R27,Y+22+1
00b87b 940e db5e 	CALL SUBOPT_0x3E2
00b87d c04d      	RJMP _0x206016B
                 _0x2060179:
00b87e 940e dbcb 	CALL SUBOPT_0x3F2
00b880 940e e0c6 	CALL __CPD12
00b882 f0c9      	BREQ _0x206017D
00b883 940e dba4 	CALL SUBOPT_0x3EC
00b885 010d      	MOVW R0,R26
00b886 940e db9e 	CALL SUBOPT_0x3EB
00b888 01d0      	MOVW R26,R0
00b889 940e e0cb 	CALL __CPD21
00b88b f458      	BRSH _0x206017F
00b88c 940e dbab 	CALL SUBOPT_0x3ED
00b88e 940e dbbe 	CALL SUBOPT_0x3F0
00b890 940e c2ec 	CALL SUBOPT_0x64
00b892 e0a1      	LDI  R26,LOW(1)
00b893 940e a83a 	CALL _disk_read
00b895 30e0      	CPI  R30,0
00b896 f409      	BRNE _0x2060180
                 _0x206017F:
00b897 c004      	RJMP _0x206017E
                 _0x2060180:
00b898 940e dbb7 	CALL SUBOPT_0x3EF
00b89a e0e1      	LDI  R30,LOW(1)
00b89b c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00b89c 940e c25f 	CALL SUBOPT_0x4F
                +
00b89e 89ae     +LDD R26 , Y + 22
00b89f 89bf     +LDD R27 , Y + 22 + 1
00b8a0 9656     +ADIW R26 , 22
00b8a1 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00b8a3 89ae      	LDD  R26,Y+22
00b8a4 89bf      	LDD  R27,Y+22+1
00b8a5 940e db81 	CALL SUBOPT_0x3E6
                 _0x206016E:
00b8a7 89ae      	LDD  R26,Y+22
00b8a8 89bf      	LDD  R27,Y+22+1
00b8a9 940e db86 	CALL SUBOPT_0x3E7
00b8ab e0a0      	LDI  R26,LOW(512)
00b8ac e0b2      	LDI  R27,HIGH(512)
00b8ad 1bae      	SUB  R26,R30
00b8ae 0bbf      	SBC  R27,R31
00b8af 019d      	MOVW R18,R26
00b8b0 89ea      	LDD  R30,Y+18
00b8b1 89fb      	LDD  R31,Y+18+1
00b8b2 17e2      	CP   R30,R18
00b8b3 07f3      	CPC  R31,R19
00b8b4 f410      	BRSH _0x2060181
                +
00b8b5 892a     +LDD R18 , Y + 18
00b8b6 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00b8b7 89ae      	LDD  R26,Y+22
00b8b8 89bf      	LDD  R27,Y+22+1
00b8b9 940e db86 	CALL SUBOPT_0x3E7
00b8bb 89ae      	LDD  R26,Y+22
00b8bc 89bf      	LDD  R27,Y+22+1
00b8bd 9690      	ADIW R26,32
00b8be 940e c107 	CALL SUBOPT_0x1D
00b8c0 940e ca3b 	CALL SUBOPT_0x192
00b8c2 01d9      	MOVW R26,R18
00b8c3 940e ab63 	CALL _mem_cpy_G103
00b8c5 89ae      	LDD  R26,Y+22
00b8c6 89bf      	LDD  R27,Y+22+1
00b8c7 9614      	ADIW R26,4
00b8c8 91ec      	LD   R30,X
00b8c9 64e0      	ORI  R30,0x40
00b8ca 93ec      	ST   X,R30
                 _0x206016B:
00b8cb 01f9      	MOVW R30,R18
00b8cc 940e ca9c 	CALL SUBOPT_0x1A4
00b8ce 83ee      	STD  Y+6,R30
00b8cf 83ff      	STD  Y+6+1,R31
00b8d0 89ee      	LDD  R30,Y+22
00b8d1 89ff      	LDD  R31,Y+22+1
00b8d2 940e db8b 	CALL SUBOPT_0x3E8
00b8d4 01d0      	MOVW R26,R0
00b8d5 940e e036 	CALL __PUTDP1
00b8d7 89a8      	LDD  R26,Y+16
00b8d8 89b9      	LDD  R27,Y+16+1
00b8d9 940e db94 	CALL SUBOPT_0x3E9
00b8db 89ea      	LDD  R30,Y+18
00b8dc 89fb      	LDD  R31,Y+18+1
00b8dd 1be2      	SUB  R30,R18
00b8de 0bf3      	SBC  R31,R19
00b8df 8bea      	STD  Y+18,R30
00b8e0 8bfb      	STD  Y+18+1,R31
00b8e1 cec0      	RJMP _0x206016C
                 _0x206016D:
00b8e2 940e dba4 	CALL SUBOPT_0x3EC
00b8e4 010d      	MOVW R0,R26
00b8e5 940e db9e 	CALL SUBOPT_0x3EB
00b8e7 01d0      	MOVW R26,R0
00b8e8 940e e0c6 	CALL __CPD12
00b8ea f450      	BRSH _0x2060182
00b8eb 89ae      	LDD  R26,Y+22
00b8ec 89bf      	LDD  R27,Y+22+1
00b8ed 9616      	ADIW R26,6
00b8ee 940e e02b 	CALL __GETD1P
                +
00b8f0 89ae     +LDD R26 , Y + 22
00b8f1 89bf     +LDD R27 , Y + 22 + 1
00b8f2 961a     +ADIW R26 , 10
00b8f3 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00b8f5 89ae      	LDD  R26,Y+22
00b8f6 89bf      	LDD  R27,Y+22+1
00b8f7 9614      	ADIW R26,4
00b8f8 91ec      	LD   R30,X
00b8f9 62e0      	ORI  R30,0x20
00b8fa 93ec      	ST   X,R30
00b8fb e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00b8fc 940e e0d7 	CALL __LOADLOCR6
00b8fe 9668      	ADIW R28,24
00b8ff 9508      	RET
                 _f_sync:
00b900 93ba      	ST   -Y,R27
00b901 93aa      	ST   -Y,R26
00b902 9724      	SBIW R28,4
00b903 940e e0d2 	CALL __SAVELOCR4
00b905 940e da60 	CALL SUBOPT_0x3BB
00b907 85ea      	LDD  R30,Y+10
00b908 85fb      	LDD  R31,Y+10+1
00b909 940e db0b 	CALL SUBOPT_0x3D6
00b90b f011      	BREQ PC+3
00b90c 940c b97c 	JMP _0x2060183
00b90e 85e8      	LDD  R30,Y+8
00b90f 85f9      	LDD  R31,Y+8+1
00b910 81a4      	LDD  R26,Z+4
00b911 72a0      	ANDI R26,LOW(0x20)
00b912 f411      	BRNE PC+3
00b913 940c b97c 	JMP _0x2060184
00b915 81a4      	LDD  R26,Z+4
00b916 74a0      	ANDI R26,LOW(0x40)
00b917 f0a1      	BREQ _0x2060185
00b918 940e da4a 	CALL SUBOPT_0x3B8
00b91a 81e1      	LDD  R30,Z+1
00b91b 93ea      	ST   -Y,R30
00b91c 85e9      	LDD  R30,Y+9
00b91d 85fa      	LDD  R31,Y+9+1
00b91e 96b0      	ADIW R30,32
00b91f 93fa      	ST   -Y,R31
00b920 93ea      	ST   -Y,R30
00b921 85eb      	LDD  R30,Y+11
00b922 85fc      	LDD  R31,Y+11+1
00b923 940e db71 	CALL SUBOPT_0x3E4
00b925 f011      	BREQ _0x2060186
00b926 e0e1      	LDI  R30,LOW(1)
00b927 c055      	RJMP _0x20E000A
                 _0x2060186:
00b928 85a8      	LDD  R26,Y+8
00b929 85b9      	LDD  R27,Y+8+1
00b92a 940e db7c 	CALL SUBOPT_0x3E5
                 _0x2060185:
00b92c 940e da60 	CALL SUBOPT_0x3BB
00b92e 85ea      	LDD  R30,Y+10
00b92f 85fb      	LDD  R31,Y+10+1
                +
00b930 8da2     +LDD R26 , Z + 26
00b931 8db3     +LDD R27 , Z + 26 + 1
00b932 8d84     +LDD R24 , Z + 26 + 2
00b933 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00b934 940e db03 	CALL SUBOPT_0x3D4
00b936 f011      	BREQ PC+3
00b937 940c b97c 	JMP _0x2060187
00b939 85a8      	LDD  R26,Y+8
00b93a 85b9      	LDD  R27,Y+8+1
00b93b 965e      	ADIW R26,30
00b93c 912d      	LD   R18,X+
00b93d 913c      	LD   R19,X
00b93e 01d9      	MOVW R26,R18
00b93f 961b      	ADIW R26,11
00b940 91ec      	LD   R30,X
00b941 62e0      	ORI  R30,0x20
00b942 93ec      	ST   X,R30
00b943 85a8      	LDD  R26,Y+8
00b944 85b9      	LDD  R27,Y+8+1
00b945 961a      	ADIW R26,10
00b946 940e e02b 	CALL __GETD1P
                +
00b948 01d9     +MOVW R26 , R18
00b949 965c     +ADIW R26 , 28
00b94a 940e e036+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00b94c 85a8      	LDD  R26,Y+8
00b94d 85b9      	LDD  R27,Y+8+1
00b94e 961e      	ADIW R26,14
00b94f 940e e027 	CALL __GETW1P
                +
00b951 01d9     +MOVW R26 , R18
00b952 965a     +ADIW R26 , 26
00b953 93ed     +ST X + , R30
00b954 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00b955 85e8      	LDD  R30,Y+8
00b956 85f9      	LDD  R31,Y+8+1
                +
00b957 85a6     +LDD R26 , Z + 14
00b958 85b7     +LDD R27 , Z + 14 + 1
00b959 8980     +LDD R24 , Z + 14 + 2
00b95a 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00b95b 01fd      	MOVW R30,R26
00b95c 01bc      	MOVW R22,R24
00b95d 940e df28 	CALL __LSRD16
                +
00b95f 01d9     +MOVW R26 , R18
00b960 9654     +ADIW R26 , 20
00b961 93ed     +ST X + , R30
00b962 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00b963 940e aad5 	CALL _get_fattime
00b965 940e c4dc 	CALL SUBOPT_0xAE
                +
00b967 01d9     +MOVW R26 , R18
00b968 9656     +ADIW R26 , 22
00b969 940e e036+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00b96b 85a8      	LDD  R26,Y+8
00b96c 85b9      	LDD  R27,Y+8+1
00b96d 9614      	ADIW R26,4
00b96e 91ec      	LD   R30,X
00b96f 7def      	ANDI R30,0xDF
00b970 93ec      	ST   X,R30
00b971 940e da4a 	CALL SUBOPT_0x3B8
00b973 9634      	ADIW R30,4
00b974 e0a1      	LDI  R26,LOW(1)
00b975 83a0      	STD  Z+0,R26
00b976 940e da4a 	CALL SUBOPT_0x3B8
00b978 01df      	MOVW R26,R30
00b979 940e ac42 	CALL _sync_G103
00b97b 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00b97c 2fe1      	MOV  R30,R17
                 _0x20E000A:
00b97d 940e e0d9 	CALL __LOADLOCR4
00b97f 962a      	ADIW R28,10
00b980 9508      	RET
                 _f_close:
00b981 93ba      	ST   -Y,R27
00b982 93aa      	ST   -Y,R26
00b983 931a      	ST   -Y,R17
00b984 81a9      	LDD  R26,Y+1
00b985 81ba      	LDD  R27,Y+1+1
00b986 df79      	RCALL _f_sync
00b987 2f1e      	MOV  R17,R30
00b988 3010      	CPI  R17,0
00b989 f421      	BRNE _0x2060188
00b98a 81a9      	LDD  R26,Y+1
00b98b 81ba      	LDD  R27,Y+1+1
00b98c 940e c737 	CALL SUBOPT_0x113
                 _0x2060188:
00b98e 2fe1      	MOV  R30,R17
00b98f c296      	RJMP _0x20E0005
                 _f_lseek:
00b990 940e e060 	CALL __PUTPARD2
00b992 9760      	SBIW R28,16
00b993 931a      	ST   -Y,R17
00b994 940e dbdb 	CALL SUBOPT_0x3F4
00b996 89ef      	LDD  R30,Y+23
00b997 8df8      	LDD  R31,Y+23+1
00b998 940e db0b 	CALL SUBOPT_0x3D6
00b99a f009      	BREQ _0x2060191
00b99b c18c      	RJMP _0x20E0009
                 _0x2060191:
00b99c 89ed      	LDD  R30,Y+21
00b99d 89fe      	LDD  R31,Y+21+1
00b99e 81a4      	LDD  R26,Z+4
00b99f 78a0      	ANDI R26,LOW(0x80)
00b9a0 f011      	BREQ _0x2060192
00b9a1 e0e2      	LDI  R30,LOW(2)
00b9a2 c186      	RJMP _0x20E0008
                 _0x2060192:
00b9a3 940e dbde 	CALL SUBOPT_0x3F5
00b9a5 940e dbe4 	CALL SUBOPT_0x3F6
00b9a7 940e e0c6 	CALL __CPD12
00b9a9 f428      	BRSH _0x2060194
00b9aa 89ed      	LDD  R30,Y+21
00b9ab 89fe      	LDD  R31,Y+21+1
00b9ac 81a4      	LDD  R26,Z+4
00b9ad 70a2      	ANDI R26,LOW(0x2)
00b9ae f009      	BREQ _0x2060195
                 _0x2060194:
00b9af c004      	RJMP _0x2060193
                 _0x2060195:
00b9b0 940e dbde 	CALL SUBOPT_0x3F5
00b9b2 940e dbe9 	CALL SUBOPT_0x3F7
                 _0x2060193:
00b9b4 89ad      	LDD  R26,Y+21
00b9b5 89be      	LDD  R27,Y+21+1
00b9b6 9616      	ADIW R26,6
00b9b7 940e d956 	CALL SUBOPT_0x397
00b9b9 940e da45 	CALL SUBOPT_0x3B7
00b9bb 940e da2f 	CALL SUBOPT_0x3B3
00b9bd 940e dbee 	CALL SUBOPT_0x3F8
00b9bf 9615      	ADIW R26,5
00b9c0 efef      	LDI  R30,LOW(255)
00b9c1 93ec      	ST   X,R30
00b9c2 940e dbe4 	CALL SUBOPT_0x3F6
00b9c4 940e e0c0 	CALL __CPD02
00b9c6 f010      	BRLO PC+3
00b9c7 940c bad4 	JMP _0x2060196
00b9c9 940e dbf6 	CALL SUBOPT_0x3F9
00b9cb 940e d0f6 	CALL SUBOPT_0x291
00b9cd 940e df38 	CALL __CWD1
                +
00b9cf e0a0     +LDI R26 , LOW ( 0x200 )
00b9d0 e0b2     +LDI R27 , HIGH ( 0x200 )
00b9d1 e080     +LDI R24 , BYTE3 ( 0x200 )
00b9d2 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00b9d3 940e df59 	CALL __MULD12U
00b9d5 940e d8f9 	CALL SUBOPT_0x387
00b9d7 940e d0f9 	CALL SUBOPT_0x292
00b9d9 940e e0c0 	CALL __CPD02
00b9db f498      	BRSH _0x2060198
00b9dc 940e dbfb 	CALL SUBOPT_0x3FA
00b9de 940e dc00 	CALL SUBOPT_0x3FB
00b9e0 937f      	PUSH R23
00b9e1 936f      	PUSH R22
00b9e2 93ff      	PUSH R31
00b9e3 93ef      	PUSH R30
00b9e4 940e da1c 	CALL SUBOPT_0x3B0
00b9e6 940e dc00 	CALL SUBOPT_0x3FB
00b9e8 91af      	POP  R26
00b9e9 91bf      	POP  R27
00b9ea 918f      	POP  R24
00b9eb 919f      	POP  R25
00b9ec 940e e0cb 	CALL __CPD21
00b9ee f408      	BRSH _0x2060199
                 _0x2060198:
00b9ef c021      	RJMP _0x2060197
                 _0x2060199:
00b9f0 940e da1c 	CALL SUBOPT_0x3B0
00b9f2 940e c5e3 	CALL SUBOPT_0xDA
00b9f4 01df      	MOVW R26,R30
00b9f5 01cb      	MOVW R24,R22
00b9f6 940e c318 	CALL SUBOPT_0x6B
00b9f8 940e c5e3 	CALL SUBOPT_0xDA
00b9fa 940e df3d 	CALL __COMD1
00b9fc 940e dec7 	CALL __ANDD12
00b9fe 940e dbee 	CALL SUBOPT_0x3F8
00ba00 9616      	ADIW R26,6
00ba01 940e e02b 	CALL __GETD1P
00ba03 940e dbe4 	CALL SUBOPT_0x3F6
00ba05 940e dec2 	CALL __SUBD21
                +
00ba07 8ba9     +STD Y + 17 , R26
00ba08 8bba     +STD Y + 17 + 1 , R27
00ba09 8b8b     +STD Y + 17 + 2 , R24
00ba0a 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00ba0b 89ad      	LDD  R26,Y+21
00ba0c 89be      	LDD  R27,Y+21+1
00ba0d 9652      	ADIW R26,18
00ba0e 940e dc09 	CALL SUBOPT_0x3FC
00ba10 c02b      	RJMP _0x206019A
                 _0x2060197:
00ba11 89ad      	LDD  R26,Y+21
00ba12 89be      	LDD  R27,Y+21+1
00ba13 961e      	ADIW R26,14
00ba14 940e dc09 	CALL SUBOPT_0x3FC
00ba16 940e dc10 	CALL SUBOPT_0x3FD
00ba18 940e e0b4 	CALL __CPD10
00ba1a f4f9      	BRNE _0x206019B
00ba1b 940e dbdb 	CALL SUBOPT_0x3F4
00ba1d 940e c164 	CALL SUBOPT_0x2C
00ba1f 940e dc15 	CALL SUBOPT_0x3FE
00ba21 940e dc1c 	CALL SUBOPT_0x3FF
00ba23 940e da21 	CALL SUBOPT_0x3B1
00ba25 f421      	BRNE _0x206019C
00ba26 940e dc21 	CALL SUBOPT_0x400
00ba28 e0e2      	LDI  R30,LOW(2)
00ba29 c0ff      	RJMP _0x20E0008
                 _0x206019C:
00ba2a 940e dc1c 	CALL SUBOPT_0x3FF
00ba2c 940e c1ca 	CALL SUBOPT_0x3A
00ba2e f421      	BRNE _0x206019D
00ba2f 940e dc21 	CALL SUBOPT_0x400
00ba31 e0e1      	LDI  R30,LOW(1)
00ba32 c0f6      	RJMP _0x20E0008
                 _0x206019D:
00ba33 940e dc10 	CALL SUBOPT_0x3FD
                +
00ba35 89ad     +LDD R26 , Y + 21
00ba36 89be     +LDD R27 , Y + 21 + 1
00ba37 961e     +ADIW R26 , 14
00ba38 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00ba3a 940e dc28 	CALL SUBOPT_0x401
                 _0x206019A:
00ba3c 940e dc10 	CALL SUBOPT_0x3FD
00ba3e 940e e0b4 	CALL __CPD10
00ba40 f411      	BRNE PC+3
00ba41 940c bad4 	JMP _0x206019E
                 _0x206019F:
00ba43 940e c318 	CALL SUBOPT_0x6B
00ba45 940e dbe4 	CALL SUBOPT_0x3F6
00ba47 940e e0c6 	CALL __CPD12
00ba49 f010      	BRLO PC+3
00ba4a 940c ba9b 	JMP _0x20601A1
00ba4c 89ed      	LDD  R30,Y+21
00ba4d 89fe      	LDD  R31,Y+21+1
00ba4e 81a4      	LDD  R26,Z+4
00ba4f 70a2      	ANDI R26,LOW(0x2)
00ba50 f089      	BREQ _0x20601A2
00ba51 940e dbdb 	CALL SUBOPT_0x3F4
00ba53 940e dc2f 	CALL SUBOPT_0x402
00ba55 940e dc15 	CALL SUBOPT_0x3FE
00ba57 940e dc10 	CALL SUBOPT_0x3FD
00ba59 940e e0b4 	CALL __CPD10
00ba5b f429      	BRNE _0x20601A3
00ba5c 940e c318 	CALL SUBOPT_0x6B
00ba5e 940e dbe9 	CALL SUBOPT_0x3F7
00ba60 c03a      	RJMP _0x20601A1
                 _0x20601A3:
00ba61 c00a      	RJMP _0x20601A4
                 _0x20601A2:
00ba62 940e dbdb 	CALL SUBOPT_0x3F4
00ba64 940e dc2f 	CALL SUBOPT_0x402
00ba66 940e acb6 	CALL _get_fat
                +
00ba68 87ed     +STD Y + 13 , R30
00ba69 87fe     +STD Y + 13 + 1 , R31
00ba6a 876f     +STD Y + 13 + 2 , R22
00ba6b 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00ba6c 940e dc1c 	CALL SUBOPT_0x3FF
00ba6e 940e c1ca 	CALL SUBOPT_0x3A
00ba70 f421      	BRNE _0x20601A5
00ba71 940e dc21 	CALL SUBOPT_0x400
00ba73 e0e1      	LDI  R30,LOW(1)
00ba74 c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00ba75 940e dc1c 	CALL SUBOPT_0x3FF
00ba77 940e d9a1 	CALL SUBOPT_0x3A0
00ba79 f048      	BRLO _0x20601A7
00ba7a 940e dbf6 	CALL SUBOPT_0x3F9
00ba7c 940e da84 	CALL SUBOPT_0x3C2
00ba7e 940e dc1c 	CALL SUBOPT_0x3FF
00ba80 940e e0cb 	CALL __CPD21
00ba82 f020      	BRLO _0x20601A6
                 _0x20601A7:
00ba83 940e dc21 	CALL SUBOPT_0x400
00ba85 e0e2      	LDI  R30,LOW(2)
00ba86 c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00ba87 940e dc28 	CALL SUBOPT_0x401
00ba89 940e dc34 	CALL SUBOPT_0x403
00ba8b 940e d91f 	CALL SUBOPT_0x38D
00ba8d 940e deb3 	CALL __ADDD12
00ba8f 01d0      	MOVW R26,R0
00ba90 940e e036 	CALL __PUTDP1
00ba92 940e d91f 	CALL SUBOPT_0x38D
00ba94 940e dbfb 	CALL SUBOPT_0x3FA
00ba96 940e debd 	CALL __SUBD12
00ba98 940e dbe9 	CALL SUBOPT_0x3F7
00ba9a cfa8      	RJMP _0x206019F
                 _0x20601A1:
00ba9b 940e dc34 	CALL SUBOPT_0x403
00ba9d 940e dbe4 	CALL SUBOPT_0x3F6
00ba9f 940e deb3 	CALL __ADDD12
00baa1 01d0      	MOVW R26,R0
00baa2 940e e036 	CALL __PUTDP1
00baa4 940e dbe4 	CALL SUBOPT_0x3F6
                +
00baa6 e0e0     +LDI R30 , LOW ( 0x200 )
00baa7 e0f2     +LDI R31 , HIGH ( 0x200 )
00baa8 e060     +LDI R22 , BYTE3 ( 0x200 )
00baa9 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00baaa 940e dfaf 	CALL __DIVD21U
                +
00baac 89ad     +LDD R26 , Y + 21
00baad 89be     +LDD R27 , Y + 21 + 1
00baae 9615     +ADIW R26 , 5
00baaf 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00bab0 940e dbfb 	CALL SUBOPT_0x3FA
00bab2 70f1      	ANDI R31,HIGH(0x1FF)
00bab3 9730      	SBIW R30,0
00bab4 f0f9      	BREQ _0x20601A9
00bab5 940e dbdb 	CALL SUBOPT_0x3F4
00bab7 940e dc2f 	CALL SUBOPT_0x402
00bab9 940e aeef 	CALL _clust2sect
00babb 940e da2f 	CALL SUBOPT_0x3B3
00babd 940e d95d 	CALL SUBOPT_0x398
00babf 940e e0b4 	CALL __CPD10
00bac1 f421      	BRNE _0x20601AA
00bac2 940e dc21 	CALL SUBOPT_0x400
00bac4 e0e2      	LDI  R30,LOW(2)
00bac5 c063      	RJMP _0x20E0008
                 _0x20601AA:
00bac6 89ed      	LDD  R30,Y+21
00bac7 89fe      	LDD  R31,Y+21+1
00bac8 81e5      	LDD  R30,Z+5
00bac9 e0f0      	LDI  R31,0
00baca 940e da0e 	CALL SUBOPT_0x3AE
00bacc 940e c4d7 	CALL SUBOPT_0xAD
00bace 940e da2f 	CALL SUBOPT_0x3B3
00bad0 89ad      	LDD  R26,Y+21
00bad1 89be      	LDD  R27,Y+21+1
00bad2 940e db81 	CALL SUBOPT_0x3E6
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00bad4 940e dc3c 	CALL SUBOPT_0x404
00bad6 940e db19 	CALL SUBOPT_0x3D8
00bad8 f051      	BREQ _0x20601AC
00bad9 89ad      	LDD  R26,Y+21
00bada 89be      	LDD  R27,Y+21+1
00badb 9656      	ADIW R26,22
00badc 940e e02b 	CALL __GETD1P
00bade 940e da0e 	CALL SUBOPT_0x3AE
00bae0 940e e0c6 	CALL __CPD12
00bae2 f409      	BRNE _0x20601AD
                 _0x20601AC:
00bae3 c02b      	RJMP _0x20601AB
                 _0x20601AD:
00bae4 89ed      	LDD  R30,Y+21
00bae5 89fe      	LDD  R31,Y+21+1
00bae6 81a4      	LDD  R26,Z+4
00bae7 74a0      	ANDI R26,LOW(0x40)
00bae8 f089      	BREQ _0x20601AE
00bae9 940e dbf6 	CALL SUBOPT_0x3F9
00baeb 81e1      	LDD  R30,Z+1
00baec 93ea      	ST   -Y,R30
00baed 940e dbd3 	CALL SUBOPT_0x3F3
00baef 940e db71 	CALL SUBOPT_0x3E4
00baf1 f021      	BREQ _0x20601AF
00baf2 940e dc21 	CALL SUBOPT_0x400
00baf4 e0e1      	LDI  R30,LOW(1)
00baf5 c033      	RJMP _0x20E0008
                 _0x20601AF:
00baf6 89ad      	LDD  R26,Y+21
00baf7 89be      	LDD  R27,Y+21+1
00baf8 940e db7c 	CALL SUBOPT_0x3E5
                 _0x20601AE:
00bafa 940e dbf6 	CALL SUBOPT_0x3F9
00bafc 81e1      	LDD  R30,Z+1
00bafd 93ea      	ST   -Y,R30
00bafe 89ee      	LDD  R30,Y+22
00baff 89ff      	LDD  R31,Y+22+1
00bb00 96b0      	ADIW R30,32
00bb01 940e d977 	CALL SUBOPT_0x39B
00bb03 f021      	BREQ _0x20601B0
00bb04 940e dc21 	CALL SUBOPT_0x400
00bb06 e0e1      	LDI  R30,LOW(1)
00bb07 c021      	RJMP _0x20E0008
                 _0x20601B0:
00bb08 940e d95d 	CALL SUBOPT_0x398
                +
00bb0a 89ad     +LDD R26 , Y + 21
00bb0b 89be     +LDD R27 , Y + 21 + 1
00bb0c 9656     +ADIW R26 , 22
00bb0d 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00bb0f 940e dc3c 	CALL SUBOPT_0x404
00bb11 010d      	MOVW R0,R26
00bb12 940e dbde 	CALL SUBOPT_0x3F5
00bb14 01d0      	MOVW R26,R0
00bb15 940e e0c6 	CALL __CPD12
00bb17 f480      	BRSH _0x20601B1
00bb18 89ad      	LDD  R26,Y+21
00bb19 89be      	LDD  R27,Y+21+1
00bb1a 9616      	ADIW R26,6
00bb1b 940e e02b 	CALL __GETD1P
                +
00bb1d 89ad     +LDD R26 , Y + 21
00bb1e 89be     +LDD R27 , Y + 21 + 1
00bb1f 961a     +ADIW R26 , 10
00bb20 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00bb22 89ad      	LDD  R26,Y+21
00bb23 89be      	LDD  R27,Y+21+1
00bb24 9614      	ADIW R26,4
00bb25 91ec      	LD   R30,X
00bb26 62e0      	ORI  R30,0x20
00bb27 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00bb28 2fe1      	MOV  R30,R17
                 _0x20E0008:
00bb29 8118      	LDD  R17,Y+0
00bb2a 9667      	ADIW R28,23
00bb2b 9508      	RET
                 _f_getfree:
00bb2c 93ba      	ST   -Y,R27
00bb2d 93aa      	ST   -Y,R26
00bb2e 9760      	SBIW R28,16
00bb2f 940e e0d0 	CALL __SAVELOCR6
00bb31 01fe      	MOVW R30,R28
00bb32 967a      	ADIW R30,26
00bb33 93fa      	ST   -Y,R31
00bb34 93ea      	ST   -Y,R30
00bb35 940e d151 	CALL SUBOPT_0x2A0
00bb37 e0a0      	LDI  R26,LOW(0)
00bb38 940e b29c 	CALL _chk_mounted
00bb3a 2f1e      	MOV  R17,R30
00bb3b 3010      	CPI  R17,0
00bb3c f011      	BREQ _0x20601C3
00bb3d 2fe1      	MOV  R30,R17
00bb3e c0c9      	RJMP _0x20E0006
                 _0x20601C3:
00bb3f 940e dbab 	CALL SUBOPT_0x3ED
00bb41 010f      	MOVW R0,R30
00bb42 963e      	ADIW R30,14
00bb43 01df      	MOVW R26,R30
00bb44 940e e02b 	CALL __GETD1P
00bb46 937f      	PUSH R23
00bb47 936f      	PUSH R22
00bb48 93ff      	PUSH R31
00bb49 93ef      	PUSH R30
00bb4a 01d0      	MOVW R26,R0
00bb4b 965e      	ADIW R26,30
00bb4c 940e e02b 	CALL __GETD1P
                +
00bb4e 50e2     +SUBI R30 , LOW ( 2 )
00bb4f 40f0     +SBCI R31 , HIGH ( 2 )
00bb50 4060     +SBCI R22 , BYTE3 ( 2 )
00bb51 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00bb52 91af      	POP  R26
00bb53 91bf      	POP  R27
00bb54 918f      	POP  R24
00bb55 919f      	POP  R25
00bb56 940e e0c6 	CALL __CPD12
00bb58 f038      	BRLO _0x20601C4
00bb59 940e dbab 	CALL SUBOPT_0x3ED
00bb5b 963e      	ADIW R30,14
00bb5c 01df      	MOVW R26,R30
00bb5d 940e e02b 	CALL __GETD1P
00bb5f c0a3      	RJMP _0x20E0007
                 _0x20601C4:
00bb60 940e dbab 	CALL SUBOPT_0x3ED
00bb62 8100      	LD   R16,Z
00bb63 e0e0      	LDI  R30,LOW(0)
                +
00bb64 8bea     +STD Y + 18 , R30
00bb65 8beb     +STD Y + 18 + 1 , R30
00bb66 8bec     +STD Y + 18 + 2 , R30
00bb67 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00bb68 3001      	CPI  R16,1
00bb69 f5b9      	BRNE _0x20601C5
00bb6a 940e da39 	CALL SUBOPT_0x3B5
00bb6c 940e daee 	CALL SUBOPT_0x3D1
                 _0x20601C7:
00bb6e 940e db9b 	CALL SUBOPT_0x3EA
00bb70 940e cd9b 	CALL SUBOPT_0x218
00bb72 940e acb6 	CALL _get_fat
00bb74 940e c505 	CALL SUBOPT_0xB6
00bb76 940e c2aa 	CALL SUBOPT_0x59
00bb78 940e c1ca 	CALL SUBOPT_0x3A
00bb7a f411      	BRNE _0x20601C9
00bb7b e0e1      	LDI  R30,LOW(1)
00bb7c c08b      	RJMP _0x20E0006
                 _0x20601C9:
00bb7d 940e c2aa 	CALL SUBOPT_0x59
00bb7f 940e da21 	CALL SUBOPT_0x3B1
00bb81 f411      	BRNE _0x20601CA
00bb82 e0e2      	LDI  R30,LOW(2)
00bb83 c084      	RJMP _0x20E0006
                 _0x20601CA:
00bb84 940e c500 	CALL SUBOPT_0xB5
00bb86 940e e0b4 	CALL __CPD10
00bb88 f411      	BRNE _0x20601CB
00bb89 940e dc43 	CALL SUBOPT_0x405
                 _0x20601CB:
00bb8b 940e c2d1 	CALL SUBOPT_0x60
00bb8d 940e c527 	CALL SUBOPT_0xBC
00bb8f 940e daee 	CALL SUBOPT_0x3D1
00bb91 937f      	PUSH R23
00bb92 936f      	PUSH R22
00bb93 93ff      	PUSH R31
00bb94 93ef      	PUSH R30
00bb95 940e dbab 	CALL SUBOPT_0x3ED
00bb97 940e da84 	CALL SUBOPT_0x3C2
00bb99 91af      	POP  R26
00bb9a 91bf      	POP  R27
00bb9b 918f      	POP  R24
00bb9c 919f      	POP  R25
00bb9d 940e e0cb 	CALL __CPD21
00bb9f f270      	BRLO _0x20601C7
00bba0 c052      	RJMP _0x20601CC
                 _0x20601C5:
00bba1 940e dbab 	CALL SUBOPT_0x3ED
00bba3 940e da84 	CALL SUBOPT_0x3C2
00bba5 940e daee 	CALL SUBOPT_0x3D1
00bba7 940e dbab 	CALL SUBOPT_0x3ED
00bba9 96b2      	ADIW R30,34
00bbaa 01df      	MOVW R26,R30
00bbab 940e e02b 	CALL __GETD1P
00bbad 940e d710 	CALL SUBOPT_0x346
00bbaf 940e c02e 	CALL SUBOPT_0x0
                 _0x20601CE:
00bbb1 2e02      	MOV  R0,R18
00bbb2 2a03      	OR   R0,R19
00bbb3 f4c1      	BRNE _0x20601D0
00bbb4 940e db9b 	CALL SUBOPT_0x3EA
00bbb6 940e c5de 	CALL SUBOPT_0xD9
00bbb8 940e c527 	CALL SUBOPT_0xBC
00bbba 940e c64f 	CALL SUBOPT_0xEA
00bbbc 9731      	SBIW R30,1
00bbbd 4060      	SBCI R22,0
00bbbe 4070      	SBCI R23,0
00bbbf 01df      	MOVW R26,R30
00bbc0 01cb      	MOVW R24,R22
00bbc1 940e db03 	CALL SUBOPT_0x3D4
00bbc3 f011      	BREQ _0x20601D1
00bbc4 2fe1      	MOV  R30,R17
00bbc5 c042      	RJMP _0x20E0006
                 _0x20601D1:
00bbc6 940e dbab 	CALL SUBOPT_0x3ED
00bbc8 96f2      	ADIW R30,50
00bbc9 01af      	MOVW R20,R30
                +
00bbca e020     +LDI R18 , LOW ( 512 )
00bbcb e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00bbcc 3002      	CPI  R16,2
00bbcd f461      	BRNE _0x20601D2
00bbce 01da      	MOVW R26,R20
00bbcf 940e e027 	CALL __GETW1P
00bbd1 9730      	SBIW R30,0
00bbd2 f411      	BRNE _0x20601D3
00bbd3 940e dc43 	CALL SUBOPT_0x405
                 _0x20601D3:
                +
00bbd5 5f4e     +SUBI R20 , LOW ( - 2 )
00bbd6 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00bbd7 5022     +SUBI R18 , LOW ( 2 )
00bbd8 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00bbd9 c010      	RJMP _0x20601D4
                 _0x20601D2:
00bbda 01da      	MOVW R26,R20
00bbdb 940e e02b 	CALL __GETD1P
                +
00bbdd 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00bbde 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00bbdf 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00bbe0 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00bbe1 940e e0b4 	CALL __CPD10
00bbe3 f411      	BRNE _0x20601D5
00bbe4 940e dc43 	CALL SUBOPT_0x405
                 _0x20601D5:
                +
00bbe6 5f4c     +SUBI R20 , LOW ( - 4 )
00bbe7 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00bbe8 5024     +SUBI R18 , LOW ( 4 )
00bbe9 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00bbea 940e c2d1 	CALL SUBOPT_0x60
00bbec 9731      	SBIW R30,1
00bbed 4060      	SBCI R22,0
00bbee 4070      	SBCI R23,0
00bbef 940e daee 	CALL SUBOPT_0x3D1
00bbf1 f009      	BREQ _0x20601CF
00bbf2 cfbe      	RJMP _0x20601CE
                 _0x20601CF:
                 _0x20601CC:
00bbf3 940e dbab 	CALL SUBOPT_0x3ED
00bbf5 963e      	ADIW R30,14
00bbf6 940e cf36 	CALL SUBOPT_0x24E
00bbf8 940e cf8e 	CALL SUBOPT_0x25B
00bbfa 3003      	CPI  R16,3
00bbfb f429      	BRNE _0x20601D6
00bbfc 940e dbab 	CALL SUBOPT_0x3ED
00bbfe 9635      	ADIW R30,5
00bbff e0a1      	LDI  R26,LOW(1)
00bc00 83a0      	STD  Z+0,R26
                 _0x20601D6:
00bc01 940e c5c8 	CALL SUBOPT_0xD4
                 _0x20E0007:
00bc03 8da8      	LDD  R26,Y+24
00bc04 8db9      	LDD  R27,Y+24+1
00bc05 940e e036 	CALL __PUTDP1
00bc07 e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00bc08 940e e0d7 	CALL __LOADLOCR6
00bc0a 966c      	ADIW R28,28
00bc0b 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00bc0c 93aa      	ST   -Y,R26
                 _0x2080003:
00bc0d 91e0 00c0 	LDS  R30,192
00bc0f 72e0      	ANDI R30,LOW(0x20)
00bc10 f3e1      	BREQ _0x2080003
00bc11 81e8      	LD   R30,Y
00bc12 93e0 00c6 	STS  198,R30
00bc14 9621      	ADIW R28,1
00bc15 9508      	RET
                 _puts:
00bc16 93ba      	ST   -Y,R27
00bc17 93aa      	ST   -Y,R26
00bc18 931a      	ST   -Y,R17
                 _0x2080006:
00bc19 81a9      	LDD  R26,Y+1
00bc1a 81ba      	LDD  R27,Y+1+1
00bc1b 91ed      	LD   R30,X+
00bc1c 83a9      	STD  Y+1,R26
00bc1d 83ba      	STD  Y+1+1,R27
00bc1e 2f1e      	MOV  R17,R30
00bc1f 30e0      	CPI  R30,0
00bc20 f019      	BREQ _0x2080008
00bc21 2fa1      	MOV  R26,R17
00bc22 dfe9      	RCALL _putchar
00bc23 cff5      	RJMP _0x2080006
                 _0x2080008:
00bc24 e0aa      	LDI  R26,LOW(10)
00bc25 dfe6      	RCALL _putchar
                 _0x20E0005:
00bc26 8118      	LDD  R17,Y+0
00bc27 9623      	ADIW R28,3
00bc28 9508      	RET
                 _put_buff_G104:
00bc29 940e c3b3 	CALL SUBOPT_0x81
00bc2b 81aa      	LDD  R26,Y+2
00bc2c 81bb      	LDD  R27,Y+2+1
00bc2d 9612      	ADIW R26,2
00bc2e 940e e027 	CALL __GETW1P
00bc30 9730      	SBIW R30,0
00bc31 f129      	BREQ _0x208002A
00bc32 81aa      	LDD  R26,Y+2
00bc33 81bb      	LDD  R27,Y+2+1
00bc34 9614      	ADIW R26,4
00bc35 940e e027 	CALL __GETW1P
00bc37 018f      	MOVW R16,R30
00bc38 9730      	SBIW R30,0
00bc39 f061      	BREQ _0x208002C
                +
00bc3a 3002     +CPI R16 , LOW ( 2 )
00bc3b e0e0     +LDI R30 , HIGH ( 2 )
00bc3c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00bc3d f0c0      	BRLO _0x208002D
00bc3e 01f8      	MOVW R30,R16
00bc3f 9731      	SBIW R30,1
00bc40 018f      	MOVW R16,R30
                +
00bc41 81aa     +LDD R26 , Y + 2
00bc42 81bb     +LDD R27 , Y + 2 + 1
00bc43 9614     +ADIW R26 , 4
00bc44 93ed     +ST X + , R30
00bc45 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00bc46 81aa      	LDD  R26,Y+2
00bc47 81bb      	LDD  R27,Y+2+1
00bc48 9612      	ADIW R26,2
00bc49 940e c396 	CALL SUBOPT_0x7C
00bc4b 9731      	SBIW R30,1
00bc4c 81ac      	LDD  R26,Y+4
00bc4d 83a0      	STD  Z+0,R26
00bc4e 81aa      	LDD  R26,Y+2
00bc4f 81bb      	LDD  R27,Y+2+1
00bc50 940e e027 	CALL __GETW1P
00bc52 23ff      	TST  R31
00bc53 f012      	BRMI _0x208002E
00bc54 940e c396 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00bc56 c006      	RJMP _0x208002F
                 _0x208002A:
00bc57 81aa      	LDD  R26,Y+2
00bc58 81bb      	LDD  R27,Y+2+1
00bc59 efef      	LDI  R30,LOW(65535)
00bc5a efff      	LDI  R31,HIGH(65535)
00bc5b 93ed      	ST   X+,R30
00bc5c 93fc      	ST   X,R31
                 _0x208002F:
00bc5d 8119      	LDD  R17,Y+1
00bc5e 8108      	LDD  R16,Y+0
00bc5f 9625      	ADIW R28,5
00bc60 9508      	RET
                 __ftoe_G104:
00bc61 93ba      	ST   -Y,R27
00bc62 93aa      	ST   -Y,R26
00bc63 9724      	SBIW R28,4
00bc64 e0e0      	LDI  R30,LOW(0)
00bc65 83e8      	ST   Y,R30
00bc66 83e9      	STD  Y+1,R30
00bc67 e8e0      	LDI  R30,LOW(128)
00bc68 83ea      	STD  Y+2,R30
00bc69 e3ef      	LDI  R30,LOW(63)
00bc6a 83eb      	STD  Y+3,R30
00bc6b 940e e0d2 	CALL __SAVELOCR4
00bc6d 85ee      	LDD  R30,Y+14
00bc6e 85ff      	LDD  R31,Y+14+1
00bc6f 3fef      	CPI  R30,LOW(0xFFFF)
00bc70 efaf      	LDI  R26,HIGH(0xFFFF)
00bc71 07fa      	CPC  R31,R26
00bc72 f459      	BRNE _0x2080037
00bc73 940e ca3b 	CALL SUBOPT_0x192
                +
00bc75 eca4     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00bc76 e6b9     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00bc77 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00bc78 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00bc79 940e a5c0 	CALL _strcpyf
00bc7b 940e e0d9 	CALL __LOADLOCR4
00bc7d c332      	RJMP _0x20E0003
                 _0x2080037:
00bc7e 3fef      	CPI  R30,LOW(0x7FFF)
00bc7f e7af      	LDI  R26,HIGH(0x7FFF)
00bc80 07fa      	CPC  R31,R26
00bc81 f459      	BRNE _0x2080036
00bc82 940e ca3b 	CALL SUBOPT_0x192
                +
00bc84 eca5     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00bc85 e6b9     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00bc86 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00bc87 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00bc88 940e a5c0 	CALL _strcpyf
00bc8a 940e e0d9 	CALL __LOADLOCR4
00bc8c c323      	RJMP _0x20E0003
                 _0x2080036:
00bc8d 85ab      	LDD  R26,Y+11
00bc8e 30a7      	CPI  R26,LOW(0x7)
00bc8f f010      	BRLO _0x2080039
00bc90 e0e6      	LDI  R30,LOW(6)
00bc91 87eb      	STD  Y+11,R30
                 _0x2080039:
00bc92 851b      	LDD  R17,Y+11
                 _0x208003A:
00bc93 2fe1      	MOV  R30,R17
00bc94 5011      	SUBI R17,1
00bc95 30e0      	CPI  R30,0
00bc96 f029      	BREQ _0x208003C
00bc97 940e dc49 	CALL SUBOPT_0x406
00bc99 940e c4bd 	CALL SUBOPT_0xA8
00bc9b cff7      	RJMP _0x208003A
                 _0x208003C:
00bc9c 940e c5de 	CALL SUBOPT_0xD9
00bc9e 940e e0b4 	CALL __CPD10
00bca0 f431      	BRNE _0x208003D
00bca1 e030      	LDI  R19,LOW(0)
00bca2 940e dc49 	CALL SUBOPT_0x406
00bca4 940e c4bd 	CALL SUBOPT_0xA8
00bca6 c02c      	RJMP _0x208003E
                 _0x208003D:
00bca7 853b      	LDD  R19,Y+11
00bca8 940e dc4c 	CALL SUBOPT_0x407
00bcaa f009      	BREQ PC+2
00bcab f410      	BRCC PC+3
00bcac 940c bcba 	JMP  _0x208003F
00bcae 940e dc49 	CALL SUBOPT_0x406
00bcb0 940e c4bd 	CALL SUBOPT_0xA8
                 _0x2080040:
00bcb2 940e dc4c 	CALL SUBOPT_0x407
00bcb4 f020      	BRLO _0x2080042
00bcb5 940e dc53 	CALL SUBOPT_0x408
00bcb7 5f3f      	SUBI R19,-LOW(1)
00bcb8 cff9      	RJMP _0x2080040
                 _0x2080042:
00bcb9 c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00bcba 940e dc4c 	CALL SUBOPT_0x407
00bcbc f430      	BRSH _0x2080046
00bcbd 940e d935 	CALL SUBOPT_0x391
00bcbf 940e c64f 	CALL SUBOPT_0xEA
00bcc1 5031      	SUBI R19,LOW(1)
00bcc2 cff7      	RJMP _0x2080044
                 _0x2080046:
00bcc3 940e dc49 	CALL SUBOPT_0x406
00bcc5 940e c4bd 	CALL SUBOPT_0xA8
                 _0x2080043:
00bcc7 940e c5de 	CALL SUBOPT_0xD9
00bcc9 940e d91a 	CALL SUBOPT_0x38C
00bccb 940e c64f 	CALL SUBOPT_0xEA
00bccd 940e dc4c 	CALL SUBOPT_0x407
00bccf f018      	BRLO _0x2080047
00bcd0 940e dc53 	CALL SUBOPT_0x408
00bcd2 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00bcd3 e010      	LDI  R17,LOW(0)
                 _0x2080048:
00bcd4 85eb      	LDD  R30,Y+11
00bcd5 17e1      	CP   R30,R17
00bcd6 f1a8      	BRLO _0x208004A
00bcd7 940e c4c2 	CALL SUBOPT_0xA9
                +
00bcd9 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00bcda ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00bcdb ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00bcdc e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00bcdd 940e ddfc 	CALL __MULF12
00bcdf 940e d91a 	CALL SUBOPT_0x38C
00bce1 01df      	MOVW R26,R30
00bce2 01cb      	MOVW R24,R22
00bce3 940e c017 	CALL _floor
00bce5 940e c4dc 	CALL SUBOPT_0xAE
00bce7 940e c088 	CALL SUBOPT_0xB
00bce9 940e de4a 	CALL __DIVF21
00bceb 940e dd39 	CALL __CFD1U
00bced 2f0e      	MOV  R16,R30
00bcee 940e dc5a 	CALL SUBOPT_0x409
00bcf0 2fe0      	MOV  R30,R16
00bcf1 5de0      	SUBI R30,-LOW(48)
00bcf2 93ec      	ST   X,R30
00bcf3 2fe0      	MOV  R30,R16
00bcf4 27ff      	CLR  R31
00bcf5 2766      	CLR  R22
00bcf6 2777      	CLR  R23
00bcf7 940e dd72 	CALL __CDF1
00bcf9 940e c4c2 	CALL SUBOPT_0xA9
00bcfb 940e ddfc 	CALL __MULF12
00bcfd 940e c088 	CALL SUBOPT_0xB
00bcff 940e cd8d 	CALL SUBOPT_0x216
00bd01 940e c64f 	CALL SUBOPT_0xEA
00bd03 2fe1      	MOV  R30,R17
00bd04 5f1f      	SUBI R17,-1
00bd05 30e0      	CPI  R30,0
00bd06 f669      	BRNE _0x2080048
00bd07 940e dc5a 	CALL SUBOPT_0x409
00bd09 e2ee      	LDI  R30,LOW(46)
00bd0a 93ec      	ST   X,R30
00bd0b cfc8      	RJMP _0x2080048
                 _0x208004A:
00bd0c 940e c3ac 	CALL SUBOPT_0x80
00bd0e 85aa      	LDD  R26,Y+10
00bd0f 83a0      	STD  Z+0,R26
00bd10 3030      	CPI  R19,0
00bd11 f42c      	BRGE _0x208004C
00bd12 9531      	NEG  R19
00bd13 85a8      	LDD  R26,Y+8
00bd14 85b9      	LDD  R27,Y+8+1
00bd15 e2ed      	LDI  R30,LOW(45)
00bd16 c003      	RJMP _0x2080137
                 _0x208004C:
00bd17 85a8      	LDD  R26,Y+8
00bd18 85b9      	LDD  R27,Y+8+1
00bd19 e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00bd1a 93ec      	ST   X,R30
00bd1b 85e8      	LDD  R30,Y+8
00bd1c 85f9      	LDD  R31,Y+8+1
00bd1d 9631      	ADIW R30,1
00bd1e 940e ca38 	CALL SUBOPT_0x191
00bd20 9631      	ADIW R30,1
00bd21 87e8      	STD  Y+8,R30
00bd22 87f9      	STD  Y+8+1,R31
00bd23 9731      	SBIW R30,1
00bd24 01bf      	MOVW R22,R30
00bd25 2fa3      	MOV  R26,R19
00bd26 e0ea      	LDI  R30,LOW(10)
00bd27 940e df92 	CALL __DIVB21
00bd29 5de0      	SUBI R30,-LOW(48)
00bd2a 01db      	MOVW R26,R22
00bd2b 93ec      	ST   X,R30
00bd2c 940e c3ac 	CALL SUBOPT_0x80
00bd2e 01bf      	MOVW R22,R30
00bd2f 2fa3      	MOV  R26,R19
00bd30 e0ea      	LDI  R30,LOW(10)
00bd31 940e dfd9 	CALL __MODB21
00bd33 5de0      	SUBI R30,-LOW(48)
00bd34 01db      	MOVW R26,R22
00bd35 93ec      	ST   X,R30
00bd36 85a8      	LDD  R26,Y+8
00bd37 85b9      	LDD  R27,Y+8+1
00bd38 e0e0      	LDI  R30,LOW(0)
00bd39 93ec      	ST   X,R30
00bd3a 940e e0d9 	CALL __LOADLOCR4
00bd3c c273      	RJMP _0x20E0003
                 __print_G104:
00bd3d 93ba      	ST   -Y,R27
00bd3e 93aa      	ST   -Y,R26
00bd3f 97ef      	SBIW R28,63
00bd40 9765      	SBIW R28,21
00bd41 940e e0d0 	CALL __SAVELOCR6
00bd43 e010      	LDI  R17,0
                +
00bd44 01fe     +MOVW R30 , R28
00bd45 5ae4     +SUBI R30 , LOW ( - 92 )
00bd46 4fff     +SBCI R31 , HIGH ( - 92 )
00bd47 9001     +LD R0 , Z +
00bd48 9011     +LD R1 , Z +
00bd49 9161     +LD R22 , Z +
00bd4a 8170     +LD R23 , Z
00bd4b 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00bd4c 940e d79d 	CALL SUBOPT_0x35B
                +
00bd4e 01fe     +MOVW R30 , R28
00bd4f 5ae6     +SUBI R30 , LOW ( - 90 )
00bd50 4fff     +SBCI R31 , HIGH ( - 90 )
00bd51 9001     +LD R0 , Z +
00bd52 81f0     +LD R31 , Z
00bd53 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00bd54 83ee      	STD  Y+6,R30
00bd55 83ff      	STD  Y+6+1,R31
00bd56 81ae      	LDD  R26,Y+6
00bd57 81bf      	LDD  R27,Y+6+1
00bd58 940e c737 	CALL SUBOPT_0x113
                 _0x208004E:
00bd5a 01de      	MOVW R26,R28
00bd5b 59ae      	SUBI R26,LOW(-(98))
00bd5c 4fbf      	SBCI R27,HIGH(-(98))
00bd5d 940e d94e 	CALL SUBOPT_0x396
                +
00bd5f bf6b     +OUT RAMPZ , R22
00bd60 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00bd61 2f2e      	MOV  R18,R30
00bd62 30e0      	CPI  R30,0
00bd63 f411      	BRNE PC+3
00bd64 940c bf4b 	JMP _0x2080050
00bd66 2fe1      	MOV  R30,R17
00bd67 30e0      	CPI  R30,0
00bd68 f439      	BRNE _0x2080054
00bd69 3225      	CPI  R18,37
00bd6a f411      	BRNE _0x2080055
00bd6b e011      	LDI  R17,LOW(1)
00bd6c c002      	RJMP _0x2080056
                 _0x2080055:
00bd6d 940e dc61 	CALL SUBOPT_0x40A
                 _0x2080056:
00bd6f c1da      	RJMP _0x2080053
                 _0x2080054:
00bd70 30e1      	CPI  R30,LOW(0x1)
00bd71 f4c1      	BRNE _0x2080057
00bd72 3225      	CPI  R18,37
00bd73 f419      	BRNE _0x2080058
00bd74 940e dc61 	CALL SUBOPT_0x40A
00bd76 c1d2      	RJMP _0x2080138
                 _0x2080058:
00bd77 e012      	LDI  R17,LOW(2)
00bd78 e0e0      	LDI  R30,LOW(0)
00bd79 8fe9      	STD  Y+25,R30
00bd7a e000      	LDI  R16,LOW(0)
00bd7b 322d      	CPI  R18,45
00bd7c f411      	BRNE _0x2080059
00bd7d e001      	LDI  R16,LOW(1)
00bd7e c1cb      	RJMP _0x2080053
                 _0x2080059:
00bd7f 322b      	CPI  R18,43
00bd80 f419      	BRNE _0x208005A
00bd81 e2eb      	LDI  R30,LOW(43)
00bd82 8fe9      	STD  Y+25,R30
00bd83 c1c6      	RJMP _0x2080053
                 _0x208005A:
00bd84 3220      	CPI  R18,32
00bd85 f419      	BRNE _0x208005B
00bd86 e2e0      	LDI  R30,LOW(32)
00bd87 8fe9      	STD  Y+25,R30
00bd88 c1c1      	RJMP _0x2080053
                 _0x208005B:
00bd89 c002      	RJMP _0x208005C
                 _0x2080057:
00bd8a 30e2      	CPI  R30,LOW(0x2)
00bd8b f439      	BRNE _0x208005D
                 _0x208005C:
00bd8c e050      	LDI  R21,LOW(0)
00bd8d e013      	LDI  R17,LOW(3)
00bd8e 3320      	CPI  R18,48
00bd8f f411      	BRNE _0x208005E
00bd90 6800      	ORI  R16,LOW(128)
00bd91 c1b8      	RJMP _0x2080053
                 _0x208005E:
00bd92 c002      	RJMP _0x208005F
                 _0x208005D:
00bd93 30e3      	CPI  R30,LOW(0x3)
00bd94 f491      	BRNE _0x2080060
                 _0x208005F:
00bd95 3320      	CPI  R18,48
00bd96 f010      	BRLO _0x2080062
00bd97 332a      	CPI  R18,58
00bd98 f008      	BRLO _0x2080063
                 _0x2080062:
00bd99 c007      	RJMP _0x2080061
                 _0x2080063:
00bd9a e0aa      	LDI  R26,LOW(10)
00bd9b 9f5a      	MUL  R21,R26
00bd9c 2d50      	MOV  R21,R0
00bd9d 2fe2      	MOV  R30,R18
00bd9e 53e0      	SUBI R30,LOW(48)
00bd9f 0f5e      	ADD  R21,R30
00bda0 c1a9      	RJMP _0x2080053
                 _0x2080061:
00bda1 e040      	LDI  R20,LOW(0)
00bda2 322e      	CPI  R18,46
00bda3 f411      	BRNE _0x2080064
00bda4 e014      	LDI  R17,LOW(4)
00bda5 c1a4      	RJMP _0x2080053
                 _0x2080064:
00bda6 c00f      	RJMP _0x2080065
                 _0x2080060:
00bda7 30e4      	CPI  R30,LOW(0x4)
00bda8 f499      	BRNE _0x2080067
00bda9 3320      	CPI  R18,48
00bdaa f010      	BRLO _0x2080069
00bdab 332a      	CPI  R18,58
00bdac f008      	BRLO _0x208006A
                 _0x2080069:
00bdad c008      	RJMP _0x2080068
                 _0x208006A:
00bdae 6200      	ORI  R16,LOW(32)
00bdaf e0aa      	LDI  R26,LOW(10)
00bdb0 9f4a      	MUL  R20,R26
00bdb1 2d40      	MOV  R20,R0
00bdb2 2fe2      	MOV  R30,R18
00bdb3 53e0      	SUBI R30,LOW(48)
00bdb4 0f4e      	ADD  R20,R30
00bdb5 c194      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00bdb6 362c      	CPI  R18,108
00bdb7 f419      	BRNE _0x208006B
00bdb8 6002      	ORI  R16,LOW(2)
00bdb9 e015      	LDI  R17,LOW(5)
00bdba c18f      	RJMP _0x2080053
                 _0x208006B:
00bdbb c004      	RJMP _0x208006C
                 _0x2080067:
00bdbc 30e5      	CPI  R30,LOW(0x5)
00bdbd f011      	BREQ PC+3
00bdbe 940c bf4a 	JMP _0x2080053
                 _0x208006C:
00bdc0 2fe2      	MOV  R30,R18
00bdc1 36e3      	CPI  R30,LOW(0x63)
00bdc2 f459      	BRNE _0x2080071
00bdc3 940e dc69 	CALL SUBOPT_0x40B
00bdc5 940e dc70 	CALL SUBOPT_0x40C
00bdc7 940e dc69 	CALL SUBOPT_0x40B
00bdc9 81a4      	LDD  R26,Z+4
00bdca 93aa      	ST   -Y,R26
00bdcb 940e dc77 	CALL SUBOPT_0x40D
00bdcd c17b      	RJMP _0x2080072
                 _0x2080071:
00bdce 34e5      	CPI  R30,LOW(0x45)
00bdcf f011      	BREQ _0x2080075
00bdd0 36e5      	CPI  R30,LOW(0x65)
00bdd1 f409      	BRNE _0x2080076
                 _0x2080075:
00bdd2 c004      	RJMP _0x2080077
                 _0x2080076:
00bdd3 36e6      	CPI  R30,LOW(0x66)
00bdd4 f011      	BREQ PC+3
00bdd5 940c be16 	JMP _0x2080078
                 _0x2080077:
00bdd7 01fe      	MOVW R30,R28
00bdd8 967a      	ADIW R30,26
00bdd9 8be8      	STD  Y+16,R30
00bdda 8bf9      	STD  Y+16+1,R31
00bddb 940e dc7e 	CALL SUBOPT_0x40E
00bddd 940e e02b 	CALL __GETD1P
00bddf 940e c64f 	CALL SUBOPT_0xEA
00bde1 940e dc85 	CALL SUBOPT_0x40F
00bde3 85af      	LDD  R26,Y+15
00bde4 23aa      	TST  R26
00bde5 f022      	BRMI _0x2080079
00bde6 8da9      	LDD  R26,Y+25
00bde7 32ab      	CPI  R26,LOW(0x2B)
00bde8 f049      	BREQ _0x208007B
00bde9 c014      	RJMP _0x208007C
                 _0x2080079:
00bdea 940e c5de 	CALL SUBOPT_0xD9
00bdec 940e dd06 	CALL __ANEGF1
00bdee 940e c64f 	CALL SUBOPT_0xEA
00bdf0 e2ed      	LDI  R30,LOW(45)
00bdf1 8fe9      	STD  Y+25,R30
                 _0x208007B:
00bdf2 ff07      	SBRS R16,7
00bdf3 c005      	RJMP _0x208007D
00bdf4 8de9      	LDD  R30,Y+25
00bdf5 93ea      	ST   -Y,R30
00bdf6 940e dc77 	CALL SUBOPT_0x40D
00bdf8 c005      	RJMP _0x208007E
                 _0x208007D:
00bdf9 940e d92f 	CALL SUBOPT_0x390
00bdfb 9731      	SBIW R30,1
00bdfc 8da9      	LDD  R26,Y+25
00bdfd 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00bdfe ff05      	SBRS R16,5
00bdff e046      	LDI  R20,LOW(6)
00be00 3626      	CPI  R18,102
00be01 f441      	BRNE _0x2080080
00be02 940e c930 	CALL SUBOPT_0x169
00be04 934a      	ST   -Y,R20
00be05 89ad      	LDD  R26,Y+21
00be06 89be      	LDD  R27,Y+21+1
00be07 940e a2ba 	CALL _ftoa
00be09 c007      	RJMP _0x2080081
                 _0x2080080:
00be0a 940e c930 	CALL SUBOPT_0x169
00be0c 934a      	ST   -Y,R20
00be0d 932a      	ST   -Y,R18
00be0e 89ae      	LDD  R26,Y+22
00be0f 89bf      	LDD  R27,Y+22+1
00be10 de50      	RCALL __ftoe_G104
                 _0x2080081:
00be11 01fe      	MOVW R30,R28
00be12 967a      	ADIW R30,26
00be13 940e dc87 	CALL SUBOPT_0x410
00be15 c022      	RJMP _0x2080082
                 _0x2080078:
00be16 37e3      	CPI  R30,LOW(0x73)
00be17 f451      	BRNE _0x2080084
00be18 940e dc85 	CALL SUBOPT_0x40F
00be1a 940e dc7e 	CALL SUBOPT_0x40E
00be1c 9614      	ADIW R26,4
00be1d 940e e027 	CALL __GETW1P
00be1f 940e dc87 	CALL SUBOPT_0x410
00be21 c00f      	RJMP _0x2080085
                 _0x2080084:
00be22 37e0      	CPI  R30,LOW(0x70)
00be23 f4c9      	BRNE _0x2080087
00be24 940e dc85 	CALL SUBOPT_0x40F
00be26 940e dc7e 	CALL SUBOPT_0x40E
00be28 9614      	ADIW R26,4
00be29 940e e02b 	CALL __GETD1P
00be2b 940e d851 	CALL SUBOPT_0x379
00be2d 940e a5f2 	CALL _strlenf
00be2f 2f1e      	MOV  R17,R30
00be30 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00be31 770f      	ANDI R16,LOW(127)
00be32 3040      	CPI  R20,0
00be33 f011      	BREQ _0x2080089
00be34 1741      	CP   R20,R17
00be35 f008      	BRLO _0x208008A
                 _0x2080089:
00be36 c001      	RJMP _0x2080088
                 _0x208008A:
00be37 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00be38 e040      	LDI  R20,LOW(0)
00be39 e0e0      	LDI  R30,LOW(0)
00be3a 8fe8      	STD  Y+24,R30
00be3b e030      	LDI  R19,LOW(0)
00be3c c072      	RJMP _0x208008B
                 _0x2080087:
00be3d 36e4      	CPI  R30,LOW(0x64)
00be3e f011      	BREQ _0x208008E
00be3f 36e9      	CPI  R30,LOW(0x69)
00be40 f411      	BRNE _0x208008F
                 _0x208008E:
00be41 6004      	ORI  R16,LOW(4)
00be42 c002      	RJMP _0x2080090
                 _0x208008F:
00be43 37e5      	CPI  R30,LOW(0x75)
00be44 f4a1      	BRNE _0x2080091
                 _0x2080090:
00be45 e0ea      	LDI  R30,LOW(10)
00be46 8fe8      	STD  Y+24,R30
00be47 ff01      	SBRS R16,1
00be48 c008      	RJMP _0x2080092
                +
00be49 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00be4a ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00be4b e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00be4c e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00be4d 940e d7a7 	CALL SUBOPT_0x35D
00be4f e01a      	LDI  R17,LOW(10)
00be50 c023      	RJMP _0x2080093
                 _0x2080092:
                +
00be51 e1e0     +LDI R30 , LOW ( 0x2710 )
00be52 e2f7     +LDI R31 , HIGH ( 0x2710 )
00be53 e060     +LDI R22 , BYTE3 ( 0x2710 )
00be54 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00be55 940e d7a7 	CALL SUBOPT_0x35D
00be57 e015      	LDI  R17,LOW(5)
00be58 c01b      	RJMP _0x2080093
                 _0x2080091:
00be59 35e8      	CPI  R30,LOW(0x58)
00be5a f411      	BRNE _0x2080095
00be5b 6008      	ORI  R16,LOW(8)
00be5c c004      	RJMP _0x2080096
                 _0x2080095:
00be5d 37e8      	CPI  R30,LOW(0x78)
00be5e f011      	BREQ PC+3
00be5f 940c bf49 	JMP _0x20800D4
                 _0x2080096:
00be61 e1e0      	LDI  R30,LOW(16)
00be62 8fe8      	STD  Y+24,R30
00be63 ff01      	SBRS R16,1
00be64 c008      	RJMP _0x2080098
                +
00be65 e0e0     +LDI R30 , LOW ( 0x10000000 )
00be66 e0f0     +LDI R31 , HIGH ( 0x10000000 )
00be67 e060     +LDI R22 , BYTE3 ( 0x10000000 )
00be68 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00be69 940e d7a7 	CALL SUBOPT_0x35D
00be6b e018      	LDI  R17,LOW(8)
00be6c c007      	RJMP _0x2080093
                 _0x2080098:
                +
00be6d e0e0     +LDI R30 , LOW ( 0x1000 )
00be6e e1f0     +LDI R31 , HIGH ( 0x1000 )
00be6f e060     +LDI R22 , BYTE3 ( 0x1000 )
00be70 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00be71 940e d7a7 	CALL SUBOPT_0x35D
00be73 e014      	LDI  R17,LOW(4)
                 _0x2080093:
00be74 3040      	CPI  R20,0
00be75 f011      	BREQ _0x2080099
00be76 770f      	ANDI R16,LOW(127)
00be77 c001      	RJMP _0x208009A
                 _0x2080099:
00be78 e041      	LDI  R20,LOW(1)
                 _0x208009A:
00be79 ff01      	SBRS R16,1
00be7a c008      	RJMP _0x208009B
00be7b 940e dc85 	CALL SUBOPT_0x40F
00be7d 940e dc7e 	CALL SUBOPT_0x40E
00be7f 9614      	ADIW R26,4
00be80 940e e02b 	CALL __GETD1P
00be82 c013      	RJMP _0x2080139
                 _0x208009B:
00be83 ff02      	SBRS R16,2
00be84 c00a      	RJMP _0x208009D
00be85 940e dc85 	CALL SUBOPT_0x40F
00be87 940e dc7e 	CALL SUBOPT_0x40E
00be89 9614      	ADIW R26,4
00be8a 940e e027 	CALL __GETW1P
00be8c 940e df38 	CALL __CWD1
00be8e c007      	RJMP _0x2080139
                 _0x208009D:
00be8f 940e dc85 	CALL SUBOPT_0x40F
00be91 940e dc7e 	CALL SUBOPT_0x40E
00be93 9614      	ADIW R26,4
00be94 940e c10c 	CALL SUBOPT_0x1E
                 _0x2080139:
                +
00be96 87ec     +STD Y + 12 , R30
00be97 87fd     +STD Y + 12 + 1 , R31
00be98 876e     +STD Y + 12 + 2 , R22
00be99 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00be9a ff02      	SBRS R16,2
00be9b c012      	RJMP _0x208009F
00be9c 85af      	LDD  R26,Y+15
00be9d 23aa      	TST  R26
00be9e f442      	BRPL _0x20800A0
00be9f 940e c5de 	CALL SUBOPT_0xD9
00bea1 940e ded5 	CALL __ANEGD1
00bea3 940e c64f 	CALL SUBOPT_0xEA
00bea5 e2ed      	LDI  R30,LOW(45)
00bea6 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00bea7 8de9      	LDD  R30,Y+25
00bea8 30e0      	CPI  R30,0
00bea9 f019      	BREQ _0x20800A1
00beaa 5f1f      	SUBI R17,-LOW(1)
00beab 5f4f      	SUBI R20,-LOW(1)
00beac c001      	RJMP _0x20800A2
                 _0x20800A1:
00bead 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00beae 2f34      	MOV  R19,R20
                 _0x208008B:
00beaf fd00      	SBRC R16,0
00beb0 c014      	RJMP _0x20800A3
                 _0x20800A4:
00beb1 1715      	CP   R17,R21
00beb2 f410      	BRSH _0x20800A7
00beb3 1735      	CP   R19,R21
00beb4 f008      	BRLO _0x20800A8
                 _0x20800A7:
00beb5 c00f      	RJMP _0x20800A6
                 _0x20800A8:
00beb6 ff07      	SBRS R16,7
00beb7 c008      	RJMP _0x20800A9
00beb8 ff02      	SBRS R16,2
00beb9 c004      	RJMP _0x20800AA
00beba 7f0b      	ANDI R16,LOW(251)
00bebb 8d29      	LDD  R18,Y+25
00bebc 5011      	SUBI R17,LOW(1)
00bebd c001      	RJMP _0x20800AB
                 _0x20800AA:
00bebe e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00bebf c001      	RJMP _0x20800AC
                 _0x20800A9:
00bec0 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00bec1 940e dc61 	CALL SUBOPT_0x40A
00bec3 5051      	SUBI R21,LOW(1)
00bec4 cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00bec5 1714      	CP   R17,R20
00bec6 f490      	BRSH _0x20800AF
00bec7 6100      	ORI  R16,LOW(16)
00bec8 ff02      	SBRS R16,2
00bec9 c006      	RJMP _0x20800B0
00beca 940e dc8f 	CALL SUBOPT_0x411
00becc f009      	BREQ _0x20800B1
00becd 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00bece 5011      	SUBI R17,LOW(1)
00becf 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00bed0 e3e0      	LDI  R30,LOW(48)
00bed1 93ea      	ST   -Y,R30
00bed2 940e dc77 	CALL SUBOPT_0x40D
00bed4 3050      	CPI  R21,0
00bed5 f009      	BREQ _0x20800B2
00bed6 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00bed7 5041      	SUBI R20,LOW(1)
00bed8 cfec      	RJMP _0x20800AD
                 _0x20800AF:
00bed9 2f31      	MOV  R19,R17
00beda 8de8      	LDD  R30,Y+24
00bedb 30e0      	CPI  R30,0
00bedc f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00bedd 3030      	CPI  R19,0
00bede f0a9      	BREQ _0x20800B6
00bedf ff03      	SBRS R16,3
00bee0 c007      	RJMP _0x20800B7
00bee1 01de      	MOVW R26,R28
00bee2 9650      	ADIW R26,16
00bee3 940e d94e 	CALL SUBOPT_0x396
                +
00bee5 bf6b     +OUT RAMPZ , R22
00bee6 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00bee7 c005      	RJMP _0x20800B8
                 _0x20800B7:
00bee8 89a8      	LDD  R26,Y+16
00bee9 89b9      	LDD  R27,Y+16+1
00beea 912d      	LD   R18,X+
00beeb 8ba8      	STD  Y+16,R26
00beec 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00beed 940e dc61 	CALL SUBOPT_0x40A
00beef 3050      	CPI  R21,0
00bef0 f009      	BREQ _0x20800B9
00bef1 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00bef2 5031      	SUBI R19,LOW(1)
00bef3 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00bef4 c04a      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00bef5 940e c5f0 	CALL SUBOPT_0xDC
00bef7 940e c088 	CALL SUBOPT_0xB
00bef9 940e dfaf 	CALL __DIVD21U
00befb 2f2e      	MOV  R18,R30
00befc 302a      	CPI  R18,10
00befd f030      	BRLO _0x20800BE
00befe ff03      	SBRS R16,3
00beff c002      	RJMP _0x20800BF
00bf00 5c29      	SUBI R18,-LOW(55)
00bf01 c001      	RJMP _0x20800C0
                 _0x20800BF:
00bf02 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00bf03 c001      	RJMP _0x20800C1
                 _0x20800BE:
00bf04 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00bf05 fd04      	SBRC R16,4
00bf06 c01a      	RJMP _0x20800C3
00bf07 3321      	CPI  R18,49
00bf08 f428      	BRSH _0x20800C5
00bf09 940e ce0f 	CALL SUBOPT_0x225
00bf0b 940e da21 	CALL SUBOPT_0x3B1
00bf0d f409      	BRNE _0x20800C4
                 _0x20800C5:
00bf0e c00b      	RJMP _0x20800C7
                 _0x20800C4:
00bf0f 1743      	CP   R20,R19
00bf10 f440      	BRSH _0x208013A
00bf11 1753      	CP   R21,R19
00bf12 f010      	BRLO _0x20800CA
00bf13 ff00      	SBRS R16,0
00bf14 c001      	RJMP _0x20800CB
                 _0x20800CA:
00bf15 c010      	RJMP _0x20800C9
                 _0x20800CB:
00bf16 e220      	LDI  R18,LOW(32)
00bf17 ff07      	SBRS R16,7
00bf18 c008      	RJMP _0x20800CC
                 _0x208013A:
00bf19 e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00bf1a 6100      	ORI  R16,LOW(16)
00bf1b ff02      	SBRS R16,2
00bf1c c004      	RJMP _0x20800CD
00bf1d 940e dc8f 	CALL SUBOPT_0x411
00bf1f f009      	BREQ _0x20800CE
00bf20 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00bf21 940e dc61 	CALL SUBOPT_0x40A
00bf23 3050      	CPI  R21,0
00bf24 f009      	BREQ _0x20800CF
00bf25 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00bf26 5031      	SUBI R19,LOW(1)
00bf27 940e c5f0 	CALL SUBOPT_0xDC
00bf29 940e c088 	CALL SUBOPT_0xB
00bf2b 940e dff6 	CALL __MODD21U
00bf2d 940e c64f 	CALL SUBOPT_0xEA
00bf2f 8de8      	LDD  R30,Y+24
00bf30 940e ce0f 	CALL SUBOPT_0x225
00bf32 27ff      	CLR  R31
00bf33 2766      	CLR  R22
00bf34 2777      	CLR  R23
00bf35 940e dfaf 	CALL __DIVD21U
00bf37 940e d7a7 	CALL SUBOPT_0x35D
00bf39 940e c5f0 	CALL SUBOPT_0xDC
00bf3b 940e e0b4 	CALL __CPD10
00bf3d f009      	BREQ _0x20800BD
00bf3e cfb6      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00bf3f ff00      	SBRS R16,0
00bf40 c008      	RJMP _0x20800D0
                 _0x20800D1:
00bf41 3050      	CPI  R21,0
00bf42 f031      	BREQ _0x20800D3
00bf43 5051      	SUBI R21,LOW(1)
00bf44 e2e0      	LDI  R30,LOW(32)
00bf45 93ea      	ST   -Y,R30
00bf46 940e dc77 	CALL SUBOPT_0x40D
00bf48 cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00bf49 e010      	LDI  R17,LOW(0)
                 _0x2080053:
00bf4a ce0f      	RJMP _0x208004E
                 _0x2080050:
00bf4b 81ae      	LDD  R26,Y+6
00bf4c 81bf      	LDD  R27,Y+6+1
00bf4d 940e e027 	CALL __GETW1P
00bf4f 940e e0d7 	CALL __LOADLOCR6
00bf51 96ef      	ADIW R28,63
00bf52 96a7      	ADIW R28,39
00bf53 9508      	RET
                 _sprintf:
00bf54 92ff      	PUSH R15
00bf55 2ef8      	MOV  R15,R24
00bf56 9726      	SBIW R28,6
00bf57 940e e0d2 	CALL __SAVELOCR4
00bf59 01de      	MOVW R26,R28
00bf5a 961e      	ADIW R26,14
00bf5b 940e deaf 	CALL __ADDW2R15
00bf5d 940e e027 	CALL __GETW1P
00bf5f 9730      	SBIW R30,0
00bf60 f419      	BRNE _0x20800D5
00bf61 efef      	LDI  R30,LOW(65535)
00bf62 efff      	LDI  R31,HIGH(65535)
00bf63 c023      	RJMP _0x20E0004
                 _0x20800D5:
00bf64 01de      	MOVW R26,R28
00bf65 9616      	ADIW R26,6
00bf66 940e deaf 	CALL __ADDW2R15
00bf68 018d      	MOVW R16,R26
00bf69 01de      	MOVW R26,R28
00bf6a 961e      	ADIW R26,14
00bf6b 940e deaf 	CALL __ADDW2R15
00bf6d 940e d945 	CALL SUBOPT_0x394
00bf6f e0e0      	LDI  R30,LOW(0)
00bf70 87e8      	STD  Y+8,R30
00bf71 87e9      	STD  Y+8+1,R30
00bf72 01de      	MOVW R26,R28
00bf73 961a      	ADIW R26,10
00bf74 940e deaf 	CALL __ADDW2R15
00bf76 940e e02b 	CALL __GETD1P
00bf78 940e e05b 	CALL __PUTPARD1
00bf7a 931a      	ST   -Y,R17
00bf7b 930a      	ST   -Y,R16
00bf7c 940e dca4 	CALL SUBOPT_0x412
00bf7e 01de      	MOVW R26,R28
00bf7f 961e      	ADIW R26,14
00bf80 ddbc      	RCALL __print_G104
00bf81 019f      	MOVW R18,R30
00bf82 81ae      	LDD  R26,Y+6
00bf83 81bf      	LDD  R27,Y+6+1
00bf84 e0e0      	LDI  R30,LOW(0)
00bf85 93ec      	ST   X,R30
00bf86 01f9      	MOVW R30,R18
                 _0x20E0004:
00bf87 940e e0d9 	CALL __LOADLOCR4
00bf89 962a      	ADIW R28,10
00bf8a 90ff      	POP  R15
00bf8b 9508      	RET
                 _vsprintf:
00bf8c 93ba      	ST   -Y,R27
00bf8d 93aa      	ST   -Y,R26
00bf8e 9726      	SBIW R28,6
00bf8f 931a      	ST   -Y,R17
00bf90 930a      	ST   -Y,R16
00bf91 85ee      	LDD  R30,Y+14
00bf92 85ff      	LDD  R31,Y+14+1
00bf93 9730      	SBIW R30,0
00bf94 f419      	BRNE _0x20800D8
00bf95 efef      	LDI  R30,LOW(65535)
00bf96 efff      	LDI  R31,HIGH(65535)
00bf97 c016      	RJMP _0x20E0002
                 _0x20800D8:
00bf98 85ee      	LDD  R30,Y+14
00bf99 85ff      	LDD  R31,Y+14+1
00bf9a 83ec      	STD  Y+4,R30
00bf9b 83fd      	STD  Y+4+1,R31
00bf9c e0e0      	LDI  R30,LOW(0)
00bf9d 83ee      	STD  Y+6,R30
00bf9e 83ef      	STD  Y+6+1,R30
00bf9f 940e d715 	CALL SUBOPT_0x347
00bfa1 940e cad1 	CALL SUBOPT_0x1AD
00bfa3 940e dca4 	CALL SUBOPT_0x412
00bfa5 01de      	MOVW R26,R28
00bfa6 961c      	ADIW R26,12
00bfa7 dd95      	RCALL __print_G104
00bfa8 018f      	MOVW R16,R30
00bfa9 81ac      	LDD  R26,Y+4
00bfaa 81bd      	LDD  R27,Y+4+1
00bfab e0e0      	LDI  R30,LOW(0)
00bfac 93ec      	ST   X,R30
00bfad 01f8      	MOVW R30,R16
                 _0x20E0002:
00bfae 8119      	LDD  R17,Y+1
00bfaf 8108      	LDD  R16,Y+0
                 _0x20E0003:
00bfb0 9660      	ADIW R28,16
00bfb1 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00bfb2 93aa      	ST   -Y,R26
00bfb3 e0e1          ldi  r30,1
00bfb4 91f9          ld   r31,y+
00bfb5 33f0          cpi  r31,'0'
00bfb6 f010          brlo isdigit0
00bfb7 33fa          cpi  r31,'9'+1
00bfb8 f008          brlo isdigit1
                 isdigit0:
00bfb9 27ee          clr  r30
                 isdigit1:
00bfba 9508          ret
                 _isprint:
00bfbb 93aa      	ST   -Y,R26
00bfbc e0e1          ldi  r30,1
00bfbd 91f9          ld   r31,y+
00bfbe 32f0          cpi  r31,32
00bfbf f010          brlo isprint0
00bfc0 38f0          cpi  r31,128
00bfc1 f008          brlo isprint1
                 isprint0:
00bfc2 27ee          clr  r30
                 isprint1:
00bfc3 9508          ret
                 _isspace:
00bfc4 93aa      	ST   -Y,R26
00bfc5 e0e1          ldi  r30,1
00bfc6 91f9          ld   r31,y+
00bfc7 32f0          cpi  r31,' '
00bfc8 f029          breq isspace1
00bfc9 30f9          cpi  r31,9
00bfca f010          brlo isspace0
00bfcb 30fe          cpi  r31,13+1
00bfcc f008          brlo isspace1
                 isspace0:
00bfcd 27ee          clr  r30
                 isspace1:
00bfce 9508          ret
                 _isxdigit:
00bfcf 93aa      	ST   -Y,R26
00bfd0 e0e1          ldi  r30,1
00bfd1 91f9          ld   r31,y+
00bfd2 53f0          subi r31,0x30
00bfd3 f040          brcs isxdigit0
00bfd4 30fa          cpi  r31,10
00bfd5 f038          brcs isxdigit1
00bfd6 75ff          andi r31,0x5f
00bfd7 50f7          subi r31,7
00bfd8 30fa          cpi  r31,10
00bfd9 f010          brcs isxdigit0
00bfda 31f0          cpi  r31,16
00bfdb f008          brcs isxdigit1
                 isxdigit0:
00bfdc 27ee          clr  r30
                 isxdigit1:
00bfdd 9508          ret
                 _tolower:
00bfde 93aa      	ST   -Y,R26
00bfdf 91e9          ld   r30,y+
00bfe0 34e1          cpi  r30,'A'
00bfe1 f018          brlo tolower1
00bfe2 35eb          cpi  r30,'Z'+1
00bfe3 f408          brcc tolower1
00bfe4 5ee0          subi r30,-32
                 tolower1:
00bfe5 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00bfe6 940e e060 	CALL __PUTPARD2
00bfe8 817b         ldd  r23,y+3
00bfe9 816a         ldd  r22,y+2
00bfea 81f9         ldd  r31,y+1
00bfeb 81e8         ld   r30,y
00bfec fb77         bst  r23,7
00bfed 0f77         lsl  r23
00bfee fd67         sbrc r22,7
00bfef 6071         sbr  r23,1
00bff0 2f97         mov  r25,r23
00bff1 579e         subi r25,0x7e
00bff2 f081         breq __ftrunc0
00bff3 f078         brcs __ftrunc0
00bff4 3198         cpi  r25,24
00bff5 f490         brsh __ftrunc1
00bff6 27aa         clr  r26
00bff7 27bb         clr  r27
00bff8 2788         clr  r24
                 __ftrunc2:
00bff9 9408         sec
00bffa 9587         ror  r24
00bffb 95b7         ror  r27
00bffc 95a7         ror  r26
00bffd 959a         dec  r25
00bffe f7d1         brne __ftrunc2
00bfff 23ea         and  r30,r26
00c000 23fb         and  r31,r27
00c001 2368         and  r22,r24
00c002 c005         rjmp __ftrunc1
                 __ftrunc0:
00c003 94e8         clt
00c004 2777         clr  r23
00c005 27ee         clr  r30
00c006 27ff         clr  r31
00c007 2766         clr  r22
                 __ftrunc1:
00c008 776f         cbr  r22,0x80
00c009 9576         lsr  r23
00c00a f408         brcc __ftrunc3
00c00b 6860         sbr  r22,0x80
                 __ftrunc3:
00c00c f977         bld  r23,7
00c00d 91a9         ld   r26,y+
00c00e 91b9         ld   r27,y+
00c00f 9189         ld   r24,y+
00c010 9199         ld   r25,y+
00c011 17ea         cp   r30,r26
00c012 07fb         cpc  r31,r27
00c013 0768         cpc  r22,r24
00c014 0779         cpc  r23,r25
00c015 fb97         bst  r25,7
00c016 9508         ret
                 _floor:
00c017 940e e060 	CALL __PUTPARD2
00c019 940e c3f8 	CALL SUBOPT_0x8C
00c01b 940e bfe6 	CALL _ftrunc
00c01d 940e c494 	CALL SUBOPT_0xA0
00c01f f419          brne __floor1
                 __floor0:
00c020 940e c3d9 	CALL SUBOPT_0x87
00c022 c009      	RJMP _0x20E0001
                 __floor1:
00c023 f7e6          brtc __floor0
00c024 940e c3d9 	CALL SUBOPT_0x87
                +
00c026 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00c027 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00c028 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00c029 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00c02a 940e dda5 	CALL __SUBF12
                 _0x20E0001:
00c02c 9624      	ADIW R28,4
00c02d 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 
                 	.ESEG
                 _epFactor_A:
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_B:
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_C:
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet1:
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00        	.DB  0x0
                 _epADCRef1:
0005d6 00
0005d7 00
0005d8 00
0005d9 00        	.DB  0x0,0x0,0x0,0x0
0005da 00
0005db 00
0005dc 00
0005dd 00        	.DB  0x0,0x0,0x0,0x0
0005de 00
0005df 00
0005e0 00
0005e1 00        	.DB  0x0,0x0,0x0,0x0
0005e2 00
0005e3 00
0005e4 00
0005e5 00        	.DB  0x0,0x0,0x0,0x0
0005e6 00
0005e7 00
0005e8 00
0005e9 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef1:
0005ea 00
0005eb 00
0005ec 00
0005ed 00        	.DB  0x0,0x0,0x0,0x0
0005ee 00
0005ef 00
0005f0 00
0005f1 00        	.DB  0x0,0x0,0x0,0x0
0005f2 00
0005f3 00
0005f4 00
0005f5 00        	.DB  0x0,0x0,0x0,0x0
0005f6 00
0005f7 00
0005f8 00
0005f9 00        	.DB  0x0,0x0,0x0,0x0
0005fa 00
0005fb 00
0005fc 00
0005fd 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet2:
0005fe 00
0005ff 00
000600 00
000601 00        	.DB  0x0,0x0,0x0,0x0
000602 00        	.DB  0x0
                 _epADCRef2:
000603 00
000604 00
000605 00
000606 00        	.DB  0x0,0x0,0x0,0x0
000607 00
000608 00
000609 00
00060a 00        	.DB  0x0,0x0,0x0,0x0
00060b 00
00060c 00
00060d 00
00060e 00        	.DB  0x0,0x0,0x0,0x0
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
000613 00
000614 00
000615 00
000616 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef2:
000617 00
000618 00
000619 00
00061a 00        	.DB  0x0,0x0,0x0,0x0
00061b 00
00061c 00
00061d 00
00061e 00        	.DB  0x0,0x0,0x0,0x0
00061f 00
000620 00
000621 00
000622 00        	.DB  0x0,0x0,0x0,0x0
000623 00
000624 00
000625 00
000626 00        	.DB  0x0,0x0,0x0,0x0
000627 00
000628 00
000629 00
00062a 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet3:
00062b 00
00062c 00
00062d 00
00062e 00        	.DB  0x0,0x0,0x0,0x0
00062f 00        	.DB  0x0
                 _epADCRef3:
000630 00
000631 00
000632 00
000633 00        	.DB  0x0,0x0,0x0,0x0
000634 00
000635 00
000636 00
000637 00        	.DB  0x0,0x0,0x0,0x0
000638 00
000639 00
00063a 00
00063b 00        	.DB  0x0,0x0,0x0,0x0
00063c 00
00063d 00
00063e 00
00063f 00        	.DB  0x0,0x0,0x0,0x0
000640 00
000641 00
000642 00
000643 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef3:
000644 00
000645 00
000646 00
000647 00        	.DB  0x0,0x0,0x0,0x0
000648 00
000649 00
00064a 00
00064b 00        	.DB  0x0,0x0,0x0,0x0
00064c 00
00064d 00
00064e 00
00064f 00        	.DB  0x0,0x0,0x0,0x0
000650 00
000651 00
000652 00
000653 00        	.DB  0x0,0x0,0x0,0x0
000654 00
000655 00
000656 00
000657 00        	.DB  0x0,0x0,0x0,0x0
                 _epCalType:
000658 00
000659 00
00065a 00
00065b 00        	.DB  0x0,0x0,0x0,0x0
00065c 00        	.DB  0x0
                 
                 	.DSEG
                 _t_S00D0004000:
001550           	.BYTE 0x14
                 _lastCheck_S00D0004000:
001564           	.BYTE 0x5
                 _steadyState_S00D0004000:
001569           	.BYTE 0x5
                 _dataQ:
00156e           	.BYTE 0x64
                 _dataQ_len:
0015d2           	.BYTE 0x2
                 _t_S00F0001000:
0015d4           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015d8           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015d9           	.BYTE 0x1
                 _t_S00F0005000:
0015da           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015ee           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015f3           	.BYTE 0x5
                 _t_S00F0006000:
0015f8           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
001600           	.BYTE 0x2
                 _steadyState_S00F0006000:
001602           	.BYTE 0x2
                 _eventQ:
001604           	.BYTE 0x78
                 _last_wr_eventQ:
00167c           	.BYTE 0x2
                 _last_rd_eventQ:
00167e           	.BYTE 0x2
                 _eventQ_len:
001680           	.BYTE 0x2
                 _ainAlarm:
001682           	.BYTE 0x10
                 _mtncAlarm:
001692           	.BYTE 0x1
                 _powerSrcAlarm:
001693           	.BYTE 0x1
                 _communicationAlarm:
001694           	.BYTE 0x1
                 _gsmAlarm:
001695           	.BYTE 0x1
                 _gsmBalanceAlarm:
001696           	.BYTE 0x1
                 _t_S0110003000:
001697           	.BYTE 0x4
                 _t_flag_S0110003000:
00169b           	.BYTE 0x1
                 _lastCheck_S0110003000:
00169c           	.BYTE 0x1
                 _t_S0110004000:
00169d           	.BYTE 0x4
                 _t_flag_S0110004000:
0016a1           	.BYTE 0x1
                 _lastCheck_S0110004000:
0016a2           	.BYTE 0x1
                 _t_S0110005000:
0016a3           	.BYTE 0x4
                 _t_flag_S0110005000:
0016a7           	.BYTE 0x1
                 _t_S0110006000:
0016a8           	.BYTE 0x8
                 _t_flag_S0110006000:
0016b0           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016b2           	.BYTE 0x2
                 _t_S0110007000:
0016b4           	.BYTE 0x14
                 _t_flag_S0110007000:
0016c8           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016cd           	.BYTE 0x5
                 _t_S0110008000:
0016d2           	.BYTE 0x14
                 _t_flag_S0110008000:
0016e6           	.BYTE 0x5
                 _fat:
0016eb           	.BYTE 0x232
                 _pfat:
00191d           	.BYTE 0x2
                 _root_path:
00191f           	.BYTE 0x4
                 _eventLogQueue:
001923           	.BYTE 0x8C
                 _eventLogQCount:
0019af           	.BYTE 0x1
                 _dataLogQueue:
0019b0           	.BYTE 0x6E
                 _dataLogQCount:
001a1e           	.BYTE 0x1
                 _cursor_S0160000000:
001a1f           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a20           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a21           	.BYTE 0x1
                 _entPwd_S0160000000:
001a22           	.BYTE 0x4
                 _newPwd_S0160000000:
001a26           	.BYTE 0x4
                 _confPwd_S0160000000:
001a2a           	.BYTE 0x4
                 _setIp_S0160000000:
001a2e           	.BYTE 0xC
                 _setMask_S0160000000:
001a3a           	.BYTE 0xC
                 _setGw_S0160000000:
001a46           	.BYTE 0xC
                 _setServer_S0160000000:
001a52           	.BYTE 0xC
                 _devEn_S0160000000:
001a5e           	.BYTE 0x1
                 _almEn_S0160000000:
001a5f           	.BYTE 0x1
                 _prbEn_S0160000000:
001a60           	.BYTE 0x5
                 _mute_S0160000000:
001a65           	.BYTE 0x1
                 _vRef_S0160000000:
001a66           	.BYTE 0x3
                 _prb1_S0160000000:
001a69           	.BYTE 0x1
                 _prb2_S0160000000:
001a6a           	.BYTE 0x1
                 _calPnt_S0160000000:
001a6b           	.BYTE 0x6
                 _n:
001a71           	.BYTE 0x2
                 _a:
001a73           	.BYTE 0x30
                 _indexWrite:
001aa3           	.BYTE 0x2
                 _gItemSize:
001aa5           	.BYTE 0x2
                 _smoothBuffer:
001aa7           	.BYTE 0x2
                 __seed_G100:
001aa9           	.BYTE 0x4
                 _status_G102:
001aad           	.BYTE 0x1
                 _timer1_G102:
001aae           	.BYTE 0x1
                 _timer2_G102:
001aaf           	.BYTE 0x1
                 _card_type_G102:
001ab0           	.BYTE 0x1
                 _pv_S102000B000:
001ab1           	.BYTE 0x1
                 _FatFs_G103:
001ab2           	.BYTE 0x2
                 _Fsid_G103:
001ab4           	.BYTE 0x2
                 _Drive_G103:
001ab6           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
                +
00c02e e020     +LDI R18 , LOW ( 0 )
00c02f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00c030 e040     +LDI R20 , LOW ( 0 )
00c031 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00c032 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00c033 935a      	ST   -Y,R21
00c034 934a      	ST   -Y,R20
                +
00c035 e2a6     +LDI R26 , 38
00c036 9fa4     +MUL R26 , R20
00c037 01f0     +MOVW R30 , R0
00c038 9fa5     +MUL R26 , R21
00c039 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00c03a 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00c03b 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00c03c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00c03d 81e0      	LD   R30,Z
00c03e 940e df47 	CALL __LNEGB1
00c040 2fae      	MOV  R26,R30
00c041 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 286 TIMES, CODE SIZE REDUCTION:1137 WORDS
                 SUBOPT_0x3:
00c042 940e e05b 	CALL __PUTPARD1
00c044 e080      	LDI  R24,0
00c045 940e 9e24 	CALL _printDebug
00c047 9624      	ADIW R28,4
00c048 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00c049 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00c04a e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00c04b 0fe2      	ADD  R30,R18
00c04c 1ff3      	ADC  R31,R19
00c04d 81e0      	LD   R30,Z
00c04e 30e0      	CPI  R30,0
00c04f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
00c050 01f9      	MOVW R30,R18
00c051 01de      	MOVW R26,R28
00c052 59ad      	SUBI R26,LOW(-(99))
00c053 4fbf      	SBCI R27,HIGH(-(99))
00c054 940e df02 	CALL __LSLW2
00c056 0fea      	ADD  R30,R26
00c057 1ffb      	ADC  R31,R27
00c058 93fa      	ST   -Y,R31
00c059 93ea      	ST   -Y,R30
                +
00c05a e0a5     +LDI R26 , LOW ( 0x5 )
00c05b e0b0     +LDI R27 , HIGH ( 0x5 )
00c05c e080     +LDI R24 , BYTE3 ( 0x5 )
00c05d e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00c05e 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00c060 01fe      	MOVW R30,R28
00c061 5ae1      	SUBI R30,LOW(-(95))
00c062 4fff      	SBCI R31,HIGH(-(95))
00c063 93fa      	ST   -Y,R31
00c064 93ea      	ST   -Y,R30
                +
00c065 e0a7     +LDI R26 , LOW ( 0x7 )
00c066 e0b0     +LDI R27 , HIGH ( 0x7 )
00c067 e080     +LDI R24 , BYTE3 ( 0x7 )
00c068 e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00c069 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00c06b 01fe      	MOVW R30,R28
00c06c 5ae5      	SUBI R30,LOW(-(91))
00c06d 4fff      	SBCI R31,HIGH(-(91))
00c06e 93fa      	ST   -Y,R31
00c06f 93ea      	ST   -Y,R30
                +
00c070 e3ac     +LDI R26 , LOW ( 0x3C )
00c071 e0b0     +LDI R27 , HIGH ( 0x3C )
00c072 e080     +LDI R24 , BYTE3 ( 0x3C )
00c073 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c074 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
00c076 01fe      	MOVW R30,R28
00c077 5ae9      	SUBI R30,LOW(-(87))
00c078 4fff      	SBCI R31,HIGH(-(87))
00c079 93fa      	ST   -Y,R31
00c07a 93ea      	ST   -Y,R30
                +
00c07b e2ac     +LDI R26 , LOW ( 0x12C )
00c07c e0b1     +LDI R27 , HIGH ( 0x12C )
00c07d e080     +LDI R24 , BYTE3 ( 0x12C )
00c07e e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00c07f 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00c081 01fe      	MOVW R30,R28
00c082 93fa      	ST   -Y,R31
00c083 93ea      	ST   -Y,R30
00c084 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00c085 e0a7      	LDI  R26,LOW(7)
00c086 e0b0      	LDI  R27,0
00c087 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:65 WORDS
                 SUBOPT_0xB:
                +
00c088 85ac     +LDD R26 , Y + 12
00c089 85bd     +LDD R27 , Y + 12 + 1
00c08a 858e     +LDD R24 , Y + 12 + 2
00c08b 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00c08c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xC:
                +
00c08d 89e8     +LDD R30 , Y + 16
00c08e 89f9     +LDD R31 , Y + 16 + 1
00c08f 896a     +LDD R22 , Y + 16 + 2
00c090 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00c091 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00c092 e1a5      	LDI  R26,LOW(_properties_config)
00c093 e1b1      	LDI  R27,HIGH(_properties_config)
00c094 940e 4910 	CALL _getPropertiesConfig
00c096 e0e0      	LDI  R30,LOW(0)
00c097 93e0 10f6 	STS  _is_properties_config_update,R30
00c099 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00c09a eba6      	LDI  R26,LOW(_operating_config)
00c09b e1b1      	LDI  R27,HIGH(_operating_config)
00c09c 940e 49a5 	CALL _getOperatingConfig
00c09e e0e0      	LDI  R30,LOW(0)
00c09f 93e0 10f7 	STS  _is_operating_config_update,R30
00c0a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00c0a2 0fa2      	ADD  R26,R18
00c0a3 1fb3      	ADC  R27,R19
00c0a4 91ec      	LD   R30,X
00c0a5 30e0      	CPI  R30,0
00c0a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00c0a7 e1ad     +LDI R26 , 29
00c0a8 9fa2     +MUL R26 , R18
00c0a9 01f0     +MOVW R30 , R0
00c0aa 9fa3     +MUL R26 , R19
00c0ab 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00c0ac 54e2      	SUBI R30,LOW(-_sensor_config)
00c0ad 4efe      	SBCI R31,HIGH(-_sensor_config)
00c0ae 01df      	MOVW R26,R30
00c0af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00c0b0 940e e05b 	CALL __PUTPARD1
00c0b2 01f9      	MOVW R30,R18
00c0b3 940e df38 	CALL __CWD1
00c0b5 940e e05b 	CALL __PUTPARD1
00c0b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 301 TIMES, CODE SIZE REDUCTION:597 WORDS
                 SUBOPT_0x12:
00c0b8 e084      	LDI  R24,4
00c0b9 940e 9e24 	CALL _printDebug
00c0bb 9628      	ADIW R28,8
00c0bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00c0bd 0fa2      	ADD  R26,R18
00c0be 1fb3      	ADC  R27,R19
00c0bf e0e0      	LDI  R30,LOW(0)
00c0c0 93ec      	ST   X,R30
00c0c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00c0c2 e3ad      	LDI  R26,LOW(_buzz_config)
00c0c3 e1b3      	LDI  R27,HIGH(_buzz_config)
00c0c4 940e 4c8b 	CALL _getBuzzerConfig
00c0c6 e0e0      	LDI  R30,LOW(0)
00c0c7 93e0 1112 	STS  _is_buzzer_config_update,R30
00c0c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00c0ca e0a3     +LDI R26 , 3
00c0cb 9fa2     +MUL R26 , R18
00c0cc 01f0     +MOVW R30 , R0
00c0cd 9fa3     +MUL R26 , R19
00c0ce 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00c0cf 5be1      	SUBI R30,LOW(-_din_config)
00c0d0 4efd      	SBCI R31,HIGH(-_din_config)
00c0d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00c0d2 58e1      	SUBI R30,LOW(-_dout_config)
00c0d3 4efd      	SBCI R31,HIGH(-_dout_config)
00c0d4 01df      	MOVW R26,R30
00c0d5 940e 4b31 	CALL _getAuxDoutConfig
00c0d7 e0ad      	LDI  R26,LOW(_is_dout_config_update)
00c0d8 e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00c0d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00c0da e6a2      	LDI  R26,LOW(_status_config)
00c0db e1b3      	LDI  R27,HIGH(_status_config)
00c0dc 940e 4db5 	CALL _getStatusReportConfig
00c0de e0e0      	LDI  R30,LOW(0)
00c0df 93e0 1113 	STS  _is_status_config_update,R30
00c0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00c0e2 e6a5      	LDI  R26,LOW(_env_config)
00c0e3 e1b3      	LDI  R27,HIGH(_env_config)
00c0e4 940e 4d22 	CALL _getEnvAlarmConfig
00c0e6 e0e0      	LDI  R30,LOW(0)
00c0e7 93e0 1114 	STS  _is_env_config_update,R30
00c0e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00c0ea 933a      	ST   -Y,R19
00c0eb 932a      	ST   -Y,R18
                +
00c0ec e0a5     +LDI R26 , 5
00c0ed 9fa2     +MUL R26 , R18
00c0ee 01f0     +MOVW R30 , R0
00c0ef 9fa3     +MUL R26 , R19
00c0f0 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00c0f1 5be6      	SUBI R30,LOW(-_sensor)
00c0f2 4efb      	SBCI R31,HIGH(-_sensor)
00c0f3 01df      	MOVW R26,R30
00c0f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00c0f5 01f9      	MOVW R30,R18
00c0f6 01de      	MOVW R26,R28
00c0f7 59ad      	SUBI R26,LOW(-(99))
00c0f8 4fbf      	SBCI R27,HIGH(-(99))
00c0f9 940e df02 	CALL __LSLW2
00c0fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 54 TIMES, CODE SIZE REDUCTION:103 WORDS
                 SUBOPT_0x1B:
00c0fc 0fae      	ADD  R26,R30
00c0fd 1fbf      	ADC  R27,R31
00c0fe 940e e02b 	CALL __GETD1P
00c100 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
00c101 01df      	MOVW R26,R30
00c102 01cb      	MOVW R24,R22
00c103 940e 41a1 	CALL _TIMER_checkTimerExceed
00c105 9730      	SBIW R30,0
00c106 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1D:
00c107 0fea      	ADD  R30,R26
00c108 1ffb      	ADC  R31,R27
00c109 93fa      	ST   -Y,R31
00c10a 93ea      	ST   -Y,R30
00c10b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1E:
00c10c 940e e027 	CALL __GETW1P
00c10e 2766      	CLR  R22
00c10f 2777      	CLR  R23
00c110 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
00c111 01df      	MOVW R26,R30
00c112 01cb      	MOVW R24,R22
00c113 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
00c115 5be6      	SUBI R30,LOW(-_sensor)
00c116 4efb      	SBCI R31,HIGH(-_sensor)
00c117 01df      	MOVW R26,R30
00c118 940e e02b 	CALL __GETD1P
00c11a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0x21:
00c11b 940e e05b 	CALL __PUTPARD1
00c11d e088      	LDI  R24,8
00c11e 940e 9e24 	CALL _printDebug
00c120 962c      	ADIW R28,12
00c121 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
00c122 940e 7818 	CALL _checkAlarm
                +
00c124 01de     +MOVW R26 , R28
00c125 58a7     +SUBI R26 , LOW ( - 121 )
00c126 4fbf     +SBCI R27 , HIGH ( - 121 )
00c127 93ed     +ST X + , R30
00c128 93fc     +ST X , R31
                 	__PUTW1SX 121
00c129 9730      	SBIW R30,0
00c12a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00c12b e2a6     +LDI R26 , 38
00c12c 9fa4     +MUL R26 , R20
00c12d 01f0     +MOVW R30 , R0
00c12e 9fa5     +MUL R26 , R21
00c12f 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00c130 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
00c131 01de     +MOVW R26 , R28
00c132 58a7     +SUBI R26 , LOW ( - 121 )
00c133 4fbf     +SBCI R27 , HIGH ( - 121 )
00c134 93ed     +ST X + , R30
00c135 93fc     +ST X , R31
                 	__PUTW1SX 121
00c136 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
                +
00c137 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00c138 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00c139 ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00c13a ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00c13b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
00c13c 93e0 1487 	STS  _muteAlarmExpired,R30
00c13e 93f0 1488 	STS  _muteAlarmExpired+1,R31
00c140 9360 1489 	STS  _muteAlarmExpired+2,R22
00c142 9370 148a 	STS  _muteAlarmExpired+3,R23
00c144 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27:
00c145 93fa      	ST   -Y,R31
00c146 93ea      	ST   -Y,R30
                +
00c147 e0aa     +LDI R26 , LOW ( 0xA )
00c148 e0b0     +LDI R27 , HIGH ( 0xA )
00c149 e080     +LDI R24 , BYTE3 ( 0xA )
00c14a e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00c14b 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
00c14d 91a0 146b 	LDS  R26,_sdFreeSpace
00c14f 91b0 146c 	LDS  R27,_sdFreeSpace+1
00c151 9180 146d 	LDS  R24,_sdFreeSpace+2
00c153 9190 146e 	LDS  R25,_sdFreeSpace+3
00c155 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x29:
00c156 27ff      	CLR  R31
00c157 2766      	CLR  R22
00c158 2777      	CLR  R23
00c159 940e e05b 	CALL __PUTPARD1
00c15b cf5c      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00c15c e7ac      	LDI  R26,LOW(_dinStatus)
00c15d e1b4      	LDI  R27,HIGH(_dinStatus)
00c15e 0fa2      	ADD  R26,R18
00c15f 1fb3      	ADC  R27,R19
00c160 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
00c161 e0f0      	LDI  R31,0
00c162 9730      	SBIW R30,0
00c163 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2C:
                +
00c164 e0a0     +LDI R26 , LOW ( 0x0 )
00c165 e0b0     +LDI R27 , HIGH ( 0x0 )
00c166 e080     +LDI R24 , BYTE3 ( 0x0 )
00c167 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00c168 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
00c169 91a0 1483 	LDS  R26,_batteryVolt
00c16b 91b0 1484 	LDS  R27,_batteryVolt+1
00c16d 9180 1485 	LDS  R24,_batteryVolt+2
00c16f 9190 1486 	LDS  R25,_batteryVolt+3
00c171 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 52 TIMES, CODE SIZE REDUCTION:507 WORDS
                 SUBOPT_0x2E:
00c172 b1e6      	IN   R30,0x6
00c173 7ce0      	ANDI R30,LOW(0xC0)
00c174 e0f0      	LDI  R31,0
00c175 940e df0b 	CALL __ASRW2
00c177 940e df07 	CALL __ASRW4
00c179 95e0      	COM  R30
00c17a 95f0      	COM  R31
00c17b 70e3      	ANDI R30,LOW(0x3)
00c17c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00c17d 91e0 0106 	LDS  R30,262
00c17f 71e0      	ANDI R30,LOW(0x10)
00c180 e0f0      	LDI  R31,0
00c181 940e df07 	CALL __ASRW4
00c183 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00c184 940e e05b 	CALL __PUTPARD1
00c186 91e0 10f4 	LDS  R30,_hwCalId
00c188 91f0 10f5 	LDS  R31,_hwCalId+1
00c18a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x31:
00c18b e3a6      	LDI  R26,LOW(_adcData)
00c18c e1b4      	LDI  R27,HIGH(_adcData)
00c18d 940e df02 	CALL __LSLW2
00c18f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x32:
00c190 e8a9      	LDI  R26,LOW(_eep_vref_val)
00c191 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00c192 940e e07f 	CALL __EEPROMRDD
00c194 01df      	MOVW R26,R30
00c195 01cb      	MOVW R24,R22
                +
00c196 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00c197 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00c198 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00c199 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00c19a 940e de4a 	CALL __DIVF21
00c19c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
                +
00c19d e0a0     +LDI R26 , LOW ( 0x42C80000 )
00c19e e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00c19f ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
00c1a0 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00c1a1 940e ddfc 	CALL __MULF12
00c1a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 84 TIMES, CODE SIZE REDUCTION:163 WORDS
                 SUBOPT_0x34:
00c1a4 2766      	CLR  R22
00c1a5 2777      	CLR  R23
00c1a6 940e e05b 	CALL __PUTPARD1
00c1a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
00c1a9 eca8      	LDI  R26,LOW(200)
00c1aa e0b0      	LDI  R27,0
00c1ab 940c dcfc 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00c1ad e080      	LDI  R24,0
00c1ae 940e 9e24 	CALL _printDebug
00c1b0 9624      	ADIW R28,4
00c1b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x37:
00c1b2 940e e0d0 	CALL __SAVELOCR6
                +
00c1b4 e000     +LDI R16 , LOW ( 0 )
00c1b5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c1b6 ce77      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00c1b7 e1ad     +LDI R26 , 29
00c1b8 9fa2     +MUL R26 , R18
00c1b9 01f0     +MOVW R30 , R0
00c1ba 9fa3     +MUL R26 , R19
00c1bb 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00c1bc 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00c1bd 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00c1be 81e0      	LD   R30,Z
00c1bf 30e0      	CPI  R30,0
00c1c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00c1c1 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00c1c3 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00c1c5 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00c1c7 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00c1c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00c1ca 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00c1cb efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00c1cc 07be     +CPC R27 , R30
00c1cd efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00c1ce 078e     +CPC R24 , R30
00c1cf efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00c1d0 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00c1d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00c1d2 93fa      	ST   -Y,R31
00c1d3 93ea      	ST   -Y,R30
                +
00c1d4 e0af     +LDI R26 , LOW ( 0xF )
00c1d5 e0b0     +LDI R27 , HIGH ( 0xF )
00c1d6 e080     +LDI R24 , BYTE3 ( 0xF )
00c1d7 e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00c1d8 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00c1da 940e e05b 	CALL __PUTPARD1
00c1dc 91a0 1377 	LDS  R26,_baseCounter
00c1de 91b0 1378 	LDS  R27,_baseCounter+1
00c1e0 9180 1379 	LDS  R24,_baseCounter+2
00c1e2 9190 137a 	LDS  R25,_baseCounter+3
00c1e4 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00c1e6 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00c1e8 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00c1ea 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00c1ec 940e debd 	CALL __SUBD12
00c1ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00c1ef 01af      	MOVW R20,R30
                +
00c1f0 2b04     +OR R16 , R20
00c1f1 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00c1f2 2e04      	MOV  R0,R20
00c1f3 2a05      	OR   R0,R21
00c1f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00c1f5 940e 452f 	CALL _DS1672_read
                +
00c1f7 83ef     +STD Y + 7 , R30
00c1f8 87f8     +STD Y + 7 + 1 , R31
00c1f9 8769     +STD Y + 7 + 2 , R22
00c1fa 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00c1fb 81ee      	LDD  R30,Y+6
00c1fc 30e0      	CPI  R30,0
00c1fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00c1fe 81ef     +LDD R30 , Y + 7
00c1ff 85f8     +LDD R31 , Y + 7 + 1
00c200 8569     +LDD R22 , Y + 7 + 2
00c201 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00c202 940e e05b 	CALL __PUTPARD1
00c204 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00c205 93ea      	ST   -Y,R30
00c206 85ab      	LDD  R26,Y+11
00c207 940e 77b0 	CALL _addEventQueue
00c209 01af      	MOVW R20,R30
00c20a 2355      	TST  R21
00c20b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00c20c e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00c20d e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00c20e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00c20f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00c210 ce31      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00c211 933a      	ST   -Y,R19
00c212 932a      	ST   -Y,R18
00c213 01de      	MOVW R26,R28
00c214 9618      	ADIW R26,8
00c215 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00c216 01f9      	MOVW R30,R18
00c217 9631      	ADIW R30,1
00c218 940e df38 	CALL __CWD1
00c21a 940e e05b 	CALL __PUTPARD1
00c21c ce9b      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00c21d 940e e05b 	CALL __PUTPARD1
00c21f cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00c220 01f9      	MOVW R30,R18
00c221 9631      	ADIW R30,1
00c222 940e df38 	CALL __CWD1
00c224 940e e05b 	CALL __PUTPARD1
00c226 e084      	LDI  R24,4
00c227 940e 7f9f 	CALL _printOLED
00c229 9628      	ADIW R28,8
00c22a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x46:
00c22b 940e e0d0 	CALL __SAVELOCR6
                +
00c22d e000     +LDI R16 , LOW ( 0 )
00c22e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c22f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00c230 e0f0      	LDI  R31,0
00c231 31e0      	CPI  R30,LOW(0x10)
00c232 e0a0      	LDI  R26,HIGH(0x10)
00c233 07fa      	CPC  R31,R26
00c234 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00c235 e0ab      	LDI  R26,LOW(11)
00c236 e0b0      	LDI  R27,0
00c237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00c238 940e e05b 	CALL __PUTPARD1
00c23a 01fa      	MOVW R30,R20
00c23b 940e df38 	CALL __CWD1
00c23d 940e e05b 	CALL __PUTPARD1
00c23f ce78      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00c240 940e a538 	CALL _free
00c242 efef      	LDI  R30,LOW(65535)
00c243 efff      	LDI  R31,HIGH(65535)
00c244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00c245 01fa      	MOVW R30,R20
                +
00c246 5f4f     +SUBI R20 , LOW ( - 1 )
00c247 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c248 0fe2      	ADD  R30,R18
00c249 1ff3      	ADC  R31,R19
00c24a 01df      	MOVW R26,R30
00c24b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00c24c 01fa      	MOVW R30,R20
                +
00c24d 5f4f     +SUBI R20 , LOW ( - 1 )
00c24e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c24f 0fe2      	ADD  R30,R18
00c250 1ff3      	ADC  R31,R19
00c251 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00c252 93fa      	ST   -Y,R31
00c253 93ea      	ST   -Y,R30
00c254 e0a4      	LDI  R26,LOW(4)
00c255 e0b0      	LDI  R27,0
00c256 940c a55a 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00c258 940e 452f 	CALL _DS1672_read
                +
00c25a 87e8     +STD Y + 8 , R30
00c25b 87f9     +STD Y + 8 + 1 , R31
00c25c 876a     +STD Y + 8 + 2 , R22
00c25d 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00c25e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:59 WORDS
                 SUBOPT_0x4F:
                +
00c25f 85e8     +LDD R30 , Y + 8
00c260 85f9     +LDD R31 , Y + 8 + 1
00c261 856a     +LDD R22 , Y + 8 + 2
00c262 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00c263 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x50:
00c264 940e e05b 	CALL __PUTPARD1
                +
00c266 85ee     +LDD R30 , Y + 14
00c267 85ff     +LDD R31 , Y + 14 + 1
00c268 8968     +LDD R22 , Y + 14 + 2
00c269 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c26a 940e e05b 	CALL __PUTPARD1
00c26c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x51:
                +
00c26d 89ea     +LDD R30 , Y + 18
00c26e 89fb     +LDD R31 , Y + 18 + 1
00c26f 896c     +LDD R22 , Y + 18 + 2
00c270 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c271 940e e05b 	CALL __PUTPARD1
00c273 e08c      	LDI  R24,12
00c274 940e 9e24 	CALL _printDebug
00c276 9660      	ADIW R28,16
00c277 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x52:
                +
00c278 85aa     +LDD R26 , Y + 10
00c279 85bb     +LDD R27 , Y + 10 + 1
00c27a 858c     +LDD R24 , Y + 10 + 2
00c27b 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00c27c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00c27d dffa      	RCALL SUBOPT_0x52
00c27e cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00c27f 93ea      	ST   -Y,R30
                +
00c280 85eb     +LDD R30 , Y + 11
00c281 85fc     +LDD R31 , Y + 11 + 1
00c282 856d     +LDD R22 , Y + 11 + 2
00c283 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c284 940e e05b 	CALL __PUTPARD1
00c286 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00c287 85ad     +LDD R26 , Y + 13
00c288 85be     +LDD R27 , Y + 13 + 1
00c289 858f     +LDD R24 , Y + 13 + 2
00c28a 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00c28b 940c 5578 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x56:
00c28d 01fe      	MOVW R30,R28
00c28e 9636      	ADIW R30,6
00c28f 93fa      	ST   -Y,R31
00c290 93ea      	ST   -Y,R30
00c291 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x57:
00c292 940e e05b 	CALL __PUTPARD1
                +
00c294 85ea     +LDD R30 , Y + 10
00c295 85fb     +LDD R31 , Y + 10 + 1
00c296 856c     +LDD R22 , Y + 10 + 2
00c297 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c298 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00c299 2fe5      	MOV  R30,R21
00c29a 27ff      	CLR  R31
00c29b 2766      	CLR  R22
00c29c 2777      	CLR  R23
00c29d 940e e05b 	CALL __PUTPARD1
00c29f 2fe4      	MOV  R30,R20
00c2a0 27ff      	CLR  R31
00c2a1 2766      	CLR  R22
00c2a2 2777      	CLR  R23
00c2a3 940e e05b 	CALL __PUTPARD1
00c2a5 e08c      	LDI  R24,12
00c2a6 940e 9e24 	CALL _printDebug
00c2a8 9660      	ADIW R28,16
00c2a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x59:
                +
00c2aa 81ae     +LDD R26 , Y + 6
00c2ab 81bf     +LDD R27 , Y + 6 + 1
00c2ac 8588     +LDD R24 , Y + 6 + 2
00c2ad 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00c2ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00c2af 01fe      	MOVW R30,R28
00c2b0 963c      	ADIW R30,12
00c2b1 93fa      	ST   -Y,R31
00c2b2 93ea      	ST   -Y,R30
00c2b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x5B:
00c2b4 940e e05b 	CALL __PUTPARD1
00c2b6 ddd6      	RCALL SUBOPT_0xC
00c2b7 940e e05b 	CALL __PUTPARD1
00c2b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00c2ba ddcd      	RCALL SUBOPT_0xB
00c2bb cf0e      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00c2bc 01fe      	MOVW R30,R28
00c2bd 9670      	ADIW R30,16
00c2be 93fa      	ST   -Y,R31
00c2bf 93ea      	ST   -Y,R30
00c2c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00c2c1 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00c2c2 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00c2c3 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c2c5 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c2c7 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c2c9 bf6c     +OUT EIND , R22
00c2ca 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c2cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00c2cc 940e e05b 	CALL __PUTPARD1
00c2ce eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00c2cf e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00c2d0 ced3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x60:
                +
00c2d1 85ee     +LDD R30 , Y + 14
00c2d2 85ff     +LDD R31 , Y + 14 + 1
00c2d3 8968     +LDD R22 , Y + 14 + 2
00c2d4 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c2d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00c2d6 85ae     +LDD R26 , Y + 14
00c2d7 85bf     +LDD R27 , Y + 14 + 1
00c2d8 8988     +LDD R24 , Y + 14 + 2
00c2d9 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00c2da 940c 822f 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00c2dc 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c2de 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c2e0 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c2e2 bf6c     +OUT EIND , R22
00c2e3 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c2e4 01af      	MOVW R20,R30
00c2e5 2355      	TST  R21
00c2e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00c2e7 01fe      	MOVW R30,R28
00c2e8 9637      	ADIW R30,7
00c2e9 93fa      	ST   -Y,R31
00c2ea 93ea      	ST   -Y,R30
00c2eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00c2ec 85eb     +LDD R30 , Y + 11
00c2ed 85fc     +LDD R31 , Y + 11 + 1
00c2ee 856d     +LDD R22 , Y + 11 + 2
00c2ef 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c2f0 940e e05b 	CALL __PUTPARD1
00c2f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 90 TIMES, CODE SIZE REDUCTION:264 WORDS
                 SUBOPT_0x65:
00c2f3 27ff      	CLR  R31
00c2f4 2766      	CLR  R22
00c2f5 2777      	CLR  R23
00c2f6 940e e05b 	CALL __PUTPARD1
00c2f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x66:
00c2f9 e08c      	LDI  R24,12
00c2fa 940e 9e24 	CALL _printDebug
00c2fc 9660      	ADIW R28,16
00c2fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00c2fe 81af     +LDD R26 , Y + 7
00c2ff 85b8     +LDD R27 , Y + 7 + 1
00c300 8589     +LDD R24 , Y + 7 + 2
00c301 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00c302 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00c303 01fe      	MOVW R30,R28
00c304 963b      	ADIW R30,11
00c305 93fa      	ST   -Y,R31
00c306 93ea      	ST   -Y,R30
00c307 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00c308 eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00c309 e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00c30a 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c30c 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c30e 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c310 bf6c     +OUT EIND , R22
00c311 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c312 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00c313 940e e05b 	CALL __PUTPARD1
00c315 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00c316 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00c317 ce8c      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00c318 85e9     +LDD R30 , Y + 9
00c319 85fa     +LDD R31 , Y + 9 + 1
00c31a 856b     +LDD R22 , Y + 9 + 2
00c31b 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00c31c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00c31d 01fe      	MOVW R30,R28
00c31e 9672      	ADIW R30,18
00c31f 93fa      	ST   -Y,R31
00c320 93ea      	ST   -Y,R30
00c321 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00c322 df55      	RCALL SUBOPT_0x52
00c323 940e e0c0 	CALL __CPD02
00c325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00c326 e0e0      	LDI  R30,LOW(0)
00c327 93e0 1426 	STS  _logDataWait,R30
                +
00c329 e0e0     +LDI R30 , LOW ( 0x0 )
00c32a e0f0     +LDI R31 , HIGH ( 0x0 )
00c32b e060     +LDI R22 , BYTE3 ( 0x0 )
00c32c e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c32d 93e0 1427+STS _logDataWait + ( 1 ) , R30
00c32f 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00c331 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00c333 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00c335 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00c336 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00c338 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00c33a 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00c33c 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00c33e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00c33f 01de      	MOVW R26,R28
00c340 9652      	ADIW R26,18
                +
00c341 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c343 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c345 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c347 bf6c     +OUT EIND , R22
00c348 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c349 018f      	MOVW R16,R30
00c34a 2311      	TST  R17
00c34b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00c34c e0e0      	LDI  R30,LOW(0)
00c34d 93e0 142b 	STS  _logEventWait,R30
                +
00c34f e0e0     +LDI R30 , LOW ( 0x0 )
00c350 e0f0     +LDI R31 , HIGH ( 0x0 )
00c351 e060     +LDI R22 , BYTE3 ( 0x0 )
00c352 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c353 93e0 142c+STS _logEventWait + ( 1 ) , R30
00c355 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00c357 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00c359 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00c35b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00c35c 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00c35e 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00c360 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00c362 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00c364 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00c365 e0a2      	LDI  R26,LOW(2)
00c366 e0b0      	LDI  R27,0
00c367 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00c368 e6a4      	LDI  R26,LOW(100)
00c369 e0b0      	LDI  R27,0
00c36a 940c dcfc 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x75:
00c36c e0a1      	LDI  R26,LOW(1)
00c36d e0b0      	LDI  R27,0
00c36e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00c36f e0a3      	LDI  R26,LOW(3)
00c370 e0b0      	LDI  R27,0
00c371 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x77:
00c372 e0a4      	LDI  R26,LOW(4)
00c373 e0b0      	LDI  R27,0
00c374 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:66 WORDS
                 SUBOPT_0x78:
00c375 01df      	MOVW R26,R30
00c376 940e e02b 	CALL __GETD1P
00c378 940e e05b 	CALL __PUTPARD1
00c37a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00c37b 93e0 0102 	STS  258,R30
00c37d ce2b      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00c37e e3a2      	LDI  R26,LOW(50)
00c37f e0b0      	LDI  R27,0
00c380 940c dcfc 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00c382 920a      	ST   -Y,R0
00c383 921a      	ST   -Y,R1
00c384 92fa      	ST   -Y,R15
00c385 936a      	ST   -Y,R22
00c386 937a      	ST   -Y,R23
00c387 938a      	ST   -Y,R24
00c388 939a      	ST   -Y,R25
00c389 93aa      	ST   -Y,R26
00c38a 93ba      	ST   -Y,R27
00c38b 93ea      	ST   -Y,R30
00c38c 93fa      	ST   -Y,R31
00c38d b7eb      	IN   R30,RAMPZ
00c38e 93ea      	ST   -Y,R30
00c38f b7ec      	IN   R30,EIND
00c390 93ea      	ST   -Y,R30
00c391 b7ef      	IN   R30,SREG
00c392 93ea      	ST   -Y,R30
00c393 931a      	ST   -Y,R17
00c394 930a      	ST   -Y,R16
00c395 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00c396 91ed      	LD   R30,X+
00c397 91fd      	LD   R31,X+
00c398 9631      	ADIW R30,1
00c399 93fe      	ST   -X,R31
00c39a 93ee      	ST   -X,R30
00c39b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00c39c 91a0 10ee 	LDS  R26,_configLen
00c39e 91b0 10ef 	LDS  R27,_configLen+1
00c3a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00c3a1 e0e0      	LDI  R30,LOW(0)
00c3a2 93e0 10ee 	STS  _configLen,R30
00c3a4 93e0 10ef 	STS  _configLen+1,R30
00c3a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x7F:
00c3a7 93ba      	ST   -Y,R27
00c3a8 93aa      	ST   -Y,R26
00c3a9 940e e0d2 	CALL __SAVELOCR4
00c3ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00c3ac 85e8      	LDD  R30,Y+8
00c3ad 85f9      	LDD  R31,Y+8+1
00c3ae 9631      	ADIW R30,1
00c3af 87e8      	STD  Y+8,R30
00c3b0 87f9      	STD  Y+8+1,R31
00c3b1 9731      	SBIW R30,1
00c3b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x81:
00c3b3 93ba      	ST   -Y,R27
00c3b4 93aa      	ST   -Y,R26
00c3b5 931a      	ST   -Y,R17
00c3b6 930a      	ST   -Y,R16
00c3b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00c3b8 81ea      	LDD  R30,Y+2
00c3b9 81fb      	LDD  R31,Y+2+1
00c3ba 170e      	CP   R16,R30
00c3bb 071f      	CPC  R17,R31
00c3bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00c3bd 01f8      	MOVW R30,R16
00c3be 81ac      	LDD  R26,Y+4
00c3bf 81bd      	LDD  R27,Y+4+1
00c3c0 0fae      	ADD  R26,R30
00c3c1 1fbf      	ADC  R27,R31
00c3c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00c3c3 81a9      	LDD  R26,Y+1
00c3c4 81ba      	LDD  R27,Y+1+1
00c3c5 27ee      	CLR  R30
00c3c6 0fa1      	ADD  R26,R17
00c3c7 1fbe      	ADC  R27,R30
00c3c8 91ec      	LD   R30,X
00c3c9 30e0      	CPI  R30,0
00c3ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00c3cb 81a9      	LDD  R26,Y+1
00c3cc 81ba      	LDD  R27,Y+1+1
00c3cd 27ee      	CLR  R30
00c3ce 0fa1      	ADD  R26,R17
00c3cf 1fbe      	ADC  R27,R30
00c3d0 91ac      	LD   R26,X
00c3d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00c3d2 940e e060 	CALL __PUTPARD2
00c3d4 940e e047 	CALL __GETD1S0
00c3d6 940e e0b4 	CALL __CPD10
00c3d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x87:
00c3d9 940e e047 	CALL __GETD1S0
00c3db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00c3dc 91a0 1377 	LDS  R26,_baseCounter
00c3de 91b0 1378 	LDS  R27,_baseCounter+1
00c3e0 9180 1379 	LDS  R24,_baseCounter+2
00c3e2 9190 137a 	LDS  R25,_baseCounter+3
00c3e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x89:
                +
00c3e5 81ec     +LDD R30 , Y + 4
00c3e6 81fd     +LDD R31 , Y + 4 + 1
00c3e7 816e     +LDD R22 , Y + 4 + 2
00c3e8 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00c3e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00c3ea 940e deb3 	CALL __ADDD12
00c3ec 940e e051 	CALL __PUTD1S0
00c3ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00c3ef 91e0 1377 	LDS  R30,_baseCounter
00c3f1 91f0 1378 	LDS  R31,_baseCounter+1
00c3f3 9160 1379 	LDS  R22,_baseCounter+2
00c3f5 9170 137a 	LDS  R23,_baseCounter+3
00c3f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8C:
00c3f8 940e e04c 	CALL __GETD2S0
00c3fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x8D:
00c3fb 940e e05b 	CALL __PUTPARD1
                +
00c3fd 85ec     +LDD R30 , Y + 12
00c3fe 85fd     +LDD R31 , Y + 12 + 1
00c3ff 856e     +LDD R22 , Y + 12 + 2
00c400 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c401 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8E:
                +
00c402 e0e0     +LDI R30 , LOW ( 0x0 )
00c403 e0f0     +LDI R31 , HIGH ( 0x0 )
00c404 e060     +LDI R22 , BYTE3 ( 0x0 )
00c405 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c406 940e e036 	CALL __PUTDP1
00c408 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x8F:
00c409 920a      	ST   -Y,R0
00c40a 921a      	ST   -Y,R1
00c40b 92fa      	ST   -Y,R15
00c40c 936a      	ST   -Y,R22
00c40d 937a      	ST   -Y,R23
00c40e 938a      	ST   -Y,R24
00c40f 939a      	ST   -Y,R25
00c410 93aa      	ST   -Y,R26
00c411 93ba      	ST   -Y,R27
00c412 93ea      	ST   -Y,R30
00c413 93fa      	ST   -Y,R31
00c414 b7eb      	IN   R30,RAMPZ
00c415 93ea      	ST   -Y,R30
00c416 b7ec      	IN   R30,EIND
00c417 93ea      	ST   -Y,R30
00c418 b7ef      	IN   R30,SREG
00c419 93ea      	ST   -Y,R30
00c41a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x90:
00c41b efee      	LDI  R30,LOW(254)
00c41c 93e0 0085 	STS  133,R30
00c41e e7e9      	LDI  R30,LOW(121)
00c41f 93e0 0084 	STS  132,R30
00c421 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00c422 e8e5      	LDI  R30,LOW(133)
00c423 93e0 0095 	STS  149,R30
00c425 eeed      	LDI  R30,LOW(237)
00c426 93e0 0094 	STS  148,R30
00c428 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x92:
00c429 940e e031 	CALL __GETD1P_INC
                +
00c42b 5fef     +SUBI R30 , LOW ( - 1 )
00c42c 4fff     +SBCI R31 , HIGH ( - 1 )
00c42d 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c42e 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c42f 940e e03b 	CALL __PUTDP1_DEC
00c431 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x93:
00c432 e8e5      	LDI  R30,LOW(133)
00c433 93e0 00a5 	STS  165,R30
00c435 eeed      	LDI  R30,LOW(237)
00c436 93e0 00a4 	STS  164,R30
00c438 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x94:
00c439 93ba      	ST   -Y,R27
00c43a 93aa      	ST   -Y,R26
00c43b 81e8      	LD   R30,Y
00c43c 81f9      	LDD  R31,Y+1
00c43d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x95:
00c43e b1e6      	IN   R30,0x6
00c43f 7ce0      	ANDI R30,LOW(0xC0)
00c440 e0f0      	LDI  R31,0
00c441 940e df0b 	CALL __ASRW2
00c443 940e df07 	CALL __ASRW4
00c445 95e0      	COM  R30
00c446 95f0      	COM  R31
00c447 70e3      	ANDI R30,LOW(0x3)
00c448 70f0      	ANDI R31,HIGH(0x3)
00c449 9731      	SBIW R30,1
00c44a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x96:
00c44b b1e3      	IN   R30,0x3
00c44c 71e0      	ANDI R30,LOW(0x10)
00c44d e0f0      	LDI  R31,0
00c44e 940e df07 	CALL __ASRW4
00c450 9730      	SBIW R30,0
00c451 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x97:
00c452 e0a5      	LDI  R26,LOW(5)
00c453 e0b0      	LDI  R27,0
00c454 940c dcfc 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x98:
00c456 b1e3      	IN   R30,0x3
00c457 72e0      	ANDI R30,LOW(0x20)
00c458 e0f0      	LDI  R31,0
00c459 95f5      	ASR  R31
00c45a 95e7      	ROR  R30
00c45b 940e df07 	CALL __ASRW4
00c45d 9730      	SBIW R30,0
00c45e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x99:
00c45f b1e3      	IN   R30,0x3
00c460 74e0      	ANDI R30,LOW(0x40)
00c461 e0f0      	LDI  R31,0
00c462 940e df0b 	CALL __ASRW2
00c464 940e df07 	CALL __ASRW4
00c466 9730      	SBIW R30,0
00c467 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
00c468 b1e3      	IN   R30,0x3
00c469 78e0      	ANDI R30,LOW(0x80)
00c46a e0f0      	LDI  R31,0
00c46b 940e df09 	CALL __ASRW3
00c46d 940e df07 	CALL __ASRW4
00c46f 9730      	SBIW R30,0
00c470 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9B:
00c471 e0f0      	LDI  R31,0
00c472 70f0      	ANDI R31,HIGH(0xFF)
00c473 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9C:
00c474 91a0 14e8 	LDS  R26,_adcBatt
00c476 91b0 14e9 	LDS  R27,_adcBatt+1
00c478 9180 14ea 	LDS  R24,_adcBatt+2
00c47a 9190 14eb 	LDS  R25,_adcBatt+3
00c47c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x9D:
00c47d 2766      	CLR  R22
00c47e 2777      	CLR  R23
00c47f 940e dd72 	CALL __CDF1
00c481 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9E:
                +
00c482 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00c483 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00c484 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00c485 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00c486 940e ddfc 	CALL __MULF12
00c488 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x9F:
00c489 940e ddac 	CALL __ADDF12
00c48b 01df      	MOVW R26,R30
00c48c 01cb      	MOVW R24,R22
                +
00c48d e0e0     +LDI R30 , LOW ( 0x41200000 )
00c48e e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c48f e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c490 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c491 940e de4a 	CALL __DIVF21
00c493 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA0:
00c494 940e e051 	CALL __PUTD1S0
00c496 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA1:
00c497 91e0 0108 	LDS  R30,264
00c499 7fe1      	ANDI R30,LOW(0xF1)
00c49a 93e0 0108 	STS  264,R30
00c49c e0a8      	LDI  R26,LOW(264)
00c49d e0b1      	LDI  R27,HIGH(264)
00c49e 2e0a      	MOV  R0,R26
00c49f 91ac      	LD   R26,X
00c4a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA2:
00c4a1 0fee      	LSL  R30
00c4a2 2bea      	OR   R30,R26
00c4a3 2da0      	MOV  R26,R0
00c4a4 93ec      	ST   X,R30
00c4a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA3:
00c4a6 e1a4      	LDI  R26,LOW(20)
00c4a7 e0b0      	LDI  R27,0
00c4a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA4:
00c4a9 dfd3      	RCALL SUBOPT_0x9D
00c4aa 940e e036 	CALL __PUTDP1
00c4ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA5:
00c4ad 940e dcb0 	CALL _i2c_start
00c4af eda0      	LDI  R26,LOW(208)
00c4b0 940c dce4 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA6:
00c4b2 940e dce4 	CALL _i2c_write
00c4b4 940c dcbf 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA7:
00c4b6 e0aa      	LDI  R26,LOW(10)
00c4b7 e0b0      	LDI  R27,0
00c4b8 940e dcfc 	CALL _delay_ms
00c4ba e0e0      	LDI  R30,LOW(0)
00c4bb e0f0      	LDI  R31,HIGH(0)
00c4bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0xA8:
                +
00c4bd 83ec     +STD Y + 4 , R30
00c4be 83fd     +STD Y + 4 + 1 , R31
00c4bf 836e     +STD Y + 4 + 2 , R22
00c4c0 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00c4c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:59 WORDS
                 SUBOPT_0xA9:
                +
00c4c2 81ac     +LDD R26 , Y + 4
00c4c3 81bd     +LDD R27 , Y + 4 + 1
00c4c4 818e     +LDD R24 , Y + 4 + 2
00c4c5 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00c4c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAA:
00c4c7 e0e8      	LDI  R30,LOW(8)
00c4c8 940e dee6 	CALL __LSLD12
00c4ca cff2      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAB:
00c4cb e0f0      	LDI  R31,0
00c4cc dff5      	RCALL SUBOPT_0xA9
00c4cd 940e df38 	CALL __CWD1
00c4cf 940e deb3 	CALL __ADDD12
00c4d1 dfeb      	RCALL SUBOPT_0xA8
00c4d2 dfef      	RCALL SUBOPT_0xA9
00c4d3 cff3      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAC:
00c4d4 2fe1      	MOV  R30,R17
00c4d5 e0f0      	LDI  R31,0
00c4d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAD:
00c4d7 940e df38 	CALL __CWD1
00c4d9 940e deb3 	CALL __ADDD12
00c4db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAE:
00c4dc dfe0      	RCALL SUBOPT_0xA8
00c4dd cf07      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAF:
                +
00c4de e3ec     +LDI R30 , LOW ( 0x3C )
00c4df e0f0     +LDI R31 , HIGH ( 0x3C )
00c4e0 e060     +LDI R22 , BYTE3 ( 0x3C )
00c4e1 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00c4e2 940e dfaf 	CALL __DIVD21U
00c4e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xB0:
                +
00c4e5 83ee     +STD Y + 6 , R30
00c4e6 83ff     +STD Y + 6 + 1 , R31
00c4e7 8768     +STD Y + 6 + 2 , R22
00c4e8 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c4e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB1:
                +
00c4ea e3ac     +LDI R26 , LOW ( 0x3C )
00c4eb e0b0     +LDI R27 , HIGH ( 0x3C )
00c4ec e080     +LDI R24 , BYTE3 ( 0x3C )
00c4ed e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c4ee 940e df59 	CALL __MULD12U
00c4f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xB2:
                +
00c4f1 83ea     +STD Y + 2 , R30
00c4f2 83fb     +STD Y + 2 + 1 , R31
00c4f3 836c     +STD Y + 2 + 2 , R22
00c4f4 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00c4f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0xB3:
                +
00c4f6 81ea     +LDD R30 , Y + 2
00c4f7 81fb     +LDD R31 , Y + 2 + 1
00c4f8 816c     +LDD R22 , Y + 2 + 2
00c4f9 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00c4fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0xB4:
                +
00c4fb 81aa     +LDD R26 , Y + 2
00c4fc 81bb     +LDD R27 , Y + 2 + 1
00c4fd 818c     +LDD R24 , Y + 2 + 2
00c4fe 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00c4ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0xB5:
                +
00c500 81ee     +LDD R30 , Y + 6
00c501 81ff     +LDD R31 , Y + 6 + 1
00c502 8568     +LDD R22 , Y + 6 + 2
00c503 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00c504 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB6:
                +
00c505 83ee     +STD Y + 6 , R30
00c506 83ff     +STD Y + 6 + 1 , R31
00c507 8768     +STD Y + 6 + 2 , R22
00c508 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c509 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB7:
00c50a dd9f      	RCALL SUBOPT_0x59
                +
00c50b ebe5     +LDI R30 , LOW ( 0x5B5 )
00c50c e0f5     +LDI R31 , HIGH ( 0x5B5 )
00c50d e060     +LDI R22 , BYTE3 ( 0x5B5 )
00c50e e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00c50f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB8:
                +
00c510 8fee     +STD Y + 30 , R30
00c511 8fff     +STD Y + 30 + 1 , R31
00c512 a368     +STD Y + 30 + 2 , R22
00c513 a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00c514 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB9:
                +
00c515 8daa     +LDD R26 , Y + 26
00c516 8dbb     +LDD R27 , Y + 26 + 1
00c517 8d8c     +LDD R24 , Y + 26 + 2
00c518 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00c519 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBA:
                +
00c51a 33ac     +CPI R26 , LOW ( 0x3C )
00c51b e0e0     +LDI R30 , HIGH ( 0x3C )
00c51c 07be     +CPC R27 , R30
00c51d e0e0     +LDI R30 , BYTE3 ( 0x3C )
00c51e 078e     +CPC R24 , R30
00c51f e0e0     +LDI R30 , BYTE4 ( 0x3C )
00c520 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00c521 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBB:
                +
00c522 8dee     +LDD R30 , Y + 30
00c523 8dff     +LDD R31 , Y + 30 + 1
00c524 a168     +LDD R22 , Y + 30 + 2
00c525 a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00c526 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBC:
                +
00c527 5fef     +SUBI R30 , LOW ( - 1 )
00c528 4fff     +SBCI R31 , HIGH ( - 1 )
00c529 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c52a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c52b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBD:
                +
00c52c 8dae     +LDD R26 , Y + 30
00c52d 8dbf     +LDD R27 , Y + 30 + 1
00c52e a188     +LDD R24 , Y + 30 + 2
00c52f a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00c530 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBE:
                +
00c531 a1ee     +LDD R30 , Y + 38
00c532 a1ff     +LDD R31 , Y + 38 + 1
00c533 a568     +LDD R22 , Y + 38 + 2
00c534 a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00c535 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBF:
                +
00c536 e6ad     +LDI R26 , LOW ( 0x16D )
00c537 e0b1     +LDI R27 , HIGH ( 0x16D )
00c538 e080     +LDI R24 , BYTE3 ( 0x16D )
00c539 e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00c53a 940e df59 	CALL __MULD12U
00c53c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC0:
00c53d 940e e072 	CALL __SWAPD12
00c53f 940e debd 	CALL __SUBD12
00c541 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
00c542 8bee     +STD Y + 22 , R30
00c543 8bff     +STD Y + 22 + 1 , R31
00c544 8f68     +STD Y + 22 + 2 , R22
00c545 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00c546 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC2:
                +
00c547 89ee     +LDD R30 , Y + 22
00c548 89ff     +LDD R31 , Y + 22 + 1
00c549 8d68     +LDD R22 , Y + 22 + 2
00c54a 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00c54b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC3:
                +
00c54c a1ea     +LDD R30 , Y + 34
00c54d a1fb     +LDD R31 , Y + 34 + 1
00c54e a16c     +LDD R22 , Y + 34 + 2
00c54f a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00c550 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC4:
                +
00c551 30e1     +CPI R30 , LOW ( 0x1 )
00c552 e0a0     +LDI R26 , HIGH ( 0x1 )
00c553 07fa     +CPC R31 , R26
00c554 e0a0     +LDI R26 , BYTE3 ( 0x1 )
00c555 076a     +CPC R22 , R26
00c556 e0a0     +LDI R26 , BYTE4 ( 0x1 )
00c557 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00c558 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC5:
                +
00c559 30e2     +CPI R30 , LOW ( 0x2 )
00c55a e0a0     +LDI R26 , HIGH ( 0x2 )
00c55b 07fa     +CPC R31 , R26
00c55c e0a0     +LDI R26 , BYTE3 ( 0x2 )
00c55d 076a     +CPC R22 , R26
00c55e e0a0     +LDI R26 , BYTE4 ( 0x2 )
00c55f 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00c560 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00c561 30e3     +CPI R30 , LOW ( 0x3 )
00c562 e0a0     +LDI R26 , HIGH ( 0x3 )
00c563 07fa     +CPC R31 , R26
00c564 e0a0     +LDI R26 , BYTE3 ( 0x3 )
00c565 076a     +CPC R22 , R26
00c566 e0a0     +LDI R26 , BYTE4 ( 0x3 )
00c567 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00c568 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00c569 30e4     +CPI R30 , LOW ( 0x4 )
00c56a e0a0     +LDI R26 , HIGH ( 0x4 )
00c56b 07fa     +CPC R31 , R26
00c56c e0a0     +LDI R26 , BYTE3 ( 0x4 )
00c56d 076a     +CPC R22 , R26
00c56e e0a0     +LDI R26 , BYTE4 ( 0x4 )
00c56f 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00c570 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00c571 30e5     +CPI R30 , LOW ( 0x5 )
00c572 e0a0     +LDI R26 , HIGH ( 0x5 )
00c573 07fa     +CPC R31 , R26
00c574 e0a0     +LDI R26 , BYTE3 ( 0x5 )
00c575 076a     +CPC R22 , R26
00c576 e0a0     +LDI R26 , BYTE4 ( 0x5 )
00c577 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00c578 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00c579 30e6     +CPI R30 , LOW ( 0x6 )
00c57a e0a0     +LDI R26 , HIGH ( 0x6 )
00c57b 07fa     +CPC R31 , R26
00c57c e0a0     +LDI R26 , BYTE3 ( 0x6 )
00c57d 076a     +CPC R22 , R26
00c57e e0a0     +LDI R26 , BYTE4 ( 0x6 )
00c57f 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00c580 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00c581 30e7     +CPI R30 , LOW ( 0x7 )
00c582 e0a0     +LDI R26 , HIGH ( 0x7 )
00c583 07fa     +CPC R31 , R26
00c584 e0a0     +LDI R26 , BYTE3 ( 0x7 )
00c585 076a     +CPC R22 , R26
00c586 e0a0     +LDI R26 , BYTE4 ( 0x7 )
00c587 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00c588 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00c589 30e8     +CPI R30 , LOW ( 0x8 )
00c58a e0a0     +LDI R26 , HIGH ( 0x8 )
00c58b 07fa     +CPC R31 , R26
00c58c e0a0     +LDI R26 , BYTE3 ( 0x8 )
00c58d 076a     +CPC R22 , R26
00c58e e0a0     +LDI R26 , BYTE4 ( 0x8 )
00c58f 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00c590 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00c591 30e9     +CPI R30 , LOW ( 0x9 )
00c592 e0a0     +LDI R26 , HIGH ( 0x9 )
00c593 07fa     +CPC R31 , R26
00c594 e0a0     +LDI R26 , BYTE3 ( 0x9 )
00c595 076a     +CPC R22 , R26
00c596 e0a0     +LDI R26 , BYTE4 ( 0x9 )
00c597 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00c598 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00c599 30ea     +CPI R30 , LOW ( 0xA )
00c59a e0a0     +LDI R26 , HIGH ( 0xA )
00c59b 07fa     +CPC R31 , R26
00c59c e0a0     +LDI R26 , BYTE3 ( 0xA )
00c59d 076a     +CPC R22 , R26
00c59e e0a0     +LDI R26 , BYTE4 ( 0xA )
00c59f 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00c5a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00c5a1 30eb     +CPI R30 , LOW ( 0xB )
00c5a2 e0a0     +LDI R26 , HIGH ( 0xB )
00c5a3 07fa     +CPC R31 , R26
00c5a4 e0a0     +LDI R26 , BYTE3 ( 0xB )
00c5a5 076a     +CPC R22 , R26
00c5a6 e0a0     +LDI R26 , BYTE4 ( 0xB )
00c5a7 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00c5a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00c5a9 30ec     +CPI R30 , LOW ( 0xC )
00c5aa e0a0     +LDI R26 , HIGH ( 0xC )
00c5ab 07fa     +CPC R31 , R26
00c5ac e0a0     +LDI R26 , BYTE3 ( 0xC )
00c5ad 076a     +CPC R22 , R26
00c5ae e0a0     +LDI R26 , BYTE4 ( 0xC )
00c5af 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00c5b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD0:
                +
00c5b1 30a3     +CPI R26 , LOW ( 0x3 )
00c5b2 e0e0     +LDI R30 , HIGH ( 0x3 )
00c5b3 07be     +CPC R27 , R30
00c5b4 e0e0     +LDI R30 , BYTE3 ( 0x3 )
00c5b5 078e     +CPC R24 , R30
00c5b6 e0e0     +LDI R30 , BYTE4 ( 0x3 )
00c5b7 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00c5b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD1:
                +
00c5b9 8dea     +LDD R30 , Y + 26
00c5ba 8dfb     +LDD R31 , Y + 26 + 1
00c5bb 8d6c     +LDD R22 , Y + 26 + 2
00c5bc 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00c5bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD2:
                +
00c5be 89ae     +LDD R26 , Y + 22
00c5bf 89bf     +LDD R27 , Y + 22 + 1
00c5c0 8d88     +LDD R24 , Y + 22 + 2
00c5c1 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00c5c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD3:
                +
00c5c3 5fef     +SUBI R30 , LOW ( - 1 )
00c5c4 4fff     +SBCI R31 , HIGH ( - 1 )
00c5c5 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c5c6 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00c5c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0xD4:
                +
00c5c8 89ea     +LDD R30 , Y + 18
00c5c9 89fb     +LDD R31 , Y + 18 + 1
00c5ca 896c     +LDD R22 , Y + 18 + 2
00c5cb 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c5cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD5:
                +
00c5cd 85ea     +LDD R30 , Y + 10
00c5ce 85fb     +LDD R31 , Y + 10 + 1
00c5cf 856c     +LDD R22 , Y + 10 + 2
00c5d0 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c5d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD6:
00c5d2 e0e0      	LDI  R30,LOW(0)
00c5d3 e0f0      	LDI  R31,HIGH(0)
00c5d4 8119      	LDD  R17,Y+1
00c5d5 8108      	LDD  R16,Y+0
00c5d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD7:
00c5d7 de20      	RCALL SUBOPT_0x8C
00c5d8 ce11      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xD8:
                +
00c5d9 85a8     +LDD R26 , Y + 8
00c5da 85b9     +LDD R27 , Y + 8 + 1
00c5db 858a     +LDD R24 , Y + 8 + 2
00c5dc 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00c5dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0xD9:
                +
00c5de 85ec     +LDD R30 , Y + 12
00c5df 85fd     +LDD R31 , Y + 12 + 1
00c5e0 856e     +LDD R22 , Y + 12 + 2
00c5e1 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c5e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDA:
                +
00c5e3 50e1     +SUBI R30 , LOW ( 1 )
00c5e4 40f0     +SBCI R31 , HIGH ( 1 )
00c5e5 4060     +SBCI R22 , BYTE3 ( 1 )
00c5e6 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00c5e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDB:
00c5e8 daa4      	RCALL SUBOPT_0xC
                +
00c5e9 e0a8     +LDI R26 , LOW ( 0x708 )
00c5ea e0b7     +LDI R27 , HIGH ( 0x708 )
00c5eb e080     +LDI R24 , BYTE3 ( 0x708 )
00c5ec e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00c5ed 940e df59 	CALL __MULD12U
00c5ef cfe7      	RJMP SUBOPT_0xD7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xDC:
                +
00c5f0 89ec     +LDD R30 , Y + 20
00c5f1 89fd     +LDD R31 , Y + 20 + 1
00c5f2 896e     +LDD R22 , Y + 20 + 2
00c5f3 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00c5f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDD:
                +
00c5f5 8de8     +LDD R30 , Y + 24
00c5f6 8df9     +LDD R31 , Y + 24 + 1
00c5f7 8d6a     +LDD R22 , Y + 24 + 2
00c5f8 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00c5f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDE:
00c5fa dfe3      	RCALL SUBOPT_0xD9
00c5fb dfdd      	RCALL SUBOPT_0xD8
00c5fc 940e e0c6 	CALL __CPD12
00c5fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDF:
00c5ff da88      	RCALL SUBOPT_0xB
00c600 dc5e      	RCALL SUBOPT_0x4F
00c601 940e debd 	CALL __SUBD12
00c603 ceb9      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE0:
00c604 dc5a      	RCALL SUBOPT_0x4F
00c605 da82      	RCALL SUBOPT_0xB
00c606 940e e0c6 	CALL __CPD12
00c608 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE1:
00c609 dfcf      	RCALL SUBOPT_0xD8
00c60a dfd3      	RCALL SUBOPT_0xD9
00c60b 940e debd 	CALL __SUBD12
00c60d ceaf      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE2:
00c60e deb3      	RCALL SUBOPT_0xA9
                +
00c60f 30aa     +CPI R26 , LOW ( 0xA )
00c610 e0e0     +LDI R30 , HIGH ( 0xA )
00c611 07be     +CPC R27 , R30
00c612 e0e0     +LDI R30 , BYTE3 ( 0xA )
00c613 078e     +CPC R24 , R30
00c614 e0e0     +LDI R30 , BYTE4 ( 0xA )
00c615 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00c616 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE3:
                +
00c617 e1e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00c618 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00c619 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00c61a e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00c61b cddf      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE4:
00c61c 940e e05b 	CALL __PUTPARD1
00c61e dfd1      	RCALL SUBOPT_0xDC
00c61f cc94      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE5:
00c620 85ec      	LDD  R30,Y+12
00c621 2f1e      	MOV  R17,R30
00c622 da65      	RCALL SUBOPT_0xB
00c623 e0e8      	LDI  R30,LOW(8)
00c624 940e def2 	CALL __LSRD12
00c626 2f0e      	MOV  R16,R30
00c627 dfb6      	RCALL SUBOPT_0xD9
00c628 940e df28 	CALL __LSRD16
00c62a 2f3e      	MOV  R19,R30
00c62b da5c      	RCALL SUBOPT_0xB
00c62c e1e8      	LDI  R30,LOW(24)
00c62d 940e def2 	CALL __LSRD12
00c62f 2f2e      	MOV  R18,R30
00c630 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE6:
00c631 e0a0      	LDI  R26,LOW(0)
00c632 940e dce4 	CALL _i2c_write
00c634 2fa1      	MOV  R26,R17
00c635 940e dce4 	CALL _i2c_write
00c637 2fa0      	MOV  R26,R16
00c638 940e dce4 	CALL _i2c_write
00c63a 2fa3      	MOV  R26,R19
00c63b 940e dce4 	CALL _i2c_write
00c63d 2fa2      	MOV  R26,R18
00c63e ce73      	RJMP SUBOPT_0xA6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE7:
00c63f 93ba      	ST   -Y,R27
00c640 93aa      	ST   -Y,R26
00c641 972c      	SBIW R28,12
00c642 940e e0d2 	CALL __SAVELOCR4
00c644 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xE8:
00c645 940e e05b 	CALL __PUTPARD1
00c647 89ec      	LDD  R30,Y+20
00c648 89fd      	LDD  R31,Y+20+1
00c649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0xE9:
00c64a 940e df38 	CALL __CWD1
00c64c 940e e05b 	CALL __PUTPARD1
00c64e ca69      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xEA:
                +
00c64f 87ec     +STD Y + 12 , R30
00c650 87fd     +STD Y + 12 + 1 , R31
00c651 876e     +STD Y + 12 + 2 , R22
00c652 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEB:
00c654 e3ac      	LDI  R26,LOW(60)
00c655 e0b0      	LDI  R27,HIGH(60)
00c656 940e df7f 	CALL __MULW12
00c658 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xEC:
00c659 dff5      	RCALL SUBOPT_0xEA
00c65a cf83      	RJMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xED:
00c65b 93e0 1430 	STS  _raw_rtc,R30
00c65d 93f0 1431 	STS  _raw_rtc+1,R31
00c65f 9360 1432 	STS  _raw_rtc+2,R22
00c661 9370 1433 	STS  _raw_rtc+3,R23
00c663 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEE:
00c664 93ba      	ST   -Y,R27
00c665 93aa      	ST   -Y,R26
00c666 9724      	SBIW R28,4
00c667 931a      	ST   -Y,R17
00c668 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEF:
00c669 de87      	RCALL SUBOPT_0xB2
00c66a ce90      	RJMP SUBOPT_0xB4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF0:
00c66b de85      	RCALL SUBOPT_0xB2
00c66c ce89      	RJMP SUBOPT_0xB3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF1:
00c66d 940e e05b 	CALL __PUTPARD1
00c66f 8dec      	LDD  R30,Y+28
00c670 8dfd      	LDD  R31,Y+28+1
00c671 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF2:
00c672 df82      	RCALL SUBOPT_0xDD
00c673 940e e05b 	CALL __PUTPARD1
00c675 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF3:
                +
00c676 a1e8     +LDD R30 , Y + 32
00c677 a1f9     +LDD R31 , Y + 32 + 1
00c678 a16a     +LDD R22 , Y + 32 + 2
00c679 a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
00c67a 940e e05b 	CALL __PUTPARD1
                +
00c67c a5e8     +LDD R30 , Y + 40
00c67d a5f9     +LDD R31 , Y + 40 + 1
00c67e a56a     +LDD R22 , Y + 40 + 2
00c67f a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00c680 940e e05b 	CALL __PUTPARD1
00c682 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF4:
                +
00c683 a9e8     +LDD R30 , Y + 48
00c684 a9f9     +LDD R31 , Y + 48 + 1
00c685 a96a     +LDD R22 , Y + 48 + 2
00c686 a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
00c687 940e e05b 	CALL __PUTPARD1
00c689 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF5:
00c68a e0a0      	LDI  R26,LOW(0)
00c68b e0b0      	LDI  R27,0
00c68c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF6:
00c68d 93fa      	ST   -Y,R31
00c68e 93ea      	ST   -Y,R30
00c68f e0e0      	LDI  R30,LOW(0)
00c690 93ea      	ST   -Y,R30
00c691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF7:
00c692 eaa1      	LDI  R26,LOW(161)
00c693 e0b0      	LDI  R27,0
00c694 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF8:
00c695 0fa0      	ADD  R26,R16
00c696 1fb1      	ADC  R27,R17
00c697 940e e087 	CALL __EEPROMRDB
00c699 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xF9:
00c69a 0fe0      	ADD  R30,R16
00c69b 1ff1      	ADC  R31,R17
00c69c 01df      	MOVW R26,R30
00c69d 940e e087 	CALL __EEPROMRDB
00c69f 01d0      	MOVW R26,R0
00c6a0 93ec      	ST   X,R30
00c6a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFA:
00c6a2 81ea      	LDD  R30,Y+2
00c6a3 81fb      	LDD  R31,Y+2+1
00c6a4 5be0      	SUBI R30,LOW(-80)
00c6a5 4fff      	SBCI R31,HIGH(-80)
00c6a6 0fe0      	ADD  R30,R16
00c6a7 1ff1      	ADC  R31,R17
00c6a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFB:
00c6a9 81ea      	LDD  R30,Y+2
00c6aa 81fb      	LDD  R31,Y+2+1
00c6ab 59ec      	SUBI R30,LOW(-100)
00c6ac 4fff      	SBCI R31,HIGH(-100)
00c6ad 0fe0      	ADD  R30,R16
00c6ae 1ff1      	ADC  R31,R17
00c6af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00c6b0 81ea      	LDD  R30,Y+2
00c6b1 81fb      	LDD  R31,Y+2+1
00c6b2 57e4      	SUBI R30,LOW(-140)
00c6b3 4fff      	SBCI R31,HIGH(-140)
00c6b4 0fe0      	ADD  R30,R16
00c6b5 1ff1      	ADC  R31,R17
00c6b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFD:
00c6b7 93ec      	ST   X,R30
00c6b8 81aa      	LDD  R26,Y+2
00c6b9 81bb      	LDD  R27,Y+2+1
00c6ba 9611      	ADIW R26,1
00c6bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFE:
00c6bc 93ec      	ST   X,R30
00c6bd 81aa      	LDD  R26,Y+2
00c6be 81bb      	LDD  R27,Y+2+1
00c6bf 9612      	ADIW R26,2
00c6c0 e0e0      	LDI  R30,LOW(0)
00c6c1 93ec      	ST   X,R30
                +
00c6c2 e000     +LDI R16 , LOW ( 0 )
00c6c3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c6c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xFF:
00c6c5 81ea      	LDD  R30,Y+2
00c6c6 81fb      	LDD  R31,Y+2+1
00c6c7 9633      	ADIW R30,3
00c6c8 0fe0      	ADD  R30,R16
00c6c9 1ff1      	ADC  R31,R17
00c6ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x100:
00c6cb 940e e087 	CALL __EEPROMRDB
00c6cd 81aa      	LDD  R26,Y+2
00c6ce 81bb      	LDD  R27,Y+2+1
00c6cf 93ec      	ST   X,R30
00c6d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x101:
00c6d1 940e e087 	CALL __EEPROMRDB
                +
00c6d3 81aa     +LDD R26 , Y + 2
00c6d4 81bb     +LDD R27 , Y + 2 + 1
00c6d5 9611     +ADIW R26 , 1
00c6d6 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00c6d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x102:
00c6d8 940e e087 	CALL __EEPROMRDB
                +
00c6da 81aa     +LDD R26 , Y + 2
00c6db 81bb     +LDD R27 , Y + 2 + 1
00c6dc 9612     +ADIW R26 , 2
00c6dd 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00c6de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x103:
00c6df 940e e05b 	CALL __PUTPARD1
00c6e1 81ae      	LDD  R26,Y+6
00c6e2 81bf      	LDD  R27,Y+6+1
00c6e3 91ec      	LD   R30,X
00c6e4 ca71      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x104:
00c6e5 940e e05b 	CALL __PUTPARD1
00c6e7 81ee      	LDD  R30,Y+6
00c6e8 81ff      	LDD  R31,Y+6+1
00c6e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x105:
                +
00c6ea e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c6eb e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c6ec e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c6ed e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c6ee cff6      	RJMP SUBOPT_0x104
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x106:
00c6ef 9633      	ADIW R30,3
00c6f0 0fe0      	ADD  R30,R16
00c6f1 1ff1      	ADC  R31,R17
00c6f2 81e0      	LD   R30,Z
00c6f3 ca62      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x107:
                +
00c6f4 e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00c6f5 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00c6f6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00c6f7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00c6f8 c949      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x108:
00c6f9 93ba      	ST   -Y,R27
00c6fa 93aa      	ST   -Y,R26
00c6fb 81ab      	LDD  R26,Y+3
00c6fc 23aa      	TST  R26
00c6fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x109:
00c6fe 93ed      	ST   X+,R30
00c6ff 93fc      	ST   X,R31
00c700 81a8      	LD   R26,Y
00c701 81b9      	LDD  R27,Y+1
00c702 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10A:
00c703 e0e0      	LDI  R30,LOW(0)
00c704 93ec      	ST   X,R30
00c705 81a8      	LD   R26,Y
00c706 81b9      	LDD  R27,Y+1
00c707 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10B:
                +
00c708 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c709 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c70a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c70b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c70c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x10C:
00c70d 81aa      	LDD  R26,Y+2
00c70e 81bb      	LDD  R27,Y+2+1
00c70f e1ed      	LDI  R30,LOW(29)
00c710 940e df79 	CALL __MULB1W2U
00c712 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10D:
                +
00c713 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00c714 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00c715 01df      	MOVW R26,R30
00c716 940e e07f 	CALL __EEPROMRDD
00c718 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10E:
                +
00c719 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00c71a 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00c71b 01df      	MOVW R26,R30
00c71c 940e e083 	CALL __EEPROMRDW
00c71e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10F:
                +
00c71f 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00c720 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00c721 01df      	MOVW R26,R30
00c722 940e e07f 	CALL __EEPROMRDD
00c724 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x110:
                +
00c725 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00c726 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00c727 01df      	MOVW R26,R30
00c728 940e e07f 	CALL __EEPROMRDD
00c72a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
00c72b 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00c72c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00c72d 01df      	MOVW R26,R30
00c72e 940e e083 	CALL __EEPROMRDW
00c730 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x112:
                +
00c731 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00c732 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00c733 01df      	MOVW R26,R30
00c734 940e e07f 	CALL __EEPROMRDD
00c736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x113:
00c737 e0e0      	LDI  R30,LOW(0)
00c738 e0f0      	LDI  R31,HIGH(0)
00c739 93ed      	ST   X+,R30
00c73a 93fc      	ST   X,R31
00c73b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x114:
00c73c 81aa      	LDD  R26,Y+2
00c73d 81bb      	LDD  R27,Y+2+1
00c73e e0e3      	LDI  R30,LOW(3)
00c73f 940e df79 	CALL __MULB1W2U
00c741 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x115:
00c742 01df      	MOVW R26,R30
00c743 940e e087 	CALL __EEPROMRDB
00c745 81a8      	LD   R26,Y
00c746 81b9      	LDD  R27,Y+1
00c747 93ec      	ST   X,R30
00c748 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x116:
00c749 940e e083 	CALL __EEPROMRDW
                +
00c74b 81a8     +LDD R26 , Y + 0
00c74c 81b9     +LDD R27 , Y + 0 + 1
00c74d 9611     +ADIW R26 , 1
00c74e 93ed     +ST X + , R30
00c74f 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00c750 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x117:
00c751 940e e05b 	CALL __PUTPARD1
00c753 85e8      	LDD  R30,Y+8
00c754 85f9      	LDD  R31,Y+8+1
00c755 cef4      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x118:
00c756 81ac      	LDD  R26,Y+4
00c757 81bd      	LDD  R27,Y+4+1
00c758 e2e6      	LDI  R30,LOW(38)
00c759 940e df79 	CALL __MULB1W2U
00c75b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x119:
00c75c 940e e05b 	CALL __PUTPARD1
00c75e 85a8      	LDD  R26,Y+8
00c75f 85b9      	LDD  R27,Y+8+1
00c760 e2e6      	LDI  R30,LOW(38)
00c761 940e df79 	CALL __MULB1W2U
00c763 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11A:
00c764 59e6      	SUBI R30,LOW(-_config_dout)
00c765 4ffe      	SBCI R31,HIGH(-_config_dout)
00c766 01df      	MOVW R26,R30
00c767 940e e087 	CALL __EEPROMRDB
00c769 c9ec      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11B:
                +
00c76a 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00c76b 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00c76c 01df      	MOVW R26,R30
00c76d 940e e087 	CALL __EEPROMRDB
00c76f c9e6      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11C:
                +
00c770 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00c771 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00c772 01df      	MOVW R26,R30
00c773 940e e087 	CALL __EEPROMRDB
00c775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11D:
00c776 01d8      	MOVW R26,R16
00c777 e0f0      	LDI  R31,0
00c778 17ae      	CP   R26,R30
00c779 07bf      	CPC  R27,R31
00c77a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11E:
                +
00c77b 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00c77c 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00c77d 0fe0      	ADD  R30,R16
00c77e 1ff1      	ADC  R31,R17
00c77f 01df      	MOVW R26,R30
00c780 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11F:
00c781 81aa      	LDD  R26,Y+2
00c782 81bb      	LDD  R27,Y+2+1
00c783 e0e5      	LDI  R30,LOW(5)
00c784 940e df79 	CALL __MULB1W2U
00c786 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x120:
00c787 81ea      	LDD  R30,Y+2
00c788 81fb      	LDD  R31,Y+2+1
00c789 9636      	ADIW R30,6
00c78a 0fe0      	ADD  R30,R16
00c78b 1ff1      	ADC  R31,R17
00c78c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x121:
00c78d 81ac      	LDD  R26,Y+4
00c78e 81bd      	LDD  R27,Y+4+1
00c78f e2e9      	LDI  R30,LOW(41)
00c790 940e df79 	CALL __MULB1W2U
00c792 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x122:
                +
00c793 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00c794 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00c795 01df      	MOVW R26,R30
00c796 940e e087 	CALL __EEPROMRDB
00c798 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x123:
                +
00c799 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00c79a 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00c79b 0fe0      	ADD  R30,R16
00c79c 1ff1      	ADC  R31,R17
00c79d 01df      	MOVW R26,R30
00c79e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x124:
00c79f 81ee      	LDD  R30,Y+6
00c7a0 81ff      	LDD  R31,Y+6+1
00c7a1 9632      	ADIW R30,2
00c7a2 0fe0      	ADD  R30,R16
00c7a3 1ff1      	ADC  R31,R17
00c7a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x125:
00c7a5 01de      	MOVW R26,R28
00c7a6 9612      	ADIW R26,2
00c7a7 0fa0      	ADD  R26,R16
00c7a8 1fb1      	ADC  R27,R17
00c7a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x126:
                +
00c7aa e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00c7ab e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00c7ac 940e e087 	CALL __EEPROMRDB
00c7ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x127:
00c7af 940e e05b 	CALL __PUTPARD1
00c7b1 85aa      	LDD  R26,Y+10
00c7b2 85bb      	LDD  R27,Y+10+1
00c7b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x128:
00c7b4 940e e05b 	CALL __PUTPARD1
00c7b6 85ea      	LDD  R30,Y+10
00c7b7 85fb      	LDD  R31,Y+10+1
00c7b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x129:
                +
00c7b9 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c7ba e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c7bb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c7bc e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c7bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12A:
00c7be 9632      	ADIW R30,2
00c7bf 0fe0      	ADD  R30,R16
00c7c0 1ff1      	ADC  R31,R17
00c7c1 81e0      	LD   R30,Z
00c7c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12B:
00c7c3 940e e05b 	CALL __PUTPARD1
00c7c5 81ac      	LDD  R26,Y+4
00c7c6 81bd      	LDD  R27,Y+4+1
00c7c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12C:
00c7c8 940e e02b 	CALL __GETD1P
00c7ca 940e e05b 	CALL __PUTPARD1
00c7cc c8eb      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12D:
00c7cd 940e e027 	CALL __GETW1P
00c7cf ce7a      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12E:
00c7d0 940e e05b 	CALL __PUTPARD1
00c7d2 81ec      	LDD  R30,Y+4
00c7d3 81fd      	LDD  R31,Y+4+1
00c7d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12F:
                +
00c7d5 81a6     +LDD R26 , Z + 6
00c7d6 81b7     +LDD R27 , Z + 6 + 1
00c7d7 8580     +LDD R24 , Z + 6 + 2
00c7d8 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00c7d9 940e e060 	CALL __PUTPARD2
00c7db c8dc      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x130:
                +
00c7dc 85a2     +LDD R26 , Z + 10
00c7dd 85b3     +LDD R27 , Z + 10 + 1
00c7de 8584     +LDD R24 , Z + 10 + 2
00c7df 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00c7e0 940e e060 	CALL __PUTPARD2
00c7e2 c8d5      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x131:
00c7e3 0fae      	ADD  R26,R30
00c7e4 1fbf      	ADC  R27,R31
00c7e5 91ec      	LD   R30,X
00c7e6 01d0      	MOVW R26,R0
00c7e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x132:
00c7e8 91ec      	LD   R30,X
00c7e9 01d0      	MOVW R26,R0
00c7ea 940e e0a3 	CALL __EEPROMWRB
00c7ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x133:
00c7ed e0e1      	LDI  R30,LOW(1)
00c7ee 940e e0a3 	CALL __EEPROMWRB
00c7f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x134:
00c7f1 940e e087 	CALL __EEPROMRDB
00c7f3 c962      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x135:
                +
00c7f4 e2e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00c7f5 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00c7f6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00c7f7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00c7f8 940e e05b 	CALL __PUTPARD1
00c7fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x136:
00c7fb 81a8      	LD   R26,Y
00c7fc 81b9      	LDD  R27,Y+1
00c7fd 940e e027 	CALL __GETW1P
00c7ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x137:
00c800 01d0      	MOVW R26,R0
00c801 940e e09b 	CALL __EEPROMWRW
00c803 cf09      	RJMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x138:
00c804 940e e027 	CALL __GETW1P
00c806 cff9      	RJMP SUBOPT_0x137
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x139:
00c807 940e e0a3 	CALL __EEPROMWRB
00c809 cf03      	RJMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13A:
00c80a 940e e02b 	CALL __GETD1P
00c80c 01d0      	MOVW R26,R0
00c80d 940e e093 	CALL __EEPROMWRD
00c80f cefd      	RJMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13B:
00c810 940e e02b 	CALL __GETD1P
00c812 01d0      	MOVW R26,R0
00c813 940e e093 	CALL __EEPROMWRD
00c815 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x13C:
00c816 940e e05b 	CALL __PUTPARD1
00c818 81ae      	LDD  R26,Y+6
00c819 81bf      	LDD  R27,Y+6+1
00c81a e1ed      	LDI  R30,LOW(29)
00c81b 940e df79 	CALL __MULB1W2U
00c81d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13D:
00c81e 01df      	MOVW R26,R30
00c81f 940e e083 	CALL __EEPROMRDW
00c821 c982      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x13E:
00c822 2766      	CLR  R22
00c823 2777      	CLR  R23
00c824 c8f6      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13F:
00c825 010f      	MOVW R0,R30
00c826 81a8      	LD   R26,Y
00c827 81b9      	LDD  R27,Y+1
00c828 9611      	ADIW R26,1
00c829 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x140:
00c82a 940e e027 	CALL __GETW1P
00c82c 01d0      	MOVW R26,R0
00c82d 940e e09b 	CALL __EEPROMWRW
00c82f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x141:
                +
00c830 e3e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00c831 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00c832 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00c833 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00c834 ceb0      	RJMP SUBOPT_0x104
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x142:
                +
00c835 e5e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00c836 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00c837 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00c838 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00c839 940e e05b 	CALL __PUTPARD1
00c83b 81ae      	LDD  R26,Y+6
00c83c 81bf      	LDD  R27,Y+6+1
00c83d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x143:
00c83e 940e e05b 	CALL __PUTPARD1
00c840 81ae      	LDD  R26,Y+6
00c841 81bf      	LDD  R27,Y+6+1
00c842 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x144:
00c843 940e e0a3 	CALL __EEPROMWRB
00c845 cf10      	RJMP SUBOPT_0x118
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x145:
00c846 940e e0a3 	CALL __EEPROMWRB
                +
00c848 eeea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00c849 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00c84a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00c84b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00c84c cf04      	RJMP SUBOPT_0x117
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x146:
                +
00c84d e4e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00c84e e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00c84f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00c850 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00c851 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x147:
                +
00c852 e6e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00c853 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00c854 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00c855 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00c856 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x148:
00c858 01df      	MOVW R26,R30
00c859 940e e07f 	CALL __EEPROMRDD
00c85b 940e e05b 	CALL __PUTPARD1
00c85d 940c c0b8 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x149:
00c85f 940e e05b 	CALL __PUTPARD1
00c861 85a8      	LDD  R26,Y+8
00c862 85b9      	LDD  R27,Y+8+1
00c863 e2e9      	LDI  R30,LOW(41)
00c864 940e df79 	CALL __MULB1W2U
00c866 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14A:
                +
00c867 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00c868 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00c869 0fe0      	ADD  R30,R16
00c86a 1ff1      	ADC  R31,R17
00c86b 01df      	MOVW R26,R30
00c86c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x14B:
00c86d 940e e07f 	CALL __EEPROMRDD
00c86f 940e e05b 	CALL __PUTPARD1
00c871 940c c0b8 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14C:
00c873 931a      	ST   -Y,R17
00c874 930a      	ST   -Y,R16
                +
00c875 e000     +LDI R16 , LOW ( 0 )
00c876 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c877 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14D:
00c878 0fa0      	ADD  R26,R16
00c879 1fb1      	ADC  R27,R17
00c87a e0e0      	LDI  R30,LOW(0)
00c87b 93ec      	ST   X,R30
00c87c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14E:
00c87d e0e0      	LDI  R30,LOW(0)
00c87e e0f0      	LDI  R31,HIGH(0)
00c87f 940e e0d9 	CALL __LOADLOCR4
00c881 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14F:
00c882 972a      	SBIW R28,10
00c883 940e e0d2 	CALL __SAVELOCR4
                +
00c885 e000     +LDI R16 , LOW ( 0 )
00c886 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c887 e020     +LDI R18 , LOW ( 0 )
00c888 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c889 01f8      	MOVW R30,R16
                +
00c88a 5f0f     +SUBI R16 , LOW ( - 1 )
00c88b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c88c 01de      	MOVW R26,R28
00c88d 9614      	ADIW R26,4
00c88e 0fae      	ADD  R26,R30
00c88f 1fbf      	ADC  R27,R31
00c890 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x150:
00c891 01f8      	MOVW R30,R16
                +
00c892 5f0f     +SUBI R16 , LOW ( - 1 )
00c893 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c894 01de      	MOVW R26,R28
00c895 9614      	ADIW R26,4
00c896 0fea      	ADD  R30,R26
00c897 1ffb      	ADC  R31,R27
00c898 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x151:
00c899 010f      	MOVW R0,R30
00c89a e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00c89b e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00c89c 0fa2      	ADD  R26,R18
00c89d 1fb3      	ADC  R27,R19
00c89e 940e e087 	CALL __EEPROMRDB
00c8a0 01d0      	MOVW R26,R0
00c8a1 93ec      	ST   X,R30
00c8a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x152:
00c8a3 01fe      	MOVW R30,R28
00c8a4 9634      	ADIW R30,4
00c8a5 93fa      	ST   -Y,R31
00c8a6 93ea      	ST   -Y,R30
00c8a7 931a      	ST   -Y,R17
00c8a8 930a      	ST   -Y,R16
00c8a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x153:
00c8aa 940e 5db9 	CALL _ETH_send
00c8ac cfd0      	RJMP SUBOPT_0x14E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x154:
00c8ad 940e e0d2 	CALL __SAVELOCR4
                +
00c8af e000     +LDI R16 , LOW ( 0 )
00c8b0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c8b1 e020     +LDI R18 , LOW ( 0 )
00c8b2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c8b3 01f8      	MOVW R30,R16
                +
00c8b4 5f0f     +SUBI R16 , LOW ( - 1 )
00c8b5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c8b6 01de      	MOVW R26,R28
00c8b7 9614      	ADIW R26,4
00c8b8 0fae      	ADD  R26,R30
00c8b9 1fbf      	ADC  R27,R31
00c8ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x155:
00c8bb 85e8      	LDD  R30,Y+8
00c8bc 85f9      	LDD  R31,Y+8+1
00c8bd 963f      	ADIW R30,15
00c8be 01af      	MOVW R20,R30
                +
00c8bf 3f4b     +CPI R20 , LOW ( 251 )
00c8c0 e0e0     +LDI R30 , HIGH ( 251 )
00c8c1 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00c8c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x156:
00c8c3 01da      	MOVW R26,R20
00c8c4 940e a51d 	CALL _malloc
00c8c6 83ee      	STD  Y+6,R30
00c8c7 83ff      	STD  Y+6+1,R31
00c8c8 9730      	SBIW R30,0
00c8c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x157:
00c8ca 01f8      	MOVW R30,R16
                +
00c8cb 5f0f     +SUBI R16 , LOW ( - 1 )
00c8cc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c8cd 81ae      	LDD  R26,Y+6
00c8ce 81bf      	LDD  R27,Y+6+1
00c8cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x158:
00c8d0 0fea      	ADD  R30,R26
00c8d1 1ffb      	ADC  R31,R27
00c8d2 cfc6      	RJMP SUBOPT_0x151
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x159:
00c8d3 01f8      	MOVW R30,R16
00c8d4 81ae      	LDD  R26,Y+6
00c8d5 81bf      	LDD  R27,Y+6+1
00c8d6 940c c107 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15A:
00c8d8 85ec      	LDD  R30,Y+12
00c8d9 85fd      	LDD  R31,Y+12+1
00c8da 93fa      	ST   -Y,R31
00c8db 93ea      	ST   -Y,R30
00c8dc 85ac      	LDD  R26,Y+12
00c8dd 85bd      	LDD  R27,Y+12+1
00c8de 940e a55a 	CALL _memcpy
00c8e0 85e8      	LDD  R30,Y+8
00c8e1 85f9      	LDD  R31,Y+8+1
                +
00c8e2 0f0e     +ADD R16 , R30
00c8e3 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00c8e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x15B:
00c8e5 81ee      	LDD  R30,Y+6
00c8e6 81ff      	LDD  R31,Y+6+1
00c8e7 93fa      	ST   -Y,R31
00c8e8 93ea      	ST   -Y,R30
00c8e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15C:
00c8ea 93ea      	ST   -Y,R30
00c8eb e0ac      	LDI  R26,LOW(12)
00c8ec e0b0      	LDI  R27,0
00c8ed 940c 5db9 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x15D:
00c8ef 81ae      	LDD  R26,Y+6
00c8f0 81bf      	LDD  R27,Y+6+1
00c8f1 940c a538 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15E:
00c8f3 01f8      	MOVW R30,R16
                +
00c8f4 5f0f     +SUBI R16 , LOW ( - 1 )
00c8f5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c8f6 01de      	MOVW R26,R28
00c8f7 9616      	ADIW R26,6
00c8f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15F:
                +
00c8f9 a1e9     +LDD R30 , Y + 33
00c8fa a1fa     +LDD R31 , Y + 33 + 1
00c8fb a16b     +LDD R22 , Y + 33 + 2
00c8fc a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00c8fd 940e e05b 	CALL __PUTPARD1
00c8ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x160:
00c900 e180      	LDI  R24,16
00c901 940e 9e24 	CALL _printDebug
00c903 9664      	ADIW R28,20
00c904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x161:
00c905 85ef      	LDD  R30,Y+15
00c906 93ea      	ST   -Y,R30
00c907 85ef      	LDD  R30,Y+15
00c908 93ea      	ST   -Y,R30
00c909 85ef      	LDD  R30,Y+15
00c90a 93ea      	ST   -Y,R30
00c90b e0a1      	LDI  R26,LOW(1)
00c90c 940e 54e3 	CALL _ETH_sendConfigManageNack
00c90e efef      	LDI  R30,LOW(65535)
00c90f efff      	LDI  R31,HIGH(65535)
00c910 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x162:
00c911 940e 9ea8 	CALL _print_payload
00c913 cfd1      	RJMP SUBOPT_0x15B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x163:
00c914 01f8      	MOVW R30,R16
                +
00c915 5f0f     +SUBI R16 , LOW ( - 1 )
00c916 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c917 01de      	MOVW R26,R28
00c918 9617      	ADIW R26,7
00c919 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x164:
00c91a 93aa      	ST   -Y,R26
00c91b 972b      	SBIW R28,11
00c91c cf90      	RJMP SUBOPT_0x154
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x165:
00c91d 89a8      	LDD  R26,Y+16
00c91e 83a0      	STD  Z+0,R26
00c91f cf71      	RJMP SUBOPT_0x150
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x166:
00c920 01de      	MOVW R26,R28
00c921 9614      	ADIW R26,4
00c922 0fae      	ADD  R26,R30
00c923 1fbf      	ADC  R27,R31
00c924 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x167:
                +
00c925 01fe     +MOVW R30 , R28
00c926 5de2     +SUBI R30 , LOW ( - 558 )
00c927 4ffd     +SBCI R31 , HIGH ( - 558 )
00c928 81e0     +LD R30 , Z
                 	__GETB1SX 558
00c929 93ea      	ST   -Y,R30
00c92a c9d8      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x168:
00c92b 01fe      	MOVW R30,R28
00c92c 963e      	ADIW R30,14
00c92d 93fa      	ST   -Y,R31
00c92e 93ea      	ST   -Y,R30
00c92f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x169:
00c930 dcad      	RCALL SUBOPT_0xD9
00c931 940e e05b 	CALL __PUTPARD1
00c933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16A:
                +
00c934 e9e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00c935 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00c936 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00c937 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00c938 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16B:
00c93a 01de      	MOVW R26,R28
00c93b 961e      	ADIW R26,14
                +
00c93c 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c93e 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c940 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c942 bf6c     +OUT EIND , R22
00c943 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c944 018f      	MOVW R16,R30
00c945 2311      	TST  R17
00c946 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16C:
                +
00c947 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00c948 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00c949 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00c94a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00c94b 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x16D:
                +
00c94d e0ab     +LDI R26 , 11
00c94e 9fa0     +MUL R26 , R16
00c94f 01f0     +MOVW R30 , R0
00c950 9fa1     +MUL R26 , R17
00c951 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00c952 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16E:
00c953 940e e05b 	CALL __PUTPARD1
00c955 91e0 1421 	LDS  R30,_commLostTimer
00c957 91f0 1422 	LDS  R31,_commLostTimer+1
00c959 9160 1423 	LDS  R22,_commLostTimer+2
00c95b 9170 1424 	LDS  R23,_commLostTimer+3
00c95d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16F:
00c95e 91a0 1421 	LDS  R26,_commLostTimer
00c960 91b0 1422 	LDS  R27,_commLostTimer+1
00c962 9180 1423 	LDS  R24,_commLostTimer+2
00c964 9190 1424 	LDS  R25,_commLostTimer+3
00c966 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x170:
00c967 93fa      	ST   -Y,R31
00c968 93ea      	ST   -Y,R30
                +
00c969 e1ae     +LDI R26 , LOW ( 0x1E )
00c96a e0b0     +LDI R27 , HIGH ( 0x1E )
00c96b e080     +LDI R24 , BYTE3 ( 0x1E )
00c96c e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00c96d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x171:
00c96e 940e e05b 	CALL __PUTPARD1
00c970 da6b      	RCALL SUBOPT_0x88
00c971 91e0 1421 	LDS  R30,_commLostTimer
00c973 91f0 1422 	LDS  R31,_commLostTimer+1
00c975 9160 1423 	LDS  R22,_commLostTimer+2
00c977 9170 1424 	LDS  R23,_commLostTimer+3
00c979 940e debd 	CALL __SUBD12
00c97b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x172:
                +
00c97c 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00c97d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00c97e 93fa      	ST   -Y,R31
00c97f 93ea      	ST   -Y,R30
00c980 cfcc      	RJMP SUBOPT_0x16D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x173:
                +
00c981 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00c982 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00c983 01df      	MOVW R26,R30
00c984 940e e027 	CALL __GETW1P
00c986 940e df38 	CALL __CWD1
00c988 940c c111 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x174:
                +
00c98a 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00c98b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00c98c 01df      	MOVW R26,R30
00c98d 940e e027 	CALL __GETW1P
00c98f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x175:
                +
00c990 01de     +MOVW R26 , R28
00c991 5da2     +SUBI R26 , LOW ( - 558 )
00c992 4fbd     +SBCI R27 , HIGH ( - 558 )
00c993 900d     +LD R0 , X +
00c994 91bc     +LD R27 , X
00c995 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00c996 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x176:
                +
00c997 01de     +MOVW R26 , R28
00c998 5da4     +SUBI R26 , LOW ( - 556 )
00c999 4fbd     +SBCI R27 , HIGH ( - 556 )
00c99a 900d     +LD R0 , X +
00c99b 91bc     +LD R27 , X
00c99c 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00c99d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x177:
00c99e 940e e05b 	CALL __PUTPARD1
                +
00c9a0 01fe     +MOVW R30 , R28
00c9a1 5de0     +SUBI R30 , LOW ( - 560 )
00c9a2 4ffd     +SBCI R31 , HIGH ( - 560 )
00c9a3 9001     +LD R0 , Z +
00c9a4 81f0     +LD R31 , Z
00c9a5 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00c9a6 cca3      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x178:
00c9a7 930a      	ST   -Y,R16
00c9a8 e1a0      	LDI  R26,LOW(16)
00c9a9 940c 53b0 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x179:
00c9ab 940e a51d 	CALL _malloc
00c9ad 01af      	MOVW R20,R30
00c9ae 2e04      	MOV  R0,R20
00c9af 2a05      	OR   R0,R21
00c9b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17A:
00c9b1 930a      	ST   -Y,R16
00c9b2 e5a0      	LDI  R26,LOW(80)
00c9b3 940c 53b0 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x17B:
                +
00c9b5 01fe     +MOVW R30 , R28
00c9b6 5de2     +SUBI R30 , LOW ( - 558 )
00c9b7 4ffd     +SBCI R31 , HIGH ( - 558 )
00c9b8 9001     +LD R0 , Z +
00c9b9 81f0     +LD R31 , Z
00c9ba 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00c9bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17C:
00c9bc 9632      	ADIW R30,2
00c9bd 93fa      	ST   -Y,R31
00c9be 93ea      	ST   -Y,R30
00c9bf dff5      	RCALL SUBOPT_0x17B
00c9c0 9732      	SBIW R30,2
00c9c1 93fa      	ST   -Y,R31
00c9c2 93ea      	ST   -Y,R30
00c9c3 01da      	MOVW R26,R20
00c9c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17D:
00c9c5 01da      	MOVW R26,R20
00c9c6 940e a538 	CALL _free
00c9c8 930a      	ST   -Y,R16
00c9c9 e3a0      	LDI  R26,LOW(48)
00c9ca 940c 53b0 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x17E:
00c9cc 940e e05b 	CALL __PUTPARD1
00c9ce 2fe0      	MOV  R30,R16
00c9cf 940c c156 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x17F:
00c9d1 940e e05b 	CALL __PUTPARD1
00c9d3 01fa      	MOVW R30,R20
00c9d4 85e0      	LDD  R30,Z+8
00c9d5 940c c156 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x180:
00c9d7 940e e05b 	CALL __PUTPARD1
00c9d9 01da      	MOVW R26,R20
00c9da 9619      	ADIW R26,9
00c9db 940c c10c 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x181:
00c9dd 940e e027 	CALL __GETW1P
00c9df 81ae      	LDD  R26,Y+6
00c9e0 81bf      	LDD  R27,Y+6+1
00c9e1 17ae      	CP   R26,R30
00c9e2 07bf      	CPC  R27,R31
00c9e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x182:
00c9e4 0fae      	ADD  R26,R30
00c9e5 1fbf      	ADC  R27,R31
00c9e6 91ec      	LD   R30,X
00c9e7 940c c156 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x183:
00c9e9 930a      	ST   -Y,R16
00c9ea 01fa      	MOVW R30,R20
00c9eb 85a0      	LDD  R26,Z+8
00c9ec 93aa      	ST   -Y,R26
00c9ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x184:
00c9ee dbd4      	RCALL SUBOPT_0xD3
00c9ef 01df      	MOVW R26,R30
00c9f0 01cb      	MOVW R24,R22
00c9f1 940e 84ed 	CALL _LOG_setLastSend
00c9f3 019f      	MOVW R18,R30
00c9f4 2333      	TST  R19
00c9f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x185:
                +
00c9f6 e3e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00c9f7 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00c9f8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00c9f9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00c9fa 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x186:
00c9fc 01de      	MOVW R26,R28
00c9fd 961c      	ADIW R26,12
                +
00c9fe 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00ca00 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00ca02 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00ca04 bf6c     +OUT EIND , R22
00ca05 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00ca06 019f      	MOVW R18,R30
00ca07 2333      	TST  R19
00ca08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x187:
00ca09 e0b0      	LDI  R27,0
00ca0a cfa0      	RJMP SUBOPT_0x179
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x188:
                +
00ca0b e1e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00ca0c e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00ca0d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00ca0e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00ca0f 940e e05b 	CALL __PUTPARD1
00ca11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:83 WORDS
                 SUBOPT_0x189:
00ca12 940e e05b 	CALL __PUTPARD1
00ca14 940c c0b8 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18A:
00ca16 df9e      	RCALL SUBOPT_0x17B
00ca17 cfa4      	RJMP SUBOPT_0x17C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18B:
                +
00ca18 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00ca19 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00ca1a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00ca1b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00ca1c cfb4      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18C:
00ca1d 940e e05b 	CALL __PUTPARD1
00ca1f 01fa      	MOVW R30,R20
00ca20 85e1      	LDD  R30,Z+9
00ca21 940c c156 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18D:
00ca23 01fa      	MOVW R30,R20
00ca24 85e0      	LDD  R30,Z+8
00ca25 940c c230 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18E:
00ca27 01fa      	MOVW R30,R20
00ca28 85a1      	LDD  R26,Z+9
00ca29 93aa      	ST   -Y,R26
00ca2a e0a1      	LDI  R26,LOW(1)
00ca2b 940c 54e3 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18F:
00ca2d 01fa      	MOVW R30,R20
00ca2e 85a1      	LDD  R26,Z+9
00ca2f 93aa      	ST   -Y,R26
00ca30 e0e0      	LDI  R30,LOW(0)
00ca31 93ea      	ST   -Y,R30
00ca32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x190:
00ca33 940e 5512 	CALL _ETH_sendConfigManageAck
00ca35 019f      	MOVW R18,R30
00ca36 2333      	TST  R19
00ca37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x191:
00ca38 87e8      	STD  Y+8,R30
00ca39 87f9      	STD  Y+8+1,R31
00ca3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x192:
00ca3b 85e8      	LDD  R30,Y+8
00ca3c 85f9      	LDD  R31,Y+8+1
00ca3d 93fa      	ST   -Y,R31
00ca3e 93ea      	ST   -Y,R30
00ca3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x193:
00ca40 85e9      	LDD  R30,Y+9
00ca41 85fa      	LDD  R31,Y+9+1
00ca42 93fa      	ST   -Y,R31
00ca43 93ea      	ST   -Y,R30
00ca44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x194:
00ca45 e0e0      	LDI  R30,LOW(0)
00ca46 e0f0      	LDI  R31,HIGH(0)
00ca47 93fa      	ST   -Y,R31
00ca48 93ea      	ST   -Y,R30
00ca49 cc40      	RJMP SUBOPT_0xF5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x195:
                +
00ca4a eeef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00ca4b e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00ca4c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00ca4d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00ca4e 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x196:
                +
00ca50 e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00ca51 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00ca52 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00ca53 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00ca54 cf7c      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x197:
                +
00ca55 e6e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00ca56 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00ca57 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00ca58 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00ca59 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x198:
00ca5b 940e e05b 	CALL __PUTPARD1
00ca5d 01fa      	MOVW R30,R20
                +
00ca5e 85a1     +LDD R26 , Z + 9
00ca5f 85b2     +LDD R27 , Z + 9 + 1
00ca60 8583     +LDD R24 , Z + 9 + 2
00ca61 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00ca62 940e e060 	CALL __PUTPARD2
00ca64 940c c0b8 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x199:
00ca66 940e e060 	CALL __PUTPARD2
00ca68 940c c0b8 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19A:
                +
00ca6a 85a1     +LDD R26 , Z + 9
00ca6b 85b2     +LDD R27 , Z + 9 + 1
00ca6c 8583     +LDD R24 , Z + 9 + 2
00ca6d 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00ca6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19B:
                +
00ca6f e0ea     +LDI R30 , LOW ( 0xA )
00ca70 e0f0     +LDI R31 , HIGH ( 0xA )
00ca71 e060     +LDI R22 , BYTE3 ( 0xA )
00ca72 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00ca73 cf9e      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19C:
00ca74 df40      	RCALL SUBOPT_0x17B
00ca75 9632      	ADIW R30,2
00ca76 93fa      	ST   -Y,R31
00ca77 93ea      	ST   -Y,R30
00ca78 01da      	MOVW R26,R20
00ca79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19D:
                +
00ca7a e0ed     +LDI R30 , LOW ( 0xD )
00ca7b e0f0     +LDI R31 , HIGH ( 0xD )
00ca7c e060     +LDI R22 , BYTE3 ( 0xD )
00ca7d e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00ca7e cf93      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19E:
                +
00ca7f e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00ca80 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00ca81 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00ca82 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00ca83 cf4d      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19F:
00ca84 85a1      	LDD  R26,Z+9
00ca85 85b2      	LDD  R27,Z+10
00ca86 940e e0b8 	CALL __CPW02
00ca88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A0:
00ca89 930a      	ST   -Y,R16
00ca8a e3a0      	LDI  R26,LOW(48)
00ca8b 940c 53b0 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A1:
00ca8d 85e0      	LDD  R30,Z+8
00ca8e e0f0      	LDI  R31,0
00ca8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1A2:
00ca90 9724      	SBIW R28,4
00ca91 e0e0      	LDI  R30,LOW(0)
00ca92 83e8      	ST   Y,R30
00ca93 83e9      	STD  Y+1,R30
00ca94 83ea      	STD  Y+2,R30
00ca95 83eb      	STD  Y+3,R30
00ca96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A3:
00ca97 0fe0      	ADD  R30,R16
00ca98 1ff1      	ADC  R31,R17
00ca99 93fa      	ST   -Y,R31
00ca9a 93ea      	ST   -Y,R30
00ca9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A4:
00ca9c 81ae      	LDD  R26,Y+6
00ca9d 81bf      	LDD  R27,Y+6+1
00ca9e 0fea      	ADD  R30,R26
00ca9f 1ffb      	ADC  R31,R27
00caa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A5:
00caa1 01d0      	MOVW R26,R0
00caa2 e0f0      	LDI  R31,0
00caa3 17ea      	CP   R30,R26
00caa4 07fb      	CPC  R31,R27
00caa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A6:
00caa6 93ba      	ST   -Y,R27
00caa7 93aa      	ST   -Y,R26
00caa8 940e e0d0 	CALL __SAVELOCR6
00caaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1A7:
00caab 81ae      	LDD  R26,Y+6
00caac 81bf      	LDD  R27,Y+6+1
00caad 0fae      	ADD  R26,R30
00caae 1fbf      	ADC  R27,R31
00caaf 91ec      	LD   R30,X
00cab0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A8:
00cab1 eaa9      	LDI  R26,LOW(_configRd)
00cab2 e0bf      	LDI  R27,HIGH(_configRd)
00cab3 cdc4      	RJMP SUBOPT_0x14D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A9:
00cab4 e0e0      	LDI  R30,LOW(0)
00cab5 93e0 10f0 	STS  _config_start,R30
00cab7 93e0 10f1 	STS  _config_ready,R30
00cab9 93e0 10f2 	STS  _config_end,R30
00cabb 93e0 10f3 	STS  _config_response,R30
00cabd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AA:
00cabe 01de      	MOVW R26,R28
00cabf 9612      	ADIW R26,2
00cac0 940e a5e6 	CALL _strlen
00cac2 170e      	CP   R16,R30
00cac3 071f      	CPC  R17,R31
00cac4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AB:
                +
00cac5 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00cac6 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00cac7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00cac8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00cac9 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AC:
                +
00cacb e0a7     +LDI R26 , LOW ( 0x7 )
00cacc e0b0     +LDI R27 , HIGH ( 0x7 )
00cacd e080     +LDI R24 , BYTE3 ( 0x7 )
00cace e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00cacf 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1AD:
00cad1 85ec      	LDD  R30,Y+12
00cad2 85fd      	LDD  R31,Y+12+1
00cad3 93fa      	ST   -Y,R31
00cad4 93ea      	ST   -Y,R30
00cad5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1AE:
00cad6 eae9      	LDI  R30,LOW(_configRd)
00cad7 e0ff      	LDI  R31,HIGH(_configRd)
00cad8 93fa      	ST   -Y,R31
00cad9 93ea      	ST   -Y,R30
00cada d8c1      	RCALL SUBOPT_0x7D
00cadb 940c a55a 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AF:
00cadd 01de      	MOVW R26,R28
00cade 9697      	ADIW R26,39
00cadf 940e a5e6 	CALL _strlen
00cae1 170e      	CP   R16,R30
00cae2 071f      	CPC  R17,R31
00cae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B0:
                +
00cae4 a5ab     +LDD R26 , Y + 43
00cae5 a5bc     +LDD R27 , Y + 43 + 1
00cae6 a58d     +LDD R24 , Y + 43 + 2
00cae7 a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00cae8 940e 41a1 	CALL _TIMER_checkTimerExceed
00caea 9730      	SBIW R30,0
00caeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B1:
00caec 91ec      	LD   R30,X
00caed e6a4      	LDI  R26,LOW(100)
00caee 9fea      	MUL  R30,R26
00caef 01b0      	MOVW R22,R0
00caf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B2:
00caf1 81e1      	LDD  R30,Z+1
00caf2 e0aa      	LDI  R26,LOW(10)
00caf3 9fea      	MUL  R30,R26
00caf4 01f0      	MOVW R30,R0
00caf5 01db      	MOVW R26,R22
00caf6 0fae      	ADD  R26,R30
00caf7 1fbf      	ADC  R27,R31
00caf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B3:
00caf9 81e2      	LDD  R30,Z+2
00cafa e0f0      	LDI  R31,0
00cafb 0fea      	ADD  R30,R26
00cafc 1ffb      	ADC  R31,R27
00cafd 940e df38 	CALL __CWD1
00caff 940e e05b 	CALL __PUTPARD1
00cb01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B4:
                +
00cb02 01fe     +MOVW R30 , R28
00cb03 5ce1     +SUBI R30 , LOW ( - 63 )
00cb04 4fff     +SBCI R31 , HIGH ( - 63 )
00cb05 9001     +LD R0 , Z +
00cb06 81f0     +LD R31 , Z
00cb07 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00cb08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B5:
00cb09 81e3      	LDD  R30,Z+3
00cb0a e6a4      	LDI  R26,LOW(100)
00cb0b 9fea      	MUL  R30,R26
00cb0c 01b0      	MOVW R22,R0
00cb0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B6:
00cb0e 81e4      	LDD  R30,Z+4
00cb0f e0aa      	LDI  R26,LOW(10)
00cb10 9fea      	MUL  R30,R26
00cb11 01f0      	MOVW R30,R0
00cb12 01db      	MOVW R26,R22
00cb13 0fae      	ADD  R26,R30
00cb14 1fbf      	ADC  R27,R31
00cb15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B7:
00cb16 81e5      	LDD  R30,Z+5
00cb17 e0f0      	LDI  R31,0
00cb18 0fea      	ADD  R30,R26
00cb19 1ffb      	ADC  R31,R27
00cb1a 940e df38 	CALL __CWD1
00cb1c 940e e05b 	CALL __PUTPARD1
00cb1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B8:
                +
00cb1f 01fe     +MOVW R30 , R28
00cb20 5bed     +SUBI R30 , LOW ( - 67 )
00cb21 4fff     +SBCI R31 , HIGH ( - 67 )
00cb22 9001     +LD R0 , Z +
00cb23 81f0     +LD R31 , Z
00cb24 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00cb25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B9:
00cb26 81e6      	LDD  R30,Z+6
00cb27 e6a4      	LDI  R26,LOW(100)
00cb28 9fea      	MUL  R30,R26
00cb29 01b0      	MOVW R22,R0
00cb2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BA:
00cb2b 81e7      	LDD  R30,Z+7
00cb2c e0aa      	LDI  R26,LOW(10)
00cb2d 9fea      	MUL  R30,R26
00cb2e 01f0      	MOVW R30,R0
00cb2f 01db      	MOVW R26,R22
00cb30 0fae      	ADD  R26,R30
00cb31 1fbf      	ADC  R27,R31
00cb32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1BB:
00cb33 0fea      	ADD  R30,R26
00cb34 1ffb      	ADC  R31,R27
00cb35 940e df38 	CALL __CWD1
00cb37 940e e05b 	CALL __PUTPARD1
00cb39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BC:
                +
00cb3a 01fe     +MOVW R30 , R28
00cb3b 5be9     +SUBI R30 , LOW ( - 71 )
00cb3c 4fff     +SBCI R31 , HIGH ( - 71 )
00cb3d 9001     +LD R0 , Z +
00cb3e 81f0     +LD R31 , Z
00cb3f 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00cb40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BD:
00cb41 85e1      	LDD  R30,Z+9
00cb42 e6a4      	LDI  R26,LOW(100)
00cb43 9fea      	MUL  R30,R26
00cb44 01b0      	MOVW R22,R0
00cb45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BE:
00cb46 85e2      	LDD  R30,Z+10
00cb47 e0aa      	LDI  R26,LOW(10)
00cb48 9fea      	MUL  R30,R26
00cb49 01f0      	MOVW R30,R0
00cb4a 01db      	MOVW R26,R22
00cb4b 0fae      	ADD  R26,R30
00cb4c 1fbf      	ADC  R27,R31
00cb4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1BF:
00cb4e 85e3      	LDD  R30,Z+11
00cb4f e0f0      	LDI  R31,0
00cb50 cfe2      	RJMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C0:
                +
00cb51 01fe     +MOVW R30 , R28
00cb52 5be7     +SUBI R30 , LOW ( - 73 )
00cb53 4fff     +SBCI R31 , HIGH ( - 73 )
00cb54 9001     +LD R0 , Z +
00cb55 81f0     +LD R31 , Z
00cb56 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00cb57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C1:
                +
00cb58 01fe     +MOVW R30 , R28
00cb59 5be3     +SUBI R30 , LOW ( - 77 )
00cb5a 4fff     +SBCI R31 , HIGH ( - 77 )
00cb5b 9001     +LD R0 , Z +
00cb5c 81f0     +LD R31 , Z
00cb5d 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00cb5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C2:
                +
00cb5f 01fe     +MOVW R30 , R28
00cb60 5aef     +SUBI R30 , LOW ( - 81 )
00cb61 4fff     +SBCI R31 , HIGH ( - 81 )
00cb62 9001     +LD R0 , Z +
00cb63 81f0     +LD R31 , Z
00cb64 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00cb65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C3:
                +
00cb66 01fe     +MOVW R30 , R28
00cb67 5aeb     +SUBI R30 , LOW ( - 85 )
00cb68 4fff     +SBCI R31 , HIGH ( - 85 )
00cb69 9001     +LD R0 , Z +
00cb6a 81f0     +LD R31 , Z
00cb6b 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00cb6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C4:
                +
00cb6d 01fe     +MOVW R30 , R28
00cb6e 5ae9     +SUBI R30 , LOW ( - 87 )
00cb6f 4fff     +SBCI R31 , HIGH ( - 87 )
00cb70 9001     +LD R0 , Z +
00cb71 81f0     +LD R31 , Z
00cb72 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00cb73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C5:
                +
00cb74 01fe     +MOVW R30 , R28
00cb75 5ae5     +SUBI R30 , LOW ( - 91 )
00cb76 4fff     +SBCI R31 , HIGH ( - 91 )
00cb77 9001     +LD R0 , Z +
00cb78 81f0     +LD R31 , Z
00cb79 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00cb7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C6:
                +
00cb7b 01fe     +MOVW R30 , R28
00cb7c 5ae1     +SUBI R30 , LOW ( - 95 )
00cb7d 4fff     +SBCI R31 , HIGH ( - 95 )
00cb7e 9001     +LD R0 , Z +
00cb7f 81f0     +LD R31 , Z
00cb80 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00cb81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C7:
                +
00cb82 01fe     +MOVW R30 , R28
00cb83 59ed     +SUBI R30 , LOW ( - 99 )
00cb84 4fff     +SBCI R31 , HIGH ( - 99 )
00cb85 9001     +LD R0 , Z +
00cb86 81f0     +LD R31 , Z
00cb87 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00cb88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C8:
                +
00cb89 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5360 ) )
00cb8a e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5360 ) )
00cb8b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5360 ) )
00cb8c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5360 ) )
                 	__POINTD1FN _0x120000,5360
00cb8d 940e e05b 	CALL __PUTPARD1
00cb8f 01fe      	MOVW R30,R28
00cb90 963a      	ADIW R30,10
00cb91 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C9:
00cb93 93fa      	ST   -Y,R31
00cb94 93ea      	ST   -Y,R30
00cb95 01fe      	MOVW R30,R28
00cb96 9638      	ADIW R30,8
00cb97 93fa      	ST   -Y,R31
00cb98 93ea      	ST   -Y,R30
00cb99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1CA:
00cb9a e0b0      	LDI  R27,0
00cb9b 940c a55a 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CB:
                +
00cb9d 01fe     +MOVW R30 , R28
00cb9e 5bef     +SUBI R30 , LOW ( - 65 )
00cb9f 4fff     +SBCI R31 , HIGH ( - 65 )
00cba0 9001     +LD R0 , Z +
00cba1 81f0     +LD R31 , Z
00cba2 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00cba3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CC:
                +
00cba4 e020     +LDI R18 , LOW ( 0 )
00cba5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00cba6 e000     +LDI R16 , LOW ( 0 )
00cba7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00cba8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1CD:
00cba9 01f9      	MOVW R30,R18
                +
00cbaa 5f2f     +SUBI R18 , LOW ( - 1 )
00cbab 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cbac 85a8      	LDD  R26,Y+8
00cbad 85b9      	LDD  R27,Y+8+1
00cbae 0fae      	ADD  R26,R30
00cbaf 1fbf      	ADC  R27,R31
00cbb0 91ec      	LD   R30,X
00cbb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CE:
                +
00cbb2 81ac     +LDD R26 , Y + 4
00cbb3 81bd     +LDD R27 , Y + 4 + 1
00cbb4 9618     +ADIW R26 , 8
00cbb5 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cbb6 cff2      	RJMP SUBOPT_0x1CD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1CF:
                +
00cbb7 81ac     +LDD R26 , Y + 4
00cbb8 81bd     +LDD R27 , Y + 4 + 1
00cbb9 9619     +ADIW R26 , 9
00cbba 93ed     +ST X + , R30
00cbbb 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00cbbc 81ec      	LDD  R30,Y+4
00cbbd 81fd      	LDD  R31,Y+4+1
00cbbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D0:
00cbbf e0e1      	LDI  R30,LOW(1)
00cbc0 e0f0      	LDI  R31,HIGH(1)
00cbc1 940e df51 	CALL __MULW12U
00cbc3 01df      	MOVW R26,R30
00cbc4 940c a51d 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D1:
00cbc6 940e e027 	CALL __GETW1P
00cbc8 170e      	CP   R16,R30
00cbc9 071f      	CPC  R17,R31
00cbca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D2:
00cbcb 01f8      	MOVW R30,R16
00cbcc 0fea      	ADD  R30,R26
00cbcd 1ffb      	ADC  R31,R27
00cbce 010f      	MOVW R0,R30
00cbcf 01f9      	MOVW R30,R18
00cbd0 0fe0      	ADD  R30,R16
00cbd1 1ff1      	ADC  R31,R17
00cbd2 85a8      	LDD  R26,Y+8
00cbd3 85b9      	LDD  R27,Y+8+1
00cbd4 cc0e      	RJMP SUBOPT_0x131
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D3:
                +
00cbd5 81ac     +LDD R26 , Y + 4
00cbd6 81bd     +LDD R27 , Y + 4 + 1
00cbd7 9618     +ADIW R26 , 8
00cbd8 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cbd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1D4:
00cbda e0f0      	LDI  R31,0
00cbdb 940e df38 	CALL __CWD1
                +
00cbdd 7fef     +ANDI R30 , LOW ( 0xFF )
00cbde 70f0     +ANDI R31 , HIGH ( 0xFF )
00cbdf 7060     +ANDI R22 , BYTE3 ( 0xFF )
00cbe0 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00cbe1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D5:
00cbe2 01df      	MOVW R26,R30
00cbe3 01cb      	MOVW R24,R22
00cbe4 e1e8      	LDI  R30,LOW(24)
00cbe5 940e dee6 	CALL __LSLD12
00cbe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D6:
00cbe8 01df      	MOVW R26,R30
00cbe9 01cb      	MOVW R24,R22
00cbea e0e8      	LDI  R30,LOW(8)
00cbeb 940e dee6 	CALL __LSLD12
00cbed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D7:
00cbee 940e decc 	CALL __ORD12
                +
00cbf0 81ac     +LDD R26 , Y + 4
00cbf1 81bd     +LDD R27 , Y + 4 + 1
00cbf2 9619     +ADIW R26 , 9
00cbf3 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00cbf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D8:
00cbf6 01f9      	MOVW R30,R18
                +
00cbf7 5f2f     +SUBI R18 , LOW ( - 1 )
00cbf8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cbf9 ceb1      	RJMP SUBOPT_0x1A7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D9:
00cbfa 940e e05b 	CALL __PUTPARD1
00cbfc 85e8      	LDD  R30,Y+8
00cbfd 85f9      	LDD  R31,Y+8+1
00cbfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DA:
00cbff 93ba      	ST   -Y,R27
00cc00 93aa      	ST   -Y,R26
00cc01 ce8e      	RJMP SUBOPT_0x1A2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1DB:
00cc02 940e a51d 	CALL _malloc
00cc04 83ee      	STD  Y+6,R30
00cc05 83ff      	STD  Y+6+1,R31
00cc06 9730      	SBIW R30,0
00cc07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1DC:
                +
00cc08 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00cc09 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00cc0a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00cc0b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00cc0c cba7      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1DD:
00cc0d 85ea      	LDD  R30,Y+10
00cc0e 85fb      	LDD  R31,Y+10+1
00cc0f 93fa      	ST   -Y,R31
00cc10 93ea      	ST   -Y,R30
00cc11 ce29      	RJMP SUBOPT_0x192
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DE:
00cc12 940e a55a 	CALL _memcpy
00cc14 ccda      	RJMP SUBOPT_0x15D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DF:
00cc15 e0a8      	LDI  R26,LOW(8)
00cc16 e0b0      	LDI  R27,0
00cc17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E0:
                +
00cc18 e6ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00cc19 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00cc1a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00cc1b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00cc1c cb97      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E1:
                +
00cc1d e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00cc1e e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00cc1f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00cc20 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00cc21 cb92      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E2:
                +
00cc22 e2e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00cc23 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00cc24 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00cc25 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00cc26 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E3:
00cc28 85ec      	LDD  R30,Y+12
00cc29 e0f0      	LDI  R31,0
00cc2a 70ef      	ANDI R30,LOW(0xF)
00cc2b 70f0      	ANDI R31,HIGH(0xF)
00cc2c 87e8      	STD  Y+8,R30
00cc2d 87f9      	STD  Y+8+1,R31
00cc2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E4:
00cc2f e0b0      	LDI  R27,0
00cc30 cfd1      	RJMP SUBOPT_0x1DB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E5:
00cc31 940e e05b 	CALL __PUTPARD1
00cc33 85ec      	LDD  R30,Y+12
00cc34 85fd      	LDD  R31,Y+12+1
00cc35 ca14      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E6:
00cc36 940e e05b 	CALL __PUTPARD1
                +
00cc38 e0e3     +LDI R30 , LOW ( 0x3 )
00cc39 e0f0     +LDI R31 , HIGH ( 0x3 )
00cc3a e060     +LDI R22 , BYTE3 ( 0x3 )
00cc3b e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00cc3c cdd5      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E7:
                +
00cc3d ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00cc3e e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00cc3f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00cc40 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00cc41 cb6d      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E8:
                +
00cc42 e6e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00cc43 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00cc44 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00cc45 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00cc46 cb68      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E9:
                +
00cc47 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00cc48 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00cc49 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00cc4a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00cc4b cb68      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EA:
                +
00cc4c ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00cc4d e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00cc4e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00cc4f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00cc50 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EB:
00cc52 e2e2      	LDI  R30,LOW(34)
00cc53 e0f0      	LDI  R31,HIGH(34)
00cc54 17e0      	CP   R30,R16
00cc55 07f1      	CPC  R31,R17
00cc56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EC:
                +
00cc57 81a1     +LDD R26 , Z + 1
00cc58 81b2     +LDD R27 , Z + 1 + 1
00cc59 8183     +LDD R24 , Z + 1 + 2
00cc5a 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00cc5b ce0a      	RJMP SUBOPT_0x199
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1ED:
                +
00cc5c e4ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00cc5d e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00cc5e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00cc5f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00cc60 940e e05b 	CALL __PUTPARD1
00cc62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1EE:
00cc63 85ea      	LDD  R30,Y+10
00cc64 e0f0      	LDI  R31,0
00cc65 70ef      	ANDI R30,LOW(0xF)
00cc66 70f0      	ANDI R31,HIGH(0xF)
00cc67 01af      	MOVW R20,R30
00cc68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EF:
00cc69 935a      	ST   -Y,R21
00cc6a 934a      	ST   -Y,R20
00cc6b 85aa      	LDD  R26,Y+10
00cc6c 85bb      	LDD  R27,Y+10+1
00cc6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F0:
00cc6e 940e e05b 	CALL __PUTPARD1
00cc70 940c c25f 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F1:
00cc72 01fe      	MOVW R30,R28
00cc73 9632      	ADIW R30,2
00cc74 93fa      	ST   -Y,R31
00cc75 93ea      	ST   -Y,R30
00cc76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F2:
00cc77 d87e      	RCALL SUBOPT_0xB3
00cc78 940e e0b4 	CALL __CPD10
00cc7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F3:
00cc7b 940e e05b 	CALL __PUTPARD1
00cc7d d882      	RCALL SUBOPT_0xB5
00cc7e cd93      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F4:
00cc7f 940e e060 	CALL __PUTPARD2
00cc81 931a      	ST   -Y,R17
00cc82 930a      	ST   -Y,R16
00cc83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F5:
00cc84 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00cc85 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00cc86 e0a0      	LDI  R26,LOW(0)
00cc87 83a0      	STD  Z+0,R26
00cc88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F6:
00cc89 940e e05b 	CALL __PUTPARD1
00cc8b 85ec      	LDD  R30,Y+12
00cc8c 940c c2f3 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F7:
00cc8e e0ab      	LDI  R26,LOW(11)
00cc8f 9f1a      	MUL  R17,R26
00cc90 01f0      	MOVW R30,R0
                +
00cc91 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00cc92 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00cc93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1F8:
00cc94 01df      	MOVW R26,R30
00cc95 940e a538 	CALL _free
00cc97 e0ab      	LDI  R26,LOW(11)
00cc98 9f1a      	MUL  R17,R26
00cc99 01f0      	MOVW R30,R0
                +
00cc9a 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00cc9b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00cc9c e0a0      	LDI  R26,LOW(0)
00cc9d e0b0      	LDI  R27,HIGH(0)
00cc9e 83a0      	STD  Z+0,R26
00cc9f 83b1      	STD  Z+1,R27
00cca0 e0ab      	LDI  R26,LOW(11)
00cca1 9f1a      	MUL  R17,R26
00cca2 01f0      	MOVW R30,R0
                +
00cca3 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00cca4 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00cca5 e0a0      	LDI  R26,LOW(0)
00cca6 83a0      	STD  Z+0,R26
00cca7 cfe6      	RJMP SUBOPT_0x1F7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1F9:
00cca8 e0a0      	LDI  R26,LOW(0)
00cca9 83a0      	STD  Z+0,R26
00ccaa e0ab      	LDI  R26,LOW(11)
00ccab 9f1a      	MUL  R17,R26
00ccac 01f0      	MOVW R30,R0
00ccad cfd6      	RJMP SUBOPT_0x1F5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FA:
00ccae e0ab      	LDI  R26,LOW(11)
00ccaf 9f1a      	MUL  R17,R26
00ccb0 01f0      	MOVW R30,R0
                +
00ccb1 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00ccb2 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00ccb3 e0a0      	LDI  R26,LOW(0)
00ccb4 e0b0      	LDI  R27,HIGH(0)
00ccb5 83a0      	STD  Z+0,R26
00ccb6 83b1      	STD  Z+1,R27
00ccb7 e0ab      	LDI  R26,LOW(11)
00ccb8 9f1a      	MUL  R17,R26
00ccb9 01f0      	MOVW R30,R0
                +
00ccba 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00ccbb 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00ccbc 940e c164 	CALL SUBOPT_0x2C
00ccbe 940e e056 	CALL __PUTDZ20
00ccc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FB:
00ccc1 940e e05b 	CALL __PUTPARD1
00ccc3 81ed      	LDD  R30,Y+5
00ccc4 940c c2f3 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FC:
00ccc6 2fe1      	MOV  R30,R17
00ccc7 27ff      	CLR  R31
00ccc8 2766      	CLR  R22
00ccc9 2777      	CLR  R23
00ccca 940c c11b 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FD:
00cccc e6e4      	LDI  R30,LOW(100)
00cccd e0f0      	LDI  R31,HIGH(100)
00ccce 940e dfe8 	CALL __MODW21
00ccd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FE:
00ccd1 e0e0      	LDI  R30,LOW(0)
                +
00ccd2 83ee     +STD Y + 6 , R30
00ccd3 83ef     +STD Y + 6 + 1 , R30
00ccd4 87e8     +STD Y + 6 + 2 , R30
00ccd5 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
00ccd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1FF:
00ccd7 940e c2aa 	CALL SUBOPT_0x59
00ccd9 2766      	CLR  R22
00ccda 2777      	CLR  R23
00ccdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:72 WORDS
                 SUBOPT_0x200:
00ccdc 9631      	ADIW R30,1
00ccdd 940e df38 	CALL __CWD1
00ccdf 940e e05b 	CALL __PUTPARD1
00cce1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x201:
00cce2 81ea      	LDD  R30,Y+2
00cce3 81fb      	LDD  R31,Y+2+1
00cce4 940c c18b 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x202:
00cce6 01df      	MOVW R26,R30
00cce7 01cb      	MOVW R24,R22
00cce8 01f8      	MOVW R30,R16
00cce9 940e df38 	CALL __CWD1
00cceb 940e dd72 	CALL __CDF1
00cced 940e e072 	CALL __SWAPD12
00ccef 940e dda5 	CALL __SUBF12
00ccf1 01df      	MOVW R26,R30
00ccf2 01cb      	MOVW R24,R22
00ccf3 940e a235 	CALL _fabs
00ccf5 01df      	MOVW R26,R30
00ccf6 01cb      	MOVW R24,R22
00ccf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x203:
00ccf8 01f8      	MOVW R30,R16
00ccf9 940e df38 	CALL __CWD1
00ccfb 940e dd72 	CALL __CDF1
00ccfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x204:
                +
00ccfe e0a0     +LDI R26 , LOW ( 0x3F000000 )
00ccff e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00cd00 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00cd01 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00cd02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x205:
                +
00cd03 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00cd04 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00cd05 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00cd06 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00cd07 940e ddfc 	CALL __MULF12
00cd09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x206:
00cd0a e0e0      	LDI  R30,LOW(0)
00cd0b 83e8      	ST   Y,R30
00cd0c 83e9      	STD  Y+1,R30
00cd0d 83ea      	STD  Y+2,R30
00cd0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x207:
00cd0f 940e c500 	CALL SUBOPT_0xB5
00cd11 940e e05b 	CALL __PUTPARD1
00cd13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x208:
                +
00cd14 01de     +MOVW R26 , R28
00cd15 5aa2     +SUBI R26 , LOW ( - 94 )
00cd16 4fbf     +SBCI R27 , HIGH ( - 94 )
00cd17 900d     +LD R0 , X +
00cd18 91bc     +LD R27 , X
00cd19 2da0     +MOV R26 , R0
                 	__GETW2SX 94
00cd1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:85 WORDS
                 SUBOPT_0x209:
00cd1b dff8      	RCALL SUBOPT_0x208
00cd1c 940e 6c05 	CALL _iUpdateSmoothlyADC
                +
00cd1e eaac     +LDI R26 , LOW ( 0x3E5A1CAC )
00cd1f e1bc     +LDI R27 , HIGH ( 0x3E5A1CAC )
00cd20 e58a     +LDI R24 , BYTE3 ( 0x3E5A1CAC )
00cd21 e39e     +LDI R25 , BYTE4 ( 0x3E5A1CAC )
                 	__GETD2N 0x3E5A1CAC
00cd22 940e ddac 	CALL __ADDF12
                +
00cd24 87e8     +STD Y + 8 , R30
00cd25 87f9     +STD Y + 8 + 1 , R31
00cd26 876a     +STD Y + 8 + 2 , R22
00cd27 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00cd28 940e c25f 	CALL SUBOPT_0x4F
                +
00cd2a e4a2     +LDI R26 , LOW ( 0x3FD56042 )
00cd2b e6b0     +LDI R27 , HIGH ( 0x3FD56042 )
00cd2c ed85     +LDI R24 , BYTE3 ( 0x3FD56042 )
00cd2d e39f     +LDI R25 , BYTE4 ( 0x3FD56042 )
                 	__GETD2N 0x3FD56042
00cd2e 940e dda5 	CALL __SUBF12
00cd30 940c c4bd 	JMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20A:
                +
00cd32 e1e2     +LDI R30 , LOW ( 0xBFC08312 )
00cd33 e8f3     +LDI R31 , HIGH ( 0xBFC08312 )
00cd34 ec60     +LDI R22 , BYTE3 ( 0xBFC08312 )
00cd35 eb7f     +LDI R23 , BYTE4 ( 0xBFC08312 )
                 	__GETD1N 0xBFC08312
00cd36 940e de8f 	CALL __CMPF12
00cd38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20B:
00cd39 dfda      	RCALL SUBOPT_0x208
00cd3a 940e 6b0a 	CALL _updateSensorADC
                +
00cd3c 01fe     +MOVW R30 , R28
00cd3d 5ae2     +SUBI R30 , LOW ( - 94 )
00cd3e 4fff     +SBCI R31 , HIGH ( - 94 )
00cd3f 9001     +LD R0 , Z +
00cd40 81f0     +LD R31 , Z
00cd41 2de0     +MOV R30 , R0
                 	__GETW1SX 94
00cd42 940c c18b 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x20C:
                +
00cd44 01fe     +MOVW R30 , R28
00cd45 5ae2     +SUBI R30 , LOW ( - 94 )
00cd46 4fff     +SBCI R31 , HIGH ( - 94 )
00cd47 9001     +LD R0 , Z +
00cd48 81f0     +LD R31 , Z
00cd49 2de0     +MOV R30 , R0
                 	__GETW1SX 94
00cd4a 940c c18b 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:101 WORDS
                 SUBOPT_0x20D:
                +
00cd4c 01fe     +MOVW R30 , R28
00cd4d 5ae2     +SUBI R30 , LOW ( - 94 )
00cd4e 4fff     +SBCI R31 , HIGH ( - 94 )
00cd4f 9001     +LD R0 , Z +
00cd50 81f0     +LD R31 , Z
00cd51 2de0     +MOV R30 , R0
                 	__GETW1SX 94
00cd52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20E:
00cd53 dff8      	RCALL SUBOPT_0x20D
00cd54 e5a0      	LDI  R26,LOW(_t_S00D0004000)
00cd55 e1b5      	LDI  R27,HIGH(_t_S00D0004000)
00cd56 940e df02 	CALL __LSLW2
00cd58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20F:
                +
00cd59 e0a5     +LDI R26 , LOW ( 0x5 )
00cd5a e0b0     +LDI R27 , HIGH ( 0x5 )
00cd5b e080     +LDI R24 , BYTE3 ( 0x5 )
00cd5c e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00cd5d 940c 41b7 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x210:
00cd5f dfec      	RCALL SUBOPT_0x20D
00cd60 59e7      	SUBI R30,LOW(-_steadyState_S00D0004000)
00cd61 4efa      	SBCI R31,HIGH(-_steadyState_S00D0004000)
00cd62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x211:
                +
00cd63 01de     +MOVW R26 , R28
00cd64 5aa4     +SUBI R26 , LOW ( - 92 )
00cd65 4fbf     +SBCI R27 , HIGH ( - 92 )
00cd66 900d     +LD R0 , X +
00cd67 91bc     +LD R27 , X
00cd68 2da0     +MOV R26 , R0
                 	__GETW2SX 92
00cd69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x212:
                +
00cd6a 01fe     +MOVW R30 , R28
00cd6b 5ae4     +SUBI R30 , LOW ( - 92 )
00cd6c 4fff     +SBCI R31 , HIGH ( - 92 )
00cd6d 9001     +LD R0 , Z +
00cd6e 81f0     +LD R31 , Z
00cd6f 2de0     +MOV R30 , R0
                 	__GETW1SX 92
                +
00cd70 8314     +STD Z + 4 , R17
                 	__PUTBZR 17,4
00cd71 efee      	LDI  R30,LOW(65534)
00cd72 efff      	LDI  R31,HIGH(65534)
00cd73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:137 WORDS
                 SUBOPT_0x213:
00cd74 e0f0      	LDI  R31,0
00cd75 30e1      	CPI  R30,LOW(0x1)
00cd76 e0a0      	LDI  R26,HIGH(0x1)
00cd77 07fa      	CPC  R31,R26
00cd78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x214:
00cd79 dfd2      	RCALL SUBOPT_0x20D
00cd7a eeaa      	LDI  R26,LOW(_epTempRef1)
00cd7b e0b5      	LDI  R27,HIGH(_epTempRef1)
00cd7c 940e df02 	CALL __LSLW2
00cd7e 0fae      	ADD  R26,R30
00cd7f 1fbf      	ADC  R27,R31
00cd80 940e e07f 	CALL __EEPROMRDD
00cd82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x215:
00cd83 dfc8      	RCALL SUBOPT_0x20D
00cd84 eda6      	LDI  R26,LOW(_epADCRef1)
00cd85 e0b5      	LDI  R27,HIGH(_epADCRef1)
00cd86 940e df02 	CALL __LSLW2
00cd88 0fae      	ADD  R26,R30
00cd89 1fbf      	ADC  R27,R31
00cd8a 940e e07f 	CALL __EEPROMRDD
00cd8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x216:
00cd8d 940e e072 	CALL __SWAPD12
00cd8f 940e dda5 	CALL __SUBF12
00cd91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x217:
00cd92 940e c4c2 	CALL SUBOPT_0xA9
00cd94 940e a0dc 	CALL _iAD595VoltToTemp
                +
00cd96 8be8     +STD Y + 16 , R30
00cd97 8bf9     +STD Y + 16 + 1 , R31
00cd98 8b6a     +STD Y + 16 + 2 , R22
00cd99 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00cd9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x218:
                +
00cd9b 89a8     +LDD R26 , Y + 16
00cd9c 89b9     +LDD R27 , Y + 16 + 1
00cd9d 898a     +LDD R24 , Y + 16 + 2
00cd9e 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00cd9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x219:
                +
00cda0 eaaf     +LDI R26 , LOW ( 0xBDE425AF )
00cda1 e2b5     +LDI R27 , HIGH ( 0xBDE425AF )
00cda2 ee84     +LDI R24 , BYTE3 ( 0xBDE425AF )
00cda3 eb9d     +LDI R25 , BYTE4 ( 0xBDE425AF )
                 	__GETD2N 0xBDE425AF
00cda4 940e ddfc 	CALL __MULF12
00cda6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x21A:
00cda7 dfa4      	RCALL SUBOPT_0x20D
00cda8 ebad      	LDI  R26,LOW(_epFactor_C)
00cda9 e0b5      	LDI  R27,HIGH(_epFactor_C)
00cdaa 940e df02 	CALL __LSLW2
00cdac 0fae      	ADD  R26,R30
00cdad 1fbf      	ADC  R27,R31
00cdae 940e e07f 	CALL __EEPROMRDD
00cdb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21B:
                +
00cdb1 eea9     +LDI R26 , LOW ( 0x3A25EFE9 )
00cdb2 eebf     +LDI R27 , HIGH ( 0x3A25EFE9 )
00cdb3 e285     +LDI R24 , BYTE3 ( 0x3A25EFE9 )
00cdb4 e39a     +LDI R25 , BYTE4 ( 0x3A25EFE9 )
                 	__GETD2N 0x3A25EFE9
00cdb5 940e ddfc 	CALL __MULF12
00cdb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21C:
                +
00cdb8 eda5     +LDI R26 , LOW ( 0x3E2603D5 )
00cdb9 e0b3     +LDI R27 , HIGH ( 0x3E2603D5 )
00cdba e286     +LDI R24 , BYTE3 ( 0x3E2603D5 )
00cdbb e39e     +LDI R25 , BYTE4 ( 0x3E2603D5 )
                 	__GETD2N 0x3E2603D5
00cdbc 940e ddfc 	CALL __MULF12
00cdbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21D:
00cdbf dfa3      	RCALL SUBOPT_0x211
00cdc0 940e e036 	CALL __PUTDP1
00cdc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21E:
                +
00cdc3 afec     +STD Y + 60 , R30
00cdc4 affd     +STD Y + 60 + 1 , R31
00cdc5 af6e     +STD Y + 60 + 2 , R22
00cdc6 af7f     +STD Y + 60 + 3 , R23
                 	__PUTD1S 60
00cdc7 df84      	RCALL SUBOPT_0x20D
00cdc8 e0a3      	LDI  R26,LOW(_epADCRef2)
00cdc9 e0b6      	LDI  R27,HIGH(_epADCRef2)
00cdca 940e df02 	CALL __LSLW2
00cdcc 0fae      	ADD  R26,R30
00cdcd 1fbf      	ADC  R27,R31
00cdce 940e e07f 	CALL __EEPROMRDD
                +
00cdd0 afe8     +STD Y + 56 , R30
00cdd1 aff9     +STD Y + 56 + 1 , R31
00cdd2 af6a     +STD Y + 56 + 2 , R22
00cdd3 af7b     +STD Y + 56 + 3 , R23
                 	__PUTD1S 56
00cdd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21F:
                +
00cdd5 abe8     +STD Y + 48 , R30
00cdd6 abf9     +STD Y + 48 + 1 , R31
00cdd7 ab6a     +STD Y + 48 + 2 , R22
00cdd8 ab7b     +STD Y + 48 + 3 , R23
                 	__PUTD1S 48
00cdd9 df72      	RCALL SUBOPT_0x20D
00cdda e1a7      	LDI  R26,LOW(_epTempRef2)
00cddb e0b6      	LDI  R27,HIGH(_epTempRef2)
00cddc 940e df02 	CALL __LSLW2
00cdde 0fae      	ADD  R26,R30
00cddf 1fbf      	ADC  R27,R31
00cde0 940e e07f 	CALL __EEPROMRDD
                +
00cde2 a7ec     +STD Y + 44 , R30
00cde3 a7fd     +STD Y + 44 + 1 , R31
00cde4 a76e     +STD Y + 44 + 2 , R22
00cde5 a77f     +STD Y + 44 + 3 , R23
                 	__PUTD1S 44
00cde6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x220:
00cde7 df64      	RCALL SUBOPT_0x20D
00cde8 eaa9      	LDI  R26,LOW(_epFactor_B)
00cde9 e0b5      	LDI  R27,HIGH(_epFactor_B)
00cdea 940e df02 	CALL __LSLW2
00cdec 0fae      	ADD  R26,R30
00cded 1fbf      	ADC  R27,R31
00cdee 940e e07f 	CALL __EEPROMRDD
00cdf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x221:
00cdf1 e3a0      	LDI  R26,LOW(_epADCRef3)
00cdf2 e0b6      	LDI  R27,HIGH(_epADCRef3)
00cdf3 940e df02 	CALL __LSLW2
00cdf5 0fae      	ADD  R26,R30
00cdf6 1fbf      	ADC  R27,R31
00cdf7 940e e07f 	CALL __EEPROMRDD
00cdf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x222:
00cdfa e4a4      	LDI  R26,LOW(_epTempRef3)
00cdfb e0b6      	LDI  R27,HIGH(_epTempRef3)
00cdfc 940e df02 	CALL __LSLW2
00cdfe 0fae      	ADD  R26,R30
00cdff 1fbf      	ADC  R27,R31
00ce00 940e e07f 	CALL __EEPROMRDD
00ce02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x223:
                +
00ce03 adec     +LDD R30 , Y + 60
00ce04 adfd     +LDD R31 , Y + 60 + 1
00ce05 ad6e     +LDD R22 , Y + 60 + 2
00ce06 ad7f     +LDD R23 , Y + 60 + 3
                 	__GETD1S 60
00ce07 940e e05b 	CALL __PUTPARD1
00ce09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x224:
                +
00ce0a 8da8     +LDD R26 , Y + 24
00ce0b 8db9     +LDD R27 , Y + 24 + 1
00ce0c 8d8a     +LDD R24 , Y + 24 + 2
00ce0d 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00ce0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x225:
                +
00ce0f 89ac     +LDD R26 , Y + 20
00ce10 89bd     +LDD R27 , Y + 20 + 1
00ce11 898e     +LDD R24 , Y + 20 + 2
00ce12 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00ce13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x226:
00ce14 e9a5      	LDI  R26,LOW(_epFactor_A)
00ce15 e0b5      	LDI  R27,HIGH(_epFactor_A)
00ce16 940e df02 	CALL __LSLW2
00ce18 0fae      	ADD  R26,R30
00ce19 1fbf      	ADC  R27,R31
00ce1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x227:
00ce1b 81ae      	LDD  R26,Y+6
00ce1c 81bf      	LDD  R27,Y+6+1
00ce1d 0fae      	ADD  R26,R30
00ce1e 1fbf      	ADC  R27,R31
00ce1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x228:
00ce20 0fae      	ADD  R26,R30
00ce21 1fbf      	ADC  R27,R31
00ce22 91ac      	LD   R26,X
00ce23 30a1      	CPI  R26,LOW(0x1)
00ce24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x229:
00ce25 e0e5      	LDI  R30,LOW(5)
00ce26 940e df79 	CALL __MULB1W2U
                +
00ce28 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00ce29 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00ce2a 81e0      	LD   R30,Z
00ce2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x22A:
00ce2c 27ff      	CLR  R31
00ce2d 2766      	CLR  R22
00ce2e 2777      	CLR  R23
00ce2f 940c c11b 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22B:
00ce31 81ec      	LDD  R30,Y+4
00ce32 81fd      	LDD  R31,Y+4+1
00ce33 940c c18b 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22C:
                +
00ce35 e0e0     +LDI R30 , LOW ( 0x0 )
00ce36 e0f0     +LDI R31 , HIGH ( 0x0 )
00ce37 e060     +LDI R22 , BYTE3 ( 0x0 )
00ce38 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00ce39 940e e093 	CALL __EEPROMWRD
00ce3b 81ec      	LDD  R30,Y+4
00ce3c 81fd      	LDD  R31,Y+4+1
00ce3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22D:
00ce3e eaa9      	LDI  R26,LOW(_epFactor_B)
00ce3f e0b5      	LDI  R27,HIGH(_epFactor_B)
00ce40 940e df02 	CALL __LSLW2
00ce42 0fae      	ADD  R26,R30
00ce43 1fbf      	ADC  R27,R31
00ce44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22E:
00ce45 ebad      	LDI  R26,LOW(_epFactor_C)
00ce46 e0b5      	LDI  R27,HIGH(_epFactor_C)
00ce47 940e df02 	CALL __LSLW2
00ce49 0fea      	ADD  R30,R26
00ce4a 1ffb      	ADC  R31,R27
00ce4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22F:
                +
00ce4c e0e0     +LDI R30 , LOW ( 0x0 )
00ce4d e0f0     +LDI R31 , HIGH ( 0x0 )
00ce4e e060     +LDI R22 , BYTE3 ( 0x0 )
00ce4f e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00ce50 940e e093 	CALL __EEPROMWRD
00ce52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x230:
00ce53 89e8      	LDD  R30,Y+16
00ce54 89f9      	LDD  R31,Y+16+1
00ce55 eda6      	LDI  R26,LOW(_epADCRef1)
00ce56 e0b5      	LDI  R27,HIGH(_epADCRef1)
00ce57 940e df02 	CALL __LSLW2
00ce59 0fae      	ADD  R26,R30
00ce5a 1fbf      	ADC  R27,R31
00ce5b 940e e07f 	CALL __EEPROMRDD
00ce5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x231:
00ce5e 89e8      	LDD  R30,Y+16
00ce5f 89f9      	LDD  R31,Y+16+1
00ce60 eeaa      	LDI  R26,LOW(_epTempRef1)
00ce61 e0b5      	LDI  R27,HIGH(_epTempRef1)
00ce62 940e df02 	CALL __LSLW2
00ce64 0fae      	ADD  R26,R30
00ce65 1fbf      	ADC  R27,R31
00ce66 940e e07f 	CALL __EEPROMRDD
00ce68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x232:
00ce69 89a8      	LDD  R26,Y+16
00ce6a 89b9      	LDD  R27,Y+16+1
00ce6b 5aa8      	SUBI R26,LOW(-_epCalType)
00ce6c 4fb9      	SBCI R27,HIGH(-_epCalType)
00ce6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x233:
                +
00ce6e edea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 302 ) )
00ce6f e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 302 ) )
00ce70 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 302 ) )
00ce71 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 302 ) )
                 	__POINTD1FN _0x1A0000,302
00ce72 940c c645 	JMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x234:
00ce74 ebad      	LDI  R26,LOW(_epFactor_C)
00ce75 e0b5      	LDI  R27,HIGH(_epFactor_C)
00ce76 940e df02 	CALL __LSLW2
00ce78 0fae      	ADD  R26,R30
00ce79 1fbf      	ADC  R27,R31
00ce7a c9f2      	RJMP SUBOPT_0x14B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x235:
00ce7b 89e8      	LDD  R30,Y+16
00ce7c 89f9      	LDD  R31,Y+16+1
00ce7d eaa9      	LDI  R26,LOW(_epFactor_B)
00ce7e e0b5      	LDI  R27,HIGH(_epFactor_B)
00ce7f 940e df02 	CALL __LSLW2
00ce81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x236:
00ce82 89e8      	LDD  R30,Y+16
00ce83 89f9      	LDD  R31,Y+16+1
00ce84 e1a7      	LDI  R26,LOW(_epTempRef2)
00ce85 e0b6      	LDI  R27,HIGH(_epTempRef2)
00ce86 940e df02 	CALL __LSLW2
00ce88 0fae      	ADD  R26,R30
00ce89 1fbf      	ADC  R27,R31
00ce8a 940e e07f 	CALL __EEPROMRDD
00ce8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x237:
00ce8d 89e8      	LDD  R30,Y+16
00ce8e 89f9      	LDD  R31,Y+16+1
00ce8f e0a3      	LDI  R26,LOW(_epADCRef2)
00ce90 e0b6      	LDI  R27,HIGH(_epADCRef2)
00ce91 940e df02 	CALL __LSLW2
00ce93 0fae      	ADD  R26,R30
00ce94 1fbf      	ADC  R27,R31
00ce95 940e e07f 	CALL __EEPROMRDD
00ce97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x238:
                +
00ce98 e2e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 374 ) )
00ce99 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 374 ) )
00ce9a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 374 ) )
00ce9b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 374 ) )
                 	__POINTD1FN _0x1A0000,374
00ce9c 940c c645 	JMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x239:
00ce9e e0a3      	LDI  R26,LOW(_epADCRef2)
00ce9f e0b6      	LDI  R27,HIGH(_epADCRef2)
00cea0 940e df02 	CALL __LSLW2
00cea2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23A:
00cea3 0fae      	ADD  R26,R30
00cea4 1fbf      	ADC  R27,R31
00cea5 940e e07f 	CALL __EEPROMRDD
00cea7 940e e05b 	CALL __PUTPARD1
00cea9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23B:
00ceaa eeaa      	LDI  R26,LOW(_epTempRef1)
00ceab e0b5      	LDI  R27,HIGH(_epTempRef1)
00ceac 940e df02 	CALL __LSLW2
00ceae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23C:
00ceaf e1a7      	LDI  R26,LOW(_epTempRef2)
00ceb0 e0b6      	LDI  R27,HIGH(_epTempRef2)
00ceb1 940e df02 	CALL __LSLW2
00ceb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23D:
00ceb4 940e df02 	CALL __LSLW2
00ceb6 0fae      	ADD  R26,R30
00ceb7 1fbf      	ADC  R27,R31
00ceb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23E:
00ceb9 0fae      	ADD  R26,R30
00ceba 1fbf      	ADC  R27,R31
00cebb 940e e07f 	CALL __EEPROMRDD
00cebd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23F:
00cebe 940e e05b 	CALL __PUTPARD1
00cec0 8de8      	LDD  R30,Y+24
00cec1 8df9      	LDD  R31,Y+24+1
00cec2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x240:
00cec3 940e c4f6 	CALL SUBOPT_0xB3
00cec5 940e e05b 	CALL __PUTPARD1
00cec7 e0e2      	LDI  R30,LOW(2)
00cec8 93ea      	ST   -Y,R30
00cec9 01de      	MOVW R26,R28
00ceca 961b      	ADIW R26,11
00cecb 940c a2ba 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x241:
                +
00cecd efe3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 583 ) )
00cece e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 583 ) )
00cecf e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 583 ) )
00ced0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 583 ) )
                 	__POINTD1FN _0x1A0000,583
00ced1 940e e05b 	CALL __PUTPARD1
00ced3 e080      	LDI  R24,0
00ced4 940e bf54 	CALL _sprintf
00ced6 9626      	ADIW R28,6
00ced7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x242:
00ced8 01de      	MOVW R26,R28
00ced9 9616      	ADIW R26,6
00ceda 940c a5e6 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x243:
00cedc 53e0      	SUBI R30,LOW(48)
                +
00cedd 89a8     +LDD R26 , Y + 16
00cede 89b9     +LDD R27 , Y + 16 + 1
00cedf 9612     +ADIW R26 , 2
00cee0 93ec     +ST X , R30
                 	__PUTB1SNS 16,2
00cee1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x244:
00cee2 53e0      	SUBI R30,LOW(48)
                +
00cee3 89a8     +LDD R26 , Y + 16
00cee4 89b9     +LDD R27 , Y + 16 + 1
00cee5 9613     +ADIW R26 , 3
00cee6 93ec     +ST X , R30
                 	__PUTB1SNS 16,3
00cee7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x245:
00cee8 53e0      	SUBI R30,LOW(48)
                +
00cee9 89a8     +LDD R26 , Y + 16
00ceea 89b9     +LDD R27 , Y + 16 + 1
00ceeb 9614     +ADIW R26 , 4
00ceec 93ec     +ST X , R30
                 	__PUTB1SNS 16,4
00ceed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x246:
00ceee 53e0      	SUBI R30,LOW(48)
                +
00ceef 89a8     +LDD R26 , Y + 16
00cef0 89b9     +LDD R27 , Y + 16 + 1
00cef1 9615     +ADIW R26 , 5
00cef2 93ec     +ST X , R30
                 	__PUTB1SNS 16,5
00cef3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x247:
00cef4 89a8      	LDD  R26,Y+16
00cef5 89b9      	LDD  R27,Y+16+1
00cef6 9611      	ADIW R26,1
00cef7 e0e0      	LDI  R30,LOW(0)
00cef8 93ec      	ST   X,R30
00cef9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x248:
                +
00cefa e2ed     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 897 ) )
00cefb e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 897 ) )
00cefc e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 897 ) )
00cefd e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 897 ) )
                 	__POINTD1FN _0x1A0000,897
00cefe 940e e05b 	CALL __PUTPARD1
00cf00 01fe      	MOVW R30,R28
00cf01 963a      	ADIW R30,10
00cf02 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x249:
00cf04 93ba      	ST   -Y,R27
00cf05 93aa      	ST   -Y,R26
00cf06 9764      	SBIW R28,20
00cf07 e184      	LDI  R24,20
00cf08 e0a0      	LDI  R26,LOW(0)
00cf09 e0b0      	LDI  R27,HIGH(0)
00cf0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24A:
00cf0b 940e e05b 	CALL __PUTPARD1
00cf0d 8dee      	LDD  R30,Y+30
00cf0e 8dff      	LDD  R31,Y+30+1
00cf0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24B:
00cf10 9fea      	MUL  R30,R26
00cf11 01f0      	MOVW R30,R0
00cf12 940e df38 	CALL __CWD1
00cf14 940e dd72 	CALL __CDF1
                +
00cf16 89aa     +LDD R26 , Y + 18
00cf17 89bb     +LDD R27 , Y + 18 + 1
00cf18 898c     +LDD R24 , Y + 18 + 2
00cf19 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00cf1a 940e ddac 	CALL __ADDF12
                +
00cf1c 8bea     +STD Y + 18 , R30
00cf1d 8bfb     +STD Y + 18 + 1 , R31
00cf1e 8b6c     +STD Y + 18 + 2 , R22
00cf1f 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00cf20 89ee      	LDD  R30,Y+22
00cf21 89ff      	LDD  R31,Y+22+1
00cf22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24C:
                +
00cf23 89aa     +LDD R26 , Y + 18
00cf24 89bb     +LDD R27 , Y + 18 + 1
00cf25 898c     +LDD R24 , Y + 18 + 2
00cf26 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00cf27 940e ddac 	CALL __ADDF12
                +
00cf29 8bea     +STD Y + 18 , R30
00cf2a 8bfb     +STD Y + 18 + 1 , R31
00cf2b 8b6c     +STD Y + 18 + 2 , R22
00cf2c 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00cf2d 89ee      	LDD  R30,Y+22
00cf2e 89ff      	LDD  R31,Y+22+1
00cf2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x24D:
00cf30 e0f0      	LDI  R31,0
00cf31 940e df38 	CALL __CWD1
00cf33 940e dd72 	CALL __CDF1
00cf35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24E:
                +
00cf36 89aa     +LDD R26 , Y + 18
00cf37 89bb     +LDD R27 , Y + 18 + 1
00cf38 898c     +LDD R24 , Y + 18 + 2
00cf39 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00cf3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x24F:
                +
00cf3b 8bea     +STD Y + 18 , R30
00cf3c 8bfb     +STD Y + 18 + 1 , R31
00cf3d 8b6c     +STD Y + 18 + 2 , R22
00cf3e 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00cf3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x250:
00cf40 940e df38 	CALL __CWD1
00cf42 940e e05b 	CALL __PUTPARD1
00cf44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x251:
00cf45 8daa      	LDD  R26,Y+26
00cf46 8dbb      	LDD  R27,Y+26+1
00cf47 940e 6c05 	CALL _iUpdateSmoothlyADC
                +
00cf49 eaac     +LDI R26 , LOW ( 0x3E5A1CAC )
00cf4a e1bc     +LDI R27 , HIGH ( 0x3E5A1CAC )
00cf4b e58a     +LDI R24 , BYTE3 ( 0x3E5A1CAC )
00cf4c e39e     +LDI R25 , BYTE4 ( 0x3E5A1CAC )
                 	__GETD2N 0x3E5A1CAC
00cf4d 940e ddac 	CALL __ADDF12
00cf4f 940c c4e5 	JMP SUBOPT_0xB0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x252:
                +
00cf51 e4a2     +LDI R26 , LOW ( 0x3FD56042 )
00cf52 e6b0     +LDI R27 , HIGH ( 0x3FD56042 )
00cf53 ed85     +LDI R24 , BYTE3 ( 0x3FD56042 )
00cf54 e39f     +LDI R25 , BYTE4 ( 0x3FD56042 )
                 	__GETD2N 0x3FD56042
00cf55 940e dda5 	CALL __SUBF12
                +
00cf57 87ea     +STD Y + 10 , R30
00cf58 87fb     +STD Y + 10 + 1 , R31
00cf59 876c     +STD Y + 10 + 2 , R22
00cf5a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00cf5b 8dea      	LDD  R30,Y+26
00cf5c 8dfb      	LDD  R31,Y+26+1
00cf5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x253:
00cf5e eda6      	LDI  R26,LOW(_epADCRef1)
00cf5f e0b5      	LDI  R27,HIGH(_epADCRef1)
00cf60 940e df02 	CALL __LSLW2
00cf62 0fea      	ADD  R30,R26
00cf63 1ffb      	ADC  R31,R27
00cf64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x254:
00cf65 940e c278 	CALL SUBOPT_0x52
00cf67 940c a0dc 	JMP  _iAD595VoltToTemp
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x255:
00cf69 010f      	MOVW R0,R30
00cf6a 8dea      	LDD  R30,Y+26
00cf6b 8dfb      	LDD  R31,Y+26+1
00cf6c 940c c18b 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x256:
00cf6e 0fae      	ADD  R26,R30
00cf6f 1fbf      	ADC  R27,R31
00cf70 940e c5c8 	CALL SUBOPT_0xD4
00cf72 940e e093 	CALL __EEPROMWRD
00cf74 8daa      	LDD  R26,Y+26
00cf75 8dbb      	LDD  R27,Y+26+1
00cf76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x257:
00cf77 940e e0a3 	CALL __EEPROMWRB
00cf79 8daa      	LDD  R26,Y+26
00cf7a 8dbb      	LDD  R27,Y+26+1
00cf7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x258:
00cf7c e3a0      	LDI  R26,LOW(_epADCRef3)
00cf7d e0b6      	LDI  R27,HIGH(_epADCRef3)
00cf7e 940e df02 	CALL __LSLW2
00cf80 0fea      	ADD  R30,R26
00cf81 1ffb      	ADC  R31,R27
00cf82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x259:
00cf83 01f5      	MOVW R30,R10
00cf84 e0aa      	LDI  R26,LOW(10)
00cf85 e0b0      	LDI  R27,HIGH(10)
00cf86 940e df51 	CALL __MULW12U
00cf88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25A:
00cf89 940e c2aa 	CALL SUBOPT_0x59
00cf8b 940e e056 	CALL __PUTDZ20
00cf8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x25B:
00cf8e 940e e056 	CALL __PUTDZ20
00cf90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x25C:
00cf91 e0ea      	LDI  R30,LOW(10)
00cf92 e0f0      	LDI  R31,HIGH(10)
00cf93 940e dfe8 	CALL __MODW21
00cf95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25D:
00cf96 01f6      	MOVW R30,R12
00cf97 e0aa      	LDI  R26,LOW(10)
00cf98 e0b0      	LDI  R27,HIGH(10)
00cf99 940e df51 	CALL __MULW12U
00cf9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25E:
00cf9c 01df      	MOVW R26,R30
00cf9d 940e e02b 	CALL __GETD1P
00cf9f 81ac      	LDD  R26,Y+4
00cfa0 81bd      	LDD  R27,Y+4+1
00cfa1 940e e036 	CALL __PUTDP1
00cfa3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25F:
00cfa4 93e0 1483 	STS  _batteryVolt,R30
00cfa6 93f0 1484 	STS  _batteryVolt+1,R31
00cfa8 9360 1485 	STS  _batteryVolt+2,R22
00cfaa 9370 1486 	STS  _batteryVolt+3,R23
00cfac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x260:
                +
00cfad 91e0 136b+LDS R30 , _env_config + ( 6 )
00cfaf 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00cfb1 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00cfb3 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00cfb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x261:
00cfb6 70e4      	ANDI R30,LOW(0x4)
00cfb7 e0f0      	LDI  R31,0
00cfb8 940e df0b 	CALL __ASRW2
00cfba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x262:
00cfbb 91e0 146b 	LDS  R30,_sdFreeSpace
00cfbd 91f0 146c 	LDS  R31,_sdFreeSpace+1
00cfbf 9160 146d 	LDS  R22,_sdFreeSpace+2
00cfc1 9170 146e 	LDS  R23,_sdFreeSpace+3
00cfc3 940e e0b4 	CALL __CPD10
00cfc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x263:
00cfc6 81e8      	LD   R30,Y
00cfc7 81f9      	LDD  R31,Y+1
00cfc8 59e1      	SUBI R30,LOW(-_sensorStatus)
00cfc9 4efb      	SBCI R31,HIGH(-_sensorStatus)
00cfca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x264:
00cfcb 81ea      	LDD  R30,Y+2
00cfcc 81fb      	LDD  R31,Y+2+1
00cfcd 51e2      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00cfce 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00cfcf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x265:
00cfd0 81ea      	LDD  R30,Y+2
00cfd1 81fb      	LDD  R31,Y+2+1
00cfd2 edaa      	LDI  R26,LOW(_t_S00F0005000)
00cfd3 e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00cfd4 940e df02 	CALL __LSLW2
00cfd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x266:
00cfd7 e1ed      	LDI  R30,LOW(29)
00cfd8 940e df79 	CALL __MULB1W2U
                +
00cfda 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00cfdb 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00cfdc 01df      	MOVW R26,R30
00cfdd 940c c10c 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x267:
00cfdf 81aa      	LDD  R26,Y+2
00cfe0 81bb      	LDD  R27,Y+2+1
00cfe1 58ac      	SUBI R26,LOW(-_dataStatus)
00cfe2 4ebb      	SBCI R27,HIGH(-_dataStatus)
00cfe3 91ec      	LD   R30,X
00cfe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x268:
00cfe5 81ea      	LDD  R30,Y+2
00cfe6 81fb      	LDD  R31,Y+2+1
00cfe7 50ed      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00cfe8 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00cfe9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x269:
00cfea e1ed      	LDI  R30,LOW(29)
00cfeb 940e df79 	CALL __MULB1W2U
                +
00cfed 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00cfee 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00cfef 01df      	MOVW R26,R30
00cff0 940c c10c 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26A:
00cff2 940e df02 	CALL __LSLW2
00cff4 940c c107 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x26B:
00cff6 940e df02 	CALL __LSLW2
00cff8 940c c0fc 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26C:
                +
00cffa ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00cffb e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00cffc 0fe0      	ADD  R30,R16
00cffd 1ff1      	ADC  R31,R17
00cffe 81e0      	LD   R30,Z
00cfff 30e0      	CPI  R30,0
00d000 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26D:
00d001 81aa      	LDD  R26,Y+2
00d002 81bb      	LDD  R27,Y+2+1
00d003 01cd      	MOVW R24,R26
00d004 916d      	LD   R22,X+
00d005 917c      	LD   R23,X
00d006 e0e4      	LDI  R30,LOW(4)
00d007 e0f0      	LDI  R31,HIGH(4)
00d008 1be0      	SUB  R30,R16
00d009 0bf1      	SBC  R31,R17
00d00a e0a1      	LDI  R26,LOW(1)
00d00b e0b0      	LDI  R27,HIGH(1)
00d00c 940e dedd 	CALL __LSLW12
00d00e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26E:
00d00f 91a0 167c 	LDS  R26,_last_wr_eventQ
00d011 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00d013 e0e6      	LDI  R30,LOW(6)
00d014 940e df79 	CALL __MULB1W2U
00d016 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26F:
00d017 91a0 167e 	LDS  R26,_last_rd_eventQ
00d019 91b0 167f 	LDS  R27,_last_rd_eventQ+1
00d01b e0e6      	LDI  R30,LOW(6)
00d01c 940e df79 	CALL __MULB1W2U
00d01e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x270:
00d01f 81e0      	LD   R30,Z
00d020 81a8      	LD   R26,Y
00d021 81b9      	LDD  R27,Y+1
00d022 93ec      	ST   X,R30
00d023 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x271:
00d024 940e e0d2 	CALL __SAVELOCR4
                +
00d026 e000     +LDI R16 , LOW ( 0 )
00d027 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00d028 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x272:
00d029 0fa0      	ADD  R26,R16
00d02a 1fb1      	ADC  R27,R17
00d02b 91ec      	LD   R30,X
00d02c 30e0      	CPI  R30,0
00d02d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x273:
00d02e 93fa      	ST   -Y,R31
00d02f 93ea      	ST   -Y,R30
                +
00d030 e0a3     +LDI R26 , LOW ( 0x3 )
00d031 e0b0     +LDI R27 , HIGH ( 0x3 )
00d032 e080     +LDI R24 , BYTE3 ( 0x3 )
00d033 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00d034 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x274:
00d035 81a8      	LD   R26,Y
00d036 81b9      	LDD  R27,Y+1
00d037 93ec      	ST   X,R30
00d038 e0e0      	LDI  R30,LOW(0)
00d039 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x275:
                +
00d03a 91a0 136b+LDS R26 , _env_config + ( 6 )
00d03c 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00d03e 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00d040 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00d042 940e e0c0 	CALL __CPD02
00d044 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x276:
00d045 81a8      	LD   R26,Y
00d046 81b9      	LDD  R27,Y+1
00d047 e0e0      	LDI  R30,LOW(0)
00d048 93ec      	ST   X,R30
00d049 e0e1      	LDI  R30,LOW(1)
00d04a e0f0      	LDI  R31,HIGH(1)
00d04b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x277:
                +
00d04c 91a0 1375+LDS R26 , _env_config + ( 16 )
00d04e 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00d050 940e e0b8 	CALL __CPW02
00d052 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x278:
00d053 81ea      	LDD  R30,Y+2
00d054 81fb      	LDD  R31,Y+2+1
00d055 58e4      	SUBI R30,LOW(-_dinStatus)
00d056 4efb      	SBCI R31,HIGH(-_dinStatus)
00d057 81a0      	LD   R26,Z
00d058 81ea      	LDD  R30,Y+2
00d059 81fb      	LDD  R31,Y+2+1
00d05a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x279:
00d05b 81ea      	LDD  R30,Y+2
00d05c 81fb      	LDD  R31,Y+2+1
00d05d 55e0      	SUBI R30,LOW(-_t_flag_S0110006000)
00d05e 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00d05f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27A:
00d060 81ea      	LDD  R30,Y+2
00d061 81fb      	LDD  R31,Y+2+1
00d062 58e4      	SUBI R30,LOW(-_dinStatus)
00d063 4efb      	SBCI R31,HIGH(-_dinStatus)
00d064 81e0      	LD   R30,Z
00d065 93ec      	ST   X,R30
00d066 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27B:
00d067 93ba      	ST   -Y,R27
00d068 93aa      	ST   -Y,R26
00d069 81ea      	LDD  R30,Y+2
00d06a 81fb      	LDD  R31,Y+2+1
00d06b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27C:
00d06c 81ea      	LDD  R30,Y+2
00d06d 81fb      	LDD  R31,Y+2+1
00d06e 59e1      	SUBI R30,LOW(-_sensorStatus)
00d06f 4efb      	SBCI R31,HIGH(-_sensorStatus)
00d070 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27D:
00d071 81ea      	LDD  R30,Y+2
00d072 81fb      	LDD  R31,Y+2+1
00d073 53e8      	SUBI R30,LOW(-_t_flag_S0110007000)
00d074 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00d075 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27E:
00d076 81ea      	LDD  R30,Y+2
00d077 81fb      	LDD  R31,Y+2+1
00d078 eba4      	LDI  R26,LOW(_t_S0110007000)
00d079 e1b6      	LDI  R27,HIGH(_t_S0110007000)
00d07a cf77      	RJMP SUBOPT_0x26A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27F:
00d07b 81ea      	LDD  R30,Y+2
00d07c 81fb      	LDD  R31,Y+2+1
00d07d 51ea      	SUBI R30,LOW(-_t_flag_S0110008000)
00d07e 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00d07f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x280:
00d080 e088      	LDI  R24,8
00d081 940e 7f9f 	CALL _printOLED
00d083 962c      	ADIW R28,12
00d084 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x281:
                +
00d085 e0a5     +LDI R26 , 5
00d086 9fa0     +MUL R26 , R16
00d087 01f0     +MOVW R30 , R0
00d088 9fa1     +MUL R26 , R17
00d089 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00d08a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x282:
00d08b 940e e05b 	CALL __PUTPARD1
00d08d 01f8      	MOVW R30,R16
00d08e cc4d      	RJMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x283:
00d08f 940e e05b 	CALL __PUTPARD1
00d091 cfee      	RJMP SUBOPT_0x280
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 118 TIMES, CODE SIZE REDUCTION:231 WORDS
                 SUBOPT_0x284:
00d092 e084      	LDI  R24,4
00d093 940e 7f9f 	CALL _printOLED
00d095 9628      	ADIW R28,8
00d096 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x285:
00d097 940e c3f8 	CALL SUBOPT_0x8C
                +
00d099 e0e0     +LDI R30 , LOW ( 0x40400000 )
00d09a e0f0     +LDI R31 , HIGH ( 0x40400000 )
00d09b e460     +LDI R22 , BYTE3 ( 0x40400000 )
00d09c e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00d09d 940e de8f 	CALL __CMPF12
00d09f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x286:
00d0a0 940e c3f8 	CALL SUBOPT_0x8C
                +
00d0a2 e3e3     +LDI R30 , LOW ( 0x40533333 )
00d0a3 e3f3     +LDI R31 , HIGH ( 0x40533333 )
00d0a4 e563     +LDI R22 , BYTE3 ( 0x40533333 )
00d0a5 e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00d0a6 940e de8f 	CALL __CMPF12
00d0a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x287:
00d0a9 940e c3f8 	CALL SUBOPT_0x8C
                +
00d0ab eced     +LDI R30 , LOW ( 0x406CCCCD )
00d0ac ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00d0ad e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00d0ae e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00d0af 940e de8f 	CALL __CMPF12
00d0b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x288:
00d0b2 940e c3f8 	CALL SUBOPT_0x8C
                +
00d0b4 e0e0     +LDI R30 , LOW ( 0x40800000 )
00d0b5 e0f0     +LDI R31 , HIGH ( 0x40800000 )
00d0b6 e860     +LDI R22 , BYTE3 ( 0x40800000 )
00d0b7 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00d0b8 940e de8f 	CALL __CMPF12
00d0ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x289:
00d0bb e080      	LDI  R24,0
00d0bc 940e 7f9f 	CALL _printOLED
00d0be 9624      	ADIW R28,4
00d0bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x28A:
00d0c0 940e e05b 	CALL __PUTPARD1
00d0c2 81ec      	LDD  R30,Y+4
00d0c3 940c c2f3 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x28B:
00d0c5 940e deaf 	CALL __ADDW2R15
00d0c7 940e e02b 	CALL __GETD1P
00d0c9 940e e05b 	CALL __PUTPARD1
00d0cb 01d8      	MOVW R26,R16
00d0cc 940c bf8c 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28C:
00d0ce 940e c278 	CALL SUBOPT_0x52
00d0d0 940e b990 	CALL _f_lseek
00d0d2 2f1e      	MOV  R17,R30
00d0d3 3010      	CPI  R17,0
00d0d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28D:
00d0d5 2fa1      	MOV  R26,R17
00d0d6 940e 7fff 	CALL _error
00d0d8 efef      	LDI  R30,LOW(65535)
00d0d9 efff      	LDI  R31,HIGH(65535)
00d0da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28E:
00d0db 93fa      	ST   -Y,R31
00d0dc 93ea      	ST   -Y,R30
00d0dd 01fe      	MOVW R30,R28
00d0de 9633      	ADIW R30,3
00d0df 93fa      	ST   -Y,R31
00d0e0 93ea      	ST   -Y,R30
00d0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28F:
00d0e2 940e e05b 	CALL __PUTPARD1
00d0e4 e1ef      	LDI  R30,LOW(_root_path)
00d0e5 e1f9      	LDI  R31,HIGH(_root_path)
00d0e6 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x290:
00d0e8 940e 7fff 	CALL _error
00d0ea e0e0      	LDI  R30,LOW(0)
00d0eb 93e0 146b 	STS  _sdFreeSpace,R30
00d0ed 93e0 146c 	STS  _sdFreeSpace+1,R30
00d0ef 93e0 146d 	STS  _sdFreeSpace+2,R30
00d0f1 93e0 146e 	STS  _sdFreeSpace+3,R30
00d0f3 efef      	LDI  R30,LOW(65535)
00d0f4 efff      	LDI  R31,HIGH(65535)
00d0f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x291:
00d0f6 81e2      	LDD  R30,Z+2
00d0f7 e0f0      	LDI  R31,0
00d0f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x292:
                +
00d0f9 81a9     +LDD R26 , Y + 1
00d0fa 81ba     +LDD R27 , Y + 1 + 1
00d0fb 818b     +LDD R24 , Y + 1 + 2
00d0fc 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00d0fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x293:
00d0fe 940e df38 	CALL __CWD1
00d100 940e df59 	CALL __MULD12U
00d102 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x294:
                +
00d103 ecec     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00d104 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00d105 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00d106 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00d107 cfda      	RJMP SUBOPT_0x28F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x295:
00d108 93fa      	ST   -Y,R31
00d109 93ea      	ST   -Y,R30
00d10a 01fe      	MOVW R30,R28
00d10b 9634      	ADIW R30,4
00d10c 93fa      	ST   -Y,R31
00d10d 93ea      	ST   -Y,R30
00d10e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x296:
00d10f 89ee      	LDD  R30,Y+22
00d110 89ff      	LDD  R31,Y+22+1
00d111 93fa      	ST   -Y,R31
00d112 93ea      	ST   -Y,R30
00d113 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x297:
00d114 01de      	MOVW R26,R28
00d115 961a      	ADIW R26,10
00d116 940e 848b 	CALL _LOG_getLastInsert
00d118 018f      	MOVW R16,R30
00d119 2311      	TST  R17
00d11a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x298:
00d11b 940e c25f 	CALL SUBOPT_0x4F
00d11d 940e e05b 	CALL __PUTPARD1
00d11f 940c c235 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x299:
00d121 940e 8513 	CALL _index2Addr
00d123 940c c4bd 	JMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29A:
00d125 940e c500 	CALL SUBOPT_0xB5
00d127 940c c5c3 	JMP SUBOPT_0xD3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x29B:
00d129 93fa      	ST   -Y,R31
00d12a 93ea      	ST   -Y,R30
00d12b 940c c372 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x29C:
00d12d 940e 801f 	CALL _SD_writeData
00d12f 018f      	MOVW R16,R30
00d130 2311      	TST  R17
00d131 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x29D:
00d132 940e c500 	CALL SUBOPT_0xB5
                +
00d134 5feb     +SUBI R30 , LOW ( - 5 )
00d135 4fff     +SBCI R31 , HIGH ( - 5 )
00d136 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00d137 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00d138 940e e05b 	CALL __PUTPARD1
00d13a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29E:
00d13b 940e c500 	CALL SUBOPT_0xB5
                +
00d13d 5fe9     +SUBI R30 , LOW ( - 7 )
00d13e 4fff     +SBCI R31 , HIGH ( - 7 )
00d13f 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00d140 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00d141 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x29F:
00d142 940e c5cd 	CALL SUBOPT_0xD5
00d144 940e c527 	CALL SUBOPT_0xBC
                +
00d146 87ea     +STD Y + 10 , R30
00d147 87fb     +STD Y + 10 + 1 , R31
00d148 876c     +STD Y + 10 + 2 , R22
00d149 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d14a 01df      	MOVW R26,R30
00d14b 01cb      	MOVW R24,R22
00d14c 940e 84a6 	CALL _LOG_setLastInsert
00d14e 018f      	MOVW R16,R30
00d14f 2311      	TST  R17
00d150 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2A0:
00d151 8de8      	LDD  R30,Y+24
00d152 8df9      	LDD  R31,Y+24+1
00d153 93fa      	ST   -Y,R31
00d154 93ea      	ST   -Y,R30
00d155 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A1:
00d156 01de      	MOVW R26,R28
00d157 961e      	ADIW R26,14
00d158 940e 848b 	CALL _LOG_getLastInsert
00d15a 018f      	MOVW R16,R30
00d15b 2311      	TST  R17
00d15c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A2:
00d15d 01de      	MOVW R26,R28
00d15e 961a      	ADIW R26,10
00d15f 940e 84c7 	CALL _LOG_getLastSend
00d161 018f      	MOVW R16,R30
00d162 2311      	TST  R17
00d163 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A3:
                +
00d164 e2ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00d165 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00d166 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00d167 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00d168 940c c3fb 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A4:
00d16a 940e e05b 	CALL __PUTPARD1
00d16c 940e c5f0 	CALL SUBOPT_0xDC
00d16e 940c c11b 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A5:
00d170 940e c5de 	CALL SUBOPT_0xD9
00d172 940e c5d9 	CALL SUBOPT_0xD8
00d174 940e e0cb 	CALL __CPD21
00d176 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2A6:
00d177 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00d178 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00d179 93fa      	ST   -Y,R31
00d17a 93ea      	ST   -Y,R30
00d17b e0e1      	LDI  R30,LOW(1)
00d17c 93ea      	ST   -Y,R30
00d17d ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d17e e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d17f 93fa      	ST   -Y,R31
00d180 93ea      	ST   -Y,R30
00d181 e1a0      	LDI  R26,LOW(16)
00d182 e0b0      	LDI  R27,0
00d183 940e 8525 	CALL _LOG_createFile
00d185 018f      	MOVW R16,R30
00d186 2311      	TST  R17
00d187 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2A7:
00d188 940e 8076 	CALL _SD_readData
00d18a 018f      	MOVW R16,R30
00d18b 2311      	TST  R17
00d18c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2A8:
00d18d 89ea      	LDD  R30,Y+18
00d18e 89fb      	LDD  R31,Y+18+1
00d18f 93fa      	ST   -Y,R31
00d190 93ea      	ST   -Y,R30
00d191 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A9:
00d192 940e c25f 	CALL SUBOPT_0x4F
00d194 940e e05b 	CALL __PUTPARD1
00d196 940c c085 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AA:
00d198 93fa      	ST   -Y,R31
00d199 93ea      	ST   -Y,R30
00d19a 940c c36c 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AB:
00d19c 940e c500 	CALL SUBOPT_0xB5
                +
00d19e 5fe6     +SUBI R30 , LOW ( - 10 )
00d19f 4fff     +SBCI R31 , HIGH ( - 10 )
00d1a0 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00d1a1 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00d1a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2AC:
00d1a3 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00d1a4 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00d1a5 93fa      	ST   -Y,R31
00d1a6 93ea      	ST   -Y,R30
00d1a7 e0e1      	LDI  R30,LOW(1)
00d1a8 93ea      	ST   -Y,R30
00d1a9 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d1aa e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d1ab 93fa      	ST   -Y,R31
00d1ac 93ea      	ST   -Y,R30
00d1ad e1a0      	LDI  R26,LOW(16)
00d1ae e0b0      	LDI  R27,0
00d1af 940e 8525 	CALL _LOG_createFile
00d1b1 018f      	MOVW R16,R30
00d1b2 2311      	TST  R17
00d1b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2AD:
00d1b4 81ec      	LDD  R30,Y+4
00d1b5 81fd      	LDD  R31,Y+4+1
00d1b6 93fa      	ST   -Y,R31
00d1b7 93ea      	ST   -Y,R30
00d1b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2AE:
                +
00d1b9 e0e0     +LDI R30 , LOW ( 0x0 )
00d1ba e0f0     +LDI R31 , HIGH ( 0x0 )
00d1bb e060     +LDI R22 , BYTE3 ( 0x0 )
00d1bc e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d1bd 940e e05b 	CALL __PUTPARD1
00d1bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AF:
                +
00d1c0 e0e4     +LDI R30 , LOW ( 0x4 )
00d1c1 e0f0     +LDI R31 , HIGH ( 0x4 )
00d1c2 e060     +LDI R22 , BYTE3 ( 0x4 )
00d1c3 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00d1c4 940e e05b 	CALL __PUTPARD1
00d1c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2B0:
00d1c7 940e e05b 	CALL __PUTPARD1
                +
00d1c9 01fe     +MOVW R30 , R28
00d1ca 5de5     +SUBI R30 , LOW ( - 555 )
00d1cb 4ffd     +SBCI R31 , HIGH ( - 555 )
00d1cc 9001     +LD R0 , Z +
00d1cd 81f0     +LD R31 , Z
00d1ce 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00d1cf 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2B1:
                +
00d1d1 01fe     +MOVW R30 , R28
00d1d2 5dec     +SUBI R30 , LOW ( - 548 )
00d1d3 4ffd     +SBCI R31 , HIGH ( - 548 )
00d1d4 9001     +LD R0 , Z +
00d1d5 81f0     +LD R31 , Z
00d1d6 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00d1d7 93fa      	ST   -Y,R31
00d1d8 93ea      	ST   -Y,R30
                +
00d1d9 01de     +MOVW R26 , R28
00d1da 5dac     +SUBI R26 , LOW ( - 548 )
00d1db 4fbd     +SBCI R27 , HIGH ( - 548 )
00d1dc 900d     +LD R0 , X +
00d1dd 91bc     +LD R27 , X
00d1de 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00d1df 940c 9ea8 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B2:
00d1e1 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d1e2 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d1e3 93fa      	ST   -Y,R31
00d1e4 93ea      	ST   -Y,R30
00d1e5 e1a0      	LDI  R26,LOW(16)
00d1e6 e0b0      	LDI  R27,0
00d1e7 940e 8525 	CALL _LOG_createFile
00d1e9 018f      	MOVW R16,R30
00d1ea 2311      	TST  R17
00d1eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B3:
                +
00d1ec e3e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00d1ed e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00d1ee e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00d1ef e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00d1f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B4:
00d1f1 940e e05b 	CALL __PUTPARD1
00d1f3 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00d1f4 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00d1f5 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B5:
00d1f7 01df      	MOVW R26,R30
00d1f8 940e e02b 	CALL __GETD1P
00d1fa 81ae      	LDD  R26,Y+6
00d1fb 81bf      	LDD  R27,Y+6+1
00d1fc 940e e036 	CALL __PUTDP1
00d1fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2B6:
00d1ff e0ab      	LDI  R26,LOW(11)
00d200 9f1a      	MUL  R17,R26
00d201 01f0      	MOVW R30,R0
00d202 55e0      	SUBI R30,LOW(-_dataLogQueue)
00d203 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00d204 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x2B7:
00d205 e0a0      	LDI  R26,LOW(0)
00d206 83a0      	STD  Z+0,R26
00d207 e0ab      	LDI  R26,LOW(11)
00d208 9f1a      	MUL  R17,R26
00d209 01f0      	MOVW R30,R0
                +
00d20a 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00d20b 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00d20c 940e c164 	CALL SUBOPT_0x2C
00d20e dd7f      	RCALL SUBOPT_0x25B
00d20f e0ab      	LDI  R26,LOW(11)
00d210 9f1a      	MUL  R17,R26
00d211 01f0      	MOVW R30,R0
                +
00d212 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00d213 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00d214 e0a0      	LDI  R26,LOW(0)
00d215 e0b0      	LDI  R27,HIGH(0)
00d216 83a0      	STD  Z+0,R26
00d217 83b1      	STD  Z+1,R27
00d218 e0ab      	LDI  R26,LOW(11)
00d219 9f1a      	MUL  R17,R26
00d21a 01f0      	MOVW R30,R0
                +
00d21b 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00d21c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00d21d 940e c164 	CALL SUBOPT_0x2C
00d21f cd6e      	RJMP SUBOPT_0x25B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2B8:
                +
00d220 e0a7     +LDI R26 , 7
00d221 9fa0     +MUL R26 , R16
00d222 01f0     +MOVW R30 , R0
00d223 9fa1     +MUL R26 , R17
00d224 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00d225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2B9:
00d226 e0a7      	LDI  R26,LOW(7)
00d227 9f1a      	MUL  R17,R26
00d228 01f0      	MOVW R30,R0
00d229 5ded      	SUBI R30,LOW(-_eventLogQueue)
00d22a 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00d22b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2BA:
00d22c e0a0      	LDI  R26,LOW(0)
00d22d 83a0      	STD  Z+0,R26
00d22e e0a7      	LDI  R26,LOW(7)
00d22f 9f1a      	MUL  R17,R26
00d230 01f0      	MOVW R30,R0
00d231 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2BB:
                +
00d232 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00d233 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00d234 940e c164 	CALL SUBOPT_0x2C
00d236 dd57      	RCALL SUBOPT_0x25B
00d237 e0a7      	LDI  R26,LOW(7)
00d238 9f1a      	MUL  R17,R26
00d239 01f0      	MOVW R30,R0
                +
00d23a 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00d23b 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00d23c cfef      	RJMP SUBOPT_0x2BA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x2BC:
00d23d e0e1      	LDI  R30,LOW(1)
00d23e 93e0 14df 	STS  _currentPage,R30
00d240 e0e0      	LDI  R30,LOW(0)
00d241 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00d243 efe8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d244 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d245 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d246 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d247 940e e05b 	CALL __PUTPARD1
00d249 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d24b 940e df32 	CALL __CBD1
00d24d 940e e05b 	CALL __PUTPARD1
00d24f ce42      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x2BD:
                +
00d250 01fe     +MOVW R30 , R28
00d251 5aea     +SUBI R30 , LOW ( - 86 )
00d252 4fff     +SBCI R31 , HIGH ( - 86 )
00d253 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d254 cb1f      	RJMP SUBOPT_0x213
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:93 WORDS
                 SUBOPT_0x2BE:
00d255 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d257 50a1      	SUBI R26,LOW(1)
00d258 93a0 1a1f 	STS  _cursor_S0160000000,R26
00d25a 30a0      	CPI  R26,0
00d25b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:218 WORDS
                 SUBOPT_0x2BF:
                +
00d25c e0e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00d25d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00d25e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00d25f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00d260 940e e05b 	CALL __PUTPARD1
00d262 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d264 940e df32 	CALL __CBD1
00d266 940e e05b 	CALL __PUTPARD1
00d268 ce29      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x2C0:
00d269 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d26b 5faf      	SUBI R26,-LOW(1)
00d26c 93a0 1a1f 	STS  _cursor_S0160000000,R26
00d26e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x2C1:
00d26f e0e2      	LDI  R30,LOW(2)
00d270 93e0 14df 	STS  _currentPage,R30
00d272 e0e0      	LDI  R30,LOW(0)
00d273 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00d275 e0e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d276 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d277 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d278 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d279 940e e05b 	CALL __PUTPARD1
00d27b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d27d 940e df32 	CALL __CBD1
00d27f 940e e05b 	CALL __PUTPARD1
00d281 ce10      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x2C2:
00d282 93e0 14df 	STS  _currentPage,R30
00d284 e0e0      	LDI  R30,LOW(0)
00d285 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d287 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2C3:
                +
00d288 e0ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d289 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d28a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d28b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d28c 940e e05b 	CALL __PUTPARD1
00d28e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d290 940e df32 	CALL __CBD1
00d292 940e e05b 	CALL __PUTPARD1
00d294 cdfd      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2C4:
                +
00d295 e1e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d296 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d297 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d298 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d299 940e e05b 	CALL __PUTPARD1
00d29b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d29d 940e df32 	CALL __CBD1
00d29f 940e e05b 	CALL __PUTPARD1
00d2a1 cdf0      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C5:
00d2a2 93e0 14df 	STS  _currentPage,R30
00d2a4 e1e5      	LDI  R30,LOW(21)
00d2a5 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d2a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2C6:
00d2a8 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d2aa e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d2ab e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d2ac 93fa      	ST   -Y,R31
00d2ad 93ea      	ST   -Y,R30
00d2ae efef      	LDI  R30,LOW(255)
00d2af 93ea      	ST   -Y,R30
00d2b0 940c c372 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2C7:
00d2b2 940e a59f 	CALL _memset
00d2b4 e0e0      	LDI  R30,LOW(0)
00d2b5 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d2b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2C8:
                +
00d2b8 efee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00d2b9 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00d2ba e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00d2bb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00d2bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2C9:
                +
00d2bd e1ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00d2be e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00d2bf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00d2c0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00d2c1 940e e05b 	CALL __PUTPARD1
00d2c3 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d2c5 940e df32 	CALL __CBD1
00d2c7 940e e05b 	CALL __PUTPARD1
00d2c9 cdc8      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2CA:
00d2ca 93e0 14df 	STS  _currentPage,R30
00d2cc e0e7      	LDI  R30,LOW(7)
00d2cd 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d2cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CB:
                +
00d2d0 e2e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00d2d1 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00d2d2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00d2d3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00d2d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CC:
00d2d5 940e e05b 	CALL __PUTPARD1
                +
00d2d7 e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00d2d8 e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00d2d9 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2CD:
00d2db e3a2      	LDI  R26,LOW(50)
00d2dc e0b0      	LDI  R27,0
00d2dd 940e a59f 	CALL _memset
00d2df 01fe      	MOVW R30,R28
00d2e0 9638      	ADIW R30,8
00d2e1 93fa      	ST   -Y,R31
00d2e2 93ea      	ST   -Y,R30
                +
00d2e3 efed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00d2e4 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00d2e5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00d2e6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00d2e7 940e e05b 	CALL __PUTPARD1
00d2e9 e080      	LDI  R24,0
00d2ea 940e bf54 	CALL _sprintf
00d2ec 9626      	ADIW R28,6
00d2ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2CE:
00d2ee 01fe      	MOVW R30,R28
00d2ef 96fa      	ADIW R30,58
00d2f0 940c c68d 	JMP SUBOPT_0xF6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2CF:
00d2f2 01fe      	MOVW R30,R28
00d2f3 96fa      	ADIW R30,58
00d2f4 93fa      	ST   -Y,R31
00d2f5 93ea      	ST   -Y,R30
00d2f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D0:
00d2f7 e080      	LDI  R24,0
00d2f8 940e bf54 	CALL _sprintf
00d2fa 9626      	ADIW R28,6
00d2fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D1:
00d2fc 01fe      	MOVW R30,R28
00d2fd 9638      	ADIW R30,8
00d2fe 93fa      	ST   -Y,R31
00d2ff 93ea      	ST   -Y,R30
00d300 01de      	MOVW R26,R28
00d301 96dc      	ADIW R26,60
00d302 940e a5af 	CALL _strcat
00d304 cfe9      	RJMP SUBOPT_0x2CE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D2:
                +
00d305 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00d306 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00d307 0fe0      	ADD  R30,R16
00d308 1ff1      	ADC  R31,R17
00d309 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2D3:
00d30a 01f9      	MOVW R30,R18
                +
00d30b 5f2f     +SUBI R18 , LOW ( - 1 )
00d30c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00d30d 01de      	MOVW R26,R28
00d30e 96da      	ADIW R26,58
00d30f 0fae      	ADD  R26,R30
00d310 1fbf      	ADC  R27,R31
00d311 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D4:
00d312 940e e05b 	CALL __PUTPARD1
00d314 01fe      	MOVW R30,R28
00d315 963c      	ADIW R30,12
00d316 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D5:
                +
00d318 01fe     +MOVW R30 , R28
00d319 5aec     +SUBI R30 , LOW ( - 84 )
00d31a 4fff     +SBCI R31 , HIGH ( - 84 )
00d31b 9001     +LD R0 , Z +
00d31c 81f0     +LD R31 , Z
00d31d 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00d31e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D6:
                +
00d31f 01fe     +MOVW R30 , R28
00d320 5aee     +SUBI R30 , LOW ( - 82 )
00d321 4fff     +SBCI R31 , HIGH ( - 82 )
00d322 9001     +LD R0 , Z +
00d323 81f0     +LD R31 , Z
00d324 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00d325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D7:
                +
00d326 01de     +MOVW R26 , R28
00d327 5aac     +SUBI R26 , LOW ( - 84 )
00d328 4fbf     +SBCI R27 , HIGH ( - 84 )
00d329 900d     +LD R0 , X +
00d32a 91bc     +LD R27 , X
00d32b 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00d32c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D8:
00d32d e2ee      	LDI  R30,LOW(_setIp_S0160000000)
00d32e e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00d32f 93fa      	ST   -Y,R31
00d330 93ea      	ST   -Y,R30
00d331 e3ea      	LDI  R30,LOW(_setMask_S0160000000)
00d332 e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00d333 93fa      	ST   -Y,R31
00d334 93ea      	ST   -Y,R30
00d335 e4e6      	LDI  R30,LOW(_setGw_S0160000000)
00d336 e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00d337 93fa      	ST   -Y,R31
00d338 93ea      	ST   -Y,R30
00d339 e5a2      	LDI  R26,LOW(_setServer_S0160000000)
00d33a e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00d33b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2D9:
00d33c 940e e05b 	CALL __PUTPARD1
00d33e 91a0 1a2e 	LDS  R26,_setIp_S0160000000
00d340 e6e4      	LDI  R30,LOW(100)
00d341 9fea      	MUL  R30,R26
00d342 01b0      	MOVW R22,R0
                +
00d343 91a0 1a2f+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00d345 e0ea      	LDI  R30,LOW(10)
00d346 9fea      	MUL  R30,R26
00d347 01f0      	MOVW R30,R0
00d348 01db      	MOVW R26,R22
00d349 0fae      	ADD  R26,R30
00d34a 1fbf      	ADC  R27,R31
                +
00d34b 91e0 1a30+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00d34d e0f0      	LDI  R31,0
00d34e 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DA:
                +
00d350 91a0 1a31+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00d352 e6e4      	LDI  R30,LOW(100)
00d353 9fea      	MUL  R30,R26
00d354 01b0      	MOVW R22,R0
                +
00d355 91a0 1a32+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00d357 e0ea      	LDI  R30,LOW(10)
00d358 9fea      	MUL  R30,R26
00d359 01f0      	MOVW R30,R0
00d35a 01db      	MOVW R26,R22
00d35b 0fae      	ADD  R26,R30
00d35c 1fbf      	ADC  R27,R31
                +
00d35d 91e0 1a33+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00d35f e0f0      	LDI  R31,0
00d360 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DB:
                +
00d362 91a0 1a34+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00d364 e6e4      	LDI  R30,LOW(100)
00d365 9fea      	MUL  R30,R26
00d366 01b0      	MOVW R22,R0
                +
00d367 91a0 1a35+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00d369 e0ea      	LDI  R30,LOW(10)
00d36a 9fea      	MUL  R30,R26
00d36b 01f0      	MOVW R30,R0
00d36c 01db      	MOVW R26,R22
00d36d 0fae      	ADD  R26,R30
00d36e 1fbf      	ADC  R27,R31
                +
00d36f 91e0 1a36+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00d371 e0f0      	LDI  R31,0
00d372 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DC:
                +
00d374 91a0 1a37+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00d376 e6e4      	LDI  R30,LOW(100)
00d377 9fea      	MUL  R30,R26
00d378 01b0      	MOVW R22,R0
                +
00d379 91a0 1a38+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00d37b e0ea      	LDI  R30,LOW(10)
00d37c 9fea      	MUL  R30,R26
00d37d 01f0      	MOVW R30,R0
00d37e 01db      	MOVW R26,R22
00d37f 0fae      	ADD  R26,R30
00d380 1fbf      	ADC  R27,R31
                +
00d381 91e0 1a39+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00d383 e0f0      	LDI  R31,0
00d384 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DD:
00d386 91a0 1a3a 	LDS  R26,_setMask_S0160000000
00d388 e6e4      	LDI  R30,LOW(100)
00d389 9fea      	MUL  R30,R26
00d38a 01b0      	MOVW R22,R0
                +
00d38b 91a0 1a3b+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00d38d e0ea      	LDI  R30,LOW(10)
00d38e 9fea      	MUL  R30,R26
00d38f 01f0      	MOVW R30,R0
00d390 01db      	MOVW R26,R22
00d391 0fae      	ADD  R26,R30
00d392 1fbf      	ADC  R27,R31
                +
00d393 91e0 1a3c+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00d395 e0f0      	LDI  R31,0
00d396 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DE:
                +
00d398 91a0 1a3d+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00d39a e6e4      	LDI  R30,LOW(100)
00d39b 9fea      	MUL  R30,R26
00d39c 01b0      	MOVW R22,R0
                +
00d39d 91a0 1a3e+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00d39f e0ea      	LDI  R30,LOW(10)
00d3a0 9fea      	MUL  R30,R26
00d3a1 01f0      	MOVW R30,R0
00d3a2 01db      	MOVW R26,R22
00d3a3 0fae      	ADD  R26,R30
00d3a4 1fbf      	ADC  R27,R31
                +
00d3a5 91e0 1a3f+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00d3a7 e0f0      	LDI  R31,0
00d3a8 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DF:
                +
00d3aa 91a0 1a40+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00d3ac e6e4      	LDI  R30,LOW(100)
00d3ad 9fea      	MUL  R30,R26
00d3ae 01b0      	MOVW R22,R0
                +
00d3af 91a0 1a41+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00d3b1 e0ea      	LDI  R30,LOW(10)
00d3b2 9fea      	MUL  R30,R26
00d3b3 01f0      	MOVW R30,R0
00d3b4 01db      	MOVW R26,R22
00d3b5 0fae      	ADD  R26,R30
00d3b6 1fbf      	ADC  R27,R31
                +
00d3b7 91e0 1a42+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00d3b9 e0f0      	LDI  R31,0
00d3ba 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E0:
                +
00d3bc 91a0 1a43+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00d3be e6e4      	LDI  R30,LOW(100)
00d3bf 9fea      	MUL  R30,R26
00d3c0 01b0      	MOVW R22,R0
                +
00d3c1 91a0 1a44+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00d3c3 e0ea      	LDI  R30,LOW(10)
00d3c4 9fea      	MUL  R30,R26
00d3c5 01f0      	MOVW R30,R0
00d3c6 01db      	MOVW R26,R22
00d3c7 0fae      	ADD  R26,R30
00d3c8 1fbf      	ADC  R27,R31
                +
00d3c9 91e0 1a45+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00d3cb e0f0      	LDI  R31,0
00d3cc 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E1:
00d3ce 91a0 1a46 	LDS  R26,_setGw_S0160000000
00d3d0 e6e4      	LDI  R30,LOW(100)
00d3d1 9fea      	MUL  R30,R26
00d3d2 01b0      	MOVW R22,R0
                +
00d3d3 91a0 1a47+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00d3d5 e0ea      	LDI  R30,LOW(10)
00d3d6 9fea      	MUL  R30,R26
00d3d7 01f0      	MOVW R30,R0
00d3d8 01db      	MOVW R26,R22
00d3d9 0fae      	ADD  R26,R30
00d3da 1fbf      	ADC  R27,R31
                +
00d3db 91e0 1a48+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00d3dd e0f0      	LDI  R31,0
00d3de 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E2:
                +
00d3e0 91a0 1a49+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00d3e2 e6e4      	LDI  R30,LOW(100)
00d3e3 9fea      	MUL  R30,R26
00d3e4 01b0      	MOVW R22,R0
                +
00d3e5 91a0 1a4a+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00d3e7 e0ea      	LDI  R30,LOW(10)
00d3e8 9fea      	MUL  R30,R26
00d3e9 01f0      	MOVW R30,R0
00d3ea 01db      	MOVW R26,R22
00d3eb 0fae      	ADD  R26,R30
00d3ec 1fbf      	ADC  R27,R31
                +
00d3ed 91e0 1a4b+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00d3ef e0f0      	LDI  R31,0
00d3f0 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E3:
                +
00d3f2 91a0 1a4c+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00d3f4 e6e4      	LDI  R30,LOW(100)
00d3f5 9fea      	MUL  R30,R26
00d3f6 01b0      	MOVW R22,R0
                +
00d3f7 91a0 1a4d+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00d3f9 e0ea      	LDI  R30,LOW(10)
00d3fa 9fea      	MUL  R30,R26
00d3fb 01f0      	MOVW R30,R0
00d3fc 01db      	MOVW R26,R22
00d3fd 0fae      	ADD  R26,R30
00d3fe 1fbf      	ADC  R27,R31
                +
00d3ff 91e0 1a4e+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00d401 e0f0      	LDI  R31,0
00d402 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E4:
                +
00d404 91a0 1a4f+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00d406 e6e4      	LDI  R30,LOW(100)
00d407 9fea      	MUL  R30,R26
00d408 01b0      	MOVW R22,R0
                +
00d409 91a0 1a50+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00d40b e0ea      	LDI  R30,LOW(10)
00d40c 9fea      	MUL  R30,R26
00d40d 01f0      	MOVW R30,R0
00d40e 01db      	MOVW R26,R22
00d40f 0fae      	ADD  R26,R30
00d410 1fbf      	ADC  R27,R31
                +
00d411 91e0 1a51+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00d413 e0f0      	LDI  R31,0
00d414 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E5:
00d416 91a0 1a52 	LDS  R26,_setServer_S0160000000
00d418 e6e4      	LDI  R30,LOW(100)
00d419 9fea      	MUL  R30,R26
00d41a 01b0      	MOVW R22,R0
                +
00d41b 91a0 1a53+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00d41d e0ea      	LDI  R30,LOW(10)
00d41e 9fea      	MUL  R30,R26
00d41f 01f0      	MOVW R30,R0
00d420 01db      	MOVW R26,R22
00d421 0fae      	ADD  R26,R30
00d422 1fbf      	ADC  R27,R31
                +
00d423 91e0 1a54+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00d425 e0f0      	LDI  R31,0
00d426 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E6:
                +
00d428 91a0 1a55+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00d42a e6e4      	LDI  R30,LOW(100)
00d42b 9fea      	MUL  R30,R26
00d42c 01b0      	MOVW R22,R0
                +
00d42d 91a0 1a56+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00d42f e0ea      	LDI  R30,LOW(10)
00d430 9fea      	MUL  R30,R26
00d431 01f0      	MOVW R30,R0
00d432 01db      	MOVW R26,R22
00d433 0fae      	ADD  R26,R30
00d434 1fbf      	ADC  R27,R31
                +
00d435 91e0 1a57+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00d437 e0f0      	LDI  R31,0
00d438 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E7:
                +
00d43a 91a0 1a58+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00d43c e6e4      	LDI  R30,LOW(100)
00d43d 9fea      	MUL  R30,R26
00d43e 01b0      	MOVW R22,R0
                +
00d43f 91a0 1a59+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00d441 e0ea      	LDI  R30,LOW(10)
00d442 9fea      	MUL  R30,R26
00d443 01f0      	MOVW R30,R0
00d444 01db      	MOVW R26,R22
00d445 0fae      	ADD  R26,R30
00d446 1fbf      	ADC  R27,R31
                +
00d447 91e0 1a5a+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00d449 e0f0      	LDI  R31,0
00d44a 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E8:
                +
00d44c 91a0 1a5b+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00d44e e6e4      	LDI  R30,LOW(100)
00d44f 9fea      	MUL  R30,R26
00d450 01b0      	MOVW R22,R0
                +
00d451 91a0 1a5c+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00d453 e0ea      	LDI  R30,LOW(10)
00d454 9fea      	MUL  R30,R26
00d455 01f0      	MOVW R30,R0
00d456 01db      	MOVW R26,R22
00d457 0fae      	ADD  R26,R30
00d458 1fbf      	ADC  R27,R31
                +
00d459 91e0 1a5d+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00d45b e0f0      	LDI  R31,0
00d45c 940c cb33 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2E9:
00d45e 940e e05b 	CALL __PUTPARD1
00d460 cc5a      	RJMP SUBOPT_0x289
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2EA:
                +
00d461 01fe     +MOVW R30 , R28
00d462 5aea     +SUBI R30 , LOW ( - 86 )
00d463 4fff     +SBCI R31 , HIGH ( - 86 )
00d464 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d465 e0f0      	LDI  R31,0
00d466 30e2      	CPI  R30,LOW(0x2)
00d467 e0a0      	LDI  R26,HIGH(0x2)
00d468 07fa      	CPC  R31,R26
00d469 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2EB:
00d46a 93e0 14df 	STS  _currentPage,R30
00d46c e0e1      	LDI  R30,LOW(1)
00d46d 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d46f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EC:
00d470 93e0 14df 	STS  _currentPage,R30
00d472 e0e2      	LDI  R30,LOW(2)
00d473 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d475 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2ED:
                +
00d476 e0e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d477 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d478 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d479 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d47a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:501 WORDS
                 SUBOPT_0x2EE:
00d47b 940e e05b 	CALL __PUTPARD1
00d47d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d47f 940e df32 	CALL __CBD1
00d481 940e e05b 	CALL __PUTPARD1
00d483 cc0e      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2EF:
00d484 940e e05b 	CALL __PUTPARD1
00d486 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00d488 940c c2f3 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F0:
                +
00d48a e0e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00d48b e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00d48c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00d48d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00d48e cfec      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2F1:
                +
00d48f e1ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d490 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d491 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d492 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d493 940e e05b 	CALL __PUTPARD1
00d495 01f8      	MOVW R30,R16
00d496 caa9      	RJMP SUBOPT_0x250
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2F2:
00d497 0fa0      	ADD  R26,R16
00d498 1fb1      	ADC  R27,R17
00d499 91ec      	LD   R30,X
00d49a 940c c2f3 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F3:
                +
00d49c e2e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00d49d e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00d49e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00d49f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00d4a0 cfda      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2F4:
00d4a1 940e e05b 	CALL __PUTPARD1
00d4a3 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4a5 e0f0      	LDI  R31,0
00d4a6 fde7      	SBRC R30,7
00d4a7 efff      	SER  R31
00d4a8 9632      	ADIW R30,2
00d4a9 ca96      	RJMP SUBOPT_0x250
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F5:
                +
00d4aa e4e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d4ab e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d4ac e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d4ad e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d4ae cff2      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F6:
00d4af eba6      	LDI  R26,LOW(_operating_config)
00d4b0 e1b1      	LDI  R27,HIGH(_operating_config)
00d4b1 940e 4e69 	CALL _setOperatingConfig
00d4b3 01af      	MOVW R20,R30
00d4b4 2355      	TST  R21
00d4b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F7:
                +
00d4b6 e7e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00d4b7 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00d4b8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00d4b9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00d4ba 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F8:
00d4bc e0e8      	LDI  R30,LOW(8)
00d4bd 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d4bf e0e0      	LDI  R30,LOW(0)
00d4c0 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d4c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2F9:
                +
00d4c3 eae4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00d4c4 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00d4c5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00d4c6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00d4c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2FA:
                +
00d4c8 eae7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00d4c9 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00d4ca e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00d4cb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00d4cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2FB:
                +
00d4cd eaea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00d4ce e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00d4cf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00d4d0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00d4d1 cfa9      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2FC:
00d4d2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d4d4 e0b0      	LDI  R27,0
00d4d5 fda7      	SBRC R26,7
00d4d6 efbf      	SER  R27
00d4d7 e0e3      	LDI  R30,LOW(3)
00d4d8 e0f0      	LDI  R31,HIGH(3)
00d4d9 940e dfe8 	CALL __MODW21
00d4db 9730      	SBIW R30,0
00d4dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2FD:
00d4dd 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d4df e0b0      	LDI  R27,0
00d4e0 5da2      	SUBI R26,LOW(-_setIp_S0160000000)
00d4e1 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00d4e2 91ec      	LD   R30,X
00d4e3 5fef      	SUBI R30,-LOW(1)
00d4e4 93ec      	ST   X,R30
00d4e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2FE:
00d4e6 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4e8 e0f0      	LDI  R31,0
00d4e9 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
00d4ea 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00d4eb e0a0      	LDI  R26,LOW(0)
00d4ec 83a0      	STD  Z+0,R26
00d4ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2FF:
                +
00d4ee e1ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d4ef e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d4f0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d4f1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d4f2 940e e05b 	CALL __PUTPARD1
00d4f4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4f6 940e df32 	CALL __CBD1
00d4f8 940e e05b 	CALL __PUTPARD1
00d4fa 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4fc e0f0      	LDI  R31,0
00d4fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x300:
00d4fe 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d500 e0b0      	LDI  R27,0
00d501 5ca6      	SUBI R26,LOW(-_setMask_S0160000000)
00d502 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00d503 91ec      	LD   R30,X
00d504 5fef      	SUBI R30,-LOW(1)
00d505 93ec      	ST   X,R30
00d506 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x301:
00d507 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d509 e0f0      	LDI  R31,0
00d50a 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
00d50b 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00d50c e0a0      	LDI  R26,LOW(0)
00d50d 83a0      	STD  Z+0,R26
00d50e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x302:
00d50f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d511 e0b0      	LDI  R27,0
00d512 5baa      	SUBI R26,LOW(-_setGw_S0160000000)
00d513 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00d514 91ec      	LD   R30,X
00d515 5fef      	SUBI R30,-LOW(1)
00d516 93ec      	ST   X,R30
00d517 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x303:
00d518 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d51a e0f0      	LDI  R31,0
00d51b 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
00d51c 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00d51d e0a0      	LDI  R26,LOW(0)
00d51e 83a0      	STD  Z+0,R26
00d51f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x304:
00d520 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d522 e0b0      	LDI  R27,0
00d523 5aae      	SUBI R26,LOW(-_setServer_S0160000000)
00d524 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00d525 91ec      	LD   R30,X
00d526 5fef      	SUBI R30,-LOW(1)
00d527 93ec      	ST   X,R30
00d528 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x305:
00d529 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d52b e0f0      	LDI  R31,0
00d52c 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
00d52d 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00d52e e0a0      	LDI  R26,LOW(0)
00d52f 83a0      	STD  Z+0,R26
00d530 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x306:
00d531 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d533 e0e0      	LDI  R30,LOW(0)
00d534 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d536 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x307:
                +
00d537 efe8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d538 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d539 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d53a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d53b cf3f      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x308:
00d53c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d53e e0b0      	LDI  R27,0
00d53f fda7      	SBRC R26,7
00d540 efbf      	SER  R27
00d541 940c 9735 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x309:
00d543 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d545 e0b0      	LDI  R27,0
00d546 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30A:
00d547 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d549 e0f0      	LDI  R31,0
00d54a 5ae0      	SUBI R30,LOW(-_prbEn_S0160000000)
00d54b 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00d54c 81e0      	LD   R30,Z
00d54d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x30B:
00d54e 93ec      	ST   X,R30
                +
00d54f e4e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d550 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d551 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d552 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d553 940e e05b 	CALL __PUTPARD1
00d555 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x30C:
00d556 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d558 940e df32 	CALL __CBD1
00d55a 940e e05b 	CALL __PUTPARD1
00d55c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30D:
00d55d e2e4      	LDI  R30,LOW(36)
00d55e 93e0 14df 	STS  _currentPage,R30
00d560 e0ee      	LDI  R30,LOW(14)
00d561 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d563 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30E:
                +
00d564 e1e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00d565 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00d566 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00d567 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00d568 cf12      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30F:
00d569 e2e4      	LDI  R30,LOW(36)
00d56a 93e0 14df 	STS  _currentPage,R30
00d56c e1e1      	LDI  R30,LOW(17)
00d56d 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d56f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x310:
                +
00d570 e1ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00d571 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00d572 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00d573 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00d574 cf06      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x311:
                +
00d575 e2e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00d576 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00d577 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00d578 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00d579 cf01      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x312:
00d57a e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
00d57b e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00d57c 93fa      	ST   -Y,R31
00d57d 93ea      	ST   -Y,R30
00d57e efef      	LDI  R30,LOW(255)
00d57f 93ea      	ST   -Y,R30
00d580 940c c372 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x313:
00d582 91ec      	LD   R30,X
00d583 5fef      	SUBI R30,-LOW(1)
00d584 93ec      	ST   X,R30
00d585 30ea      	CPI  R30,LOW(0xA)
00d586 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x314:
00d587 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d589 e0f0      	LDI  R31,0
00d58a 5dea      	SUBI R30,LOW(-_newPwd_S0160000000)
00d58b 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00d58c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x315:
                +
00d58d e2ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00d58e e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00d58f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00d590 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00d591 940e e05b 	CALL __PUTPARD1
00d593 cfc2      	RJMP SUBOPT_0x30C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x316:
00d594 81e0      	LD   R30,Z
00d595 940e df32 	CALL __CBD1
00d597 caf7      	RJMP SUBOPT_0x283
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x317:
00d598 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00d599 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00d59a 93fa      	ST   -Y,R31
00d59b 93ea      	ST   -Y,R30
00d59c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x318:
00d59d efef      	LDI  R30,LOW(255)
00d59e 93ea      	ST   -Y,R30
00d59f 940c c372 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x319:
                +
00d5a1 01fe     +MOVW R30 , R28
00d5a2 5be0     +SUBI R30 , LOW ( - 80 )
00d5a3 4fff     +SBCI R31 , HIGH ( - 80 )
00d5a4 9001     +LD R0 , Z +
00d5a5 81f0     +LD R31 , Z
00d5a6 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00d5a7 93fa      	ST   -Y,R31
00d5a8 93ea      	ST   -Y,R30
00d5a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31A:
00d5aa 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d5ac e0f0      	LDI  R31,0
00d5ad 5de6      	SUBI R30,LOW(-_confPwd_S0160000000)
00d5ae 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00d5af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31B:
00d5b0 e0e1      	LDI  R30,LOW(1)
00d5b1 93e0 14df 	STS  _currentPage,R30
00d5b3 e0e3      	LDI  R30,LOW(3)
00d5b4 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d5b6 cf80      	RJMP SUBOPT_0x307
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31C:
                +
00d5b7 e6e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00d5b8 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00d5b9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00d5ba e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00d5bb 940e e05b 	CALL __PUTPARD1
00d5bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x31D:
                +
00d5be e7e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00d5bf e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00d5c0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00d5c1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00d5c2 940e e05b 	CALL __PUTPARD1
00d5c4 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d5c6 e0f0      	LDI  R31,0
00d5c7 940c ccdc 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x31E:
                +
00d5c9 e7e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00d5ca e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00d5cb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00d5cc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00d5cd 940e e05b 	CALL __PUTPARD1
00d5cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x31F:
00d5d0 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d5d2 e0f0      	LDI  R31,0
00d5d3 940c ccdc 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x320:
                +
00d5d5 e8e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00d5d6 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00d5d7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00d5d8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00d5d9 cea1      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x321:
                +
00d5da e8e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00d5db e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00d5dc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00d5dd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00d5de ce9c      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x322:
00d5df 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d5e1 e0f0      	LDI  R31,0
00d5e2 59ea      	SUBI R30,LOW(-_vRef_S0160000000)
00d5e3 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00d5e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x323:
                +
00d5e5 e8ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00d5e6 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00d5e7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00d5e8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00d5e9 ce91      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x324:
00d5ea 91a0 1a69 	LDS  R26,_prb1_S0160000000
00d5ec 5faf      	SUBI R26,-LOW(1)
00d5ed 93a0 1a69 	STS  _prb1_S0160000000,R26
00d5ef 30a5      	CPI  R26,LOW(0x5)
00d5f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x325:
                +
00d5f1 e9e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00d5f2 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00d5f3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00d5f4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00d5f5 940e e05b 	CALL __PUTPARD1
00d5f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x326:
00d5f8 91e0 1a6a 	LDS  R30,_prb2_S0160000000
00d5fa e0f0      	LDI  R31,0
00d5fb 940c ccdc 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x327:
                +
00d5fd e9e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00d5fe e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00d5ff e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00d600 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00d601 940e e05b 	CALL __PUTPARD1
00d603 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x328:
00d604 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d606 e0f0      	LDI  R31,0
00d607 93fa      	ST   -Y,R31
00d608 93ea      	ST   -Y,R30
00d609 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x329:
00d60a 93e0 14df 	STS  _currentPage,R30
00d60c e1e8      	LDI  R30,LOW(24)
00d60d 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d60f e1e9      	LDI  R30,LOW(25)
00d610 cf20      	RJMP SUBOPT_0x306
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32A:
                +
00d611 e9ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
00d612 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
00d613 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00d614 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
00d615 ce65      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32B:
00d616 93fa      	ST   -Y,R31
00d617 93ea      	ST   -Y,R30
00d618 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00d619 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00d61a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32C:
                +
00d61b eaee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
00d61c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
00d61d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
00d61e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
00d61f 940e e05b 	CALL __PUTPARD1
00d621 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32D:
                +
00d622 eceb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 979 ) )
00d623 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 979 ) )
00d624 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 979 ) )
00d625 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 979 ) )
                 	__POINTD1FN _0x2C0000,979
00d626 ce54      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32E:
00d627 e2e5      	LDI  R30,LOW(37)
00d628 93e0 14df 	STS  _currentPage,R30
00d62a e1eb      	LDI  R30,LOW(27)
00d62b 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d62d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32F:
00d62e e2e4      	LDI  R30,LOW(36)
00d62f 93e0 14df 	STS  _currentPage,R30
00d631 e1eb      	LDI  R30,LOW(27)
00d632 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d634 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x330:
00d635 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d637 e0f0      	LDI  R31,0
00d638 59e5      	SUBI R30,LOW(-_calPnt_S0160000000)
00d639 4ef5      	SBCI R31,HIGH(-_calPnt_S0160000000)
00d63a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x331:
                +
00d63b e0ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d63c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d63d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d63e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d63f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x332:
                +
00d640 e1e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d641 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d642 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d643 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d644 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x333:
00d645 e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d646 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d647 93fa      	ST   -Y,R31
00d648 93ea      	ST   -Y,R30
00d649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x334:
                +
00d64a ede1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 985 ) )
00d64b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 985 ) )
00d64c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 985 ) )
00d64d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 985 ) )
                 	__POINTD1FN _0x2C0000,985
00d64e ce0f      	RJMP SUBOPT_0x2E9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x335:
00d64f 91e0 1a20 	LDS  R30,_tmpNextPage_S0160000000
00d651 e0f0      	LDI  R31,0
00d652 30e7      	CPI  R30,LOW(0x7)
00d653 e0a0      	LDI  R26,HIGH(0x7)
00d654 07fa      	CPC  R31,R26
00d655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x336:
00d656 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d658 e0f0      	LDI  R31,0
00d659 5dee      	SUBI R30,LOW(-_entPwd_S0160000000)
00d65a 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00d65b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x337:
00d65c 93e0 14df 	STS  _currentPage,R30
00d65e 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00d660 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x338:
00d661 940e e027 	CALL __GETW1P
00d663 93fa      	ST   -Y,R31
00d664 93ea      	ST   -Y,R30
00d665 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x339:
00d666 8def      	LDD  R30,Y+31
00d667 940e df32 	CALL __CBD1
00d669 940c c0b0 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33A:
00d66b a9a8      	LDD  R26,Y+48
00d66c a9b9      	LDD  R27,Y+48+1
00d66d e1ed      	LDI  R30,LOW(29)
00d66e 940e df79 	CALL __MULB1W2U
                +
00d670 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00d671 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00d672 940c c375 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x33B:
00d674 940e e05b 	CALL __PUTPARD1
00d676 ada8      	LDD  R26,Y+56
00d677 adb9      	LDD  R27,Y+56+1
00d678 e1ed      	LDI  R30,LOW(29)
00d679 940e df79 	CALL __MULB1W2U
                +
00d67b 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00d67c 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00d67d 940c c375 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33C:
00d67f adac      	LDD  R26,Y+60
00d680 adbd      	LDD  R27,Y+60+1
00d681 e1ed      	LDI  R30,LOW(29)
00d682 940e df79 	CALL __MULB1W2U
                +
00d684 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00d685 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00d686 940c c375 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33D:
                +
00d688 01de     +MOVW R26 , R28
00d689 5ca0     +SUBI R26 , LOW ( - 64 )
00d68a 4fbf     +SBCI R27 , HIGH ( - 64 )
00d68b 900d     +LD R0 , X +
00d68c 91bc     +LD R27 , X
00d68d 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00d68e c95b      	RJMP SUBOPT_0x269
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x33E:
00d68f 940e e05b 	CALL __PUTPARD1
                +
00d691 01de     +MOVW R26 , R28
00d692 5bac     +SUBI R26 , LOW ( - 68 )
00d693 4fbf     +SBCI R27 , HIGH ( - 68 )
00d694 900d     +LD R0 , X +
00d695 91bc     +LD R27 , X
00d696 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00d697 e1ed      	LDI  R30,LOW(29)
00d698 940e df79 	CALL __MULB1W2U
                +
00d69a 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00d69b 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00d69c 940c c375 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33F:
00d69e 93ba      	ST   -Y,R27
00d69f 93aa      	ST   -Y,R26
00d6a0 9722      	SBIW R28,2
00d6a1 940e e0d0 	CALL __SAVELOCR6
00d6a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x340:
00d6a4 940e e05b 	CALL __PUTPARD1
00d6a6 01fa      	MOVW R30,R20
00d6a7 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x341:
00d6a9 01da      	MOVW R26,R20
00d6aa e6e4      	LDI  R30,LOW(100)
00d6ab e0f0      	LDI  R31,HIGH(100)
00d6ac 940e df97 	CALL __DIVW21U
00d6ae 85a8      	LDD  R26,Y+8
00d6af 85b9      	LDD  R27,Y+8+1
00d6b0 93ec      	ST   X,R30
00d6b1 01da      	MOVW R26,R20
00d6b2 e6e4      	LDI  R30,LOW(100)
00d6b3 e0f0      	LDI  R31,HIGH(100)
00d6b4 940e dfe5 	CALL __MODW21U
00d6b6 01df      	MOVW R26,R30
00d6b7 e0ea      	LDI  R30,LOW(10)
00d6b8 e0f0      	LDI  R31,HIGH(10)
00d6b9 940e df97 	CALL __DIVW21U
                +
00d6bb 85a8     +LDD R26 , Y + 8
00d6bc 85b9     +LDD R27 , Y + 8 + 1
00d6bd 9611     +ADIW R26 , 1
00d6be 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d6bf 01da      	MOVW R26,R20
00d6c0 e6e4      	LDI  R30,LOW(100)
00d6c1 e0f0      	LDI  R31,HIGH(100)
00d6c2 940e dfe5 	CALL __MODW21U
00d6c4 01df      	MOVW R26,R30
00d6c5 e0ea      	LDI  R30,LOW(10)
00d6c6 e0f0      	LDI  R31,HIGH(10)
00d6c7 940e dfe5 	CALL __MODW21U
                +
00d6c9 85a8     +LDD R26 , Y + 8
00d6ca 85b9     +LDD R27 , Y + 8 + 1
00d6cb 9612     +ADIW R26 , 2
00d6cc 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d6cd 85a8      	LDD  R26,Y+8
00d6ce 85b9      	LDD  R27,Y+8+1
00d6cf 9613      	ADIW R26,3
00d6d0 e0e2      	LDI  R30,LOW(2)
00d6d1 93ec      	ST   X,R30
00d6d2 e0e0      	LDI  R30,LOW(0)
00d6d3 e0f0      	LDI  R31,HIGH(0)
00d6d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x342:
00d6d5 940e e05b 	CALL __PUTPARD1
00d6d7 01f8      	MOVW R30,R16
00d6d8 940c c1a4 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x343:
00d6da 01d8      	MOVW R26,R16
00d6db e6e4      	LDI  R30,LOW(100)
00d6dc e0f0      	LDI  R31,HIGH(100)
00d6dd 940e df97 	CALL __DIVW21U
00d6df 85a8      	LDD  R26,Y+8
00d6e0 85b9      	LDD  R27,Y+8+1
00d6e1 93ec      	ST   X,R30
00d6e2 01d8      	MOVW R26,R16
00d6e3 e6e4      	LDI  R30,LOW(100)
00d6e4 e0f0      	LDI  R31,HIGH(100)
00d6e5 940e dfe5 	CALL __MODW21U
00d6e7 01df      	MOVW R26,R30
00d6e8 e0ea      	LDI  R30,LOW(10)
00d6e9 e0f0      	LDI  R31,HIGH(10)
00d6ea 940e df97 	CALL __DIVW21U
                +
00d6ec 85a8     +LDD R26 , Y + 8
00d6ed 85b9     +LDD R27 , Y + 8 + 1
00d6ee 9611     +ADIW R26 , 1
00d6ef 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d6f0 01d8      	MOVW R26,R16
00d6f1 e6e4      	LDI  R30,LOW(100)
00d6f2 e0f0      	LDI  R31,HIGH(100)
00d6f3 940e dfe5 	CALL __MODW21U
00d6f5 01df      	MOVW R26,R30
00d6f6 e0ea      	LDI  R30,LOW(10)
00d6f7 e0f0      	LDI  R31,HIGH(10)
00d6f8 940e dfe5 	CALL __MODW21U
                +
00d6fa 85a8     +LDD R26 , Y + 8
00d6fb 85b9     +LDD R27 , Y + 8 + 1
00d6fc 9612     +ADIW R26 , 2
00d6fd 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d6fe 85a8      	LDD  R26,Y+8
00d6ff 85b9      	LDD  R27,Y+8+1
00d700 9613      	ADIW R26,3
00d701 e0e1      	LDI  R30,LOW(1)
00d702 93ec      	ST   X,R30
00d703 e0e0      	LDI  R30,LOW(0)
00d704 e0f0      	LDI  R31,HIGH(0)
00d705 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x344:
00d706 85aa      	LDD  R26,Y+10
00d707 85bb      	LDD  R27,Y+10+1
00d708 e6e4      	LDI  R30,LOW(100)
00d709 e0f0      	LDI  R31,HIGH(100)
00d70a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x345:
00d70b e8a9      	LDI  R26,LOW(_eep_vref_val)
00d70c e0b5      	LDI  R27,HIGH(_eep_vref_val)
00d70d 940e e07f 	CALL __EEPROMRDD
00d70f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x346:
                +
00d710 87ea     +STD Y + 10 , R30
00d711 87fb     +STD Y + 10 + 1 , R31
00d712 876c     +STD Y + 10 + 2 , R22
00d713 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d714 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x347:
00d715 940e c5cd 	CALL SUBOPT_0xD5
00d717 940e e05b 	CALL __PUTPARD1
00d719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x348:
00d71a 01f9      	MOVW R30,R18
00d71b 9634      	ADIW R30,4
00d71c 170e      	CP   R16,R30
00d71d 071f      	CPC  R17,R31
00d71e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x349:
00d71f 01f8      	MOVW R30,R16
00d720 1be2      	SUB  R30,R18
00d721 0bf3      	SBC  R31,R19
00d722 01de      	MOVW R26,R28
00d723 9650      	ADIW R26,16
00d724 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x34A:
00d725 01f8      	MOVW R30,R16
00d726 0fee      	LSL  R30
00d727 1fff      	ROL  R31
00d728 8dac      	LDD  R26,Y+28
00d729 8dbd      	LDD  R27,Y+28+1
00d72a 0fae      	ADD  R26,R30
00d72b 1fbf      	ADC  R27,R31
00d72c 91ac      	LD   R26,X
00d72d 940e 9aba 	CALL _h2i
00d72f e1a0      	LDI  R26,LOW(16)
00d730 02ea      	MULS R30,R26
00d731 01f0      	MOVW R30,R0
00d732 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x34B:
00d733 01f8      	MOVW R30,R16
00d734 0fee      	LSL  R30
00d735 1fff      	ROL  R31
00d736 9631      	ADIW R30,1
00d737 8dac      	LDD  R26,Y+28
00d738 8dbd      	LDD  R27,Y+28+1
00d739 0fae      	ADD  R26,R30
00d73a 1fbf      	ADC  R27,R31
00d73b 91ac      	LD   R26,X
00d73c 940c 9aba 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x34C:
00d73e 93ec      	ST   X,R30
00d73f 01d8      	MOVW R26,R16
00d740 1ba2      	SUB  R26,R18
00d741 0bb3      	SBC  R27,R19
00d742 e0e3      	LDI  R30,LOW(3)
00d743 e0f0      	LDI  R31,HIGH(3)
00d744 940e df7f 	CALL __MULW12
00d746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34D:
00d747 8daa      	LDD  R26,Y+26
00d748 8dbb      	LDD  R27,Y+26+1
00d749 0fea      	ADD  R30,R26
00d74a 1ffb      	ADC  R31,R27
00d74b 01bf      	MOVW R22,R30
00d74c cfd2      	RJMP SUBOPT_0x349
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x34E:
00d74d 0fae      	ADD  R26,R30
00d74e 1fbf      	ADC  R27,R31
00d74f 91ec      	LD   R30,X
00d750 e0f0      	LDI  R31,0
00d751 01df      	MOVW R26,R30
00d752 e6e4      	LDI  R30,LOW(100)
00d753 e0f0      	LDI  R31,HIGH(100)
00d754 940e dfaa 	CALL __DIVW21
00d756 01db      	MOVW R26,R22
00d757 cfe6      	RJMP SUBOPT_0x34C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34F:
00d758 0fae      	ADD  R26,R30
00d759 1fbf      	ADC  R27,R31
00d75a 91ac      	LD   R26,X
00d75b 27bb      	CLR  R27
00d75c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x350:
00d75d 01df      	MOVW R26,R30
00d75e e0ea      	LDI  R30,LOW(10)
00d75f e0f0      	LDI  R31,HIGH(10)
00d760 940e dfaa 	CALL __DIVW21
00d762 01db      	MOVW R26,R22
00d763 cfda      	RJMP SUBOPT_0x34C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x351:
00d764 01f8      	MOVW R30,R16
00d765 1be2      	SUB  R30,R18
00d766 0bf3      	SBC  R31,R19
00d767 01de      	MOVW R26,R28
00d768 961c      	ADIW R26,12
00d769 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x352:
00d76a 8da8      	LDD  R26,Y+24
00d76b 8db9      	LDD  R27,Y+24+1
00d76c 0fea      	ADD  R30,R26
00d76d 1ffb      	ADC  R31,R27
00d76e 01bf      	MOVW R22,R30
00d76f cff4      	RJMP SUBOPT_0x351
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x353:
00d770 01f8      	MOVW R30,R16
00d771 1be2      	SUB  R30,R18
00d772 0bf3      	SBC  R31,R19
00d773 01de      	MOVW R26,R28
00d774 9618      	ADIW R26,8
00d775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x354:
00d776 89ae      	LDD  R26,Y+22
00d777 89bf      	LDD  R27,Y+22+1
00d778 0fea      	ADD  R30,R26
00d779 1ffb      	ADC  R31,R27
00d77a 01bf      	MOVW R22,R30
00d77b cff4      	RJMP SUBOPT_0x353
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x355:
00d77c 89ac      	LDD  R26,Y+20
00d77d 89bd      	LDD  R27,Y+20+1
00d77e 0fea      	ADD  R30,R26
00d77f 1ffb      	ADC  R31,R27
00d780 01bf      	MOVW R22,R30
00d781 01f8      	MOVW R30,R16
00d782 1be2      	SUB  R30,R18
00d783 0bf3      	SBC  R31,R19
00d784 940c c920 	JMP SUBOPT_0x166
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x356:
00d786 91ec      	LD   R30,X
00d787 e0f0      	LDI  R31,0
00d788 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x357:
00d789 81e8      	LD   R30,Y
00d78a e0f0      	LDI  R31,0
00d78b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x358:
00d78c 01de      	MOVW R26,R28
00d78d 965e      	ADIW R26,30
00d78e 0fae      	ADD  R26,R30
00d78f 1fbf      	ADC  R27,R31
00d790 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x359:
00d791 e0e0      	LDI  R30,LOW(0)
00d792 a3ea      	STD  Y+34,R30
00d793 01de      	MOVW R26,R28
00d794 965e      	ADIW R26,30
00d795 940c a274 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x35A:
00d797 e0e0      	LDI  R30,LOW(0)
00d798 a3e8      	STD  Y+32,R30
00d799 01de      	MOVW R26,R28
00d79a 965e      	ADIW R26,30
00d79b 940c a274 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x35B:
                +
00d79d 87e8     +STD Y + 8 , R30
00d79e 87f9     +STD Y + 8 + 1 , R31
00d79f 876a     +STD Y + 8 + 2 , R22
00d7a0 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00d7a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35C:
                +
00d7a2 8be8     +STD Y + 16 , R30
00d7a3 8bf9     +STD Y + 16 + 1 , R31
00d7a4 8b6a     +STD Y + 16 + 2 , R22
00d7a5 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00d7a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x35D:
                +
00d7a7 8bec     +STD Y + 20 , R30
00d7a8 8bfd     +STD Y + 20 + 1 , R31
00d7a9 8b6e     +STD Y + 20 + 2 , R22
00d7aa 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00d7ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35E:
00d7ac 940e e05b 	CALL __PUTPARD1
                +
00d7ae 8dec     +LDD R30 , Y + 28
00d7af 8dfd     +LDD R31 , Y + 28 + 1
00d7b0 8d6e     +LDD R22 , Y + 28 + 2
00d7b1 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
00d7b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35F:
                +
00d7b3 e9e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 255 ) )
00d7b4 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 255 ) )
00d7b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 255 ) )
00d7b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 255 ) )
                 	__POINTD1FN _0x2E0000,255
00d7b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x360:
00d7b8 01de      	MOVW R26,R28
00d7b9 9611      	ADIW R26,1
00d7ba 0fae      	ADD  R26,R30
00d7bb 1fbf      	ADC  R27,R31
00d7bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x361:
00d7bd e0e9      	LDI  R30,LOW(9)
00d7be e0f0      	LDI  R31,HIGH(9)
00d7bf 93e0 10f4 	STS  _hwCalId,R30
00d7c1 93f0 10f5 	STS  _hwCalId+1,R31
00d7c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x362:
00d7c4 940e e05b 	CALL __PUTPARD1
00d7c6 940c c4d4 	JMP SUBOPT_0xAC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x363:
00d7c8 2fa1      	MOV  R26,R17
00d7c9 27bb      	CLR  R27
00d7ca e0e3      	LDI  R30,LOW(3)
00d7cb e0f0      	LDI  R31,HIGH(3)
00d7cc 940e dfe8 	CALL __MODW21
00d7ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x364:
00d7cf 2fa1      	MOV  R26,R17
00d7d0 e0b0      	LDI  R27,0
00d7d1 e0e3      	LDI  R30,LOW(3)
00d7d2 e0f0      	LDI  R31,HIGH(3)
00d7d3 940e dfaa 	CALL __DIVW21
00d7d5 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00d7d6 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00d7d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x365:
00d7d8 91ac      	LD   R26,X
00d7d9 940e bfb2 	CALL _isdigit
00d7db 30e0      	CPI  R30,0
00d7dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x366:
00d7dd 01bf      	MOVW R22,R30
00d7de 01df      	MOVW R26,R30
00d7df 940e e087 	CALL __EEPROMRDB
00d7e1 2e0e      	MOV  R0,R30
00d7e2 940c c4d4 	JMP SUBOPT_0xAC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x367:
                +
00d7e4 ebe7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 801 ) )
00d7e5 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 801 ) )
00d7e6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 801 ) )
00d7e7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 801 ) )
                 	__POINTD1FN _0x2E0000,801
00d7e8 940e e05b 	CALL __PUTPARD1
00d7ea 2fa1      	MOV  R26,R17
00d7eb e0b0      	LDI  R27,0
00d7ec 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00d7ed 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00d7ee 940c c7f1 	JMP SUBOPT_0x134
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x368:
                +
00d7f0 eae9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 19 ) )
00d7f1 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 19 ) )
00d7f2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 19 ) )
00d7f3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 19 ) )
                 	__POINTD1FN _0x2E0000,19
00d7f4 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x369:
00d7f6 e6ef      	LDI  R30,LOW(_rxPackage3)
00d7f7 e0fd      	LDI  R31,HIGH(_rxPackage3)
00d7f8 93fa      	ST   -Y,R31
00d7f9 93ea      	ST   -Y,R30
00d7fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x36A:
00d7fb 940e e05b 	CALL __PUTPARD1
00d7fd e0a7      	LDI  R26,LOW(7)
00d7fe 940e a602 	CALL _strncmpf
00d800 30e0      	CPI  R30,0
00d801 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36B:
00d802 940e e05b 	CALL __PUTPARD1
00d804 01da      	MOVW R26,R20
00d805 91ec      	LD   R30,X
00d806 940c c156 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36C:
                +
00d808 e7eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00d809 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00d80a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00d80b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00d80c 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36D:
                +
00d80e efeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 869 ) )
00d80f e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 869 ) )
00d810 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 869 ) )
00d811 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 869 ) )
                 	__POINTD1FN _0x2E0000,869
00d812 940c c042 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36E:
00d814 85ac      	LDD  R26,Y+12
00d815 85bd      	LDD  R27,Y+12+1
00d816 940c 9e42 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x36F:
00d818 91e0 1a71 	LDS  R30,_n
00d81a 91f0 1a72 	LDS  R31,_n+1
00d81c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x370:
00d81d 01f9      	MOVW R30,R18
00d81e 940e defe 	CALL __LSLW4
00d820 58ed      	SUBI R30,LOW(-_a)
00d821 4ef5      	SBCI R31,HIGH(-_a)
00d822 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x371:
00d823 01df      	MOVW R26,R30
00d824 01f8      	MOVW R30,R16
00d825 940c cff6 	JMP SUBOPT_0x26B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x372:
00d827 85ea      	LDD  R30,Y+10
00d828 85fb      	LDD  R31,Y+10+1
00d829 940e defe 	CALL __LSLW4
00d82b 58ed      	SUBI R30,LOW(-_a)
00d82c 4ef5      	SBCI R31,HIGH(-_a)
00d82d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x373:
00d82e 01df      	MOVW R26,R30
00d82f 01f9      	MOVW R30,R18
00d830 940c cff6 	JMP SUBOPT_0x26B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x374:
00d832 01df      	MOVW R26,R30
00d833 01f9      	MOVW R30,R18
00d834 940e df02 	CALL __LSLW2
00d836 0fea      	ADD  R30,R26
00d837 1ffb      	ADC  R31,R27
00d838 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x375:
00d839 01f8      	MOVW R30,R16
00d83a 940e defe 	CALL __LSLW4
00d83c 58ed      	SUBI R30,LOW(-_a)
00d83d 4ef5      	SBCI R31,HIGH(-_a)
00d83e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x376:
00d83f 01df      	MOVW R26,R30
00d840 dfd7      	RCALL SUBOPT_0x36F
00d841 940e df02 	CALL __LSLW2
00d843 0fea      	ADD  R30,R26
00d844 1ffb      	ADC  R31,R27
00d845 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x377:
                +
00d846 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00d847 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00d848 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00d849 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00d84a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x378:
                +
00d84b e0a0     +LDI R26 , LOW ( 0x3F800000 )
00d84c e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00d84d e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00d84e e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00d84f 940c cf8e 	JMP SUBOPT_0x25B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x379:
00d851 df50      	RCALL SUBOPT_0x35C
00d852 940c cd9b 	JMP SUBOPT_0x218
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37A:
                +
00d854 01de     +MOVW R26 , R28
00d855 54a8     +SUBI R26 , LOW ( - 184 )
00d856 4fbf     +SBCI R27 , HIGH ( - 184 )
00d857 900d     +LD R0 , X +
00d858 901d     +LD R1 , X +
00d859 918d     +LD R24 , X +
00d85a 919c     +LD R25 , X
00d85b 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
                +
00d85c e1e2     +LDI R30 , LOW ( 0xBDC08312 )
00d85d e8f3     +LDI R31 , HIGH ( 0xBDC08312 )
00d85e ec60     +LDI R22 , BYTE3 ( 0xBDC08312 )
00d85f eb7d     +LDI R23 , BYTE4 ( 0xBDC08312 )
                 	__GETD1N 0xBDC08312
00d860 940e de8f 	CALL __CMPF12
00d862 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x37B:
                +
00d863 01de     +MOVW R26 , R28
00d864 54a8     +SUBI R26 , LOW ( - 184 )
00d865 4fbf     +SBCI R27 , HIGH ( - 184 )
00d866 900d     +LD R0 , X +
00d867 901d     +LD R1 , X +
00d868 918d     +LD R24 , X +
00d869 919c     +LD R25 , X
00d86a 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
00d86b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37C:
                +
00d86c e0e0     +LDI R30 , LOW ( 0xBEC00000 )
00d86d e0f0     +LDI R31 , HIGH ( 0xBEC00000 )
00d86e ec60     +LDI R22 , BYTE3 ( 0xBEC00000 )
00d86f eb7e     +LDI R23 , BYTE4 ( 0xBEC00000 )
                 	__GETD1N 0xBEC00000
00d870 940e de8f 	CALL __CMPF12
00d872 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x37D:
00d873 940e e05b 	CALL __PUTPARD1
00d875 01fe      	MOVW R30,R28
00d876 53e8      	SUBI R30,LOW(-(200))
00d877 4fff      	SBCI R31,HIGH(-(200))
00d878 93fa      	ST   -Y,R31
00d879 93ea      	ST   -Y,R30
00d87a 01fe      	MOVW R30,R28
00d87b 53ea      	SUBI R30,LOW(-(198))
00d87c 4fff      	SBCI R31,HIGH(-(198))
00d87d 93fa      	ST   -Y,R31
00d87e 93ea      	ST   -Y,R30
00d87f 01de      	MOVW R26,R28
00d880 53ac      	SUBI R26,LOW(-(196))
00d881 4fbf      	SBCI R27,HIGH(-(196))
00d882 940e a011 	CALL _gaussian
                +
00d884 01fe     +MOVW R30 , R28
00d885 54e8     +SUBI R30 , LOW ( - 184 )
00d886 4fff     +SBCI R31 , HIGH ( - 184 )
00d887 9001     +LD R0 , Z +
00d888 9011     +LD R1 , Z +
00d889 9161     +LD R22 , Z +
00d88a 8170     +LD R23 , Z
00d88b 01f0     +MOVW R30 , R0
                 	__GETD1SX 184
                +
00d88c 01de     +MOVW R26 , R28
00d88d 55a0     +SUBI R26 , LOW ( - 176 )
00d88e 4fbf     +SBCI R27 , HIGH ( - 176 )
00d88f 900d     +LD R0 , X +
00d890 901d     +LD R1 , X +
00d891 918d     +LD R24 , X +
00d892 919c     +LD R25 , X
00d893 01d0     +MOVW R26 , R0
                 	__GETD2SX 176
00d894 940e ddfc 	CALL __MULF12
00d896 dfcc      	RCALL SUBOPT_0x37B
00d897 940e ddfc 	CALL __MULF12
00d899 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x37E:
                +
00d89a 01fe     +MOVW R30 , R28
00d89b 54e8     +SUBI R30 , LOW ( - 184 )
00d89c 4fff     +SBCI R31 , HIGH ( - 184 )
00d89d 9001     +LD R0 , Z +
00d89e 9011     +LD R1 , Z +
00d89f 9161     +LD R22 , Z +
00d8a0 8170     +LD R23 , Z
00d8a1 01f0     +MOVW R30 , R0
                 	__GETD1SX 184
00d8a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x37F:
                +
00d8a3 01de     +MOVW R26 , R28
00d8a4 55a4     +SUBI R26 , LOW ( - 172 )
00d8a5 4fbf     +SBCI R27 , HIGH ( - 172 )
00d8a6 900d     +LD R0 , X +
00d8a7 901d     +LD R1 , X +
00d8a8 918d     +LD R24 , X +
00d8a9 919c     +LD R25 , X
00d8aa 01d0     +MOVW R26 , R0
                 	__GETD2SX 172
00d8ab 940e ddfc 	CALL __MULF12
00d8ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x380:
00d8ae 940e ddac 	CALL __ADDF12
                +
00d8b0 01de     +MOVW R26 , R28
00d8b1 55a8     +SUBI R26 , LOW ( - 168 )
00d8b2 4fbf     +SBCI R27 , HIGH ( - 168 )
00d8b3 900d     +LD R0 , X +
00d8b4 901d     +LD R1 , X +
00d8b5 918d     +LD R24 , X +
00d8b6 919c     +LD R25 , X
00d8b7 01d0     +MOVW R26 , R0
                 	__GETD2SX 168
00d8b8 940e ddac 	CALL __ADDF12
00d8ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x381:
00d8bb dfa7      	RCALL SUBOPT_0x37B
                +
00d8bc e6e2     +LDI R30 , LOW ( 0xBF381062 )
00d8bd e1f0     +LDI R31 , HIGH ( 0xBF381062 )
00d8be e368     +LDI R22 , BYTE3 ( 0xBF381062 )
00d8bf eb7f     +LDI R23 , BYTE4 ( 0xBF381062 )
                 	__GETD1N 0xBF381062
00d8c0 940e de8f 	CALL __CMPF12
00d8c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x382:
00d8c3 940e e05b 	CALL __PUTPARD1
00d8c5 01fe      	MOVW R30,R28
00d8c6 5ce0      	SUBI R30,LOW(-(64))
00d8c7 4fff      	SBCI R31,HIGH(-(64))
00d8c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x383:
00d8c9 01fe      	MOVW R30,R28
00d8ca 53e8      	SUBI R30,LOW(-(200))
00d8cb 4fff      	SBCI R31,HIGH(-(200))
00d8cc 93fa      	ST   -Y,R31
00d8cd 93ea      	ST   -Y,R30
00d8ce 01fe      	MOVW R30,R28
00d8cf 53ea      	SUBI R30,LOW(-(198))
00d8d0 4fff      	SBCI R31,HIGH(-(198))
00d8d1 93fa      	ST   -Y,R31
00d8d2 93ea      	ST   -Y,R30
00d8d3 01de      	MOVW R26,R28
00d8d4 53ac      	SUBI R26,LOW(-(196))
00d8d5 4fbf      	SBCI R27,HIGH(-(196))
00d8d6 940e a011 	CALL _gaussian
00d8d8 dfc1      	RCALL SUBOPT_0x37E
                +
00d8d9 01de     +MOVW R26 , R28
00d8da 55a0     +SUBI R26 , LOW ( - 176 )
00d8db 4fbf     +SBCI R27 , HIGH ( - 176 )
00d8dc 900d     +LD R0 , X +
00d8dd 901d     +LD R1 , X +
00d8de 918d     +LD R24 , X +
00d8df 919c     +LD R25 , X
00d8e0 01d0     +MOVW R26 , R0
                 	__GETD2SX 176
00d8e1 940e ddfc 	CALL __MULF12
00d8e3 df7f      	RCALL SUBOPT_0x37B
00d8e4 940e ddfc 	CALL __MULF12
00d8e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x384:
00d8e7 dfb2      	RCALL SUBOPT_0x37E
00d8e8 cfba      	RJMP SUBOPT_0x37F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x385:
00d8e9 df79      	RCALL SUBOPT_0x37B
                +
00d8ea e2e1     +LDI R30 , LOW ( 0xBF82B021 )
00d8eb ebf0     +LDI R31 , HIGH ( 0xBF82B021 )
00d8ec e862     +LDI R22 , BYTE3 ( 0xBF82B021 )
00d8ed eb7f     +LDI R23 , BYTE4 ( 0xBF82B021 )
                 	__GETD1N 0xBF82B021
00d8ee 940e de8f 	CALL __CMPF12
00d8f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x386:
00d8f1 df71      	RCALL SUBOPT_0x37B
                +
00d8f2 e9e8     +LDI R30 , LOW ( 0xBFA26E98 )
00d8f3 e6fe     +LDI R31 , HIGH ( 0xBFA26E98 )
00d8f4 ea62     +LDI R22 , BYTE3 ( 0xBFA26E98 )
00d8f5 eb7f     +LDI R23 , BYTE4 ( 0xBFA26E98 )
                 	__GETD1N 0xBFA26E98
00d8f6 940e de8f 	CALL __CMPF12
00d8f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x387:
                +
00d8f9 87e9     +STD Y + 9 , R30
00d8fa 87fa     +STD Y + 9 + 1 , R31
00d8fb 876b     +STD Y + 9 + 2 , R22
00d8fc 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00d8fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x388:
00d8fe 81ae      	LDD  R26,Y+6
00d8ff 81bf      	LDD  R27,Y+6+1
00d900 9611      	ADIW R26,1
00d901 83ae      	STD  Y+6,R26
00d902 83bf      	STD  Y+6+1,R27
00d903 9711      	SBIW R26,1
00d904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x389:
00d905 940e c4fb 	CALL SUBOPT_0xB4
                +
00d907 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00d908 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00d909 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00d90a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00d90b 940e ddfc 	CALL __MULF12
00d90d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38A:
00d90e 940e c4f6 	CALL SUBOPT_0xB3
                +
00d910 85a9     +LDD R26 , Y + 9
00d911 85ba     +LDD R27 , Y + 9 + 1
00d912 858b     +LDD R24 , Y + 9 + 2
00d913 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d914 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x38B:
00d915 940e c708 	CALL SUBOPT_0x10B
00d917 940e ddfc 	CALL __MULF12
00d919 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38C:
00d91a 940e ccfe 	CALL SUBOPT_0x204
00d91c 940e ddac 	CALL __ADDF12
00d91e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x38D:
                +
00d91f 85a9     +LDD R26 , Y + 9
00d920 85ba     +LDD R27 , Y + 9 + 1
00d921 858b     +LDD R24 , Y + 9 + 2
00d922 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d923 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x38E:
00d924 2fe0      	MOV  R30,R16
00d925 5de0      	SUBI R30,-LOW(48)
00d926 93ec      	ST   X,R30
00d927 2fe0      	MOV  R30,R16
00d928 e0f0      	LDI  R31,0
00d929 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38F:
00d92a 940e df38 	CALL __CWD1
00d92c 940e dd72 	CALL __CDF1
00d92e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x390:
00d92f 89e8      	LDD  R30,Y+16
00d930 89f9      	LDD  R31,Y+16+1
00d931 9631      	ADIW R30,1
00d932 8be8      	STD  Y+16,R30
00d933 8bf9      	STD  Y+16+1,R31
00d934 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x391:
00d935 940e c088 	CALL SUBOPT_0xB
00d937 cfdd      	RJMP SUBOPT_0x38B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x392:
00d938 940e ddfc 	CALL __MULF12
00d93a 940c c64f 	JMP SUBOPT_0xEA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x393:
00d93c 93e0 1aa9 	STS  __seed_G100,R30
00d93e 93f0 1aaa 	STS  __seed_G100+1,R31
00d940 9360 1aab 	STS  __seed_G100+2,R22
00d942 9370 1aac 	STS  __seed_G100+3,R23
00d944 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x394:
00d945 940e e027 	CALL __GETW1P
00d947 83ee      	STD  Y+6,R30
00d948 83ff      	STD  Y+6+1,R31
00d949 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x395:
00d94a e0f0      	LDI  R31,0
00d94b 940e df38 	CALL __CWD1
00d94d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x396:
00d94e 940e e031 	CALL __GETD1P_INC
00d950 940e c5c3 	CALL SUBOPT_0xD3
00d952 940e e03b 	CALL __PUTDP1_DEC
00d954 940c c5e3 	JMP SUBOPT_0xDA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x397:
00d956 940e e02b 	CALL __GETD1P
                +
00d958 83e9     +STD Y + 1 , R30
00d959 83fa     +STD Y + 1 + 1 , R31
00d95a 836b     +STD Y + 1 + 2 , R22
00d95b 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00d95c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x398:
                +
00d95d 81ed     +LDD R30 , Y + 5
00d95e 81fe     +LDD R31 , Y + 5 + 1
00d95f 816f     +LDD R22 , Y + 5 + 2
00d960 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00d961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x399:
00d962 85e9      	LDD  R30,Y+9
00d963 85fa      	LDD  R31,Y+9+1
00d964 81a1      	LDD  R26,Z+1
00d965 93aa      	ST   -Y,R26
00d966 85ea      	LDD  R30,Y+10
00d967 85fb      	LDD  R31,Y+10+1
00d968 96f2      	ADIW R30,50
00d969 93fa      	ST   -Y,R31
00d96a 93ea      	ST   -Y,R30
00d96b 940e c3e5 	CALL SUBOPT_0x89
00d96d 940e e05b 	CALL __PUTPARD1
00d96f e0a1      	LDI  R26,LOW(1)
00d970 940c a89f 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39A:
                +
00d972 a1a2     +LDD R26 , Z + 34
00d973 a1b3     +LDD R27 , Z + 34 + 1
00d974 a184     +LDD R24 , Z + 34 + 2
00d975 a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00d976 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39B:
00d977 93fa      	ST   -Y,R31
00d978 93ea      	ST   -Y,R30
00d979 940e c25f 	CALL SUBOPT_0x4F
00d97b 940e e05b 	CALL __PUTPARD1
00d97d e0a1      	LDI  R26,LOW(1)
00d97e 940e a83a 	CALL _disk_read
00d980 30e0      	CPI  R30,0
00d981 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39C:
00d982 940e c164 	CALL SUBOPT_0x2C
00d984 940c abdc 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x39D:
00d986 96f2      	ADIW R30,50
00d987 93fa      	ST   -Y,R31
00d988 93ea      	ST   -Y,R30
00d989 e0e0      	LDI  R30,LOW(0)
00d98a e0f0      	LDI  R31,HIGH(0)
00d98b 93fa      	ST   -Y,R31
00d98c 93ea      	ST   -Y,R30
00d98d e0a0      	LDI  R26,LOW(512)
00d98e e0b2      	LDI  R27,HIGH(512)
00d98f 940c ab7f 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39E:
00d991 940e e02b 	CALL __GETD1P
00d993 01d0      	MOVW R26,R0
00d994 940e e036 	CALL __PUTDP1
00d996 81e9      	LDD  R30,Y+1
00d997 81fa      	LDD  R31,Y+1+1
00d998 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39F:
                +
00d999 89a2     +LDD R26 , Z + 18
00d99a 89b3     +LDD R27 , Z + 18 + 1
00d99b 8984     +LDD R24 , Z + 18 + 2
00d99c 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d99d 940e e060 	CALL __PUTPARD2
00d99f e0a1      	LDI  R26,LOW(1)
00d9a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3A0:
                +
00d9a1 30a2     +CPI R26 , LOW ( 0x2 )
00d9a2 e0e0     +LDI R30 , HIGH ( 0x2 )
00d9a3 07be     +CPC R27 , R30
00d9a4 e0e0     +LDI R30 , BYTE3 ( 0x2 )
00d9a5 078e     +CPC R24 , R30
00d9a6 e0e0     +LDI R30 , BYTE4 ( 0x2 )
00d9a7 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00d9a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A1:
                +
00d9a9 e0e1     +LDI R30 , LOW ( 0x1 )
00d9aa e0f0     +LDI R31 , HIGH ( 0x1 )
00d9ab e060     +LDI R22 , BYTE3 ( 0x1 )
00d9ac e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00d9ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A2:
00d9ae 940e e02b 	CALL __GETD1P
00d9b0 940c c4bd 	JMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A3:
00d9b2 01d9      	MOVW R26,R18
00d9b3 e0e0      	LDI  R30,LOW(512)
00d9b4 e0f2      	LDI  R31,HIGH(512)
00d9b5 940e df97 	CALL __DIVW21U
00d9b7 940c ccd7 	JMP SUBOPT_0x1FF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3A4:
00d9b9 940e deb8 	CALL __ADDD21
00d9bb 940e abdc 	CALL _move_window_G103
00d9bd 30e0      	CPI  R30,0
00d9be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A5:
00d9bf 85ac      	LDD  R26,Y+12
00d9c0 85bd      	LDD  R27,Y+12+1
00d9c1 96d2      	ADIW R26,50
00d9c2 01f9      	MOVW R30,R18
00d9c3 70f1      	ANDI R31,HIGH(0x1FF)
00d9c4 0fae      	ADD  R26,R30
00d9c5 1fbf      	ADC  R27,R31
00d9c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A6:
                +
00d9c7 e0e0     +LDI R30 , LOW ( 0x100 )
00d9c8 e0f1     +LDI R31 , HIGH ( 0x100 )
00d9c9 e060     +LDI R22 , BYTE3 ( 0x100 )
00d9ca e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00d9cb 940e dfaf 	CALL __DIVD21U
00d9cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A7:
00d9ce 940e df79 	CALL __MULB1W2U
00d9d0 70f1      	ANDI R31,HIGH(0x1FF)
00d9d1 85ac      	LDD  R26,Y+12
00d9d2 85bd      	LDD  R27,Y+12+1
00d9d3 96d2      	ADIW R26,50
00d9d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A8:
                +
00d9d5 e8e0     +LDI R30 , LOW ( 0x80 )
00d9d6 e0f0     +LDI R31 , HIGH ( 0x80 )
00d9d7 e060     +LDI R22 , BYTE3 ( 0x80 )
00d9d8 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00d9d9 940e dfaf 	CALL __DIVD21U
00d9db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A9:
                +
00d9dc 85ae     +LDD R26 , Y + 14
00d9dd 85bf     +LDD R27 , Y + 14 + 1
00d9de 8988     +LDD R24 , Y + 14 + 2
00d9df 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00d9e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3AA:
00d9e1 01d8      	MOVW R26,R16
00d9e2 e0e0      	LDI  R30,LOW(512)
00d9e3 e0f2      	LDI  R31,HIGH(512)
00d9e4 940e df97 	CALL __DIVW21U
00d9e6 940e c5d9 	CALL SUBOPT_0xD8
00d9e8 2766      	CLR  R22
00d9e9 2777      	CLR  R23
00d9ea 940e deb8 	CALL __ADDD21
00d9ec 940e abdc 	CALL _move_window_G103
00d9ee 2f5e      	MOV  R21,R30
00d9ef 3050      	CPI  R21,0
00d9f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3AB:
00d9f1 89aa      	LDD  R26,Y+18
00d9f2 89bb      	LDD  R27,Y+18+1
00d9f3 96d2      	ADIW R26,50
00d9f4 01f8      	MOVW R30,R16
00d9f5 70f1      	ANDI R31,HIGH(0x1FF)
00d9f6 0fea      	ADD  R30,R26
00d9f7 1ffb      	ADC  R31,R27
00d9f8 019f      	MOVW R18,R30
00d9f9 85ee      	LDD  R30,Y+14
00d9fa 70e1      	ANDI R30,LOW(0x1)
00d9fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AC:
00d9fc 940e c5d9 	CALL SUBOPT_0xD8
00d9fe 940e deb8 	CALL __ADDD21
00da00 940e abdc 	CALL _move_window_G103
00da02 2f5e      	MOV  R21,R30
00da03 3050      	CPI  R21,0
00da04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AD:
00da05 940e df79 	CALL __MULB1W2U
00da07 70f1      	ANDI R31,HIGH(0x1FF)
00da08 89aa      	LDD  R26,Y+18
00da09 89bb      	LDD  R27,Y+18+1
00da0a 96d2      	ADIW R26,50
00da0b 0fea      	ADD  R30,R26
00da0c 1ffb      	ADC  R31,R27
00da0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3AE:
                +
00da0e 81ad     +LDD R26 , Y + 5
00da0f 81be     +LDD R27 , Y + 5 + 1
00da10 818f     +LDD R24 , Y + 5 + 2
00da11 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00da12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3AF:
00da13 85a9      	LDD  R26,Y+9
00da14 85ba      	LDD  R27,Y+9+1
00da15 965e      	ADIW R26,30
00da16 940e e02b 	CALL __GETD1P
00da18 dff5      	RCALL SUBOPT_0x3AE
00da19 940e e0cb 	CALL __CPD21
00da1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B0:
                +
00da1c 81e9     +LDD R30 , Y + 1
00da1d 81fa     +LDD R31 , Y + 1 + 1
00da1e 816b     +LDD R22 , Y + 1 + 2
00da1f 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00da20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3B1:
                +
00da21 30a1     +CPI R26 , LOW ( 0x1 )
00da22 e0e0     +LDI R30 , HIGH ( 0x1 )
00da23 07be     +CPC R27 , R30
00da24 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00da25 078e     +CPC R24 , R30
00da26 e0e0     +LDI R30 , BYTE4 ( 0x1 )
00da27 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00da28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B2:
                +
00da29 85a6     +LDD R26 , Z + 14
00da2a 85b7     +LDD R27 , Z + 14 + 1
00da2b 8980     +LDD R24 , Z + 14 + 2
00da2c 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00da2d 940c c1ca 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B3:
                +
00da2f 83ed     +STD Y + 5 , R30
00da30 83fe     +STD Y + 5 + 1 , R31
00da31 836f     +STD Y + 5 + 2 , R22
00da32 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00da33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B4:
00da34 89ec      	LDD  R30,Y+20
00da35 89fd      	LDD  R31,Y+20+1
00da36 93fa      	ST   -Y,R31
00da37 93ea      	ST   -Y,R30
00da38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B5:
                +
00da39 e0e2     +LDI R30 , LOW ( 0x2 )
00da3a e0f0     +LDI R31 , HIGH ( 0x2 )
00da3b e060     +LDI R22 , BYTE3 ( 0x2 )
00da3c e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00da3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B6:
00da3e 940e c3e5 	CALL SUBOPT_0x89
00da40 940e c5d9 	CALL SUBOPT_0xD8
00da42 940e e0c6 	CALL __CPD12
00da44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B7:
                +
00da45 e0e0     +LDI R30 , LOW ( 0x0 )
00da46 e0f0     +LDI R31 , HIGH ( 0x0 )
00da47 e060     +LDI R22 , BYTE3 ( 0x0 )
00da48 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00da49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3B8:
00da4a 85a8      	LDD  R26,Y+8
00da4b 85b9      	LDD  R27,Y+8+1
00da4c 940e e027 	CALL __GETW1P
00da4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B9:
00da4f 967e      	ADIW R30,30
00da50 01df      	MOVW R26,R30
00da51 940e e02b 	CALL __GETD1P
00da53 940e c4fb 	CALL SUBOPT_0xB4
00da55 940e e0cb 	CALL __CPD21
00da57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BA:
00da58 940e c4f6 	CALL SUBOPT_0xB3
                +
00da5a 85a8     +LDD R26 , Y + 8
00da5b 85b9     +LDD R27 , Y + 8 + 1
00da5c 961a     +ADIW R26 , 10
00da5d 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00da5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BB:
00da60 85a8      	LDD  R26,Y+8
00da61 85b9      	LDD  R27,Y+8+1
00da62 cbfe      	RJMP SUBOPT_0x338
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3BC:
00da63 2766      	CLR  R22
00da64 2777      	CLR  R23
00da65 940e deb3 	CALL __ADDD12
00da67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BD:
00da68 70ef      	ANDI R30,LOW(0xF)
00da69 70f0      	ANDI R31,HIGH(0xF)
00da6a 0fee      	LSL  R30
00da6b 940e defe 	CALL __LSLW4
00da6d 0fea      	ADD  R30,R26
00da6e 1ffb      	ADC  R31,R27
00da6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BE:
00da70 940e e02b 	CALL __GETD1P
00da72 940e e0b4 	CALL __CPD10
00da74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3BF:
00da75 85a9      	LDD  R26,Y+9
00da76 85ba      	LDD  R27,Y+9+1
00da77 940e e027 	CALL __GETW1P
00da79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C0:
00da7a 85a9      	LDD  R26,Y+9
00da7b 85ba      	LDD  R27,Y+9+1
00da7c cbe4      	RJMP SUBOPT_0x338
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C1:
00da7d 85eb      	LDD  R30,Y+11
00da7e 85fc      	LDD  R31,Y+11+1
                +
00da7f 85a2     +LDD R26 , Z + 10
00da80 85b3     +LDD R27 , Z + 10 + 1
00da81 8584     +LDD R24 , Z + 10 + 2
00da82 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00da83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C2:
00da84 967e      	ADIW R30,30
00da85 01df      	MOVW R26,R30
00da86 940e e02b 	CALL __GETD1P
00da88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C3:
00da89 81ac      	LDD  R26,Y+4
00da8a 81bd      	LDD  R27,Y+4+1
00da8b cbd5      	RJMP SUBOPT_0x338
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3C4:
00da8c 81ee      	LDD  R30,Y+6
00da8d 81ff      	LDD  R31,Y+6+1
                +
00da8e 85a6     +LDD R26 , Z + 14
00da8f 85b7     +LDD R27 , Z + 14 + 1
00da90 8980     +LDD R24 , Z + 14 + 2
00da91 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00da92 940e abdc 	CALL _move_window_G103
00da94 2f1e      	MOV  R17,R30
00da95 3010      	CPI  R17,0
00da96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C5:
00da97 933a      	ST   -Y,R19
00da98 932a      	ST   -Y,R18
00da99 81ee      	LDD  R30,Y+6
00da9a 81ff      	LDD  R31,Y+6+1
00da9b 89a4      	LDD  R26,Z+20
00da9c 89b5      	LDD  R27,Z+21
00da9d 93ba      	ST   -Y,R27
00da9e 93aa      	ST   -Y,R26
00da9f 940c c235 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3C6:
00daa1 2fe2      	MOV  R30,R18
00daa2 5f2f      	SUBI R18,-1
00daa3 e0f0      	LDI  R31,0
00daa4 0fe4      	ADD  R30,R20
00daa5 1ff5      	ADC  R31,R21
00daa6 8300      	ST   Z,R16
00daa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C7:
00daa8 e0f0      	LDI  R31,0
00daa9 0fe4      	ADD  R30,R20
00daaa 1ff5      	ADC  R31,R21
00daab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C8:
                +
00daac 81ae     +LDD R26 , Y + 6
00daad 81bf     +LDD R27 , Y + 6 + 1
00daae 9616     +ADIW R26 , 6
00daaf 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00dab1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C9:
00dab2 01d9      	MOVW R26,R18
00dab3 9654      	ADIW R26,20
00dab4 940c c10c 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CA:
00dab6 01d9      	MOVW R26,R18
00dab7 965a      	ADIW R26,26
00dab8 940e e027 	CALL __GETW1P
00daba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CB:
00dabb 2766      	CLR  R22
00dabc 2777      	CLR  R23
00dabd 940e decc 	CALL __ORD12
00dabf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CC:
00dac0 940e e05b 	CALL __PUTPARD1
00dac2 e0a1      	LDI  R26,LOW(1)
00dac3 940e a83a 	CALL _disk_read
00dac5 30e0      	CPI  R30,0
00dac6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3CD:
00dac7 96f2      	ADIW R30,50
00dac8 50e2      	SUBI R30,LOW(-510)
00dac9 4ffe      	SBCI R31,HIGH(-510)
00daca 01df      	MOVW R26,R30
00dacb 940e e027 	CALL __GETW1P
00dacd 35e5      	CPI  R30,LOW(0xAA55)
00dace eaaa      	LDI  R26,HIGH(0xAA55)
00dacf 07fa      	CPC  R31,R26
00dad0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3CE:
00dad1 940e e02b 	CALL __GETD1P
                +
00dad3 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00dad4 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00dad5 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00dad6 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00dad7 34e6     +CPI R30 , LOW ( 0x544146 )
00dad8 e4a1     +LDI R26 , HIGH ( 0x544146 )
00dad9 07fa     +CPC R31 , R26
00dada e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00dadb 076a     +CPC R22 , R26
00dadc e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00dadd 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00dade 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3CF:
00dadf eba2      	LDI  R26,LOW(_FatFs_G103)
00dae0 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00dae1 e0f0      	LDI  R31,0
00dae2 0fee      	LSL  R30
00dae3 1fff      	ROL  R31
00dae4 0fae      	ADD  R26,R30
00dae5 1fbf      	ADC  R27,R31
00dae6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D0:
00dae7 81ae      	LDD  R26,Y+6
00dae8 81bf      	LDD  R27,Y+6+1
00dae9 5ca0      	SUBI R26,LOW(-64)
00daea 4fbf      	SBCI R27,HIGH(-64)
00daeb 940e e027 	CALL __GETW1P
00daed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D1:
                +
00daee 87ee     +STD Y + 14 , R30
00daef 87ff     +STD Y + 14 + 1 , R31
00daf0 8b68     +STD Y + 14 + 2 , R22
00daf1 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00daf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D2:
00daf3 81ee      	LDD  R30,Y+6
00daf4 81ff      	LDD  R31,Y+6+1
00daf5 85a0      	LDD  R26,Z+8
00daf6 85b1      	LDD  R27,Z+9
00daf7 01fd      	MOVW R30,R26
00daf8 940e df10 	CALL __LSRW4
00dafa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D3:
00dafb 81ee      	LDD  R30,Y+6
00dafc 81ff      	LDD  R31,Y+6+1
00dafd de74      	RCALL SUBOPT_0x39A
00dafe 940e c5c8 	CALL SUBOPT_0xD4
00db00 940e deb3 	CALL __ADDD12
00db02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D4:
00db03 940e abdc 	CALL _move_window_G103
00db05 2f1e      	MOV  R17,R30
00db06 3010      	CPI  R17,0
00db07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D5:
00db08 8daa      	LDD  R26,Y+26
00db09 8dbb      	LDD  R27,Y+26+1
00db0a cb56      	RJMP SUBOPT_0x338
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D6:
00db0b 81a2      	LDD  R26,Z+2
00db0c 81b3      	LDD  R27,Z+3
00db0d 940e b489 	CALL _validate_G103
00db0f 2f1e      	MOV  R17,R30
00db10 3010      	CPI  R17,0
00db11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D7:
00db12 8dea      	LDD  R30,Y+26
00db13 8dfb      	LDD  R31,Y+26+1
                +
00db14 81a6     +LDD R26 , Z + 6
00db15 81b7     +LDD R27 , Z + 6 + 1
00db16 8580     +LDD R24 , Z + 6 + 2
00db17 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00db18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D8:
00db19 01fd      	MOVW R30,R26
00db1a 01bc      	MOVW R22,R24
00db1b 70f1      	ANDI R31,HIGH(0x1FF)
00db1c 9730      	SBIW R30,0
00db1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D9:
00db1e 8dec      	LDD  R30,Y+28
00db1f 8dfd      	LDD  R31,Y+28+1
                +
00db20 89a2     +LDD R26 , Z + 18
00db21 89b3     +LDD R27 , Z + 18 + 1
00db22 8984     +LDD R24 , Z + 18 + 2
00db23 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00db24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3DA:
00db25 8daa      	LDD  R26,Y+26
00db26 8dbb      	LDD  R27,Y+26+1
00db27 9614      	ADIW R26,4
00db28 91ec      	LD   R30,X
00db29 68e0      	ORI  R30,0x80
00db2a 93ec      	ST   X,R30
00db2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DB:
00db2c 8dea      	LDD  R30,Y+26
00db2d 8dfb      	LDD  R31,Y+26+1
00db2e 81e5      	LDD  R30,Z+5
00db2f e0f0      	LDI  R31,0
00db30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3DC:
00db31 e0e0      	LDI  R30,LOW(512)
00db32 e0f2      	LDI  R31,HIGH(512)
00db33 940e df97 	CALL __DIVW21U
00db35 01af      	MOVW R20,R30
00db36 2e04      	MOV  R0,R20
00db37 2a05      	OR   R0,R21
00db38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3DD:
00db39 8daa      	LDD  R26,Y+26
00db3a 8dbb      	LDD  R27,Y+26+1
00db3b 940e e027 	CALL __GETW1P
00db3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DE:
00db3e 81e1      	LDD  R30,Z+1
00db3f 93ea      	ST   -Y,R30
00db40 81ef      	LDD  R30,Y+7
00db41 85f8      	LDD  R31,Y+7+1
00db42 93fa      	ST   -Y,R31
00db43 93ea      	ST   -Y,R30
00db44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3DF:
00db45 8dea      	LDD  R30,Y+26
00db46 8dfb      	LDD  R31,Y+26+1
                +
00db47 89a6     +LDD R26 , Z + 22
00db48 89b7     +LDD R27 , Z + 22 + 1
00db49 8d80     +LDD R24 , Z + 22 + 2
00db4a 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00db4b 940c c5de 	JMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E0:
00db4d 940e dec2 	CALL __SUBD21
00db4f 01fa      	MOVW R30,R20
00db50 2766      	CLR  R22
00db51 2777      	CLR  R23
00db52 940e e0cb 	CALL __CPD21
00db54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E1:
00db55 940e dec2 	CALL __SUBD21
                +
00db57 e0e0     +LDI R30 , LOW ( 0x200 )
00db58 e0f2     +LDI R31 , HIGH ( 0x200 )
00db59 e060     +LDI R22 , BYTE3 ( 0x200 )
00db5a e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00db5b 940e df59 	CALL __MULD12U
00db5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E2:
00db5e 9615      	ADIW R26,5
00db5f 91ec      	LD   R30,X
00db60 0fe4      	ADD  R30,R20
00db61 93ec      	ST   X,R30
00db62 01fa      	MOVW R30,R20
00db63 0fee      	LSL  R30
00db64 1fff      	ROL  R31
00db65 2ffe      	MOV  R31,R30
00db66 e0e0      	LDI  R30,0
00db67 019f      	MOVW R18,R30
00db68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E3:
00db69 81e1      	LDD  R30,Z+1
00db6a 93ea      	ST   -Y,R30
00db6b 8deb      	LDD  R30,Y+27
00db6c 8dfc      	LDD  R31,Y+27+1
00db6d 96b0      	ADIW R30,32
00db6e 93fa      	ST   -Y,R31
00db6f 93ea      	ST   -Y,R30
00db70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E4:
                +
00db71 89a6     +LDD R26 , Z + 22
00db72 89b7     +LDD R27 , Z + 22 + 1
00db73 8d80     +LDD R24 , Z + 22 + 2
00db74 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00db75 940e e060 	CALL __PUTPARD2
00db77 e0a1      	LDI  R26,LOW(1)
00db78 940e a89f 	CALL _disk_write
00db7a 30e0      	CPI  R30,0
00db7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E5:
00db7c 9614      	ADIW R26,4
00db7d 91ec      	LD   R30,X
00db7e 7bef      	ANDI R30,0xBF
00db7f 93ec      	ST   X,R30
00db80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E6:
00db81 9615      	ADIW R26,5
00db82 91ec      	LD   R30,X
00db83 5fef      	SUBI R30,-LOW(1)
00db84 93ec      	ST   X,R30
00db85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E7:
00db86 9616      	ADIW R26,6
00db87 940e e027 	CALL __GETW1P
00db89 70f1      	ANDI R31,HIGH(0x1FF)
00db8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E8:
00db8b 9636      	ADIW R30,6
00db8c 010f      	MOVW R0,R30
00db8d 01df      	MOVW R26,R30
00db8e 940e e02b 	CALL __GETD1P
00db90 01df      	MOVW R26,R30
00db91 01cb      	MOVW R24,R22
00db92 01f9      	MOVW R30,R18
00db93 cecf      	RJMP SUBOPT_0x3BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E9:
00db94 91ed      	LD   R30,X+
00db95 91fd      	LD   R31,X+
00db96 0fe2      	ADD  R30,R18
00db97 1ff3      	ADC  R31,R19
00db98 93fe      	ST   -X,R31
00db99 93ee      	ST   -X,R30
00db9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3EA:
00db9b 89ae      	LDD  R26,Y+22
00db9c 89bf      	LDD  R27,Y+22+1
00db9d cac3      	RJMP SUBOPT_0x338
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3EB:
00db9e 89ae      	LDD  R26,Y+22
00db9f 89bf      	LDD  R27,Y+22+1
00dba0 961a      	ADIW R26,10
00dba1 940e e02b 	CALL __GETD1P
00dba3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3EC:
00dba4 89ee      	LDD  R30,Y+22
00dba5 89ff      	LDD  R31,Y+22+1
                +
00dba6 81a6     +LDD R26 , Z + 6
00dba7 81b7     +LDD R27 , Z + 6 + 1
00dba8 8580     +LDD R24 , Z + 6 + 2
00dba9 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00dbaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3ED:
00dbab 89ae      	LDD  R26,Y+22
00dbac 89bf      	LDD  R27,Y+22+1
00dbad 940e e027 	CALL __GETW1P
00dbaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EE:
00dbb0 8de8      	LDD  R30,Y+24
00dbb1 8df9      	LDD  R31,Y+24+1
                +
00dbb2 89a2     +LDD R26 , Z + 18
00dbb3 89b3     +LDD R27 , Z + 18 + 1
00dbb4 8984     +LDD R24 , Z + 18 + 2
00dbb5 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00dbb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3EF:
00dbb7 89ae      	LDD  R26,Y+22
00dbb8 89bf      	LDD  R27,Y+22+1
00dbb9 9614      	ADIW R26,4
00dbba 91ec      	LD   R30,X
00dbbb 68e0      	ORI  R30,0x80
00dbbc 93ec      	ST   X,R30
00dbbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F0:
00dbbe 81e1      	LDD  R30,Z+1
00dbbf 93ea      	ST   -Y,R30
00dbc0 89ef      	LDD  R30,Y+23
00dbc1 8df8      	LDD  R31,Y+23+1
00dbc2 96b0      	ADIW R30,32
00dbc3 93fa      	ST   -Y,R31
00dbc4 93ea      	ST   -Y,R30
00dbc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F1:
00dbc6 89ee      	LDD  R30,Y+22
00dbc7 89ff      	LDD  R31,Y+22+1
00dbc8 81e5      	LDD  R30,Z+5
00dbc9 e0f0      	LDI  R31,0
00dbca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F2:
00dbcb 89ee      	LDD  R30,Y+22
00dbcc 89ff      	LDD  R31,Y+22+1
                +
00dbcd 89a6     +LDD R26 , Z + 22
00dbce 89b7     +LDD R27 , Z + 22 + 1
00dbcf 8d80     +LDD R24 , Z + 22 + 2
00dbd0 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00dbd1 940c c25f 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F3:
00dbd3 89ee      	LDD  R30,Y+22
00dbd4 89ff      	LDD  R31,Y+22+1
00dbd5 96b0      	ADIW R30,32
00dbd6 93fa      	ST   -Y,R31
00dbd7 93ea      	ST   -Y,R30
00dbd8 8de8      	LDD  R30,Y+24
00dbd9 8df9      	LDD  R31,Y+24+1
00dbda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F4:
00dbdb 89ad      	LDD  R26,Y+21
00dbdc 89be      	LDD  R27,Y+21+1
00dbdd ca83      	RJMP SUBOPT_0x338
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F5:
00dbde 89ad      	LDD  R26,Y+21
00dbdf 89be      	LDD  R27,Y+21+1
00dbe0 961a      	ADIW R26,10
00dbe1 940e e02b 	CALL __GETD1P
00dbe3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3F6:
                +
00dbe4 89a9     +LDD R26 , Y + 17
00dbe5 89ba     +LDD R27 , Y + 17 + 1
00dbe6 898b     +LDD R24 , Y + 17 + 2
00dbe7 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00dbe8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F7:
                +
00dbe9 8be9     +STD Y + 17 , R30
00dbea 8bfa     +STD Y + 17 + 1 , R31
00dbeb 8b6b     +STD Y + 17 + 2 , R22
00dbec 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00dbed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F8:
                +
00dbee 89ad     +LDD R26 , Y + 21
00dbef 89be     +LDD R27 , Y + 21 + 1
00dbf0 9616     +ADIW R26 , 6
00dbf1 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00dbf3 89ad      	LDD  R26,Y+21
00dbf4 89be      	LDD  R27,Y+21+1
00dbf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F9:
00dbf6 89ad      	LDD  R26,Y+21
00dbf7 89be      	LDD  R27,Y+21+1
00dbf8 940e e027 	CALL __GETW1P
00dbfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FA:
                +
00dbfb 89e9     +LDD R30 , Y + 17
00dbfc 89fa     +LDD R31 , Y + 17 + 1
00dbfd 896b     +LDD R22 , Y + 17 + 2
00dbfe 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00dbff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3FB:
00dc00 940e c5e3 	CALL SUBOPT_0xDA
00dc02 01df      	MOVW R26,R30
00dc03 01cb      	MOVW R24,R22
00dc04 940e c318 	CALL SUBOPT_0x6B
00dc06 940e dfaf 	CALL __DIVD21U
00dc08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FC:
00dc09 940e e02b 	CALL __GETD1P
                +
00dc0b 87ed     +STD Y + 13 , R30
00dc0c 87fe     +STD Y + 13 + 1 , R31
00dc0d 876f     +STD Y + 13 + 2 , R22
00dc0e 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dc0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3FD:
                +
00dc10 85ed     +LDD R30 , Y + 13
00dc11 85fe     +LDD R31 , Y + 13 + 1
00dc12 856f     +LDD R22 , Y + 13 + 2
00dc13 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00dc14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FE:
00dc15 940e ae36 	CALL _create_chain_G103
                +
00dc17 87ed     +STD Y + 13 , R30
00dc18 87fe     +STD Y + 13 + 1 , R31
00dc19 876f     +STD Y + 13 + 2 , R22
00dc1a 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dc1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3FF:
                +
00dc1c 85ad     +LDD R26 , Y + 13
00dc1d 85be     +LDD R27 , Y + 13 + 1
00dc1e 858f     +LDD R24 , Y + 13 + 2
00dc1f 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00dc20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x400:
00dc21 89ad      	LDD  R26,Y+21
00dc22 89be      	LDD  R27,Y+21+1
00dc23 9614      	ADIW R26,4
00dc24 91ec      	LD   R30,X
00dc25 68e0      	ORI  R30,0x80
00dc26 93ec      	ST   X,R30
00dc27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x401:
00dc28 dfe7      	RCALL SUBOPT_0x3FD
                +
00dc29 89ad     +LDD R26 , Y + 21
00dc2a 89be     +LDD R27 , Y + 21 + 1
00dc2b 9652     +ADIW R26 , 18
00dc2c 940e e036+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00dc2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x402:
                +
00dc2f 85af     +LDD R26 , Y + 15
00dc30 89b8     +LDD R27 , Y + 15 + 1
00dc31 8989     +LDD R24 , Y + 15 + 2
00dc32 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00dc33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x403:
00dc34 89ed      	LDD  R30,Y+21
00dc35 89fe      	LDD  R31,Y+21+1
00dc36 9636      	ADIW R30,6
00dc37 010f      	MOVW R0,R30
00dc38 01df      	MOVW R26,R30
00dc39 940e e02b 	CALL __GETD1P
00dc3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x404:
00dc3c 89ed      	LDD  R30,Y+21
00dc3d 89fe      	LDD  R31,Y+21+1
                +
00dc3e 81a6     +LDD R26 , Z + 6
00dc3f 81b7     +LDD R27 , Z + 6 + 1
00dc40 8580     +LDD R24 , Z + 6 + 2
00dc41 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00dc42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x405:
00dc43 940e c5c8 	CALL SUBOPT_0xD4
00dc45 940e c527 	CALL SUBOPT_0xBC
00dc47 940c cf3b 	JMP SUBOPT_0x24F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x406:
00dc49 940e c4c2 	CALL SUBOPT_0xA9
00dc4b ccc9      	RJMP SUBOPT_0x38B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x407:
00dc4c 940e c3e5 	CALL SUBOPT_0x89
00dc4e 940e c088 	CALL SUBOPT_0xB
00dc50 940e de8f 	CALL __CMPF12
00dc52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x408:
00dc53 940e c088 	CALL SUBOPT_0xB
                +
00dc55 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00dc56 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00dc57 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00dc58 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00dc59 ccde      	RJMP SUBOPT_0x392
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x409:
00dc5a 85a8      	LDD  R26,Y+8
00dc5b 85b9      	LDD  R27,Y+8+1
00dc5c 9611      	ADIW R26,1
00dc5d 87a8      	STD  Y+8,R26
00dc5e 87b9      	STD  Y+8+1,R27
00dc5f 9711      	SBIW R26,1
00dc60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x40A:
00dc61 932a      	ST   -Y,R18
00dc62 81af      	LDD  R26,Y+7
00dc63 85b8      	LDD  R27,Y+7+1
00dc64 940e c318 	CALL SUBOPT_0x6B
00dc66 bf6c      	OUT  EIND,R22
00dc67 9519      	EICALL
00dc68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x40B:
                +
00dc69 01fe     +MOVW R30 , R28
00dc6a 5ae0     +SUBI R30 , LOW ( - 96 )
00dc6b 4fff     +SBCI R31 , HIGH ( - 96 )
00dc6c 9001     +LD R0 , Z +
00dc6d 81f0     +LD R31 , Z
00dc6e 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00dc6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40C:
00dc70 9734      	SBIW R30,4
                +
00dc71 01de     +MOVW R26 , R28
00dc72 5aa0     +SUBI R26 , LOW ( - 96 )
00dc73 4fbf     +SBCI R27 , HIGH ( - 96 )
00dc74 93ed     +ST X + , R30
00dc75 93fc     +ST X , R31
                 	__PUTW1SX 96
00dc76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x40D:
00dc77 81af      	LDD  R26,Y+7
00dc78 85b8      	LDD  R27,Y+7+1
00dc79 940e c318 	CALL SUBOPT_0x6B
00dc7b bf6c      	OUT  EIND,R22
00dc7c 9519      	EICALL
00dc7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x40E:
                +
00dc7e 01de     +MOVW R26 , R28
00dc7f 5aa0     +SUBI R26 , LOW ( - 96 )
00dc80 4fbf     +SBCI R27 , HIGH ( - 96 )
00dc81 900d     +LD R0 , X +
00dc82 91bc     +LD R27 , X
00dc83 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00dc84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x40F:
00dc85 dfe3      	RCALL SUBOPT_0x40B
00dc86 cfe9      	RJMP SUBOPT_0x40C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x410:
00dc87 8be8      	STD  Y+16,R30
00dc88 8bf9      	STD  Y+16+1,R31
00dc89 89a8      	LDD  R26,Y+16
00dc8a 89b9      	LDD  R27,Y+16+1
00dc8b 940e a5e6 	CALL _strlen
00dc8d 2f1e      	MOV  R17,R30
00dc8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x411:
00dc8f 7f0b      	ANDI R16,LOW(251)
00dc90 8de9      	LDD  R30,Y+25
00dc91 93ea      	ST   -Y,R30
                +
00dc92 01de     +MOVW R26 , R28
00dc93 5aa5     +SUBI R26 , LOW ( - 91 )
00dc94 4fbf     +SBCI R27 , HIGH ( - 91 )
00dc95 900d     +LD R0 , X +
00dc96 91bc     +LD R27 , X
00dc97 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00dc98 01fe     +MOVW R30 , R28
00dc99 5ae3     +SUBI R30 , LOW ( - 93 )
00dc9a 4fff     +SBCI R31 , HIGH ( - 93 )
00dc9b 9001     +LD R0 , Z +
00dc9c 9011     +LD R1 , Z +
00dc9d 9161     +LD R22 , Z +
00dc9e 8170     +LD R23 , Z
00dc9f 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00dca0 bf6c      	OUT  EIND,R22
00dca1 9519      	EICALL
00dca2 3050      	CPI  R21,0
00dca3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x412:
                +
00dca4 e2e9     +LDI R30 , LOW ( _put_buff_G104 )
00dca5 ebfc     +LDI R31 , HIGH ( _put_buff_G104 )
00dca6 e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00dca7 e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00dca8 940e e05b 	CALL __PUTPARD1
00dcaa 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00dcab 9858      	cbi  __i2c_port,__scl_bit
00dcac 9859      	cbi  __i2c_port,__sda_bit
00dcad 9a50      	sbi  __i2c_dir,__scl_bit
00dcae 9851      	cbi  __i2c_dir,__sda_bit
00dcaf c015      	rjmp __i2c_delay2
                 _i2c_start:
00dcb0 9851      	cbi  __i2c_dir,__sda_bit
00dcb1 9850      	cbi  __i2c_dir,__scl_bit
00dcb2 27ee      	clr  r30
00dcb3 0000      	nop
00dcb4 9b49      	sbis __i2c_pin,__sda_bit
00dcb5 9508      	ret
00dcb6 9b48      	sbis __i2c_pin,__scl_bit
00dcb7 9508      	ret
00dcb8 d004      	rcall __i2c_delay1
00dcb9 9a51      	sbi  __i2c_dir,__sda_bit
00dcba d002      	rcall __i2c_delay1
00dcbb 9a50      	sbi  __i2c_dir,__scl_bit
00dcbc e0e1      	ldi  r30,1
                 __i2c_delay1:
00dcbd e06d      	ldi  r22,13
00dcbe c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00dcbf 9a51      	sbi  __i2c_dir,__sda_bit
00dcc0 9a50      	sbi  __i2c_dir,__scl_bit
00dcc1 d003      	rcall __i2c_delay2
00dcc2 9850      	cbi  __i2c_dir,__scl_bit
00dcc3 dff9      	rcall __i2c_delay1
00dcc4 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00dcc5 e16b      	ldi  r22,27
                 __i2c_delay2l:
00dcc6 956a      	dec  r22
00dcc7 f7f1      	brne __i2c_delay2l
00dcc8 9508      	ret
                 _i2c_read:
00dcc9 e078      	ldi  r23,8
                 __i2c_read0:
00dcca 9850      	cbi  __i2c_dir,__scl_bit
00dccb dff1      	rcall __i2c_delay1
                 __i2c_read3:
00dccc 9b48      	sbis __i2c_pin,__scl_bit
00dccd cffe      	rjmp __i2c_read3
00dcce dfee      	rcall __i2c_delay1
00dccf 9488      	clc
00dcd0 9949      	sbic __i2c_pin,__sda_bit
00dcd1 9408      	sec
00dcd2 9a50      	sbi  __i2c_dir,__scl_bit
00dcd3 dff1      	rcall __i2c_delay2
00dcd4 1fee      	rol  r30
00dcd5 957a      	dec  r23
00dcd6 f799      	brne __i2c_read0
00dcd7 2f7a      	mov  r23,r26
00dcd8 2377      	tst  r23
00dcd9 f411      	brne __i2c_read1
00dcda 9851      	cbi  __i2c_dir,__sda_bit
00dcdb c001      	rjmp __i2c_read2
                 __i2c_read1:
00dcdc 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00dcdd dfdf      	rcall __i2c_delay1
00dcde 9850      	cbi  __i2c_dir,__scl_bit
00dcdf dfe5      	rcall __i2c_delay2
00dce0 9a50      	sbi  __i2c_dir,__scl_bit
00dce1 dfdb      	rcall __i2c_delay1
00dce2 9851      	cbi  __i2c_dir,__sda_bit
00dce3 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00dce4 e078      	ldi  r23,8
                 __i2c_write0:
00dce5 0faa      	lsl  r26
00dce6 f410      	brcc __i2c_write1
00dce7 9851      	cbi  __i2c_dir,__sda_bit
00dce8 c001      	rjmp __i2c_write2
                 __i2c_write1:
00dce9 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00dcea dfda      	rcall __i2c_delay2
00dceb 9850      	cbi  __i2c_dir,__scl_bit
00dcec dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00dced 9b48      	sbis __i2c_pin,__scl_bit
00dcee cffe      	rjmp __i2c_write3
00dcef dfcd      	rcall __i2c_delay1
00dcf0 9a50      	sbi  __i2c_dir,__scl_bit
00dcf1 957a      	dec  r23
00dcf2 f791      	brne __i2c_write0
00dcf3 9851      	cbi  __i2c_dir,__sda_bit
00dcf4 dfc8      	rcall __i2c_delay1
00dcf5 9850      	cbi  __i2c_dir,__scl_bit
00dcf6 dfce      	rcall __i2c_delay2
00dcf7 e0e1      	ldi  r30,1
00dcf8 9949      	sbic __i2c_pin,__sda_bit
00dcf9 27ee      	clr  r30
00dcfa 9a50      	sbi  __i2c_dir,__scl_bit
00dcfb cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00dcfc 9610      	adiw r26,0
00dcfd f039      	breq __delay_ms1
                 __delay_ms0:
                +
00dcfe ed80     +LDI R24 , LOW ( 0x7D0 )
00dcff e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00dd00 9701     +SBIW R24 , 1
00dd01 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00dd02 95a8      	wdr
00dd03 9711      	sbiw r26,1
00dd04 f7c9      	brne __delay_ms0
                 __delay_ms1:
00dd05 9508      	ret
                 
                 __ANEGF1:
00dd06 9730      	SBIW R30,0
00dd07 4060      	SBCI R22,0
00dd08 4070      	SBCI R23,0
00dd09 f009      	BREQ __ANEGF10
00dd0a 5870      	SUBI R23,0x80
                 __ANEGF10:
00dd0b 9508      	RET
                 
                 __ROUND_REPACK:
00dd0c 2355      	TST  R21
00dd0d f442      	BRPL __REPACK
00dd0e 3850      	CPI  R21,0x80
00dd0f f411      	BRNE __ROUND_REPACK0
00dd10 ffe0      	SBRS R30,0
00dd11 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00dd12 9631      	ADIW R30,1
00dd13 1f69      	ADC  R22,R25
00dd14 1f79      	ADC  R23,R25
00dd15 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00dd16 e850      	LDI  R21,0x80
00dd17 2757      	EOR  R21,R23
00dd18 f411      	BRNE __REPACK0
00dd19 935f      	PUSH R21
00dd1a c0cf      	RJMP __ZERORES
                 __REPACK0:
00dd1b 3f5f      	CPI  R21,0xFF
00dd1c f031      	BREQ __REPACK1
00dd1d 0f66      	LSL  R22
00dd1e 0c00      	LSL  R0
00dd1f 9557      	ROR  R21
00dd20 9567      	ROR  R22
00dd21 2f75      	MOV  R23,R21
00dd22 9508      	RET
                 __REPACK1:
00dd23 935f      	PUSH R21
00dd24 2000      	TST  R0
00dd25 f00a      	BRMI __REPACK2
00dd26 c0cf      	RJMP __MAXRES
                 __REPACK2:
00dd27 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00dd28 e850      	LDI  R21,0x80
00dd29 2e19      	MOV  R1,R25
00dd2a 2215      	AND  R1,R21
00dd2b 0f88      	LSL  R24
00dd2c 1f99      	ROL  R25
00dd2d 2795      	EOR  R25,R21
00dd2e 0f55      	LSL  R21
00dd2f 9587      	ROR  R24
                 
                 __UNPACK1:
00dd30 e850      	LDI  R21,0x80
00dd31 2e07      	MOV  R0,R23
00dd32 2205      	AND  R0,R21
00dd33 0f66      	LSL  R22
00dd34 1f77      	ROL  R23
00dd35 2775      	EOR  R23,R21
00dd36 0f55      	LSL  R21
00dd37 9567      	ROR  R22
00dd38 9508      	RET
                 
                 __CFD1U:
00dd39 9468      	SET
00dd3a c001      	RJMP __CFD1U0
                 __CFD1:
00dd3b 94e8      	CLT
                 __CFD1U0:
00dd3c 935f      	PUSH R21
00dd3d dff2      	RCALL __UNPACK1
00dd3e 3870      	CPI  R23,0x80
00dd3f f018      	BRLO __CFD10
00dd40 3f7f      	CPI  R23,0xFF
00dd41 f408      	BRCC __CFD10
00dd42 c0a7      	RJMP __ZERORES
                 __CFD10:
00dd43 e156      	LDI  R21,22
00dd44 1b57      	SUB  R21,R23
00dd45 f4aa      	BRPL __CFD11
00dd46 9551      	NEG  R21
00dd47 3058      	CPI  R21,8
00dd48 f40e      	BRTC __CFD19
00dd49 3059      	CPI  R21,9
                 __CFD19:
00dd4a f030      	BRLO __CFD17
00dd4b efef      	SER  R30
00dd4c efff      	SER  R31
00dd4d ef6f      	SER  R22
00dd4e e77f      	LDI  R23,0x7F
00dd4f f977      	BLD  R23,7
00dd50 c01a      	RJMP __CFD15
                 __CFD17:
00dd51 2777      	CLR  R23
00dd52 2355      	TST  R21
00dd53 f0b9      	BREQ __CFD15
                 __CFD18:
00dd54 0fee      	LSL  R30
00dd55 1fff      	ROL  R31
00dd56 1f66      	ROL  R22
00dd57 1f77      	ROL  R23
00dd58 955a      	DEC  R21
00dd59 f7d1      	BRNE __CFD18
00dd5a c010      	RJMP __CFD15
                 __CFD11:
00dd5b 2777      	CLR  R23
                 __CFD12:
00dd5c 3058      	CPI  R21,8
00dd5d f028      	BRLO __CFD13
00dd5e 2fef      	MOV  R30,R31
00dd5f 2ff6      	MOV  R31,R22
00dd60 2f67      	MOV  R22,R23
00dd61 5058      	SUBI R21,8
00dd62 cff9      	RJMP __CFD12
                 __CFD13:
00dd63 2355      	TST  R21
00dd64 f031      	BREQ __CFD15
                 __CFD14:
00dd65 9576      	LSR  R23
00dd66 9567      	ROR  R22
00dd67 95f7      	ROR  R31
00dd68 95e7      	ROR  R30
00dd69 955a      	DEC  R21
00dd6a f7d1      	BRNE __CFD14
                 __CFD15:
00dd6b 2000      	TST  R0
00dd6c f40a      	BRPL __CFD16
00dd6d d167      	RCALL __ANEGD1
                 __CFD16:
00dd6e 915f      	POP  R21
00dd6f 9508      	RET
                 
                 __CDF1U:
00dd70 9468      	SET
00dd71 c001      	RJMP __CDF1U0
                 __CDF1:
00dd72 94e8      	CLT
                 __CDF1U0:
00dd73 9730      	SBIW R30,0
00dd74 4060      	SBCI R22,0
00dd75 4070      	SBCI R23,0
00dd76 f0b1      	BREQ __CDF10
00dd77 2400      	CLR  R0
00dd78 f026      	BRTS __CDF11
00dd79 2377      	TST  R23
00dd7a f412      	BRPL __CDF11
00dd7b 9400      	COM  R0
00dd7c d158      	RCALL __ANEGD1
                 __CDF11:
00dd7d 2e17      	MOV  R1,R23
00dd7e e17e      	LDI  R23,30
00dd7f 2011      	TST  R1
                 __CDF12:
00dd80 f032      	BRMI __CDF13
00dd81 957a      	DEC  R23
00dd82 0fee      	LSL  R30
00dd83 1fff      	ROL  R31
00dd84 1f66      	ROL  R22
00dd85 1c11      	ROL  R1
00dd86 cff9      	RJMP __CDF12
                 __CDF13:
00dd87 2fef      	MOV  R30,R31
00dd88 2ff6      	MOV  R31,R22
00dd89 2d61      	MOV  R22,R1
00dd8a 935f      	PUSH R21
00dd8b df8a      	RCALL __REPACK
00dd8c 915f      	POP  R21
                 __CDF10:
00dd8d 9508      	RET
                 
                 __SWAPACC:
00dd8e 934f      	PUSH R20
00dd8f 01af      	MOVW R20,R30
00dd90 01fd      	MOVW R30,R26
00dd91 01da      	MOVW R26,R20
00dd92 01ab      	MOVW R20,R22
00dd93 01bc      	MOVW R22,R24
00dd94 01ca      	MOVW R24,R20
00dd95 2d40      	MOV  R20,R0
00dd96 2c01      	MOV  R0,R1
00dd97 2e14      	MOV  R1,R20
00dd98 914f      	POP  R20
00dd99 9508      	RET
                 
                 __UADD12:
00dd9a 0fea      	ADD  R30,R26
00dd9b 1ffb      	ADC  R31,R27
00dd9c 1f68      	ADC  R22,R24
00dd9d 9508      	RET
                 
                 __NEGMAN1:
00dd9e 95e0      	COM  R30
00dd9f 95f0      	COM  R31
00dda0 9560      	COM  R22
00dda1 5fef      	SUBI R30,-1
00dda2 4fff      	SBCI R31,-1
00dda3 4f6f      	SBCI R22,-1
00dda4 9508      	RET
                 
                 __SUBF12:
00dda5 935f      	PUSH R21
00dda6 df81      	RCALL __UNPACK
00dda7 3890      	CPI  R25,0x80
00dda8 f171      	BREQ __ADDF129
00dda9 e850      	LDI  R21,0x80
00ddaa 2615      	EOR  R1,R21
                 
00ddab c004      	RJMP __ADDF120
                 
                 __ADDF12:
00ddac 935f      	PUSH R21
00ddad df7a      	RCALL __UNPACK
00ddae 3890      	CPI  R25,0x80
00ddaf f139      	BREQ __ADDF129
                 
                 __ADDF120:
00ddb0 3870      	CPI  R23,0x80
00ddb1 f121      	BREQ __ADDF128
                 __ADDF121:
00ddb2 2f57      	MOV  R21,R23
00ddb3 1b59      	SUB  R21,R25
00ddb4 f12b      	BRVS __ADDF1211
00ddb5 f412      	BRPL __ADDF122
00ddb6 dfd7      	RCALL __SWAPACC
00ddb7 cffa      	RJMP __ADDF121
                 __ADDF122:
00ddb8 3158      	CPI  R21,24
00ddb9 f018      	BRLO __ADDF123
00ddba 27aa      	CLR  R26
00ddbb 27bb      	CLR  R27
00ddbc 2788      	CLR  R24
                 __ADDF123:
00ddbd 3058      	CPI  R21,8
00ddbe f028      	BRLO __ADDF124
00ddbf 2fab      	MOV  R26,R27
00ddc0 2fb8      	MOV  R27,R24
00ddc1 2788      	CLR  R24
00ddc2 5058      	SUBI R21,8
00ddc3 cff9      	RJMP __ADDF123
                 __ADDF124:
00ddc4 2355      	TST  R21
00ddc5 f029      	BREQ __ADDF126
                 __ADDF125:
00ddc6 9586      	LSR  R24
00ddc7 95b7      	ROR  R27
00ddc8 95a7      	ROR  R26
00ddc9 955a      	DEC  R21
00ddca f7d9      	BRNE __ADDF125
                 __ADDF126:
00ddcb 2d50      	MOV  R21,R0
00ddcc 2551      	EOR  R21,R1
00ddcd f072      	BRMI __ADDF127
00ddce dfcb      	RCALL __UADD12
00ddcf f438      	BRCC __ADDF129
00ddd0 9567      	ROR  R22
00ddd1 95f7      	ROR  R31
00ddd2 95e7      	ROR  R30
00ddd3 9573      	INC  R23
00ddd4 f413      	BRVC __ADDF129
00ddd5 c020      	RJMP __MAXRES
                 __ADDF128:
00ddd6 dfb7      	RCALL __SWAPACC
                 __ADDF129:
00ddd7 df3e      	RCALL __REPACK
00ddd8 915f      	POP  R21
00ddd9 9508      	RET
                 __ADDF1211:
00ddda f7d8      	BRCC __ADDF128
00dddb cffb      	RJMP __ADDF129
                 __ADDF127:
00dddc 1bea      	SUB  R30,R26
00dddd 0bfb      	SBC  R31,R27
00ddde 0b68      	SBC  R22,R24
00dddf f051      	BREQ __ZERORES
00dde0 f410      	BRCC __ADDF1210
00dde1 9400      	COM  R0
00dde2 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00dde3 2366      	TST  R22
00dde4 f392      	BRMI __ADDF129
00dde5 0fee      	LSL  R30
00dde6 1fff      	ROL  R31
00dde7 1f66      	ROL  R22
00dde8 957a      	DEC  R23
00dde9 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00ddea 27ee      	CLR  R30
00ddeb 27ff      	CLR  R31
00ddec 2766      	CLR  R22
00dded 2777      	CLR  R23
00ddee 915f      	POP  R21
00ddef 9508      	RET
                 
                 __MINRES:
00ddf0 efef      	SER  R30
00ddf1 efff      	SER  R31
00ddf2 e76f      	LDI  R22,0x7F
00ddf3 ef7f      	SER  R23
00ddf4 915f      	POP  R21
00ddf5 9508      	RET
                 
                 __MAXRES:
00ddf6 efef      	SER  R30
00ddf7 efff      	SER  R31
00ddf8 e76f      	LDI  R22,0x7F
00ddf9 e77f      	LDI  R23,0x7F
00ddfa 915f      	POP  R21
00ddfb 9508      	RET
                 
                 __MULF12:
00ddfc 935f      	PUSH R21
00ddfd df2a      	RCALL __UNPACK
00ddfe 3870      	CPI  R23,0x80
00ddff f351      	BREQ __ZERORES
00de00 3890      	CPI  R25,0x80
00de01 f341      	BREQ __ZERORES
00de02 2401      	EOR  R0,R1
00de03 9408      	SEC
00de04 1f79      	ADC  R23,R25
00de05 f423      	BRVC __MULF124
00de06 f31c      	BRLT __ZERORES
                 __MULF125:
00de07 2000      	TST  R0
00de08 f33a      	BRMI __MINRES
00de09 cfec      	RJMP __MAXRES
                 __MULF124:
00de0a 920f      	PUSH R0
00de0b 931f      	PUSH R17
00de0c 932f      	PUSH R18
00de0d 933f      	PUSH R19
00de0e 934f      	PUSH R20
00de0f 2711      	CLR  R17
00de10 2722      	CLR  R18
00de11 2799      	CLR  R25
00de12 9f68      	MUL  R22,R24
00de13 01a0      	MOVW R20,R0
00de14 9f8f      	MUL  R24,R31
00de15 2d30      	MOV  R19,R0
00de16 0d41      	ADD  R20,R1
00de17 1f59      	ADC  R21,R25
00de18 9f6b      	MUL  R22,R27
00de19 0d30      	ADD  R19,R0
00de1a 1d41      	ADC  R20,R1
00de1b 1f59      	ADC  R21,R25
00de1c 9f8e      	MUL  R24,R30
00de1d d027      	RCALL __MULF126
00de1e 9fbf      	MUL  R27,R31
00de1f d025      	RCALL __MULF126
00de20 9f6a      	MUL  R22,R26
00de21 d023      	RCALL __MULF126
00de22 9fbe      	MUL  R27,R30
00de23 d01d      	RCALL __MULF127
00de24 9faf      	MUL  R26,R31
00de25 d01b      	RCALL __MULF127
00de26 9fae      	MUL  R26,R30
00de27 0d11      	ADD  R17,R1
00de28 1f29      	ADC  R18,R25
00de29 1f39      	ADC  R19,R25
00de2a 1f49      	ADC  R20,R25
00de2b 1f59      	ADC  R21,R25
00de2c 2fe3      	MOV  R30,R19
00de2d 2ff4      	MOV  R31,R20
00de2e 2f65      	MOV  R22,R21
00de2f 2f52      	MOV  R21,R18
00de30 914f      	POP  R20
00de31 913f      	POP  R19
00de32 912f      	POP  R18
00de33 911f      	POP  R17
00de34 900f      	POP  R0
00de35 2366      	TST  R22
00de36 f02a      	BRMI __MULF122
00de37 0f55      	LSL  R21
00de38 1fee      	ROL  R30
00de39 1fff      	ROL  R31
00de3a 1f66      	ROL  R22
00de3b c002      	RJMP __MULF123
                 __MULF122:
00de3c 9573      	INC  R23
00de3d f24b      	BRVS __MULF125
                 __MULF123:
00de3e decd      	RCALL __ROUND_REPACK
00de3f 915f      	POP  R21
00de40 9508      	RET
                 
                 __MULF127:
00de41 0d10      	ADD  R17,R0
00de42 1d21      	ADC  R18,R1
00de43 1f39      	ADC  R19,R25
00de44 c002      	RJMP __MULF128
                 __MULF126:
00de45 0d20      	ADD  R18,R0
00de46 1d31      	ADC  R19,R1
                 __MULF128:
00de47 1f49      	ADC  R20,R25
00de48 1f59      	ADC  R21,R25
00de49 9508      	RET
                 
                 __DIVF21:
00de4a 935f      	PUSH R21
00de4b dedc      	RCALL __UNPACK
00de4c 3870      	CPI  R23,0x80
00de4d f421      	BRNE __DIVF210
00de4e 2011      	TST  R1
                 __DIVF211:
00de4f f40a      	BRPL __DIVF219
00de50 cf9f      	RJMP __MINRES
                 __DIVF219:
00de51 cfa4      	RJMP __MAXRES
                 __DIVF210:
00de52 3890      	CPI  R25,0x80
00de53 f409      	BRNE __DIVF218
                 __DIVF217:
00de54 cf95      	RJMP __ZERORES
                 __DIVF218:
00de55 2401      	EOR  R0,R1
00de56 9408      	SEC
00de57 0b97      	SBC  R25,R23
00de58 f41b      	BRVC __DIVF216
00de59 f3d4      	BRLT __DIVF217
00de5a 2000      	TST  R0
00de5b cff3      	RJMP __DIVF211
                 __DIVF216:
00de5c 2f79      	MOV  R23,R25
00de5d 931f      	PUSH R17
00de5e 932f      	PUSH R18
00de5f 933f      	PUSH R19
00de60 934f      	PUSH R20
00de61 2411      	CLR  R1
00de62 2711      	CLR  R17
00de63 2722      	CLR  R18
00de64 2733      	CLR  R19
00de65 2744      	CLR  R20
00de66 2755      	CLR  R21
00de67 e290      	LDI  R25,32
                 __DIVF212:
00de68 17ae      	CP   R26,R30
00de69 07bf      	CPC  R27,R31
00de6a 0786      	CPC  R24,R22
00de6b 0741      	CPC  R20,R17
00de6c f030      	BRLO __DIVF213
00de6d 1bae      	SUB  R26,R30
00de6e 0bbf      	SBC  R27,R31
00de6f 0b86      	SBC  R24,R22
00de70 0b41      	SBC  R20,R17
00de71 9408      	SEC
00de72 c001      	RJMP __DIVF214
                 __DIVF213:
00de73 9488      	CLC
                 __DIVF214:
00de74 1f55      	ROL  R21
00de75 1f22      	ROL  R18
00de76 1f33      	ROL  R19
00de77 1c11      	ROL  R1
00de78 1faa      	ROL  R26
00de79 1fbb      	ROL  R27
00de7a 1f88      	ROL  R24
00de7b 1f44      	ROL  R20
00de7c 959a      	DEC  R25
00de7d f751      	BRNE __DIVF212
00de7e 01f9      	MOVW R30,R18
00de7f 2d61      	MOV  R22,R1
00de80 914f      	POP  R20
00de81 913f      	POP  R19
00de82 912f      	POP  R18
00de83 911f      	POP  R17
00de84 2366      	TST  R22
00de85 f032      	BRMI __DIVF215
00de86 0f55      	LSL  R21
00de87 1fee      	ROL  R30
00de88 1fff      	ROL  R31
00de89 1f66      	ROL  R22
00de8a 957a      	DEC  R23
00de8b f243      	BRVS __DIVF217
                 __DIVF215:
00de8c de7f      	RCALL __ROUND_REPACK
00de8d 915f      	POP  R21
00de8e 9508      	RET
                 
                 __CMPF12:
00de8f 2399      	TST  R25
00de90 f09a      	BRMI __CMPF120
00de91 2377      	TST  R23
00de92 f042      	BRMI __CMPF121
00de93 1797      	CP   R25,R23
00de94 f048      	BRLO __CMPF122
00de95 f429      	BRNE __CMPF121
00de96 17ae      	CP   R26,R30
00de97 07bf      	CPC  R27,R31
00de98 0786      	CPC  R24,R22
00de99 f020      	BRLO __CMPF122
00de9a f031      	BREQ __CMPF123
                 __CMPF121:
00de9b 9498      	CLZ
00de9c 9488      	CLC
00de9d 9508      	RET
                 __CMPF122:
00de9e 9498      	CLZ
00de9f 9408      	SEC
00dea0 9508      	RET
                 __CMPF123:
00dea1 9418      	SEZ
00dea2 9488      	CLC
00dea3 9508      	RET
                 __CMPF120:
00dea4 2377      	TST  R23
00dea5 f7c2      	BRPL __CMPF122
00dea6 1797      	CP   R25,R23
00dea7 f398      	BRLO __CMPF121
00dea8 f7a9      	BRNE __CMPF122
00dea9 17ea      	CP   R30,R26
00deaa 07fb      	CPC  R31,R27
00deab 0768      	CPC  R22,R24
00deac f388      	BRLO __CMPF122
00dead f399      	BREQ __CMPF123
00deae cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00deaf 2400      	CLR  R0
00deb0 0daf      	ADD  R26,R15
00deb1 1db0      	ADC  R27,R0
00deb2 9508      	RET
                 
                 __ADDD12:
00deb3 0fea      	ADD  R30,R26
00deb4 1ffb      	ADC  R31,R27
00deb5 1f68      	ADC  R22,R24
00deb6 1f79      	ADC  R23,R25
00deb7 9508      	RET
                 
                 __ADDD21:
00deb8 0fae      	ADD  R26,R30
00deb9 1fbf      	ADC  R27,R31
00deba 1f86      	ADC  R24,R22
00debb 1f97      	ADC  R25,R23
00debc 9508      	RET
                 
                 __SUBD12:
00debd 1bea      	SUB  R30,R26
00debe 0bfb      	SBC  R31,R27
00debf 0b68      	SBC  R22,R24
00dec0 0b79      	SBC  R23,R25
00dec1 9508      	RET
                 
                 __SUBD21:
00dec2 1bae      	SUB  R26,R30
00dec3 0bbf      	SBC  R27,R31
00dec4 0b86      	SBC  R24,R22
00dec5 0b97      	SBC  R25,R23
00dec6 9508      	RET
                 
                 __ANDD12:
00dec7 23ea      	AND  R30,R26
00dec8 23fb      	AND  R31,R27
00dec9 2368      	AND  R22,R24
00deca 2379      	AND  R23,R25
00decb 9508      	RET
                 
                 __ORD12:
00decc 2bea      	OR   R30,R26
00decd 2bfb      	OR   R31,R27
00dece 2b68      	OR   R22,R24
00decf 2b79      	OR   R23,R25
00ded0 9508      	RET
                 
                 __ANEGW1:
00ded1 95f1      	NEG  R31
00ded2 95e1      	NEG  R30
00ded3 40f0      	SBCI R31,0
00ded4 9508      	RET
                 
                 __ANEGD1:
00ded5 95f0      	COM  R31
00ded6 9560      	COM  R22
00ded7 9570      	COM  R23
00ded8 95e1      	NEG  R30
00ded9 4fff      	SBCI R31,-1
00deda 4f6f      	SBCI R22,-1
00dedb 4f7f      	SBCI R23,-1
00dedc 9508      	RET
                 
                 __LSLW12:
00dedd 23ee      	TST  R30
00dede 2e0e      	MOV  R0,R30
00dedf 01fd      	MOVW R30,R26
00dee0 f021      	BREQ __LSLW12R
                 __LSLW12L:
00dee1 0fee      	LSL  R30
00dee2 1fff      	ROL  R31
00dee3 940a      	DEC  R0
00dee4 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00dee5 9508      	RET
                 
                 __LSLD12:
00dee6 23ee      	TST  R30
00dee7 2e0e      	MOV  R0,R30
00dee8 01fd      	MOVW R30,R26
00dee9 01bc      	MOVW R22,R24
00deea f031      	BREQ __LSLD12R
                 __LSLD12L:
00deeb 0fee      	LSL  R30
00deec 1fff      	ROL  R31
00deed 1f66      	ROL  R22
00deee 1f77      	ROL  R23
00deef 940a      	DEC  R0
00def0 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00def1 9508      	RET
                 
                 __LSRD12:
00def2 23ee      	TST  R30
00def3 2e0e      	MOV  R0,R30
00def4 01fd      	MOVW R30,R26
00def5 01bc      	MOVW R22,R24
00def6 f031      	BREQ __LSRD12R
                 __LSRD12L:
00def7 9576      	LSR  R23
00def8 9567      	ROR  R22
00def9 95f7      	ROR  R31
00defa 95e7      	ROR  R30
00defb 940a      	DEC  R0
00defc f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00defd 9508      	RET
                 
                 __LSLW4:
00defe 0fee      	LSL  R30
00deff 1fff      	ROL  R31
                 __LSLW3:
00df00 0fee      	LSL  R30
00df01 1fff      	ROL  R31
                 __LSLW2:
00df02 0fee      	LSL  R30
00df03 1fff      	ROL  R31
00df04 0fee      	LSL  R30
00df05 1fff      	ROL  R31
00df06 9508      	RET
                 
                 __ASRW4:
00df07 95f5      	ASR  R31
00df08 95e7      	ROR  R30
                 __ASRW3:
00df09 95f5      	ASR  R31
00df0a 95e7      	ROR  R30
                 __ASRW2:
00df0b 95f5      	ASR  R31
00df0c 95e7      	ROR  R30
00df0d 95f5      	ASR  R31
00df0e 95e7      	ROR  R30
00df0f 9508      	RET
                 
                 __LSRW4:
00df10 95f6      	LSR  R31
00df11 95e7      	ROR  R30
                 __LSRW3:
00df12 95f6      	LSR  R31
00df13 95e7      	ROR  R30
                 __LSRW2:
00df14 95f6      	LSR  R31
00df15 95e7      	ROR  R30
00df16 95f6      	LSR  R31
00df17 95e7      	ROR  R30
00df18 9508      	RET
                 
                 __LSRD1:
00df19 9576      	LSR  R23
00df1a 9567      	ROR  R22
00df1b 95f7      	ROR  R31
00df1c 95e7      	ROR  R30
00df1d 9508      	RET
                 
                 __LSLD1:
00df1e 0fee      	LSL  R30
00df1f 1fff      	ROL  R31
00df20 1f66      	ROL  R22
00df21 1f77      	ROL  R23
00df22 9508      	RET
                 
                 __ASRW8:
00df23 2fef      	MOV  R30,R31
00df24 27ff      	CLR  R31
00df25 fde7      	SBRC R30,7
00df26 efff      	SER  R31
00df27 9508      	RET
                 
                 __LSRD16:
00df28 2fe6      	MOV  R30,R22
00df29 2ff7      	MOV  R31,R23
00df2a e060      	LDI  R22,0
00df2b e070      	LDI  R23,0
00df2c 9508      	RET
                 
                 __LSLD16:
00df2d 2f6e      	MOV  R22,R30
00df2e 2f7f      	MOV  R23,R31
00df2f e0e0      	LDI  R30,0
00df30 e0f0      	LDI  R31,0
00df31 9508      	RET
                 
                 __CBD1:
00df32 2ffe      	MOV  R31,R30
00df33 0fff      	ADD  R31,R31
00df34 0bff      	SBC  R31,R31
00df35 2f6f      	MOV  R22,R31
00df36 2f7f      	MOV  R23,R31
00df37 9508      	RET
                 
                 __CWD1:
00df38 2f6f      	MOV  R22,R31
00df39 0f66      	ADD  R22,R22
00df3a 0b66      	SBC  R22,R22
00df3b 2f76      	MOV  R23,R22
00df3c 9508      	RET
                 
                 __COMD1:
00df3d 95e0      	COM  R30
00df3e 95f0      	COM  R31
00df3f 9560      	COM  R22
00df40 9570      	COM  R23
00df41 9508      	RET
                 
                 __EQB12:
00df42 17ea      	CP   R30,R26
00df43 e0e1      	LDI  R30,1
00df44 f009      	BREQ __EQB12T
00df45 27ee      	CLR  R30
                 __EQB12T:
00df46 9508      	RET
                 
                 __LNEGB1:
00df47 23ee      	TST  R30
00df48 e0e1      	LDI  R30,1
00df49 f009      	BREQ __LNEGB1F
00df4a 27ee      	CLR  R30
                 __LNEGB1F:
00df4b 9508      	RET
                 
                 __LNEGW1:
00df4c 2bef      	OR   R30,R31
00df4d e0e1      	LDI  R30,1
00df4e f009      	BREQ __LNEGW1F
00df4f e0e0      	LDI  R30,0
                 __LNEGW1F:
00df50 9508      	RET
                 
                 __MULW12U:
00df51 9ffa      	MUL  R31,R26
00df52 2df0      	MOV  R31,R0
00df53 9feb      	MUL  R30,R27
00df54 0df0      	ADD  R31,R0
00df55 9fea      	MUL  R30,R26
00df56 2de0      	MOV  R30,R0
00df57 0df1      	ADD  R31,R1
00df58 9508      	RET
                 
                 __MULD12U:
00df59 9f7a      	MUL  R23,R26
00df5a 2d70      	MOV  R23,R0
00df5b 9f6b      	MUL  R22,R27
00df5c 0d70      	ADD  R23,R0
00df5d 9ff8      	MUL  R31,R24
00df5e 0d70      	ADD  R23,R0
00df5f 9fe9      	MUL  R30,R25
00df60 0d70      	ADD  R23,R0
00df61 9f6a      	MUL  R22,R26
00df62 2d60      	MOV  R22,R0
00df63 0d71      	ADD  R23,R1
00df64 9ffb      	MUL  R31,R27
00df65 0d60      	ADD  R22,R0
00df66 1d71      	ADC  R23,R1
00df67 9fe8      	MUL  R30,R24
00df68 0d60      	ADD  R22,R0
00df69 1d71      	ADC  R23,R1
00df6a 2788      	CLR  R24
00df6b 9ffa      	MUL  R31,R26
00df6c 2df0      	MOV  R31,R0
00df6d 0d61      	ADD  R22,R1
00df6e 1f78      	ADC  R23,R24
00df6f 9feb      	MUL  R30,R27
00df70 0df0      	ADD  R31,R0
00df71 1d61      	ADC  R22,R1
00df72 1f78      	ADC  R23,R24
00df73 9fea      	MUL  R30,R26
00df74 2de0      	MOV  R30,R0
00df75 0df1      	ADD  R31,R1
00df76 1f68      	ADC  R22,R24
00df77 1f78      	ADC  R23,R24
00df78 9508      	RET
                 
                 __MULB1W2U:
00df79 2f6e      	MOV  R22,R30
00df7a 9f6a      	MUL  R22,R26
00df7b 01f0      	MOVW R30,R0
00df7c 9f6b      	MUL  R22,R27
00df7d 0df0      	ADD  R31,R0
00df7e 9508      	RET
                 
                 __MULW12:
00df7f d086      	RCALL __CHKSIGNW
00df80 dfd0      	RCALL __MULW12U
00df81 f40e      	BRTC __MULW121
00df82 df4e      	RCALL __ANEGW1
                 __MULW121:
00df83 9508      	RET
                 
                 __DIVB21U:
00df84 2400      	CLR  R0
00df85 e098      	LDI  R25,8
                 __DIVB21U1:
00df86 0faa      	LSL  R26
00df87 1c00      	ROL  R0
00df88 1a0e      	SUB  R0,R30
00df89 f410      	BRCC __DIVB21U2
00df8a 0e0e      	ADD  R0,R30
00df8b c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00df8c 60a1      	SBR  R26,1
                 __DIVB21U3:
00df8d 959a      	DEC  R25
00df8e f7b9      	BRNE __DIVB21U1
00df8f 2fea      	MOV  R30,R26
00df90 2da0      	MOV  R26,R0
00df91 9508      	RET
                 
                 __DIVB21:
00df92 d067      	RCALL __CHKSIGNB
00df93 dff0      	RCALL __DIVB21U
00df94 f40e      	BRTC __DIVB211
00df95 95e1      	NEG  R30
                 __DIVB211:
00df96 9508      	RET
                 
                 __DIVW21U:
00df97 2400      	CLR  R0
00df98 2411      	CLR  R1
00df99 e190      	LDI  R25,16
                 __DIVW21U1:
00df9a 0faa      	LSL  R26
00df9b 1fbb      	ROL  R27
00df9c 1c00      	ROL  R0
00df9d 1c11      	ROL  R1
00df9e 1a0e      	SUB  R0,R30
00df9f 0a1f      	SBC  R1,R31
00dfa0 f418      	BRCC __DIVW21U2
00dfa1 0e0e      	ADD  R0,R30
00dfa2 1e1f      	ADC  R1,R31
00dfa3 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00dfa4 60a1      	SBR  R26,1
                 __DIVW21U3:
00dfa5 959a      	DEC  R25
00dfa6 f799      	BRNE __DIVW21U1
00dfa7 01fd      	MOVW R30,R26
00dfa8 01d0      	MOVW R26,R0
00dfa9 9508      	RET
                 
                 __DIVW21:
00dfaa d05b      	RCALL __CHKSIGNW
00dfab dfeb      	RCALL __DIVW21U
00dfac f40e      	BRTC __DIVW211
00dfad df23      	RCALL __ANEGW1
                 __DIVW211:
00dfae 9508      	RET
                 
                 __DIVD21U:
00dfaf 933f      	PUSH R19
00dfb0 934f      	PUSH R20
00dfb1 935f      	PUSH R21
00dfb2 2400      	CLR  R0
00dfb3 2411      	CLR  R1
00dfb4 2744      	CLR  R20
00dfb5 2755      	CLR  R21
00dfb6 e230      	LDI  R19,32
                 __DIVD21U1:
00dfb7 0faa      	LSL  R26
00dfb8 1fbb      	ROL  R27
00dfb9 1f88      	ROL  R24
00dfba 1f99      	ROL  R25
00dfbb 1c00      	ROL  R0
00dfbc 1c11      	ROL  R1
00dfbd 1f44      	ROL  R20
00dfbe 1f55      	ROL  R21
00dfbf 1a0e      	SUB  R0,R30
00dfc0 0a1f      	SBC  R1,R31
00dfc1 0b46      	SBC  R20,R22
00dfc2 0b57      	SBC  R21,R23
00dfc3 f428      	BRCC __DIVD21U2
00dfc4 0e0e      	ADD  R0,R30
00dfc5 1e1f      	ADC  R1,R31
00dfc6 1f46      	ADC  R20,R22
00dfc7 1f57      	ADC  R21,R23
00dfc8 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00dfc9 60a1      	SBR  R26,1
                 __DIVD21U3:
00dfca 953a      	DEC  R19
00dfcb f759      	BRNE __DIVD21U1
00dfcc 01fd      	MOVW R30,R26
00dfcd 01bc      	MOVW R22,R24
00dfce 01d0      	MOVW R26,R0
00dfcf 01ca      	MOVW R24,R20
00dfd0 915f      	POP  R21
00dfd1 914f      	POP  R20
00dfd2 913f      	POP  R19
00dfd3 9508      	RET
                 
                 __DIVD21:
00dfd4 d03f      	RCALL __CHKSIGND
00dfd5 dfd9      	RCALL __DIVD21U
00dfd6 f40e      	BRTC __DIVD211
00dfd7 defd      	RCALL __ANEGD1
                 __DIVD211:
00dfd8 9508      	RET
                 
                 __MODB21:
00dfd9 94e8      	CLT
00dfda ffa7      	SBRS R26,7
00dfdb c002      	RJMP __MODB211
00dfdc 95a1      	NEG  R26
00dfdd 9468      	SET
                 __MODB211:
00dfde fde7      	SBRC R30,7
00dfdf 95e1      	NEG  R30
00dfe0 dfa3      	RCALL __DIVB21U
00dfe1 2fea      	MOV  R30,R26
00dfe2 f40e      	BRTC __MODB212
00dfe3 95e1      	NEG  R30
                 __MODB212:
00dfe4 9508      	RET
                 
                 __MODW21U:
00dfe5 dfb1      	RCALL __DIVW21U
00dfe6 01fd      	MOVW R30,R26
00dfe7 9508      	RET
                 
                 __MODW21:
00dfe8 94e8      	CLT
00dfe9 ffb7      	SBRS R27,7
00dfea c004      	RJMP __MODW211
00dfeb 95a0      	COM  R26
00dfec 95b0      	COM  R27
00dfed 9611      	ADIW R26,1
00dfee 9468      	SET
                 __MODW211:
00dfef fdf7      	SBRC R31,7
00dff0 dee0      	RCALL __ANEGW1
00dff1 dfa5      	RCALL __DIVW21U
00dff2 01fd      	MOVW R30,R26
00dff3 f40e      	BRTC __MODW212
00dff4 dedc      	RCALL __ANEGW1
                 __MODW212:
00dff5 9508      	RET
                 
                 __MODD21U:
00dff6 dfb8      	RCALL __DIVD21U
00dff7 01fd      	MOVW R30,R26
00dff8 01bc      	MOVW R22,R24
00dff9 9508      	RET
                 
                 __CHKSIGNB:
00dffa 94e8      	CLT
00dffb ffe7      	SBRS R30,7
00dffc c002      	RJMP __CHKSB1
00dffd 95e1      	NEG  R30
00dffe 9468      	SET
                 __CHKSB1:
00dfff ffa7      	SBRS R26,7
00e000 c004      	RJMP __CHKSB2
00e001 95a1      	NEG  R26
00e002 f800      	BLD  R0,0
00e003 9403      	INC  R0
00e004 fa00      	BST  R0,0
                 __CHKSB2:
00e005 9508      	RET
                 
                 __CHKSIGNW:
00e006 94e8      	CLT
00e007 fff7      	SBRS R31,7
00e008 c002      	RJMP __CHKSW1
00e009 dec7      	RCALL __ANEGW1
00e00a 9468      	SET
                 __CHKSW1:
00e00b ffb7      	SBRS R27,7
00e00c c006      	RJMP __CHKSW2
00e00d 95a0      	COM  R26
00e00e 95b0      	COM  R27
00e00f 9611      	ADIW R26,1
00e010 f800      	BLD  R0,0
00e011 9403      	INC  R0
00e012 fa00      	BST  R0,0
                 __CHKSW2:
00e013 9508      	RET
                 
                 __CHKSIGND:
00e014 94e8      	CLT
00e015 ff77      	SBRS R23,7
00e016 c002      	RJMP __CHKSD1
00e017 debd      	RCALL __ANEGD1
00e018 9468      	SET
                 __CHKSD1:
00e019 ff97      	SBRS R25,7
00e01a c00b      	RJMP __CHKSD2
00e01b 2400      	CLR  R0
00e01c 95a0      	COM  R26
00e01d 95b0      	COM  R27
00e01e 9580      	COM  R24
00e01f 9590      	COM  R25
00e020 9611      	ADIW R26,1
00e021 1d80      	ADC  R24,R0
00e022 1d90      	ADC  R25,R0
00e023 f800      	BLD  R0,0
00e024 9403      	INC  R0
00e025 fa00      	BST  R0,0
                 __CHKSD2:
00e026 9508      	RET
                 
                 __GETW1P:
00e027 91ed      	LD   R30,X+
00e028 91fc      	LD   R31,X
00e029 9711      	SBIW R26,1
00e02a 9508      	RET
                 
                 __GETD1P:
00e02b 91ed      	LD   R30,X+
00e02c 91fd      	LD   R31,X+
00e02d 916d      	LD   R22,X+
00e02e 917c      	LD   R23,X
00e02f 9713      	SBIW R26,3
00e030 9508      	RET
                 
                 __GETD1P_INC:
00e031 91ed      	LD   R30,X+
00e032 91fd      	LD   R31,X+
00e033 916d      	LD   R22,X+
00e034 917d      	LD   R23,X+
00e035 9508      	RET
                 
                 __PUTDP1:
00e036 93ed      	ST   X+,R30
00e037 93fd      	ST   X+,R31
00e038 936d      	ST   X+,R22
00e039 937c      	ST   X,R23
00e03a 9508      	RET
                 
                 __PUTDP1_DEC:
00e03b 937e      	ST   -X,R23
00e03c 936e      	ST   -X,R22
00e03d 93fe      	ST   -X,R31
00e03e 93ee      	ST   -X,R30
00e03f 9508      	RET
                 
                 __GETD1PF:
00e040 bf6b      	OUT  RAMPZ,R22
00e041 9007      	ELPM R0,Z+
00e042 9017      	ELPM R1,Z+
00e043 9167      	ELPM R22,Z+
00e044 9176      	ELPM R23,Z
00e045 01f0      	MOVW R30,R0
00e046 9508      	RET
                 
                 __GETD1S0:
00e047 81e8      	LD   R30,Y
00e048 81f9      	LDD  R31,Y+1
00e049 816a      	LDD  R22,Y+2
00e04a 817b      	LDD  R23,Y+3
00e04b 9508      	RET
                 
                 __GETD2S0:
00e04c 81a8      	LD   R26,Y
00e04d 81b9      	LDD  R27,Y+1
00e04e 818a      	LDD  R24,Y+2
00e04f 819b      	LDD  R25,Y+3
00e050 9508      	RET
                 
                 __PUTD1S0:
00e051 83e8      	ST   Y,R30
00e052 83f9      	STD  Y+1,R31
00e053 836a      	STD  Y+2,R22
00e054 837b      	STD  Y+3,R23
00e055 9508      	RET
                 
                 __PUTDZ20:
00e056 83a0      	ST   Z,R26
00e057 83b1      	STD  Z+1,R27
00e058 8382      	STD  Z+2,R24
00e059 8393      	STD  Z+3,R25
00e05a 9508      	RET
                 
                 __PUTPARD1:
00e05b 937a      	ST   -Y,R23
00e05c 936a      	ST   -Y,R22
00e05d 93fa      	ST   -Y,R31
00e05e 93ea      	ST   -Y,R30
00e05f 9508      	RET
                 
                 __PUTPARD2:
00e060 939a      	ST   -Y,R25
00e061 938a      	ST   -Y,R24
00e062 93ba      	ST   -Y,R27
00e063 93aa      	ST   -Y,R26
00e064 9508      	RET
                 
                 __PUTPARL:
00e065 27bb      	CLR  R27
                 __PUTPAR:
00e066 0fea      	ADD  R30,R26
00e067 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00e068 9002      	LD   R0,-Z
00e069 920a      	ST   -Y,R0
00e06a 9711      	SBIW R26,1
00e06b f7e1      	BRNE __PUTPAR0
00e06c 9508      	RET
                 
                 __CDF2U:
00e06d 9468      	SET
00e06e c001      	RJMP __CDF2U0
                 __CDF2:
00e06f 94e8      	CLT
                 __CDF2U0:
00e070 d001      	RCALL __SWAPD12
00e071 dd01      	RCALL __CDF1U0
                 
                 __SWAPD12:
00e072 2e18      	MOV  R1,R24
00e073 2f86      	MOV  R24,R22
00e074 2d61      	MOV  R22,R1
00e075 2e19      	MOV  R1,R25
00e076 2f97      	MOV  R25,R23
00e077 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00e078 2e1b      	MOV  R1,R27
00e079 2fbf      	MOV  R27,R31
00e07a 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00e07b 2e1a      	MOV  R1,R26
00e07c 2fae      	MOV  R26,R30
00e07d 2de1      	MOV  R30,R1
00e07e 9508      	RET
                 
                 __EEPROMRDD:
00e07f 9612      	ADIW R26,2
00e080 d002      	RCALL __EEPROMRDW
00e081 01bf      	MOVW R22,R30
00e082 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00e083 9611      	ADIW R26,1
00e084 d002      	RCALL __EEPROMRDB
00e085 2ffe      	MOV  R31,R30
00e086 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00e087 99f9      	SBIC EECR,EEWE
00e088 cffe      	RJMP __EEPROMRDB
00e089 93ff      	PUSH R31
00e08a b7ff      	IN   R31,SREG
00e08b 94f8      	CLI
00e08c bda1      	OUT  EEARL,R26
00e08d bdb2      	OUT  EEARH,R27
00e08e 9af8      	SBI  EECR,EERE
00e08f b5e0      	IN   R30,EEDR
00e090 bfff      	OUT  SREG,R31
00e091 91ff      	POP  R31
00e092 9508      	RET
                 
                 __EEPROMWRD:
00e093 d007      	RCALL __EEPROMWRW
00e094 9612      	ADIW R26,2
00e095 010f      	MOVW R0,R30
00e096 01fb      	MOVW R30,R22
00e097 d003      	RCALL __EEPROMWRW
00e098 01f0      	MOVW R30,R0
00e099 9712      	SBIW R26,2
00e09a 9508      	RET
                 
                 __EEPROMWRW:
00e09b d007      	RCALL __EEPROMWRB
00e09c 9611      	ADIW R26,1
00e09d 93ef      	PUSH R30
00e09e 2fef      	MOV  R30,R31
00e09f d003      	RCALL __EEPROMWRB
00e0a0 91ef      	POP  R30
00e0a1 9711      	SBIW R26,1
00e0a2 9508      	RET
                 
                 __EEPROMWRB:
00e0a3 9bf9      	SBIS EECR,EEWE
00e0a4 c002      	RJMP __EEPROMWRB1
00e0a5 95a8      	WDR
00e0a6 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00e0a7 b79f      	IN   R25,SREG
00e0a8 94f8      	CLI
00e0a9 bda1      	OUT  EEARL,R26
00e0aa bdb2      	OUT  EEARH,R27
00e0ab 9af8      	SBI  EECR,EERE
00e0ac b580      	IN   R24,EEDR
00e0ad 17e8      	CP   R30,R24
00e0ae f019      	BREQ __EEPROMWRB0
00e0af bde0      	OUT  EEDR,R30
00e0b0 9afa      	SBI  EECR,EEMWE
00e0b1 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00e0b2 bf9f      	OUT  SREG,R25
00e0b3 9508      	RET
                 
                 __CPD10:
00e0b4 9730      	SBIW R30,0
00e0b5 4060      	SBCI R22,0
00e0b6 4070      	SBCI R23,0
00e0b7 9508      	RET
                 
                 __CPW02:
00e0b8 2400      	CLR  R0
00e0b9 160a      	CP   R0,R26
00e0ba 060b      	CPC  R0,R27
00e0bb 9508      	RET
                 
                 __CPD20:
00e0bc 9710      	SBIW R26,0
00e0bd 4080      	SBCI R24,0
00e0be 4090      	SBCI R25,0
00e0bf 9508      	RET
                 
                 __CPD02:
00e0c0 2400      	CLR  R0
00e0c1 160a      	CP   R0,R26
00e0c2 060b      	CPC  R0,R27
00e0c3 0608      	CPC  R0,R24
00e0c4 0609      	CPC  R0,R25
00e0c5 9508      	RET
                 
                 __CPD12:
00e0c6 17ea      	CP   R30,R26
00e0c7 07fb      	CPC  R31,R27
00e0c8 0768      	CPC  R22,R24
00e0c9 0779      	CPC  R23,R25
00e0ca 9508      	RET
                 
                 __CPD21:
00e0cb 17ae      	CP   R26,R30
00e0cc 07bf      	CPC  R27,R31
00e0cd 0786      	CPC  R24,R22
00e0ce 0797      	CPC  R25,R23
00e0cf 9508      	RET
                 
                 __SAVELOCR6:
00e0d0 935a      	ST   -Y,R21
                 __SAVELOCR5:
00e0d1 934a      	ST   -Y,R20
                 __SAVELOCR4:
00e0d2 933a      	ST   -Y,R19
                 __SAVELOCR3:
00e0d3 932a      	ST   -Y,R18
                 __SAVELOCR2:
00e0d4 931a      	ST   -Y,R17
00e0d5 930a      	ST   -Y,R16
00e0d6 9508      	RET
                 
                 __LOADLOCR6:
00e0d7 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00e0d8 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00e0d9 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00e0da 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00e0db 8119      	LDD  R17,Y+1
00e0dc 8108      	LD   R16,Y
00e0dd 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00e0de 0fac      	ADD  R26,R28
00e0df 1fbd      	ADC  R27,R29
00e0e0 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00e0e1 9007      	ELPM R0,Z+
00e0e2 920d      	ST   X+,R0
00e0e3 958a      	DEC  R24
00e0e4 f7e1      	BRNE __INITLOC0
00e0e5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 540 r1 :  91 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 833 r17: 958 r18: 512 r19: 400 r20: 308 r21: 245 r22:1439 r23:1284 
r24: 469 r25: 348 r26:4535 r27:1668 r28: 586 r29:  23 r30:8084 r31:3374 
x  : 638 y  :4042 z  : 680 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 245 add   : 254 
adiw  : 808 and   :  15 andi  : 198 asr   :   6 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :  20 brcs  :   5 break :   0 breq  : 635 
brge  : 183 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 130 
brlt  :  68 brmi  :  32 brne  : 868 brpl  : 157 brsh  : 116 brtc  :  10 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   5 call  :6939 
cbi   :  41 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 204 cls   :   0 clt   :  11 clv   :   0 clz   :   2 com   :  32 
cp    : 111 cpc   : 556 cpi   :1177 cpse  :   0 dec   :  22 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 109 inc   :   8 jmp   : 386 
ld    : 721 ldd   :2869 ldi   :7200 lds   : 681 lpm   :   0 lsl   :  39 
lsr   :  21 mov   : 384 movw  :1268 mul   : 114 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  65 ori   :  50 out   : 113 pop   : 416 
push  : 416 rcall : 309 ret   :1053 reti  :   5 rjmp  :1746 rol   :  60 
ror   :  33 sbc   :  39 sbci  : 730 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 272 sbr   :   5 sbrc  :  17 sbrs  :  61 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  17 ses   :   0 set   :  10 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1193 std   : 554 sts   : 506 
sub   :  32 subi  : 787 swap  :   7 tst   : 166 wdr   :  13 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x01c1cc  87964  27184 115148  262144  43.9%
[.dseg] 0x000200 0x001ab7      0   3527   3527    8703  40.5%
[.eseg] 0x000000 0x00065d      0   1629   1629    4096  39.8%

Assembly complete, 0 errors, 42 warnings
