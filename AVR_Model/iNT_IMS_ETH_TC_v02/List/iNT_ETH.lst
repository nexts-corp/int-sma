
AVRASM ver. 2.1.30  C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm Thu Nov 26 18:06:46 2015

C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 359d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 420d 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 421e 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 421a 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 4216 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3fb9 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 4237 	JMP  _timer3_ovf_isr
000048 940c 40db 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 4253 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 40e7 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 4105 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 2e30
000077 3432
000078 0062      	.DB  0x30,0x2E,0x32,0x34,0x62,0x0
                 _tempTable:
000079 0000
00007a c2a0
00007b 0000
00007c c28c      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0x8C,0xC2
00007d 0000
00007e c270
00007f 0000
000080 c248      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0x48,0xC2
000081 0000
000082 c220
000083 0000
000084 c1f0      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0xF0,0xC1
000085 0000
000086 c1a0
000087 0000
000088 c120      	.DB  0x0,0x0,0xA0,0xC1,0x0,0x0,0x20,0xC1
000089 0000
00008a 0000
00008b 0000
00008c 4120      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x41
00008d 0000
00008e 41a0
00008f 0000
000090 41f0      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0xF0,0x41
000091 0000
000092 4220
000093 0000
000094 4248      	.DB  0x0,0x0,0x20,0x42,0x0,0x0,0x48,0x42
000095 0000
000096 4270      	.DB  0x0,0x0,0x70,0x42
                 _adcTable:
000097 6333
000098 4391
000099 85fa
00009a 439a      	.DB  0x33,0x63,0x91,0x43,0xFA,0x85,0x9A,0x43
00009b 5c05
00009c 43a3
00009d e979
00009e 43ab      	.DB  0x5,0x5C,0xA3,0x43,0x79,0xE9,0xAB,0x43
00009f 3237
0000a0 43b4
0000a1 39a0
0000a2 43bc      	.DB  0x37,0x32,0xB4,0x43,0xA0,0x39,0xBC,0x43
0000a3 030f
0000a4 43c4
0000a5 917f
0000a6 43cb      	.DB  0xF,0x3,0xC4,0x43,0x7F,0x91,0xCB,0x43
0000a7 e7ab
0000a8 43d2
0000a9 0810
0000aa 43da      	.DB  0xAB,0xE7,0xD2,0x43,0x10,0x8,0xDA,0x43
0000ab f4fb
0000ac 43e0
0000ad b08d
0000ae 43e7      	.DB  0xFB,0xF4,0xE0,0x43,0x8D,0xB0,0xE7,0x43
0000af 3cc6
0000b0 43ee
0000b1 9b99
0000b2 43f4      	.DB  0xC6,0x3C,0xEE,0x43,0x99,0x9B,0xF4,0x43
0000b3 ceb5
0000b4 43fa      	.DB  0xB5,0xCE,0xFA,0x43
                 _error_msg:
0000b5 4dd4
0000b6 0000
0000b7 4dd5
0000b8 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
0000b9 4de1
0000ba 0000
0000bb 4dec
0000bc 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
0000bd 4df9
0000be 0000
0000bf 4e04
0000c0 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
0000c1 4e0f
0000c2 0000
0000c3 4e1f
0000c4 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
0000c5 4e29
0000c6 0000
0000c7 4e32
0000c8 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
0000c9 4e44
0000ca 0000
0000cb 4e57
0000cc 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
0000cd 4e68
0000ce 0000
0000cf 4e77
0000d0 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
0000d1 4e88
0000d2 0000
0000d3 4e98
0000d4 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
0000d5 4324
0000d6 444d
0000d7 4453
0000d8 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
0000d9 4324
0000da 444d
0000db 4152
0000dc 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000dd 4324
0000de 444d
0000df 4c43
0000e0 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000e1 4324
0000e2 444d
0000e3 5653
0000e4 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000e5 4324
0000e6 444d
0000e7 4e53
0000e8 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000e9 4324
0000ea 444d
0000eb 4544
0000ec 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000ed 4324
0000ee 444d
0000ef 4444
0000f0 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000f1 4324
0000f2 444d
0000f3 5353
0000f4 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000f5 4324
0000f6 444d
0000f7 5352
0000f8 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _cmdGetADCSensor:
0000f9 4324
0000fa 444d
0000fb 4147
0000fc 0053      	.DB  0x24,0x43,0x4D,0x44,0x47,0x41,0x53,0x0
                 _k1:
0000fd 2220
0000fe 2b2a
0000ff 5b2c
000100 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
000101 7f7c
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1238): warning: .cseg .db misalignment - padding zero byte
000102 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
000103 0000
000104 0000      	.DW  0,0
                 
                 _0x3:
000105 0000
000106 0000
000107 0000
000108 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000109 0000
00010a 0a3d
00010b 3fd7
00010c 0000      	.DB  0x0,0x0,0x3D,0xA,0xD7,0x3F,0x0,0x0
00010d 0000
00010e 0000
00010f 0000
000110 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000111 0000
000112 0000
000113 0000
000114 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000115 0000
000116 0000
000117 0000
000118 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000119 0000
00011a 0000
00011b 0000
00011c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011d 0000
00011e 0000
00011f 0000
000120 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000121 0000
000122 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1252): warning: .cseg .db misalignment - padding zero byte
000123 0000      	.DB  0x0,0x0,0x0,0x0,0x0
                 _0xA5:
000124 ffff
000125 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
000126 0a0d
000127 2d2d
000128 2d2d
000129 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00012a 4920
00012b 696e
00012c 6974
00012d 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
00012e 4320
00012f 6d6f
000130 6c70
000131 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
000132 2065
000133 2d2d
000134 2d2d
000135 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000136 0a0d
000137 4300
000138 6e6f
000139 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
00013a 7463
00013b 3a20
00013c 6320
00013d 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
00013e 6174
00013f 7463
000140 742e
000141 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
000142 6e61
000143 6740
000144 616d
000145 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000146 632e
000147 6d6f
000148 0a0d
000149 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
00014a 616d
00014b 6e69
00014c 203e
00014d 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
00014e 5374
00014f 6e65
000150 6f73
000151 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000152 6e6f
000153 6966
000154 2867
000155 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000156 2029
000157 7265
000158 6f72
000159 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
00015a 000a
00015b 6d3c
00015c 6961
00015d 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
00015e 6120
00015f 6464
000160 6553
000161 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
000162 726f
000163 6144
000164 6174
000165 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000166 7565
000167 2865
000168 6425
000169 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
00016a 312e
00016b 2966
00016c 6620
00016d 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
00016e 656c
00016f 0d64
000170 000a
000171 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
000172 6961
000173 3e6e
000174 7520
000175 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000176 7461
000177 5365
000178 6174
000179 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00017a 2873
00017b 2029
00017c 6166
00017d 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00017e 6465
00017f 0a0d
000180 3c00
000181 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
000182 6e69
000183 203e
000184 706f
000185 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000186 7461
000187 6e69
000188 2067
000189 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
00018a 6564
00018b 6520
00018c 7272
00018d 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
00018e 2121
00018f 5b20
000190 7830
000191 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
000192 5832
000193 0d5d
000194 000a
000195 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000196 6961
000197 3e6e
000198 5320
000199 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
00019a 6572
00019b 6461
00019c 654d
00019d 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
00019e 7972
00019f 6552
0001a0 616d
0001a1 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
0001a2 2928
0001a3 6620
0001a4 6961
0001a5 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0001a6 0d64
0001a7 000a
0001a8 6d3c
0001a9 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
0001aa 3e6e
0001ab 5b20
0001ac 6544
0001ad 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
0001ae 6563
0001af 6420
0001b0 7369
0001b1 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
0001b2 656c
0001b3 205d
0001b4 545b
0001b5 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
0001b6 2d45
0001b7 5d4b
0001b8 2420
0001b9 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
0001ba 5344
0001bb 534e
0001bc 4e20
0001bd 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
0001be 5820
0001bf 582e
0001c0 2058
0001c1 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
0001c2 2020
0001c3 2020
0001c4 2020
0001c5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001c6 2020
0001c7 2020
0001c8 2020
0001c9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ca 0d20
0001cb 3c00
0001cc 616d
0001cd 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
0001ce 203e
0001cf 445b
0001d0 7665
0001d1 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
0001d2 2065
0001d3 6964
0001d4 6173
0001d5 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
0001d6 5d65
0001d7 5b20
0001d8 5954
0001d9 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
0001da 4b2d
0001db 205d
0001dc 4324
0001dd 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
0001de 4e53
0001df 2053
0001e0 6425
0001e1 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
0001e2 2520
0001e3 2066
0001e4 2020
0001e5 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
0001e6 2020
0001e7 2020
0001e8 2020
0001e9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ea 2020
0001eb 2020
0001ec 2020
0001ed 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ee 000d
0001ef 6d3c
0001f0 6961
0001f1 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001f2 5b20
0001f3 6544
0001f4 6976
0001f5 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001f6 6420
0001f7 7369
0001f8 6261
0001f9 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001fa 205d
0001fb 545b
0001fc 5059
0001fd 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001fe 5d4b
0001ff 2420
000200 4d43
000201 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
000202 534e
000203 2520
000204 2064
000205 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
000206 6964
000207 6373
000208 6e6f
000209 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
00020a 7463
00020b 6465
00020c 2020
00020d 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
00020e 2020
00020f 2020
000210 2020
000211 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
000212 3c00
000213 616d
000214 6e69
000215 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000216 445b
000217 7665
000218 6369
000219 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
00021a 6964
00021b 6173
00021c 6c62
00021d 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
00021e 5b20
00021f 4d54
000220 4345
000221 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
000222 2020
000223 2020
000224 2020
000225 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000226 2020
000227 2020
000228 2020
000229 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022a 2020
00022b 2020
00022c 2020
00022d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022e 2020
00022f 2020
000230 2020
000231 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000232 2020
000233 2020
000234 2020
000235 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
000236 6d3c
000237 6961
000238 3e6e
000239 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
00023a 6544
00023b 6976
00023c 6563
00023d 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
00023e 7369
00023f 6261
000240 656c
000241 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
000242 505b
000243 3154
000244 3030
000245 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
000246 2020
000247 2020
000248 2020
000249 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024a 2020
00024b 2020
00024c 2020
00024d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024e 2020
00024f 2020
000250 2020
000251 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000252 2020
000253 2020
000254 2020
000255 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000256 2020
000257 2020
000258 0d20
000259 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
00025a 616d
00025b 6e69
00025c 203e
00025d 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
00025e 7665
00025f 6369
000260 2065
000261 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
000262 6173
000263 6c62
000264 5d65
000265 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000266 4552
000267 4553
000268 5652
000269 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
00026a 205d
00026b 2020
00026c 2020
00026d 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00026e 2020
00026f 2020
000270 2020
000271 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000272 2020
000273 2020
000274 2020
000275 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000276 2020
000277 2020
000278 2020
000279 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00027a 2020
00027b 2020
00027c 000d
00027d 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
00027e 6470
00027f 7461
000280 5365
000281 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
000282 7574
000283 3e73
000284 4520
000285 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000286 725f
000287 7473
000288 745f
000289 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
00028a 7265
00028b 7420
00028c 6d69
00028d 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
00028e 656c
00028f 7466
000290 3d20
000291 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
000292 646c
000293 2528
000294 586c
000295 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000296 000a
000297 0a0d
000298 653c
000299 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00029a 746e
00029b 6143
00029c 7470
00029d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00029e 3e65
00029f 2120
0002a0 2121
0002a1 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0002a2 2121
0002a3 2121
0002a4 2121
0002a5 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
0002a6 6e6f
0002a7 7469
0002a8 726f
0002a9 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
0002aa 646f
0002ab 2065
0002ac 2121
0002ad 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
0002ae 0d21
0002af 000a
0002b0 0a0d
0002b1 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
0002b2 6576
0002b3 746e
0002b4 6143
0002b5 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0002b6 7275
0002b7 3e65
0002b8 2120
0002b9 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0002ba 2121
0002bb 2121
0002bc 2121
0002bd 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002be 4d20
0002bf 6961
0002c0 746e
0002c1 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0002c2 6e61
0002c3 6563
0002c4 4920
0002c5 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
0002c6 7250
0002c7 676f
0002c8 6572
0002c9 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
0002ca 2120
0002cb 2121
0002cc 2121
0002cd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002ce 3c00
0002cf 7665
0002d0 6e65
0002d1 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002d2 7061
0002d3 7574
0002d4 6572
0002d5 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002d6 6461
0002d7 4564
0002d8 6576
0002d9 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
0002da 7551
0002db 7565
0002dc 2865
0002dd 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
0002de 6166
0002df 6c69
0002e0 6465
0002e1 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0002e2 0d00
0002e3 3c0a
0002e4 7665
0002e5 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002e6 4374
0002e7 7061
0002e8 7574
0002e9 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002ea 203e
0002eb 2121
0002ec 2121
0002ed 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002ee 2121
0002ef 2121
0002f0 2021
0002f1 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002f2 6e69
0002f3 5020
0002f4 776f
0002f5 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002f6 4420
0002f7 776f
0002f8 206e
0002f9 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002fa 2121
0002fb 0d21
0002fc 000a
0002fd 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002fe 653c
0002ff 6576
000300 746e
000301 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
000302 7470
000303 7275
000304 3e65
000305 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
000306 2121
000307 2121
000308 2121
000309 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00030a 2121
00030b 4d20
00030c 6961
00030d 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
00030e 6f50
00030f 6577
000310 2072
000311 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
000312 2120
000313 2121
000314 2121
000315 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000316 0d00
000317 3c0a
000318 7665
000319 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
00031a 4374
00031b 7061
00031c 7574
00031d 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00031e 203e
00031f 2121
000320 2121
000321 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000322 2121
000323 2121
000324 2021
000325 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
000326 7474
000327 7265
000328 2079
000329 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
00032a 2077
00032b 2121
00032c 2121
00032d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00032e 000a
00032f 0a0d
000330 653c
000331 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000332 746e
000333 6143
000334 7470
000335 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000336 3e65
000337 2120
000338 2121
000339 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00033a 2121
00033b 2121
00033c 2121
00033d 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
00033e 7461
00033f 6574
000340 7972
000341 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
000342 204b
000343 2121
000344 2121
000345 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000346 000a
000347 0a0d
000348 653c
000349 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00034a 746e
00034b 6143
00034c 7470
00034d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00034e 3e65
00034f 2120
000350 2121
000351 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000352 2121
000353 2121
000354 2121
000355 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000356 6d65
000357 726f
000358 2079
000359 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
00035a 2077
00035b 2121
00035c 2121
00035d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00035e 000a
00035f 0a0d
000360 653c
000361 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000362 746e
000363 6143
000364 7470
000365 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000366 3e65
000367 2120
000368 2121
000369 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00036a 2121
00036b 2121
00036c 2121
00036d 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
00036e 6d65
00036f 726f
000370 2079
000371 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
000372 6f72
000373 2072
000374 2121
000375 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000376 0d21
000377 000a
000378 0a0d
000379 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00037a 6576
00037b 746e
00037c 6143
00037d 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
00037e 7275
00037f 3e65
000380 2120
000381 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
000382 2121
000383 2121
000384 2121
000385 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000386 4d20
000387 6d65
000388 726f
000389 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
00038a 4b4f
00038b 2120
00038c 2121
00038d 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
00038e 0a0d
00038f 0d00
000390 3c0a
000391 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000392 6e65
000393 4374
000394 7061
000395 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000396 6572
000397 203e
000398 2121
000399 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
00039a 2121
00039b 2121
00039c 2121
00039d 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
00039e 6944
00039f 206e
0003a0 6425
0003a1 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
0003a2 7369
0003a3 6e69
0003a4 2067
0003a5 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
0003a6 2121
0003a7 0d21
0003a8 000a
0003a9 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0003aa 653c
0003ab 6576
0003ac 746e
0003ad 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0003ae 7470
0003af 7275
0003b0 3e65
0003b1 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0003b2 2121
0003b3 2121
0003b4 2121
0003b5 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0003b6 2121
0003b7 4420
0003b8 6e69
0003b9 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
0003ba 2064
0003bb 6146
0003bc 6c6c
0003bd 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
0003be 2067
0003bf 2121
0003c0 2121
0003c1 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0003c2 000a
0003c3 0a0d
0003c4 653c
0003c5 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0003c6 746e
0003c7 6143
0003c8 7470
0003c9 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0003ca 3e65
0003cb 2120
0003cc 2121
0003cd 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0003ce 2121
0003cf 2121
0003d0 2121
0003d1 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
0003d2 4f52
0003d3 4542
0003d4 2520
0003d5 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
0003d6 4944
0003d7 4353
0003d8 4e4f
0003d9 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
0003da 5443
0003db 2120
0003dc 2121
0003dd 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
0003de 0a0d
0003df 4100
0003e0 314c
0003e1 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
0003e2 6431
0003e3 0d00
0003e4 3c0a
0003e5 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
0003e6 6e65
0003e7 4374
0003e8 7061
0003e9 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
0003ea 6572
0003eb 203e
0003ec 2121
0003ed 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
0003ee 2121
0003ef 2121
0003f0 2121
0003f1 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003f2 5250
0003f3 424f
0003f4 2045
0003f5 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003f6 4320
0003f7 4e4f
0003f8 454e
0003f9 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003fa 2120
0003fb 2121
0003fc 2121
0003fd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003fe 4100
0003ff 304c
000400 2532
000401 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
000402 0d00
000403 3c0a
000404 7665
000405 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000406 4374
000407 7061
000408 7574
000409 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00040a 203e
00040b 2121
00040c 2121
00040d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00040e 2121
00040f 2121
000410 2021
000411 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000412 424f
000413 2045
000414 6425
000415 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000416 6d65
000417 6570
000418 6172
000419 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00041a 6572
00041b 4520
00041c 5252
00041d 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
00041e 2120
00041f 2121
000420 2121
000421 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000422 0d00
000423 3c0a
000424 7665
000425 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000426 4374
000427 7061
000428 7574
000429 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00042a 203e
00042b 2121
00042c 2121
00042d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00042e 2121
00042f 2121
000430 2021
000431 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000432 424f
000433 2045
000434 6425
000435 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000436 6d65
000437 6570
000438 6172
000439 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00043a 6572
00043b 4f20
00043c 204b
00043d 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
00043e 2121
00043f 0d21
000440 000a
000441 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
000442 6174
000443 7574
000444 5273
000445 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000446 726f
000447 3e74
000448 5220
000449 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
00044a 524f
00044b 5f54
00044c 4953
00044d 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
00044e 454c
00044f 6d20
000450 646f
000451 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000452 6f6e
000453 2074
000454 7573
000455 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000456 726f
000457 6574
000458 2064
000459 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
00045a 0d74
00045b 000a
00045c 733c
00045d 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00045e 7574
00045f 5273
000460 7065
000461 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000462 3e74
000463 5220
000464 5045
000465 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000466 5f54
000467 554d
000468 544c
000469 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
00046a 454c
00046b 6d20
00046c 646f
00046d 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00046e 6f6e
00046f 2074
000470 7573
000471 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000472 726f
000473 6574
000474 2064
000475 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000476 0d74
000477 000a
000478 733c
000479 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00047a 7574
00047b 5273
00047c 7065
00047d 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00047e 3e74
00047f 6d20
000480 6c61
000481 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
000482 2063
000483 6166
000484 6c69
000485 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000486 2820
000487 6425
000488 6220
000489 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
00048a 7365
00048b 0d29
00048c 000a
00048d 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
00048e 6174
00048f 7574
000490 5273
000491 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000492 726f
000493 3e74
000494 6720
000495 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000496 6544
000497 6976
000498 6563
000499 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
00049a 7461
00049b 2865
00049c 2029
00049d 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
00049e 6c69
00049f 6465
0004a0 0a0d
0004a1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0004a2 7473
0004a3 7461
0004a4 7375
0004a5 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
0004a6 6f70
0004a7 7472
0004a8 203e
0004a9 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
0004aa 7461
0004ab 7375
0004ac 7220
0004ad 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
0004ae 726f
0004af 2074
0004b0 6361
0004b1 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
0004b2 7520
0004b3 6b6e
0004b4 6f6e
0004b5 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0004b6 5b20
0004b7 7830
0004b8 3025
0004b9 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0004ba 0d5d
0004bb 000a
0004bc 733c
0004bd 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
0004be 7574
0004bf 5273
0004c0 7065
0004c1 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
0004c2 3e74
0004c3 4520
0004c4 4854
0004c5 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0004c6 6e65
0004c7 5364
0004c8 6174
0004c9 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
0004ca 5273
0004cb 7065
0004cc 726f
0004cd 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0004ce 646d
0004cf 2928
0004d0 6620
0004d1 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
0004d2 656c
0004d3 0d64
0004d4 000a
0004d5 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
0004d6 6e65
0004d7 6f73
0004d8 4472
0004d9 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0004da 5261
0004db 7065
0004dc 726f
0004dd 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0004de 5b20
0004df 6c25
0004e0 5d64
0004e1 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
0004e2 5d64
0004e3 255b
0004e4 322e
0004e5 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
0004e6 0a0d
0004e7 0d00
0004e8 3c0a
0004e9 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
0004ea 736e
0004eb 726f
0004ec 6144
0004ed 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004ee 6552
0004ef 6f70
0004f0 7472
0004f1 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004f2 3d3d
0004f3 203d
0004f4 5245
0004f5 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004f6 2052
0004f7 4e49
0004f8 4f46
0004f9 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004fa 4954
0004fb 4e4f
0004fc 4920
0004fd 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004fe 4554
0004ff 504d
000500 5120
000501 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
000502 4555
000503 3d20
000504 3d3d
000505 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
000506 3c00
000507 6573
000508 736e
000509 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00050a 6144
00050b 6174
00050c 6552
00050d 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
00050e 7472
00050f 203e
000510 5445
000511 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
000512 6573
000513 646e
000514 6144
000515 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
000516 6552
000517 6f70
000518 7472
000519 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00051a 2864
00051b 2029
00051c 6166
00051d 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00051e 6465
00051f 0a0d
000520 3c00
000521 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
000522 6e65
000523 5274
000524 7065
000525 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000526 3e74
000527 5b20
000528 6c25
000529 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
00052a 305b
00052b 2578
00052c 3230
00052d 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00052e 305b
00052f 2578
000530 3230
000531 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000532 0a0d
000533 0d00
000534 3c0a
000535 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000536 6e65
000537 5274
000538 7065
000539 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
00053a 3e74
00053b 3d20
00053c 3d3d
00053d 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
00053e 5252
00053f 524f
000540 4920
000541 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
000542 4d4f
000543 5441
000544 4f49
000545 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000546 4e49
000547 5420
000548 4d45
000549 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
00054a 5551
00054b 5545
00054c 2045
00054d 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
00054e 0d3d
00054f 000a
000550 653c
000551 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
000552 746e
000553 6552
000554 6f70
000555 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000556 203e
000557 5445
000558 5f48
000559 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
00055a 646e
00055b 7645
00055c 6e65
00055d 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
00055e 7065
00055f 726f
000560 4374
000561 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000562 2928
000563 6620
000564 6961
000565 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000566 0d64
000567 000a
000568 733c
000569 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00056a 6f73
00056b 4472
00056c 7461
00056d 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
00056e 7661
00056f 3e65
000570 7420
000571 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
000572 5b65
000573 6c25
000574 5d64
000575 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000576 5b68
000577 6425
000578 2c5d
000579 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
00057a 5b6c
00057b 2e25
00057c 6632
00057d 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
00057e 000a
00057f 0a0d
000580 733c
000581 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
000582 6f73
000583 4472
000584 7461
000585 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000586 7661
000587 3e65
000588 3d20
000589 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
00058a 4520
00058b 5252
00058c 524f
00058d 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
00058e 464e
00058f 4d4f
000590 5441
000591 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
000592 204e
000593 4e49
000594 5420
000595 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000596 2050
000597 5551
000598 5545
000599 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
00059a 3d3d
00059b 0d3d
00059c 000a
00059d 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
00059e 6e65
00059f 6f73
0005a0 4472
0005a1 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0005a2 5361
0005a3 7661
0005a4 3e65
0005a5 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
0005a6 474f
0005a7 6f5f
0005a8 6570
0005a9 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
0005aa 6c69
0005ab 2865
0005ac 7325
0005ad 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0005ae 6166
0005af 6c69
0005b0 6465
0005b1 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
0005b2 6f63
0005b3 6c75
0005b4 6e64
0005b5 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
0005b6 7320
0005b7 7661
0005b8 2065
0005b9 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
0005ba 0d67
0005bb 000a
0005bc 733c
0005bd 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0005be 6f73
0005bf 4472
0005c0 7461
0005c1 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
0005c2 7661
0005c3 3e65
0005c4 4c20
0005c5 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005c6 695f
0005c7 736e
0005c8 7265
0005c9 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
0005ca 7461
0005cb 2861
0005cc 2029
0005cd 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
0005ce 6c69
0005cf 6465
0005d0 0a0d
0005d1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0005d2 6573
0005d3 736e
0005d4 726f
0005d5 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0005d6 6174
0005d7 6153
0005d8 6576
0005d9 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0005da 4f4c
0005db 5f47
0005dc 6c63
0005dd 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
0005de 4665
0005df 6c69
0005e0 2865
0005e1 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
0005e2 6166
0005e3 6c69
0005e4 6465
0005e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0005e6 3c00
0005e7 6573
0005e8 736e
0005e9 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0005ea 6144
0005eb 6174
0005ec 6153
0005ed 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
0005ee 203e
0005ef 6144
0005f0 6174
0005f1 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005f2 676f
0005f3 6920
0005f4 2073
0005f5 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005f6 2074
0005f7 6d65
0005f8 7470
0005f9 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005fa 000a
0005fb 653c
0005fc 6576
0005fd 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005fe 6153
0005ff 6576
000600 203e
000601 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
000602 656d
000603 255b
000604 646c
000605 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000606 6469
000607 305b
000608 2578
000609 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
00060a 5d58
00060b 732c
00060c 6174
00060d 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00060e 7830
00060f 3025
000610 5832
000611 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000612 000a
000613 0a0d
000614 653c
000615 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000616 746e
000617 6153
000618 6576
000619 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
00061a 3d3d
00061b 203d
00061c 5245
00061d 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
00061e 2052
00061f 4e49
000620 4f46
000621 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
000622 4954
000623 4e4f
000624 4920
000625 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
000626 4554
000627 504d
000628 5120
000629 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
00062a 4555
00062b 3d20
00062c 3d3d
00062d 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
00062e 3c00
00062f 7665
000630 6e65
000631 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000632 7661
000633 3e65
000634 4c20
000635 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000636 6f5f
000637 6570
000638 466e
000639 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
00063a 2865
00063b 7325
00063c 2029
00063d 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
00063e 6c69
00063f 6465
000640 202c
000641 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
000642 6c75
000643 6e64
000644 7427
000645 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
000646 7661
000647 2065
000648 6f6c
000649 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
00064a 000a
00064b 653c
00064c 6576
00064d 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
00064e 6153
00064f 6576
000650 203e
000651 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
000652 5f47
000653 6e69
000654 6573
000655 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000656 7645
000657 6e65
000658 2874
000659 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
00065a 6166
00065b 6c69
00065c 6465
00065d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00065e 3c00
00065f 7665
000660 6e65
000661 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000662 7661
000663 3e65
000664 4c20
000665 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000666 635f
000667 6f6c
000668 6573
000669 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
00066a 656c
00066b 2928
00066c 6620
00066d 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00066e 656c
00066f 0d64
000670 000a
000671 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
000672 6576
000673 746e
000674 6153
000675 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000676 203e
000677 7645
000678 6e65
000679 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00067a 6f4c
00067b 2067
00067c 7369
00067d 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
00067e 746f
00067f 6520
000680 706d
000681 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
000682 0a0d
000683 3c00
000684 6f6c
000685 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000686 7065
000687 726f
000688 3e74
000689 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
00068a 6568
00068b 6b63
00068c 4420
00068d 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
00068e 2061
00068f 6f4c
000690 2067
000691 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000692 7369
000693 0d74
000694 000a
000695 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000696 676f
000697 6552
000698 6f70
000699 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00069a 203e
00069b 4f4c
00069c 5f47
00069d 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
00069e 6e65
00069f 6946
0006a0 656c
0006a1 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
0006a2 2973
0006a3 6620
0006a4 6961
0006a5 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0006a6 0d64
0006a7 000a
0006a8 6c3c
0006a9 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
0006aa 6552
0006ab 6f70
0006ac 7472
0006ad 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0006ae 4f4c
0006af 5f47
0006b0 6572
0006b1 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0006b2 6144
0006b3 6174
0006b4 2528
0006b5 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
0006b6 6620
0006b7 6961
0006b8 656c
0006b9 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006ba 000a
0006bb 6c3c
0006bc 676f
0006bd 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006be 6f70
0006bf 7472
0006c0 203e
0006c1 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0006c2 5f47
0006c3 6572
0006c4 6461
0006c5 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0006c6 6174
0006c7 2928
0006c8 4c20
0006c9 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
0006ca 6520
0006cb 706d
0006cc 7974
0006cd 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
0006ce 0d00
0006cf 3c0a
0006d0 6f6c
0006d1 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
0006d2 7065
0006d3 726f
0006d4 3e74
0006d5 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
0006d6 3d3d
0006d7 4520
0006d8 5252
0006d9 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
0006da 4920
0006db 464e
0006dc 4d4f
0006dd 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
0006de 4f49
0006df 204e
0006e0 4e49
0006e1 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
0006e2 2073
0006e3 3d3d
0006e4 0d3d
0006e5 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
0006e6 6c3c
0006e7 676f
0006e8 6552
0006e9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006ea 7472
0006eb 203e
0006ec 6144
0006ed 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
0006ee 6f4c
0006ef 2067
0006f0 6f66
0006f1 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006f2 2064
0006f3 6974
0006f4 656d
0006f5 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006f6 646c
0006f7 2c5d
0006f8 6863
0006f9 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006fa 5d64
0006fb 762c
0006fc 6c61
0006fd 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006fe 322e
0006ff 5d66
000700 0a0d
000701 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
000702 6f6c
000703 5267
000704 7065
000705 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
000706 3e74
000707 4520
000708 4854
000709 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
00070a 6e65
00070b 4464
00070c 7461
00070d 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
00070e 7065
00070f 726f
000710 4374
000711 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000712 2928
000713 6620
000714 6961
000715 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000716 0d64
000717 000a
000718 6c3c
000719 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00071a 6552
00071b 6f70
00071c 7472
00071d 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00071e 6144
00071f 6174
000720 6f4c
000721 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
000722 6573
000723 746e
000724 6620
000725 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
000726 656d
000727 4449
000728 305b
000729 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
00072a 3230
00072b 5d58
00072c 6c20
00072d 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
00072e 4449
00072f 305b
000730 2578
000731 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
000732 5d58
000733 0a0d
000734 3c00
000735 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
000736 5267
000737 7065
000738 726f
000739 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00073a 4c20
00073b 474f
00073c 635f
00073d 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
00073e 6573
00073f 6946
000740 656c
000741 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
000742 6620
000743 6961
000744 656c
000745 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
000746 000a
000747 6c3c
000748 676f
000749 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00074a 6f70
00074b 7472
00074c 203e
00074d 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
00074e 6365
00074f 206b
000750 7645
000751 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
000752 2074
000753 6f4c
000754 2067
000755 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000756 7369
000757 0d74
000758 000a
000759 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
00075a 676f
00075b 6552
00075c 6f70
00075d 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00075e 203e
00075f 4f4c
000760 5f47
000761 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
000762 6461
000763 7645
000764 6e65
000765 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000766 2029
000767 6166
000768 6c69
000769 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00076a 0a0d
00076b 3c00
00076c 6f6c
00076d 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00076e 7065
00076f 726f
000770 3e74
000771 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
000772 474f
000773 725f
000774 6165
000775 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000776 6576
000777 746e
000778 2928
000779 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
00077a 676f
00077b 6520
00077c 706d
00077d 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
00077e 0a0d
00077f 3c00
000780 6f6c
000781 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000782 7065
000783 726f
000784 3e74
000785 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000786 6576
000787 746e
000788 6f4c
000789 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
00078a 6f66
00078b 6e75
00078c 2064
00078d 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
00078e 656d
00078f 255b
000790 646c
000791 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000792 6469
000793 305b
000794 2578
000795 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000796 5d58
000797 732c
000798 6174
000799 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00079a 7830
00079b 3025
00079c 5832
00079d 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00079e 000a
00079f 6c3c
0007a0 676f
0007a1 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007a2 6f70
0007a3 7472
0007a4 203e
0007a5 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
0007a6 5f48
0007a7 6573
0007a8 646e
0007a9 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
0007aa 6e65
0007ab 5274
0007ac 7065
0007ad 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
0007ae 4374
0007af 646d
0007b0 2928
0007b1 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
0007b2 6961
0007b3 656c
0007b4 0d64
0007b5 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0007b6 6c3c
0007b7 676f
0007b8 6552
0007b9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0007ba 7472
0007bb 203e
0007bc 7645
0007bd 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
0007be 4c74
0007bf 676f
0007c0 7320
0007c1 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
0007c2 2074
0007c3 7266
0007c4 6d61
0007c5 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
0007c6 5b44
0007c7 7830
0007c8 3025
0007c9 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0007ca 205d
0007cb 6f6c
0007cc 4967
0007cd 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
0007ce 7830
0007cf 3025
0007d0 5832
0007d1 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0007d2 000a
0007d3 6c3c
0007d4 676f
0007d5 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007d6 6f70
0007d7 7472
0007d8 203e
0007d9 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0007da 5f47
0007db 6c63
0007dc 736f
0007dd 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0007de 6c69
0007df 2865
0007e0 7325
0007e1 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0007e2 6166
0007e3 6c69
0007e4 6465
0007e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1688): warning: .cseg .db misalignment - padding zero byte
0007e6 0000      	.DB  0x0
                 _0x20000:
0007e7 0a0d
0007e8 6f50
0007e9 6577
0007ea 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0007eb 6e6f
0007ec 5220
0007ed 7365
0007ee 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007ef 0a0d
0007f0 0d00
0007f1 450a
0007f2 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007f3 7265
0007f4 616e
0007f5 206c
0007f6 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007f7 6573
0007f8 0d74
0007f9 000a
0007fa 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007fb 7242
0007fc 776f
0007fd 2d6e
0007fe 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007ff 2074
000800 6552
000801 6573
000802 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
000803 000a
000804 0a0d
000805 6157
000806 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
000807 6468
000808 676f
000809 5220
00080a 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
00080b 7465
00080c 0a0d
00080d 0d00
00080e 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
00080f 4154
000810 2047
000811 6552
000812 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
000813 0d74
000814 000a
000815 693c
000816 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
000817 6974
000818 6c61
000819 735f
00081a 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
00081b 6574
00081c 3e6d
00081d 4c20
00081e 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
00081f 695f
000820 696e
000821 2874
000822 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
000823 6166
000824 6c69
000825 6465
000826 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000827 3c00
000828 6e69
000829 7469
00082a 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
00082b 5f6c
00082c 7973
00082d 7473
00082e 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
00082f 203e
000830 4453
000831 695f
000832 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
000833 2874
000834 2029
000835 6166
000836 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000837 6465
000838 0a0d
000839 4900
00083a 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
00083b 6974
00083c 6c61
00083d 4420
00083e 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
00083f 6369
000840 2065
000841 6f43
000842 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
000843 656c
000844 6574
000845 2064
000846 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
000847 2d20
000848 0020
000849 3025
00084a 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
00084b 252d
00084c 3230
00084d 2d64
00084e 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
00084f 6432
000850 2520
000851 3230
000852 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000853 3025
000854 6432
000855 253a
000856 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000857 0d64
000858 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
000859 0a0d
00085a 2121
00085b 2121
00085c 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
00085d 2121
00085e 2121
00085f 2121
000860 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000861 2121
000862 2121
000863 2121
000864 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000865 2121
000866 2121
000867 2121
000868 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000869 2121
00086a 2121
00086b 2121
00086c 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00086d 0a0d
00086e 2100
00086f 2121
000870 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
000871 2121
000872 4520
000873 6874
000874 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
000875 6675
000876 6566
000877 2072
000878 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
000879 7265
00087a 6c66
00087b 776f
00087c 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
00087d 2121
00087e 2121
00087f 2121
000880 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1730): warning: .cseg .db misalignment - padding zero byte
000881 0000      	.DB  0x0
                 _0x60000:
000882 543c
000883 4d49
000884 5245
000885 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000886 7465
000887 6954
000888 656d
000889 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
00088a 4520
00088b 5252
00088c 203a
00088d 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
00088e 6972
00088f 646f
000890 3d20
000891 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
000892 0a0d
000893 3c00
000894 4954
000895 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000896 5f52
000897 6573
000898 5474
000899 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
00089a 7265
00089b 203e
00089c 6162
00089d 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
00089e 6f43
00089f 6e75
0008a0 6574
0008a1 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
0008a2 6c25
0008a3 5d64
0008a4 2b20
0008a5 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
0008a6 7265
0008a7 6f69
0008a8 5b64
0008a9 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
0008aa 5d64
0008ab 3d20
0008ac 2520
0008ad 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
0008ae 4f20
0008af 4556
0008b0 4652
0008b1 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
0008b2 2157
0008b3 0d21
0008b4 000a
0008b5 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
0008b6 5444
0008b7 203e
0008b8 6157
0008b9 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
0008ba 4468
0008bb 676f
0008bc 5420
0008bd 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0008be 7265
0008bf 5220
0008c0 7365
0008c1 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0008c2 2121
0008c3 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1748): warning: .cseg .db misalignment - padding zero byte
0008c4 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0008c5 ffff      	.DB  0xFF,0xFF
                 _0x80000:
0008c6 493c
0008c7 5f4f
0008c8 656b
0008c9 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008ca 6568
0008cb 6b63
0008cc 203e
0008cd 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008ce 2079
0008cf 4f4d
0008d0 4544
0008d1 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0008d2 3c00
0008d3 4f49
0008d4 6b5f
0008d5 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008d6 6843
0008d7 6365
0008d8 3e6b
0008d9 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008da 7965
0008db 5520
0008dc 0d50
0008dd 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0008de 493c
0008df 5f4f
0008e0 656b
0008e1 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008e2 6568
0008e3 6b63
0008e4 203e
0008e5 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008e6 2079
0008e7 4f44
0008e8 4e57
0008e9 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0008ea 3c00
0008eb 4f49
0008ec 6b5f
0008ed 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008ee 6843
0008ef 6365
0008f0 3e6b
0008f1 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008f2 7965
0008f3 4f20
0008f4 0d4b
0008f5 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008f6 6e49
0008f7 7469
0008f8 6169
0008f9 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008fa 697a
0008fb 676e
0008fc 4120
0008fd 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008fe 2e2e
0008ff 0020
000900 4b4f
000901 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1768): warning: .cseg .db misalignment - padding zero byte
000902 0000      	.DB  0x0
                 _0xC0003:
000903 0063
000904 0000
000905 0063
000906 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
000907 0063
000908 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
000909 5f63
00090a 6974
00090b 656d
00090c 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
00090d 646c
00090e 205d
00090f 2026
000910 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
000911 6974
000912 656d
000913 255b
000914 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
000915 205d
000916 3e3d
000917 6420
000918 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
000919 5b66
00091a 6c25
00091b 5d64
00091c 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
00091d 3e00
00091e 203e
00091f 5452
000920 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
000921 6573
000922 4274
000923 6e69
000924 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
000925 2079
000926 5452
000927 2043
000928 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
000929 636e
00092a 0d2e
00092b 000a
00092c 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
00092d 4354
00092e 735f
00092f 7465
000930 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
000931 6574
000932 6954
000933 656d
000934 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
000935 6954
000936 656d
000937 6f7a
000938 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
000939 6f20
00093a 7475
00093b 6f20
00093c 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
00093d 6172
00093e 676e
00093f 2065
000940 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000941 642b
000942 0d29
000943 000a
000944 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
000945 2e6e
000946 0020
000947 7554
000948 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
000949 0020
00094a 6557
00094b 2e64
00094c 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
00094d 6854
00094e 2e75
00094f 0020
000950 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
000951 2e69
000952 0020
000953 6153
000954 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
000955 0020
000956 7553
000957 2e6e
000958 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
000959 255b
00095a 5d64
00095b 3025
00095c 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
00095d 252d
00095e 3230
00095f 2d64
000960 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000961 6432
000962 2520
000963 3230
000964 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000965 3025
000966 6432
000967 253a
000968 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000969 0d64
00096a 000a
00096b 7552
00096c 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
00096d 6e69
00096e 2067
00096f 6977
000970 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
000971 5320
000972 7379
000973 6574
000974 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
000975 6c43
000976 636f
000977 206b
000978 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1801): warning: .cseg .db misalignment - padding zero byte
000979 0000      	.DB  0x0
                 _0xE0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1803): warning: .cseg .db misalignment - padding zero byte
00097a 0001      	.DB  0x1
                 _0xE0004:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1805): warning: .cseg .db misalignment - padding zero byte
00097b 0001      	.DB  0x1
                 _0xE0005:
00097c 0101
00097d 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1807): warning: .cseg .db misalignment - padding zero byte
00097e 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
00097f 0101
000980 0101
000981 0101
000982 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000983 0101
000984 0101
000985 0101
000986 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000987 0101
000988 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1812): warning: .cseg .db misalignment - padding zero byte
000989 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1814): warning: .cseg .db misalignment - padding zero byte
00098a 0001      	.DB  0x1
                 _0xE0009:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1816): warning: .cseg .db misalignment - padding zero byte
00098b 0001      	.DB  0x1
                 _0xE000A:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1818): warning: .cseg .db misalignment - padding zero byte
00098c 0001      	.DB  0x1
                 _0xE0000:
00098d 673c
00098e 7465
00098f 7250
000990 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
000991 7265
000992 6974
000993 7365
000994 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
000995 666e
000996 6769
000997 203e
000998 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000999 6320
00099a 6e6f
00099b 6966
00099c 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
00099d 6172
00099e 6974
00099f 6e6f
0009a0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
0009a1 7375
0009a2 2065
0009a3 6564
0009a4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
0009a5 6c75
0009a6 0d74
0009a7 000a
0009a8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
0009a9 7465
0009aa 704f
0009ab 7265
0009ac 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009ad 6e69
0009ae 4367
0009af 6e6f
0009b0 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009b1 3e67
0009b2 6e20
0009b3 206f
0009b4 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
0009b5 666e
0009b6 6769
0009b7 7275
0009b8 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
0009b9 6f69
0009ba 2c6e
0009bb 7520
0009bc 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0009bd 6420
0009be 6665
0009bf 7561
0009c0 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0009c1 0a0d
0009c2 3c00
0009c3 6567
0009c4 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0009c5 6570
0009c6 6172
0009c7 6974
0009c8 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0009c9 6f43
0009ca 666e
0009cb 6769
0009cc 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009cd 6f6d
0009ce 6564
0009cf 2020
0009d0 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0009d1 2020
0009d2 2020
0009d3 2020
0009d4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009d5 3e3e
0009d6 3020
0009d7 2578
0009d8 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0009d9 0d58
0009da 000a
0009db 673c
0009dc 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0009dd 704f
0009de 7265
0009df 7461
0009e0 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0009e1 4367
0009e2 6e6f
0009e3 6966
0009e4 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009e5 6420
0009e6 7665
0009e7 6369
0009e8 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0009e9 616e
0009ea 6c62
0009eb 2065
0009ec 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009ed 3e20
0009ee 203e
0009ef 7830
0009f0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009f1 5832
0009f2 0a0d
0009f3 3c00
0009f4 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009f5 4f74
0009f6 6570
0009f7 6172
0009f8 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009f9 676e
0009fa 6f43
0009fb 666e
0009fc 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009fd 203e
0009fe 6c61
0009ff 7261
000a00 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
000a01 616e
000a02 6c62
000a03 2065
000a04 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000a05 2020
000a06 3e3e
000a07 3020
000a08 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000a09 3230
000a0a 0d58
000a0b 000a
000a0c 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
000a0d 7465
000a0e 704f
000a0f 7265
000a10 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000a11 6e69
000a12 4367
000a13 6e6f
000a14 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
000a15 3e67
000a16 7320
000a17 6e65
000a18 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
000a19 4572
000a1a 616e
000a1b 6c62
000a1c 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000a1d 2020
000a1e 3e20
000a1f 203e
000a20 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000a21 7830
000a22 3025
000a23 5832
000a24 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000a25 673c
000a26 7465
000a27 6553
000a28 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
000a29 726f
000a2a 6f43
000a2b 666e
000a2c 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a2d 203e
000a2e 6573
000a2f 736e
000a30 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000a31 6320
000a32 6168
000a33 6e6e
000a34 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a35 6f20
000a36 7475
000a37 6f20
000a38 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a39 6172
000a3a 676e
000a3b 2065
000a3c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a3d 2964
000a3e 0a0d
000a3f 3c00
000a40 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a41 5374
000a42 6e65
000a43 6f73
000a44 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000a45 6e6f
000a46 6966
000a47 3e67
000a48 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
000a49 206f
000a4a 6f63
000a4b 666e
000a4c 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000a4d 7275
000a4e 7461
000a4f 6f69
000a50 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a51 7520
000a52 6573
000a53 6420
000a54 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a55 7561
000a56 746c
000a57 0a0d
000a58 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a59 6567
000a5a 4174
000a5b 7875
000a5c 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a5d 436e
000a5e 6e6f
000a5f 6966
000a60 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a61 6420
000a62 6769
000a63 7469
000a64 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a65 6920
000a66 706e
000a67 7475
000a68 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a69 6168
000a6a 6e6e
000a6b 6c65
000a6c 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a6d 7475
000a6e 6f20
000a6f 2066
000a70 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a71 676e
000a72 2065
000a73 2528
000a74 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a75 0a0d
000a76 3c00
000a77 6567
000a78 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a79 7875
000a7a 6944
000a7b 436e
000a7c 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a7d 6966
000a7e 3e67
000a7f 6e20
000a80 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a81 6f63
000a82 666e
000a83 6769
000a84 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a85 7461
000a86 6f69
000a87 2c6e
000a88 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a89 6573
000a8a 6420
000a8b 6665
000a8c 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a8d 746c
000a8e 0a0d
000a8f 3c00
000a90 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a91 4174
000a92 7875
000a93 6f44
000a94 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a95 6f43
000a96 666e
000a97 6769
000a98 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a99 6964
000a9a 6967
000a9b 6174
000a9c 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a9d 756f
000a9e 7074
000a9f 7475
000aa0 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000aa1 6168
000aa2 6e6e
000aa3 6c65
000aa4 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000aa5 7475
000aa6 6f20
000aa7 2066
000aa8 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000aa9 676e
000aaa 2065
000aab 2528
000aac 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000aad 0a0d
000aae 3c00
000aaf 6567
000ab0 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000ab1 7875
000ab2 6f44
000ab3 7475
000ab4 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000ab5 666e
000ab6 6769
000ab7 203e
000ab8 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000ab9 6320
000aba 6e6f
000abb 6966
000abc 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000abd 6172
000abe 6974
000abf 6e6f
000ac0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000ac1 7375
000ac2 2065
000ac3 6564
000ac4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000ac5 6c75
000ac6 0d74
000ac7 000a
000ac8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000ac9 7465
000aca 7541
000acb 4478
000acc 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000acd 4374
000ace 6e6f
000acf 6966
000ad0 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000ad1 2d20
000ad2 202d
000ad3 4843
000ad4 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000ad5 2064
000ad6 2d2d
000ad7 0d20
000ad8 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000ad9 673c
000ada 7465
000adb 7541
000adc 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000add 756f
000ade 4374
000adf 6e6f
000ae0 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000ae1 3e67
000ae2 6520
000ae3 616e
000ae4 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000ae5 2065
000ae6 2020
000ae7 2020
000ae8 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000ae9 2020
000aea 305b
000aeb 2578
000aec 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000aed 5d58
000aee 0a0d
000aef 3c00
000af0 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000af1 4174
000af2 7875
000af3 6f44
000af4 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000af5 6f43
000af6 666e
000af7 6769
000af8 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000af9 7473
000afa 7461
000afb 4f65
000afc 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000afd 6576
000afe 746e
000aff 2020
000b00 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000b01 7830
000b02 3025
000b03 5832
000b04 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000b05 000a
000b06 673c
000b07 7465
000b08 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000b09 4478
000b0a 756f
000b0b 4374
000b0c 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000b0d 6966
000b0e 3e67
000b0f 6e20
000b10 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000b11 6562
000b12 4572
000b13 5376
000b14 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000b15 2020
000b16 2020
000b17 255b
000b18 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b19 3e2d
000b1a 3c00
000b1b 6567
000b1c 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000b1d 7875
000b1e 6941
000b1f 436e
000b20 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000b21 6966
000b22 3e67
000b23 6120
000b24 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000b25 6f6c
000b26 2067
000b27 6e69
000b28 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000b29 2074
000b2a 6863
000b2b 6e61
000b2c 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000b2d 206c
000b2e 756f
000b2f 2074
000b30 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000b31 7220
000b32 6e61
000b33 6567
000b34 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000b35 6425
000b36 0d29
000b37 000a
000b38 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000b39 7465
000b3a 7541
000b3b 4178
000b3c 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000b3d 6f43
000b3e 666e
000b3f 6769
000b40 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b41 6f6e
000b42 6320
000b43 6e6f
000b44 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b45 7567
000b46 6172
000b47 6974
000b48 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b49 202c
000b4a 7375
000b4b 2065
000b4c 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b4d 6166
000b4e 6c75
000b4f 0d74
000b50 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b51 673c
000b52 7465
000b53 7541
000b54 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b55 756f
000b56 4374
000b57 6e6f
000b58 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b59 3e67
000b5a 6120
000b5b 616e
000b5c 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b5d 2067
000b5e 756f
000b5f 7074
000b60 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b61 6320
000b62 6168
000b63 6e6e
000b64 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b65 6f20
000b66 7475
000b67 6f20
000b68 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b69 6172
000b6a 676e
000b6b 2065
000b6c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b6d 2964
000b6e 0a0d
000b6f 3c00
000b70 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b71 4174
000b72 7875
000b73 6f41
000b74 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b75 6f43
000b76 666e
000b77 6769
000b78 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b79 6f6e
000b7a 6320
000b7b 6e6f
000b7c 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b7d 7567
000b7e 6172
000b7f 6974
000b80 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b81 202c
000b82 7375
000b83 2065
000b84 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b85 6166
000b86 6c75
000b87 0d74
000b88 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b89 673c
000b8a 7465
000b8b 7542
000b8c 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b8d 7265
000b8e 6f43
000b8f 666e
000b90 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b91 203e
000b92 6f6e
000b93 6320
000b94 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b95 6966
000b96 7567
000b97 6172
000b98 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b99 6e6f
000b9a 202c
000b9b 7375
000b9c 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b9d 6564
000b9e 6166
000b9f 6c75
000ba0 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000ba1 000a
000ba2 673c
000ba3 7465
000ba4 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000ba5 7a7a
000ba6 7265
000ba7 6f43
000ba8 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000ba9 6769
000baa 203e
000bab 6e65
000bac 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000bad 656c
000bae 2020
000baf 2020
000bb0 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000bb1 2020
000bb2 2020
000bb3 2020
000bb4 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000bb5 305b
000bb6 2578
000bb7 3230
000bb8 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000bb9 0a0d
000bba 3c00
000bbb 6567
000bbc 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000bbd 7a75
000bbe 657a
000bbf 4372
000bc0 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000bc1 6966
000bc2 3e67
000bc3 6520
000bc4 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000bc5 746e
000bc6 6f53
000bc7 7275
000bc8 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000bc9 754e
000bca 626d
000bcb 7265
000bcc 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000bcd 5b3e
000bce 6425
000bcf 0d5d
000bd0 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000bd1 673c
000bd2 7465
000bd3 7542
000bd4 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000bd5 7265
000bd6 6f43
000bd7 666e
000bd8 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000bd9 203e
000bda 7665
000bdb 6e65
000bdc 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000bdd 756f
000bde 6372
000bdf 2065
000be0 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000be1 2020
000be2 2020
000be3 3e3e
000be4 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000be5 6567
000be6 4574
000be7 766e
000be8 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000be9 7261
000bea 436d
000beb 6e6f
000bec 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000bed 3e67
000bee 6e20
000bef 206f
000bf0 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000bf1 666e
000bf2 6769
000bf3 7275
000bf4 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000bf5 6f69
000bf6 2c6e
000bf7 7520
000bf8 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000bf9 6420
000bfa 6665
000bfb 7561
000bfc 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000bfd 0a0d
000bfe 3c00
000bff 6567
000c00 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c01 766e
000c02 6c41
000c03 7261
000c04 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c05 6e6f
000c06 6966
000c07 3e67
000c08 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c09 6d73
000c0a 5352
000c0b 4953
000c0c 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000c0d 6576
000c0e 206c
000c0f 2020
000c10 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c11 2020
000c12 2020
000c13 255b
000c14 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c15 0a0d
000c16 3c00
000c17 6567
000c18 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c19 766e
000c1a 6c41
000c1b 7261
000c1c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c1d 6e6f
000c1e 6966
000c1f 3e67
000c20 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c21 6d73
000c22 7243
000c23 6465
000c24 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000c25 6142
000c26 616c
000c27 636e
000c28 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000c29 2020
000c2a 2020
000c2b 255b
000c2c 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c2d 0a0d
000c2e 3c00
000c2f 6567
000c30 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c31 766e
000c32 6c41
000c33 7261
000c34 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c35 6e6f
000c36 6966
000c37 3e67
000c38 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000c39 7461
000c3a 6574
000c3b 7972
000c3c 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000c3d 6576
000c3e 206c
000c3f 2020
000c40 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c41 2020
000c42 2020
000c43 255b
000c44 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c45 0a0d
000c46 3c00
000c47 6567
000c48 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c49 766e
000c4a 6c41
000c4b 7261
000c4c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c4d 6e6f
000c4e 6966
000c4f 3e67
000c50 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c51 6d6f
000c52 536d
000c53 6769
000c54 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c55 4c6c
000c56 7665
000c57 6c65
000c58 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c59 2020
000c5a 2020
000c5b 255b
000c5c 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c5d 0a0d
000c5e 3c00
000c5f 6567
000c60 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c61 766e
000c62 6c41
000c63 7261
000c64 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c65 6e6f
000c66 6966
000c67 3e67
000c68 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c69 6d6f
000c6a 4c6d
000c6b 736f
000c6c 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c6d 6c65
000c6e 7961
000c6f 2020
000c70 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c71 2020
000c72 2020
000c73 255b
000c74 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c75 0a0d
000c76 3c00
000c77 6567
000c78 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c79 766e
000c7a 6c41
000c7b 7261
000c7c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c7d 6e6f
000c7e 6966
000c7f 3e67
000c80 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c81 6d65
000c82 726f
000c83 4d79
000c84 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c85 2020
000c86 2020
000c87 2020
000c88 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c89 2020
000c8a 2020
000c8b 255b
000c8c 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c8d 0a0d
000c8e 3c00
000c8f 6567
000c90 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c91 6174
000c92 7574
000c93 5273
000c94 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c95 726f
000c96 4374
000c97 6e6f
000c98 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c99 3e67
000c9a 6e20
000c9b 206f
000c9c 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c9d 666e
000c9e 6769
000c9f 7275
000ca0 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000ca1 6f69
000ca2 2c6e
000ca3 7520
000ca4 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000ca5 6420
000ca6 6665
000ca7 7561
000ca8 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000ca9 0a0d
000caa 3c00
000cab 6567
000cac 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000cad 6174
000cae 7574
000caf 5273
000cb0 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000cb1 726f
000cb2 4374
000cb3 6e6f
000cb4 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000cb5 3e67
000cb6 6120
000cb7 6363
000cb8 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000cb9 2020
000cba 2020
000cbb 2020
000cbc 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000cbd 7830
000cbe 3025
000cbf 5832
000cc0 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000cc1 000a
000cc2 673c
000cc3 7465
000cc4 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000cc5 7461
000cc6 7375
000cc7 6552
000cc8 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000cc9 7472
000cca 6f43
000ccb 666e
000ccc 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000ccd 203e
000cce 6e69
000ccf 7674
000cd0 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000cd1 2020
000cd2 2020
000cd3 2020
000cd4 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000cd5 5d64
000cd6 0a0d
000cd7 3c00
000cd8 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000cd9 4f74
000cda 6570
000cdb 6172
000cdc 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000cdd 676e
000cde 6f43
000cdf 666e
000ce0 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000ce1 203e
000ce2 7245
000ce3 6f72
000ce4 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000ce5 6f20
000ce6 6570
000ce7 6172
000ce8 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000ce9 676e
000cea 6d20
000ceb 646f
000cec 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000ced 6e69
000cee 6176
000cef 696c
000cf0 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000cf1 305b
000cf2 2578
000cf3 3230
000cf4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000cf5 0a0d
000cf6 0d00
000cf7 200a
000cf8 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000cf9 6564
000cfa 2020
000cfb 2020
000cfc 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000cfd 2020
000cfe 2020
000cff 2020
000d00 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d01 3020
000d02 2578
000d03 3230
000d04 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000d05 0a0d
000d06 6420
000d07 7665
000d08 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000d09 4565
000d0a 616e
000d0b 6c62
000d0c 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000d0d 2020
000d0e 3e20
000d0f 203e
000d10 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000d11 3025
000d12 5832
000d13 0d00
000d14 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000d15 6c61
000d16 7261
000d17 456d
000d18 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000d19 6c62
000d1a 2065
000d1b 2020
000d1c 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000d1d 3e3e
000d1e 3020
000d1f 2578
000d20 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000d21 0058
000d22 0a0d
000d23 7320
000d24 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000d25 6f73
000d26 4572
000d27 616e
000d28 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000d29 2065
000d2a 2020
000d2b 3e20
000d2c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d2d 3c00
000d2e 6573
000d2f 5374
000d30 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000d31 6f73
000d32 4372
000d33 6e6f
000d34 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000d35 3e67
000d36 4520
000d37 5252
000d38 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000d39 6863
000d3a 6e61
000d3b 656e
000d3c 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000d3d 756f
000d3e 2074
000d3f 666f
000d40 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000d41 6e61
000d42 6567
000d43 0a0d
000d44 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000d45 6573
000d46 5374
000d47 6e65
000d48 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000d49 4372
000d4a 6e6f
000d4b 6966
000d4c 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d4d 4520
000d4e 5252
000d4f 203a
000d50 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d51 706d
000d52 696c
000d53 676e
000d54 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d55 6574
000d56 6320
000d57 756f
000d58 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d59 276e
000d5a 2074
000d5b 6562
000d5c 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d5d 7465
000d5e 7420
000d5f 206f
000d60 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d61 000a
000d62 0a0d
000d63 7320
000d64 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d65 6c70
000d66 6e69
000d67 5267
000d68 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d69 2065
000d6a 2020
000d6b 3e20
000d6c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d6d 7830
000d6e 3025
000d6f 5834
000d70 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d71 200a
000d72 6572
000d73 634f
000d74 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d75 7272
000d76 6e65
000d77 6563
000d78 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d79 2020
000d7a 3e3e
000d7b 3020
000d7c 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d7d 3430
000d7e 0058
000d7f 0a0d
000d80 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d81 6d69
000d82 5365
000d83 6174
000d84 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d85 6f48
000d86 7275
000d87 2020
000d88 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d89 203e
000d8a 7830
000d8b 3025
000d8c 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d8d 0d00
000d8e 200a
000d8f 6974
000d90 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d91 7453
000d92 7261
000d93 4d74
000d94 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d95 2020
000d96 2020
000d97 3e3e
000d98 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d99 2578
000d9a 3230
000d9b 0058
000d9c 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d9d 7420
000d9e 6d69
000d9f 5365
000da0 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000da1 4870
000da2 756f
000da3 2072
000da4 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000da5 3e20
000da6 203e
000da7 7830
000da8 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000da9 5832
000daa 0d00
000dab 200a
000dac 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000dad 656d
000dae 7453
000daf 706f
000db0 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000db1 206e
000db2 2020
000db3 2020
000db4 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000db5 3020
000db6 2578
000db7 3230
000db8 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000db9 0a0d
000dba 6c20
000dbb 776f
000dbc 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000dbd 694c
000dbe 696d
000dbf 2074
000dc0 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000dc1 2020
000dc2 3e20
000dc3 203e
000dc4 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000dc5 5b20
000dc6 3025
000dc7 6c34
000dc8 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000dc9 0d00
000dca 200a
000dcb 6f6c
000dcc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000dcd 4472
000dce 6c65
000dcf 7961
000dd0 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000dd1 2020
000dd2 2020
000dd3 3e3e
000dd4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dd5 2064
000dd6 255b
000dd7 3230
000dd8 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000dd9 0d00
000dda 200a
000ddb 6f6c
000ddc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000ddd 4572
000dde 7478
000ddf 6572
000de0 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000de1 2020
000de2 2020
000de3 3e3e
000de4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000de5 2066
000de6 255b
000de7 3430
000de8 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000de9 005d
000dea 0a0d
000deb 7520
000dec 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000ded 7265
000dee 694c
000def 696d
000df0 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000df1 2020
000df2 2020
000df3 3e20
000df4 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000df5 6625
000df6 5b20
000df7 3025
000df8 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000df9 5d58
000dfa 0d00
000dfb 200a
000dfc 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000dfd 6570
000dfe 4472
000dff 6c65
000e00 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000e01 2020
000e02 2020
000e03 2020
000e04 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000e05 2520
000e06 2064
000e07 255b
000e08 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000e09 5d58
000e0a 0d00
000e0b 200a
000e0c 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000e0d 6570
000e0e 4572
000e0f 7478
000e10 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000e11 656d
000e12 2020
000e13 2020
000e14 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000e15 2520
000e16 2066
000e17 255b
000e18 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000e19 586c
000e1a 005d
000e1b 0a0d
000e1c 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000e1d 6168
000e1e 6e6e
000e1f 6c65
000e20 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000e21 2020
000e22 2020
000e23 2020
000e24 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e25 203e
000e26 255b
000e27 5d64
000e28 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000e29 200a
000e2a 6863
000e2b 6e61
000e2c 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000e2d 456c
000e2e 616e
000e2f 6c62
000e30 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000e31 2020
000e32 3e3e
000e33 3020
000e34 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e35 3230
000e36 0058
000e37 0a0d
000e38 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000e39 616c
000e3a 6d72
000e3b 6544
000e3c 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000e3d 2079
000e3e 2020
000e3f 2020
000e40 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e41 203e
000e42 6425
000e43 0d00
000e44 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000e45 6573
000e46 4174
000e47 7875
000e48 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000e49 7475
000e4a 6f43
000e4b 666e
000e4c 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000e4d 203e
000e4e 6843
000e4f 6e61
000e50 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e51 206c
000e52 7245
000e53 6f72
000e54 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e55 0d21
000e56 000a
000e57 0a0d
000e58 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e59 7465
000e5a 7541
000e5b 4478
000e5c 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e5d 4374
000e5e 6e6f
000e5f 6966
000e60 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e61 6520
000e62 6576
000e63 746e
000e64 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e65 7275
000e66 6563
000e67 754e
000e68 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e69 7265
000e6a 6920
000e6b 2073
000e6c 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e6d 206f
000e6e 6f6c
000e6f 676e
000e70 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e71 6425
000e72 2129
000e73 0d21
000e74 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e75 0a0d
000e76 6320
000e77 6168
000e78 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e79 6c65
000e7a 2020
000e7b 2020
000e7c 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e7d 2020
000e7e 2020
000e7f 3e20
000e80 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e81 255b
000e82 5d64
000e83 0d00
000e84 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e85 6863
000e86 6e61
000e87 656e
000e88 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e89 616e
000e8a 6c62
000e8b 2065
000e8c 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e8d 2020
000e8e 3e3e
000e8f 3020
000e90 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e91 3230
000e92 0058
000e93 0a0d
000e94 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e95 6174
000e96 6574
000e97 6e4f
000e98 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e99 6e65
000e9a 2074
000e9b 2020
000e9c 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e9d 3e20
000e9e 203e
000e9f 7830
000ea0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000ea1 5832
000ea2 0d00
000ea3 200a
000ea4 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000ea5 6e65
000ea6 5374
000ea7 756f
000ea8 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000ea9 4e65
000eaa 6d75
000eab 6562
000eac 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000ead 3e3e
000eae 2520
000eaf 0064
000eb0 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000eb1 6520
000eb2 6576
000eb3 746e
000eb4 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000eb5 7275
000eb6 6563
000eb7 2020
000eb8 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000eb9 2020
000eba 3e20
000ebb 203e
000ebc 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000ebd 200a
000ebe 6c61
000ebf 7261
000ec0 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000ec1 7665
000ec2 6c65
000ec3 2020
000ec4 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000ec5 2020
000ec6 3e3e
000ec7 2520
000ec8 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000ec9 0a0d
000eca 733c
000ecb 7465
000ecc 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000ecd 4178
000ece 756f
000ecf 4374
000ed0 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000ed1 6966
000ed2 3e67
000ed3 4320
000ed4 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000ed5 6e6e
000ed6 6c65
000ed7 4520
000ed8 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000ed9 726f
000eda 2121
000edb 0a0d
000edc 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000edd 3c0a
000ede 6573
000edf 4174
000ee0 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000ee1 6f41
000ee2 7475
000ee3 6f43
000ee4 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000ee5 6769
000ee6 203e
000ee7 7665
000ee8 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000ee9 5374
000eea 756f
000eeb 6372
000eec 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000eed 6d75
000eee 6562
000eef 2072
000ef0 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000ef1 7420
000ef2 6f6f
000ef3 6c20
000ef4 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000ef5 2067
000ef6 2528
000ef7 2964
000ef8 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ef9 0a0d
000efa 0d00
000efb 200a
000efc 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000efd 6576
000efe 4f6c
000eff 456e
000f00 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000f01 746e
000f02 2020
000f03 2020
000f04 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000f05 3e3e
000f06 2520
000f07 0066
000f08 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000f09 733c
000f0a 7465
000f0b 7542
000f0c 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000f0d 7265
000f0e 6f43
000f0f 666e
000f10 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000f11 203e
000f12 7665
000f13 6e65
000f14 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000f15 756f
000f16 6372
000f17 4e65
000f18 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000f19 6562
000f1a 2072
000f1b 7369
000f1c 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000f1d 6f6f
000f1e 6c20
000f1f 6e6f
000f20 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000f21 2528
000f22 2964
000f23 2121
000f24 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000f25 0d00
000f26 200a
000f27 6e65
000f28 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000f29 656c
000f2a 2020
000f2b 2020
000f2c 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000f2d 2020
000f2e 2020
000f2f 2020
000f30 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f31 3020
000f32 2578
000f33 3230
000f34 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000f35 0a0d
000f36 6520
000f37 6576
000f38 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000f39 6f53
000f3a 7275
000f3b 6563
000f3c 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000f3d 2020
000f3e 2020
000f3f 3e20
000f40 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000f41 0a0d
000f42 6720
000f43 6d73
000f44 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000f45 4953
000f46 654c
000f47 6576
000f48 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000f49 2020
000f4a 2020
000f4b 3e3e
000f4c 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000f4d 2066
000f4e 4264
000f4f 0d00
000f50 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f51 7367
000f52 436d
000f53 6572
000f54 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f55 4274
000f56 6c61
000f57 6e61
000f58 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f59 3e20
000f5a 203e
000f5b 6425
000f5c 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f5d 6861
000f5e 0074
000f5f 0a0d
000f60 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f61 7461
000f62 6574
000f63 7972
000f64 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f65 6576
000f66 206c
000f67 2020
000f68 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f69 3e3e
000f6a 2520
000f6b 2066
000f6c 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f6d 746c
000f6e 0073
000f6f 0a0d
000f70 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f71 6d6f
000f72 536d
000f73 6769
000f74 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f75 4c6c
000f76 7665
000f77 6c65
000f78 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f79 3e3e
000f7a 2520
000f7b 2066
000f7c 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f7d 0d00
000f7e 200a
000f7f 6f63
000f80 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f81 6f4c
000f82 7473
000f83 6544
000f84 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f85 2079
000f86 2020
000f87 3e20
000f88 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f89 6425
000f8a 7320
000f8b 6365
000f8c 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f8d 200a
000f8e 656d
000f8f 6f6d
000f90 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f91 694d
000f92 206e
000f93 2020
000f94 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f95 2020
000f96 3e20
000f97 203e
000f98 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f99 4d20
000f9a 2e42
000f9b 0d00
000f9c 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f9d 6361
000f9e 6d63
000f9f 2020
000fa0 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000fa1 3e20
000fa2 203e
000fa3 6625
000fa4 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000fa5 0042
000fa6 0a0d
000fa7 6920
000fa8 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000fa9 2076
000faa 2020
000fab 2020
000fac 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000fad 2520
000fae 2064
000faf 6142
000fb0 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000fb1 3c00
000fb2 616d
000fb3 6e69
000fb4 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000fb5 6567
000fb6 5374
000fb7 6e65
000fb8 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000fb9 4372
000fba 6e6f
000fbb 6966
000fbc 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000fbd 6425
000fbe 2029
000fbf 7265
000fc0 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000fc1 0d72
000fc2 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000fc3 453c
000fc4 4854
000fc5 735f
000fc6 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fc7 4e64
000fc8 6361
000fc9 3e6b
000fca 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000fcb 6e65
000fcc 6964
000fcd 676e
000fce 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000fcf 0a0d
000fd0 3c00
000fd1 5445
000fd2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fd3 6573
000fd4 646e
000fd5 7453
000fd6 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fd7 7375
000fd8 6552
000fd9 7571
000fda 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000fdb 4174
000fdc 6b63
000fdd 203e
000fde 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000fdf 646e
000fe0 6e69
000fe1 2e67
000fe2 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000fe3 000a
000fe4 453c
000fe5 4854
000fe6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fe7 6e65
000fe8 5364
000fe9 6174
000fea 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000feb 5273
000fec 7065
000fed 726f
000fee 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fef 646d
000ff0 203e
000ff1 7266
000ff2 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000ff3 4c65
000ff4 6e65
000ff5 7420
000ff6 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000ff7 6c20
000ff8 6e6f
000ff9 2067
000ffa 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000ffb 2064
000ffc 7962
000ffd 6574
000ffe 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fff 0a0d
001000 3c00
001001 5445
001002 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001003 6573
001004 646e
001005 7453
001006 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
001007 7375
001008 6552
001009 6f70
00100a 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
00100b 6d43
00100c 3e64
00100d 6d20
00100e 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
00100f 6f6c
001010 2063
001011 6166
001012 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
001013 6465
001014 2820
001015 6425
001016 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001017 7479
001018 7365
001019 0d29
00101a 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
00101b 453c
00101c 4854
00101d 735f
00101e 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00101f 4564
001020 6576
001021 746e
001022 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
001023 6f70
001024 7472
001025 6d43
001026 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
001027 5720
001028 6f72
001029 676e
00102a 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
00102b 6576
00102c 746e
00102d 7954
00102e 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
00102f 3020
001030 2578
001031 3230
001032 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
001033 000a
001034 453c
001035 4854
001036 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001037 6e65
001038 4564
001039 6576
00103a 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
00103b 6552
00103c 6f70
00103d 7472
00103e 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00103f 3e64
001040 6120
001041 6464
001042 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
001043 6e65
001044 4c74
001045 676f
001046 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
001047 7565
001048 2865
001049 7830
00104a 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
00104b 5832
00104c 252c
00104d 646c
00104e 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
00104f 2578
001050 3230
001051 2c58
001052 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
001053 3025
001054 5832
001055 2029
001056 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001057 6c69
001058 6465
001059 0a0d
00105a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00105b 5445
00105c 5f48
00105d 6573
00105e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00105f 7645
001060 6e65
001061 5274
001062 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
001063 726f
001064 4374
001065 646d
001066 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001067 6573
001068 646e
001069 6e69
00106a 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
00106b 0d2e
00106c 000a
00106d 453c
00106e 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00106f 735f
001070 6e65
001071 4364
001072 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001073 6966
001074 4d67
001075 6e61
001076 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001077 4e65
001078 6361
001079 3e6b
00107a 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
00107b 6e65
00107c 6964
00107d 676e
00107e 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
00107f 0a0d
001080 3c00
001081 5445
001082 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001083 6573
001084 646e
001085 6f43
001086 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001087 6769
001088 614d
001089 616e
00108a 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
00108b 6341
00108c 3e6b
00108d 6620
00108e 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
00108f 656d
001090 654c
001091 206e
001092 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
001093 206f
001094 6f6c
001095 676e
001096 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001097 6425
001098 6220
001099 7479
00109a 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00109b 0d29
00109c 000a
00109d 453c
00109e 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00109f 735f
0010a0 6e65
0010a1 4364
0010a2 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
0010a3 6966
0010a4 4d67
0010a5 6e61
0010a6 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
0010a7 4165
0010a8 6b63
0010a9 203e
0010aa 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
0010ab 6c6c
0010ac 636f
0010ad 6620
0010ae 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
0010af 656c
0010b0 2064
0010b1 2528
0010b2 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
0010b3 7962
0010b4 6574
0010b5 2973
0010b6 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
0010b7 3c00
0010b8 5445
0010b9 5f48
0010ba 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010bb 646e
0010bc 6f43
0010bd 666e
0010be 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
0010bf 614d
0010c0 616e
0010c1 6567
0010c2 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
0010c3 3e6b
0010c4 7320
0010c5 6e65
0010c6 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
0010c7 676e
0010c8 2e2e
0010c9 0a0d
0010ca 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
0010cb 5445
0010cc 5f48
0010cd 6573
0010ce 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010cf 6144
0010d0 6174
0010d1 6552
0010d2 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010d3 7472
0010d4 6d43
0010d5 3e64
0010d6 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
0010d7 6f72
0010d8 676e
0010d9 6420
0010da 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
0010db 5461
0010dc 7079
0010dd 2065
0010de 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
0010df 3025
0010e0 5832
0010e1 0a0d
0010e2 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
0010e3 5445
0010e4 5f48
0010e5 6573
0010e6 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010e7 6144
0010e8 6174
0010e9 6552
0010ea 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010eb 7472
0010ec 6d43
0010ed 3e64
0010ee 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010ef 6464
0010f0 6144
0010f1 6174
0010f2 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010f3 5167
0010f4 6575
0010f5 6575
0010f6 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010f7 2578
0010f8 3230
0010f9 2c58
0010fa 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010fb 2c64
0010fc 7525
0010fd 252c
0010fe 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010ff 2966
001100 6620
001101 6961
001102 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001103 0d64
001104 000a
001105 453c
001106 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001107 735f
001108 6e65
001109 4464
00110a 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
00110b 5261
00110c 7065
00110d 726f
00110e 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
00110f 646d
001110 203e
001111 6573
001112 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
001113 6e69
001114 2e67
001115 0d2e
001116 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
001117 453c
001118 4854
001119 735f
00111a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00111b 4c64
00111c 676f
00111d 614d
00111e 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
00111f 7570
001120 616c
001121 6974
001122 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
001123 6341
001124 3e6b
001125 7320
001126 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
001127 6964
001128 676e
001129 2e2e
00112a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00112b 3c00
00112c 5445
00112d 5f48
00112e 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00112f 646e
001130 654e
001131 7774
001132 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001133 4d6b
001134 6961
001135 746e
001136 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001137 6e61
001138 6563
001139 6341
00113a 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
00113b 7320
00113c 6e65
00113d 6964
00113e 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
00113f 2e2e
001140 0a0d
001141 3c00
001142 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
001143 5f48
001144 6572
001145 6f6d
001146 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
001147 6544
001148 6976
001149 6563
00114a 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
00114b 746e
00114c 6f72
00114d 416c
00114e 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
00114f 203e
001150 6573
001151 646e
001152 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
001153 2e67
001154 0d2e
001155 000a
001156 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001157 4854
001158 635f
001159 656c
00115a 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
00115b 7544
00115c 6c70
00115d 6369
00115e 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
00115f 5265
001160 7165
001161 6575
001162 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001163 6d43
001164 3e64
001165 7320
001166 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001167 6964
001168 676e
001169 2e2e
00116a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00116b 0d00
00116c 3c0a
00116d 5445
00116e 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
00116f 6863
001170 6365
001171 506b
001172 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001173 4c68
001174 676f
001175 203e
001176 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001177 203d
001178 5245
001179 4f52
00117a 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
00117b 4e49
00117c 4f46
00117d 414d
00117e 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
00117f 4e4f
001180 4920
001181 204e
001182 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
001183 4154
001184 4c20
001185 474f
001186 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001187 4555
001188 4555
001189 3d20
00118a 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
00118b 0a0d
00118c 3c00
00118d 5445
00118e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00118f 6863
001190 6365
001191 506b
001192 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001193 4c68
001194 676f
001195 203e
001196 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001197 6174
001198 6f4c
001199 2067
00119a 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
00119b 656d
00119c 255b
00119d 646c
00119e 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
00119f 6863
0011a0 255b
0011a1 5d64
0011a2 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
0011a3 6c61
0011a4 255b
0011a5 322e
0011a6 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
0011a7 0a0d
0011a8 3c00
0011a9 5445
0011aa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011ab 6863
0011ac 6365
0011ad 506b
0011ae 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011af 4c68
0011b0 676f
0011b1 203e
0011b2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011b3 5f47
0011b4 706f
0011b5 6e65
0011b6 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
0011b7 656c
0011b8 2528
0011b9 2973
0011ba 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0011bb 6961
0011bc 656c
0011bd 2c64
0011be 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0011bf 756f
0011c0 646c
0011c1 276e
0011c2 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0011c3 6173
0011c4 6576
0011c5 6c20
0011c6 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0011c7 0a0d
0011c8 3c00
0011c9 5445
0011ca 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011cb 6863
0011cc 6365
0011cd 506b
0011ce 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011cf 4c68
0011d0 676f
0011d1 203e
0011d2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011d3 5f47
0011d4 6e69
0011d5 6573
0011d6 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0011d7 6144
0011d8 6174
0011d9 2928
0011da 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0011db 6961
0011dc 656c
0011dd 0d64
0011de 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0011df 453c
0011e0 4854
0011e1 635f
0011e2 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0011e3 6b63
0011e4 7550
0011e5 6873
0011e6 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0011e7 3e67
0011e8 4c20
0011e9 474f
0011ea 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0011eb 6f6c
0011ec 6573
0011ed 6946
0011ee 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011ef 2928
0011f0 6620
0011f1 6961
0011f2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011f3 0d64
0011f4 000a
0011f5 453c
0011f6 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011f7 635f
0011f8 6568
0011f9 6b63
0011fa 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011fb 6873
0011fc 6f4c
0011fd 3e67
0011fe 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011ff 736e
001200 7265
001201 6574
001202 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
001203 6144
001204 6174
001205 4c20
001206 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
001207 0a0d
001208 0d00
001209 3c0a
00120a 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
00120b 5f48
00120c 6863
00120d 6365
00120e 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
00120f 7375
001210 4c68
001211 676f
001212 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
001213 3d3d
001214 203d
001215 5245
001216 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
001217 2052
001218 4e49
001219 4f46
00121a 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
00121b 4954
00121c 4e4f
00121d 4920
00121e 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
00121f 5645
001220 4e45
001221 2054
001222 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
001223 2047
001224 5551
001225 5545
001226 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
001227 3d3d
001228 0d3d
001229 000a
00122a 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
00122b 4854
00122c 635f
00122d 6568
00122e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00122f 7550
001230 6873
001231 6f4c
001232 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001233 4520
001234 6576
001235 746e
001236 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
001237 2067
001238 6974
001239 656d
00123a 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
00123b 646c
00123c 2c5d
00123d 6469
00123e 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
00123f 2578
001240 3230
001241 5d58
001242 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
001243 6174
001244 5b74
001245 7830
001246 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
001247 5832
001248 0d5d
001249 000a
00124a 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
00124b 4854
00124c 635f
00124d 6568
00124e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00124f 7550
001250 6873
001251 6f4c
001252 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001253 4920
001254 736e
001255 7265
001256 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001257 2064
001258 7645
001259 6e65
00125a 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00125b 6f4c
00125c 0d67
00125d 000a
00125e 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
00125f 4854
001260 725f
001261 7465
001262 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001263 736e
001264 696d
001265 3e74
001266 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001267 6361
001268 656b
001269 2074
00126a 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
00126b 2578
00126c 3230
00126d 5d58
00126e 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
00126f 7078
001270 7269
001271 6465
001272 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
001273 3c00
001274 5445
001275 5f48
001276 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001277 7274
001278 6e61
001279 6d73
00127a 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
00127b 203e
00127c 7075
00127d 6164
00127e 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
00127f 6c20
001280 676f
001281 6144
001282 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
001283 7420
001284 6d69
001285 6f65
001286 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001287 0a0d
001288 3c00
001289 5445
00128a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00128b 6572
00128c 7274
00128d 6e61
00128e 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
00128f 7469
001290 203e
001291 7075
001292 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
001293 6574
001294 6c20
001295 676f
001296 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001297 6e65
001298 2074
001299 6974
00129a 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
00129b 756f
00129c 0d74
00129d 000a
00129e 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
00129f 4854
0012a0 725f
0012a1 7465
0012a2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012a3 736e
0012a4 696d
0012a5 3e74
0012a6 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
0012a7 6d6f
0012a8 4c6d
0012a9 736f
0012aa 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
0012ab 6d69
0012ac 7265
0012ad 3d20
0012ae 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
0012af 646c
0012b0 2528
0012b1 586c
0012b2 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
0012b3 000a
0012b4 453c
0012b5 4854
0012b6 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
0012b7 7465
0012b8 6172
0012b9 736e
0012ba 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
0012bb 3e74
0012bc 4c20
0012bd 736f
0012be 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0012bf 6d69
0012c0 7265
0012c1 7420
0012c2 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0012c3 2065
0012c4 656c
0012c5 7466
0012c6 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0012c7 2520
0012c8 646c
0012c9 2528
0012ca 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0012cb 0d29
0012cc 000a
0012cd 0a0d
0012ce 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0012cf 4854
0012d0 725f
0012d1 7465
0012d2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012d3 736e
0012d4 696d
0012d5 3e74
0012d6 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0012d7 522d
0012d8 7465
0012d9 6172
0012da 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0012db 696d
0012dc 7474
0012dd 6e69
0012de 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0012df 202d
0012e0 305b
0012e1 2578
0012e2 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0012e3 5d58
0012e4 0a0d
0012e5 3c00
0012e6 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0012e7 5f48
0012e8 7270
0012e9 636f
0012ea 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0012eb 5073
0012ec 6361
0012ed 656b
0012ee 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012ef 7320
0012f0 6174
0012f1 7574
0012f2 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012f3 6572
0012f4 7571
0012f5 7365
0012f6 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012f7 6e69
0012f8 6176
0012f9 696c
0012fa 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012fb 656c
0012fc 676e
0012fd 6874
0012fe 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012ff 6425
001300 0d29
001301 000a
001302 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001303 4854
001304 705f
001305 6f72
001306 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001307 7373
001308 6150
001309 6b63
00130a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00130b 203e
00130c 6170
00130d 6c79
00130e 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
00130f 2064
001310 616d
001311 6c6c
001312 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001313 2928
001314 6620
001315 6961
001316 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001317 0d64
001318 000a
001319 453c
00131a 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00131b 705f
00131c 6f72
00131d 6563
00131e 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
00131f 6150
001320 6b63
001321 7465
001322 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001323 7473
001324 7461
001325 7375
001326 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
001327 7571
001328 7365
001329 5074
00132a 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
00132b 6573
00132c 2872
00132d 2029
00132e 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
00132f 6c69
001330 6465
001331 0a0d
001332 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001333 2d0a
001334 732d
001335 6174
001336 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
001337 5273
001338 7165
001339 6575
00133a 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00133b 6150
00133c 7372
00133d 7265
00133e 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
00133f 4320
001340 444d
001341 5b20
001342 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
001343 3025
001344 5832
001345 0d5d
001346 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001347 6361
001348 6563
001349 7373
00134a 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
00134b 6874
00134c 646f
00134d 2020
00134e 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
00134f 305b
001350 2578
001351 3230
001352 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001353 0a0d
001354 6900
001355 746e
001356 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001357 6176
001358 206c
001359 2020
00135a 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
00135b 2020
00135c 5b20
00135d 7830
00135e 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
00135f 5834
001360 205d
001361 203d
001362 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
001363 0a0d
001364 7300
001365 6174
001366 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001367 4c73
001368 7369
001369 2074
00136a 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
00136b 2020
00136c 7c20
00136d 2500
00136e 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
00136f 7c58
001370 0d00
001371 2d0a
001372 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
001373 2e2e
001374 6f44
001375 656e
001376 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001377 2d20
001378 0d2d
001379 000a
00137a 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
00137b 4854
00137c 705f
00137d 6f72
00137e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00137f 7373
001380 6150
001381 6b63
001382 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001383 203e
001384 7473
001385 7461
001386 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001387 7220
001388 7065
001389 726f
00138a 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
00138b 6e69
00138c 6176
00138d 696c
00138e 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00138f 656c
001390 676e
001391 6874
001392 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001393 6425
001394 0d29
001395 000a
001396 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001397 2d2d
001398 7473
001399 7461
00139a 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
00139b 6552
00139c 6f70
00139d 7472
00139e 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
00139f 7372
0013a0 7265
0013a1 2d2d
0013a2 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0013a3 4b43
0013a4 5b20
0013a5 7830
0013a6 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0013a7 5832
0013a8 0d5d
0013a9 000a
0013aa 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
0013ab 7869
0013ac 6954
0013ad 656d
0013ae 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
0013af 2020
0013b0 2020
0013b1 2020
0013b2 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
0013b3 2578
0013b4 3230
0013b5 5d58
0013b6 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013b7 2578
0013b8 3230
0013b9 5d58
0013ba 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bb 2578
0013bc 3230
0013bd 5d58
0013be 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bf 2578
0013c0 3230
0013c1 5d58
0013c2 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0013c3 3c00
0013c4 5445
0013c5 5f48
0013c6 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0013c7 636f
0013c8 7365
0013c9 5073
0013ca 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0013cb 656b
0013cc 3e74
0013cd 6520
0013ce 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0013cf 746e
0013d0 7220
0013d1 7065
0013d2 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0013d3 2074
0013d4 6e69
0013d5 6176
0013d6 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0013d7 2064
0013d8 656c
0013d9 676e
0013da 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0013db 2820
0013dc 6425
0013dd 0d29
0013de 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0013df 0a0d
0013e0 2d2d
0013e1 7665
0013e2 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0013e3 5274
0013e4 7065
0013e5 726f
0013e6 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0013e7 7261
0013e8 6573
0013e9 2d72
0013ea 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0013eb 4341
0013ec 204b
0013ed 305b
0013ee 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013ef 3230
0013f0 5d58
0013f1 0a0d
0013f2 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013f3 5445
0013f4 5f48
0013f5 7270
0013f6 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013f7 7365
0013f8 5073
0013f9 6361
0013fa 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013fb 3e74
0013fc 6720
0013fd 746f
0013fe 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013ff 6576
001400 746e
001401 6c20
001402 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
001403 6120
001404 6b63
001405 0a0d
001406 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
001407 6f6c
001408 5267
001409 7065
00140a 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
00140b 3e74
00140c 4c20
00140d 474f
00140e 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
00140f 6570
001410 466e
001411 6c69
001412 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
001413 7325
001414 2029
001415 6166
001416 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
001417 6465
001418 0a0d
001419 3c00
00141a 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00141b 5f47
00141c 6572
00141d 6461
00141e 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
00141f 6174
001420 203e
001421 4f4c
001422 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001423 6573
001424 4c74
001425 7361
001426 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
001427 6e65
001428 2864
001429 2029
00142a 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
00142b 6c69
00142c 6465
00142d 0a0d
00142e 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00142f 4f4c
001430 5f47
001431 6572
001432 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
001433 6144
001434 6174
001435 203e
001436 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
001437 5f47
001438 6573
001439 4c74
00143a 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
00143b 5374
00143c 6e65
00143d 2864
00143e 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
00143f 252c
001440 646c
001441 0d29
001442 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
001443 6c3c
001444 676f
001445 6552
001446 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
001447 7472
001448 203e
001449 4f4c
00144a 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00144b 6c63
00144c 736f
00144d 4665
00144e 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
00144f 2865
001450 7325
001451 2029
001452 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
001453 6c69
001454 6465
001455 0a0d
001456 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001457 5445
001458 5f48
001459 7270
00145a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00145b 7365
00145c 5073
00145d 6361
00145e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00145f 3e74
001460 4320
001461 6e6f
001462 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
001463 2067
001464 614d
001465 616e
001466 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001467 0a0d
001468 3c00
001469 5445
00146a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00146b 7270
00146c 636f
00146d 7365
00146e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00146f 6361
001470 656b
001471 3e74
001472 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
001473 6e6f
001474 6966
001475 7567
001476 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001477 6974
001478 6e6f
001479 6d20
00147a 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
00147b 6761
00147c 6d65
00147d 6e65
00147e 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
00147f 6e69
001480 6176
001481 696c
001482 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001483 656c
001484 676e
001485 6874
001486 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001487 6425
001488 0d29
001489 000a
00148a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00148b 4854
00148c 705f
00148d 6f72
00148e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00148f 7373
001490 6150
001491 6b63
001492 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001493 203e
001494 6170
001495 6c79
001496 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001497 2064
001498 616d
001499 6c6c
00149a 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00149b 2528
00149c 2964
00149d 6620
00149e 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
00149f 656c
0014a0 0d64
0014a1 000a
0014a2 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
0014a3 4854
0014a4 705f
0014a5 6f72
0014a6 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014a7 7373
0014a8 6150
0014a9 6b63
0014aa 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014ab 203e
0014ac 6f63
0014ad 666e
0014ae 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0014af 614d
0014b0 616e
0014b1 6567
0014b2 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
0014b3 7372
0014b4 7265
0014b5 2928
0014b6 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
0014b7 6961
0014b8 656c
0014b9 0d64
0014ba 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0014bb 0a0d
0014bc 2d2d
0014bd 6f63
0014be 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0014bf 6769
0014c0 614d
0014c1 616e
0014c2 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0014c3 6150
0014c4 7372
0014c5 7265
0014c6 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0014c7 4320
0014c8 444d
0014c9 5b20
0014ca 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0014cb 3025
0014cc 5832
0014cd 0d5d
0014ce 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0014cf 6361
0014d0 6463
0014d1 2020
0014d2 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0014d3 2020
0014d4 2020
0014d5 2020
0014d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014d7 305b
0014d8 2578
0014d9 3230
0014da 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0014db 0a0d
0014dc 6300
0014dd 666e
0014de 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0014df 2020
0014e0 2020
0014e1 2020
0014e2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014e3 2020
0014e4 5b20
0014e5 7830
0014e6 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0014e7 5832
0014e8 0d5d
0014e9 000a
0014ea 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014eb 4854
0014ec 705f
0014ed 6f72
0014ee 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014ef 7373
0014f0 6150
0014f1 6b63
0014f2 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014f3 203e
0014f4 6567
0014f5 4374
0014f6 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014f7 6966
0014f8 4c67
0014f9 6e65
0014fa 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014fb 6620
0014fc 6961
0014fd 656c
0014fe 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014ff 000a
001500 453c
001501 4854
001502 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001503 6f72
001504 6563
001505 7373
001506 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001507 6b63
001508 7465
001509 203e
00150a 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
00150b 6766
00150c 6452
00150d 6d20
00150e 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
00150f 6f6c
001510 2863
001511 2029
001512 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
001513 6c69
001514 6465
001515 0a0d
001516 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001517 5445
001518 5f48
001519 7270
00151a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00151b 7365
00151c 5073
00151d 6361
00151e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00151f 3e74
001520 6320
001521 6e6f
001522 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
001523 5267
001524 6165
001525 2864
001526 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
001527 6166
001528 6c69
001529 6465
00152a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00152b 3c00
00152c 5445
00152d 5f48
00152e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00152f 636f
001530 7365
001531 5073
001532 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001533 656b
001534 3e74
001535 5220
001536 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
001537 4d43
001538 2044
001539 203a
00153a 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
00153b 5f48
00153c 6573
00153d 646e
00153e 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
00153f 666e
001540 6769
001541 614d
001542 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001543 6567
001544 6341
001545 286b
001546 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
001547 6166
001548 6c69
001549 6465
00154a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00154b 3c00
00154c 5445
00154d 5f48
00154e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00154f 636f
001550 7365
001551 5073
001552 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001553 656b
001554 3e74
001555 6320
001556 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001557 5767
001558 2072
001559 616d
00155a 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
00155b 636f
00155c 2928
00155d 6620
00155e 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
00155f 656c
001560 0d64
001561 000a
001562 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001563 4854
001564 705f
001565 6f72
001566 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001567 7373
001568 6150
001569 6b63
00156a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00156b 203e
00156c 6f63
00156d 666e
00156e 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
00156f 7257
001570 7469
001571 2865
001572 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
001573 6166
001574 6c69
001575 6465
001576 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001577 5700
001578 5241
001579 204e
00157a 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
00157b 453c
00157c 4854
00157d 705f
00157e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00157f 6563
001580 7373
001581 6150
001582 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001583 7465
001584 203e
001585 5257
001586 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001587 444d
001588 3a20
001589 4520
00158a 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
00158b 735f
00158c 6e65
00158d 4364
00158e 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00158f 6966
001590 4d67
001591 6e61
001592 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001593 4165
001594 6b63
001595 2928
001596 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001597 6961
001598 656c
001599 0d64
00159a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00159b 453c
00159c 4854
00159d 705f
00159e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00159f 6563
0015a0 7373
0015a1 6150
0015a2 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0015a3 7465
0015a4 203e
0015a5 6f63
0015a6 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
0015a7 6769
0015a8 6f43
0015a9 666e
0015aa 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
0015ab 286d
0015ac 2029
0015ad 6166
0015ae 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0015af 6465
0015b0 0a0d
0015b1 3c00
0015b2 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0015b3 5f48
0015b4 7270
0015b5 636f
0015b6 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015b7 5073
0015b8 6361
0015b9 656b
0015ba 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015bb 7520
0015bc 6b6e
0015bd 6f6e
0015be 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0015bf 7420
0015c0 7079
0015c1 2065
0015c2 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0015c3 2072
0015c4 6f63
0015c5 666e
0015c6 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0015c7 3e2d
0015c8 6361
0015c9 6463
0015ca 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0015cb 7830
0015cc 3025
0015cd 5832
0015ce 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0015cf 000a
0015d0 453c
0015d1 4854
0015d2 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0015d3 6f72
0015d4 6563
0015d5 7373
0015d6 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0015d7 6b63
0015d8 7465
0015d9 203e
0015da 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0015db 6174
0015dc 7220
0015dd 7065
0015de 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0015df 2074
0015e0 6e69
0015e1 6176
0015e2 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0015e3 2064
0015e4 656c
0015e5 676e
0015e6 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0015e7 2820
0015e8 6425
0015e9 0d29
0015ea 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0015eb 0a0d
0015ec 2d2d
0015ed 6164
0015ee 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015ef 6552
0015f0 6f70
0015f1 7472
0015f2 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015f3 7372
0015f4 7265
0015f5 2d2d
0015f6 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015f7 4b43
0015f8 5b20
0015f9 7830
0015fa 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015fb 5832
0015fc 0d5d
0015fd 000a
0015fe 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015ff 4854
001600 705f
001601 6f72
001602 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001603 7373
001604 6150
001605 6b63
001606 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001607 203e
001608 6f67
001609 2074
00160a 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
00160b 6174
00160c 6c20
00160d 676f
00160e 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
00160f 6b63
001610 0a0d
001611 3c00
001612 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
001613 5f48
001614 7270
001615 636f
001616 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001617 5073
001618 6361
001619 656b
00161a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00161b 6c20
00161c 676f
00161d 6d20
00161e 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
00161f 7069
001620 6c75
001621 7461
001622 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001623 206e
001624 4328
001625 444d
001626 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
001627 6e69
001628 6176
001629 696c
00162a 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00162b 656c
00162c 676e
00162d 6874
00162e 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00162f 6425
001630 0d29
001631 000a
001632 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001633 4854
001634 705f
001635 6f72
001636 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001637 7373
001638 6150
001639 6b63
00163a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00163b 203e
00163c 6f6c
00163d 4d67
00163e 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
00163f 7069
001640 6c75
001641 7461
001642 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001643 436e
001644 646d
001645 6150
001646 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001647 7265
001648 2928
001649 6620
00164a 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
00164b 656c
00164c 0d64
00164d 000a
00164e 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00164f 2d2d
001650 6f6c
001651 4d67
001652 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001653 7069
001654 6c75
001655 7461
001656 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001657 436e
001658 646d
001659 6150
00165a 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00165b 7265
00165c 2d2d
00165d 4320
00165e 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
00165f 5b20
001660 7830
001661 3025
001662 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001663 0d5d
001664 000a
001665 5374
001666 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001667 7472
001668 2020
001669 2020
00166a 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
00166b 2020
00166c 2020
00166d 255b
00166e 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00166f 0d5d
001670 000a
001671 5374
001672 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
001673 2070
001674 2020
001675 2020
001676 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001677 2020
001678 2020
001679 255b
00167a 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00167b 0d5d
00167c 000a
00167d 453c
00167e 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00167f 705f
001680 6f72
001681 6563
001682 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001683 6150
001684 6b63
001685 7465
001686 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001687 6573
001688 4c74
001689 676f
00168a 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
00168b 696e
00168c 7570
00168d 616c
00168e 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
00168f 6353
001690 6568
001691 616d
001692 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
001693 6620
001694 6961
001695 656c
001696 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001697 000a
001698 453c
001699 4854
00169a 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
00169b 6f72
00169c 6563
00169d 7373
00169e 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
00169f 6b63
0016a0 7465
0016a1 203e
0016a2 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
0016a3 2067
0016a4 616d
0016a5 696e
0016a6 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
0016a7 616c
0016a8 6974
0016a9 6e6f
0016aa 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
0016ab 4341
0016ac 294b
0016ad 6920
0016ae 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
0016af 6c61
0016b0 6469
0016b1 6c20
0016b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0016b3 7467
0016b4 2068
0016b5 2528
0016b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0016b7 0a0d
0016b8 0d00
0016b9 2d0a
0016ba 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
0016bb 676f
0016bc 614d
0016bd 696e
0016be 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0016bf 616c
0016c0 6974
0016c1 6e6f
0016c2 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0016c3 506b
0016c4 7261
0016c5 6573
0016c6 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0016c7 202d
0016c8 4341
0016c9 204b
0016ca 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0016cb 2578
0016cc 3230
0016cd 5d58
0016ce 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0016cf 7300
0016d0 6174
0016d1 7574
0016d2 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0016d3 2020
0016d4 2020
0016d5 2020
0016d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016d7 5b20
0016d8 6c25
0016d9 5d64
0016da 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0016db 3c00
0016dc 5445
0016dd 5f48
0016de 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0016df 636f
0016e0 7365
0016e1 5073
0016e2 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0016e3 656b
0016e4 3e74
0016e5 6e20
0016e6 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0016e7 6f77
0016e8 6b72
0016e9 6d20
0016ea 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0016eb 746e
0016ec 6e65
0016ed 6e61
0016ee 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016ef 6920
0016f0 766e
0016f1 6c61
0016f2 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016f3 6c20
0016f4 6e65
0016f5 7467
0016f6 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016f7 2528
0016f8 2964
0016f9 0a0d
0016fa 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016fb 5445
0016fc 5f48
0016fd 7270
0016fe 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016ff 7365
001700 5073
001701 6361
001702 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001703 3e74
001704 6e20
001705 7465
001706 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
001707 6b72
001708 614d
001709 6e69
00170a 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00170b 616e
00170c 636e
00170d 5065
00170e 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
00170f 6573
001710 2872
001711 2029
001712 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001713 6c69
001714 6465
001715 0a0d
001716 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001717 2d0a
001718 6e2d
001719 7465
00171a 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
00171b 6b72
00171c 614d
00171d 6e69
00171e 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00171f 616e
001720 636e
001721 5065
001722 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
001723 6573
001724 2d72
001725 202d
001726 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
001727 2044
001728 305b
001729 2578
00172a 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00172b 5d58
00172c 0a0d
00172d 6300
00172e 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
00172f 2020
001730 2020
001731 2020
001732 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001733 2020
001734 2020
001735 5b20
001736 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001737 3025
001738 5832
001739 0d5d
00173a 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
00173b 6164
00173c 6174
00173d 654c
00173e 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
00173f 2020
001740 2020
001741 2020
001742 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001743 255b
001744 5d64
001745 0a0d
001746 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
001747 7461
001748 2061
001749 2d2d
00174a 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
00174b 2020
00174c 2020
00174d 2020
00174e 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
00174f 000a
001750 2d2d
001751 2d2d
001752 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
001753 2d2d
001754 0a0d
001755 3c00
001756 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001757 5f48
001758 7270
001759 636f
00175a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00175b 5073
00175c 6361
00175d 656b
00175e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00175f 7320
001760 7465
001761 6954
001762 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
001763 7953
001764 636e
001765 6353
001766 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001767 616d
001768 2928
001769 6620
00176a 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
00176b 656c
00176c 0d64
00176d 000a
00176e 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
00176f 4e52
001770 3a20
001771 3c20
001772 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
001773 5f48
001774 7270
001775 636f
001776 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001777 5073
001778 6361
001779 656b
00177a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00177b 4e20
00177c 5445
00177d 5f57
00177e 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
00177f 454d
001780 535f
001781 4e59
001782 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
001783 203a
001784 5445
001785 5f48
001786 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001787 646e
001788 654e
001789 7774
00178a 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00178b 4d6b
00178c 6961
00178d 746e
00178e 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
00178f 6e61
001790 6563
001791 6341
001792 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
001793 2029
001794 6166
001795 6c69
001796 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001797 0a0d
001798 3c00
001799 5445
00179a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00179b 7270
00179c 636f
00179d 7365
00179e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00179f 6361
0017a0 656b
0017a1 3e74
0017a2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017a3 6d65
0017a4 746f
0017a5 2065
0017a6 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
0017a7 6976
0017a8 6563
0017a9 6320
0017aa 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
0017ab 7274
0017ac 6c6f
0017ad 6920
0017ae 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
0017af 6c61
0017b0 6469
0017b1 6c20
0017b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0017b3 7467
0017b4 2068
0017b5 2528
0017b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0017b7 0a0d
0017b8 3c00
0017b9 5445
0017ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017bb 7270
0017bc 636f
0017bd 7365
0017be 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017bf 6361
0017c0 656b
0017c1 3e74
0017c2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017c3 6d65
0017c4 746f
0017c5 4465
0017c6 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0017c7 6369
0017c8 4365
0017c9 6e6f
0017ca 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0017cb 6c6f
0017cc 6150
0017cd 7372
0017ce 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0017cf 2928
0017d0 6620
0017d1 6961
0017d2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0017d3 0d64
0017d4 000a
0017d5 0a0d
0017d6 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0017d7 6572
0017d8 6f6d
0017d9 6574
0017da 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0017db 6976
0017dc 6563
0017dd 6f43
0017de 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0017df 6f72
0017e0 506c
0017e1 7261
0017e2 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0017e3 2d72
0017e4 202d
0017e5 4d43
0017e6 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0017e7 305b
0017e8 2578
0017e9 3230
0017ea 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0017eb 0a0d
0017ec 7600
0017ed 6c61
0017ee 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017ef 2020
0017f0 2020
0017f1 2020
0017f2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017f3 2020
0017f4 5b20
0017f5 6c25
0017f6 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017f7 0a0d
0017f8 3c00
0017f9 5445
0017fa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017fb 7270
0017fc 636f
0017fd 7365
0017fe 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017ff 6361
001800 656b
001801 3e74
001802 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
001803 7465
001804 6954
001805 656d
001806 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
001807 636e
001808 6353
001809 6568
00180a 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
00180b 2528
00180c 646c
00180d 2029
00180e 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
00180f 6c69
001810 6465
001811 0a0d
001812 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
001813 5241
001814 204e
001815 203a
001816 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
001817 4854
001818 705f
001819 6f72
00181a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00181b 7373
00181c 6150
00181d 6b63
00181e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00181f 203e
001820 4544
001821 4356
001822 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
001823 5f4c
001824 554d
001825 4554
001826 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
001827 414c
001828 4d52
001829 3a20
00182a 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
00182b 4854
00182c 725f
00182d 6d65
00182e 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
00182f 4465
001830 7665
001831 6369
001832 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
001833 6e6f
001834 7274
001835 6c6f
001836 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
001837 286b
001838 2029
001839 6166
00183a 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00183b 6465
00183c 0a0d
00183d 3c00
00183e 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
00183f 5f48
001840 7270
001841 636f
001842 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001843 5073
001844 6361
001845 656b
001846 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001847 6320
001848 656c
001849 7261
00184a 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
00184b 7369
00184c 2074
00184d 4341
00184e 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
00184f 6e69
001850 6176
001851 696c
001852 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001853 656c
001854 676e
001855 6874
001856 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001857 6425
001858 0d29
001859 000a
00185a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00185b 4854
00185c 705f
00185d 6f72
00185e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00185f 7373
001860 6150
001861 6b63
001862 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001863 203e
001864 6c63
001865 6165
001866 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001867 7369
001868 5074
001869 7261
00186a 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
00186b 2872
00186c 2029
00186d 6166
00186e 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00186f 6465
001870 0a0d
001871 0d00
001872 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001873 632d
001874 656c
001875 7261
001876 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001877 7473
001878 6150
001879 7372
00187a 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
00187b 2d2d
00187c 4120
00187d 4b43
00187e 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
00187f 7830
001880 3025
001881 5832
001882 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001883 000a
001884 7473
001885 7461
001886 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001887 2020
001888 2020
001889 2020
00188a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00188b 2020
00188c 305b
00188d 2578
00188e 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00188f 5d58
001890 0a0d
001891 3c00
001892 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001893 5f48
001894 7270
001895 636f
001896 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001897 5073
001898 6361
001899 656b
00189a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00189b 6320
00189c 656c
00189d 7261
00189e 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
00189f 7075
0018a0 696c
0018a1 6163
0018a2 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
0018a3 7220
0018a4 7165
0018a5 6575
0018a6 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
0018a7 2820
0018a8 4341
0018a9 294b
0018aa 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
0018ab 4355
0018ac 4543
0018ad 5353
0018ae 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
0018af 0a0d
0018b0 3c00
0018b1 5445
0018b2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0018b3 7270
0018b4 636f
0018b5 7365
0018b6 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0018b7 6361
0018b8 656b
0018b9 3e74
0018ba 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
0018bb 656c
0018bc 7261
0018bd 6420
0018be 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0018bf 696c
0018c0 6163
0018c1 6574
0018c2 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0018c3 7165
0018c4 6575
0018c5 7473
0018c6 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0018c7 4341
0018c8 294b
0018c9 4620
0018ca 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0018cb 454c
0018cc 5b44
0018cd 7830
0018ce 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0018cf 5832
0018d0 215d
0018d1 0d21
0018d2 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0018d3 453c
0018d4 4854
0018d5 705f
0018d6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018d7 6563
0018d8 7373
0018d9 6150
0018da 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018db 7465
0018dc 203e
0018dd 6e75
0018de 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0018df 776f
0018e0 206e
0018e1 7974
0018e2 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0018e3 6620
0018e4 726f
0018e5 6320
0018e6 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0018e7 6c5f
0018e8 7473
0018e9 735f
0018ea 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0018eb 633e
0018ec 646d
0018ed 5b20
0018ee 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018ef 3025
0018f0 5832
0018f1 0d5d
0018f2 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018f3 453c
0018f4 4854
0018f5 705f
0018f6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018f7 6563
0018f8 7373
0018f9 6150
0018fa 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018fb 7465
0018fc 203e
0018fd 6966
0018fe 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018ff 6177
001900 6572
001901 7520
001902 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
001903 616f
001904 2064
001905 6168
001906 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
001907 7427
001908 7320
001909 7075
00190a 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
00190b 7472
00190c 6465
00190d 7920
00190e 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
00190f 0a0d
001910 0d00
001911 3c0a
001912 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
001913 5f48
001914 7270
001915 636f
001916 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001917 5073
001918 6361
001919 656b
00191a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00191b 6920
00191c 766e
00191d 6c61
00191e 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
00191f 6620
001920 6172
001921 656d
001922 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
001923 7079
001924 2065
001925 2028
001926 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
001927 5832
001928 2920
001929 2121
00192a 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
00192b 3c00
00192c 5445
00192d 5f48
00192e 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00192f 6563
001930 7669
001931 3e65
001932 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
001933 6c61
001934 6f6c
001935 2e63
001936 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
001937 4941
001938 454c
001939 2e44
00193a 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
00193b 000a
00193c 007e
00193d 0a0d
00193e 6e69      	.DB  0xA,0x0,0x7E,0x0,0xD,0xA,0x69,0x6E
00193f 6176
001940 696c
001941 2064
001942 656c      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6C,0x65
001943 676e
001944 6874
001945 2121
001946 0a0d      	.DB  0x6E,0x67,0x74,0x68,0x21,0x21,0xD,0xA
001947 3c00
001948 5445
001949 5f48
00194a 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00194b 6563
00194c 7669
00194d 3e65
00194e 6320      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x63
00194f 6568
001950 6b63
001951 7573
001952 206d      	.DB  0x68,0x65,0x63,0x6B,0x73,0x75,0x6D,0x20
001953 7265
001954 6f72
001955 0d72
001956 000a      	.DB  0x65,0x72,0x72,0x6F,0x72,0xD,0xA,0x0
001957 453c
001958 4854
001959 735f
00195a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00195b 3e64
00195c 5720
00195d 5241
00195e 494e      	.DB  0x64,0x3E,0x20,0x57,0x41,0x52,0x4E,0x49
00195f 474e
001960 3a20
001961 5020
001962 6361      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x50,0x61,0x63
001963 656b
001964 2074
001965 7369
001966 7420      	.DB  0x6B,0x65,0x74,0x20,0x69,0x73,0x20,0x74
001967 6f6f
001968 6c20
001969 6e6f
00196a 2867      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x28
00196b 6425
00196c 6220
00196d 7479
00196e 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00196f 0d29
001970 000a
001971 453c
001972 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001973 735f
001974 6e65
001975 3e64
001976 5720      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20,0x57
001977 5241
001978 494e
001979 474e
00197a 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
00197b 4520
00197c 4854
00197d 735f
00197e 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00197f 2064
001980 616d
001981 6c6c
001982 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001983 6620
001984 6961
001985 656c
001986 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
001987 2528
001988 2964
001989 0a0d
00198a 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
00198b 5445
00198c 5f48
00198d 6573
00198e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00198f 203e
001990 5445
001991 5f48
001992 6461      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x61,0x64
001993 5764
001994 6961
001995 5174
001996 6575      	.DB  0x64,0x57,0x61,0x69,0x74,0x51,0x75,0x65
001997 6575
001998 2928
001999 6620
00199a 6961      	.DB  0x75,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00199b 656c
00199c 2064
00199d 695b
00199e 3a64      	.DB  0x6C,0x65,0x64,0x20,0x5B,0x69,0x64,0x3A
00199f 7830
0019a0 3025
0019a1 5832
0019a2 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0019a3 000a
0019a4 453c
0019a5 4854
0019a6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
0019a7 6977
0019a8 6374
0019a9 4d68
0019aa 646f      	.DB  0x77,0x69,0x74,0x63,0x68,0x4D,0x6F,0x64
0019ab 3e65
0019ac 7320
0019ad 6977
0019ae 6374      	.DB  0x65,0x3E,0x20,0x73,0x77,0x69,0x74,0x63
0019af 2068
0019b0 6f74
0019b1 4320
0019b2 6e6f      	.DB  0x68,0x20,0x74,0x6F,0x20,0x43,0x6F,0x6E
0019b3 6966
0019b4 2067
0019b5 6f6d
0019b6 6564      	.DB  0x66,0x69,0x67,0x20,0x6D,0x6F,0x64,0x65
0019b7 0a0d
0019b8 3c00
0019b9 5445
0019ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0019bb 7773
0019bc 7469
0019bd 6863
0019be 6f4d      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x4D,0x6F
0019bf 6564
0019c0 203e
0019c1 7773
0019c2 7469      	.DB  0x64,0x65,0x3E,0x20,0x73,0x77,0x69,0x74
0019c3 6863
0019c4 7420
0019c5 206f
0019c6 6f4e      	.DB  0x63,0x68,0x20,0x74,0x6F,0x20,0x4E,0x6F
0019c7 6d72
0019c8 6c61
0019c9 6d20
0019ca 646f      	.DB  0x72,0x6D,0x61,0x6C,0x20,0x6D,0x6F,0x64
0019cb 0d65
0019cc 000a
0019cd 453c
0019ce 4854      	.DB  0x65,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0019cf 675f
0019d0 7465
0019d1 6f43
0019d2 666e      	.DB  0x5F,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
0019d3 6769
0019d4 203e
0019d5 7257
0019d6 7469      	.DB  0x69,0x67,0x3E,0x20,0x57,0x72,0x69,0x74
0019d7 2065
0019d8 6f74
0019d9 7520
0019da 7261      	.DB  0x65,0x20,0x74,0x6F,0x20,0x75,0x61,0x72
0019db 2074
0019dc 2030
0019dd 003a
0019de 453c      	.DB  0x74,0x20,0x30,0x20,0x3A,0x0,0x3C,0x45
0019df 4854
0019e0 735f
0019e1 7465
0019e2 6f43      	.DB  0x54,0x48,0x5F,0x73,0x65,0x74,0x43,0x6F
0019e3 666e
0019e4 6769
0019e5 203e
0019e6 616d      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D,0x61
0019e7 6c6c
0019e8 636f
0019e9 4328
0019ea 4e4f      	.DB  0x6C,0x6C,0x6F,0x63,0x28,0x43,0x4F,0x4E
0019eb 5f46
0019ec 4552
0019ed 4441
0019ee 425f      	.DB  0x46,0x5F,0x52,0x45,0x41,0x44,0x5F,0x42
0019ef 4655
0019f0 4546
0019f1 2952
0019f2 6620      	.DB  0x55,0x46,0x46,0x45,0x52,0x29,0x20,0x66
0019f3 6961
0019f4 656c
0019f5 0d64
0019f6 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0019f7 453c
0019f8 4854
0019f9 735f
0019fa 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
0019fb 6f43
0019fc 666e
0019fd 6769
0019fe 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0019ff 7257
001a00 7469
001a01 2065
001a02 6f74      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x74,0x6F
001a03 7520
001a04 7261
001a05 2074
001a06 2030      	.DB  0x20,0x75,0x61,0x72,0x74,0x20,0x30,0x20
001a07 003a
001a08 453c
001a09 4854
001a0a 735f      	.DB  0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a0b 7465
001a0c 6f43
001a0d 666e
001a0e 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a0f 203e
001a10 6572
001a11 6461
001a12 6320      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x63
001a13 6e6f
001a14 6966
001a15 2067
001a16 7266      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x20,0x66,0x72
001a17 6d6f
001a18 4520
001a19 4854
001a1a 6d20      	.DB  0x6F,0x6D,0x20,0x45,0x54,0x48,0x20,0x6D
001a1b 646f
001a1c 6c75
001a1d 2065
001a1e 6166      	.DB  0x6F,0x64,0x75,0x6C,0x65,0x20,0x66,0x61
001a1f 6c69
001a20 6465
001a21 0a0d
001a22 2500      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x25
001a23 3230
001a24 2558
001a25 3230
001a26 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a27 3230
001a28 2558
001a29 3230
001a2a 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2b 3230
001a2c 2558
001a2d 3230
001a2e 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2f 3230
001a30 2558
001a31 3230
001a32 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a33 3230
001a34 2558
001a35 3230
001a36 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a37 3230
001a38 2558
001a39 3230
001a3a 0058      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x0
001a3b 453c
001a3c 4854
001a3d 735f
001a3e 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
001a3f 6f43
001a40 666e
001a41 6769
001a42 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
001a43 6553
001a44 2074
001a45 7453
001a46 6972      	.DB  0x53,0x65,0x74,0x20,0x53,0x74,0x72,0x69
001a47 676e
001a48 5b20
001a49 7325
001a4a 0d5d      	.DB  0x6E,0x67,0x20,0x5B,0x25,0x73,0x5D,0xD
001a4b 000a
001a4c 453c
001a4d 4854
001a4e 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a4f 7465
001a50 6f43
001a51 666e
001a52 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a53 203e
001a54 6553
001a55 7474
001a56 6e69      	.DB  0x3E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E
001a57 2067
001a58 736d
001a59 2067
001a5a 2d2d      	.DB  0x67,0x20,0x6D,0x73,0x67,0x20,0x2D,0x2D
001a5b 0d2d
001a5c 000a
001a5d 0a0d
001a5e 2d2d      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001a5f 0d2d
001a60 000a
001a61 453c
001a62 4854      	.DB  0x2D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001a63 725f
001a64 7365
001a65 7465
001a66 203e      	.DB  0x5F,0x72,0x65,0x73,0x65,0x74,0x3E,0x20
001a67 6552
001a68 6573
001a69 7474
001a6a 6e69      	.DB  0x52,0x65,0x73,0x65,0x74,0x74,0x69,0x6E
001a6b 2067
001a6c 7445
001a6d 6568
001a6e 6e72      	.DB  0x67,0x20,0x45,0x74,0x68,0x65,0x72,0x6E
001a6f 7465
001a70 4d20
001a71 646f
001a72 6c75      	.DB  0x65,0x74,0x20,0x4D,0x6F,0x64,0x75,0x6C
001a73 2c65
001a74 7020
001a75 656c
001a76 7361      	.DB  0x65,0x2C,0x20,0x70,0x6C,0x65,0x61,0x73
001a77 2065
001a78 6177
001a79 7469
001a7a 002e      	.DB  0x65,0x20,0x77,0x61,0x69,0x74,0x2E,0x0
001a7b 2e2e
001a7c 442e
001a7d 6e6f
001a7e 0d65      	.DB  0x2E,0x2E,0x2E,0x44,0x6F,0x6E,0x65,0xD
001a7f 000a      	.DB  0xA,0x0
                 _0x140000:
001a80 733c
001a81 6174
001a82 7574
001a83 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a84 7165
001a85 6575
001a86 7473
001a87 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a88 7372
001a89 7265
001a8a 203e
001a8b 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a8c 6c6c
001a8d 636f
001a8e 6620
001a8f 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a90 656c
001a91 0d64
001a92 000a
001a93 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a94 6e6f
001a95 6966
001a96 4d67
001a97 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a98 6761
001a99 5065
001a9a 7261
001a9b 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a9c 3e72
001a9d 0a0d
001a9e 3c00
001a9f 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001aa0 666e
001aa1 6769
001aa2 614d
001aa3 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001aa4 6567
001aa5 6150
001aa6 7372
001aa7 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001aa8 203e
001aa9 4552
001aaa 4441
001aab 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001aac 0d47
001aad 000a
001aae 633c
001aaf 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ab0 6966
001ab1 4d67
001ab2 6e61
001ab3 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001ab4 5065
001ab5 7261
001ab6 6573
001ab7 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001ab8 5720
001ab9 4952
001aba 4954
001abb 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001abc 0a0d
001abd 3c00
001abe 6f63
001abf 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ac0 6769
001ac1 614d
001ac2 616e
001ac3 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001ac4 6150
001ac5 7372
001ac6 7265
001ac7 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001ac8 6f63
001ac9 666e
001aca 654c
001acb 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001acc 203d
001acd 6425
001ace 0a0d
001acf 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001ad0 6f63
001ad1 666e
001ad2 6769
001ad3 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001ad4 616e
001ad5 6567
001ad6 6150
001ad7 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001ad8 7265
001ad9 203e
001ada 616d
001adb 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001adc 636f
001add 6620
001ade 6961
001adf 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001ae0 0d64
001ae1 000a
001ae2 6e3c
001ae3 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ae4 6f77
001ae5 6b72
001ae6 614d
001ae7 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ae8 6574
001ae9 616e
001aea 636e
001aeb 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001aec 7261
001aed 6573
001aee 3e72
001aef 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001af0 6c61
001af1 6f6c
001af2 2063
001af3 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001af4 6c69
001af5 6465
001af6 2820
001af7 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001af8 0d29
001af9 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001afa 673c
001afb 7465
001afc 6f43
001afd 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001afe 6769
001aff 654c
001b00 3e6e
001b01 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001b02 6b6e
001b03 6f6e
001b04 6e77
001b05 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001b06 6e6f
001b07 6966
001b08 7567
001b09 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001b0a 6974
001b0b 6e6f
001b0c 7420
001b0d 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001b0e 2065
001b0f 305b
001b10 2578
001b11 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001b12 5d58
001b13 0a0d
001b14 3c00
001b15 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001b16 666e
001b17 6769
001b18 6552
001b19 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b1a 203e
001b1b 4f43
001b1c 464e
001b1d 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001b1e 4f52
001b1f 4550
001b20 5452
001b21 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001b22 2053
001b23 616d
001b24 6c6c
001b25 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001b26 2031
001b27 6166
001b28 6c69
001b29 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001b2a 2820
001b2b 6425
001b2c 6220
001b2d 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001b2e 7365
001b2f 0d29
001b30 000a
001b31 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b32 6e6f
001b33 6966
001b34 5267
001b35 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b36 3e64
001b37 6720
001b38 7465
001b39 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b3a 706f
001b3b 7265
001b3c 6974
001b3d 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b3e 6f43
001b3f 666e
001b40 6769
001b41 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b42 6620
001b43 6961
001b44 656c
001b45 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b46 000a
001b47 0a0d
001b48 2d2d
001b49 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b4a 4552
001b4b 4441
001b4c 4320
001b4d 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b4e 5f46
001b4f 5250
001b50 504f
001b51 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b52 4954
001b53 5345
001b54 2d20
001b55 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b56 0a0d
001b57 2500
001b58 0d73
001b59 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b5a 6425
001b5b 0a0d
001b5c 3c00
001b5d 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b5e 666e
001b5f 6769
001b60 6552
001b61 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b62 203e
001b63 4f43
001b64 464e
001b65 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b66 4550
001b67 4152
001b68 4554
001b69 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b6a 6c61
001b6b 6f6c
001b6c 3163
001b6d 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b6e 6961
001b6f 656c
001b70 2064
001b71 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b72 2064
001b73 7962
001b74 6574
001b75 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b76 0a0d
001b77 3c00
001b78 6f63
001b79 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b7a 6769
001b7b 6552
001b7c 6461
001b7d 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b7e 6567
001b7f 4f74
001b80 6570
001b81 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b82 6974
001b83 676e
001b84 6f43
001b85 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b86 6769
001b87 2928
001b88 6620
001b89 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b8a 656c
001b8b 0d64
001b8c 000a
001b8d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b8e 2d2d
001b8f 202d
001b90 4552
001b91 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b92 4320
001b93 4e4f
001b94 5f46
001b95 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b96 5245
001b97 5441
001b98 2045
001b99 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b9a 0d2d
001b9b 000a
001b9c 6f6d
001b9d 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b9e 2020
001b9f 2020
001ba0 2020
001ba1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001ba2 2020
001ba3 2020
001ba4 305b
001ba5 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001ba6 3230
001ba7 5d58
001ba8 0a0d
001ba9 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001baa 7665
001bab 6369
001bac 4565
001bad 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001bae 6c62
001baf 2065
001bb0 2020
001bb1 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001bb2 7830
001bb3 3025
001bb4 5832
001bb5 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001bb6 000a
001bb7 6c61
001bb8 7261
001bb9 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001bba 616e
001bbb 6c62
001bbc 2065
001bbd 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001bbe 2020
001bbf 305b
001bc0 2578
001bc1 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001bc2 5d58
001bc3 0a0d
001bc4 7300
001bc5 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001bc6 6f73
001bc7 4572
001bc8 616e
001bc9 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001bca 2065
001bcb 2020
001bcc 0020
001bcd 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001bce 2578
001bcf 3230
001bd0 5d58
001bd1 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001bd2 6f63
001bd3 666e
001bd4 6769
001bd5 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001bd6 6461
001bd7 203e
001bd8 4f43
001bd9 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001bda 535f
001bdb 4e45
001bdc 4f53
001bdd 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bde 616d
001bdf 6c6c
001be0 636f
001be1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001be2 6166
001be3 6c69
001be4 6465
001be5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001be6 6425
001be7 6220
001be8 7479
001be9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bea 0d29
001beb 000a
001bec 633c
001bed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bee 6966
001bef 5267
001bf0 6165
001bf1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bf2 6720
001bf3 7465
001bf4 6553
001bf5 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001bf6 726f
001bf7 6f43
001bf8 666e
001bf9 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001bfa 2928
001bfb 6620
001bfc 6961
001bfd 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001bfe 0d64
001bff 000a
001c00 0a0d
001c01 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001c02 202d
001c03 4552
001c04 4441
001c05 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001c06 4e4f
001c07 5f46
001c08 4553
001c09 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001c0a 524f
001c0b 5b20
001c0c 6425
001c0d 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001c0e 2d2d
001c0f 0a0d
001c10 7300
001c11 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001c12 6c70
001c13 6e69
001c14 5267
001c15 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001c16 2065
001c17 2020
001c18 5b20
001c19 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c1a 0d5d
001c1b 000a
001c1c 6572
001c1d 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001c1e 7563
001c1f 7272
001c20 6e65
001c21 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001c22 2020
001c23 2020
001c24 305b
001c25 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c26 3430
001c27 5d58
001c28 0a0d
001c29 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001c2a 6d69
001c2b 5365
001c2c 6174
001c2d 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001c2e 6f48
001c2f 7275
001c30 2020
001c31 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c32 6425
001c33 0d5d
001c34 000a
001c35 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c36 656d
001c37 7453
001c38 7261
001c39 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c3a 6e69
001c3b 2020
001c3c 2020
001c3d 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c3e 5d64
001c3f 0a0d
001c40 7400
001c41 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c42 5365
001c43 6f74
001c44 4870
001c45 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c46 2072
001c47 2020
001c48 5b20
001c49 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c4a 0d5d
001c4b 000a
001c4c 6974
001c4d 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c4e 7453
001c4f 706f
001c50 694d
001c51 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c52 2020
001c53 2020
001c54 255b
001c55 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c56 0a0d
001c57 6c00
001c58 776f
001c59 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c5a 694c
001c5b 696d
001c5c 2074
001c5d 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c5e 2020
001c5f 5b20
001c60 6625
001c61 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c62 000a
001c63 6f6c
001c64 6577
001c65 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c66 6c65
001c67 7961
001c68 2020
001c69 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c6a 2020
001c6b 255b
001c6c 5d64
001c6d 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c6e 6c00
001c6f 776f
001c70 7265
001c71 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c72 7274
001c73 6d65
001c74 2065
001c75 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c76 5b20
001c77 6625
001c78 0d5d
001c79 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c7a 7075
001c7b 6570
001c7c 4c72
001c7d 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c7e 7469
001c7f 2020
001c80 2020
001c81 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c82 255b
001c83 5d66
001c84 0a0d
001c85 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c86 7070
001c87 7265
001c88 6544
001c89 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c8a 2079
001c8b 2020
001c8c 2020
001c8d 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c8e 6425
001c8f 0d5d
001c90 000a
001c91 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c92 6570
001c93 4572
001c94 7478
001c95 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c96 656d
001c97 2020
001c98 2020
001c99 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c9a 5d66
001c9b 0a0d
001c9c 3c00
001c9d 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c9e 666e
001c9f 6769
001ca0 6552
001ca1 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ca2 203e
001ca3 4f43
001ca4 464e
001ca5 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ca6 5855
001ca7 4944
001ca8 6d20
001ca9 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001caa 6f6c
001cab 3163
001cac 6620
001cad 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cae 656c
001caf 2064
001cb0 2528
001cb1 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cb2 7962
001cb3 6574
001cb4 2973
001cb5 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cb6 3c00
001cb7 6f63
001cb8 666e
001cb9 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001cba 6552
001cbb 6461
001cbc 203e
001cbd 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001cbe 4174
001cbf 7875
001cc0 6944
001cc1 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001cc2 6e6f
001cc3 6966
001cc4 2867
001cc5 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001cc6 6166
001cc7 6c69
001cc8 6465
001cc9 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001cca 0d00
001ccb 2d0a
001ccc 2d2d
001ccd 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001cce 4145
001ccf 2044
001cd0 4f43
001cd1 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001cd2 415f
001cd3 5855
001cd4 4944
001cd5 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001cd6 6425
001cd7 2d5d
001cd8 2d2d
001cd9 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001cda 6300
001cdb 6168
001cdc 6e6e
001cdd 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cde 6e45
001cdf 6261
001ce0 656c
001ce1 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001ce2 2020
001ce3 305b
001ce4 2578
001ce5 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001ce6 5d58
001ce7 0a0d
001ce8 6100
001ce9 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cea 6d72
001ceb 6544
001cec 616c
001ced 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cee 2020
001cef 2020
001cf0 2020
001cf1 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cf2 5d64
001cf3 0a0d
001cf4 3c00
001cf5 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001cf6 666e
001cf7 6769
001cf8 6552
001cf9 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001cfa 203e
001cfb 4f43
001cfc 464e
001cfd 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001cfe 5855
001cff 4f44
001d00 6d20
001d01 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001d02 6f6c
001d03 3163
001d04 6620
001d05 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001d06 656c
001d07 2064
001d08 2528
001d09 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001d0a 7962
001d0b 6574
001d0c 2973
001d0d 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001d0e 3c00
001d0f 6f63
001d10 666e
001d11 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001d12 6552
001d13 6461
001d14 203e
001d15 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001d16 4174
001d17 7875
001d18 6f44
001d19 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001d1a 6f43
001d1b 666e
001d1c 6769
001d1d 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001d1e 6620
001d1f 6961
001d20 656c
001d21 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001d22 000a
001d23 0a0d
001d24 2d2d
001d25 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001d26 4552
001d27 4441
001d28 4320
001d29 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001d2a 5f46
001d2b 5541
001d2c 4458
001d2d 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001d2e 255b
001d2f 5d64
001d30 2d2d
001d31 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d32 000a
001d33 6863
001d34 6e61
001d35 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d36 456c
001d37 616e
001d38 6c62
001d39 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d3a 2020
001d3b 2020
001d3c 305b
001d3d 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d3e 3230
001d3f 5d58
001d40 0a0d
001d41 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d42 6174
001d43 6574
001d44 6e4f
001d45 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d46 6e65
001d47 2074
001d48 2020
001d49 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d4a 5b20
001d4b 6425
001d4c 0d5d
001d4d 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d4e 7665
001d4f 6e65
001d50 5374
001d51 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d52 6372
001d53 4e65
001d54 6d75
001d55 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d56 2072
001d57 255b
001d58 5d64
001d59 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d5a 6500
001d5b 6576
001d5c 746e
001d5d 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d5e 7275
001d5f 6563
001d60 2020
001d61 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d62 2020
001d63 0020
001d64 633c
001d65 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d66 6966
001d67 5267
001d68 6165
001d69 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d6a 4320
001d6b 4e4f
001d6c 5f46
001d6d 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d6e 4158
001d6f 2049
001d70 616d
001d71 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d72 636f
001d73 2031
001d74 6166
001d75 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d76 6465
001d77 2820
001d78 6425
001d79 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d7a 7479
001d7b 7365
001d7c 0d29
001d7d 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d7e 633c
001d7f 6e6f
001d80 6966
001d81 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d82 6165
001d83 3e64
001d84 6720
001d85 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d86 7541
001d87 4178
001d88 6e69
001d89 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d8a 666e
001d8b 6769
001d8c 2928
001d8d 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d8e 6961
001d8f 656c
001d90 0d64
001d91 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d92 0a0d
001d93 2d2d
001d94 202d
001d95 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d96 4441
001d97 4320
001d98 4e4f
001d99 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d9a 5541
001d9b 4158
001d9c 2049
001d9d 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d9e 5d64
001d9f 2d2d
001da0 0d2d
001da1 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001da2 6c61
001da3 7261
001da4 446d
001da5 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001da6 7961
001da7 2020
001da8 2020
001da9 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001daa 5b20
001dab 6625
001dac 0d5d
001dad 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001dae 633c
001daf 6e6f
001db0 6966
001db1 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001db2 6165
001db3 3e64
001db4 4320
001db5 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001db6 5f46
001db7 5541
001db8 4158
001db9 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001dba 616d
001dbb 6c6c
001dbc 636f
001dbd 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001dbe 6166
001dbf 6c69
001dc0 6465
001dc1 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001dc2 6425
001dc3 6220
001dc4 7479
001dc5 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001dc6 0d29
001dc7 000a
001dc8 633c
001dc9 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001dca 6966
001dcb 5267
001dcc 6165
001dcd 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001dce 6720
001dcf 7465
001dd0 7541
001dd1 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001dd2 756f
001dd3 4374
001dd4 6e6f
001dd5 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001dd6 2867
001dd7 2029
001dd8 6166
001dd9 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001dda 6465
001ddb 0a0d
001ddc 0d00
001ddd 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dde 2d2d
001ddf 5220
001de0 4145
001de1 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001de2 4f43
001de3 464e
001de4 415f
001de5 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001de6 4f41
001de7 5b20
001de8 6425
001de9 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dea 2d2d
001deb 0a0d
001dec 6c00
001ded 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dee 6c65
001def 6e4f
001df0 7645
001df1 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001df2 2074
001df3 2020
001df4 2020
001df5 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001df6 6625
001df7 0d5d
001df8 000a
001df9 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001dfa 6e6f
001dfb 6966
001dfc 5267
001dfd 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001dfe 3e64
001dff 4320
001e00 4e4f
001e01 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001e02 5542
001e03 5a5a
001e04 5245
001e05 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001e06 6c61
001e07 6f6c
001e08 3163
001e09 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001e0a 6961
001e0b 656c
001e0c 2064
001e0d 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001e0e 2064
001e0f 7962
001e10 6574
001e11 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001e12 0a0d
001e13 3c00
001e14 6f63
001e15 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001e16 6769
001e17 6552
001e18 6461
001e19 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001e1a 6567
001e1b 4274
001e1c 7a75
001e1d 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001e1e 4372
001e1f 6e6f
001e20 6966
001e21 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001e22 2029
001e23 6166
001e24 6c69
001e25 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001e26 0a0d
001e27 0d00
001e28 2d0a
001e29 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001e2a 5220
001e2b 4145
001e2c 2044
001e2d 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001e2e 464e
001e2f 425f
001e30 5a55
001e31 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e32 2052
001e33 2d2d
001e34 0d2d
001e35 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e36 6e65
001e37 6261
001e38 656c
001e39 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e3a 2020
001e3b 2020
001e3c 2020
001e3d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e3e 2020
001e3f 305b
001e40 2578
001e41 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e42 5d58
001e43 0a0d
001e44 3c00
001e45 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e46 666e
001e47 6769
001e48 6552
001e49 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e4a 203e
001e4b 4f43
001e4c 464e
001e4d 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e4e 564e
001e4f 4c41
001e50 5241
001e51 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e52 616d
001e53 6c6c
001e54 636f
001e55 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e56 6166
001e57 6c69
001e58 6465
001e59 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e5a 6425
001e5b 6220
001e5c 7479
001e5d 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e5e 0d29
001e5f 000a
001e60 633c
001e61 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e62 6966
001e63 5267
001e64 6165
001e65 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e66 6720
001e67 7465
001e68 6e45
001e69 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e6a 616c
001e6b 6d72
001e6c 6f43
001e6d 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e6e 6769
001e6f 2928
001e70 6620
001e71 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e72 656c
001e73 0d64
001e74 000a
001e75 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e76 2d2d
001e77 202d
001e78 4552
001e79 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e7a 4320
001e7b 4e4f
001e7c 5f46
001e7d 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e7e 4156
001e7f 414c
001e80 4d52
001e81 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e82 2d2d
001e83 0a0d
001e84 6700
001e85 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e86 5352
001e87 4953
001e88 654c
001e89 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e8a 206c
001e8b 2020
001e8c 2020
001e8d 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e8e 6625
001e8f 0d5d
001e90 000a
001e91 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e92 436d
001e93 6572
001e94 6964
001e95 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e96 6c61
001e97 6e61
001e98 6563
001e99 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e9a 255b
001e9b 5d64
001e9c 0a0d
001e9d 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e9e 7461
001e9f 6574
001ea0 7972
001ea1 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001ea2 6576
001ea3 206c
001ea4 2020
001ea5 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001ea6 5b20
001ea7 6625
001ea8 0d5d
001ea9 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001eaa 6f63
001eab 6d6d
001eac 6953
001ead 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001eae 6c61
001eaf 654c
001eb0 6576
001eb1 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001eb2 2020
001eb3 255b
001eb4 5d66
001eb5 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001eb6 6300
001eb7 6d6f
001eb8 4c6d
001eb9 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001eba 4474
001ebb 6c65
001ebc 7961
001ebd 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001ebe 2020
001ebf 5b20
001ec0 6425
001ec1 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001ec2 000a
001ec3 656d
001ec4 6f6d
001ec5 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001ec6 694d
001ec7 206e
001ec8 2020
001ec9 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001eca 2020
001ecb 2020
001ecc 255b
001ecd 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001ece 0a0d
001ecf 3c00
001ed0 6f63
001ed1 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ed2 6769
001ed3 6552
001ed4 6461
001ed5 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ed6 4f43
001ed7 464e
001ed8 535f
001ed9 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001eda 5254
001edb 5045
001edc 524f
001edd 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001ede 616d
001edf 6c6c
001ee0 636f
001ee1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ee2 6166
001ee3 6c69
001ee4 6465
001ee5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ee6 6425
001ee7 6220
001ee8 7479
001ee9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001eea 0d29
001eeb 000a
001eec 633c
001eed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001eee 6966
001eef 5267
001ef0 6165
001ef1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001ef2 6720
001ef3 7465
001ef4 7453
001ef5 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ef6 7375
001ef7 6552
001ef8 6f70
001ef9 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001efa 6f43
001efb 666e
001efc 6769
001efd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001efe 6620
001eff 6961
001f00 656c
001f01 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001f02 000a
001f03 0a0d
001f04 2d2d
001f05 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f06 4552
001f07 4441
001f08 4320
001f09 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001f0a 5f46
001f0b 5453
001f0c 5441
001f0d 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001f0e 4f50
001f0f 5452
001f10 2d20
001f11 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001f12 0a0d
001f13 6100
001f14 6363
001f15 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001f16 2020
001f17 2020
001f18 5b20
001f19 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001f1a 3025
001f1b 5832
001f1c 0d5d
001f1d 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001f1e 6e69
001f1f 7674
001f20 2020
001f21 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001f22 2020
001f23 255b
001f24 5d64
001f25 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001f26 3c00
001f27 6f63
001f28 666e
001f29 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f2a 6552
001f2b 6461
001f2c 203e
001f2d 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001f2e 6e6b
001f2f 776f
001f30 206e
001f31 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f32 666e
001f33 6769
001f34 7275
001f35 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f36 6f69
001f37 206e
001f38 7974
001f39 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f3a 5b20
001f3b 7830
001f3c 3025
001f3d 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f3e 0d5d
001f3f 000a
001f40 0a0d
001f41 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f42 2d2d
001f43 5720
001f44 4952
001f45 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f46 4320
001f47 4e4f
001f48 4946
001f49 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f4a 6170
001f4b 6b63
001f4c 7465
001f4d 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f4e 6425
001f4f 2d29
001f50 2d2d
001f51 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f52 000a
001f53 0a0d
001f54 2d2d
001f55 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f56 7257
001f57 7469
001f58 2065
001f59 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f5a 464e
001f5b 505f
001f5c 4f52
001f5d 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f5e 5452
001f5f 4549
001f60 2053
001f61 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f62 002d
001f63 633c
001f64 6e6f
001f65 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f66 5767
001f67 6972
001f68 6574
001f69 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f6a 6573
001f6b 5074
001f6c 6f72
001f6d 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f6e 7472
001f6f 6569
001f70 4373
001f71 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f72 6966
001f73 2867
001f74 2029
001f75 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f76 6c69
001f77 6465
001f78 0a0d
001f79 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f7a 2d0a
001f7b 2d2d
001f7c 5720
001f7d 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f7e 6574
001f7f 4320
001f80 4e4f
001f81 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f82 504f
001f83 5245
001f84 5441
001f85 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f86 2d2d
001f87 002d
001f88 633c
001f89 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f8a 6966
001f8b 5767
001f8c 6972
001f8d 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f8e 203e
001f8f 6573
001f90 4f74
001f91 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f92 6172
001f93 6974
001f94 676e
001f95 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f96 666e
001f97 6769
001f98 2928
001f99 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f9a 6961
001f9b 656c
001f9c 0d64
001f9d 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f9e 0a0d
001f9f 2d2d
001fa0 202d
001fa1 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001fa2 7469
001fa3 2065
001fa4 4f43
001fa5 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001fa6 535f
001fa7 4e45
001fa8 4f53
001fa9 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001faa 2528
001fab 2964
001fac 2d20
001fad 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001fae 3c00
001faf 6f63
001fb0 666e
001fb1 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001fb2 7257
001fb3 7469
001fb4 3e65
001fb5 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001fb6 7465
001fb7 6553
001fb8 736e
001fb9 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001fba 6f43
001fbb 666e
001fbc 6769
001fbd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001fbe 6620
001fbf 6961
001fc0 656c
001fc1 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001fc2 000a
001fc3 0a0d
001fc4 2d2d
001fc5 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001fc6 7257
001fc7 7469
001fc8 2065
001fc9 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001fca 464e
001fcb 415f
001fcc 5855
001fcd 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001fce 2820
001fcf 6425
001fd0 2029
001fd1 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fd2 002d
001fd3 633c
001fd4 6e6f
001fd5 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fd6 5767
001fd7 6972
001fd8 6574
001fd9 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001fda 6573
001fdb 4174
001fdc 7875
001fdd 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fde 436e
001fdf 6e6f
001fe0 6966
001fe1 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fe2 2029
001fe3 6166
001fe4 6c69
001fe5 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fe6 0a0d
001fe7 0d00
001fe8 2d0a
001fe9 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fea 5720
001feb 6972
001fec 6574
001fed 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fee 4e4f
001fef 5f46
001ff0 5541
001ff1 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001ff2 204f
001ff3 2528
001ff4 2964
001ff5 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001ff6 2d2d
001ff7 3c00
001ff8 6f63
001ff9 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ffa 6769
001ffb 7257
001ffc 7469
001ffd 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001ffe 7320
001fff 7465
002000 7541
002001 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
002002 756f
002003 4374
002004 6e6f
002005 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
002006 2867
002007 2029
002008 6166
002009 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00200a 6465
00200b 0a0d
00200c 0d00
00200d 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00200e 2d2d
00200f 5720
002010 6972
002011 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
002012 4320
002013 4e4f
002014 5f46
002015 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
002016 4158
002017 2049
002018 2528
002019 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
00201a 2d20
00201b 2d2d
00201c 3c00
00201d 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
00201e 666e
00201f 6769
002020 7257
002021 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
002022 3e65
002023 7320
002024 7465
002025 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
002026 4178
002027 6e69
002028 6f43
002029 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
00202a 6769
00202b 2928
00202c 6620
00202d 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00202e 656c
00202f 0d64
002030 000a
002031 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002032 2d2d
002033 202d
002034 7257
002035 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002036 2065
002037 4f43
002038 464e
002039 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
00203a 5855
00203b 4f41
00203c 2820
00203d 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
00203e 2029
00203f 2d2d
002040 002d
002041 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002042 6e6f
002043 6966
002044 5767
002045 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002046 6574
002047 203e
002048 6573
002049 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
00204a 7875
00204b 6f41
00204c 7475
00204d 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
00204e 666e
00204f 6769
002050 2928
002051 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
002052 6961
002053 656c
002054 0d64
002055 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002056 0a0d
002057 2d2d
002058 202d
002059 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
00205a 7469
00205b 2065
00205c 4f43
00205d 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
00205e 425f
00205f 5a55
002060 455a
002061 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
002062 2d2d
002063 002d
002064 633c
002065 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002066 6966
002067 5767
002068 6972
002069 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
00206a 203e
00206b 6573
00206c 4274
00206d 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
00206e 657a
00206f 4372
002070 6e6f
002071 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
002072 2867
002073 2029
002074 6166
002075 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002076 6465
002077 0a0d
002078 0d00
002079 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00207a 2d2d
00207b 5720
00207c 6972
00207d 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
00207e 4320
00207f 4e4f
002080 5f46
002081 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
002082 4156
002083 414c
002084 4d52
002085 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002086 2d2d
002087 3c00
002088 6f63
002089 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
00208a 6769
00208b 7257
00208c 7469
00208d 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
00208e 7320
00208f 7465
002090 6e45
002091 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
002092 616c
002093 6d72
002094 6f43
002095 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002096 6769
002097 2928
002098 6620
002099 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00209a 656c
00209b 0d64
00209c 000a
00209d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00209e 2d2d
00209f 202d
0020a0 7257
0020a1 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
0020a2 2065
0020a3 4f43
0020a4 464e
0020a5 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
0020a6 4154
0020a7 5254
0020a8 5045
0020a9 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
0020aa 2054
0020ab 2d2d
0020ac 002d
0020ad 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
0020ae 6e6f
0020af 6966
0020b0 5767
0020b1 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
0020b2 6574
0020b3 203e
0020b4 6573
0020b5 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
0020b6 6174
0020b7 7574
0020b8 5273
0020b9 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0020ba 726f
0020bb 4374
0020bc 6e6f
0020bd 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
0020be 2867
0020bf 2029
0020c0 6166
0020c1 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0020c2 6465
0020c3 0a0d
0020c4 3c00
0020c5 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0020c6 4c74
0020c7 676f
0020c8 614d
0020c9 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0020ca 7570
0020cb 616c
0020cc 6574
0020cd 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
0020ce 6568
0020cf 616d
0020d0 203e
0020d1 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020d2 656d
0020d3 7020
0020d4 7265
0020d5 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020d6 2064
0020d7 7265
0020d8 6f72
0020d9 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020da 7473
0020db 7261
0020dc 5b74
0020dd 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020de 5d64
0020df 2d20
0020e0 7320
0020e1 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020e2 5b70
0020e3 6c25
0020e4 5d64
0020e5 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020e6 3c00
0020e7 6573
0020e8 5474
0020e9 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020ea 5365
0020eb 6e79
0020ec 5363
0020ed 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020ee 6d65
0020ef 3e61
0020f0 4720
0020f1 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020f2 3020
0020f3 5520
0020f4 696e
0020f5 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020f6 6974
0020f7 656d
0020f8 7320
0020f9 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020fa 706d
0020fb 0a0d
0020fc 3c00
0020fd 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020fe 5474
0020ff 6d69
002100 5365
002101 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
002102 5363
002103 6863
002104 6d65
002105 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
002106 5220
002107 6365
002108 6965
002109 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
00210a 2064
00210b 6974
00210c 656d
00210d 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
00210e 6e79
00210f 2e63
002110 7020
002111 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
002112 656b
002113 2074
002114 6c25
002115 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002116 000a
002117 733c
002118 7465
002119 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
00211a 656d
00211b 7953
00211c 636e
00211d 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
00211e 6568
00211f 616d
002120 203e
002121 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
002122 5f43
002123 6573
002124 4274
002125 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002126 7261
002127 2879
002128 6c25
002129 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
00212a 6620
00212b 6961
00212c 656c
00212d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00212e 000a
00212f 733c
002130 7465
002131 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
002132 6574
002133 6c41
002134 7261
002135 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002136 7020
002137 7265
002138 616d
002139 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
00213a 746e
00213b 6d20
00213c 7475
00213d 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
00213e 6c61
00213f 7261
002140 0d6d
002141 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
002142 733c
002143 7465
002144 754d
002145 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002146 6c41
002147 7261
002148 3e6d
002149 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
00214a 766e
00214b 6c61
00214c 6469
00214d 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
00214e 7265
00214f 6f69
002150 2064
002151 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
002152 646c
002153 0d29
002154 000a
002155 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002156 7465
002157 754d
002158 6574
002159 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
00215a 7261
00215b 3e6d
00215c 6d20
00215d 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
00215e 2065
00215f 6c61
002160 7261
002161 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
002162 6f66
002163 2072
002164 6c25
002165 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002166 6573
002167 6f63
002168 646e
002169 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
00216a 3c00
00216b 6573
00216c 4d74
00216d 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
00216e 4165
00216f 616c
002170 6d72
002171 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002172 4c41
002173 5241
002174 5f4d
002175 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002176 6574
002177 2528
002178 646c
002179 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
00217a 6166
00217b 6c69
00217c 6465
00217d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3357): warning: .cseg .db misalignment - padding zero byte
00217e 0000      	.DB  0x0
                 _0x18001D:
00217f 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3359): warning: .cseg .db misalignment - padding zero byte
002180 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
002181 0a0d
002182 0a0d
002183 453c
002184 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
002185 615f
002186 6464
002187 6157
002188 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002189 7551
00218a 7565
00218b 3e65
00218c 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
00218d 5241
00218e 494e
00218f 474e
002190 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
002191 5720
002192 6961
002193 2074
002194 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
002195 7565
002196 2065
002197 5546
002198 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002199 0a0d
00219a 0a0d
00219b 3c00
00219c 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
00219d 5f48
00219e 6461
00219f 5764
0021a0 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
0021a1 5174
0021a2 6575
0021a3 6575
0021a4 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
0021a5 616d
0021a6 6c6c
0021a7 636f
0021a8 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
0021a9 2964
0021aa 6620
0021ab 6961
0021ac 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0021ad 0d64
0021ae 000a
0021af 0a0d
0021b0 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
0021b1 2020
0021b2 2020
0021b3 2020
0021b4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b5 2020
0021b6 2020
0021b7 2020
0021b8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b9 2020
0021ba 2020
0021bb 2020
0021bc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021bd 2020
0021be 2020
0021bf 2020
0021c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c1 2020
0021c2 4120
0021c3 6464
0021c4 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0021c5 2820
0021c6 3025
0021c7 5832
0021c8 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0021c9 6f74
0021ca 6520
0021cb 6874
0021cc 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0021cd 6961
0021ce 5174
0021cf 6575
0021d0 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021d1 255b
0021d2 5d64
0021d3 0a0d
0021d4 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021d5 200a
0021d6 2020
0021d7 2020
0021d8 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021d9 2020
0021da 2020
0021db 2020
0021dc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021dd 2020
0021de 2020
0021df 2020
0021e0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e1 2020
0021e2 2020
0021e3 2020
0021e4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e5 2020
0021e6 2020
0021e7 2020
0021e8 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021e9 6f6d
0021ea 6576
0021eb 2064
0021ec 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021ed 3230
0021ee 2958
0021ef 7420
0021f0 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021f1 7465
0021f2 5f68
0021f3 6177
0021f4 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021f5 7551
0021f6 7565
0021f7 5b65
0021f8 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021f9 0d5d
0021fa 000a
0021fb 0a0d
0021fc 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021fd 4157
0021fe 4e52
0021ff 4e49
002200 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002201 203a
002202 5445
002203 5f48
002204 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
002205 6f6d
002206 6576
002207 6157
002208 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
002209 7551
00220a 7565
00220b 2865
00220c 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
00220d 5832
00220e 2029
00220f 6f6e
002210 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
002211 6f66
002212 6e75
002213 2164
002214 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
002215 0d0a
002216 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A001D:
002217 0000
002218 41a0
002219 0000
00221a 0000      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0x0,0x0
00221b 0000
00221c 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1A0021:
00221d ffff
00221e ffff
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3403): warning: .cseg .db misalignment - padding zero byte
00221f 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x1A0022:
002220 0000
002221 0000
002222 0000
002223 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002224 0000
002225 0000
002226 0000
002227 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002228 0000
002229 0000
00222a 0000
00222b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222c 0000
00222d 0000
00222e 0000
00222f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002230 0000
002231 0000
002232 0000
002233 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002234 0000
002235 0000
002236 0000
002237 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002238 0000
002239 0000
00223a 0000
00223b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00223c 0000
00223d 0000
00223e 0000
00223f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002240 0000
002241 0000
002242 6042
002243 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
002244 0000
002245 0000
002246 0000
002247 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002248 0000
002249 0000
00224a 0000
00224b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x1A00A6:
00224c 6042
00224d 3fd5
00224e 0000
00224f 0000      	.DB  0x42,0x60,0xD5,0x3F,0x0,0x0,0x0,0x0
002250 0000
002251 0000
002252 0000
002253 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002254 0000
002255 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1A0000:
002256 695b
002257 6553
002258 736e
002259 726f      	.DB  0x5B,0x69,0x53,0x65,0x6E,0x73,0x6F,0x72
00225a 6547
00225b 5674
00225c 6c61
00225d 6575      	.DB  0x47,0x65,0x74,0x56,0x61,0x6C,0x75,0x65
00225e 645d
00225f 7461
002260 5b61
002261 6300      	.DB  0x5D,0x64,0x61,0x74,0x61,0x5B,0x0,0x63
002262 2568
002263 3a64
002264 2520
002265 3430      	.DB  0x68,0x25,0x64,0x3A,0x20,0x25,0x30,0x34
002266 2064
002267 6300
002268 2568
002269 3a64      	.DB  0x64,0x20,0x0,0x63,0x68,0x25,0x64,0x3A
00226a 2520
00226b 3430
00226c 2c64
00226d 0020      	.DB  0x20,0x25,0x30,0x34,0x64,0x2C,0x20,0x0
00226e 0d5d
00226f 000a
002270 733c
002271 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002272 6f73
002273 5272
002274 6165
002275 3e64      	.DB  0x73,0x6F,0x72,0x52,0x65,0x61,0x64,0x3E
002276 4520
002277 5252
002278 203a
002279 6863      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x63,0x68
00227a 7620
00227b 6c61
00227c 6575
00227d 6f20      	.DB  0x20,0x76,0x61,0x6C,0x75,0x65,0x20,0x6F
00227e 7475
00227f 6f20
002280 2066
002281 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
002282 676e
002283 0d65
002284 000a
002285 6554      	.DB  0x6E,0x67,0x65,0xD,0xA,0x0,0x54,0x65
002286 706d
002287 6152
002288 2877
002289 6625      	.DB  0x6D,0x70,0x52,0x61,0x77,0x28,0x25,0x66
00228a 2c29
00228b 5420
00228c 6d65
00228d 5270      	.DB  0x29,0x2C,0x20,0x54,0x65,0x6D,0x70,0x52
00228e 6665
00228f 2528
002290 2966
002291 202c      	.DB  0x65,0x66,0x28,0x25,0x66,0x29,0x2C,0x20
002292 664f
002293 7366
002294 7465
002295 2528      	.DB  0x4F,0x66,0x66,0x73,0x65,0x74,0x28,0x25
002296 2966
002297 0a0d
002298 3c00
002299 6573      	.DB  0x66,0x29,0xD,0xA,0x0,0x3C,0x73,0x65
00229a 736e
00229b 726f
00229c 6143
00229d 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
00229e 7262
00229f 7461
0022a0 3165
0022a1 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x31,0x3E,0x20
0022a2 4241
0022a3 524f
0022a4 3a54
0022a5 7320      	.DB  0x41,0x42,0x4F,0x52,0x54,0x3A,0x20,0x73
0022a6 6e65
0022a7 6f73
0022a8 2072
0022a9 6863      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x20,0x63,0x68
0022aa 2520
0022ab 2064
0022ac 7369
0022ad 6420      	.DB  0x20,0x25,0x64,0x20,0x69,0x73,0x20,0x64
0022ae 7369
0022af 6261
0022b0 656c
0022b1 0a0d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0xD,0xA
0022b2 3c00
0022b3 6573
0022b4 736e
0022b5 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0022b6 6143
0022b7 696c
0022b8 7262
0022b9 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022ba 3165
0022bb 203e
0022bc 4241
0022bd 524f      	.DB  0x65,0x31,0x3E,0x20,0x41,0x42,0x4F,0x52
0022be 3a54
0022bf 7320
0022c0 6e65
0022c1 6f73      	.DB  0x54,0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F
0022c2 2072
0022c3 6863
0022c4 2520
0022c5 2064      	.DB  0x72,0x20,0x63,0x68,0x20,0x25,0x64,0x20
0022c6 7265
0022c7 6f72
0022c8 2872
0022c9 7830      	.DB  0x65,0x72,0x72,0x6F,0x72,0x28,0x30,0x78
0022ca 3025
0022cb 5832
0022cc 0d29
0022cd 000a      	.DB  0x25,0x30,0x32,0x58,0x29,0xD,0xA,0x0
0022ce 733c
0022cf 6e65
0022d0 6f73
0022d1 4372      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x43
0022d2 6c61
0022d3 6269
0022d4 6172
0022d5 6574      	.DB  0x61,0x6C,0x69,0x62,0x72,0x61,0x74,0x65
0022d6 3e32
0022d7 4120
0022d8 4f42
0022d9 5452      	.DB  0x32,0x3E,0x20,0x41,0x42,0x4F,0x52,0x54
0022da 203a
0022db 6573
0022dc 736e
0022dd 726f      	.DB  0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0022de 6320
0022df 2068
0022e0 6425
0022e1 4e20      	.DB  0x20,0x63,0x68,0x20,0x25,0x64,0x20,0x4E
0022e2 206f
0022e3 6573
0022e4 2074
0022e5 6f70      	.DB  0x6F,0x20,0x73,0x65,0x74,0x20,0x70,0x6F
0022e6 6e69
0022e7 2074
0022e8 6f66
0022e9 6e75      	.DB  0x69,0x6E,0x74,0x20,0x66,0x6F,0x75,0x6E
0022ea 0d64
0022eb 000a
0022ec 733c
0022ed 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0022ee 6f73
0022ef 4372
0022f0 6c61
0022f1 6269      	.DB  0x73,0x6F,0x72,0x43,0x61,0x6C,0x69,0x62
0022f2 6172
0022f3 6574
0022f4 3e32
0022f5 2d20      	.DB  0x72,0x61,0x74,0x65,0x32,0x3E,0x20,0x2D
0022f6 202d
0022f7 4143
0022f8 5f4c
0022f9 5845      	.DB  0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45,0x58
0022fa 4f54
0022fb 4646
0022fc 4553
0022fd 2054      	.DB  0x54,0x4F,0x46,0x46,0x53,0x45,0x54,0x20
0022fe 2d2d
0022ff 0a0d
002300 3c00
002301 6573      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73,0x65
002302 736e
002303 726f
002304 6143
002305 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
002306 7262
002307 7461
002308 3265
002309 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
00230a 2d2d
00230b 2d43
00230c 3e2d
00230d 2520      	.DB  0x2D,0x2D,0x43,0x2D,0x2D,0x3E,0x20,0x25
00230e 0d66
00230f 000a
002310 733c
002311 6e65      	.DB  0x66,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002312 6f73
002313 4372
002314 6c61
002315 6269      	.DB  0x73,0x6F,0x72,0x43,0x61,0x6C,0x69,0x62
002316 6172
002317 6574
002318 3e32
002319 2d20      	.DB  0x72,0x61,0x74,0x65,0x32,0x3E,0x20,0x2D
00231a 202d
00231b 4143
00231c 5f4c
00231d 5845      	.DB  0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45,0x58
00231e 4c54
00231f 4e49
002320 4145
002321 2052      	.DB  0x54,0x4C,0x49,0x4E,0x45,0x41,0x52,0x20
002322 2d2d
002323 0a0d
002324 3c00
002325 6573      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73,0x65
002326 736e
002327 726f
002328 6143
002329 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
00232a 7262
00232b 7461
00232c 3265
00232d 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
00232e 2d2d
00232f 2d42
002330 3e2d
002331 2520      	.DB  0x2D,0x2D,0x42,0x2D,0x2D,0x3E,0x20,0x25
002332 0d66
002333 000a
002334 733c
002335 6e65      	.DB  0x66,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002336 6f73
002337 4372
002338 6c61
002339 6269      	.DB  0x73,0x6F,0x72,0x43,0x61,0x6C,0x69,0x62
00233a 6172
00233b 6574
00233c 3e32
00233d 2d20      	.DB  0x72,0x61,0x74,0x65,0x32,0x3E,0x20,0x2D
00233e 202d
00233f 4143
002340 5f4c
002341 5845      	.DB  0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45,0x58
002342 5054
002343 4c4f
002344 4e59
002345 4d4f      	.DB  0x54,0x50,0x4F,0x4C,0x59,0x4E,0x4F,0x4D
002346 4149
002347 204c
002348 2d2d
002349 0a0d      	.DB  0x49,0x41,0x4C,0x20,0x2D,0x2D,0xD,0xA
00234a 3c00
00234b 6573
00234c 736e
00234d 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00234e 6143
00234f 696c
002350 7262
002351 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
002352 3265
002353 203e
002354 2d2d
002355 2d41      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x41,0x2D
002356 3e2d
002357 2520
002358 0d66
002359 000a      	.DB  0x2D,0x3E,0x20,0x25,0x66,0xD,0xA,0x0
00235a 733c
00235b 6e65
00235c 6f73
00235d 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
00235e 7465
00235f 7543
002360 7272
002361 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
002362 5374
002363 7465
002364 6f50
002365 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
002366 3e74
002367 7420
002368 6d65
002369 5270      	.DB  0x74,0x3E,0x20,0x74,0x65,0x6D,0x70,0x52
00236a 6665
00236b 2031
00236c 203d
00236d 255b      	.DB  0x65,0x66,0x31,0x20,0x3D,0x20,0x5B,0x25
00236e 5d66
00236f 255b
002370 5d66
002371 0a0d      	.DB  0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD,0xA
002372 3c00
002373 6573
002374 736e
002375 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002376 6547
002377 4374
002378 7275
002379 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
00237a 746e
00237b 6553
00237c 5074
00237d 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
00237e 746e
00237f 203e
002380 6574
002381 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
002382 6552
002383 3166
002384 6e20
002385 746f      	.DB  0x52,0x65,0x66,0x31,0x20,0x6E,0x6F,0x74
002386 7320
002387 7465
002388 5b20
002389 2e30      	.DB  0x20,0x73,0x65,0x74,0x20,0x5B,0x30,0x2E
00238a 3030
00238b 0d5d
00238c 000a
00238d 2e30      	.DB  0x30,0x30,0x5D,0xD,0xA,0x0,0x30,0x2E
00238e 3030
00238f 3c00
002390 6573
002391 736e      	.DB  0x30,0x30,0x0,0x3C,0x73,0x65,0x6E,0x73
002392 726f
002393 6547
002394 4374
002395 7275      	.DB  0x6F,0x72,0x47,0x65,0x74,0x43,0x75,0x72
002396 6572
002397 746e
002398 6553
002399 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
00239a 696f
00239b 746e
00239c 203e
00239d 6574      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74,0x65
00239e 706d
00239f 6552
0023a0 3266
0023a1 3d20      	.DB  0x6D,0x70,0x52,0x65,0x66,0x32,0x20,0x3D
0023a2 5b20
0023a3 6625
0023a4 5b5d
0023a5 6625      	.DB  0x20,0x5B,0x25,0x66,0x5D,0x5B,0x25,0x66
0023a6 0d5d
0023a7 000a
0023a8 733c
0023a9 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0023aa 6f73
0023ab 4772
0023ac 7465
0023ad 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
0023ae 7272
0023af 6e65
0023b0 5374
0023b1 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
0023b2 6f50
0023b3 6e69
0023b4 3e74
0023b5 7420      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74
0023b6 6d65
0023b7 5270
0023b8 6665
0023b9 2032      	.DB  0x65,0x6D,0x70,0x52,0x65,0x66,0x32,0x20
0023ba 6f6e
0023bb 2074
0023bc 6573
0023bd 2074      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x65,0x74,0x20
0023be 305b
0023bf 302e
0023c0 5d30
0023c1 0a0d      	.DB  0x5B,0x30,0x2E,0x30,0x30,0x5D,0xD,0xA
0023c2 3c00
0023c3 6573
0023c4 736e
0023c5 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0023c6 6547
0023c7 4374
0023c8 7275
0023c9 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
0023ca 746e
0023cb 6553
0023cc 5074
0023cd 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
0023ce 746e
0023cf 203e
0023d0 6574
0023d1 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
0023d2 6552
0023d3 3366
0023d4 3d20
0023d5 5b20      	.DB  0x52,0x65,0x66,0x33,0x20,0x3D,0x20,0x5B
0023d6 6625
0023d7 5b5d
0023d8 6625
0023d9 0d5d      	.DB  0x25,0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD
0023da 000a
0023db 733c
0023dc 6e65
0023dd 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0023de 4772
0023df 7465
0023e0 7543
0023e1 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
0023e2 6e65
0023e3 5374
0023e4 7465
0023e5 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
0023e6 6e69
0023e7 3e74
0023e8 7420
0023e9 6d65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D
0023ea 5270
0023eb 6665
0023ec 2033
0023ed 6f6e      	.DB  0x70,0x52,0x65,0x66,0x33,0x20,0x6E,0x6F
0023ee 2074
0023ef 6573
0023f0 2074
0023f1 305b      	.DB  0x74,0x20,0x73,0x65,0x74,0x20,0x5B,0x30
0023f2 302e
0023f3 5d30
0023f4 0a0d
0023f5 3c00      	.DB  0x2E,0x30,0x30,0x5D,0xD,0xA,0x0,0x3C
0023f6 6573
0023f7 736e
0023f8 726f
0023f9 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
0023fa 4374
0023fb 7275
0023fc 6572
0023fd 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
0023fe 6553
0023ff 5074
002400 696f
002401 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
002402 203e
002403 6e69
002404 6176
002405 696c      	.DB  0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
002406 2064
002407 6170
002408 6172
002409 746d      	.DB  0x64,0x20,0x70,0x61,0x72,0x61,0x6D,0x74
00240a 7265
00240b 7020
00240c 746e
00240d 3e2d      	.DB  0x65,0x72,0x20,0x70,0x6E,0x74,0x2D,0x3E
00240e 255b
00240f 5d64
002410 0a0d
002411 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002412 6573
002413 736e
002414 726f
002415 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
002416 4374
002417 7275
002418 6572
002419 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
00241a 6553
00241b 5074
00241c 696f
00241d 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
00241e 203e
00241f 6572
002420 6461
002421 7620      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x76
002422 6c61
002423 2528
002424 2964
002425 3d20      	.DB  0x61,0x6C,0x28,0x25,0x64,0x29,0x20,0x3D
002426 5b20
002427 7325
002428 0d5d
002429 000a      	.DB  0x20,0x5B,0x25,0x73,0x5D,0xD,0xA,0x0
00242a 733c
00242b 6e65
00242c 6f73
00242d 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
00242e 7465
00242f 7543
002430 7272
002431 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
002432 5374
002433 7465
002434 6f50
002435 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
002436 3e74
002437 6f20
002438 7475
002439 6f20      	.DB  0x74,0x3E,0x20,0x6F,0x75,0x74,0x20,0x6F
00243a 2066
00243b 6f63
00243c 646e
00243d 7469      	.DB  0x66,0x20,0x63,0x6F,0x6E,0x64,0x69,0x74
00243e 6f69
00243f 206e
002440 6176
002441 536c      	.DB  0x69,0x6F,0x6E,0x20,0x76,0x61,0x6C,0x53
002442 7274
002443 3d20
002444 2720
002445 7325      	.DB  0x74,0x72,0x20,0x3D,0x20,0x27,0x25,0x73
002446 0027
002447 733c
002448 6e65
002449 6f73      	.DB  0x27,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
00244a 4772
00244b 7465
00244c 7543
00244d 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
00244e 6e65
00244f 5374
002450 7465
002451 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
002452 6e69
002453 3e74
002454 6220
002455 6675      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x62,0x75,0x66
002456 7220
002457 6165
002458 0064
002459 255b      	.DB  0x20,0x72,0x65,0x61,0x64,0x0,0x5B,0x25
00245a 5d64
00245b 3c00
00245c 6573
00245d 736e      	.DB  0x64,0x5D,0x0,0x3C,0x73,0x65,0x6E,0x73
00245e 726f
00245f 6553
002460 4374
002461 7275      	.DB  0x6F,0x72,0x53,0x65,0x74,0x43,0x75,0x72
002462 6572
002463 746e
002464 6553
002465 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
002466 696f
002467 746e
002468 203e
002469 4241      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x41,0x42
00246a 524f
00246b 3a54
00246c 7320
00246d 6e65      	.DB  0x4F,0x52,0x54,0x3A,0x20,0x73,0x65,0x6E
00246e 6f73
00246f 2072
002470 6863
002471 2520      	.DB  0x73,0x6F,0x72,0x20,0x63,0x68,0x20,0x25
002472 2064
002473 7369
002474 6420
002475 7369      	.DB  0x64,0x20,0x69,0x73,0x20,0x64,0x69,0x73
002476 6261
002477 656c
002478 0a0d
002479 3c00      	.DB  0x61,0x62,0x6C,0x65,0xD,0xA,0x0,0x3C
00247a 6573
00247b 736e
00247c 726f
00247d 6553      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x53,0x65
00247e 4374
00247f 7275
002480 6572
002481 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
002482 6553
002483 5074
002484 696f
002485 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
002486 203e
002487 4241
002488 524f
002489 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
00248a 7320
00248b 6e65
00248c 6f73
00248d 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
00248e 6863
00248f 2520
002490 2064
002491 7265      	.DB  0x63,0x68,0x20,0x25,0x64,0x20,0x65,0x72
002492 6f72
002493 2872
002494 7830
002495 3025      	.DB  0x72,0x6F,0x72,0x28,0x30,0x78,0x25,0x30
002496 5832
002497 0d29
002498 000a
002499 733c      	.DB  0x32,0x58,0x29,0xD,0xA,0x0,0x3C,0x73
00249a 6e65
00249b 6f73
00249c 5372
00249d 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x53,0x65,0x74
00249e 7543
00249f 7272
0024a0 6e65
0024a1 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
0024a2 7465
0024a3 6f50
0024a4 6e69
0024a5 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
0024a6 6220
0024a7 6675
0024a8 203a
0024a9 255b      	.DB  0x20,0x62,0x75,0x66,0x3A,0x20,0x5B,0x25
0024aa 5d64
0024ab 5b2f
0024ac 6425
0024ad 5b5d      	.DB  0x64,0x5D,0x2F,0x5B,0x25,0x64,0x5D,0x5B
0024ae 6425
0024af 5b5d
0024b0 6425
0024b1 5b5d      	.DB  0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D,0x5B
0024b2 6425
0024b3 5b5d
0024b4 6425
0024b5 0d5d      	.DB  0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D,0xD
0024b6 000a
0024b7 733c
0024b8 6e65
0024b9 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0024ba 5372
0024bb 7465
0024bc 7543
0024bd 7272      	.DB  0x72,0x53,0x65,0x74,0x43,0x75,0x72,0x72
0024be 6e65
0024bf 5374
0024c0 7465
0024c1 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
0024c2 6e69
0024c3 3e74
0024c4 7320
0024c5 6e65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x73,0x65,0x6E
0024c6 6f73
0024c7 2072
0024c8 3125
0024c9 2c64      	.DB  0x73,0x6F,0x72,0x20,0x25,0x31,0x64,0x2C
0024ca 7020
0024cb 696f
0024cc 746e
0024cd 2520      	.DB  0x20,0x70,0x6F,0x69,0x6E,0x74,0x20,0x25
0024ce 6431
0024cf 202c
0024d0 6573
0024d1 2074      	.DB  0x31,0x64,0x2C,0x20,0x73,0x65,0x74,0x20
0024d2 6f74
0024d3 5b20
0024d4 6625
0024d5 005d      	.DB  0x74,0x6F,0x20,0x5B,0x25,0x66,0x5D,0x0
                 _0x1C0005:
0024d6 0000
0024d7 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
0024d8 ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
0024d9 ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3588): warning: .cseg .db misalignment - padding zero byte
0024da 00ff      	.DB  0xFF
                 _0x1E003A:
0024db ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
0024dc 753c
0024dd 6470
0024de 7461
0024df 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
0024e0 6d6f
0024e1 536d
0024e2 6174
0024e3 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
0024e4 3e73
0024e5 4c20
0024e6 736f
0024e7 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0024e8 6d69
0024e9 7265
0024ea 7420
0024eb 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0024ec 2065
0024ed 656c
0024ee 7466
0024ef 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0024f0 2520
0024f1 646c
0024f2 2528
0024f3 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0024f4 0d29
0024f5 000a
0024f6 753c
0024f7 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0024f8 7461
0024f9 4365
0024fa 6d6f
0024fb 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
0024fc 6174
0024fd 7574
0024fe 3e73
0024ff 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
002500 7265
002501 6576
002502 2072
002503 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
002504 6e77
002505 2121
002506 0d21
002507 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
002508 753c
002509 6470
00250a 7461
00250b 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
00250c 6d6f
00250d 536d
00250e 6174
00250f 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002510 3e73
002511 5320
002512 7265
002513 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
002514 2072
002515 7055
002516 2121
002517 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
002518 000a
002519 633c
00251a 6568
00251b 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
00251c 7250
00251d 626f
00251e 4165
00251f 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
002520 6d72
002521 203e
002522 6573
002523 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
002524 726f
002525 6320
002526 6168
002527 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
002528 6c65
002529 6f20
00252a 7475
00252b 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
00252c 2066
00252d 6172
00252e 676e
00252f 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
002530 2528
002531 2964
002532 0a0d
002533 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
002534 7075
002535 6164
002536 6574
002537 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
002538 6174
002539 7453
00253a 7461
00253b 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
00253c 203e
00253d 4241
00253e 524f
00253f 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
002540 7320
002541 6e65
002542 6f73
002543 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
002544 6863
002545 6e61
002546 656e
002547 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
002548 756f
002549 2074
00254a 666f
00254b 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
00254c 6e61
00254d 6567
00254e 2820
00254f 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
002550 0d29
002551 000a
002552 753c
002553 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
002554 7461
002555 4465
002556 6e69
002557 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
002558 7461
002559 7375
00255a 203e
00255b 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
00255c 6e61
00255d 656e
00255e 5b6c
00255f 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
002560 205d
002561 756f
002562 2074
002563 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
002564 7220
002565 6e61
002566 6567
002567 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
002568 3c00
002569 6567
00256a 4474
00256b 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
00256c 6369
00256d 5365
00256e 6174
00256f 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
002570 203e
002571 7473
002572 7461
002573 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
002574 203d
002575 305b
002576 2578
002577 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
002578 5d58
002579 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3631): warning: .cseg .db misalignment - padding zero byte
00257a 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
00257b ffff
00257c ffff
00257d ffff
00257e ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00257f ffff
002580 ffff
002581 ffff
002582 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
002583 ffff
002584 ffff
002585 ffff
002586 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002587 ffff
002588 ffff
002589 ffff
00258a ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3639): warning: .cseg .db misalignment - padding zero byte
00258b 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3641): warning: .cseg .db misalignment - padding zero byte
00258c 0069      	.DB  0x69
                 _0x2200C5:
00258d 6969      	.DB  0x69,0x69
                 _0x2200CF:
00258e 6969
00258f 6969
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3645): warning: .cseg .db misalignment - padding zero byte
002590 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
002591 ffff
002592 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3649): warning: .cseg .db misalignment - padding zero byte
002593 00ff      	.DB  0xFF
                 _0x220000:
002594 633c
002595 6568
002596 6b63
002597 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
002598 7261
002599 466d
00259a 6f72
00259b 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
00259c 6372
00259d 203e
00259e 5347
00259f 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
0025a0 6f4e
0025a1 2074
0025a2 7573
0025a3 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
0025a4 726f
0025a5 2074
0025a6 6579
0025a7 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
0025a8 305b
0025a9 2578
0025aa 3230
0025ab 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0025ac 0a0d
0025ad 3c00
0025ae 6863
0025af 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025b0 416b
0025b1 616c
0025b2 6d72
0025b3 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
0025b4 6d6f
0025b5 7253
0025b6 3e63
0025b7 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
0025b8 616c
0025b9 6d72
0025ba 7253
0025bb 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
0025bc 6e75
0025bd 6e6b
0025be 776f
0025bf 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
0025c0 305b
0025c1 2578
0025c2 3230
0025c3 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0025c4 0a0d
0025c5 3c00
0025c6 6863
0025c7 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025c8 536b
0025c9 6e65
0025ca 4464
0025cb 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
0025cc 6c41
0025cd 7261
0025ce 3e6d
0025cf 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
0025d0 6168
0025d1 6e6e
0025d2 6c65
0025d3 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
0025d4 7475
0025d5 6f20
0025d6 2066
0025d7 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
0025d8 676e
0025d9 2065
0025da 255b
0025db 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
0025dc 0a0d
0025dd 3c00
0025de 6863
0025df 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025e0 536b
0025e1 6e65
0025e2 4464
0025e3 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
0025e4 4161
0025e5 616c
0025e6 6d72
0025e7 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
0025e8 7250
0025e9 626f
0025ea 2065
0025eb 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
0025ec 6420
0025ed 7461
0025ee 4161
0025ef 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
0025f0 6d72
0025f1 305b
0025f2 2578
0025f3 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
0025f4 5d58
0025f5 0a0d
0025f6 3c00
0025f7 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
0025f8 5241
0025f9 5f4d
0025fa 6863
0025fb 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
0025fc 4d6b
0025fd 7475
0025fe 4565
0025ff 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
002600 7269
002601 6465
002602 203e
002603 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
002604 6176
002605 696c
002606 2064
002607 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
002608 6574
002609 6f4d
00260a 6564
00260b 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
00260c 6425
00260d 0d29
00260e 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
00260f 5444
002610 3025
002611 6432
002612 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
002613 3230
002614 2d64
002615 3025
002616 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
002617 5400
002618 254d
002619 3230
00261a 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
00261b 3025
00261c 6432
00261d 4400
00261e 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
00261f 6431
002620 2e25
002621 6631
002622 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
002623 2556
002624 6431
002625 5245
002626 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
002627 0042
002628 5644
002629 3125
00262a 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
00262b 5252
00262c 4255
00262d 4400
00262e 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
00262f 6431
002630 5245
002631 4e52
002632 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
002633 5644
002634 3125
002635 4564
002636 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
002637 4853
002638 4400
002639 2556
00263a 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
00263b 4544
00263c 4554
00263d 5443
00263e 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
00263f 0047
002640 4f3c
002641 454c
002642 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
002643 6873
002644 776f
002645 6553
002646 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
002647 726f
002648 6156
002649 756c
00264a 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
00264b 7320
00264c 6e65
00264d 6f73
00264e 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
00264f 6425
002650 2e5d
002651 7473
002652 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
002653 7375
002654 7520
002655 6b6e
002656 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
002657 6e77
002658 5b20
002659 7830
00265a 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
00265b 5832
00265c 0d5d
00265d 000a
00265e 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
00265f 3125
002660 4e64
002661 412f
002662 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
002663 3147
002664 4200
002665 304c
002666 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
002667 314c
002668 4200
002669 324c
00266a 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
00266b 334c
00266c 4200
00266d 344c
00266e 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
00266f 4c4f
002670 4445
002671 735f
002672 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
002673 4977
002674 706e
002675 7475
002676 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
002677 7461
002678 7375
002679 203e
00267a 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
00267b 3a52
00267c 6320
00267d 2068
00267e 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
00267f 756c
002680 2065
002681 756f
002682 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
002683 666f
002684 7220
002685 6e61
002686 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
002687 212e
002688 0d21
002689 000a
00268a 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
00268b 3125
00268c 2564
00268d 6431
00268e 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
00268f 4c4f
002690 4445
002691 735f
002692 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
002693 4f77
002694 7475
002695 7570
002696 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
002697 6174
002698 7574
002699 3e73
00269a 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
00269b 5252
00269c 203a
00269d 6863
00269e 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
00269f 6c61
0026a0 6575
0026a1 6f20
0026a2 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
0026a3 6f20
0026a4 2066
0026a5 6172
0026a6 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
0026a7 2e65
0026a8 2121
0026a9 0a0d
0026aa 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
0026ab 2550
0026ac 6431
0026ad 3125
0026ae 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
0026af 4353
0026b0 3125
0026b1 0064
0026b2 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
0026b3 3125
0026b4 0064
0026b5 5a42
0026b6 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
0026b7 0064
0026b8 534d
0026b9 3125
0026ba 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
0026bb 4c41
0026bc 3125
0026bd 2564
0026be 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
0026bf 3125
0026c0 2564
0026c1 6431
0026c2 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
0026c3 2564
0026c4 6431
0026c5 3125
0026c6 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
0026c7 6431
0026c8 3125
0026c9 2564
0026ca 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
0026cb 3125
0026cc 2564
0026cd 6431
0026ce 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
0026cf 210a
0026d0 2121
0026d1 2021
0026d2 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
0026d3 4445
0026d4 4520
0026d5 7272
0026d6 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
0026d7 2120
0026d8 2121
0026d9 0d21
0026da 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
0026db 6e49
0026dc 7469
0026dd 6169
0026de 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0026df 697a
0026e0 676e
0026e1 4f20
0026e2 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
0026e3 2e44
0026e4 202e
0026e5 4f00
0026e6 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
0026e7 000a      	.DB  0xA,0x0
                 _0x260003:
0026e8 3a30
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3739): warning: .cseg .db misalignment - padding zero byte
0026e9 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
0026ea 4600
0026eb 5f52
0026ec 4944
0026ed 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
0026ee 455f
0026ef 5252
0026f0 4600
0026f1 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
0026f2 4e49
0026f3 5f54
0026f4 5245
0026f5 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
0026f6 5246
0026f7 4e5f
0026f8 544f
0026f9 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
0026fa 4145
0026fb 5944
0026fc 4600
0026fd 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
0026fe 4f4e
0026ff 465f
002700 4c49
002701 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
002702 5246
002703 4e5f
002704 5f4f
002705 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
002706 4854
002707 4600
002708 5f52
002709 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
00270a 4156
00270b 494c
00270c 5f44
00270d 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
00270e 454d
00270f 4600
002710 5f52
002711 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
002712 494e
002713 4445
002714 4600
002715 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
002716 5845
002717 5349
002718 0054
002719 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
00271a 495f
00271b 564e
00271c 4c41
00271d 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
00271e 4f5f
00271f 4a42
002720 4345
002721 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
002722 5246
002723 575f
002724 4952
002725 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
002726 505f
002727 4f52
002728 4554
002729 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
00272a 4445
00272b 4600
00272c 5f52
00272d 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
00272e 4156
00272f 494c
002730 5f44
002731 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
002732 5649
002733 0045
002734 5246
002735 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
002736 544f
002737 455f
002738 414e
002739 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
00273a 4445
00273b 4600
00273c 5f52
00273d 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
00273e 465f
00273f 4c49
002740 5345
002741 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
002742 4554
002743 004d
002744 5246
002745 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
002746 464b
002747 5f53
002748 4241
002749 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
00274a 4554
00274b 0044
00274c 5246
00274d 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
00274e 4d49
00274f 4f45
002750 5455
002751 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
002752 5245
002753 3e52
002754 2520
002755 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
002756 0a0d
002757 3c00
002758 4453
002759 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
00275a 6972
00275b 6574
00275c 6144
00275d 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
00275e 203e
00275f 4453
002760 4320
002761 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
002762 2064
002763 6f6e
002764 2074
002765 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
002766 6461
002767 0d79
002768 000a
002769 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
00276a 5f44
00276b 7277
00276c 7469
00276d 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00276e 7461
00276f 3e61
002770 6620
002771 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
002772 6573
002773 6b65
002774 2528
002775 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
002776 6620
002777 6961
002778 656c
002779 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
00277a 0d21
00277b 000a
00277c 533c
00277d 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
00277e 7277
00277f 7469
002780 4465
002781 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002782 3e61
002783 6620
002784 775f
002785 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
002786 6574
002787 2928
002788 6620
002789 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00278a 656c
00278b 0d64
00278c 000a
00278d 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
00278e 5f44
00278f 7277
002790 7469
002791 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002792 7461
002793 3e61
002794 6120
002795 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
002796 6175
002797 5f6c
002798 7277
002799 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
00279a 5b65
00279b 7525
00279c 205d
00279d 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
00279e 6c20
00279f 6e65
0027a0 255b
0027a1 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
0027a2 0a0d
0027a3 3c00
0027a4 4453
0027a5 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
0027a6 6165
0027a7 4464
0027a8 7461
0027a9 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
0027aa 5320
0027ab 2044
0027ac 6143
0027ad 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
0027ae 6e20
0027af 746f
0027b0 7220
0027b1 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
0027b2 7964
0027b3 0a0d
0027b4 3c00
0027b5 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
0027b6 725f
0027b7 6165
0027b8 4464
0027b9 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0027ba 3e61
0027bb 6620
0027bc 6c5f
0027bd 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
0027be 6b65
0027bf 2528
0027c0 2975
0027c1 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
0027c2 6961
0027c3 656c
0027c4 2164
0027c5 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
0027c6 000a
0027c7 533c
0027c8 5f44
0027c9 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
0027ca 6461
0027cb 6144
0027cc 6174
0027cd 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
0027ce 5f66
0027cf 6572
0027d0 6461
0027d1 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
0027d2 6620
0027d3 6961
0027d4 656c
0027d5 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0027d6 000a
0027d7 533c
0027d8 5f44
0027d9 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
0027da 7469
0027db 4465
0027dc 7461
0027dd 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
0027de 6120
0027df 7463
0027e0 6175
0027e1 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
0027e2 6572
0027e3 6461
0027e4 255b
0027e5 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
0027e6 2120
0027e7 203d
0027e8 656c
0027e9 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
0027ea 7525
0027eb 0d5d
0027ec 000a
0027ed 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
0027ee 5f44
0027ef 6572
0027f0 6461
0027f1 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
0027f2 6f6d
0027f3 7972
0027f4 6552
0027f5 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
0027f6 6e69
0027f7 203e
0027f8 5f66
0027f9 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
0027fa 6674
0027fb 6572
0027fc 2865
0027fd 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
0027fe 2029
0027ff 7265
002800 6f72
002801 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
002802 0d21
002803 000a
002804 6f4c
002805 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
002806 6163
002807 206c
002808 7264
002809 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
00280a 2065
00280b 3a30
00280c 6d20
00280d 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
00280e 746e
00280f 6465
002810 4520
002811 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
002812 524f
002813 0a0d
002814 4c00
002815 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
002816 6369
002817 6c61
002818 6420
002819 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
00281a 6576
00281b 3020
00281c 203a
00281d 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
00281e 6e75
00281f 6574
002820 2064
002821 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
002822 0a0d
002823 4c00
002824 676f
002825 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
002826 6c61
002827 6420
002828 6972
002829 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
00282a 3020
00282b 203a
00282c 6e75
00282d 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
00282e 6e75
00282f 6574
002830 2064
002831 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
002832 4f52
002833 0d52
002834 000a
002835 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
002836 6967
002837 6163
002838 206c
002839 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
00283a 7669
00283b 2065
00283c 3a30
00283d 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
00283e 6d6e
00283f 756f
002840 746e
002841 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
002842 4f20
002843 0d4b
002844 000a
002845 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
002846 5f44
002847 6572
002848 6f6d
002849 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
00284a 3e74
00284b 5320
00284c 5f44
00284d 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
00284e 6f6d
00284f 6e75
002850 2874
002851 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
002852 6166
002853 6c69
002854 6465
002855 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002856 3c00
002857 4453
002858 725f
002859 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
00285a 756f
00285b 746e
00285c 203e
00285d 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
00285e 6d5f
00285f 756f
002860 746e
002861 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
002862 6620
002863 6961
002864 656c
002865 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002866 000a
002867 533c
002868 5f44
002869 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
00286a 6165
00286b 6574
00286c 6946
00286d 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
00286e 203e
00286f 4453
002870 4320
002871 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
002872 2064
002873 6f6e
002874 2074
002875 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
002876 6461
002877 0d79
002878 000a
002879 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
00287a 7325
00287b 3c00
00287c 4453
00287d 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
00287e 6572
00287f 7461
002880 4665
002881 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
002882 3e65
002883 6620
002884 6f5f
002885 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
002886 286e
002887 2029
002888 6166
002889 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00288a 6465
00288b 0a0d
00288c 3c00
00288d 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
00288e 635f
00288f 6572
002890 7461
002891 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
002892 6c69
002893 3e65
002894 6620
002895 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
002896 6f6c
002897 6573
002898 2928
002899 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
00289a 6961
00289b 656c
00289c 0d64
00289d 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00289e 533c
00289f 5f44
0028a0 706f
0028a1 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
0028a2 6946
0028a3 656c
0028a4 203e
0028a5 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0028a6 4320
0028a7 7261
0028a8 2064
0028a9 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
0028aa 2074
0028ab 6572
0028ac 6461
0028ad 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
0028ae 000a
0028af 533c
0028b0 5f44
0028b1 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
0028b2 6e65
0028b3 6946
0028b4 656c
0028b5 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
0028b6 5f66
0028b7 706f
0028b8 6e65
0028b9 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
0028ba 5b20
0028bb 7325
0028bc 205d
0028bd 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
0028be 6c69
0028bf 6465
0028c0 0a0d
0028c1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0028c2 4453
0028c3 635f
0028c4 6f6c
0028c5 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
0028c6 6946
0028c7 656c
0028c8 203e
0028c9 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0028ca 4320
0028cb 7261
0028cc 2064
0028cd 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
0028ce 2074
0028cf 6572
0028d0 6461
0028d1 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
0028d2 000a
0028d3 533c
0028d4 5f44
0028d5 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
0028d6 736f
0028d7 4665
0028d8 6c69
0028d9 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
0028da 6620
0028db 635f
0028dc 6f6c
0028dd 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
0028de 2928
0028df 6620
0028e0 6961
0028e1 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0028e2 0d64
0028e3 000a
0028e4 533c
0028e5 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
0028e6 6e69
0028e7 7469
0028e8 203e
0028e9 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
0028ea 7261
0028eb 2074
0028ec 6e69
0028ed 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
0028ee 6169
0028ef 206c
0028f0 656d
0028f1 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
0028f2 7972
0028f3 6320
0028f4 7261
0028f5 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
0028f6 000a
0028f7 0a0d
0028f8 533c
0028f9 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
0028fa 6e69
0028fb 7469
0028fc 203e
0028fd 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
0028fe 6e75
0028ff 6974
002900 676e
002901 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
002902 2044
002903 6143
002904 6472
002905 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
002906 002e
002907 533c
002908 5f44
002909 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
00290a 7469
00290b 203e
00290c 4453
00290d 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
00290e 756f
00290f 746e
002910 2928
002911 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
002912 6961
002913 656c
002914 0d64
002915 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002916 0a0d
002917 533c
002918 5f44
002919 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
00291a 7469
00291b 203e
00291c 6843
00291d 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
00291e 206b
00291f 6143
002920 6472
002921 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
002922 7a69
002923 2e65
002924 2e2e
002925 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
002926 4453
002927 695f
002928 696e
002929 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
00292a 5320
00292b 5f44
00292c 6572
00292d 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
00292e 654d
00292f 6f6d
002930 7972
002931 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
002932 616d
002933 6e69
002934 2928
002935 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
002936 6961
002937 656c
002938 0d64
002939 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00293a 533c
00293b 5f44
00293c 6e69
00293d 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
00293e 203e
00293f 7246
002940 6565
002941 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
002942 6170
002943 6563
002944 6f20
002945 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
002946 6f6c
002947 6967
002948 6163
002949 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
00294a 7264
00294b 7669
00294c 2065
00294d 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
00294e 2520
00294f 756c
002950 6b20
002951 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
002952 6574
002953 0d73
002954 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
002955 6164
002956 6174
002957 6c2e
002958 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
002959 7665
00295a 6e65
00295b 2e74
00295c 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3900): warning: .cseg .db misalignment - padding zero byte
00295d 0067      	.DB  0x67
                 _0x280005:
00295e 7265
00295f 6f72
002960 2e72
002961 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3903): warning: .cseg .db misalignment - padding zero byte
002962 0067      	.DB  0x67
                 _0x280006:
002963 0000
002964 0000
002965 0000
002966 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002967 ffff
002968 ffff
002969 ffff
00296a ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
00296b 81dd
00296c 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
00296d 821c
00296e 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
00296f 4c3c
002970 474f
002971 695f
002972 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
002973 7265
002974 4474
002975 7461
002976 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
002977 4c20
002978 474f
002979 675f
00297a 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
00297b 614c
00297c 7473
00297d 6e49
00297e 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
00297f 7472
002980 2928
002981 6620
002982 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
002983 656c
002984 0d64
002985 000a
002986 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002987 474f
002988 695f
002989 736e
00298a 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
00298b 4474
00298c 7461
00298d 3e61
00298e 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
00298f 5f44
002990 7277
002991 7469
002992 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002993 7461
002994 2861
002995 6c66
002996 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002997 2029
002998 6166
002999 6c69
00299a 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00299b 0a0d
00299c 3c00
00299d 4f4c
00299e 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
00299f 6e69
0029a0 6573
0029a1 7472
0029a2 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
0029a3 6174
0029a4 203e
0029a5 4453
0029a6 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
0029a7 6972
0029a8 6574
0029a9 6144
0029aa 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
0029ab 7428
0029ac 6d69
0029ad 7365
0029ae 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
0029af 706d
0029b0 2029
0029b1 6166
0029b2 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
0029b3 6465
0029b4 0a0d
0029b5 3c00
0029b6 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029b7 5f47
0029b8 6e69
0029b9 6573
0029ba 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0029bb 6144
0029bc 6174
0029bd 203e
0029be 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0029bf 775f
0029c0 6972
0029c1 6574
0029c2 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0029c3 6174
0029c4 6328
0029c5 6168
0029c6 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
0029c7 6c65
0029c8 2029
0029c9 6166
0029ca 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
0029cb 6465
0029cc 0a0d
0029cd 3c00
0029ce 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029cf 5f47
0029d0 6e69
0029d1 6573
0029d2 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0029d3 6144
0029d4 6174
0029d5 203e
0029d6 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0029d7 775f
0029d8 6972
0029d9 6574
0029da 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0029db 6174
0029dc 7628
0029dd 6c61
0029de 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
0029df 2029
0029e0 6166
0029e1 6c69
0029e2 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0029e3 0a0d
0029e4 3c00
0029e5 4f4c
0029e6 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0029e7 6e69
0029e8 6573
0029e9 7472
0029ea 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
0029eb 6174
0029ec 203e
0029ed 4f4c
0029ee 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0029ef 6573
0029f0 4c74
0029f1 7361
0029f2 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
0029f3 736e
0029f4 7265
0029f5 2874
0029f6 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
0029f7 2964
0029f8 6620
0029f9 6961
0029fa 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0029fb 0d64
0029fc 000a
0029fd 4c3c
0029fe 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0029ff 725f
002a00 6165
002a01 4464
002a02 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a03 3e61
002a04 4c20
002a05 474f
002a06 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
002a07 7465
002a08 614c
002a09 7473
002a0a 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
002a0b 6573
002a0c 7472
002a0d 2928
002a0e 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
002a0f 6961
002a10 656c
002a11 0d64
002a12 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002a13 4c3c
002a14 474f
002a15 725f
002a16 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002a17 4464
002a18 7461
002a19 3e61
002a1a 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
002a1b 474f
002a1c 675f
002a1d 7465
002a1e 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
002a1f 7473
002a20 6553
002a21 646e
002a22 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
002a23 6620
002a24 6961
002a25 656c
002a26 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002a27 000a
002a28 4c3c
002a29 474f
002a2a 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
002a2b 6165
002a2c 4564
002a2d 6576
002a2e 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
002a2f 203e
002a30 616c
002a31 7473
002a32 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
002a33 646e
002a34 6c2f
002a35 7361
002a36 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
002a37 736e
002a38 7265
002a39 2074
002a3a 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
002a3b 3e2d
002a3c 2520
002a3d 646c
002a3e 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
002a3f 646c
002a40 0a0d
002a41 3c00
002a42 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a43 5f47
002a44 6572
002a45 6461
002a46 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a47 6174
002a48 203e
002a49 6f4c
002a4a 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
002a4b 6d65
002a4c 7470
002a4d 2e79
002a4e 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002a4f 0d21
002a50 000a
002a51 443c
002a52 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
002a53 4755
002a54 435f
002a55 656c
002a56 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
002a57 6f4c
002a58 4667
002a59 6c69
002a5a 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
002a5b 4c20
002a5c 474f
002a5d 635f
002a5e 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
002a5f 7461
002a60 4665
002a61 6c69
002a62 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002a63 7325
002a64 2029
002a65 6166
002a66 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002a67 6465
002a68 0a0d
002a69 3c00
002a6a 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a6b 5f47
002a6c 6572
002a6d 6461
002a6e 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a6f 6174
002a70 203e
002a71 4453
002a72 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
002a73 6165
002a74 4464
002a75 7461
002a76 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002a77 6c66
002a78 6761
002a79 2029
002a7a 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002a7b 6c69
002a7c 6465
002a7d 0a0d
002a7e 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002a7f 4f4c
002a80 5f47
002a81 6572
002a82 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002a83 6144
002a84 6174
002a85 203e
002a86 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a87 725f
002a88 6165
002a89 4464
002a8a 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a8b 2861
002a8c 6974
002a8d 656d
002a8e 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a8f 6d61
002a90 2970
002a91 6620
002a92 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a93 656c
002a94 0d64
002a95 000a
002a96 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a97 474f
002a98 725f
002a99 6165
002a9a 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002a9b 7461
002a9c 3e61
002a9d 5320
002a9e 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002a9f 6572
002aa0 6461
002aa1 6144
002aa2 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002aa3 6328
002aa4 6168
002aa5 6e6e
002aa6 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
002aa7 2029
002aa8 6166
002aa9 6c69
002aaa 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002aab 0a0d
002aac 3c00
002aad 4f4c
002aae 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002aaf 6572
002ab0 6461
002ab1 6144
002ab2 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002ab3 203e
002ab4 4453
002ab5 725f
002ab6 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002ab7 4464
002ab8 7461
002ab9 2861
002aba 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002abb 756c
002abc 2965
002abd 6620
002abe 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002abf 656c
002ac0 0d64
002ac1 000a
002ac2 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002ac3 474f
002ac4 695f
002ac5 736e
002ac6 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002ac7 4574
002ac8 6576
002ac9 746e
002aca 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002acb 4f4c
002acc 5f47
002acd 6567
002ace 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002acf 7361
002ad0 4974
002ad1 736e
002ad2 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002ad3 2874
002ad4 2029
002ad5 6166
002ad6 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002ad7 6465
002ad8 0a0d
002ad9 3c00
002ada 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002adb 5f47
002adc 6e69
002add 6573
002ade 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002adf 7645
002ae0 6e65
002ae1 3e74
002ae2 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002ae3 5f44
002ae4 7277
002ae5 7469
002ae6 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002ae7 7461
002ae8 2861
002ae9 6c66
002aea 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002aeb 2029
002aec 6166
002aed 6c69
002aee 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002aef 0a0d
002af0 3c00
002af1 4f4c
002af2 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002af3 6e69
002af4 6573
002af5 7472
002af6 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
002af7 6e65
002af8 3e74
002af9 5320
002afa 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002afb 7277
002afc 7469
002afd 4465
002afe 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002aff 2861
002b00 6974
002b01 656d
002b02 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002b03 6d61
002b04 2970
002b05 6620
002b06 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002b07 656c
002b08 0d64
002b09 000a
002b0a 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002b0b 474f
002b0c 695f
002b0d 736e
002b0e 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002b0f 4574
002b10 6576
002b11 746e
002b12 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002b13 4453
002b14 775f
002b15 6972
002b16 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
002b17 6144
002b18 6174
002b19 6928
002b1a 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002b1b 6620
002b1c 6961
002b1d 656c
002b1e 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b1f 000a
002b20 4c3c
002b21 474f
002b22 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b23 736e
002b24 7265
002b25 4574
002b26 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b27 746e
002b28 203e
002b29 4453
002b2a 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002b2b 6972
002b2c 6574
002b2d 6144
002b2e 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002b2f 7328
002b30 6174
002b31 7574
002b32 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002b33 6620
002b34 6961
002b35 656c
002b36 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b37 000a
002b38 4c3c
002b39 474f
002b3a 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b3b 736e
002b3c 7265
002b3d 4574
002b3e 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b3f 746e
002b40 203e
002b41 4f4c
002b42 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b43 6573
002b44 4c74
002b45 7361
002b46 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b47 736e
002b48 7265
002b49 2874
002b4a 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002b4b 2964
002b4c 6620
002b4d 6961
002b4e 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b4f 0d64
002b50 000a
002b51 4c3c
002b52 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b53 725f
002b54 6165
002b55 4564
002b56 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b57 746e
002b58 203e
002b59 4f4c
002b5a 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b5b 6567
002b5c 4c74
002b5d 7361
002b5e 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b5f 736e
002b60 7265
002b61 2874
002b62 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002b63 6166
002b64 6c69
002b65 6465
002b66 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002b67 3c00
002b68 4f4c
002b69 5f47
002b6a 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002b6b 6461
002b6c 7645
002b6d 6e65
002b6e 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002b6f 4c20
002b70 474f
002b71 675f
002b72 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002b73 614c
002b74 7473
002b75 6553
002b76 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002b77 2928
002b78 6620
002b79 6961
002b7a 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b7b 0d64
002b7c 000a
002b7d 4c3c
002b7e 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b7f 725f
002b80 6165
002b81 4564
002b82 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b83 746e
002b84 203e
002b85 6f4c
002b86 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
002b87 6d65
002b88 7470
002b89 2e79
002b8a 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002b8b 0d21
002b8c 000a
002b8d 4c3c
002b8e 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b8f 725f
002b90 6165
002b91 4564
002b92 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b93 746e
002b94 203e
002b95 4453
002b96 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002b97 6165
002b98 4464
002b99 7461
002b9a 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002b9b 6c66
002b9c 6761
002b9d 2029
002b9e 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002b9f 6c69
002ba0 6465
002ba1 0a0d
002ba2 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002ba3 4f4c
002ba4 5f47
002ba5 6572
002ba6 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002ba7 7645
002ba8 6e65
002ba9 3e74
002baa 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002bab 5f44
002bac 6572
002bad 6461
002bae 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002baf 6174
002bb0 7428
002bb1 6d69
002bb2 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002bb3 6174
002bb4 706d
002bb5 2029
002bb6 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
002bb7 6c69
002bb8 6465
002bb9 0a0d
002bba 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002bbb 4f4c
002bbc 5f47
002bbd 6572
002bbe 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002bbf 7645
002bc0 6e65
002bc1 3e74
002bc2 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002bc3 5f44
002bc4 6572
002bc5 6461
002bc6 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002bc7 6174
002bc8 6928
002bc9 2964
002bca 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002bcb 6961
002bcc 656c
002bcd 0d64
002bce 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002bcf 4c3c
002bd0 474f
002bd1 725f
002bd2 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002bd3 4564
002bd4 6576
002bd5 746e
002bd6 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002bd7 4453
002bd8 725f
002bd9 6165
002bda 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002bdb 7461
002bdc 2861
002bdd 7473
002bde 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002bdf 7375
002be0 2029
002be1 6166
002be2 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002be3 6465
002be4 0a0d
002be5 3c00
002be6 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002be7 5f47
002be8 6567
002be9 4c74
002bea 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002beb 4974
002bec 736e
002bed 7265
002bee 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002bef 5320
002bf0 5f44
002bf1 6572
002bf2 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002bf3 6144
002bf4 6174
002bf5 2928
002bf6 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002bf7 6961
002bf8 656c
002bf9 0d64
002bfa 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002bfb 4c3c
002bfc 474f
002bfd 675f
002bfe 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002bff 614c
002c00 7473
002c01 6e49
002c02 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002c03 7472
002c04 203e
002c05 6f67
002c06 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002c07 6c25
002c08 0d64
002c09 000a
002c0a 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002c0b 474f
002c0c 735f
002c0d 7465
002c0e 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002c0f 7473
002c10 6e49
002c11 6573
002c12 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002c13 203e
002c14 7277
002c15 7469
002c16 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c17 2067
002c18 6c25
002c19 0d64
002c1a 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c1b 4c3c
002c1c 474f
002c1d 735f
002c1e 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c1f 614c
002c20 7473
002c21 6e49
002c22 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002c23 7472
002c24 203e
002c25 4453
002c26 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002c27 6165
002c28 4464
002c29 7461
002c2a 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002c2b 2029
002c2c 6166
002c2d 6c69
002c2e 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002c2f 0a0d
002c30 3c00
002c31 4f4c
002c32 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002c33 6567
002c34 4c74
002c35 7361
002c36 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002c37 6e65
002c38 3e64
002c39 5320
002c3a 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002c3b 6572
002c3c 6461
002c3d 6144
002c3e 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002c3f 2928
002c40 6620
002c41 6961
002c42 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002c43 0d64
002c44 000a
002c45 4c3c
002c46 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002c47 675f
002c48 7465
002c49 614c
002c4a 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002c4b 6553
002c4c 646e
002c4d 203e
002c4e 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002c4f 2074
002c50 6c25
002c51 0d64
002c52 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c53 4c3c
002c54 474f
002c55 735f
002c56 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c57 614c
002c58 7473
002c59 6553
002c5a 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002c5b 203e
002c5c 7277
002c5d 7469
002c5e 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c5f 2067
002c60 6c25
002c61 0d64
002c62 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c63 4c3c
002c64 474f
002c65 735f
002c66 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c67 614c
002c68 7473
002c69 6553
002c6a 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002c6b 203e
002c6c 4453
002c6d 725f
002c6e 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002c6f 4464
002c70 7461
002c71 2861
002c72 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002c73 6166
002c74 6c69
002c75 6465
002c76 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c77 3c00
002c78 4f4c
002c79 5f47
002c7a 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c7b 6165
002c7c 6574
002c7d 6946
002c7e 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c7f 203e
002c80 4453
002c81 635f
002c82 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002c83 7461
002c84 4665
002c85 6c69
002c86 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002c87 7325
002c88 2029
002c89 6166
002c8a 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002c8b 6465
002c8c 0a0d
002c8d 3c00
002c8e 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c8f 5f47
002c90 7263
002c91 6165
002c92 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c93 6946
002c94 656c
002c95 203e
002c96 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002c97 6120
002c98 726c
002c99 6165
002c9a 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002c9b 6520
002c9c 6978
002c9d 7473
002c9e 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002c9f 3c00
002ca0 4f4c
002ca1 5f47
002ca2 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002ca3 6165
002ca4 6574
002ca5 6946
002ca6 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002ca7 203e
002ca8 7325
002ca9 6320
002caa 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002cab 7461
002cac 6465
002cad 0a0d
002cae 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002caf 4f4c
002cb0 5f47
002cb1 7263
002cb2 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002cb3 6574
002cb4 6946
002cb5 656c
002cb6 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002cb7 7325
002cb8 6320
002cb9 6e6f
002cba 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002cbb 6e69
002cbc 6465
002cbd 6e20
002cbe 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002cbf 6e69
002cc0 7469
002cc1 6169
002cc2 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002cc3 6164
002cc4 6174
002cc5 0a0d
002cc6 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002cc7 4f4c
002cc8 5f47
002cc9 7263
002cca 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002ccb 6574
002ccc 6946
002ccd 656c
002cce 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002ccf 4453
002cd0 6f5f
002cd1 6570
002cd2 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002cd3 6c69
002cd4 2865
002cd5 7325
002cd6 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002cd7 6166
002cd8 6c69
002cd9 6465
002cda 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002cdb 3c00
002cdc 4f4c
002cdd 5f47
002cde 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002cdf 6165
002ce0 6574
002ce1 6946
002ce2 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002ce3 203e
002ce4 7277
002ce5 7469
002ce6 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002ce7 2067
002ce8 6e69
002ce9 7469
002cea 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002ceb 206c
002cec 6164
002ced 6174
002cee 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002cef 3c00
002cf0 4f4c
002cf1 5f47
002cf2 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002cf3 6165
002cf4 6574
002cf5 6946
002cf6 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002cf7 203e
002cf8 4453
002cf9 775f
002cfa 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002cfb 6574
002cfc 6144
002cfd 6174
002cfe 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002cff 6620
002d00 6961
002d01 656c
002d02 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002d03 7257
002d04 7469
002d05 6e69
002d06 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002d07 202e
002d08 0a0d
002d09 3c00
002d0a 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002d0b 5f47
002d0c 7263
002d0d 6165
002d0e 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002d0f 6946
002d10 656c
002d11 203e
002d12 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002d13 635f
002d14 6f6c
002d15 6573
002d16 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002d17 656c
002d18 2928
002d19 6620
002d1a 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002d1b 656c
002d1c 0d64
002d1d 000a
002d1e 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002d1f 474f
002d20 695f
002d21 696e
002d22 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002d23 4920
002d24 696e
002d25 6974
002d26 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002d27 6c20
002d28 676f
002d29 6620
002d2a 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002d2b 0d65
002d2c 000a
002d2d 4c3c
002d2e 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002d2f 695f
002d30 696e
002d31 3e74
002d32 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002d33 474f
002d34 635f
002d35 6572
002d36 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002d37 4665
002d38 6c69
002d39 2865
002d3a 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002d3b 2029
002d3c 6166
002d3d 6c69
002d3e 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002d3f 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4156): warning: .cseg .db misalignment - padding zero byte
002d40 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002d41 0a0d
002d42 0a0d
002d43 613c
002d44 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002d45 6144
002d46 6174
002d47 6f4c
002d48 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002d49 6575
002d4a 6575
002d4b 203e
002d4c 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002d4d 4e52
002d4e 4e49
002d4f 2047
002d50 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002d51 6164
002d52 6174
002d53 6f4c
002d54 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002d55 6575
002d56 6575
002d57 4620
002d58 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002d59 0d4c
002d5a 0d0a
002d5b 000a
002d5c 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002d5d 613c
002d5e 6464
002d5f 6144
002d60 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002d61 6f4c
002d62 5167
002d63 6575
002d64 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d65 203e
002d66 2020
002d67 2020
002d68 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d69 2020
002d6a 2020
002d6b 2020
002d6c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d6d 2020
002d6e 2020
002d6f 2020
002d70 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d71 2020
002d72 2020
002d73 6441
002d74 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002d75 2064
002d76 2528
002d77 3230
002d78 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002d79 7420
002d7a 206f
002d7b 6164
002d7c 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002d7d 6f4c
002d7e 5167
002d7f 6575
002d80 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d81 255b
002d82 5d64
002d83 4320
002d84 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002d85 746e
002d86 3d20
002d87 2520
002d88 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002d89 000a
002d8a 723c
002d8b 6165
002d8c 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d8d 7461
002d8e 4c61
002d8f 676f
002d90 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d91 7565
002d92 3e65
002d93 5720
002d94 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d95 3a4e
002d96 6420
002d97 7461
002d98 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002d99 676f
002d9a 7551
002d9b 7565
002d9c 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002d9d 6d65
002d9e 7470
002d9f 2179
002da0 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002da1 000a
002da2 723c
002da3 6165
002da4 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002da5 7461
002da6 4c61
002da7 676f
002da8 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002da9 7565
002daa 3e65
002dab 5720
002dac 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002dad 3a4e
002dae 6e20
002daf 746f
002db0 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002db1 756f
002db2 646e
002db3 6920
002db4 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002db5 7830
002db6 3025
002db7 5832
002db8 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002db9 6e69
002dba 6420
002dbb 7461
002dbc 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002dbd 676f
002dbe 7551
002dbf 7565
002dc0 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002dc1 000a
002dc2 0a0d
002dc3 723c
002dc4 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002dc5 766f
002dc6 4465
002dc7 7461
002dc8 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002dc9 676f
002dca 7551
002dcb 7565
002dcc 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002dcd 2020
002dce 2020
002dcf 2020
002dd0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dd1 2020
002dd2 2020
002dd3 2020
002dd4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dd5 2020
002dd6 2020
002dd7 2020
002dd8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dd9 6552
002dda 6f6d
002ddb 6576
002ddc 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002ddd 2528
002dde 3230
002ddf 2958
002de0 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002de1 6f72
002de2 206d
002de3 6164
002de4 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002de5 6f4c
002de6 5167
002de7 6575
002de8 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002de9 255b
002dea 5d64
002deb 0a0d
002dec 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002ded 6572
002dee 6f6d
002def 6576
002df0 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002df1 6174
002df2 6f4c
002df3 5167
002df4 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002df5 6575
002df6 203e
002df7 4157
002df8 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002df9 203a
002dfa 6f6e
002dfb 2074
002dfc 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002dfd 6e75
002dfe 2064
002dff 6469
002e00 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002e01 2578
002e02 3230
002e03 5d58
002e04 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002e05 206e
002e06 6164
002e07 6174
002e08 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002e09 5167
002e0a 6575
002e0b 6575
002e0c 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e0d 0d00
002e0e 0d0a
002e0f 3c0a
002e10 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002e11 4564
002e12 6576
002e13 746e
002e14 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e15 5167
002e16 6575
002e17 6575
002e18 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002e19 4157
002e1a 4e52
002e1b 4e49
002e1c 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002e1d 203a
002e1e 7665
002e1f 6e65
002e20 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e21 676f
002e22 7551
002e23 7565
002e24 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002e25 5546
002e26 4c4c
002e27 0a0d
002e28 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002e29 0d00
002e2a 3c0a
002e2b 6461
002e2c 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002e2d 6576
002e2e 746e
002e2f 6f4c
002e30 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e31 6575
002e32 6575
002e33 203e
002e34 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002e35 2020
002e36 2020
002e37 2020
002e38 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e39 2020
002e3a 2020
002e3b 2020
002e3c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e3d 2020
002e3e 2020
002e3f 2020
002e40 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002e41 6564
002e42 2064
002e43 2528
002e44 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002e45 2958
002e46 7420
002e47 206f
002e48 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002e49 6e65
002e4a 4c74
002e4b 676f
002e4c 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002e4d 7565
002e4e 5b65
002e4f 6425
002e50 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002e51 6f43
002e52 6e75
002e53 2074
002e54 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002e55 6425
002e56 0a0d
002e57 3c00
002e58 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002e59 6461
002e5a 7645
002e5b 6e65
002e5c 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002e5d 676f
002e5e 7551
002e5f 7565
002e60 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e61 5720
002e62 5241
002e63 3a4e
002e64 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002e65 6576
002e66 746e
002e67 6f4c
002e68 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e69 6575
002e6a 6575
002e6b 6520
002e6c 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002e6d 7974
002e6e 2121
002e6f 0a0d
002e70 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002e71 6572
002e72 6461
002e73 7645
002e74 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002e75 4c74
002e76 676f
002e77 7551
002e78 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002e79 3e65
002e7a 5720
002e7b 5241
002e7c 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002e7d 6e20
002e7e 746f
002e7f 6620
002e80 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002e81 646e
002e82 6920
002e83 5b64
002e84 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002e85 3025
002e86 5832
002e87 205d
002e88 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002e89 6520
002e8a 6576
002e8b 746e
002e8c 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e8d 5167
002e8e 6575
002e8f 6575
002e90 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e91 0d00
002e92 3c0a
002e93 6572
002e94 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002e95 6576
002e96 7645
002e97 6e65
002e98 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002e99 676f
002e9a 7551
002e9b 7565
002e9c 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e9d 2020
002e9e 2020
002e9f 2020
002ea0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ea1 2020
002ea2 2020
002ea3 2020
002ea4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ea5 2020
002ea6 2020
002ea7 2020
002ea8 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002ea9 6f6d
002eaa 6576
002eab 2064
002eac 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002ead 3230
002eae 2958
002eaf 6620
002eb0 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002eb1 206d
002eb2 7665
002eb3 6e65
002eb4 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002eb5 676f
002eb6 7551
002eb7 7565
002eb8 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002eb9 6425
002eba 0d5d
002ebb 000a
002ebc 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002ebd 6d65
002ebe 766f
002ebf 4565
002ec0 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002ec1 746e
002ec2 6f4c
002ec3 5167
002ec4 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002ec5 6575
002ec6 203e
002ec7 4157
002ec8 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002ec9 203a
002eca 6f6e
002ecb 2074
002ecc 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002ecd 6e75
002ece 2064
002ecf 6469
002ed0 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002ed1 2578
002ed2 3230
002ed3 5d58
002ed4 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002ed5 206e
002ed6 7665
002ed7 6e65
002ed8 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002ed9 676f
002eda 7551
002edb 7565
002edc 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002edd 000a      	.DB  0xA,0x0
                 _0x2C0003:
002ede 0000
002edf 0000
002ee0 0000
002ee1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ee2 0000
002ee3 0000
002ee4 0000
002ee5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ee6 0000
002ee7 0000
002ee8 0000
002ee9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eea 0000
002eeb 0000
002eec 0000
002eed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eee 0000
002eef 0000
002ef0 0000
002ef1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ef2 0000
002ef3 0000
002ef4 0000
002ef5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ef6 0000
002ef7 0000
002ef8 0000
002ef9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002efa 0000
002efb 0000
002efc 0000
002efd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002efe 0000
002eff 0000
002f00 0000
002f01 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f02 0591
002f03 058d
002f04 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C027A:
002f05 0000
002f06 0000
002f07 0000
002f08 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f09 0000
002f0a 0000
002f0b 0000
002f0c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f0d 0000
002f0e 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002f0f 314d
002f10 3125
002f11 0064
002f12 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002f13 4d00
002f14 2541
002f15 6431
002f16 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002f17 2532
002f18 6431
002f19 4d00
002f1a 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002f1b 6431
002f1c 4d00
002f1d 2534
002f1e 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002f1f 5000
002f20 0031
002f21 354d
002f22 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002f23 0064
002f24 3050
002f25 3c00
002f26 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002f27 554e
002f28 705f
002f29 6f72
002f2a 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002f2b 7373
002f2c 654b
002f2d 3e79
002f2e 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002f2f 2550
002f30 2c73
002f31 7325
002f32 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002f33 2c73
002f34 5200
002f35 6165
002f36 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002f37 6d69
002f38 2c65
002f39 4400
002f3a 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002f3b 6c61
002f3c 676f
002f3d 6567
002f3e 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002f3f 5500
002f40 6b6e
002f41 6f6e
002f42 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002f43 002c
002f44 6e45
002f45 6261
002f46 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002f47 002c
002f48 6944
002f49 6173
002f4a 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002f4b 2c65
002f4c 3c00
002f4d 454d
002f4e 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002f4f 705f
002f50 6f72
002f51 6563
002f52 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002f53 654b
002f54 3e79
002f55 5620
002f56 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002f57 0073
002f58 4d3c
002f59 4e45
002f5a 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002f5b 7270
002f5c 636f
002f5d 7365
002f5e 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002f5f 7965
002f60 203e
002f61 616d
002f62 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002f63 636f
002f64 4328
002f65 4e4f
002f66 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002f67 4552
002f68 4441
002f69 425f
002f6a 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002f6b 4546
002f6c 2952
002f6d 6620
002f6e 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002f6f 656c
002f70 0d64
002f71 000a
002f72 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002f73 4e45
002f74 5f55
002f75 7270
002f76 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f77 7365
002f78 4b73
002f79 7965
002f7a 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f7b 5445
002f7c 5f48
002f7d 6567
002f7e 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002f7f 6e6f
002f80 6966
002f81 2867
002f82 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002f83 6166
002f84 6c69
002f85 6465
002f86 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002f87 3c00
002f88 454d
002f89 554e
002f8a 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f8b 6f72
002f8c 6563
002f8d 7373
002f8e 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f8f 3e79
002f90 4520
002f91 4854
002f92 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002f93 7465
002f94 6f43
002f95 666e
002f96 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002f97 2928
002f98 7320
002f99 6375
002f9a 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002f9b 7373
002f9c 0a0d
002f9d 0d00
002f9e 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002f9f 3c0a
002fa0 454d
002fa1 554e
002fa2 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002fa3 6f72
002fa4 6563
002fa5 7373
002fa6 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002fa7 3e79
002fa8 7220
002fa9 6165
002faa 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002fab 6425
002fac 205d
002fad 2d2d
002fae 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002faf 000a
002fb0 4d3c
002fb1 4e45
002fb2 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002fb3 7270
002fb4 636f
002fb5 7365
002fb6 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002fb7 7965
002fb8 203e
002fb9 6567
002fba 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002fbb 7465
002fbc 6f77
002fbd 6b72
002fbe 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002fbf 6f66
002fc0 2928
002fc1 6620
002fc2 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002fc3 656c
002fc4 0d64
002fc5 000a
002fc6 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002fc7 4e45
002fc8 5f55
002fc9 7270
002fca 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002fcb 7365
002fcc 4b73
002fcd 7965
002fce 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002fcf 4e56
002fd0 7525
002fd1 252e
002fd2 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fd3 7525
002fd4 252e
002fd5 2c75
002fd6 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002fd7 252e
002fd8 2e75
002fd9 7525
002fda 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002fdb 2c75
002fdc 7525
002fdd 252e
002fde 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002fdf 7525
002fe0 252e
002fe1 2c75
002fe2 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002fe3 252e
002fe4 2e75
002fe5 7525
002fe6 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002fe7 2c75
002fe8 0a0d
002fe9 5600
002fea 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002feb 2e75
002fec 7525
002fed 252e
002fee 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fef 7525
002ff0 252c
002ff1 2e75
002ff2 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002ff3 252e
002ff4 2e75
002ff5 7525
002ff6 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002ff7 2e75
002ff8 7525
002ff9 252e
002ffa 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002ffb 7525
002ffc 252c
002ffd 2e75
002ffe 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002fff 252e
003000 2e75
003001 7525
003002 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
003003 4d3c
003004 4e45
003005 5f55
003006 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
003007 636f
003008 7365
003009 4b73
00300a 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
00300b 203e
00300c 6564
00300d 4576
00300e 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
00300f 6425
003010 205d
003011 6c61
003012 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
003013 5b6e
003014 6425
003015 005d
003016 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
003017 3125
003018 0064
003019 4445
00301a 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
00301b 6431
00301c 4500
00301d 3344
00301e 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
00301f 0064
003020 4953
003021 4900
003022 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
003023 5831
003024 3125
003025 0064
003026 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
003027 3125
003028 0064
003029 4d3c
00302a 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
00302b 5f55
00302c 7270
00302d 636f
00302e 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00302f 4b73
003030 7965
003031 203e
003032 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
003033 4576
003034 206e
003035 3e2d
003036 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
003037 2544
003038 6431
003039 3125
00303a 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
00303b 4d3c
00303c 4e45
00303d 5f55
00303e 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
00303f 636f
003040 7365
003041 4b73
003042 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
003043 203e
003044 6c61
003045 456d
003046 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
003047 3e2d
003048 4520
003049 2544
00304a 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
00304b 3125
00304c 0064
00304d 4d3c
00304e 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
00304f 5f55
003050 7270
003051 636f
003052 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003053 4b73
003054 7965
003055 203e
003056 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
003057 4f74
003058 6570
003059 6172
00305a 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
00305b 676e
00305c 6f43
00305d 666e
00305e 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
00305f 2928
003060 6620
003061 6961
003062 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
003063 0d64
003064 000a
003065 4c46
003066 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
003067 0049
003068 4149
003069 3125
00306a 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
00306b 4d53
00306c 5300
00306d 0047
00306e 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
00306f 5300
003070 2546
003071 2e75
003072 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
003073 252e
003074 2e75
003075 7525
003076 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
003077 2e75
003078 7525
003079 252e
00307a 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
00307b 7525
00307c 252c
00307d 2e75
00307e 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
00307f 252e
003080 2e75
003081 7525
003082 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
003083 2e75
003084 7525
003085 252e
003086 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003087 7525
003088 002c
003089 4d3c
00308a 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
00308b 5f55
00308c 7270
00308d 636f
00308e 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00308f 4b73
003090 7965
003091 203e
003092 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
003093 5f48
003094 6573
003095 4374
003096 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
003097 6966
003098 2867
003099 2029
00309a 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
00309b 6c69
00309c 6465
00309d 0d20
00309e 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
00309f 554d
0030a0 3125
0030a1 0064
0030a2 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
0030a3 3125
0030a4 2a64
0030a5 5000
0030a6 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
0030a7 6431
0030a8 5000
0030a9 0035
0030aa 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
0030ab 3125
0030ac 2564
0030ad 6431
0030ae 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
0030af 454d
0030b0 554e
0030b1 705f
0030b2 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
0030b3 6563
0030b4 7373
0030b5 654b
0030b6 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
0030b7 6e20
0030b8 7765
0030b9 7750
0030ba 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
0030bb 2026
0030bc 6f63
0030bd 666e
0030be 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
0030bf 2064
0030c0 6f6e
0030c1 2074
0030c2 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
0030c3 6374
0030c4 0d68
0030c5 000a
0030c6 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
0030c7 5600
0030c8 2544
0030c9 6431
0030ca 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
0030cb 0064
0030cc 3153
0030cd 3125
0030ce 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
0030cf 3253
0030d0 3125
0030d1 0064
0030d2 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
0030d3 4d00
0030d4 2537
0030d5 6431
0030d6 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
0030d7 2541
0030d8 6431
0030d9 5300
0030da 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
0030db 6431
0030dc 5000
0030dd 254e
0030de 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
0030df 4300
0030e0 2543
0030e1 6431
0030e2 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
0030e3 2538
0030e4 6431
0030e5 4300
0030e6 2550      	.DB  0x38,0x25,0x31,0x64,0x0,0x43,0x50,0x25
0030e7 6431
0030e8 3125
0030e9 0064
0030ea 4443      	.DB  0x31,0x64,0x25,0x31,0x64,0x0,0x43,0x44
0030eb 3125
0030ec 2564
0030ed 6431
0030ee 6300      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x63
0030ef 6c61
0030f0 6e50
0030f1 5b74
0030f2 3125      	.DB  0x61,0x6C,0x50,0x6E,0x74,0x5B,0x25,0x31
0030f3 5d64
0030f4 3d20
0030f5 2520
0030f6 6431      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x31,0x64
0030f7 0a0d
0030f8 4300
0030f9 2541
0030fa 6431      	.DB  0xD,0xA,0x0,0x43,0x41,0x25,0x31,0x64
0030fb 5700
0030fc 0050
0030fd 5350
0030fe 5000      	.DB  0x0,0x57,0x50,0x0,0x50,0x53,0x0,0x50
0030ff 0034
003100 455b
003101 005d
003102 445b      	.DB  0x34,0x0,0x5B,0x45,0x5D,0x0,0x5B,0x44
003103 005d
003104 6e45
003105 6261
003106 656c      	.DB  0x5D,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
003107 4400
003108 7369
003109 6261
00310a 656c      	.DB  0x0,0x44,0x69,0x73,0x61,0x62,0x6C,0x65
00310b 3c00
00310c 6873
00310d 776f
00310e 7250      	.DB  0x0,0x3C,0x73,0x68,0x6F,0x77,0x50,0x72
00310f 626f
003110 4365
003111 6e6f
003112 6966      	.DB  0x6F,0x62,0x65,0x43,0x6F,0x6E,0x66,0x69
003113 3e67
003114 5020
003115 2543
003116 6431      	.DB  0x67,0x3E,0x20,0x50,0x43,0x25,0x31,0x64
003117 3125
003118 2564
003119 2c64
00311a 7325      	.DB  0x25,0x31,0x64,0x25,0x64,0x2C,0x25,0x73
00311b 252c
00311c 2c73
00311d 2e25
00311e 6631      	.DB  0x2C,0x25,0x73,0x2C,0x25,0x2E,0x31,0x66
00311f 252c
003120 2c64
003121 2e25
003122 6631      	.DB  0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31,0x66
003123 252c
003124 312e
003125 2c66
003126 6425      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x2C,0x25,0x64
003127 252c
003128 312e
003129 0066
00312a 0a0d      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x0,0xD,0xA
00312b 673c
00312c 7465
00312d 635f
00312e 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
00312f 6572
003130 746e
003131 735f
003132 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
003133 6c70
003134 6e69
003135 3e67
003136 7220      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x72
003137 6165
003138 206c
003139 6176
00313a 756c      	.DB  0x65,0x61,0x6C,0x20,0x76,0x61,0x6C,0x75
00313b 2065
00313c 2528
00313d 206c
00313e 6573      	.DB  0x65,0x20,0x28,0x25,0x6C,0x20,0x73,0x65
00313f 2e63
003140 0d29
003141 000a
003142 673c      	.DB  0x63,0x2E,0x29,0xD,0xA,0x0,0x3C,0x67
003143 7465
003144 635f
003145 7275
003146 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
003147 746e
003148 735f
003149 6d61
00314a 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
00314b 6e69
00314c 3e67
00314d 2520
00314e 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
00314f 7268
003150 0d2e
003151 000a
003152 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
003153 7465
003154 635f
003155 7275
003156 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
003157 746e
003158 735f
003159 6d61
00315a 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
00315b 6e69
00315c 3e67
00315d 2520
00315e 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
00315f 696d
003160 2e6e
003161 0a0d
003162 3c00      	.DB  0x6D,0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C
003163 6567
003164 5f74
003165 7563
003166 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
003167 6e65
003168 5f74
003169 6173
00316a 706d      	.DB  0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70
00316b 696c
00316c 676e
00316d 203e
00316e 6425      	.DB  0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25,0x64
00316f 7320
003170 6365
003171 0d2e
003172 000a      	.DB  0x20,0x73,0x65,0x63,0x2E,0xD,0xA,0x0
003173 673c
003174 7465
003175 635f
003176 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
003177 6572
003178 746e
003179 735f
00317a 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
00317b 6c70
00317c 6e69
00317d 3e67
00317e 2520      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25
00317f 2064
003180 696d
003181 2e6e
003182 2520      	.DB  0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20,0x25
003183 2064
003184 6573
003185 2e63
003186 0020      	.DB  0x64,0x20,0x73,0x65,0x63,0x2E,0x20,0x0
003187 2d2d
003188 203e
003189 6425
00318a 6d20      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20,0x6D
00318b 6e69
00318c 0d2e
00318d 000a
00318e 673c      	.DB  0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C,0x67
00318f 7465
003190 635f
003191 7275
003192 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
003193 746e
003194 735f
003195 6d61
003196 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003197 6e69
003198 3e67
003199 2520
00319a 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
00319b 7268
00319c 202e
00319d 6425
00319e 6d20      	.DB  0x68,0x72,0x2E,0x20,0x25,0x64,0x20,0x6D
00319f 6e69
0031a0 202e
0031a1 6425
0031a2 7320      	.DB  0x69,0x6E,0x2E,0x20,0x25,0x64,0x20,0x73
0031a3 6365
0031a4 202e
0031a5 2d00
0031a6 3e2d      	.DB  0x65,0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E
0031a7 2520
0031a8 2064
0031a9 7268
0031aa 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
0031ab 000a
0031ac 673c
0031ad 7465
0031ae 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
0031af 7275
0031b0 6572
0031b1 746e
0031b2 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
0031b3 6d61
0031b4 6c70
0031b5 6e69
0031b6 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
0031b7 4320
0031b8 6e61
0031b9 7427
0031ba 5320      	.DB  0x20,0x43,0x61,0x6E,0x27,0x74,0x20,0x53
0031bb 6f68
0031bc 2e77
0031bd 0a0d
0031be 3c00      	.DB  0x68,0x6F,0x77,0x2E,0xD,0xA,0x0,0x3C
0031bf 6567
0031c0 5f74
0031c1 7563
0031c2 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
0031c3 6e65
0031c4 5f74
0031c5 7276
0031c6 6665      	.DB  0x65,0x6E,0x74,0x5F,0x76,0x72,0x65,0x66
0031c7 203e
0031c8 7276
0031c9 6665
0031ca 2528      	.DB  0x3E,0x20,0x76,0x72,0x65,0x66,0x28,0x25
0031cb 2966
0031cc 7620
0031cd 6c61
0031ce 6d54      	.DB  0x66,0x29,0x20,0x76,0x61,0x6C,0x54,0x6D
0031cf 2070
0031d0 203d
0031d1 7325
0031d2 0a0d      	.DB  0x70,0x20,0x3D,0x20,0x25,0x73,0xD,0xA
0031d3 3c00
0031d4 6567
0031d5 5f74
0031d6 7563      	.DB  0x0,0x3C,0x67,0x65,0x74,0x5F,0x63,0x75
0031d7 7272
0031d8 6e65
0031d9 5f74
0031da 7276      	.DB  0x72,0x72,0x65,0x6E,0x74,0x5F,0x76,0x72
0031db 6665
0031dc 203e
0031dd 7562
0031de 2066      	.DB  0x65,0x66,0x3E,0x20,0x62,0x75,0x66,0x20
0031df 3e2d
0031e0 0020
0031e1 255b
0031e2 5d63      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x5D
0031e3 3c00
0031e4 6567
0031e5 4e74
0031e6 7465      	.DB  0x0,0x3C,0x67,0x65,0x74,0x4E,0x65,0x74
0031e7 6f77
0031e8 6b72
0031e9 6e49
0031ea 6f66      	.DB  0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F
0031eb 203e
0031ec 494c
0031ed 2050
0031ee 203a      	.DB  0x3E,0x20,0x4C,0x49,0x50,0x20,0x3A,0x20
0031ef 7525
0031f0 252e
0031f1 2e75
0031f2 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
0031f3 252e
0031f4 0d75
0031f5 000a
0031f6 673c      	.DB  0x2E,0x25,0x75,0xD,0xA,0x0,0x3C,0x67
0031f7 7465
0031f8 654e
0031f9 7774
0031fa 726f      	.DB  0x65,0x74,0x4E,0x65,0x74,0x77,0x6F,0x72
0031fb 496b
0031fc 666e
0031fd 3e6f
0031fe 4d20      	.DB  0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4D
0031ff 4b53
003200 3a20
003201 2520
003202 2e75      	.DB  0x53,0x4B,0x20,0x3A,0x20,0x25,0x75,0x2E
003203 7525
003204 252e
003205 2e75
003206 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
003207 0a0d
003208 3c00
003209 6567
00320a 4e74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4E
00320b 7465
00320c 6f77
00320d 6b72
00320e 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
00320f 6f66
003210 203e
003211 4744
003212 2057      	.DB  0x66,0x6F,0x3E,0x20,0x44,0x47,0x57,0x20
003213 203a
003214 7525
003215 252e
003216 2e75      	.DB  0x3A,0x20,0x25,0x75,0x2E,0x25,0x75,0x2E
003217 7525
003218 252e
003219 0d75
00321a 000a      	.DB  0x25,0x75,0x2E,0x25,0x75,0xD,0xA,0x0
00321b 673c
00321c 7465
00321d 654e
00321e 7774      	.DB  0x3C,0x67,0x65,0x74,0x4E,0x65,0x74,0x77
00321f 726f
003220 496b
003221 666e
003222 3e6f      	.DB  0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E
003223 5320
003224 5049
003225 3a20
003226 2520      	.DB  0x20,0x53,0x49,0x50,0x20,0x3A,0x20,0x25
003227 2e75
003228 7525
003229 252e
00322a 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
00322b 7525
00322c 0a0d
00322d 3c00
00322e 6573      	.DB  0x25,0x75,0xD,0xA,0x0,0x3C,0x73,0x65
00322f 5f74
003230 7276
003231 6665
003232 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
003233 255b
003234 5d64
003235 255b
003236 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
003237 255b
003238 5d64
003239 2d20
00323a 203e      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x2D,0x3E,0x20
00323b 6425
00323c 2d20
00323d 203e
00323e 6625      	.DB  0x25,0x64,0x20,0x2D,0x3E,0x20,0x25,0x66
00323f 0a0d
003240 3c00
003241 6572
003242 6d63      	.DB  0xD,0xA,0x0,0x3C,0x72,0x65,0x63,0x6D
003243 3e70
003244 7320
003245 6372
003246 5b31      	.DB  0x70,0x3E,0x20,0x73,0x72,0x63,0x31,0x5B
003247 3025
003248 5832
003249 205d
00324a 7273      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x73,0x72
00324b 3263
00324c 255b
00324d 3230
00324e 5d58      	.DB  0x63,0x32,0x5B,0x25,0x30,0x32,0x58,0x5D
00324f 7520
003250 6573
003251 5b72
003252 3025      	.DB  0x20,0x75,0x73,0x65,0x72,0x5B,0x25,0x30
003253 5832
003254 205d
003255 6573
003256 7672      	.DB  0x32,0x58,0x5D,0x20,0x73,0x65,0x72,0x76
003257 6369
003258 5b65
003259 3025
00325a 5832      	.DB  0x69,0x63,0x65,0x5B,0x25,0x30,0x32,0x58
00325b 0d5d
00325c 000a      	.DB  0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4491): warning: .cseg .db misalignment - padding zero byte
00325d 0009      	.DB  0x9
                 _0x2E0000:
00325e 475b
00325f 7465
003260 4120
003261 4344      	.DB  0x5B,0x47,0x65,0x74,0x20,0x41,0x44,0x43
003262 6f20
003263 2066
003264 6573
003265 736e      	.DB  0x20,0x6F,0x66,0x20,0x73,0x65,0x6E,0x73
003266 726f
003267 0d5d
003268 000a
003269 0a0d      	.DB  0x6F,0x72,0x5D,0xD,0xA,0x0,0xD,0xA
00326a 443c
00326b 6265
00326c 6775
00326d 533e      	.DB  0x3C,0x44,0x65,0x62,0x75,0x67,0x3E,0x53
00326e 7465
00326f 6143
003270 3a6c
003271 0d20      	.DB  0x65,0x74,0x43,0x61,0x6C,0x3A,0x20,0xD
003272 000a
003273 6553
003274 736e
003275 726f      	.DB  0xA,0x0,0x53,0x65,0x6E,0x73,0x6F,0x72
003276 5420
003277 7079
003278 3a65
003279 6425      	.DB  0x20,0x54,0x79,0x70,0x65,0x3A,0x25,0x64
00327a 0d20
00327b 000a
00327c 6567
00327d 2074      	.DB  0x20,0xD,0xA,0x0,0x67,0x65,0x74,0x20
00327e 6579
00327f 7261
003280 3d20
003281 2520      	.DB  0x79,0x65,0x61,0x72,0x20,0x3D,0x20,0x25
003282 0d64
003283 000a
003284 6567
003285 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
003286 6f6d
003287 746e
003288 2068
003289 203d      	.DB  0x6D,0x6F,0x6E,0x74,0x68,0x20,0x3D,0x20
00328a 6425
00328b 0a0d
00328c 6700
00328d 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
00328e 6420
00328f 7461
003290 2065
003291 203d      	.DB  0x20,0x64,0x61,0x74,0x65,0x20,0x3D,0x20
003292 6425
003293 0a0d
003294 6700
003295 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
003296 6820
003297 756f
003298 2072
003299 203d      	.DB  0x20,0x68,0x6F,0x75,0x72,0x20,0x3D,0x20
00329a 6425
00329b 0a0d
00329c 6700
00329d 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
00329e 6d20
00329f 6e69
0032a0 3d20
0032a1 2520      	.DB  0x20,0x6D,0x69,0x6E,0x20,0x3D,0x20,0x25
0032a2 0d64
0032a3 000a
0032a4 6567
0032a5 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
0032a6 6573
0032a7 2063
0032a8 203d
0032a9 6425      	.DB  0x73,0x65,0x63,0x20,0x3D,0x20,0x25,0x64
0032aa 0a0d
0032ab 6700
0032ac 7465
0032ad 7420      	.DB  0xD,0xA,0x0,0x67,0x65,0x74,0x20,0x74
0032ae 6d69
0032af 7a65
0032b0 6e6f
0032b1 2065      	.DB  0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65,0x20
0032b2 203d
0032b3 2b25
0032b4 0d64
0032b5 000a      	.DB  0x3D,0x20,0x25,0x2B,0x64,0xD,0xA,0x0
0032b6 0a0d
0032b7 443c
0032b8 4245
0032b9 4755      	.DB  0xD,0xA,0x3C,0x44,0x45,0x42,0x55,0x47
0032ba 203e
0032bb 6c41
0032bc 7261
0032bd 206d      	.DB  0x3E,0x20,0x41,0x6C,0x61,0x72,0x6D,0x20
0032be 7453
0032bf 7461
0032c0 7375
0032c1 5220      	.DB  0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x52
0032c2 7365
0032c3 7465
0032c4 2e2e
0032c5 2121      	.DB  0x65,0x73,0x65,0x74,0x2E,0x2E,0x21,0x21
0032c6 0a0d
0032c7 3c00
0032c8 4544
0032c9 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0032ca 5f47
0032cb 6c43
0032cc 6165
0032cd 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
0032ce 676f
0032cf 6946
0032d0 656c
0032d1 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
0032d2 6552
0032d3 692d
0032d4 696e
0032d5 6974      	.DB  0x52,0x65,0x2D,0x69,0x6E,0x69,0x74,0x69
0032d6 7461
0032d7 2065
0032d8 6f6c
0032d9 2067      	.DB  0x61,0x74,0x65,0x20,0x6C,0x6F,0x67,0x20
0032da 6966
0032db 656c
0032dc 0a0d
0032dd 3c00      	.DB  0x66,0x69,0x6C,0x65,0xD,0xA,0x0,0x3C
0032de 4544
0032df 5542
0032e0 5f47
0032e1 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
0032e2 6165
0032e3 4c72
0032e4 676f
0032e5 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
0032e6 656c
0032e7 203e
0032e8 4f4c
0032e9 5f47      	.DB  0x6C,0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0032ea 7263
0032eb 6165
0032ec 6574
0032ed 6946      	.DB  0x63,0x72,0x65,0x61,0x74,0x65,0x46,0x69
0032ee 656c
0032ef 2528
0032f0 2973
0032f1 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0032f2 6961
0032f3 656c
0032f4 0d64
0032f5 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0032f6 443c
0032f7 4245
0032f8 4755
0032f9 735f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x73
0032fa 7465
0032fb 6552
0032fc 6c61
0032fd 7256      	.DB  0x65,0x74,0x52,0x65,0x61,0x6C,0x56,0x72
0032fe 6665
0032ff 203e
003300 6567
003301 2074      	.DB  0x65,0x66,0x3E,0x20,0x67,0x65,0x74,0x20
003302 6573
003303 2074
003304 7256
003305 6665      	.DB  0x73,0x65,0x74,0x20,0x56,0x72,0x65,0x66
003306 733c
003307 7274
003308 6e69
003309 3e67      	.DB  0x3C,0x73,0x74,0x72,0x69,0x6E,0x67,0x3E
00330a 2520
00330b 0d73
00330c 000a
00330d 443c      	.DB  0x20,0x25,0x73,0xD,0xA,0x0,0x3C,0x44
00330e 4245
00330f 4755
003310 735f
003311 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
003312 6552
003313 6c61
003314 7256
003315 6665      	.DB  0x52,0x65,0x61,0x6C,0x56,0x72,0x65,0x66
003316 203e
003317 6641
003318 6574
003319 2072      	.DB  0x3E,0x20,0x41,0x66,0x74,0x65,0x72,0x20
00331a 6f63
00331b 766e
00331c 7265
00331d 2074      	.DB  0x63,0x6F,0x6E,0x76,0x65,0x72,0x74,0x20
00331e 203d
00331f 6625
003320 0a0d
003321 3c00      	.DB  0x3D,0x20,0x25,0x66,0xD,0xA,0x0,0x3C
003322 4544
003323 5542
003324 5f47
003325 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003326 736e
003327 726f
003328 6553
003329 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
00332a 7463
00332b 203e
00332c 6854
00332d 7369      	.DB  0x63,0x74,0x3E,0x20,0x54,0x68,0x69,0x73
00332e 5420
00332f 4d45
003330 5f50
003331 4553      	.DB  0x20,0x54,0x45,0x4D,0x50,0x5F,0x53,0x45
003332 204c
003333 6f6e
003334 2074
003335 7573      	.DB  0x4C,0x20,0x6E,0x6F,0x74,0x20,0x73,0x75
003336 7070
003337 726f
003338 0d74
003339 0d0a      	.DB  0x70,0x70,0x6F,0x72,0x74,0xD,0xA,0xD
00333a 000a
00333b 443c
00333c 4245
00333d 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
00333e 735f
00333f 6e65
003340 6f73
003341 5372      	.DB  0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
003342 6c65
003343 6365
003344 3e74
003345 4420      	.DB  0x65,0x6C,0x65,0x63,0x74,0x3E,0x20,0x44
003346 7365
003347 6c65
003348 6365
003349 2074      	.DB  0x65,0x73,0x65,0x6C,0x65,0x63,0x74,0x20
00334a 6573
00334b 736e
00334c 726f
00334d 0a0d      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0xD,0xA
00334e 0a0d
00334f 3c00
003350 4544
003351 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
003352 5f47
003353 6573
003354 736e
003355 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
003356 6553
003357 656c
003358 7463
003359 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
00335a 6553
00335b 656c
00335c 7463
00335d 6465      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x65,0x64
00335e 7320
00335f 6e65
003360 6f73
003361 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
003362 6425
003363 0a0d
003364 0a0d
003365 3c00      	.DB  0x25,0x64,0xD,0xA,0xD,0xA,0x0,0x3C
003366 4544
003367 5542
003368 5f47
003369 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
00336a 736e
00336b 726f
00336c 6553
00336d 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
00336e 7463
00336f 203e
003370 5245
003371 4f52      	.DB  0x63,0x74,0x3E,0x20,0x45,0x52,0x52,0x4F
003372 2052
003373 203a
003374 6553
003375 656c      	.DB  0x52,0x20,0x3A,0x20,0x53,0x65,0x6C,0x65
003376 7463
003377 6e69
003378 2067
003379 6573      	.DB  0x63,0x74,0x69,0x6E,0x67,0x20,0x73,0x65
00337a 736e
00337b 726f
00337c 5b20
00337d 6325      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x5B,0x25,0x63
00337e 5b5d
00337f 7830
003380 3025
003381 5832      	.DB  0x5D,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
003382 0d5d
003383 0d0a
003384 000a
003385 443c      	.DB  0x5D,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
003386 4245
003387 4755
003388 735f
003389 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
00338a 6553
00338b 6972
00338c 6c61
00338d 754e      	.DB  0x53,0x65,0x72,0x69,0x61,0x6C,0x4E,0x75
00338e 626d
00338f 7265
003390 203e
003391 6e69      	.DB  0x6D,0x62,0x65,0x72,0x3E,0x20,0x69,0x6E
003392 6176
003393 696c
003394 2064
003395 6573      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x73,0x65
003396 7474
003397 6e69
003398 2067
003399 7473      	.DB  0x74,0x74,0x69,0x6E,0x67,0x20,0x73,0x74
00339a 6972
00339b 676e
00339c 2820
00339d 6325      	.DB  0x72,0x69,0x6E,0x67,0x20,0x28,0x25,0x63
00339e 5b29
00339f 7830
0033a0 3025
0033a1 5d32      	.DB  0x29,0x5B,0x30,0x78,0x25,0x30,0x32,0x5D
0033a2 0a0d
0033a3 3c00
0033a4 4544
0033a5 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0033a6 5f47
0033a7 6573
0033a8 5374
0033a9 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
0033aa 6169
0033ab 4e6c
0033ac 6d75
0033ad 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
0033ae 3e72
0033af 5220
0033b0 7065
0033b1 616c      	.DB  0x72,0x3E,0x20,0x52,0x65,0x70,0x6C,0x61
0033b2 6963
0033b3 676e
0033b4 4420
0033b5 5645      	.DB  0x63,0x69,0x6E,0x67,0x20,0x44,0x45,0x56
0033b6 4349
0033b7 5f45
0033b8 4553
0033b9 4952      	.DB  0x49,0x43,0x45,0x5F,0x53,0x45,0x52,0x49
0033ba 4c41
0033bb 2e2e
0033bc 0a0d
0033bd 3c00      	.DB  0x41,0x4C,0x2E,0x2E,0xD,0xA,0x0,0x3C
0033be 4544
0033bf 5542
0033c0 5f47
0033c1 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033c2 5374
0033c3 7265
0033c4 6169
0033c5 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
0033c6 6d75
0033c7 6562
0033c8 3e72
0033c9 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
0033ca 7465
0033cb 5320
0033cc 7274
0033cd 6e69      	.DB  0x65,0x74,0x20,0x53,0x74,0x72,0x69,0x6E
0033ce 2067
0033cf 2d2d
0033d0 203e
0033d1 5b00      	.DB  0x67,0x20,0x2D,0x2D,0x3E,0x20,0x0,0x5B
0033d2 6325
0033d3 2500
0033d4 5d63
0033d5 3c00      	.DB  0x25,0x63,0x0,0x25,0x63,0x5D,0x0,0x3C
0033d6 4544
0033d7 5542
0033d8 5f47
0033d9 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033da 5374
0033db 7265
0033dc 6169
0033dd 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
0033de 6d75
0033df 6562
0033e0 3e72
0033e1 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
0033e2 6375
0033e3 6563
0033e4 7373
0033e5 2121      	.DB  0x75,0x63,0x63,0x65,0x73,0x73,0x21,0x21
0033e6 4420
0033e7 5645
0033e8 535f
0033e9 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
0033ea 4149
0033eb 204c
0033ec 3d3d
0033ed 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
0033ee 5b00
0033ef 3025
0033f0 5832
0033f1 005d      	.DB  0x0,0x5B,0x25,0x30,0x32,0x58,0x5D,0x0
0033f2 443c
0033f3 4245
0033f4 4755
0033f5 725f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x72
0033f6 6165
0033f7 5364
0033f8 7265
0033f9 6169      	.DB  0x65,0x61,0x64,0x53,0x65,0x72,0x69,0x61
0033fa 4e6c
0033fb 6d75
0033fc 6562
0033fd 3e72      	.DB  0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72,0x3E
0033fe 4420
0033ff 5645
003400 535f
003401 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
003402 4149
003403 204c
003404 3d3d
003405 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
003406 4700
003407 7465
003408 4420
003409 6265      	.DB  0x0,0x47,0x65,0x74,0x20,0x44,0x65,0x62
00340a 6775
00340b 5220
00340c 7165
00340d 3a2e      	.DB  0x75,0x67,0x20,0x52,0x65,0x71,0x2E,0x3A
00340e 2500
00340f 3530
003410 2064
003411 2020      	.DB  0x0,0x25,0x30,0x35,0x64,0x20,0x20,0x20
003412 2500
003413 3230
003414 2078
003415 2e00      	.DB  0x0,0x25,0x30,0x32,0x78,0x20,0x0,0x2E
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4603): warning: .cseg .db misalignment - padding zero byte
003416 0000      	.DB  0x0
                 _0x300003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4605): warning: .cseg .db misalignment - padding zero byte
003417 0003      	.DB  0x3
                 _0x340003:
003418 0000
003419 c120
00341a 0000
00341b c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
00341c 0000
00341d c220
00341e 0000
00341f c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
003420 0000
003421 c270
003422 0000
003423 c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
003424 0000
003425 c2a0
003426 0000
003427 c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
003428 0000
003429 c2f0
00342a 0000
00342b c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
00342c 0000
00342d c30c
00342e 0000
00342f c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
003430 0000
003431 c320
003432 0000
003433 c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
003434 0000
003435 c348
003436 8312
003437 bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
003438 8937
003439 be41
00343a 0000
00343b bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
00343c 0000
00343d bec0
00343e 4fdf
00343f bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
003440 1062
003441 bf38
003442 1062
003443 bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
003444 4189
003445 bf60
003446 b021
003447 bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
003448 b021
003449 bf82
00344a 74bc
00344b bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
00344c 6e98
00344d bfa2
00344e 6e98
00344f bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
003450 5c29
003451 bfaf
003452 1cac
003453 bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
003454 0000
003455 c348
003456 0000
003457 c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
003458 0000
003459 c2c8
00345a 1cac
00345b bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
00345c 6e98
00345d bfa2
00345e 4189
00345f bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
003460 0000
003461 c2c8
003462 0000
003463 c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
003464 0000
003465 c120
003466 4189
003467 bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
003468 4fdf
003469 bf0d
00346a 8312
00346b bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
00346c 0000
00346d 0000
00346e 0000
00346f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003470 0000
003471 0000
003472 0000
003473 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003474 0000
003475 0000
003476 6042
003477 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
003478 0000
003479 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x34001B:
00347a 0000
00347b 0000
00347c 0000
00347d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00347e 6042
00347f 3fd5
003480 0000
003481 0000      	.DB  0x42,0x60,0xD5,0x3F,0x0,0x0,0x0,0x0
                 _0x34001C:
003482 0000
003483 0000
003484 0000
003485 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003486 1cac
003487 3e5a
003488 6042
003489 3fd5      	.DB  0xAC,0x1C,0x5A,0x3E,0x42,0x60,0xD5,0x3F
00348a 0000
00348b 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x34001D:
00348c 0000
00348d c120
00348e 0000
00348f c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
003490 0000
003491 c220
003492 0000
003493 c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
003494 0000
003495 c270
003496 0000
003497 c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
003498 0000
003499 c2a0
00349a 0000
00349b c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
00349c 0000
00349d c2f0
00349e 0000
00349f c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
0034a0 0000
0034a1 c30c
0034a2 0000
0034a3 c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
0034a4 0000
0034a5 c320
0034a6 0000
0034a7 c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
0034a8 0000
0034a9 c348
0034aa 8312
0034ab bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
0034ac 8937
0034ad be41
0034ae 0000
0034af bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
0034b0 0000
0034b1 bec0
0034b2 4fdf
0034b3 bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
0034b4 1062
0034b5 bf38
0034b6 1062
0034b7 bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
0034b8 4189
0034b9 bf60
0034ba b021
0034bb bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
0034bc b021
0034bd bf82
0034be 74bc
0034bf bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
0034c0 6e98
0034c1 bfa2
0034c2 6e98
0034c3 bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
0034c4 5c29
0034c5 bfaf
0034c6 1cac
0034c7 bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
0034c8 0000
0034c9 c348
0034ca 0000
0034cb c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
0034cc 0000
0034cd c2c8
0034ce 1cac
0034cf bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
0034d0 6e98
0034d1 bfa2
0034d2 4189
0034d3 bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
0034d4 0000
0034d5 c2c8
0034d6 0000
0034d7 c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
0034d8 0000
0034d9 c120
0034da 4189
0034db bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
0034dc 4fdf
0034dd bf0d
0034de 8312
0034df bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
0034e0 0000
0034e1 0000
0034e2 0000
0034e3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034e4 0000
0034e5 0000
0034e6 0000
0034e7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034e8 0000
0034e9 0000
0034ea 6042
0034eb 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
0034ec 0000
0034ed 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2000060:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4666): warning: .cseg .db misalignment - padding zero byte
0034ee 0001      	.DB  0x1
                 _0x2000000:
0034ef 4e2d
0034f0 4e41
0034f1 4900
0034f2 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4669): warning: .cseg .db misalignment - padding zero byte
0034f3 0000      	.DB  0x0
                 _0x2040003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4671): warning: .cseg .db misalignment - padding zero byte
0034f4 0001      	.DB  0x1
                 _0x2080000:
0034f5 4e2d
0034f6 4e41
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4673): warning: .cseg .db misalignment - padding zero byte
0034f7 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
0034f8 0004      	.DW  0x04
0034f9 1d8a      	.DW  0x1D8A
0034fa 0206 0000 	.DD  __HEAP_START_MARKER*2
                 
0034fc 0004      	.DW  0x04
0034fd 14e0      	.DW  _ETH_rst_timer_S0000001000
0034fe 0248 0000 	.DD  _0xA5*2
                 
003500 002b      	.DW  0x2B
003501 0cf0      	.DW  _0x40009
003502 10b2 0000 	.DD  _0x40000*2
                 
003504 0026      	.DW  0x26
003505 0d1b      	.DW  _0x40009+43
003506 10dd 0000 	.DD  _0x40000*2+43
                 
003508 002b      	.DW  0x2B
003509 0d41      	.DW  _0x40009+81
00350a 10b2 0000 	.DD  _0x40000*2
                 
00350c 0002      	.DW  0x02
00350d 1434      	.DW  _d_out
00350e 118a 0000 	.DD  _0x80003*2
                 
003510 0001      	.DW  0x01
003511 10f6      	.DW  _is_properties_config_update
003512 12f4 0000 	.DD  _0xE0003*2
                 
003514 0001      	.DW  0x01
003515 10f7      	.DW  _is_operating_config_update
003516 12f6 0000 	.DD  _0xE0004*2
                 
003518 0005      	.DW  0x05
003519 10f8      	.DW  _is_sensor_config_update
00351a 12f8 0000 	.DD  _0xE0005*2
                 
00351c 0010      	.DW  0x10
00351d 10fd      	.DW  _is_din_config_update
00351e 12fe 0000 	.DD  _0xE0006*2
                 
003520 0005      	.DW  0x05
003521 110d      	.DW  _is_dout_config_update
003522 130e 0000 	.DD  _0xE0007*2
                 
003524 0001      	.DW  0x01
003525 1112      	.DW  _is_buzzer_config_update
003526 1314 0000 	.DD  _0xE0008*2
                 
003528 0001      	.DW  0x01
003529 1113      	.DW  _is_status_config_update
00352a 1316 0000 	.DD  _0xE0009*2
                 
00352c 0001      	.DW  0x01
00352d 1114      	.DW  _is_env_config_update
00352e 1318 0000 	.DD  _0xE000A*2
                 
003530 0002      	.DW  0x02
003531 0d6c      	.DW  _0x1200D0
003532 3278 0000 	.DD  _0x120000*2+4850
                 
003534 0003      	.DW  0x03
003535 0007      	.DW  0x07
003536 42fe 0000 	.DD  _0x18001D*2
                 
003538 0005      	.DW  0x05
003539 1564      	.DW  _lastCheck_S00D0004000
00353a 443a 0000 	.DD  _0x1A0021*2
                 
00353c 0004      	.DW  0x04
00353d 000a      	.DW  0x0A
00353e 49ac 0000 	.DD  _0x1C0005*2
                 
003540 0002      	.DW  0x02
003541 147c      	.DW  _dinStatus
003542 49b0 0000 	.DD  _0x1E0003*2
                 
003544 0002      	.DW  0x02
003545 147e      	.DW  _doutStatus
003546 49b2 0000 	.DD  _0x1E0004*2
                 
003548 0001      	.DW  0x01
003549 1480      	.DW  _serverCommStatus
00354a 49b4 0000 	.DD  _0x1E0005*2
                 
00354c 0002      	.DW  0x02
00354d 1600      	.DW  _lastDinCheck_S00F0006000
00354e 49b6 0000 	.DD  _0x1E003A*2
                 
003550 0010      	.DW  0x10
003551 1496      	.DW  _dinAlarm
003552 4af6 0000 	.DD  _0x220003*2
                 
003554 0010      	.DW  0x10
003555 1682      	.DW  _ainAlarm
003556 4b06 0000 	.DD  _0x220004*2
                 
003558 0001      	.DW  0x01
003559 169c      	.DW  _lastCheck_S0110003000
00355a 4b16 0000 	.DD  _0x2200A8*2
                 
00355c 0001      	.DW  0x01
00355d 16a2      	.DW  _lastCheck_S0110004000
00355e 4b18 0000 	.DD  _0x2200B1*2
                 
003560 0002      	.DW  0x02
003561 16b2      	.DW  _lastCheck_S0110006000
003562 4b1a 0000 	.DD  _0x2200C5*2
                 
003564 0005      	.DW  0x05
003565 16cd      	.DW  _lastCheck_S0110007000
003566 4b1c 0000 	.DD  _0x2200CF*2
                 
003568 0004      	.DW  0x04
003569 1487      	.DW  _muteAlarmExpired
00356a 4b22 0000 	.DD  _0x2200DD*2
                 
00356c 0001      	.DW  0x01
00356d 0006      	.DW  0x06
00356e 4b26 0000 	.DD  _0x2200F6*2
                 
003570 0003      	.DW  0x03
003571 191f      	.DW  _root_path
003572 4dd0 0000 	.DD  _0x260003*2
                 
003574 0008      	.DW  0x08
003575 14a8      	.DW  _LOGFILE_DATA
003576 52aa 0000 	.DD  _0x280003*2
                 
003578 0009      	.DW  0x09
003579 14b1      	.DW  _LOGFILE_EVENT
00357a 52b2 0000 	.DD  _0x280004*2
                 
00357c 0009      	.DW  0x09
00357d 14bb      	.DW  _LOGFILE_ERROR
00357e 52bc 0000 	.DD  _0x280005*2
                 
003580 0010      	.DW  0x10
003581 14c5      	.DW  _LOG_INIT_STR
003582 52c6 0000 	.DD  _0x280006*2
                 
003584 0004      	.DW  0x04
003585 14d5      	.DW  _LOG_openFile
003586 52d6 0000 	.DD  _0x280007*2
                 
003588 0004      	.DW  0x04
003589 14d9      	.DW  _LOG_closeFile
00358a 52da 0000 	.DD  _0x280008*2
                 
00358c 0001      	.DW  0x01
00358d 10f4      	.DW  _hwCalId
00358e 64ba 0000 	.DD  _0x2E0003*2
                 
003590 0001      	.DW  0x01
003591 1a71      	.DW  _n
003592 682e 0000 	.DD  _0x300003*2
                 
003594 0001      	.DW  0x01
003595 1aa9      	.DW  __seed_G100
003596 69dc 0000 	.DD  _0x2000060*2
                 
003598 0001      	.DW  0x01
003599 1aad      	.DW  _status_G102
00359a 69e8 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
00359c 0000      	.DW  0
                 
                 __RESET:
00359d 94f8      	CLI
00359e 27ee      	CLR  R30
00359f bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0035a0 e0f1      	LDI  R31,1
0035a1 bff5      	OUT  MCUCR,R31
0035a2 bfe5      	OUT  MCUCR,R30
0035a3 93e0 0074 	STS  XMCRA,R30
0035a5 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0035a7 e1f8      	LDI  R31,0x18
0035a8 95a8      	WDR
0035a9 b7a4      	IN   R26,MCUSR
0035aa 7fa7      	CBR  R26,8
0035ab bfa4      	OUT  MCUSR,R26
0035ac 93f0 0060 	STS  WDTCSR,R31
0035ae 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0035b0 e08d      	LDI  R24,(14-2)+1
0035b1 e0a2      	LDI  R26,2
0035b2 27bb      	CLR  R27
                 __CLEAR_REG:
0035b3 93ed      	ST   X+,R30
0035b4 958a      	DEC  R24
0035b5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0035b6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0035b7 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0035b8 e0a0      	LDI  R26,LOW(__SRAM_START)
0035b9 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0035ba 93ed      	ST   X+,R30
0035bb 9701      	SBIW R24,1
0035bc f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0035bd efe0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0035be e6f9      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
0035bf e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0035c0 bfdb      	OUT  RAMPZ,R29
0035c1 9187      	ELPM R24,Z+
0035c2 9197      	ELPM R25,Z+
0035c3 9700      	SBIW R24,0
0035c4 f081      	BREQ __GLOBAL_INI_END
0035c5 91a7      	ELPM R26,Z+
0035c6 91b7      	ELPM R27,Z+
0035c7 9007      	ELPM R0,Z+
0035c8 9017      	ELPM R1,Z+
0035c9 91c7      	ELPM R28,Z+
0035ca 91d7      	ELPM R29,Z+
0035cb 01bf      	MOVW R22,R30
0035cc b7db      	IN   R29,RAMPZ
0035cd 01f0      	MOVW R30,R0
0035ce bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
0035cf 9007      	ELPM R0,Z+
0035d0 920d      	ST   X+,R0
0035d1 9701      	SBIW R24,1
0035d2 f7e1      	BRNE __GLOBAL_INI_LOOP
0035d3 01fb      	MOVW R30,R22
0035d4 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0035d5 e0e0      	LDI  R30,__GPIOR0_INIT
0035d6 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0035d7 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0035d8 bfed      	OUT  SPL,R30
0035d9 e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0035da bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0035db efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0035dc e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0035dd 940c 35df 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;#include "smoothFilter.h"
                 ;#include "ad595.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;//#include <interrupt.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0034 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;
                 ;
                 ;//void SIG_OUTPUT_COMPARE1A( void ) __attribute__ ( (naked) );
                 ;//	void SIG_OUTPUT_COMPARE1A( void )
                 ;//	{
                 ;//		//vPortYieldFromTick();
                 ;//		//asm volatile ( "reti" );
                 ;//	}
                 ;
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 004D {
                 
                 	.CSEG
                 _main:
                 ; 0000 004E     int                     err,i=0,k=0,res,last_status;
                 ; 0000 004F 
                 ; 0000 0050     TIMER                   sensor_report_timer[5];
                 ; 0000 0051     TIMER                   status_report_timer;
                 ; 0000 0052     TIMER                   check_reset_timer;
                 ; 0000 0053     TIMER                   check_memory_timer;
                 ; 0000 0054     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 0055     TIMER                   readSensorTimer = 0;
                 ; 0000 0056     unsigned long int       timestamp_rd;
                 ; 0000 0057 
                 ; 0000 0058     char                    key_press = 0;
                 ; 0000 0059 
                 ; 0000 005A     float tmpA = 0.0;
                 ; 0000 005B     float tmpB = 0.0;
                 ; 0000 005C     float tmpC = 0.0;
                 ; 0000 005D 
                 ; 0000 005E     int ivADC = 0;
                 ; 0000 005F     float ivADCFloat = 0.0;
                 ; 0000 0060     float ivVolt = 0.0;
                 ; 0000 0061     float ivVoltPlusffset = 0.0;
                 ; 0000 0062     float ivTempC = 0.0;
                 ; 0000 0063     float ivVoltzero = 0.0;
                 ; 0000 0064     float ivZero = 1.68;
                 ; 0000 0065 
                 ; 0000 0066     long viADCbuffer = 0;
                 ; 0000 0067 
                 ; 0000 0068     float ivADCbuffFloat = 0.0;
                 ; 0000 0069     int j = 0;
                 ; 0000 006A 
                 ; 0000 006B     //int i = 0;
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E     //int viADCbuffer[];
                 ; 0000 006F 
                 ; 0000 0070     struct rtc_structure st_rtc;
                 ; 0000 0071 
                 ; 0000 0072     // -------- System Initialize ----------- //
                 ; 0000 0073     do{ err = initial_system();  }while(err);
0035df 97ef      	SBIW R28,63
0035e0 97ec      	SBIW R28,60
0035e1 e38d      	LDI  R24,61
0035e2 e1aa      	LDI  R26,LOW(26)
0035e3 e0b0      	LDI  R27,HIGH(26)
0035e4 e0ea      	LDI  R30,LOW(_0x3*2)
0035e5 e0f2      	LDI  R31,HIGH(_0x3*2)
0035e6 e060      	LDI  R22,BYTE3(_0x3*2)
0035e7 940e e3a7 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+121
                 ;	last_status -> Y+119
                 ;	sensor_report_timer -> Y+99
                 ;	status_report_timer -> Y+95
                 ;	check_reset_timer -> Y+91
                 ;	check_memory_timer -> Y+87
                 ;	clear_duplicate_timer -> Y+83
                 ;	readSensorTimer -> Y+79
                 ;	timestamp_rd -> Y+75
                 ;	key_press -> Y+74
                 ;	tmpA -> Y+70
                 ;	tmpB -> Y+66
                 ;	tmpC -> Y+62
                 ;	ivADC -> Y+60
                 ;	ivADCFloat -> Y+56
                 ;	ivVolt -> Y+52
                 ;	ivVoltPlusffset -> Y+48
                 ;	ivTempC -> Y+44
                 ;	ivVoltzero -> Y+40
                 ;	ivZero -> Y+36
                 ;	viADCbuffer -> Y+32
                 ;	ivADCbuffFloat -> Y+28
                 ;	j -> Y+26
                 ;	st_rtc -> Y+0
0035e9 940e c1e1 	CALL SUBOPT_0x0
                 _0x5:
0035eb 940e 3e88 	CALL _initial_system
0035ed 018f      	MOVW R16,R30
0035ee 2e00      	MOV  R0,R16
0035ef 2a01      	OR   R0,R17
0035f0 f7d1      	BRNE _0x5
                 ; 0000 0074 
                 ; 0000 0075 
                 ; 0000 0076 //    DDRH=0xF8;
                 ; 0000 0077 //    PORTH =0x00;
                 ; 0000 0078 //    delay_ms(100);
                 ; 0000 0079 //
                 ; 0000 007A //    while(1){
                 ; 0000 007B //        #asm("wdr")
                 ; 0000 007C //        PORTH = 0xF0;
                 ; 0000 007D //        delay_ms(1000);
                 ; 0000 007E //        PORTH = 0x00;
                 ; 0000 007F //        delay_ms(1000);
                 ; 0000 0080 //    }
                 ; 0000 0081 
                 ; 0000 0082 
                 ; 0000 0083     //ETH_CONF;
                 ; 0000 0084 
                 ; 0000 0085     ETH_switchMode((unsigned char) MODE_NORM);
0035f1 e8a0      	LDI  R26,LOW(128)
0035f2 940e 5e78 	CALL _ETH_switchMode
                 ; 0000 0086     //ETH_NORM;
                 ; 0000 0087    // ETH_reset();
                 ; 0000 0088    // ETH_OFF;
                 ; 0000 0089    // delay_ms(2000);
                 ; 0000 008A    // ETH_ON;
                 ; 0000 008B 
                 ; 0000 008C     // -- alarm indicator initialize -- //
                 ; 0000 008D     buzzer_on = 0;          // -- buzzer off -- //
0035f4 98f3      	CBI  0x1E,3
                 ; 0000 008E     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
0035f5 e040     +LDI R20 , LOW ( 0 )
0035f6 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
0035f7 3042     +CPI R20 , LOW ( 2 )
0035f8 e0e0     +LDI R30 , HIGH ( 2 )
0035f9 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0035fa f44c      	BRGE _0xB
                 ; 0000 008F     {
                 ; 0000 0090         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0035fb 940e c1e6 	CALL SUBOPT_0x1
0035fd 940e c1f0 	CALL SUBOPT_0x2
0035ff 940e 4358 	CALL _IO_dout
                 ; 0000 0091     }
                +
003601 5f4f     +SUBI R20 , LOW ( - 1 )
003602 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003603 cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0092 
                 ; 0000 0093     initDataLogQueue();
003604 940e 872e 	CALL _initDataLogQueue
                 ; 0000 0094     initEventLogQueue();
003606 940e 8804 	CALL _initEventLogQueue
                 ; 0000 0095     ETH_initWaitQueue();
003608 940e 6a5b 	CALL _ETH_initWaitQueue
                 ; 0000 0096 
                 ; 0000 0097     printDebug("\r\n------ Initial Complete ------\r\n");
                +
00360a e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00360b e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
00360c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
00360d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
00360e 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0098     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
003610 e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
003611 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
003612 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
003613 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
003614 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0099 
                 ; 0000 009A 
                 ; 0000 009B     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 009C 
                 ; 0000 009D     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
003616 e020     +LDI R18 , LOW ( 0 )
003617 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
003618 3025     +CPI R18 , LOW ( 5 )
003619 e0e0     +LDI R30 , HIGH ( 5 )
00361a 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00361b f444      	BRGE _0xE
                 ; 0000 009E         if(operating_config.sensorEnable[i]){
00361c 940e c1fc 	CALL SUBOPT_0x4
00361e f011      	BREQ _0xF
                 ; 0000 009F             TIMER_setTimer(&sensor_report_timer[i], 5);
00361f 940e c203 	CALL SUBOPT_0x5
                 ; 0000 00A0         }
                 ; 0000 00A1     }
                 _0xF:
                +
003621 5f2f     +SUBI R18 , LOW ( - 1 )
003622 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003623 cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 00A2 
                 ; 0000 00A3 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 00A4 //                 -90, -20, 50,
                 ; 0000 00A5 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 00A6 //
                 ; 0000 00A7 //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 00A8 //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 00A9 //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 00AA 
                 ; 0000 00AB     TIMER_setTimer(&status_report_timer, 7);
003624 940e c213 	CALL SUBOPT_0x6
                 ; 0000 00AC     TIMER_setTimer(&check_reset_timer, 60);
003626 940e c21e 	CALL SUBOPT_0x7
                 ; 0000 00AD     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
003628 940e c229 	CALL SUBOPT_0x8
                 ; 0000 00AE 
                 ; 0000 00AF 
                 ; 0000 00B0 //    while(1){
                 ; 0000 00B1 //        #asm("wdr")
                 ; 0000 00B2 //        viADCbuffer = 0;
                 ; 0000 00B3 //        for(j=0;j<30;j++){
                 ; 0000 00B4 //           viADCbuffer += read_adc(8);
                 ; 0000 00B5 //        }
                 ; 0000 00B6 //        //printDebug("ADC[0] Temp C : %f\r\n",iAD595ADCToTemp(viADCbuffer,30));
                 ; 0000 00B7 //        iAD595ADCToTemp(viADCbuffer,30);
                 ; 0000 00B8 //        delay_ms(500);
                 ; 0000 00B9 //    }
                 ; 0000 00BA 
                 ; 0000 00BB 
                 ; 0000 00BC     while(1){
                 _0x10:
                 ; 0000 00BD 
                 ; 0000 00BE         #asm("wdr")
00362a 95a8      	wdr
                 ; 0000 00BF 
                 ; 0000 00C0         // Reset at 05.00 in every day
                 ; 0000 00C1         if(TIMER_checkTimerExceed(check_reset_timer))
                +
00362b 01de     +MOVW R26 , R28
00362c 5aa5     +SUBI R26 , LOW ( - 91 )
00362d 4fbf     +SBCI R27 , HIGH ( - 91 )
00362e 900d     +LD R0 , X +
00362f 901d     +LD R1 , X +
003630 918d     +LD R24 , X +
003631 919c     +LD R25 , X
003632 01d0     +MOVW R26 , R0
                 	__GETD2SX 91
003633 940e 41b4 	CALL _TIMER_checkTimerExceed
003635 9730      	SBIW R30,0
003636 f0c1      	BREQ _0x13
                 ; 0000 00C2         {
                 ; 0000 00C3             TIMER_setTimer(&check_reset_timer, 60);
003637 940e c21e 	CALL SUBOPT_0x7
                 ; 0000 00C4             RTC_getDateTime(&st_rtc, 7);
003639 940e c234 	CALL SUBOPT_0x9
00363b 940e c238 	CALL SUBOPT_0xA
00363d 940e 4869 	CALL _RTC_getDateTime
                 ; 0000 00C5 //            printRTC(st_rtc);
                 ; 0000 00C6             if(st_rtc.hour == 5) {
00363f 940e c23b 	CALL SUBOPT_0xB
                +
003641 30a5     +CPI R26 , LOW ( 0x5 )
003642 e0e0     +LDI R30 , HIGH ( 0x5 )
003643 07be     +CPC R27 , R30
003644 e0e0     +LDI R30 , BYTE3 ( 0x5 )
003645 078e     +CPC R24 , R30
003646 e0e0     +LDI R30 , BYTE4 ( 0x5 )
003647 079e     +CPC R25 , R30
                 	__CPD2N 0x5
003648 f431      	BRNE _0x14
                 ; 0000 00C7                 if(st_rtc.min == 0) {
003649 940e c240 	CALL SUBOPT_0xC
00364b 940e e37d 	CALL __CPD10
00364d f409      	BRNE _0x15
                 ; 0000 00C8                     while(1);
                 _0x16:
00364e cfff      	RJMP _0x16
                 ; 0000 00C9                 }
                 ; 0000 00CA             }
                 _0x15:
                 ; 0000 00CB         }
                 _0x14:
                 ; 0000 00CC 
                 ; 0000 00CD         // ----------- Received Debug Request ---------- //
                 ; 0000 00CE         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
00364f 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
003651 30e0      	CPI  R30,0
003652 f011      	BREQ _0x19
003653 940e 9e0d 	CALL _debug_req
                 ; 0000 00CF 
                 ; 0000 00D0         // ----------- On Device Key Press ------------- //
                 ; 0000 00D1         key_press = IO_keyCheck();
                 _0x19:
003655 940e 4376 	CALL _IO_keyCheck
                +
003657 01de     +MOVW R26 , R28
003658 5ba6     +SUBI R26 , LOW ( - 74 )
003659 4fbf     +SBCI R27 , HIGH ( - 74 )
00365a 93ec     +ST X , R30
                 	__PUTB1SX 74
                 ; 0000 00D2         if(key_press){
00365b 30e0      	CPI  R30,0
00365c f031      	BREQ _0x1A
                 ; 0000 00D3             MENU_processKey(key_press);
                +
00365d 01de     +MOVW R26 , R28
00365e 5ba6     +SUBI R26 , LOW ( - 74 )
00365f 4fbf     +SBCI R27 , HIGH ( - 74 )
003660 91ac     +LD R26 , X
                 	__GETB2SX 74
003661 940e 8816 	CALL _MENU_processKey
                 ; 0000 00D4         }
                 ; 0000 00D5 
                 ; 0000 00D6         // ----------- Ethernet Communication ---------- //
                 ; 0000 00D7         ETH_receive();
                 _0x1A:
003663 940e 5d2e 	CALL _ETH_receive
                 ; 0000 00D8         ETH_retransmit();
003665 940e 5774 	CALL _ETH_retransmit
                 ; 0000 00D9 
                 ; 0000 00DA         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00DB         if(is_properties_config_update){
003667 91e0 10f6 	LDS  R30,_is_properties_config_update
003669 30e0      	CPI  R30,0
00366a f011      	BREQ _0x1B
                 ; 0000 00DC             getPropertiesConfig(&properties_config);
00366b 940e c245 	CALL SUBOPT_0xD
                 ; 0000 00DD             is_properties_config_update = 0;
                 ; 0000 00DE         }
                 ; 0000 00DF 
                 ; 0000 00E0         if(is_operating_config_update){
                 _0x1B:
00366d 91e0 10f7 	LDS  R30,_is_operating_config_update
00366f 30e0      	CPI  R30,0
003670 f011      	BREQ _0x1C
                 ; 0000 00E1             getOperatingConfig(&operating_config);
003671 940e c24d 	CALL SUBOPT_0xE
                 ; 0000 00E2             is_operating_config_update = 0;
                 ; 0000 00E3         }
                 ; 0000 00E4 
                 ; 0000 00E5         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
003673 e020     +LDI R18 , LOW ( 0 )
003674 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
003675 3025     +CPI R18 , LOW ( 5 )
003676 e0e0     +LDI R30 , HIGH ( 5 )
003677 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003678 f504      	BRGE _0x1F
                 ; 0000 00E6             if(is_sensor_config_update[i]){
003679 efa8      	LDI  R26,LOW(_is_sensor_config_update)
00367a e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
00367b 940e c255 	CALL SUBOPT_0xF
00367d f0c1      	BREQ _0x20
                 ; 0000 00E7                 err = getSensorConfig(i,&sensor_config[i]);
00367e 933a      	ST   -Y,R19
00367f 932a      	ST   -Y,R18
003680 940e c25a 	CALL SUBOPT_0x10
003682 940e 4a20 	CALL _getSensorConfig
003684 018f      	MOVW R16,R30
                 ; 0000 00E8                 if(err < 0){
003685 2311      	TST  R17
003686 f44a      	BRPL _0x21
                 ; 0000 00E9                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
003687 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
003688 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
003689 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
00368a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
00368b 940e c263 	CALL SUBOPT_0x11
00368d 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 00EA                     continue;
00368f c006      	RJMP _0x1D
                 ; 0000 00EB                 }
                 ; 0000 00EC                 is_sensor_config_update[i] = 0;
                 _0x21:
003690 efa8      	LDI  R26,LOW(_is_sensor_config_update)
003691 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
003692 940e c270 	CALL SUBOPT_0x13
                 ; 0000 00ED                 TIMER_setTimer(&sensor_report_timer[i], 5);
003694 940e c203 	CALL SUBOPT_0x5
                 ; 0000 00EE             }
                 ; 0000 00EF         }
                 _0x20:
                 _0x1D:
                +
003696 5f2f     +SUBI R18 , LOW ( - 1 )
003697 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003698 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00F0 
                 ; 0000 00F1         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
003699 91e0 1112 	LDS  R30,_is_buzzer_config_update
00369b 30e0      	CPI  R30,0
00369c f011      	BREQ _0x22
                 ; 0000 00F2             getBuzzerConfig(&buzz_config);
00369d 940e c275 	CALL SUBOPT_0x14
                 ; 0000 00F3             is_buzzer_config_update = 0;
                 ; 0000 00F4         }
                 ; 0000 00F5 
                 ; 0000 00F6         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
00369f e020     +LDI R18 , LOW ( 0 )
0036a0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
0036a1 3022     +CPI R18 , LOW ( 2 )
0036a2 e0e0     +LDI R30 , HIGH ( 2 )
0036a3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0036a4 f49c      	BRGE _0x25
                 ; 0000 00F7             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
0036a5 efad      	LDI  R26,LOW(_is_din_config_update)
0036a6 e1b0      	LDI  R27,HIGH(_is_din_config_update)
0036a7 940e c255 	CALL SUBOPT_0xF
0036a9 f059      	BREQ _0x26
                 ; 0000 00F8                 getAuxDinConfig(i,&din_config[i]);
0036aa 933a      	ST   -Y,R19
0036ab 932a      	ST   -Y,R18
0036ac 940e c27d 	CALL SUBOPT_0x15
0036ae 01df      	MOVW R26,R30
0036af 940e 4b08 	CALL _getAuxDinConfig
                 ; 0000 00F9                 is_din_config_update[i] = 0;
0036b1 efad      	LDI  R26,LOW(_is_din_config_update)
0036b2 e1b0      	LDI  R27,HIGH(_is_din_config_update)
0036b3 940e c270 	CALL SUBOPT_0x13
                 ; 0000 00FA             }
                 ; 0000 00FB         }
                 _0x26:
                +
0036b5 5f2f     +SUBI R18 , LOW ( - 1 )
0036b6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036b7 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00FC 
                 ; 0000 00FD         for(i=0;i<USE_DOUT;i++){
                +
0036b8 e020     +LDI R18 , LOW ( 0 )
0036b9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
0036ba 3022     +CPI R18 , LOW ( 2 )
0036bb e0e0     +LDI R30 , HIGH ( 2 )
0036bc 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0036bd f49c      	BRGE _0x29
                 ; 0000 00FE             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
0036be e0ad      	LDI  R26,LOW(_is_dout_config_update)
0036bf e1b1      	LDI  R27,HIGH(_is_dout_config_update)
0036c0 940e c255 	CALL SUBOPT_0xF
0036c2 f059      	BREQ _0x2A
                 ; 0000 00FF                 getAuxDoutConfig(i,&dout_config[i]);
0036c3 933a      	ST   -Y,R19
0036c4 932a      	ST   -Y,R18
                +
0036c5 e2a6     +LDI R26 , 38
0036c6 9fa2     +MUL R26 , R18
0036c7 01f0     +MOVW R30 , R0
0036c8 9fa3     +MUL R26 , R19
0036c9 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
0036ca 940e c285 	CALL SUBOPT_0x16
                 ; 0000 0100                 is_dout_config_update[i] = 0;
0036cc 940e c270 	CALL SUBOPT_0x13
                 ; 0000 0101             }
                 ; 0000 0102         }
                 _0x2A:
                +
0036ce 5f2f     +SUBI R18 , LOW ( - 1 )
0036cf 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036d0 cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 0103 
                 ; 0000 0104         if(is_status_config_update){
0036d1 91e0 1113 	LDS  R30,_is_status_config_update
0036d3 30e0      	CPI  R30,0
0036d4 f021      	BREQ _0x2B
                 ; 0000 0105             getStatusReportConfig(&status_config);
0036d5 940e c28d 	CALL SUBOPT_0x17
                 ; 0000 0106             is_status_config_update = 0;
                 ; 0000 0107 
                 ; 0000 0108             TIMER_setTimer(&status_report_timer, 7);
0036d7 940e c213 	CALL SUBOPT_0x6
                 ; 0000 0109         }
                 ; 0000 010A 
                 ; 0000 010B         if(is_env_config_update){
                 _0x2B:
0036d9 91e0 1114 	LDS  R30,_is_env_config_update
0036db 30e0      	CPI  R30,0
0036dc f011      	BREQ _0x2C
                 ; 0000 010C             getEnvAlarmConfig(&env_config);
0036dd 940e c295 	CALL SUBOPT_0x18
                 ; 0000 010D             is_env_config_update = 0;
                 ; 0000 010E         }
                 ; 0000 010F 
                 ; 0000 0110         /*bongkot test*/
                 ; 0000 0111 //        operating_config.deviceEnable = 1;
                 ; 0000 0112 //        operating_config.sensorEnable[0] = 1;
                 ; 0000 0113 //        operating_config.sensorEnable[1] = 0;
                 ; 0000 0114 //        operating_config.sensorEnable[2] = 0;
                 ; 0000 0115 //        operating_config.sensorEnable[3] = 0;
                 ; 0000 0116 //        operating_config.sensorEnable[4] = 0;
                 ; 0000 0117 
                 ; 0000 0118         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
0036df 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0036e1 30e0      	CPI  R30,0
0036e2 f411      	BRNE PC+3
0036e3 940c 38ed 	JMP _0x2D
                 ; 0000 0119         {
                 ; 0000 011A             // -------------- Sensor Association -------------- //
                 ; 0000 011B             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0036e5 e020     +LDI R18 , LOW ( 0 )
0036e6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
0036e7 3025     +CPI R18 , LOW ( 5 )
0036e8 e0e0     +LDI R30 , HIGH ( 5 )
0036e9 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0036ea f014      	BRLT PC+3
0036eb 940c 3732 	JMP _0x30
                 ; 0000 011C             {
                 ; 0000 011D                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
0036ed 940e c1fc 	CALL SUBOPT_0x4
0036ef f411      	BRNE PC+3
0036f0 940c 372f 	JMP _0x31
                 ; 0000 011E                 {
                 ; 0000 011F                     //** test **//
                 ; 0000 0120 //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 0121 //                    {
                 ; 0000 0122 //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 0123 //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 0124 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0125 //                    }
                 ; 0000 0126                     //-- test --//
                 ; 0000 0127 
                 ; 0000 0128                     //printDebug("<main> sensorRead\r\n");
                 ; 0000 0129                     err = sensorRead(i,&sensor[i]);
0036f2 940e c29d 	CALL SUBOPT_0x19
0036f4 940e 6c40 	CALL _sensorRead
0036f6 018f      	MOVW R16,R30
                 ; 0000 012A                     if(err < 0)                                 // . sensor value error . //
0036f7 2311      	TST  R17
0036f8 f1b2      	BRMI _0x2E
                 ; 0000 012B                     {
                 ; 0000 012C                         continue;
                 ; 0000 012D                     }
                 ; 0000 012E                     else                                        // . sensor value valid . //
                 ; 0000 012F                     {
                 ; 0000 0130                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 0131                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
0036f9 940e c2a8 	CALL SUBOPT_0x1A
0036fb 940e c2af 	CALL SUBOPT_0x1B
0036fd 940e c2b4 	CALL SUBOPT_0x1C
0036ff f179      	BREQ _0x34
                 ; 0000 0132                         {
                 ; 0000 0133                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
003700 940e c2a8 	CALL SUBOPT_0x1A
003702 940e c2ba 	CALL SUBOPT_0x1D
003704 940e c25a 	CALL SUBOPT_0x10
003706 940e c2bf 	CALL SUBOPT_0x1E
003708 940e c2c4 	CALL SUBOPT_0x1F
                 ; 0000 0134 
                 ; 0000 0135                             timestamp_rd = DS1672_read();
00370a 940e 453c 	CALL _DS1672_read
                +
00370c 01de     +MOVW R26 , R28
00370d 5ba5     +SUBI R26 , LOW ( - 75 )
00370e 4fbf     +SBCI R27 , HIGH ( - 75 )
00370f 93ed     +ST X + , R30
003710 93fd     +ST X + , R31
003711 936d     +ST X + , R22
003712 937c     +ST X , R23
                 	__PUTD1SX 75
                 ; 0000 0136                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
003713 940e e324 	CALL __PUTPARD1
003715 940e c29d 	CALL SUBOPT_0x19
003717 940e e2f4 	CALL __GETD1P
003719 01df      	MOVW R26,R30
00371a 01cb      	MOVW R24,R22
00371b 940e 74b6 	CALL _addDataQueue
00371d 018f      	MOVW R16,R30
                 ; 0000 0137                             if(err<0){
00371e 2311      	TST  R17
00371f f47a      	BRPL _0x35
                 ; 0000 0138                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
003720 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
003721 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
003722 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
003723 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
003724 940e c263 	CALL SUBOPT_0x11
                +
003726 e0a5     +LDI R26 , 5
003727 9fa2     +MUL R26 , R18
003728 01f0     +MOVW R30 , R0
003729 9fa3     +MUL R26 , R19
00372a 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00372b 940e c2c8 	CALL SUBOPT_0x20
00372d 940e c2ce 	CALL SUBOPT_0x21
                 ; 0000 0139                                 continue;   // -- continue other sensor
                 ; 0000 013A                             }
                 ; 0000 013B                         }
                 _0x35:
                 ; 0000 013C                         else{
                 _0x34:
                 ; 0000 013D                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 013E                         }
                 ; 0000 013F                     }
                 ; 0000 0140 
                 ; 0000 0141                 }
                 ; 0000 0142                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 0143                 {
                 ; 0000 0144                 }
                 ; 0000 0145             } // -- iterate each probe -- //
                 _0x2E:
                +
00372f 5f2f     +SUBI R18 , LOW ( - 1 )
003730 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003731 cfb5      	RJMP _0x2F
                 _0x30:
                 ; 0000 0146 
                 ; 0000 0147             #asm("wdr")
003732 95a8      	wdr
                 ; 0000 0148             // --------------- Status Management --------------- //
                 ; 0000 0149            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 014A             last_status = updateStatus();
003733 d22a      	RCALL _updateStatus
                +
003734 01de     +MOVW R26 , R28
003735 58a9     +SUBI R26 , LOW ( - 119 )
003736 4fbf     +SBCI R27 , HIGH ( - 119 )
003737 93ed     +ST X + , R30
003738 93fc     +ST X , R31
                 	__PUTW1SX 119
                 ; 0000 014B 
                 ; 0000 014C             // --------------- Alarm Management --------------- //
                 ; 0000 014D             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
003739 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
00373b 30e0      	CPI  R30,0
00373c f411      	BRNE PC+3
00373d 940c 37b2 	JMP _0x38
                 ; 0000 014E             {
                 ; 0000 014F                 // -- check alarm all -- //
                 ; 0000 0150                 if(last_status < 0)                             // .. status update falied .. //
                +
00373f 01de     +MOVW R26 , R28
003740 58a8     +SUBI R26 , LOW ( - 120 )
003741 4fbf     +SBCI R27 , HIGH ( - 120 )
003742 91ac     +LD R26 , X
                 	__GETB2SX 120
003743 23aa      	TST  R26
003744 f43a      	BRPL _0x39
                 ; 0000 0151                 {
                 ; 0000 0152                     printDebug("<main> updateStatus() failed\r\n");
                +
003745 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
003746 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
003747 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
003748 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
003749 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0153                 }
                 ; 0000 0154                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
00374b c062      	RJMP _0x3A
                 _0x39:
                +
00374c 01de     +MOVW R26 , R28
00374d 58a9     +SUBI R26 , LOW ( - 119 )
00374e 4fbf     +SBCI R27 , HIGH ( - 119 )
00374f 900d     +LD R0 , X +
003750 91bc     +LD R27 , X
003751 2da0     +MOV R26 , R0
                 	__GETW2SX 119
003752 940e e381 	CALL __CPW02
003754 f424      	BRGE _0x3C
003755 91e0 148b 	LDS  R30,_muteMode
003757 30e0      	CPI  R30,0
003758 f009      	BREQ _0x3D
                 _0x3C:
003759 c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0155                 {
                 ; 0000 0156                     // -- Buzzer Alarm -- //
                 ; 0000 0157                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
00375a 91a0 133d 	LDS  R26,_buzz_config
00375c 30a1      	CPI  R26,LOW(0x1)
00375d f471      	BRNE _0x3E
                 ; 0000 0158                     {
                 ; 0000 0159                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 015A                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
00375e e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
00375f e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
003760 93fa      	ST   -Y,R31
003761 93ea      	ST   -Y,R30
                +
003762 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
003764 27bb      	CLR  R27
003765 940e c2d5 	CALL SUBOPT_0x22
                 ; 0000 015B                         if(res){
003767 f011      	BREQ _0x3F
                 ; 0000 015C                             buzzer_on = 1;          // -- buzzer on -- //
003768 9af3      	SBI  0x1E,3
                 ; 0000 015D                         }
                 ; 0000 015E                         else{
003769 c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 015F                             buzzer_on = 0;          // -- buzzer off -- //
00376a 98f3      	CBI  0x1E,3
                 ; 0000 0160                         }
                 _0x42:
                 ; 0000 0161                     }
                 ; 0000 0162                     else                                        // -- buzzer disabled -- //
00376b c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 0163                     {
                 ; 0000 0164                         buzzer_on = 0;                  // -- buzzer off -- //
00376c 98f3      	CBI  0x1E,3
                 ; 0000 0165                     }
                 _0x45:
                 ; 0000 0166 
                 ; 0000 0167                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0168                     for(k=0;k<USE_DOUT;k++)
                +
00376d e040     +LDI R20 , LOW ( 0 )
00376e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
00376f 3042     +CPI R20 , LOW ( 2 )
003770 e0e0     +LDI R30 , HIGH ( 2 )
003771 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003772 f554      	BRGE _0x4A
                 ; 0000 0169                     {
                 ; 0000 016A                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
003773 940e c2de 	CALL SUBOPT_0x23
003775 58e1      	SUBI R30,LOW(-_dout_config)
003776 4efd      	SBCI R31,HIGH(-_dout_config)
003777 81a0      	LD   R26,Z
003778 30a1      	CPI  R26,LOW(0x1)
003779 f4d1      	BRNE _0x4B
                 ; 0000 016B                         {
                 ; 0000 016C                             // -- check alarm Digital Output -- //
                 ; 0000 016D //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 016E                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
00377a 940e c2de 	CALL SUBOPT_0x23
                +
00377c 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
00377d 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
00377e 93fa      	ST   -Y,R31
00377f 93ea      	ST   -Y,R30
003780 940e c2de 	CALL SUBOPT_0x23
                +
003782 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
003783 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
003784 81a0      	LD   R26,Z
003785 e0b0      	LDI  R27,0
003786 940e c2d5 	CALL SUBOPT_0x22
                 ; 0000 016F                             if(res){
003788 f021      	BREQ _0x4C
                 ; 0000 0170                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
003789 940e c1e6 	CALL SUBOPT_0x1
00378b 81a0      	LD   R26,Z
00378c c004      	RJMP _0x133
                 ; 0000 0171                             }
                 ; 0000 0172                             else{
                 _0x4C:
                 ; 0000 0173                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00378d 940e c1e6 	CALL SUBOPT_0x1
00378f 940e c1f0 	CALL SUBOPT_0x2
                 _0x133:
003791 940e 4358 	CALL _IO_dout
                 ; 0000 0174                             }
                 ; 0000 0175                         }
                 ; 0000 0176                         else                                                // -- digital output disabled -- //
003793 c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0177                         {
                 ; 0000 0178                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
003794 940e c1e6 	CALL SUBOPT_0x1
003796 940e c1f0 	CALL SUBOPT_0x2
003798 940e 4358 	CALL _IO_dout
                 ; 0000 0179                         }
                 _0x4E:
                 ; 0000 017A                     }
                +
00379a 5f4f     +SUBI R20 , LOW ( - 1 )
00379b 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00379c cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 017B                 }
                 ; 0000 017C                 else                                            // .. no event .. //
00379d c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 017D                 {
                 ; 0000 017E                     // -- no alarm -- // ^_^
                 ; 0000 017F                     buzzer_on = 0;                  // -- buzzer off -- //
00379e 98f3      	CBI  0x1E,3
                 ; 0000 0180                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
00379f e040     +LDI R20 , LOW ( 0 )
0037a0 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
0037a1 3042     +CPI R20 , LOW ( 2 )
0037a2 e0e0     +LDI R30 , HIGH ( 2 )
0037a3 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0037a4 f44c      	BRGE _0x54
                 ; 0000 0181                     {
                 ; 0000 0182                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0037a5 940e c1e6 	CALL SUBOPT_0x1
0037a7 940e c1f0 	CALL SUBOPT_0x2
0037a9 940e 4358 	CALL _IO_dout
                 ; 0000 0183                     }
                +
0037ab 5f4f     +SUBI R20 , LOW ( - 1 )
0037ac 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037ad cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0184                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0185 
                 ; 0000 0186                 res = eventCapture();                           // -- send event packet if needed -- //
0037ae d224      	RCALL _eventCapture
0037af 940e c2e4 	CALL SUBOPT_0x24
                 ; 0000 0187             }
                 ; 0000 0188             else                                                // .. alarm disable .. //
0037b1 c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0189             {
                 ; 0000 018A             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 018B                 // -- no alarm -- // ;-P
                 ; 0000 018C                 buzzer_on = 0;                      // -- buzzer off -- //
0037b2 98f3      	CBI  0x1E,3
                 ; 0000 018D                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
0037b3 e040     +LDI R20 , LOW ( 0 )
0037b4 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
0037b5 3042     +CPI R20 , LOW ( 2 )
0037b6 e0e0     +LDI R30 , HIGH ( 2 )
0037b7 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0037b8 f44c      	BRGE _0x5A
                 ; 0000 018E                 {
                 ; 0000 018F                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0037b9 940e c1e6 	CALL SUBOPT_0x1
0037bb 940e c1f0 	CALL SUBOPT_0x2
0037bd 940e 4358 	CALL _IO_dout
                 ; 0000 0190                 }
                +
0037bf 5f4f     +SUBI R20 , LOW ( - 1 )
0037c0 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037c1 cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 0191             }
                 _0x55:
                 ; 0000 0192 
                 ; 0000 0193             // -- check mute expired -- //
                 ; 0000 0194             if(muteMode){
0037c2 91e0 148b 	LDS  R30,_muteMode
0037c4 30e0      	CPI  R30,0
0037c5 f059      	BREQ _0x5B
                 ; 0000 0195                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0196                 if(ALARM_checkMuteExpired()){
0037c6 940e 7daa 	CALL _ALARM_checkMuteExpired
0037c8 9730      	SBIW R30,0
0037c9 f039      	BREQ _0x5C
                 ; 0000 0197                     muteAlarmExpired = 0xFFFFFFFF;
0037ca 940e c2ea 	CALL SUBOPT_0x25
0037cc 940e c2ef 	CALL SUBOPT_0x26
                 ; 0000 0198                     muteMode = 0;
0037ce e0e0      	LDI  R30,LOW(0)
0037cf 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0199                 }
                 ; 0000 019A             }
                 _0x5C:
                 ; 0000 019B 
                 ; 0000 019C             // ---------------- Operating Mode ---------------- //
                 ; 0000 019D //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 019E 
                 ; 0000 019F             /*bongkot test*/
                 ; 0000 01A0             operating_config.mode == MODE_REALTIME;
                 _0x5B:
0037d1 91a0 11b6 	LDS  R26,_operating_config
0037d3 e1e0      	LDI  R30,LOW(16)
0037d4 940e e20b 	CALL __EQB12
                 ; 0000 01A1             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
0037d6 31a0      	CPI  R26,LOW(0x10)
0037d7 f011      	BREQ PC+3
0037d8 940c 3824 	JMP _0x5D
                 ; 0000 01A2             {
                 ; 0000 01A3                 if(!duplicateListClear)
0037da 91e0 1425 	LDS  R30,_duplicateListClear
0037dc 30e0      	CPI  R30,0
0037dd f4f1      	BRNE _0x5E
                 ; 0000 01A4                 {
                 ; 0000 01A5                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
0037de 01de     +MOVW R26 , R28
0037df 5aad     +SUBI R26 , LOW ( - 83 )
0037e0 4fbf     +SBCI R27 , HIGH ( - 83 )
0037e1 900d     +LD R0 , X +
0037e2 901d     +LD R1 , X +
0037e3 918d     +LD R24 , X +
0037e4 919c     +LD R25 , X
0037e5 01d0     +MOVW R26 , R0
                 	__GETD2SX 83
0037e6 940e 41b4 	CALL _TIMER_checkTimerExceed
0037e8 940e c2e4 	CALL SUBOPT_0x24
                 ; 0000 01A6                     if(res != 0){
                +
0037ea 01fe     +MOVW R30 , R28
0037eb 58e7     +SUBI R30 , LOW ( - 121 )
0037ec 4fff     +SBCI R31 , HIGH ( - 121 )
0037ed 9001     +LD R0 , Z +
0037ee 81f0     +LD R31 , Z
0037ef 2de0     +MOV R30 , R0
                 	__GETW1SX 121
0037f0 9730      	SBIW R30,0
0037f1 f039      	BREQ _0x5F
                 ; 0000 01A7                         TIMER_setTimer(&clear_duplicate_timer, 10);
0037f2 01fe      	MOVW R30,R28
0037f3 5aed      	SUBI R30,LOW(-(83))
0037f4 4fff      	SBCI R31,HIGH(-(83))
0037f5 940e c2f8 	CALL SUBOPT_0x27
                 ; 0000 01A8                         ETH_clearDuplicateRequestCmd();
0037f7 940e 5688 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 01A9                     }
                 ; 0000 01AA 
                 ; 0000 01AB                     sensorDataSave();
                 _0x5F:
0037f9 d449      	RCALL _sensorDataSave
                 ; 0000 01AC                     eventSave();
0037fa d4cc      	RCALL _eventSave
                 ; 0000 01AD                 }
                 ; 0000 01AE                 else
0037fb c027      	RJMP _0x60
                 _0x5E:
                 ; 0000 01AF                 {
                 ; 0000 01B0                     if(TIMER_checkTimerExceed(status_report_timer))
                +
0037fc 01de     +MOVW R26 , R28
0037fd 5aa1     +SUBI R26 , LOW ( - 95 )
0037fe 4fbf     +SBCI R27 , HIGH ( - 95 )
0037ff 900d     +LD R0 , X +
003800 901d     +LD R1 , X +
003801 918d     +LD R24 , X +
003802 919c     +LD R25 , X
003803 01d0     +MOVW R26 , R0
                 	__GETD2SX 95
003804 940e 41b4 	CALL _TIMER_checkTimerExceed
003806 9730      	SBIW R30,0
003807 f071      	BREQ _0x61
                 ; 0000 01B1                     {
                 ; 0000 01B2                         TIMER_setTimer(&status_report_timer, status_config.intv);
003808 01fe      	MOVW R30,R28
003809 5ae1      	SUBI R30,LOW(-(95))
00380a 4fff      	SBCI R31,HIGH(-(95))
00380b 93fa      	ST   -Y,R31
00380c 93ea      	ST   -Y,R30
                +
00380d 91a0 1363+LDS R26 , _status_config + ( 1 )
00380f 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
003811 2788      	CLR  R24
003812 2799      	CLR  R25
003813 940e 41ca 	CALL _TIMER_setTimer
                 ; 0000 01B3 
                 ; 0000 01B4                         statusReport();
003815 d2e9      	RCALL _statusReport
                 ; 0000 01B5                     }
                 ; 0000 01B6 
                 ; 0000 01B7                     // -- report log only when no realtime data not ready -- //
                 ; 0000 01B8                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
003816 d389      	RCALL _sensorDataReport
003817 9730      	SBIW R30,0
003818 f441      	BRNE _0x63
003819 d3da      	RCALL _eventReport
00381a 9730      	SBIW R30,0
00381b f429      	BRNE _0x63
00381c 940e c300 	CALL SUBOPT_0x28
00381e 940e e389 	CALL __CPD02
003820 f008      	BRLO _0x64
                 _0x63:
003821 c001      	RJMP _0x62
                 _0x64:
                 ; 0000 01B9                     {
                 ; 0000 01BA                         logReport();
003822 d52c      	RCALL _logReport
                 ; 0000 01BB                     }
                 ; 0000 01BC                 }
                 _0x62:
                 _0x60:
                 ; 0000 01BD             }
                 ; 0000 01BE             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
003823 c011      	RJMP _0x65
                 _0x5D:
003824 91a0 11b6 	LDS  R26,_operating_config
003826 32a0      	CPI  R26,LOW(0x20)
003827 f419      	BRNE _0x66
                 ; 0000 01BF             {
                 ; 0000 01C0                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 01C1                 sensorDataSave();
003828 d41a      	RCALL _sensorDataSave
                 ; 0000 01C2               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 01C3                 eventSave();
003829 d49d      	RCALL _eventSave
                 ; 0000 01C4             }
                 ; 0000 01C5             else                                                // .. unknown mode .. //
00382a c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 01C6             {
                 ; 0000 01C7                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
00382b e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
00382c e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
00382d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
00382e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
00382f 940e e324 	CALL __PUTPARD1
003831 91e0 11b6 	LDS  R30,_operating_config
003833 940e c309 	CALL SUBOPT_0x29
                 ; 0000 01C8             }
                 _0x67:
                 _0x65:
                 ; 0000 01C9 
                 ; 0000 01CA             #asm("wdr")
003835 95a8      	wdr
                 ; 0000 01CB             if(timer_1sec_flag)
003836 9bf2      	SBIS 0x1E,2
003837 c0b4      	RJMP _0x68
                 ; 0000 01CC             {
                 ; 0000 01CD               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 01CE                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
003838 01de     +MOVW R26 , R28
003839 5aa9     +SUBI R26 , LOW ( - 87 )
00383a 4fbf     +SBCI R27 , HIGH ( - 87 )
00383b 900d     +LD R0 , X +
00383c 901d     +LD R1 , X +
00383d 918d     +LD R24 , X +
00383e 919c     +LD R25 , X
00383f 01d0     +MOVW R26 , R0
                 	__GETD2SX 87
003840 940e 41b4 	CALL _TIMER_checkTimerExceed
003842 9730      	SBIW R30,0
003843 f021      	BREQ _0x6A
003844 91a0 1482 	LDS  R26,_memoryStatus
003846 30a1      	CPI  R26,LOW(0x1)
003847 f409      	BRNE _0x6B
                 _0x6A:
003848 c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 01CF                 {
                 ; 0000 01D0               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 01D1                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
003849 940e c229 	CALL SUBOPT_0x8
                 ; 0000 01D2 
                 ; 0000 01D3                     res = SD_readMemoryRemain(&sdFreeSpace);
00384b e6ab      	LDI  R26,LOW(_sdFreeSpace)
00384c e1b4      	LDI  R27,HIGH(_sdFreeSpace)
00384d 940e 8134 	CALL _SD_readMemoryRemain
00384f 940e c2e4 	CALL SUBOPT_0x24
                 ; 0000 01D4                     if(res < 0){
                +
003851 01de     +MOVW R26 , R28
003852 58a6     +SUBI R26 , LOW ( - 122 )
003853 4fbf     +SBCI R27 , HIGH ( - 122 )
003854 91ac     +LD R26 , X
                 	__GETB2SX 122
003855 23aa      	TST  R26
003856 f432      	BRPL _0x6C
                 ; 0000 01D5                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
003857 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
003858 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
003859 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
00385a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
00385b 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 01D6                     }
                 ; 0000 01D7                 }
                 _0x6C:
                 ; 0000 01D8 
                 ; 0000 01D9                 if(currentPage == P_MONITOR)
                 _0x69:
00385d 91e0 14df 	LDS  R30,_currentPage
00385f 30e0      	CPI  R30,0
003860 f569      	BRNE _0x6D
                 ; 0000 01DA                 {
                 ; 0000 01DB               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 01DC                     OLED_showSensorValue();
003861 940e 7e36 	CALL _OLED_showSensorValue
                 ; 0000 01DD 
                 ; 0000 01DE                     for(i=0;i<2;i++){
                +
003863 e020     +LDI R18 , LOW ( 0 )
003864 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
003865 3022     +CPI R18 , LOW ( 2 )
003866 e0e0     +LDI R30 , HIGH ( 2 )
003867 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003868 f454      	BRGE _0x70
                 ; 0000 01DF                         OLED_showInputStatus(i,dinStatus[i]);
003869 933a      	ST   -Y,R19
00386a 932a      	ST   -Y,R18
00386b 940e c30f 	CALL SUBOPT_0x2A
00386d 91ac      	LD   R26,X
00386e 940e 7ef7 	CALL _OLED_showInputStatus
                 ; 0000 01E0                     }
                +
003870 5f2f     +SUBI R18 , LOW ( - 1 )
003871 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003872 cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 01E1 
                 ; 0000 01E2                     for(i=0;i<2;i++){
                +
003873 e020     +LDI R18 , LOW ( 0 )
003874 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
003875 3022     +CPI R18 , LOW ( 2 )
003876 e0e0     +LDI R30 , HIGH ( 2 )
003877 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003878 f464      	BRGE _0x73
                 ; 0000 01E3                         OLED_showOutputStatus(i,doutStatus[i]);
003879 933a      	ST   -Y,R19
00387a 932a      	ST   -Y,R18
00387b e7ae      	LDI  R26,LOW(_doutStatus)
00387c e1b4      	LDI  R27,HIGH(_doutStatus)
00387d 0fa2      	ADD  R26,R18
00387e 1fb3      	ADC  R27,R19
00387f 91ac      	LD   R26,X
003880 940e 7f1c 	CALL _OLED_showOutputStatus
                 ; 0000 01E4                     }
                +
003882 5f2f     +SUBI R18 , LOW ( - 1 )
003883 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003884 cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01E5 
                 ; 0000 01E6                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01E7                     OLED_showDateTime(properties_config.timeZone);
                +
003885 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
003887 e0b0      	LDI  R27,0
003888 fda7      	SBRC R26,7
003889 efbf      	SER  R27
00388a 940e 7e12 	CALL _OLED_showDateTime
                 ; 0000 01E8 
                 ; 0000 01E9               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01EA                     OLED_showAlarmStatus();
00388c 940e 7f75 	CALL _OLED_showAlarmStatus
                 ; 0000 01EB                 }
                 ; 0000 01EC 
                 ; 0000 01ED               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01EE                 switch(powerSrcStatus){
                 _0x6D:
00388e 91e0 147a 	LDS  R30,_powerSrcStatus
003890 940e c314 	CALL SUBOPT_0x2B
                 ; 0000 01EF                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
003892 f439      	BRNE _0x77
003893 e0e0      	LDI  R30,LOW(0)
003894 93ea      	ST   -Y,R30
003895 940e c317 	CALL SUBOPT_0x2C
003897 940e 7eb4 	CALL _OLED_showPowerStatus
003899 c00a      	RJMP _0x76
                 ; 0000 01F0                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
00389a 30e1      	CPI  R30,LOW(0x1)
00389b e0a0      	LDI  R26,HIGH(0x1)
00389c 07fa      	CPC  R31,R26
00389d f431      	BRNE _0x79
00389e e0e1      	LDI  R30,LOW(1)
00389f 93ea      	ST   -Y,R30
0038a0 940e c31c 	CALL SUBOPT_0x2D
0038a2 940e 7eb4 	CALL _OLED_showPowerStatus
                 ; 0000 01F1                     default             :   break;
                 _0x79:
                 ; 0000 01F2                 }
                 _0x76:
                 ; 0000 01F3 
                 ; 0000 01F4             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01F5                 switch(serverCommStatus){
0038a4 91e0 1480 	LDS  R30,_serverCommStatus
0038a6 940e c314 	CALL SUBOPT_0x2B
                 ; 0000 01F6                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
0038a8 f411      	BRNE _0x7D
0038a9 e0a2      	LDI  R26,LOW(2)
0038aa c007      	RJMP _0x134
                 ; 0000 01F7                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
0038ab 30e2      	CPI  R30,LOW(0x2)
0038ac e0a0      	LDI  R26,HIGH(0x2)
0038ad 07fa      	CPC  R31,R26
0038ae f411      	BRNE _0x7F
0038af e0a1      	LDI  R26,LOW(1)
0038b0 c001      	RJMP _0x134
                 ; 0000 01F8                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
0038b1 e0a0      	LDI  R26,LOW(0)
                 _0x134:
0038b2 940e 7f4d 	CALL _OLED_showServerCommStatus
                 ; 0000 01F9                 }
                 ; 0000 01FA 
                 ; 0000 01FB             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01FC                 switch(lanStatus){
0038b4 91e0 1481 	LDS  R30,_lanStatus
0038b6 940e c314 	CALL SUBOPT_0x2B
                 ; 0000 01FD                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
0038b8 f421      	BRNE _0x83
0038b9 e0a1      	LDI  R26,LOW(1)
0038ba 940e 7f57 	CALL _OLED_showLanStatus
0038bc c007      	RJMP _0x82
                 ; 0000 01FE                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
0038bd 30e1      	CPI  R30,LOW(0x1)
0038be e0a0      	LDI  R26,HIGH(0x1)
0038bf 07fa      	CPC  R31,R26
0038c0 f419      	BRNE _0x85
0038c1 e0a0      	LDI  R26,LOW(0)
0038c2 940e 7f57 	CALL _OLED_showLanStatus
                 ; 0000 01FF                     default                     :   break;
                 _0x85:
                 ; 0000 0200                 }
                 _0x82:
                 ; 0000 0201 
                 ; 0000 0202             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 0203                 if(muteMode){
0038c4 91e0 148b 	LDS  R30,_muteMode
0038c6 30e0      	CPI  R30,0
0038c7 f011      	BREQ _0x86
                 ; 0000 0204                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
0038c8 e0a2      	LDI  R26,LOW(2)
0038c9 c007      	RJMP _0x135
                 ; 0000 0205                 }
                 ; 0000 0206                 else if(buzz_config.enable == 0x01){
                 _0x86:
0038ca 91a0 133d 	LDS  R26,_buzz_config
0038cc 30a1      	CPI  R26,LOW(0x1)
0038cd f411      	BRNE _0x88
                 ; 0000 0207                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
0038ce e0a0      	LDI  R26,LOW(0)
0038cf c001      	RJMP _0x135
                 ; 0000 0208                 }
                 ; 0000 0209                 else{
                 _0x88:
                 ; 0000 020A                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
0038d0 e0a1      	LDI  R26,LOW(1)
                 _0x135:
0038d1 940e 7f61 	CALL _OLED_showBuzzerStatus
                 ; 0000 020B                 }
                 ; 0000 020C 
                 ; 0000 020D            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 020E                 switch(memoryStatus){
0038d3 91e0 1482 	LDS  R30,_memoryStatus
0038d5 940e c314 	CALL SUBOPT_0x2B
                 ; 0000 020F                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
0038d7 f421      	BRNE _0x8D
0038d8 e0a0      	LDI  R26,LOW(0)
0038d9 940e 7f6b 	CALL _OLED_showMemoryStatus
0038db c00f      	RJMP _0x8C
                 ; 0000 0210                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
0038dc 30e1      	CPI  R30,LOW(0x1)
0038dd e0a0      	LDI  R26,HIGH(0x1)
0038de 07fa      	CPC  R31,R26
0038df f421      	BRNE _0x8E
0038e0 e0a1      	LDI  R26,LOW(1)
0038e1 940e 7f6b 	CALL _OLED_showMemoryStatus
0038e3 c007      	RJMP _0x8C
                 ; 0000 0211                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
0038e4 30e2      	CPI  R30,LOW(0x2)
0038e5 e0a0      	LDI  R26,HIGH(0x2)
0038e6 07fa      	CPC  R31,R26
0038e7 f419      	BRNE _0x90
0038e8 e0a2      	LDI  R26,LOW(2)
0038e9 940e 7f6b 	CALL _OLED_showMemoryStatus
                 ; 0000 0212                     default                 :   break;
                 _0x90:
                 ; 0000 0213                 }
                 _0x8C:
                 ; 0000 0214 
                 ; 0000 0215                 timer_1sec_flag = 0;
0038eb 98f2      	CBI  0x1E,2
                 ; 0000 0216             }
                 ; 0000 0217         } // -- device enable -- //
                 _0x68:
                 ; 0000 0218         else                                                    // ----- device disable ----- //
0038ec c06e      	RJMP _0x93
                 _0x2D:
                 ; 0000 0219         {
                 ; 0000 021A             // -- no alarm -- // ;-P
                 ; 0000 021B             buzzer_on = 0;                      // -- buzzer off -- //
0038ed 98f3      	CBI  0x1E,3
                 ; 0000 021C             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
0038ee e040     +LDI R20 , LOW ( 0 )
0038ef e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
0038f0 3042     +CPI R20 , LOW ( 2 )
0038f1 e0e0     +LDI R30 , HIGH ( 2 )
0038f2 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0038f3 f44c      	BRGE _0x98
                 ; 0000 021D             {
                 ; 0000 021E                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0038f4 940e c1e6 	CALL SUBOPT_0x1
0038f6 940e c1f0 	CALL SUBOPT_0x2
0038f8 940e 4358 	CALL _IO_dout
                 ; 0000 021F             }
                +
0038fa 5f4f     +SUBI R20 , LOW ( - 1 )
0038fb 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0038fc cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 0220 
                 ; 0000 0221 
                 ; 0000 0222             if(TEMP_SEL == TEMP_TYPE_K){
0038fd 940e c325 	CALL SUBOPT_0x2E
0038ff f5e9      	BRNE _0x99
                 ; 0000 0223                 if(hwCalId == 9){
003900 91a0 10f4 	LDS  R26,_hwCalId
003902 91b0 10f5 	LDS  R27,_hwCalId+1
003904 9719      	SBIW R26,9
003905 f439      	BRNE _0x9A
                 ; 0000 0224                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
003906 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
003907 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
003908 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
003909 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
00390a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0225                     //printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                 ; 0000 0226                 }
                 ; 0000 0227                 else if(SENSOR_CONNECT){
00390c c02d      	RJMP _0x9B
                 _0x9A:
00390d 940e c330 	CALL SUBOPT_0x2F
00390f 9730      	SBIW R30,0
003910 f0f9      	BREQ _0x9C
                 ; 0000 0228                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
003911 e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
003912 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
003913 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
003914 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
003915 940e c337 	CALL SUBOPT_0x30
003917 2766      	CLR  R22
003918 2777      	CLR  R23
003919 940e c337 	CALL SUBOPT_0x30
00391b 940e c33e 	CALL SUBOPT_0x31
00391d 940e c2af 	CALL SUBOPT_0x1B
00391f 937f      	PUSH R23
003920 936f      	PUSH R22
003921 93ff      	PUSH R31
003922 93ef      	PUSH R30
003923 940e c343 	CALL SUBOPT_0x32
003925 91af      	POP  R26
003926 91bf      	POP  R27
003927 918f      	POP  R24
003928 919f      	POP  R25
003929 940e e0c5 	CALL __MULF12
00392b 940e c350 	CALL SUBOPT_0x33
00392d 940e c2ce 	CALL SUBOPT_0x21
                 ; 0000 0229                 }
                 ; 0000 022A                 else{
00392f c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 022B                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
003930 edee     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
003931 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
003932 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
003933 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
003934 940e c337 	CALL SUBOPT_0x30
003936 940e c357 	CALL SUBOPT_0x34
003938 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 022C                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 022D                 delay_ms(200);
00393a 940e c35c 	CALL SUBOPT_0x35
                 ; 0000 022E             }
                 ; 0000 022F             else if(TEMP_SEL == TEMP_TMEC){
00393c c01e      	RJMP _0x9E
                 _0x99:
00393d 940e c325 	CALL SUBOPT_0x2E
00393f 30e1      	CPI  R30,LOW(0x1)
003940 f429      	BRNE _0x9F
                 ; 0000 0230                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
003941 e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
003942 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
003943 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
003944 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
003945 c011      	RJMP _0x136
                 ; 0000 0231             }
                 ; 0000 0232             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
003946 940e c325 	CALL SUBOPT_0x2E
003948 30e2      	CPI  R30,LOW(0x2)
003949 f429      	BRNE _0xA1
                 ; 0000 0233                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
00394a e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
00394b e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
00394c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
00394d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
00394e c008      	RJMP _0x136
                 ; 0000 0234             }
                 ; 0000 0235             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
00394f 940e c325 	CALL SUBOPT_0x2E
003951 30e3      	CPI  R30,LOW(0x3)
003952 f441      	BRNE _0xA3
                 ; 0000 0236                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
003953 ebe3     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
003954 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
003955 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
003956 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
003957 940e e324 	CALL __PUTPARD1
003959 940e c360 	CALL SUBOPT_0x36
                 ; 0000 0237             }
                 ; 0000 0238         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 0239 
                 ; 0000 023A         #asm("wdr")
00395b 95a8      	wdr
                 ; 0000 023B     }
00395c cccd      	RJMP _0x10
                 ; 0000 023C 
                 ; 0000 023D }
                 _0xA4:
00395d cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0245 {
                 _updateStatus:
                 ; 0000 0246     int                 res=0, i=0, err=0;
                 ; 0000 0247     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0248 
                 ; 0000 0249     // --------------- Update Sensor's Event --------------- //
                 ; 0000 024A     for(i=0;i<MAX_SENS_CHANNEL;i++)
00395e 940e c365 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
003960 e020     +LDI R18 , LOW ( 0 )
003961 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
003962 3025     +CPI R18 , LOW ( 5 )
003963 e0e0     +LDI R30 , HIGH ( 5 )
003964 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003965 f4dc      	BRGE _0xA8
                 ; 0000 024B     {
                 ; 0000 024C         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003966 940e c1fc 	CALL SUBOPT_0x4
003968 f0a9      	BREQ _0xA9
                 ; 0000 024D         {
                 ; 0000 024E             // ----------- Update Probe Status ------------------------- //
                 ; 0000 024F             err =   updateSensorStatus(i);
003969 01d9      	MOVW R26,R18
00396a 940e 75f7 	CALL _updateSensorStatus
00396c 01af      	MOVW R20,R30
                 ; 0000 0250             if(err >= 0){
00396d 2355      	TST  R21
00396e f07a      	BRMI _0xAA
                 ; 0000 0251                 res |=  err;
                +
00396f 2b04     +OR R16 , R20
003970 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0252                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
003971 940e c36a 	CALL SUBOPT_0x38
003973 f019      	BREQ _0xAC
003974 2e04      	MOV  R0,R20
003975 2a05      	OR   R0,R21
003976 f009      	BREQ _0xAD
                 _0xAC:
003977 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 0253                 {
                 ; 0000 0254                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0255                     err =   updateDataStatus(i);
003978 01d9      	MOVW R26,R18
003979 940e 762a 	CALL _updateDataStatus
00397b 01af      	MOVW R20,R30
                 ; 0000 0256                     res |=  err;
                +
00397c 2b04     +OR R16 , R20
00397d 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0257                 }
                 ; 0000 0258             }
                 _0xAB:
                 ; 0000 0259         }
                 _0xAA:
                 ; 0000 025A     }
                 _0xA9:
                +
00397e 5f2f     +SUBI R18 , LOW ( - 1 )
00397f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003980 cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 025B 
                 ; 0000 025C     // --- Update Battery Status --- //
                 ; 0000 025D     err =   updateBatteryStatus();
003981 940e 7516 	CALL _updateBatteryStatus
003983 01af      	MOVW R20,R30
                 ; 0000 025E     res |=  err;
                +
003984 2b04     +OR R16 , R20
003985 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 025F     // --- Update Digital Input Status --- //
                 ; 0000 0260     err =   updateDinStatus();
003986 940e 7713 	CALL _updateDinStatus
003988 01af      	MOVW R20,R30
                 ; 0000 0261     res |=  err;
                +
003989 2b04     +OR R16 , R20
00398a 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0262     // --- Update Digital Output Status --- //
                 ; 0000 0263     err =   updateDoutStatus();
00398b 940e 778f 	CALL _updateDoutStatus
00398d 01af      	MOVW R20,R30
                 ; 0000 0264     res |=  err;
                +
00398e 2b04     +OR R16 , R20
00398f 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0265     // --- Update Analog Input Status --- //
                 ; 0000 0266     // --- Update Communication Status --- //
                 ; 0000 0267     err =   updateCommStatus();
003990 940e 7573 	CALL _updateCommStatus
003992 01af      	MOVW R20,R30
                 ; 0000 0268     if(err){
003993 2e04      	MOV  R0,R20
003994 2a05      	OR   R0,R21
003995 f189      	BREQ _0xAE
                 ; 0000 0269 
                 ; 0000 026A         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
003996 940e c374 	CALL SUBOPT_0x39
003998 940e c37d 	CALL SUBOPT_0x3A
00399a f029      	BREQ _0xB0
00399b 940e c374 	CALL SUBOPT_0x39
00399d 940e e389 	CALL __CPD02
00399f f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 026B             TIMER_setTimer(&ETH_rst_timer,15);
0039a0 eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
0039a1 e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
0039a2 940e c385 	CALL SUBOPT_0x3B
                 ; 0000 026C             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
0039a4 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
0039a5 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
0039a6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
0039a7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
0039a8 940e c38d 	CALL SUBOPT_0x3C
0039aa 940e c38d 	CALL SUBOPT_0x3C
0039ac 940e c2ce 	CALL SUBOPT_0x21
                 ; 0000 026D         }
                 ; 0000 026E 
                 ; 0000 026F         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
0039ae 940e c374 	CALL SUBOPT_0x39
0039b0 940e 41b4 	CALL _TIMER_checkTimerExceed
0039b2 30e1      	CPI  R30,LOW(0x1)
0039b3 e0a0      	LDI  R26,HIGH(0x1)
0039b4 07fa      	CPC  R31,R26
0039b5 f489      	BRNE _0xB2
                 ; 0000 0270             ETH_NORM;
0039b6 91e0 0102 	LDS  R30,258
0039b8 77ef      	ANDI R30,0x7F
0039b9 93e0 0102 	STS  258,R30
                 ; 0000 0271             ETH_reset();
0039bb 940e 6104 	CALL _ETH_reset
                 ; 0000 0272             ETH_rst_timer = 0xFFFFFFFF;
0039bd 940e c2ea 	CALL SUBOPT_0x25
0039bf 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
0039c1 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
0039c3 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
0039c5 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 0273         }
                 ; 0000 0274     }
                 _0xB2:
                 ; 0000 0275     res |=  err;
                 _0xAE:
                +
0039c7 2b04     +OR R16 , R20
0039c8 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0276     // --- Update Memory Card Status --- //
                 ; 0000 0277     err =   updateMemoryStatus();
0039c9 940e 75d7 	CALL _updateMemoryStatus
0039cb 01af      	MOVW R20,R30
                 ; 0000 0278     res |=  err;
                +
0039cc 2b04     +OR R16 , R20
0039cd 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0279 
                 ; 0000 027A     return res;
0039ce 01f8      	MOVW R30,R16
0039cf 940e e3a0 	CALL __LOADLOCR6
0039d1 9626      	ADIW R28,6
0039d2 9508      	RET
                 ; 0000 027B }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 027E {
                 _eventCapture:
                 ; 0000 027F     int                 res=0, i=0, err=0;
                 ; 0000 0280     unsigned long int   timestamp_rd;
                 ; 0000 0281     unsigned char       statusCode;
                 ; 0000 0282 
                 ; 0000 0283     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 0284     err =   checkSendMIPAlarm(&statusCode);
0039d3 9725      	SBIW R28,5
0039d4 940e c365 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
0039d6 01de      	MOVW R26,R28
0039d7 9616      	ADIW R26,6
0039d8 940e 7b6f 	CALL _checkSendMIPAlarm
0039da 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 0285     res |=  err;
                 ; 0000 0286     if(err){
0039dc f0c1      	BREQ _0xB3
                 ; 0000 0287         timestamp_rd    = DS1672_read();
0039dd 940e c3a8 	CALL SUBOPT_0x3E
                 ; 0000 0288         if(statusCode)
0039df f029      	BREQ _0xB4
                 ; 0000 0289         {
                 ; 0000 028A             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
0039e0 e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
0039e1 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
0039e2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
0039e3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
0039e4 c004      	RJMP _0x137
                 ; 0000 028B             //printOLED("AL12%1d",i+1);
                 ; 0000 028C         }
                 ; 0000 028D         else
                 _0xB4:
                 ; 0000 028E         {
                 ; 0000 028F             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
0039e5 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
0039e6 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
0039e7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
0039e8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
0039e9 940e e324 	CALL __PUTPARD1
0039eb 940e c360 	CALL SUBOPT_0x36
                 ; 0000 0290             //printOLED("AL02%1d",i+1);
                 ; 0000 0291         }
                 ; 0000 0292         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
0039ed 940e c3b1 	CALL SUBOPT_0x3F
0039ef e1e0      	LDI  R30,LOW(16)
0039f0 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 0293         if(err < 0){
0039f2 f412      	BRPL _0xB6
                 ; 0000 0294             printDebug("<eventCapture> addEventQueue() failed\r\n");
0039f3 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 0295         }
                 ; 0000 0296     }
                 _0xB6:
                 ; 0000 0297 
                 ; 0000 0298     /*
                 ; 0000 0299     // -- Analog Input Event -- //
                 ; 0000 029A     // -- reserved -- //
                 ; 0000 029B     */
                 ; 0000 029C     // --------------- Check for Power Down Event --------------- //
                 ; 0000 029D     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
0039f5 01de      	MOVW R26,R28
0039f6 9616      	ADIW R26,6
0039f7 940e 7b84 	CALL _checkSendPowerAlarm
0039f9 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 029E     res |=  err;
                 ; 0000 029F     if(err){
0039fb f0c1      	BREQ _0xB7
                 ; 0000 02A0         timestamp_rd    = DS1672_read();
0039fc 940e c3a8 	CALL SUBOPT_0x3E
                 ; 0000 02A1         if(statusCode)
0039fe f029      	BREQ _0xB8
                 ; 0000 02A2         {
                 ; 0000 02A3             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
0039ff ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
003a00 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
003a01 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
003a02 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
003a03 c004      	RJMP _0x138
                 ; 0000 02A4             //printOLED("AL12%1d",i+1);
                 ; 0000 02A5         }
                 ; 0000 02A6         else
                 _0xB8:
                 ; 0000 02A7         {
                 ; 0000 02A8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
003a04 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
003a05 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
003a06 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
003a07 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
003a08 940e e324 	CALL __PUTPARD1
003a0a 940e c360 	CALL SUBOPT_0x36
                 ; 0000 02A9             //printOLED("AL02%1d",i+1);
                 ; 0000 02AA         }
                 ; 0000 02AB         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
003a0c 940e c3b1 	CALL SUBOPT_0x3F
003a0e e5e0      	LDI  R30,LOW(80)
003a0f 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 02AC         if(err < 0){
003a11 f412      	BRPL _0xBA
                 ; 0000 02AD             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a12 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 02AE         }
                 ; 0000 02AF     }
                 _0xBA:
                 ; 0000 02B0 
                 ; 0000 02B1     // --------------- Check for Battery Event --------------- //
                 ; 0000 02B2     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
003a14 01de      	MOVW R26,R28
003a15 9616      	ADIW R26,6
003a16 940e 7bcc 	CALL _checkSendBatteryAlarm
003a18 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 02B3     res |=  err;
                 ; 0000 02B4     if(err){
003a1a f0c1      	BREQ _0xBB
                 ; 0000 02B5         timestamp_rd    = DS1672_read();
003a1b 940e c3a8 	CALL SUBOPT_0x3E
                 ; 0000 02B6         if(statusCode)
003a1d f029      	BREQ _0xBC
                 ; 0000 02B7         {
                 ; 0000 02B8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
003a1e e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
003a1f e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
003a20 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
003a21 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
003a22 c004      	RJMP _0x139
                 ; 0000 02B9             //printOLED("AL12%1d",i+1);
                 ; 0000 02BA         }
                 ; 0000 02BB         else
                 _0xBC:
                 ; 0000 02BC         {
                 ; 0000 02BD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
003a23 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
003a24 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
003a25 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
003a26 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
003a27 940e e324 	CALL __PUTPARD1
003a29 940e c360 	CALL SUBOPT_0x36
                 ; 0000 02BE             //printOLED("AL02%1d",i+1);
                 ; 0000 02BF         }
                 ; 0000 02C0         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
003a2b 940e c3b1 	CALL SUBOPT_0x3F
003a2d e5e1      	LDI  R30,LOW(81)
003a2e 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 02C1         if(err < 0){
003a30 f412      	BRPL _0xBE
                 ; 0000 02C2             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a31 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 02C3         }
                 ; 0000 02C4     }
                 _0xBE:
                 ; 0000 02C5 
                 ; 0000 02C6     // --------------- Check for Memory Event --------------- //
                 ; 0000 02C7     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
003a33 01de      	MOVW R26,R28
003a34 9616      	ADIW R26,6
003a35 940e 7c25 	CALL _checkSendMemoryAlarm
003a37 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 02C8     res |=  err;
                 ; 0000 02C9     if(err){
003a39 f131      	BREQ _0xBF
                 ; 0000 02CA         timestamp_rd    = DS1672_read();
003a3a 940e 453c 	CALL _DS1672_read
                +
003a3c 83ef     +STD Y + 7 , R30
003a3d 87f8     +STD Y + 7 + 1 , R31
003a3e 8769     +STD Y + 7 + 2 , R22
003a3f 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 02CB         if(statusCode == ES_LOWMEMORY)
003a40 81ae      	LDD  R26,Y+6
003a41 30a1      	CPI  R26,LOW(0x1)
003a42 f429      	BRNE _0xC0
                 ; 0000 02CC         {
                 ; 0000 02CD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
003a43 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
003a44 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
003a45 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
003a46 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
003a47 c00c      	RJMP _0x13A
                 ; 0000 02CE             //printOLED("AL12%1d",i+1);
                 ; 0000 02CF         }
                 ; 0000 02D0         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
003a48 81ae      	LDD  R26,Y+6
003a49 30a2      	CPI  R26,LOW(0x2)
003a4a f429      	BRNE _0xC2
                 ; 0000 02D1         {
                 ; 0000 02D2             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
003a4b ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
003a4c e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
003a4d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
003a4e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
003a4f c004      	RJMP _0x13A
                 ; 0000 02D3             //printOLED("AL12%1d",i+1);
                 ; 0000 02D4         }
                 ; 0000 02D5         else
                 _0xC2:
                 ; 0000 02D6         {
                 ; 0000 02D7             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
003a50 efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
003a51 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
003a52 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
003a53 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
003a54 940e e324 	CALL __PUTPARD1
003a56 940e c360 	CALL SUBOPT_0x36
                 ; 0000 02D8             //printOLED("AL02%1d",i+1);
                 ; 0000 02D9         }
                 ; 0000 02DA         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
003a58 940e c3b1 	CALL SUBOPT_0x3F
003a5a e7e0      	LDI  R30,LOW(112)
003a5b 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 02DB         if(err < 0){
003a5d f412      	BRPL _0xC4
                 ; 0000 02DC             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a5e 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 02DD         }
                 ; 0000 02DE     }
                 _0xC4:
                 ; 0000 02DF 
                 ; 0000 02E0     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 02E1     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
003a60 e020     +LDI R18 , LOW ( 0 )
003a61 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
003a62 3022     +CPI R18 , LOW ( 2 )
003a63 e0e0     +LDI R30 , HIGH ( 2 )
003a64 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003a65 f544      	BRGE _0xC7
                 ; 0000 02E2     {
                 ; 0000 02E3         if(din_config[i].channelEnable)
003a66 940e c27d 	CALL SUBOPT_0x15
003a68 81e0      	LD   R30,Z
003a69 30e0      	CPI  R30,0
003a6a f101      	BREQ _0xC8
                 ; 0000 02E4         {
                 ; 0000 02E5             err =   checkSendDinAlarm(i,&statusCode);
003a6b 940e c3c4 	CALL SUBOPT_0x42
003a6d 940e 7c73 	CALL _checkSendDinAlarm
003a6f 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 02E6             res |=  err;
                 ; 0000 02E7             if(err){
003a71 f0c9      	BREQ _0xC9
                 ; 0000 02E8                 timestamp_rd    = DS1672_read();
003a72 940e c3a8 	CALL SUBOPT_0x3E
                 ; 0000 02E9                 if(statusCode)
003a74 f029      	BREQ _0xCA
                 ; 0000 02EA                 {
                 ; 0000 02EB                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
003a75 e1ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
003a76 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
003a77 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
003a78 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
003a79 c004      	RJMP _0x13B
                 ; 0000 02EC                     //printOLED("AL12%1d",i+1);
                 ; 0000 02ED                 }
                 ; 0000 02EE                 else
                 _0xCA:
                 ; 0000 02EF                 {
                 ; 0000 02F0                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
003a7a e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
003a7b e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
003a7c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
003a7d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
003a7e 940e e324 	CALL __PUTPARD1
003a80 940e c3c9 	CALL SUBOPT_0x43
                 ; 0000 02F1                     //printOLED("AL02%1d",i+1);
                 ; 0000 02F2                 }
                 ; 0000 02F3                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
003a82 940e c3b1 	CALL SUBOPT_0x3F
003a84 2fe2      	MOV  R30,R18
003a85 6ce0      	ORI  R30,LOW(0xC0)
003a86 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 02F4                 if(err < 0){
003a88 f412      	BRPL _0xCC
                 ; 0000 02F5                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003a89 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 02F6                 }
                 ; 0000 02F7             }
                 _0xCC:
                 ; 0000 02F8         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02F9     }// -- for loop -- //
                 _0xC8:
                +
003a8b 5f2f     +SUBI R18 , LOW ( - 1 )
003a8c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003a8d cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02FA 
                 ; 0000 02FB     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02FC     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003a8e e020     +LDI R18 , LOW ( 0 )
003a8f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
003a90 3025     +CPI R18 , LOW ( 5 )
003a91 e0e0     +LDI R30 , HIGH ( 5 )
003a92 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003a93 f014      	BRLT PC+3
003a94 940c 3afa 	JMP _0xCF
                 ; 0000 02FD     {
                 ; 0000 02FE         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003a96 940e c1fc 	CALL SUBOPT_0x4
003a98 f411      	BRNE PC+3
003a99 940c 3af7 	JMP _0xD0
                 ; 0000 02FF         {
                 ; 0000 0300             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 0301             err =   checkSendSensorAlarm(i,&statusCode);
003a9b 940e c3c4 	CALL SUBOPT_0x42
003a9d 940e 7cd1 	CALL _checkSendSensorAlarm
003a9f 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 0302             res |=  err;
                 ; 0000 0303             if(err){
003aa1 f131      	BREQ _0xD1
                 ; 0000 0304                 timestamp_rd    = DS1672_read();
003aa2 940e c3a8 	CALL SUBOPT_0x3E
                 ; 0000 0305                 if(statusCode)
003aa4 f059      	BREQ _0xD2
                 ; 0000 0306                 {
                 ; 0000 0307                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
003aa5 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
003aa6 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
003aa7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
003aa8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
003aa9 940e c3d0 	CALL SUBOPT_0x44
                 ; 0000 0308                     printOLED("AL12%1d",i+1);
                +
003aab ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003aac e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003aad e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003aae e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003aaf c00a      	RJMP _0x13C
                 ; 0000 0309                 }
                 ; 0000 030A                 else
                 _0xD2:
                 ; 0000 030B                 {
                 ; 0000 030C                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
003ab0 ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
003ab1 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
003ab2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
003ab3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
003ab4 940e c3d0 	CALL SUBOPT_0x44
                 ; 0000 030D                     printOLED("AL02%1d",i+1);
                +
003ab6 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003ab7 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003ab8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003ab9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
003aba 940e e324 	CALL __PUTPARD1
003abc 940e c3d3 	CALL SUBOPT_0x45
                 ; 0000 030E                 }
                 ; 0000 030F 
                 ; 0000 0310                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003abe 940e c3b1 	CALL SUBOPT_0x3F
003ac0 2fe2      	MOV  R30,R18
003ac1 6fe0      	ORI  R30,LOW(0xF0)
003ac2 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 0311                 if(err < 0){
003ac4 f412      	BRPL _0xD4
                 ; 0000 0312                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003ac5 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 0313                 }
                 ; 0000 0314             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 0315             else
003ac7 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 0316             {
                 ; 0000 0317                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
003ac8 940e c36a 	CALL SUBOPT_0x38
003aca f161      	BREQ _0xD6
                 ; 0000 0318                 {
                 ; 0000 0319                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 031A                     err =   checkSendDataAlarm(i,&statusCode);
003acb 940e c3c4 	CALL SUBOPT_0x42
003acd 940e 7d35 	CALL _checkSendDataAlarm
003acf 940e c3a2 	CALL SUBOPT_0x3D
                 ; 0000 031B                     res |=  err;
                 ; 0000 031C                     if(err){
003ad1 f129      	BREQ _0xD7
                 ; 0000 031D                         timestamp_rd    = DS1672_read();
003ad2 940e c3a8 	CALL SUBOPT_0x3E
                 ; 0000 031E                         if(statusCode)
003ad4 f059      	BREQ _0xD8
                 ; 0000 031F                         {
                 ; 0000 0320                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
003ad5 e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
003ad6 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003ad7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003ad8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003ad9 940e c3d0 	CALL SUBOPT_0x44
                 ; 0000 0321                             printOLED("AL12%1d",i+1);
                +
003adb ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003adc e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003add e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003ade e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003adf c00a      	RJMP _0x13D
                 ; 0000 0322                         }
                 ; 0000 0323                         else
                 _0xD8:
                 ; 0000 0324                         {
                 ; 0000 0325                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
003ae0 e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
003ae1 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
003ae2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
003ae3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
003ae4 940e c3d0 	CALL SUBOPT_0x44
                 ; 0000 0326                             printOLED("AL02%1d",i+1);
                +
003ae6 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003ae7 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003ae8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003ae9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003aea 940e e324 	CALL __PUTPARD1
003aec 940e c3d3 	CALL SUBOPT_0x45
                 ; 0000 0327                         }
                 ; 0000 0328                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003aee 940e c3b1 	CALL SUBOPT_0x3F
003af0 2fe2      	MOV  R30,R18
003af1 6ee0      	ORI  R30,LOW(0xE0)
003af2 940e c3b8 	CALL SUBOPT_0x40
                 ; 0000 0329                         if(err < 0){
003af4 f412      	BRPL _0xDA
                 ; 0000 032A                             printDebug("<eventCapture> addEventQueue() failed\r\n");
003af5 940e c3bf 	CALL SUBOPT_0x41
                 ; 0000 032B                         }
                 ; 0000 032C                     }
                 _0xDA:
                 ; 0000 032D                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 032E             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 032F         }// -- sensor Enable -- //
                 ; 0000 0330     }// -- for loop -- //
                 _0xD0:
                +
003af7 5f2f     +SUBI R18 , LOW ( - 1 )
003af8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003af9 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 0331 
                 ; 0000 0332 
                 ; 0000 0333     return res;
003afa 01f8      	MOVW R30,R16
003afb 940e e3a0 	CALL __LOADLOCR6
003afd 962b      	ADIW R28,11
003afe 9508      	RET
                 ; 0000 0334 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 033C {
                 _statusReport:
                 ; 0000 033D     int                     res = 0;
                 ; 0000 033E     unsigned long int       timestamp_rd;
                 ; 0000 033F     unsigned char           *param;
                 ; 0000 0340     int                     paramLen = 0;
                 ; 0000 0341 
                 ; 0000 0342     unsigned short          deviceState;
                 ; 0000 0343 
                 ; 0000 0344     switch (status_config.accm)
003aff 9726      	SBIW R28,6
003b00 940e c3de 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
003b02 e040     +LDI R20 , LOW ( 0 )
003b03 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
003b04 91e0 1362 	LDS  R30,_status_config
003b06 940e c3e3 	CALL SUBOPT_0x47
                 ; 0000 0345     {
                 ; 0000 0346         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
003b08 f449      	BRNE _0xDE
                +
003b09 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
003b0a e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
003b0b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
003b0c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
003b0d 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0347                                     return -1;
003b0f efef      	LDI  R30,LOW(65535)
003b10 efff      	LDI  R31,HIGH(65535)
003b11 c08a      	RJMP _0x20E009C
                 ; 0000 0348         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
003b12 32e0      	CPI  R30,LOW(0x20)
003b13 e0a0      	LDI  R26,HIGH(0x20)
003b14 07fa      	CPC  R31,R26
003b15 f449      	BRNE _0xDF
                +
003b16 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
003b17 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
003b18 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
003b19 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
003b1a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0349                                     return -1;
003b1c efef      	LDI  R30,LOW(65535)
003b1d efff      	LDI  R31,HIGH(65535)
003b1e c07d      	RJMP _0x20E009C
                 ; 0000 034A         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
003b1f 33e0      	CPI  R30,LOW(0x30)
003b20 e0a0      	LDI  R26,HIGH(0x30)
003b21 07fa      	CPC  R31,R26
003b22 f011      	BREQ PC+3
003b23 940c 3b75 	JMP _0xE3
003b25 940e c3e8 	CALL SUBOPT_0x48
003b27 940e a6d0 	CALL _malloc
003b29 019f      	MOVW R18,R30
                 ; 0000 034B                                     if(param == NULL){
003b2a 2e02      	MOV  R0,R18
003b2b 2a03      	OR   R0,R19
003b2c f449      	BRNE _0xE1
                 ; 0000 034C                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
003b2d efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
003b2e e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
003b2f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
003b30 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
003b31 940e c3eb 	CALL SUBOPT_0x49
                 ; 0000 034D                                         return -1;
003b33 efef      	LDI  R30,LOW(65535)
003b34 efff      	LDI  R31,HIGH(65535)
003b35 c066      	RJMP _0x20E009C
                 ; 0000 034E                                     }
                 ; 0000 034F 
                 ; 0000 0350                                     res = getDeviceState(&deviceState);
                 _0xE1:
003b36 01de      	MOVW R26,R28
003b37 9616      	ADIW R26,6
003b38 940e 77a4 	CALL _getDeviceState
003b3a 018f      	MOVW R16,R30
                 ; 0000 0351                                     if(res<0){
003b3b 2311      	TST  R17
003b3c f452      	BRPL _0xE2
                 ; 0000 0352                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
003b3d e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
003b3e e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
003b3f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
003b40 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
003b41 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0353                                         free ( param );
003b43 01d9      	MOVW R26,R18
003b44 940e c3f3 	CALL SUBOPT_0x4A
                 ; 0000 0354                                         return -1;
003b46 c055      	RJMP _0x20E009C
                 ; 0000 0355                                     }
                 ; 0000 0356 
                 ; 0000 0357                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
003b47 940e c3f8 	CALL SUBOPT_0x4B
003b49 81ef      	LDD  R30,Y+7
003b4a 70f0      	ANDI R31,HIGH(0x0)
003b4b 93ec      	ST   X,R30
                 ; 0000 0358                                     param[paramLen++] = (deviceState & 0x00FF);
003b4c 940e c3f8 	CALL SUBOPT_0x4B
003b4e 81ee      	LDD  R30,Y+6
003b4f 93ec      	ST   X,R30
                 ; 0000 0359                                     param[paramLen++] = powerSrcStatus;
003b50 940e c3ff 	CALL SUBOPT_0x4C
003b52 91a0 147a 	LDS  R26,_powerSrcStatus
003b54 83a0      	STD  Z+0,R26
                 ; 0000 035A 
                 ; 0000 035B 
                 ; 0000 035C                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
003b55 01fa      	MOVW R30,R20
003b56 0fe2      	ADD  R30,R18
003b57 1ff3      	ADC  R31,R19
003b58 93fa      	ST   -Y,R31
003b59 93ea      	ST   -Y,R30
003b5a e8e3      	LDI  R30,LOW(_batteryVolt)
003b5b e1f4      	LDI  R31,HIGH(_batteryVolt)
003b5c 940e c405 	CALL SUBOPT_0x4D
                 ; 0000 035D                                     paramLen         += sizeof(batteryVolt);
                +
003b5e 5f4c     +SUBI R20 , LOW ( - 4 )
003b5f 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 035E 
                 ; 0000 035F                                     param[paramLen++] = dinStatus[0];
003b60 940e c3ff 	CALL SUBOPT_0x4C
003b62 91a0 147c 	LDS  R26,_dinStatus
003b64 83a0      	STD  Z+0,R26
                 ; 0000 0360                                     param[paramLen++] = dinStatus[1];
003b65 940e c3ff 	CALL SUBOPT_0x4C
                +
003b67 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003b69 83a0      	STD  Z+0,R26
                 ; 0000 0361                                     param[paramLen++] = doutStatus[0];
003b6a 940e c3ff 	CALL SUBOPT_0x4C
003b6c 91a0 147e 	LDS  R26,_doutStatus
003b6e 83a0      	STD  Z+0,R26
                 ; 0000 0362                                     param[paramLen++] = doutStatus[1];
003b6f 940e c3ff 	CALL SUBOPT_0x4C
                +
003b71 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
003b73 83a0      	STD  Z+0,R26
                 ; 0000 0363 
                 ; 0000 0364                                     break;
003b74 c00d      	RJMP _0xDD
                 ; 0000 0365         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
003b75 e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
003b76 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
003b77 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
003b78 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
003b79 940e e324 	CALL __PUTPARD1
003b7b 91e0 1362 	LDS  R30,_status_config
003b7d 940e c309 	CALL SUBOPT_0x29
                 ; 0000 0366                                     return -1;
003b7f efef      	LDI  R30,LOW(65535)
003b80 efff      	LDI  R31,HIGH(65535)
003b81 c01a      	RJMP _0x20E009C
                 ; 0000 0367     }
                 _0xDD:
                 ; 0000 0368 
                 ; 0000 0369     timestamp_rd = DS1672_read();
003b82 940e c40b 	CALL SUBOPT_0x4E
                 ; 0000 036A 
                 ; 0000 036B     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
003b84 940e c412 	CALL SUBOPT_0x4F
003b86 940e e324 	CALL __PUTPARD1
003b88 91e0 1362 	LDS  R30,_status_config
003b8a 93ea      	ST   -Y,R30
003b8b 933a      	ST   -Y,R19
003b8c 932a      	ST   -Y,R18
003b8d 01da      	MOVW R26,R20
003b8e 940e 540d 	CALL _ETH_sendStatusReportCmd
003b90 018f      	MOVW R16,R30
                 ; 0000 036C     if(res < 0)
003b91 2311      	TST  R17
003b92 f432      	BRPL _0xE4
                 ; 0000 036D     {
                 ; 0000 036E         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
003b93 e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
003b94 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
003b95 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
003b96 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
003b97 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 036F     }
                 ; 0000 0370 
                 ; 0000 0371     free ( param );
                 _0xE4:
003b99 01d9      	MOVW R26,R18
003b9a 940e a6eb 	CALL _free
                 ; 0000 0372 }
                 _0x20E009C:
003b9c 940e e3a0 	CALL __LOADLOCR6
003b9e 962c      	ADIW R28,12
003b9f 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0375 {
                 _sensorDataReport:
                 ; 0000 0376     int                     count = 0;
                 ; 0000 0377     int                     res;
                 ; 0000 0378     unsigned long int       timestamp;
                 ; 0000 0379     unsigned int            channel;
                 ; 0000 037A     float                   value;
                 ; 0000 037B 
                 ; 0000 037C     // -- for debug -- //
                 ; 0000 037D     //struct rtc_structure    dt;
                 ; 0000 037E     // --------------- //
                 ; 0000 037F     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 0380 
                 ; 0000 0381     while (count < MAX_DATA_QUEUE)
003ba0 9728      	SBIW R28,8
003ba1 940e c3de 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
003ba3 300a     +CPI R16 , LOW ( 10 )
003ba4 e0e0     +LDI R30 , HIGH ( 10 )
003ba5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003ba6 f014      	BRLT PC+3
003ba7 940c 3bef 	JMP _0xE7
                 ; 0000 0382     {
                 ; 0000 0383         res = fetchDataQueue(&timestamp, &channel, &value);
003ba9 01fe      	MOVW R30,R28
003baa 963a      	ADIW R30,10
003bab 93fa      	ST   -Y,R31
003bac 93ea      	ST   -Y,R30
003bad b7ed      	IN   R30,SPL
003bae b7fe      	IN   R31,SPH
003baf 9731      	SBIW R30,1
003bb0 93fa      	ST   -Y,R31
003bb1 93ea      	ST   -Y,R30
003bb2 935f      	PUSH R21
003bb3 934f      	PUSH R20
003bb4 01de      	MOVW R26,R28
003bb5 961a      	ADIW R26,10
003bb6 940e 74e5 	CALL _fetchDataQueue
003bb8 914f      	POP  R20
003bb9 915f      	POP  R21
003bba 019f      	MOVW R18,R30
                 ; 0000 0384         if(res < 0)
003bbb 2333      	TST  R19
003bbc f192      	BRMI _0xE7
                 ; 0000 0385         {
                 ; 0000 0386             break;
                 ; 0000 0387         }
                 ; 0000 0388         else
                 ; 0000 0389         {
                 ; 0000 038A             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003bbd eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
003bbe e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
003bbf e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
003bc0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
003bc1 940e c417 	CALL SUBOPT_0x50
003bc3 01fa      	MOVW R30,R20
003bc4 940e c357 	CALL SUBOPT_0x34
003bc6 940e c420 	CALL SUBOPT_0x51
                 ; 0000 038B             /*
                 ; 0000 038C             binary_to_date(timestamp, &dt);
                 ; 0000 038D             printRTC(dt);
                 ; 0000 038E             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 038F             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 0390             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 0391             */
                 ; 0000 0392 
                 ; 0000 0393             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003bc8 940e c42b 	CALL SUBOPT_0x52
003bca 940e e389 	CALL __CPD02
003bcc f039      	BREQ _0xEB
003bcd 940e c430 	CALL SUBOPT_0x53
003bcf f021      	BREQ _0xEB
                +
003bd0 3045     +CPI R20 , LOW ( 5 )
003bd1 e0e0     +LDI R30 , HIGH ( 5 )
003bd2 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003bd3 f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 0394             {
                 ; 0000 0395                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003bd4 ecef     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003bd5 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003bd6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003bd7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003bd8 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0396                 continue;
003bda cfc8      	RJMP _0xE5
                 ; 0000 0397             }
                 ; 0000 0398 
                 ; 0000 0399 
                 ; 0000 039A             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003bdb e0e0      	LDI  R30,LOW(0)
003bdc 940e c432 	CALL SUBOPT_0x54
003bde 935a      	ST   -Y,R21
003bdf 934a      	ST   -Y,R20
003be0 940e c43a 	CALL SUBOPT_0x55
003be2 019f      	MOVW R18,R30
                 ; 0000 039B             if(res < 0)
003be3 2333      	TST  R19
003be4 f43a      	BRPL _0xED
                 ; 0000 039C             {
                 ; 0000 039D                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003be5 e0ed     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003be6 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003be7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003be8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003be9 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 039E                 // --- Keep in Log --- //
                 ; 0000 039F                 continue;
003beb cfb7      	RJMP _0xE5
                 ; 0000 03A0             }
                 ; 0000 03A1             count++;
                 _0xED:
                +
003bec 5f0f     +SUBI R16 , LOW ( - 1 )
003bed 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03A2         }
                 ; 0000 03A3 
                 ; 0000 03A4     }
003bee cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 03A5 
                 ; 0000 03A6     return count;
003bef 01f8      	MOVW R30,R16
003bf0 940e e3a0 	CALL __LOADLOCR6
003bf2 962e      	ADIW R28,14
003bf3 9508      	RET
                 ; 0000 03A7 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 03AA {
                 _eventReport:
                 ; 0000 03AB     int                     count = 0;
                 ; 0000 03AC     int                     res;
                 ; 0000 03AD     unsigned long int       timestamp;
                 ; 0000 03AE     unsigned char           eventID;
                 ; 0000 03AF     unsigned char           eventStatus;
                 ; 0000 03B0 
                 ; 0000 03B1     // -- for debug -- //
                 ; 0000 03B2     //struct rtc_structure    dt;
                 ; 0000 03B3     // --------------- //
                 ; 0000 03B4     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 03B5 
                 ; 0000 03B6     while (count < MAX_EVENT_QUEUE)
003bf4 9724      	SBIW R28,4
003bf5 940e c3de 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003bf7 3104     +CPI R16 , LOW ( 20 )
003bf8 e0e0     +LDI R30 , HIGH ( 20 )
003bf9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003bfa f014      	BRLT PC+3
003bfb 940c 3c3e 	JMP _0xF0
                 ; 0000 03B7     {
                 ; 0000 03B8         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003bfd 940e c440 	CALL SUBOPT_0x56
003bff b7ed      	IN   R30,SPL
003c00 b7fe      	IN   R31,SPH
003c01 93fa      	ST   -Y,R31
003c02 93ea      	ST   -Y,R30
003c03 935f      	PUSH R21
003c04 b7ad      	IN   R26,SPL
003c05 b7be      	IN   R27,SPH
003c06 934f      	PUSH R20
003c07 940e 7849 	CALL _fetchEventQueue
003c09 914f      	POP  R20
003c0a 915f      	POP  R21
003c0b 019f      	MOVW R18,R30
                 ; 0000 03B9         if(res < 0)
003c0c 2333      	TST  R19
003c0d f182      	BRMI _0xF0
                 ; 0000 03BA         {
                 ; 0000 03BB             break;
                 ; 0000 03BC         }
                 ; 0000 03BD         else
                 ; 0000 03BE         {
                 ; 0000 03BF 
                 ; 0000 03C0             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003c0e e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
003c0f e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
003c10 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
003c11 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
003c12 940e c445 	CALL SUBOPT_0x57
003c14 940e e324 	CALL __PUTPARD1
003c16 940e c44c 	CALL SUBOPT_0x58
                 ; 0000 03C1             /*
                 ; 0000 03C2             binary_to_date(timestamp, &dt);
                 ; 0000 03C3             printRTC(dt);
                 ; 0000 03C4             */
                 ; 0000 03C5 
                 ; 0000 03C6             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003c18 940e c45d 	CALL SUBOPT_0x59
003c1a 940e e389 	CALL __CPD02
003c1c f029      	BREQ _0xF4
003c1d 940e c45d 	CALL SUBOPT_0x59
003c1f 940e c37d 	CALL SUBOPT_0x3A
003c21 f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 03C7             {
                 ; 0000 03C8                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c22 e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003c23 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003c24 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003c25 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003c26 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 03C9                 continue;
003c28 cfce      	RJMP _0xEE
                 ; 0000 03CA             }
                 ; 0000 03CB 
                 ; 0000 03CC 
                 ; 0000 03CD             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003c29 e0e0      	LDI  R30,LOW(0)
003c2a 93ea      	ST   -Y,R30
003c2b 940e c3b1 	CALL SUBOPT_0x3F
003c2d 935a      	ST   -Y,R21
003c2e 2fa4      	MOV  R26,R20
003c2f 940e 545c 	CALL _ETH_sendEventReportCmd
003c31 019f      	MOVW R18,R30
                 ; 0000 03CE             if(res < 0)
003c32 2333      	TST  R19
003c33 f43a      	BRPL _0xF6
                 ; 0000 03CF             {
                 ; 0000 03D0                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003c34 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003c35 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003c36 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003c37 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003c38 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 03D1                 // --- Keep in Log --- //
                 ; 0000 03D2                 continue;
003c3a cfbc      	RJMP _0xEE
                 ; 0000 03D3             }
                 ; 0000 03D4             count++;
                 _0xF6:
                +
003c3b 5f0f     +SUBI R16 , LOW ( - 1 )
003c3c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03D5         }
                 ; 0000 03D6     }
003c3d cfb9      	RJMP _0xEE
                 _0xF0:
                 ; 0000 03D7 
                 ; 0000 03D8     return count;
003c3e 01f8      	MOVW R30,R16
003c3f 940e e3a0 	CALL __LOADLOCR6
003c41 962a      	ADIW R28,10
003c42 9508      	RET
                 ; 0000 03D9 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 03E1 {
                 _sensorDataSave:
                 ; 0000 03E2     FIL                     file;
                 ; 0000 03E3     char                    isFileOpen = 0;
                 ; 0000 03E4     int                     count = 0;
                 ; 0000 03E5     int                     res;
                 ; 0000 03E6     unsigned long int       timestamp;
                 ; 0000 03E7     unsigned int            channel;
                 ; 0000 03E8     float                   value;
                 ; 0000 03E9 
                 ; 0000 03EA 
                 ; 0000 03EB     // -- for debug -- //
                 ; 0000 03EC     //struct rtc_structure    dt;
                 ; 0000 03ED     // --------------- //
                 ; 0000 03EE 
                 ; 0000 03EF     while (count < MAX_DATA_QUEUE)
003c43 97aa      	SBIW R28,42
003c44 50d2      	SUBI R29,2
003c45 940e e399 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003c47 e010      	LDI  R17,0
                +
003c48 e020     +LDI R18 , LOW ( 0 )
003c49 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003c4a 302a     +CPI R18 , LOW ( 10 )
003c4b e0e0     +LDI R30 , HIGH ( 10 )
003c4c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
003c4d f014      	BRLT PC+3
003c4e 940c 3ca7 	JMP _0xF9
                 ; 0000 03F0     {
                 ; 0000 03F1         res = fetchDataQueue(&timestamp, &channel, &value);
003c50 940e c462 	CALL SUBOPT_0x5A
003c52 940e c462 	CALL SUBOPT_0x5A
003c54 01de      	MOVW R26,R28
003c55 961a      	ADIW R26,10
003c56 940e 74e5 	CALL _fetchDataQueue
003c58 01af      	MOVW R20,R30
                 ; 0000 03F2         if(res < 0)
003c59 2355      	TST  R21
003c5a f40a      	BRPL _0xFA
                 ; 0000 03F3         {
                 ; 0000 03F4             break;
003c5b c04b      	RJMP _0xF9
                 ; 0000 03F5         }
                 ; 0000 03F6         else
                 _0xFA:
                 ; 0000 03F7         {
                 ; 0000 03F8             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003c5c ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
003c5d e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
003c5e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
003c5f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
003c60 940e c467 	CALL SUBOPT_0x5B
003c62 89ea      	LDD  R30,Y+18
003c63 89fb      	LDD  R31,Y+18+1
003c64 940e c357 	CALL SUBOPT_0x34
003c66 940e c420 	CALL SUBOPT_0x51
                 ; 0000 03F9             /*
                 ; 0000 03FA             binary_to_date(timestamp, &dt);
                 ; 0000 03FB             printRTC(dt);
                 ; 0000 03FC             */
                 ; 0000 03FD 
                 ; 0000 03FE             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003c68 940e c23b 	CALL SUBOPT_0xB
003c6a 940e e389 	CALL __CPD02
003c6c f039      	BREQ _0xFD
003c6d 940e c46d 	CALL SUBOPT_0x5C
003c6f f021      	BREQ _0xFD
003c70 85aa      	LDD  R26,Y+10
003c71 85bb      	LDD  R27,Y+10+1
003c72 9715      	SBIW R26,5
003c73 f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03FF             {
                 ; 0000 0400                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c74 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
003c75 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
003c76 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
003c77 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
003c78 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0401                 continue;
003c7a cfcf      	RJMP _0xF7
                 ; 0000 0402             }
                 ; 0000 0403 
                 ; 0000 0404             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0405             if(!isFileOpen)
                 _0xFC:
003c7b 3010      	CPI  R17,0
003c7c f489      	BRNE _0xFF
                 ; 0000 0406             {
                 ; 0000 0407                 res = LOG_openFile(&file,LOGFILE_DATA);
003c7d 940e c46f 	CALL SUBOPT_0x5D
003c7f 940e c474 	CALL SUBOPT_0x5E
003c81 01af      	MOVW R20,R30
                 ; 0000 0408                 if(res < 0)
003c82 2355      	TST  R21
003c83 f44a      	BRPL _0x100
                 ; 0000 0409                 {
                 ; 0000 040A                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
003c84 e3ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
003c85 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
003c86 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
003c87 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
003c88 940e c47f 	CALL SUBOPT_0x5F
003c8a 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 040B                     continue;
003c8c cfbd      	RJMP _0xF7
                 ; 0000 040C                 }
                 ; 0000 040D                 isFileOpen = 1;
                 _0x100:
003c8d e011      	LDI  R17,LOW(1)
                 ; 0000 040E             }
                 ; 0000 040F 
                 ; 0000 0410             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
003c8e 940e c46f 	CALL SUBOPT_0x5D
003c90 940e c484 	CALL SUBOPT_0x60
003c92 940e e324 	CALL __PUTPARD1
003c94 89e8      	LDD  R30,Y+16
003c95 89f9      	LDD  R31,Y+16+1
003c96 93fa      	ST   -Y,R31
003c97 93ea      	ST   -Y,R30
003c98 940e c489 	CALL SUBOPT_0x61
003c9a 01af      	MOVW R20,R30
                 ; 0000 0411             if(res < 0)
003c9b 2355      	TST  R21
003c9c f43a      	BRPL _0x101
                 ; 0000 0412             {
                 ; 0000 0413                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
003c9d e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
003c9e e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
003c9f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
003ca0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
003ca1 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0414                 continue;
003ca3 cfa6      	RJMP _0xF7
                 ; 0000 0415             }
                 ; 0000 0416             count++;
                 _0x101:
                +
003ca4 5f2f     +SUBI R18 , LOW ( - 1 )
003ca5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0417         }
                 ; 0000 0418     }
003ca6 cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 0419 
                 ; 0000 041A     if(isFileOpen)
003ca7 3010      	CPI  R17,0
003ca8 f071      	BREQ _0x102
                 ; 0000 041B     {
                 ; 0000 041C         res = LOG_closeFile(&file);
003ca9 01de      	MOVW R26,R28
003caa 9650      	ADIW R26,16
003cab 940e c48f 	CALL SUBOPT_0x62
                 ; 0000 041D         if(res < 0)
003cad f44a      	BRPL _0x103
                 ; 0000 041E         {
                 ; 0000 041F             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
003cae eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
003caf e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
003cb0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
003cb1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
003cb2 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0420             return -1;
003cb4 efef      	LDI  R30,LOW(65535)
003cb5 efff      	LDI  R31,HIGH(65535)
003cb6 c00b      	RJMP _0x20E009B
                 ; 0000 0421         }
                 ; 0000 0422     }
                 _0x103:
                 ; 0000 0423 
                 ; 0000 0424     if(count > 0){
                 _0x102:
003cb7 2400      	CLR  R0
003cb8 1602      	CP   R0,R18
003cb9 0603      	CPC  R0,R19
003cba f434      	BRGE _0x104
                 ; 0000 0425         //isDataLogEmpty  = 0;
                 ; 0000 0426         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
003cbb eced     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
003cbc e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
003cbd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
003cbe e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
003cbf 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0427     }
                 ; 0000 0428 
                 ; 0000 0429     return count;
                 _0x104:
003cc1 01f9      	MOVW R30,R18
                 _0x20E009B:
003cc2 940e e3a0 	CALL __LOADLOCR6
003cc4 96e0      	ADIW R28,48
003cc5 5fde      	SUBI R29,-2
003cc6 9508      	RET
                 ; 0000 042A }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 042D {
                 _eventSave:
                 ; 0000 042E     FIL                     file;
                 ; 0000 042F     char                    isFileOpen = 0;
                 ; 0000 0430     int                     count = 0;
                 ; 0000 0431     int                     res;
                 ; 0000 0432     unsigned long int       timestamp;
                 ; 0000 0433     unsigned char           eventID;
                 ; 0000 0434     unsigned char           eventStatus;
                 ; 0000 0435 
                 ; 0000 0436     // -- for debug -- //
                 ; 0000 0437     //struct rtc_structure    dt;
                 ; 0000 0438     // --------------- //
                 ; 0000 0439 
                 ; 0000 043A     while (count < MAX_EVENT_QUEUE)
003cc7 97a5      	SBIW R28,37
003cc8 50d2      	SUBI R29,2
003cc9 940e e399 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
003ccb e010      	LDI  R17,0
                +
003ccc e020     +LDI R18 , LOW ( 0 )
003ccd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
003cce 3124     +CPI R18 , LOW ( 20 )
003ccf e0e0     +LDI R30 , HIGH ( 20 )
003cd0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003cd1 f014      	BRLT PC+3
003cd2 940c 3d2f 	JMP _0x107
                 ; 0000 043B     {
                 ; 0000 043C         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003cd4 940e c49a 	CALL SUBOPT_0x63
003cd6 b7ed      	IN   R30,SPL
003cd7 b7fe      	IN   R31,SPH
003cd8 93fa      	ST   -Y,R31
003cd9 93ea      	ST   -Y,R30
003cda 930f      	PUSH R16
003cdb 01de      	MOVW R26,R28
003cdc 961a      	ADIW R26,10
003cdd 940e 7849 	CALL _fetchEventQueue
003cdf 910f      	POP  R16
003ce0 01af      	MOVW R20,R30
                 ; 0000 043D         if(res < 0)
003ce1 2355      	TST  R21
003ce2 f40a      	BRPL _0x108
                 ; 0000 043E         {
                 ; 0000 043F             break;
003ce3 c04b      	RJMP _0x107
                 ; 0000 0440         }
                 ; 0000 0441         else
                 _0x108:
                 ; 0000 0442         {
                 ; 0000 0443             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003ce4 efe6     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003ce5 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003ce6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003ce7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003ce8 940e e324 	CALL __PUTPARD1
003cea 940e c49f 	CALL SUBOPT_0x64
003cec 2fe0      	MOV  R30,R16
003ced 940e c4a6 	CALL SUBOPT_0x65
003cef 89ea      	LDD  R30,Y+18
003cf0 940e c4a6 	CALL SUBOPT_0x65
003cf2 940e c4ac 	CALL SUBOPT_0x66
                 ; 0000 0444             /*
                 ; 0000 0445             binary_to_date(timestamp, &dt);
                 ; 0000 0446             printRTC(dt);
                 ; 0000 0447             */
                 ; 0000 0448 
                 ; 0000 0449             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003cf4 940e c4b1 	CALL SUBOPT_0x67
003cf6 940e e389 	CALL __CPD02
003cf8 f029      	BREQ _0x10B
003cf9 940e c4b1 	CALL SUBOPT_0x67
003cfb 940e c37d 	CALL SUBOPT_0x3A
003cfd f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 044A             {
                 ; 0000 044B                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003cfe e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003cff e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003d00 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003d01 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003d02 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 044C                 continue;
003d04 cfc9      	RJMP _0x105
                 ; 0000 044D             }
                 ; 0000 044E 
                 ; 0000 044F             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0450             if(!isFileOpen)
                 _0x10A:
003d05 3010      	CPI  R17,0
003d06 f489      	BRNE _0x10D
                 ; 0000 0451             {
                 ; 0000 0452                 res = LOG_openFile(&file,LOGFILE_EVENT);
003d07 940e c4b6 	CALL SUBOPT_0x68
003d09 940e c4bb 	CALL SUBOPT_0x69
003d0b 01af      	MOVW R20,R30
                 ; 0000 0453                 if(res < 0)
003d0c 2355      	TST  R21
003d0d f44a      	BRPL _0x10E
                 ; 0000 0454                 {
                 ; 0000 0455                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003d0e e5ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003d0f e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003d10 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003d11 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003d12 940e c4c6 	CALL SUBOPT_0x6A
003d14 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 0456                     continue;
003d16 cfb7      	RJMP _0x105
                 ; 0000 0457                 }
                 ; 0000 0458                 isFileOpen = 1;
                 _0x10E:
003d17 e011      	LDI  R17,LOW(1)
                 ; 0000 0459             }
                 ; 0000 045A 
                 ; 0000 045B             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003d18 940e c4b6 	CALL SUBOPT_0x68
003d1a 940e c4cb 	CALL SUBOPT_0x6B
003d1c 940e e324 	CALL __PUTPARD1
003d1e 930a      	ST   -Y,R16
003d1f 85ad      	LDD  R26,Y+13
003d20 940e 83c3 	CALL _LOG_insertEvent
003d22 01af      	MOVW R20,R30
                 ; 0000 045C             if(res < 0)
003d23 2355      	TST  R21
003d24 f43a      	BRPL _0x10F
                 ; 0000 045D             {
                 ; 0000 045E                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003d25 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003d26 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003d27 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003d28 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003d29 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 045F                 continue;
003d2b cfa2      	RJMP _0x105
                 ; 0000 0460             }
                 ; 0000 0461             count++;
                 _0x10F:
                +
003d2c 5f2f     +SUBI R18 , LOW ( - 1 )
003d2d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0462         }
                 ; 0000 0463     }
003d2e cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 0464 
                 ; 0000 0465     if(isFileOpen)
003d2f 3010      	CPI  R17,0
003d30 f071      	BREQ _0x110
                 ; 0000 0466     {
                 ; 0000 0467         res = LOG_closeFile(&file);
003d31 01de      	MOVW R26,R28
003d32 961b      	ADIW R26,11
003d33 940e c48f 	CALL SUBOPT_0x62
                 ; 0000 0468         if(res < 0)
003d35 f44a      	BRPL _0x111
                 ; 0000 0469         {
                 ; 0000 046A             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003d36 ebed     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003d37 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003d38 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003d39 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003d3a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 046B             return -1;
003d3c efef      	LDI  R30,LOW(65535)
003d3d efff      	LDI  R31,HIGH(65535)
003d3e c00b      	RJMP _0x20E009A
                 ; 0000 046C         }
                 ; 0000 046D     }
                 _0x111:
                 ; 0000 046E 
                 ; 0000 046F     if(count > 0){
                 _0x110:
003d3f 2400      	CLR  R0
003d40 1602      	CP   R0,R18
003d41 0603      	CPC  R0,R19
003d42 f434      	BRGE _0x112
                 ; 0000 0470         //isEventLogEmpty    = 0;
                 ; 0000 0471         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003d43 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003d44 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003d45 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003d46 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003d47 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0472     }
                 ; 0000 0473 
                 ; 0000 0474     return count;
                 _0x112:
003d49 01f9      	MOVW R30,R18
                 _0x20E009A:
003d4a 940e e3a0 	CALL __LOADLOCR6
003d4c 96ab      	ADIW R28,43
003d4d 5fde      	SUBI R29,-2
003d4e 9508      	RET
                 ; 0000 0475 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0478 {
                 _logReport:
                 ; 0000 0479     FIL                     file;
                 ; 0000 047A     int                     res;
                 ; 0000 047B     unsigned long int       index;
                 ; 0000 047C     unsigned long int       timestamp;
                 ; 0000 047D     unsigned int            channel;
                 ; 0000 047E     float                   value;
                 ; 0000 047F     unsigned char           id;
                 ; 0000 0480     unsigned char           status;
                 ; 0000 0481 
                 ; 0000 0482     // -- send data log if any exist -- //
                 ; 0000 0483     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003d4f 97ac      	SBIW R28,44
003d50 50d2      	SUBI R29,2
003d51 940e e399 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003d53 91e0 14dd 	LDS  R30,_isDataLogEmpty
003d55 30e0      	CPI  R30,0
003d56 f421      	BRNE _0x114
003d57 91a0 1426 	LDS  R26,_logDataWait
003d59 30a0      	CPI  R26,LOW(0x0)
003d5a f009      	BREQ _0x115
                 _0x114:
003d5b c091      	RJMP _0x113
                 _0x115:
                 ; 0000 0484     {
                 ; 0000 0485         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003d5c e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003d5d e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003d5e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003d5f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003d60 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0486         res = LOG_openFile(&file,LOGFILE_DATA);
003d62 940e c4d0 	CALL SUBOPT_0x6C
003d64 940e c474 	CALL SUBOPT_0x5E
003d66 018f      	MOVW R16,R30
                 ; 0000 0487         if(res < 0)
003d67 2311      	TST  R17
003d68 f44a      	BRPL _0x116
                 ; 0000 0488         {
                 ; 0000 0489             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003d69 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003d6a e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003d6b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003d6c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003d6d 940e c47f 	CALL SUBOPT_0x5F
003d6f 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 048A         }
                 ; 0000 048B         else
003d71 c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 048C         {
                 ; 0000 048D             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003d72 940e c4d0 	CALL SUBOPT_0x6C
003d74 940e c462 	CALL SUBOPT_0x5A
003d76 b7ed      	IN   R30,SPL
003d77 b7fe      	IN   R31,SPH
003d78 9731      	SBIW R30,1
003d79 93fa      	ST   -Y,R31
003d7a 93ea      	ST   -Y,R30
003d7b 933f      	PUSH R19
003d7c 932f      	PUSH R18
003d7d 940e c462 	CALL SUBOPT_0x5A
003d7f 01de      	MOVW R26,R28
003d80 9656      	ADIW R26,22
003d81 940e 8326 	CALL _LOG_readData
003d83 912f      	POP  R18
003d84 913f      	POP  R19
003d85 018f      	MOVW R16,R30
                 ; 0000 048E             if(res < 0)
003d86 2311      	TST  R17
003d87 f44a      	BRPL _0x118
                 ; 0000 048F             {
                 ; 0000 0490                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003d88 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003d89 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003d8a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003d8b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003d8c 940e c47f 	CALL SUBOPT_0x5F
003d8e 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 0491             }
                 ; 0000 0492             else if(res == 0)
003d90 c053      	RJMP _0x119
                 _0x118:
003d91 2e00      	MOV  R0,R16
003d92 2a01      	OR   R0,R17
003d93 f439      	BRNE _0x11A
                 ; 0000 0493             {
                 ; 0000 0494                 //isDataLogEmpty      = 1;
                 ; 0000 0495                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003d94 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003d95 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003d96 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003d97 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003d98 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 0496             }
                 ; 0000 0497             else
003d9a c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0498             {
                 ; 0000 0499                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003d9b 940e c4d5 	CALL SUBOPT_0x6D
003d9d f039      	BREQ _0x11D
003d9e 940e c430 	CALL SUBOPT_0x53
003da0 f021      	BREQ _0x11D
                +
003da1 3025     +CPI R18 , LOW ( 5 )
003da2 e0e0     +LDI R30 , HIGH ( 5 )
003da3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003da4 f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 049A                 {
                 ; 0000 049B                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003da5 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003da6 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003da7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003da8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003da9 940e c47f 	CALL SUBOPT_0x5F
003dab 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 049C                 }
                 ; 0000 049D                 else
003dad c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 049E                 {
                 ; 0000 049F                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003dae ecec     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003daf e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003db0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003db1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003db2 940e c417 	CALL SUBOPT_0x50
003db4 01f9      	MOVW R30,R18
003db5 940e c357 	CALL SUBOPT_0x34
003db7 940e c420 	CALL SUBOPT_0x51
                 ; 0000 04A0                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003db9 e0e1      	LDI  R30,LOW(1)
003dba 940e c432 	CALL SUBOPT_0x54
003dbc 933a      	ST   -Y,R19
003dbd 932a      	ST   -Y,R18
003dbe 940e c43a 	CALL SUBOPT_0x55
003dc0 018f      	MOVW R16,R30
                 ; 0000 04A1                     if(res < 0)
003dc1 2311      	TST  R17
003dc2 f44a      	BRPL _0x120
                 ; 0000 04A2                     {
                 ; 0000 04A3                         logDataWait.frameID    = 0;
003dc3 940e c4d9 	CALL SUBOPT_0x6E
                 ; 0000 04A4                         logDataWait.logID      = 0;
                 ; 0000 04A5                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003dc5 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003dc6 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003dc7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003dc8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003dc9 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 04A6                     }
                 ; 0000 04A7                     else
003dcb c018      	RJMP _0x121
                 _0x120:
                 ; 0000 04A8                     {
                 ; 0000 04A9                         logDataWait.logID       = index;
003dcc 940e c484 	CALL SUBOPT_0x60
                +
003dce 93e0 1427+STS _logDataWait + ( 1 ) , R30
003dd0 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003dd2 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003dd4 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 04AA                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003dd6 e3e0     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003dd7 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003dd8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003dd9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003dda 940e e324 	CALL __PUTPARD1
003ddc 91e0 1426 	LDS  R30,_logDataWait
003dde 940e c4a6 	CALL SUBOPT_0x65
003de0 940e c4e9 	CALL SUBOPT_0x6F
003de2 940e c2ce 	CALL SUBOPT_0x21
                 ; 0000 04AB                     }
                 _0x121:
                 ; 0000 04AC                 }
                 _0x11F:
                 ; 0000 04AD             }
                 _0x11B:
                 _0x119:
                 ; 0000 04AE 
                 ; 0000 04AF             res = LOG_closeFile(&file);
003de4 940e c4f2 	CALL SUBOPT_0x70
                 ; 0000 04B0             if(res < 0)
003de6 f432      	BRPL _0x122
                 ; 0000 04B1             {
                 ; 0000 04B2                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003de7 e6e9     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003de8 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003de9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003dea e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003deb 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 04B3             }
                 ; 0000 04B4         }
                 _0x122:
                 _0x117:
                 ; 0000 04B5     }
                 ; 0000 04B6 
                 ; 0000 04B7     // -- send event log if any exist -- //
                 ; 0000 04B8     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003ded 91e0 14de 	LDS  R30,_isEventLogEmpty
003def 30e0      	CPI  R30,0
003df0 f421      	BRNE _0x124
003df1 91a0 142b 	LDS  R26,_logEventWait
003df3 30a0      	CPI  R26,LOW(0x0)
003df4 f009      	BREQ _0x125
                 _0x124:
003df5 c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 04B9     {
                 ; 0000 04BA         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003df6 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003df7 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003df8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003df9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003dfa 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 04BB         res = LOG_openFile(&file,LOGFILE_EVENT);
003dfc 940e c4d0 	CALL SUBOPT_0x6C
003dfe 940e c4bb 	CALL SUBOPT_0x69
003e00 018f      	MOVW R16,R30
                 ; 0000 04BC         if(res < 0)
003e01 2311      	TST  R17
003e02 f42a      	BRPL _0x126
                 ; 0000 04BD         {
                 ; 0000 04BE             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003e03 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003e04 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003e05 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003e06 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003e07 c071      	RJMP _0x13E
                 ; 0000 04BF         }
                 ; 0000 04C0         else
                 _0x126:
                 ; 0000 04C1         {
                 ; 0000 04C2             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003e08 940e c4d0 	CALL SUBOPT_0x6C
003e0a 940e c462 	CALL SUBOPT_0x5A
003e0c b7ed      	IN   R30,SPL
003e0d b7fe      	IN   R31,SPH
003e0e 93fa      	ST   -Y,R31
003e0f 93ea      	ST   -Y,R30
003e10 935f      	PUSH R21
003e11 b7ed      	IN   R30,SPL
003e12 b7fe      	IN   R31,SPH
003e13 93fa      	ST   -Y,R31
003e14 93ea      	ST   -Y,R30
003e15 934f      	PUSH R20
003e16 01de      	MOVW R26,R28
003e17 9656      	ADIW R26,22
003e18 940e 844f 	CALL _LOG_readEvent
003e1a 914f      	POP  R20
003e1b 915f      	POP  R21
003e1c 018f      	MOVW R16,R30
                 ; 0000 04C3             if(res < 0)
003e1d 2311      	TST  R17
003e1e f43a      	BRPL _0x128
                 ; 0000 04C4             {
                 ; 0000 04C5                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003e1f ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003e20 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003e21 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003e22 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003e23 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 04C6             }
                 ; 0000 04C7             else if(res == 0)
003e25 c04c      	RJMP _0x129
                 _0x128:
003e26 2e00      	MOV  R0,R16
003e27 2a01      	OR   R0,R17
003e28 f439      	BRNE _0x12A
                 ; 0000 04C8             {
                 ; 0000 04C9                 //isEventLogEmpty     = 1;
                 ; 0000 04CA                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003e29 ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003e2a e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003e2b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003e2c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003e2d 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 04CB             }
                 ; 0000 04CC             else
003e2f c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 04CD             {
                 ; 0000 04CE                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003e30 940e c4d5 	CALL SUBOPT_0x6D
003e32 f019      	BREQ _0x12D
003e33 940e c430 	CALL SUBOPT_0x53
003e35 f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 04CF                 {
                 ; 0000 04D0                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003e36 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003e37 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003e38 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003e39 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003e3a 940e c4c6 	CALL SUBOPT_0x6A
003e3c 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 04D1                 }
                 ; 0000 04D2                 else
003e3e c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 04D3                 {
                 ; 0000 04D4                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003e3f efef     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003e40 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003e41 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003e42 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003e43 940e c417 	CALL SUBOPT_0x50
003e45 940e c44c 	CALL SUBOPT_0x58
                 ; 0000 04D5                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003e47 e0e1      	LDI  R30,LOW(1)
003e48 940e c432 	CALL SUBOPT_0x54
003e4a 935a      	ST   -Y,R21
003e4b 2fa4      	MOV  R26,R20
003e4c 940e 545c 	CALL _ETH_sendEventReportCmd
003e4e 018f      	MOVW R16,R30
                 ; 0000 04D6                     if(res < 0)
003e4f 2311      	TST  R17
003e50 f44a      	BRPL _0x130
                 ; 0000 04D7                     {
                 ; 0000 04D8                         logEventWait.frameID    = 0;
003e51 940e c4ff 	CALL SUBOPT_0x71
                 ; 0000 04D9                         logEventWait.logID      = 0;
                 ; 0000 04DA                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003e53 e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003e54 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003e55 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003e56 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003e57 940e c1f5 	CALL SUBOPT_0x3
                 ; 0000 04DB                     }
                 ; 0000 04DC                     else
003e59 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 04DD                     {
                 ; 0000 04DE                         logEventWait.logID      = index;
003e5a 940e c484 	CALL SUBOPT_0x60
                +
003e5c 93e0 142c+STS _logEventWait + ( 1 ) , R30
003e5e 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003e60 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003e62 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 04DF                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003e64 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003e65 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003e66 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003e67 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003e68 940e e324 	CALL __PUTPARD1
003e6a 91e0 142b 	LDS  R30,_logEventWait
003e6c 940e c4a6 	CALL SUBOPT_0x65
003e6e 940e c50f 	CALL SUBOPT_0x72
003e70 940e c2ce 	CALL SUBOPT_0x21
                 ; 0000 04E0                     }
                 _0x131:
                 ; 0000 04E1                 }
                 _0x12F:
                 ; 0000 04E2             }
                 _0x12B:
                 _0x129:
                 ; 0000 04E3 
                 ; 0000 04E4             res = LOG_closeFile(&file);
003e72 940e c4f2 	CALL SUBOPT_0x70
                 ; 0000 04E5             if(res < 0)
003e74 f462      	BRPL _0x132
                 ; 0000 04E6             {
                 ; 0000 04E7                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003e75 eae6     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003e76 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003e77 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003e78 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003e79 940e e324 	CALL __PUTPARD1
003e7b ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003e7c e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003e7d 940e c357 	CALL SUBOPT_0x34
003e7f 940e c26b 	CALL SUBOPT_0x12
                 ; 0000 04E8             }
                 ; 0000 04E9         }
                 _0x132:
                 ; 0000 04EA     }
                 ; 0000 04EB 
                 ; 0000 04EC     return 0;
                 _0x123:
003e81 e0e0      	LDI  R30,LOW(0)
003e82 e0f0      	LDI  R31,HIGH(0)
003e83 940e e3a0 	CALL __LOADLOCR6
003e85 96e2      	ADIW R28,50
003e86 5fde      	SUBI R29,-2
003e87 9508      	RET
                 ; 0000 04ED }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003e88 931a      	ST   -Y,R17
003e89 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003e8a e000     +LDI R16 , LOW ( 0 )
003e8b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003e8c e8e0      	LDI  R30,LOW(128)
003e8d 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003e8f e0e0      	LDI  R30,LOW(0)
003e90 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003e92 940e 4177 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003e94 b7e4      	IN   R30,0x34
003e95 ffe0      	SBRS R30,0
003e96 c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003e97 ecee     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003e98 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003e99 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003e9a e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003e9b 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003e9d b7e4      	IN   R30,0x34
003e9e 7fee      	ANDI R30,0xFE
003e9f bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003ea0 b7e4      	IN   R30,0x34
003ea1 ffe1      	SBRS R30,1
003ea2 c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003ea3 eee1     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003ea4 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003ea5 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003ea6 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003ea7 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003ea9 b7e4      	IN   R30,0x34
003eaa 7fed      	ANDI R30,0xFD
003eab bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003eac b7e4      	IN   R30,0x34
003ead ffe2      	SBRS R30,2
003eae c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003eaf efe4     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003eb0 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003eb1 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003eb2 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003eb3 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003eb5 b7e4      	IN   R30,0x34
003eb6 7feb      	ANDI R30,0xFB
003eb7 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003eb8 b7e4      	IN   R30,0x34
003eb9 ffe3      	SBRS R30,3
003eba c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003ebb e0e8     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003ebc e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003ebd e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003ebe e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003ebf 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003ec1 b7e4      	IN   R30,0x34
003ec2 7fe7      	ANDI R30,0XF7
003ec3 bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003ec4 b7e4      	IN   R30,0x34
003ec5 ffe4      	SBRS R30,4
003ec6 c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003ec7 e1eb     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003ec8 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003ec9 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003eca e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003ecb 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003ecd b7e4      	IN   R30,0x34
003ece 7eef      	ANDI R30,0xEF
003ecf bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003ed0 940e 4319 	CALL _init_io
                 ; 0001 0036     init_i2c();
003ed2 d052      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003ed3 d054      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003ed4 940e 4507 	CALL _init_adc
                 ; 0001 0039     init_timer();
003ed6 940e 4266 	CALL _init_timer
                 ; 0001 003A     init_common();
003ed8 d054      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003ed9 940e c518 	CALL SUBOPT_0x73
003edb 940e 42f3 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003edd efa4      	LDI  R26,LOW(500)
003ede e0b1      	LDI  R27,HIGH(500)
003edf 940e dfc5 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003ee1 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003ee2 940e 48f6 	CALL _init_RTC
003ee4 940e c51b 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003ee6 940e 8055 	CALL _init_oled
003ee8 940e c51b 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003eea 940e 44a8 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003eec 940e c51f 	CALL SUBOPT_0x75
003eee 940e 42f3 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003ef0 940e c522 	CALL SUBOPT_0x76
003ef2 940e 42f3 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003ef4 940e c525 	CALL SUBOPT_0x77
003ef6 940e 42f3 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003ef8 940e 535a 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     playBeep();
003efa d04a      	RCALL _playBeep
                 ; 0001 004D     showLedInitComplete();
003efb d09c      	RCALL _showLedInitComplete
                 ; 0001 004E     showDebugInitComplete();
003efc d04d      	RCALL _showDebugInitComplete
                 ; 0001 004F 
                 ; 0001 0050     if(SD_init() == 0)
003efd 940e 8244 	CALL _SD_init
003eff 9730      	SBIW R30,0
003f00 f459      	BRNE _0x2000A
                 ; 0001 0051     {
                 ; 0001 0052         if(LOG_init() < 0)
003f01 940e 862c 	CALL _LOG_init
003f03 23ff      	TST  R31
003f04 f432      	BRPL _0x2000B
                 ; 0001 0053         {
                 ; 0001 0054             // -- log status = error -- //
                 ; 0001 0055             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003f05 e2ea     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003f06 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003f07 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003f08 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003f09 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 0056         }
                 ; 0001 0057 
                 ; 0001 0058         // -- log status = ok -- //
                 ; 0001 0059     }
                 _0x2000B:
                 ; 0001 005A     else
003f0b c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005B     {
                 ; 0001 005C         // -- sd status = error -- //
                 ; 0001 005D         printDebug("<initial_system> SD_init() failed\r\n");
                +
003f0c e4ef     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003f0d e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003f0e e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003f0f e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003f10 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 005E     }
                 _0x2000C:
                 ; 0001 005F 
                 ; 0001 0060     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003f12 e0a8      	LDI  R26,LOW(8)
003f13 940e 4420 	CALL _read_adc
003f15 e0ad      	LDI  R26,LOW(13)
003f16 e0b0      	LDI  R27,HIGH(13)
003f17 940e e21a 	CALL __MULW12U
003f19 91a0 1430 	LDS  R26,_raw_rtc
003f1b 91b0 1431 	LDS  R27,_raw_rtc+1
003f1d 0fae      	ADD  R26,R30
003f1e 1fbf      	ADC  R27,R31
003f1f 940e a614 	CALL _srand
                 ; 0001 0061 
                 ; 0001 0062     // -------- Configuration Initialize ----------- //
                 ; 0001 0063 //    readConfig();
                 ; 0001 0064 //    initAlarm();        //delay_ms(100);
                 ; 0001 0065 //
                 ; 0001 0066 //    if(init_logfile() < 0){
                 ; 0001 0067 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0068 //        return -1;
                 ; 0001 0069 //    }
                 ; 0001 006A 
                 ; 0001 006B 
                 ; 0001 006C     return res;
003f21 01f8      	MOVW R30,R16
003f22 9109      	LD   R16,Y+
003f23 9119      	LD   R17,Y+
003f24 9508      	RET
                 ; 0001 006D }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0070 {
                 _init_i2c:
                 ; 0001 0071     // I2C Bus initialization
                 ; 0001 0072     i2c_init();
003f25 940e df74 	CALL _i2c_init
                 ; 0001 0073 }
003f27 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0076 {
                 _init_spi:
                 ; 0001 0077     // SPI initialization
                 ; 0001 0078     // SPI Type: Master
                 ; 0001 0079     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007A     // SPI Clock Phase: Cycle Start
                 ; 0001 007B     // SPI Clock Polarity: Low
                 ; 0001 007C     // SPI Data Order: MSB First
                 ; 0001 007D     SPCR=0x50;
003f28 e5e0      	LDI  R30,LOW(80)
003f29 bdec      	OUT  0x2C,R30
                 ; 0001 007E     SPSR=0x00;
003f2a e0e0      	LDI  R30,LOW(0)
003f2b bded      	OUT  0x2D,R30
                 ; 0001 007F }
003f2c 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0082 {
                 _init_common:
                 ; 0001 0083     // External Interrupt(s) initialization
                 ; 0001 0084     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0085     EICRA=0x00;
003f2d e0e0      	LDI  R30,LOW(0)
003f2e 93e0 0069 	STS  105,R30
                 ; 0001 0086     EICRB=0x00;
003f30 93e0 006a 	STS  106,R30
                 ; 0001 0087     EIMSK=0x00;
003f32 bbed      	OUT  0x1D,R30
                 ; 0001 0088 
                 ; 0001 0089     PCMSK0=0x00;
003f33 93e0 006b 	STS  107,R30
                 ; 0001 008A     PCMSK1=0x00;
003f35 93e0 006c 	STS  108,R30
                 ; 0001 008B     PCMSK2=0x00;
003f37 93e0 006d 	STS  109,R30
                 ; 0001 008C     PCICR=0x00;
003f39 93e0 0068 	STS  104,R30
                 ; 0001 008D 
                 ; 0001 008E     // Analog Comparator initialization
                 ; 0001 008F     // Analog Comparator: Off
                 ; 0001 0090     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0091     ACSR=0x80;
003f3b e8e0      	LDI  R30,LOW(128)
003f3c bfe0      	OUT  0x30,R30
                 ; 0001 0092     ADCSRB=0x00;
003f3d e0e0      	LDI  R30,LOW(0)
003f3e 93e0 007b 	STS  123,R30
                 ; 0001 0093     DIDR1=0x00;
003f40 93e0 007f 	STS  127,R30
                 ; 0001 0094 
                 ; 0001 0095     // TWI initialization
                 ; 0001 0096     // TWI disabled
                 ; 0001 0097     TWCR=0x00;
003f42 93e0 00bc 	STS  188,R30
                 ; 0001 0098 }
003f44 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009B {
                 _playBeep:
                 ; 0001 009C     BUZZER = 1;                                     // Buzzer ON Starting
003f45 9a77      	SBI  0xE,7
                 ; 0001 009D     delay_ms(200);
003f46 940e c35c 	CALL SUBOPT_0x35
                 ; 0001 009E     BUZZER = 0;
003f48 9877      	CBI  0xE,7
                 ; 0001 009F }
003f49 9508      	RET
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A2 {
                 _showDebugInitComplete:
                 ; 0001 00A3     struct rtc_structure time;
                 ; 0001 00A4     struct prop_cnfg_st properties_config;
                 ; 0001 00A5 
                 ; 0001 00A6     printDebug("Initial Device Completed at - ");
003f4a 97ef      	SBIW R28,63
003f4b 97ef      	SBIW R28,63
003f4c 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003f4d e7e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003f4e e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003f4f e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003f50 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003f51 940e c1f5 	CALL SUBOPT_0x3
                 ; 0001 00A7     RTC_getDateTime(&time,properties_config.timeZone);
003f53 01fe      	MOVW R30,R28
003f54 55ef      	SUBI R30,LOW(-(161))
003f55 4fff      	SBCI R31,HIGH(-(161))
003f56 93fa      	ST   -Y,R31
003f57 93ea      	ST   -Y,R30
003f58 01de      	MOVW R26,R28
003f59 55ae      	SUBI R26,LOW(-162)
003f5a 4fbf      	SBCI R27,HIGH(-162)
003f5b 91ec      	LD   R30,X
003f5c e0f0      	LDI  R31,0
003f5d fde7      	SBRC R30,7
003f5e efff      	SER  R31
003f5f 01df      	MOVW R26,R30
003f60 940e 4869 	CALL _RTC_getDateTime
                 ; 0001 00A8     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00A9             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003f62 e9e2     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003f63 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003f64 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003f65 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003f66 940e e324 	CALL __PUTPARD1
                +
003f68 01fe     +MOVW R30 , R28
003f69 55eb     +SUBI R30 , LOW ( - 165 )
003f6a 4fff     +SBCI R31 , HIGH ( - 165 )
003f6b 9001     +LD R0 , Z +
003f6c 9011     +LD R1 , Z +
003f6d 9161     +LD R22 , Z +
003f6e 8170     +LD R23 , Z
003f6f 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003f70 940e e324 	CALL __PUTPARD1
003f72 01fe      	MOVW R30,R28
003f73 55e7      	SUBI R30,LOW(-(169))
003f74 4fff      	SBCI R31,HIGH(-(169))
003f75 9634      	ADIW R30,4
003f76 940e c528 	CALL SUBOPT_0x78
003f78 01fe      	MOVW R30,R28
003f79 55e3      	SUBI R30,LOW(-(173))
003f7a 4fff      	SBCI R31,HIGH(-(173))
003f7b 9638      	ADIW R30,8
003f7c 940e c528 	CALL SUBOPT_0x78
003f7e 01fe      	MOVW R30,R28
003f7f 54ef      	SUBI R30,LOW(-(177))
003f80 4fff      	SBCI R31,HIGH(-(177))
003f81 963c      	ADIW R30,12
003f82 940e c528 	CALL SUBOPT_0x78
003f84 01fe      	MOVW R30,R28
003f85 54eb      	SUBI R30,LOW(-(181))
003f86 4fff      	SBCI R31,HIGH(-(181))
003f87 9670      	ADIW R30,16
003f88 940e c528 	CALL SUBOPT_0x78
003f8a 01fe      	MOVW R30,R28
003f8b 54e7      	SUBI R30,LOW(-(185))
003f8c 4fff      	SBCI R31,HIGH(-(185))
003f8d 9674      	ADIW R30,20
003f8e 940e c528 	CALL SUBOPT_0x78
003f90 e188      	LDI  R24,24
003f91 940e 9e86 	CALL _printDebug
003f93 966c      	ADIW R28,28
                 ; 0001 00AA }
003f94 96ef      	ADIW R28,63
003f95 96ef      	ADIW R28,63
003f96 96ed      	ADIW R28,61
003f97 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AD {
                 _showLedInitComplete:
                 ; 0001 00AE     LED_ON(BIT_LED_ALARM);
003f98 91e0 0102 	LDS  R30,258
003f9a 7bef      	ANDI R30,0xBF
003f9b 940e c52e 	CALL SUBOPT_0x79
                 ; 0001 00AF     delay_ms(200);
                 ; 0001 00B0 
                 ; 0001 00B1     LED_ON(BIT_LED_LINK);
003f9d 91e0 0102 	LDS  R30,258
003f9f 7def      	ANDI R30,0xDF
003fa0 940e c52e 	CALL SUBOPT_0x79
                 ; 0001 00B2     delay_ms(200);
                 ; 0001 00B3 
                 ; 0001 00B4     LED_ON(BIT_LED_TEMP);
003fa2 91e0 0102 	LDS  R30,258
003fa4 7eef      	ANDI R30,0xEF
003fa5 940e c52e 	CALL SUBOPT_0x79
                 ; 0001 00B5     delay_ms(200);
                 ; 0001 00B6 
                 ; 0001 00B7     LED_ON(BIT_LED_PWR);
003fa7 91e0 0102 	LDS  R30,258
003fa9 7fe7      	ANDI R30,0XF7
003faa 940e c52e 	CALL SUBOPT_0x79
                 ; 0001 00B8     delay_ms(200);
                 ; 0001 00B9 
                 ; 0001 00BA     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003fac 91e0 0102 	LDS  R30,258
003fae 67e8      	ORI  R30,LOW(0x78)
003faf 940e c52e 	CALL SUBOPT_0x79
                 ; 0001 00BB     delay_ms(200);
                 ; 0001 00BC 
                 ; 0001 00BD     LED_ON(BIT_LED_PWR);
003fb1 91e0 0102 	LDS  R30,258
003fb3 7fe7      	ANDI R30,0XF7
003fb4 93e0 0102 	STS  258,R30
                 ; 0001 00BE     delay_ms(50);
003fb6 940e c531 	CALL SUBOPT_0x7A
                 ; 0001 00BF }
003fb8 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003fb9 940e c535 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003fbb 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003fbd 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003fbf 2fe1      	MOV  R30,R17
003fc0 71ec      	ANDI R30,LOW(0x1C)
003fc1 f011      	BREQ PC+3
003fc2 940c 406d 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003fc4 91e0 1420 	LDS  R30,_ETH_current_mode
003fc6 30e0      	CPI  R30,0
003fc7 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003fc8 eaa3      	LDI  R26,LOW(_rx_wr_index0)
003fc9 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003fca 940e c549 	CALL SUBOPT_0x7C
003fcc 9731      	SBIW R30,1
003fcd 55e1      	SUBI R30,LOW(-_rx_buffer0)
003fce 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003fcf 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003fd0 91a0 0fa3 	LDS  R26,_rx_wr_index0
003fd2 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003fd4 3fa4      	CPI  R26,LOW(0x1F4)
003fd5 e0e1      	LDI  R30,HIGH(0x1F4)
003fd6 07be      	CPC  R27,R30
003fd7 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003fd8 e0e0      	LDI  R30,LOW(0)
003fd9 93e0 0fa3 	STS  _rx_wr_index0,R30
003fdb 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003fdd eaa7      	LDI  R26,LOW(_rx_counter0)
003fde e0bf      	LDI  R27,HIGH(_rx_counter0)
003fdf 940e c549 	CALL SUBOPT_0x7C
003fe1 3fe4      	CPI  R30,LOW(0x1F4)
003fe2 e0a1      	LDI  R26,HIGH(0x1F4)
003fe3 07fa      	CPC  R31,R26
003fe4 f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003fe5 e0e0      	LDI  R30,LOW(0)
003fe6 93e0 0fa7 	STS  _rx_counter0,R30
003fe8 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003fea 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003feb e0e3      	LDI  R30,LOW(3)
003fec 93ea      	ST   -Y,R30
                +
003fed efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003fee e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003fef d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003ff0 e0e3      	LDI  R30,LOW(3)
003ff1 93ea      	ST   -Y,R30
                +
003ff2 e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003ff3 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003ff4 d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003ff5 e0e3      	LDI  R30,LOW(3)
003ff6 93ea      	ST   -Y,R30
                +
003ff7 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003ff8 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003ff9 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003ffa c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003ffb 2fa0      	MOV  R26,R16
003ffc d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003ffd 940e c54f 	CALL SUBOPT_0x7D
003fff 34a5      	CPI  R26,LOW(0x145)
004000 e0e1      	LDI  R30,HIGH(0x145)
004001 07be      	CPC  R27,R30
004002 f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
004003 940e c554 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
004005 330c      	CPI  R16,60
004006 f421      	BRNE _0x4000D
004007 91a0 10f0 	LDS  R26,_config_start
004009 30a0      	CPI  R26,LOW(0x0)
00400a f009      	BREQ _0x4000E
                 _0x4000D:
00400b c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
00400c e0e1      	LDI  R30,LOW(1)
00400d 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
00400f e0e0      	LDI  R30,LOW(0)
004010 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
004012 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
004014 c058      	RJMP _0x4000F
                 _0x4000C:
004015 300d      	CPI  R16,13
004016 f461      	BRNE _0x40011
004017 91a0 10f2 	LDS  R26,_config_end
004019 30a0      	CPI  R26,LOW(0x0)
00401a f441      	BRNE _0x40011
00401b 91a0 10f0 	LDS  R26,_config_start
00401d 30a1      	CPI  R26,LOW(0x1)
00401e f421      	BRNE _0x40011
00401f 91a0 10f3 	LDS  R26,_config_response
004021 30a0      	CPI  R26,LOW(0x0)
004022 f409      	BRNE _0x40012
                 _0x40011:
004023 c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
004024 e0ed      	LDI  R30,LOW(13)
004025 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
004027 c045      	RJMP _0x40013
                 _0x40010:
004028 300a      	CPI  R16,10
004029 f461      	BRNE _0x40015
00402a 91a0 10f2 	LDS  R26,_config_end
00402c 30ad      	CPI  R26,LOW(0xD)
00402d f441      	BRNE _0x40015
00402e 91a0 10f0 	LDS  R26,_config_start
004030 30a1      	CPI  R26,LOW(0x1)
004031 f421      	BRNE _0x40015
004032 91a0 10f3 	LDS  R26,_config_response
004034 30a0      	CPI  R26,LOW(0x0)
004035 f409      	BRNE _0x40016
                 _0x40015:
004036 c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
004037 e0ea      	LDI  R30,LOW(10)
004038 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
00403a e0e1      	LDI  R30,LOW(1)
00403b 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
00403d c02f      	RJMP _0x40017
                 _0x40014:
00403e 3405      	CPI  R16,69
00403f f441      	BRNE _0x40019
004040 91a0 10f0 	LDS  R26,_config_start
004042 30a1      	CPI  R26,LOW(0x1)
004043 f421      	BRNE _0x40019
004044 91a0 10f3 	LDS  R26,_config_response
004046 30a0      	CPI  R26,LOW(0x0)
004047 f009      	BREQ _0x4001A
                 _0x40019:
004048 c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
004049 e4e5      	LDI  R30,LOW(69)
00404a 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
00404c c020      	RJMP _0x4001B
                 _0x40018:
00404d 3503      	CPI  R16,83
00404e f441      	BRNE _0x4001D
00404f 91a0 10f0 	LDS  R26,_config_start
004051 30a1      	CPI  R26,LOW(0x1)
004052 f421      	BRNE _0x4001D
004053 91a0 10f3 	LDS  R26,_config_response
004055 30a0      	CPI  R26,LOW(0x0)
004056 f009      	BREQ _0x4001E
                 _0x4001D:
004057 c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
004058 e5e3      	LDI  R30,LOW(83)
004059 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
00405b c011      	RJMP _0x4001F
                 _0x4001C:
00405c 91a0 10f0 	LDS  R26,_config_start
00405e 30a1      	CPI  R26,LOW(0x1)
00405f f421      	BRNE _0x40021
004060 91a0 10f3 	LDS  R26,_config_response
004062 30a0      	CPI  R26,LOW(0x0)
004063 f409      	BRNE _0x40022
                 _0x40021:
004064 c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
004065 eeae      	LDI  R26,LOW(_configLen)
004066 e1b0      	LDI  R27,HIGH(_configLen)
004067 940e c549 	CALL SUBOPT_0x7C
004069 9731      	SBIW R30,1
00406a 55e7      	SUBI R30,LOW(-_configRd)
00406b 4ff0      	SBCI R31,HIGH(-_configRd)
00406c 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
00406d c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
00406e 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
00406f 91e0 00c0 	LDS  R30,192
004071 72e0      	ANDI R30,LOW(0x20)
004072 f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
004073 81e8      	LD   R30,Y
004074 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
004076 c0cb      	RJMP _0x20E0099
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
004077 940e c55a 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
004079 e020     +LDI R18 , LOW ( 0 )
00407a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
00407b 91a0 0fa7 	LDS  R26,_rx_counter0
00407d 91b0 0fa8 	LDS  R27,_rx_counter0+1
00407f 940e e381 	CALL __CPW02
004081 f010      	BRLO PC+3
004082 940c 40c4 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
004084 eaa5      	LDI  R26,LOW(_rx_rd_index0)
004085 e0bf      	LDI  R27,HIGH(_rx_rd_index0)
004086 940e c549 	CALL SUBOPT_0x7C
004088 9731      	SBIW R30,1
004089 55e1      	SUBI R30,LOW(-_rx_buffer0)
00408a 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
00408b 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
00408c 91a0 0fa5 	LDS  R26,_rx_rd_index0
00408e 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
004090 3fa4      	CPI  R26,LOW(0x1F4)
004091 e0e1      	LDI  R30,HIGH(0x1F4)
004092 07be      	CPC  R27,R30
004093 f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
004094 e0e0      	LDI  R30,LOW(0)
004095 93e0 0fa5 	STS  _rx_rd_index0,R30
004097 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
004099 91e0 00c1 	LDS  R30,193
00409b 77ef      	ANDI R30,0x7F
00409c 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
00409e eaa7      	LDI  R26,LOW(_rx_counter0)
00409f e0bf      	LDI  R27,HIGH(_rx_counter0)
0040a0 91ed      	LD   R30,X+
0040a1 91fd      	LD   R31,X+
0040a2 9731      	SBIW R30,1
0040a3 93fe      	ST   -X,R31
0040a4 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
0040a5 91e0 00c1 	LDS  R30,193
0040a7 68e0      	ORI  R30,0x80
0040a8 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
0040aa 940e c55f 	CALL SUBOPT_0x80
0040ac 93fa      	ST   -Y,R31
0040ad 93ea      	ST   -Y,R30
0040ae b7ed      	IN   R30,SPL
0040af b7fe      	IN   R31,SPH
0040b0 93fa      	ST   -Y,R31
0040b1 93ea      	ST   -Y,R30
0040b2 931f      	PUSH R17
0040b3 940e c51f 	CALL SUBOPT_0x75
0040b5 940e a70d 	CALL _memcpy
0040b7 911f      	POP  R17
                 ; 0002 0092         len++;
                +
0040b8 5f2f     +SUBI R18 , LOW ( - 1 )
0040b9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
0040ba 81ee      	LDD  R30,Y+6
0040bb 81ff      	LDD  R31,Y+6+1
0040bc 17e2      	CP   R30,R18
0040bd 07f3      	CPC  R31,R19
0040be f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
0040bf 81ac      	LDD  R26,Y+4
0040c0 81bd      	LDD  R27,Y+4+1
0040c1 940e dfc5 	CALL _delay_ms
                 ; 0002 0098     }
0040c3 cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
0040c4 01f9      	MOVW R30,R18
0040c5 940e e3a2 	CALL __LOADLOCR4
0040c7 c143      	RJMP _0x20E0098
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
0040c8 940e c566 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
0040ca e000     +LDI R16 , LOW ( 0 )
0040cb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
0040cc 940e c56b 	CALL SUBOPT_0x82
0040ce f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
0040cf 940e c570 	CALL SUBOPT_0x83
0040d1 91ac      	LD   R26,X
0040d2 df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
0040d3 5f0f     +SUBI R16 , LOW ( - 1 )
0040d4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0040d5 cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
0040d6 01f8      	MOVW R30,R16
0040d7 8119      	LDD  R17,Y+1
0040d8 8108      	LDD  R16,Y+0
0040d9 9626      	ADIW R28,6
0040da 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
0040db 93ea      	ST   -Y,R30
0040dc b7ef      	IN   R30,SREG
0040dd 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
0040de 931a      	ST   -Y,R17
0040df 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0040e0 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
0040e2 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0040e4 2fe1      	MOV  R30,R17
0040e5 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
0040e6 c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
0040e7 93ea      	ST   -Y,R30
0040e8 b7ef      	IN   R30,SREG
0040e9 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
0040ea 931a      	ST   -Y,R17
0040eb 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0040ec 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
0040ee 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0040f0 2fe1      	MOV  R30,R17
0040f1 71ec      	ANDI R30,LOW(0x1C)
0040f2 f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
0040f3 340b      	CPI  R16,75
0040f4 f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
0040f5 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
0040f6 9109      	LD   R16,Y+
0040f7 9119      	LD   R17,Y+
0040f8 91e9      	LD   R30,Y+
0040f9 bfef      	OUT  SREG,R30
0040fa 91e9      	LD   R30,Y+
0040fb 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
0040fc 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
0040fd 91e0 00d0 	LDS  R30,208
0040ff 72e0      	ANDI R30,LOW(0x20)
004100 f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
004101 81e8      	LD   R30,Y
004102 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
004104 c03d      	RJMP _0x20E0099
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
004105 940e c535 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
004107 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
004109 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00410b 2fe1      	MOV  R30,R17
00410c 71ec      	ANDI R30,LOW(0x1C)
00410d f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
00410e 2fa0      	MOV  R26,R16
00410f d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
004110 3204      	CPI  R16,36
004111 f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
004112 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
004113 2de5      	MOV  R30,R5
004114 9453      	INC  R5
004115 e0f0      	LDI  R31,0
004116 59e1      	SUBI R30,LOW(-_rxPackage3)
004117 4ff2      	SBCI R31,HIGH(-_rxPackage3)
004118 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
004119 e4e0      	LDI  R30,LOW(64)
00411a 165e      	CP   R5,R30
00411b f008      	BRLO _0x4003E
00411c 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
00411d 3203      	CPI  R16,35
00411e f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
00411f 2de5      	MOV  R30,R5
004120 50e1      	SUBI R30,LOW(1)
004121 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
004122 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
004123 e0e1      	LDI  R30,LOW(1)
004124 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
004126 9109      	LD   R16,Y+
004127 9119      	LD   R17,Y+
004128 91e9      	LD   R30,Y+
004129 bfef      	OUT  SREG,R30
00412a 91e9      	LD   R30,Y+
00412b bfec      	OUT  EIND,R30
00412c 91e9      	LD   R30,Y+
00412d bfeb      	OUT  RAMPZ,R30
00412e 91f9      	LD   R31,Y+
00412f 91e9      	LD   R30,Y+
004130 91b9      	LD   R27,Y+
004131 91a9      	LD   R26,Y+
004132 9199      	LD   R25,Y+
004133 9189      	LD   R24,Y+
004134 9179      	LD   R23,Y+
004135 9169      	LD   R22,Y+
004136 90f9      	LD   R15,Y+
004137 9019      	LD   R1,Y+
004138 9009      	LD   R0,Y+
004139 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
00413a 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
00413b 91e0 0130 	LDS  R30,304
00413d 72e0      	ANDI R30,LOW(0x20)
00413e f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
00413f 81e8      	LD   R30,Y
004140 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E0099:
004142 9621      	ADIW R28,1
004143 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
004144 93ba      	ST   -Y,R27
004145 93aa      	ST   -Y,R26
004146 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
004147 e010      	LDI  R17,0
004148 81eb      	LDD  R30,Y+3
004149 940e c314 	CALL SUBOPT_0x2B
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
00414b f429      	BRNE _0x40046
00414c 81a9      	LDD  R26,Y+1
00414d 81ba      	LDD  R27,Y+1+1
00414e 940e bdc9 	CALL _puts
                 ; 0002 0100                 break;
004150 c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
004151 30e1      	CPI  R30,LOW(0x1)
004152 e0a0      	LDI  R26,HIGH(0x1)
004153 07fa      	CPC  R31,R26
004154 f431      	BRNE _0x40047
                 _0x40048:
004155 940e c576 	CALL SUBOPT_0x84
004157 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
004158 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
004159 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
00415a c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
00415b 30e2      	CPI  R30,LOW(0x2)
00415c e0a0      	LDI  R26,HIGH(0x2)
00415d 07fa      	CPC  R31,R26
00415e f449      	BRNE _0x4004B
                 _0x4004C:
00415f 940e c576 	CALL SUBOPT_0x84
004161 f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
004162 940e c57e 	CALL SUBOPT_0x85
004164 df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
004165 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
004166 cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
004167 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
004168 30e3      	CPI  R30,LOW(0x3)
004169 e0a0      	LDI  R26,HIGH(0x3)
00416a 07fa      	CPC  R31,R26
00416b f441      	BRNE _0x40045
                 _0x40050:
00416c 940e c576 	CALL SUBOPT_0x84
00416e f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
00416f 940e c57e 	CALL SUBOPT_0x85
004171 dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
004172 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
004173 cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
004174 8118      	LDD  R17,Y+0
004175 940c 44a6 	JMP  _0x20E0096
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
004177 e0e0      	LDI  R30,LOW(0)
004178 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
00417a e9e8      	LDI  R30,LOW(152)
00417b 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
00417d e0e6      	LDI  R30,LOW(6)
00417e 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
004180 e0e0      	LDI  R30,LOW(0)
004181 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
004183 e3e3      	LDI  R30,LOW(51)
004184 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
004186 e0e0      	LDI  R30,LOW(0)
004187 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
004189 e9e8      	LDI  R30,LOW(152)
00418a 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
00418c e0e6      	LDI  R30,LOW(6)
00418d 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
00418f e0e0      	LDI  R30,LOW(0)
004190 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
004192 e0ec      	LDI  R30,LOW(12)
004193 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
004195 e0e0      	LDI  R30,LOW(0)
004196 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
004198 e9e8      	LDI  R30,LOW(152)
004199 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
00419b e0e6      	LDI  R30,LOW(6)
00419c 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
00419e e0e0      	LDI  R30,LOW(0)
00419f 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
0041a1 e0ec      	LDI  R30,LOW(12)
0041a2 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
0041a4 e0e0      	LDI  R30,LOW(0)
0041a5 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
0041a7 e9e8      	LDI  R30,LOW(152)
0041a8 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
0041aa e0e6      	LDI  R30,LOW(6)
0041ab 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
0041ad e0e0      	LDI  R30,LOW(0)
0041ae 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
0041b0 e0ec      	LDI  R30,LOW(12)
0041b1 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
0041b3 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
0041b4 940e c585 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
0041b6 f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
0041b7 efef      	LDI  R30,LOW(65535)
0041b8 efff      	LDI  R31,HIGH(65535)
0041b9 940c 44a6 	JMP  _0x20E0096
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
0041bb 940e c58c 	CALL SUBOPT_0x87
0041bd 940e c58f 	CALL SUBOPT_0x88
0041bf 940e e394 	CALL __CPD21
0041c1 f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
0041c2 e0e0      	LDI  R30,LOW(0)
0041c3 e0f0      	LDI  R31,HIGH(0)
0041c4 940c 44a6 	JMP  _0x20E0096
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
0041c6 e0e1      	LDI  R30,LOW(1)
0041c7 e0f0      	LDI  R31,HIGH(1)
0041c8 940c 44a6 	JMP  _0x20E0096
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
0041ca 940e e329 	CALL __PUTPARD2
0041cc 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
0041cd 940e c598 	CALL SUBOPT_0x89
0041cf 940e e37d 	CALL __CPD10
0041d1 f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
0041d2 e0e4     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
0041d3 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
0041d4 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
0041d5 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
0041d6 940e c1f5 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
0041d8 85a8      	LDD  R26,Y+8
0041d9 85b9      	LDD  R27,Y+8+1
0041da 940e c2ea 	CALL SUBOPT_0x25
0041dc 940e e2ff 	CALL __PUTDP1
                 ; 0003 0030         return -1;
0041de efef      	LDI  R30,LOW(65535)
0041df efff      	LDI  R31,HIGH(65535)
0041e0 c02a      	RJMP _0x20E0098
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
0041e1 940e c598 	CALL SUBOPT_0x89
0041e3 940e c58f 	CALL SUBOPT_0x88
0041e5 940e c59d 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
0041e7 940e c58c 	CALL SUBOPT_0x87
0041e9 85a8      	LDD  R26,Y+8
0041ea 85b9      	LDD  R27,Y+8+1
0041eb 940e e2ff 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
0041ed 940e c5a2 	CALL SUBOPT_0x8B
0041ef 940e c5ab 	CALL SUBOPT_0x8C
0041f1 940e e38f 	CALL __CPD12
0041f3 f0a8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
0041f4 e2e7     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
0041f5 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
0041f6 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
0041f7 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
0041f8 940e e324 	CALL __PUTPARD1
0041fa 940e c5a2 	CALL SUBOPT_0x8B
0041fc 940e c5ae 	CALL SUBOPT_0x8D
0041fe 940e c5ae 	CALL SUBOPT_0x8D
004200 940e c5b5 	CALL SUBOPT_0x8E
                 ; 0003 0039         *keeper = 0;
004202 85a8      	LDD  R26,Y+8
004203 85b9      	LDD  R27,Y+8+1
004204 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0003 003A         return -1;
004206 efef      	LDI  R30,LOW(65535)
004207 efff      	LDI  R31,HIGH(65535)
004208 c002      	RJMP _0x20E0098
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
004209 e0e0      	LDI  R30,LOW(0)
00420a e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0098:
00420b 962a      	ADIW R28,10
00420c 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
00420d 940e c5bf 	CALL SUBOPT_0x90
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
00420f e6ea     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
004210 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
004211 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
004212 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
004213 940e c1f5 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
004215 c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
004216 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
004217 e6e4      	LDI  R30,LOW(100)
004218 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
004219 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
00421a 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
00421b 940e c5d1 	CALL SUBOPT_0x91
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
00421d c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
00421e 940e c5bf 	CALL SUBOPT_0x90
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
004220 ebe2      	LDI  R30,LOW(178)
004221 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
004223 940e ac59 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
004225 91e9      	LD   R30,Y+
004226 bfef      	OUT  SREG,R30
004227 91e9      	LD   R30,Y+
004228 bfec      	OUT  EIND,R30
004229 91e9      	LD   R30,Y+
00422a bfeb      	OUT  RAMPZ,R30
00422b 91f9      	LD   R31,Y+
00422c 91e9      	LD   R30,Y+
00422d 91b9      	LD   R27,Y+
00422e 91a9      	LD   R26,Y+
00422f 9199      	LD   R25,Y+
004230 9189      	LD   R24,Y+
004231 9179      	LD   R23,Y+
004232 9169      	LD   R22,Y+
004233 90f9      	LD   R15,Y+
004234 9019      	LD   R1,Y+
004235 9009      	LD   R0,Y+
004236 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
004237 936a      	ST   -Y,R22
004238 937a      	ST   -Y,R23
004239 93aa      	ST   -Y,R26
00423a 93ba      	ST   -Y,R27
00423b 93ea      	ST   -Y,R30
00423c 93fa      	ST   -Y,R31
00423d b7ef      	IN   R30,SREG
00423e 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
00423f 940e c5d8 	CALL SUBOPT_0x92
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
004241 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
004242 e7a7      	LDI  R26,LOW(_baseCounter)
004243 e1b3      	LDI  R27,HIGH(_baseCounter)
004244 940e c5df 	CALL SUBOPT_0x93
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
004246 e3a0      	LDI  R26,LOW(_raw_rtc)
004247 e1b4      	LDI  R27,HIGH(_raw_rtc)
004248 940e c5df 	CALL SUBOPT_0x93
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
00424a 91e9      	LD   R30,Y+
00424b bfef      	OUT  SREG,R30
00424c 91f9      	LD   R31,Y+
00424d 91e9      	LD   R30,Y+
00424e 91b9      	LD   R27,Y+
00424f 91a9      	LD   R26,Y+
004250 9179      	LD   R23,Y+
004251 9169      	LD   R22,Y+
004252 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
004253 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
004254 940e c5e8 	CALL SUBOPT_0x94
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
004256 9bf4      	SBIS 0x1E,4
004257 c002      	RJMP _0x6000D
004258 98f4      	CBI  0x1E,4
004259 c001      	RJMP _0x6000E
                 _0x6000D:
00425a 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
00425b 9bf3      	SBIS 0x1E,3
00425c c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
00425d 9bf4      	SBIS 0x1E,4
00425e c002      	RJMP _0x60010
00425f 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
004260 c001      	RJMP _0x60013
                 _0x60010:
004261 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
004262 c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
004263 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
004264 91e9      	LD   R30,Y+
004265 9518      	RETI
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 0095 {
                 _init_timer:
                 ; 0003 0096 
                 ; 0003 0097     // Timer/Counter 0 initialization
                 ; 0003 0098     // Clock source: System Clock
                 ; 0003 0099     // Clock value: 7.813 kHz
                 ; 0003 009A     // Mode: Normal top=0xFF
                 ; 0003 009B     // OC0A output: Disconnected
                 ; 0003 009C     // OC0B output: Disconnected
                 ; 0003 009D     TCCR0A=0x00;
004266 e0e0      	LDI  R30,LOW(0)
004267 bde4      	OUT  0x24,R30
                 ; 0003 009E     TCCR0B=0x05;
004268 e0e5      	LDI  R30,LOW(5)
004269 bde5      	OUT  0x25,R30
                 ; 0003 009F     TCNT0=0x64;
00426a e6e4      	LDI  R30,LOW(100)
00426b bde6      	OUT  0x26,R30
                 ; 0003 00A0     OCR0A=0x00;
00426c e0e0      	LDI  R30,LOW(0)
00426d bde7      	OUT  0x27,R30
                 ; 0003 00A1     OCR0B=0x00;
00426e bde8      	OUT  0x28,R30
                 ; 0003 00A2 
                 ; 0003 00A3     // Timer/Counter 1 initialization
                 ; 0003 00A4     // Clock source: System Clock
                 ; 0003 00A5     // Clock value: 7.813 kHz
                 ; 0003 00A6     // Mode: Normal top=0xFFFF
                 ; 0003 00A7     // OC1A output: Discon.
                 ; 0003 00A8     // OC1B output: Discon.
                 ; 0003 00A9     // OC1C output: Discon.
                 ; 0003 00AA     // Noise Canceler: Off
                 ; 0003 00AB     // Input Capture on Falling Edge
                 ; 0003 00AC     // Timer1 Overflow Interrupt: On
                 ; 0003 00AD     // Input Capture Interrupt: Off
                 ; 0003 00AE     // Compare A Match Interrupt: Off
                 ; 0003 00AF     // Compare B Match Interrupt: Off
                 ; 0003 00B0     // Compare C Match Interrupt: Off
                 ; 0003 00B1     TCCR1A=0x00;
00426f 93e0 0080 	STS  128,R30
                 ; 0003 00B2     TCCR1B=0x05;
004271 e0e5      	LDI  R30,LOW(5)
004272 93e0 0081 	STS  129,R30
                 ; 0003 00B3     //TCNT1H=0xFF;
                 ; 0003 00B4     //TCNT1L=0x64;
                 ; 0003 00B5     TCNT1H=0xFE;
004274 940e c5d1 	CALL SUBOPT_0x91
                 ; 0003 00B6     TCNT1L=0x79;
                 ; 0003 00B7     ICR1H=0x00;
004276 e0e0      	LDI  R30,LOW(0)
004277 93e0 0087 	STS  135,R30
                 ; 0003 00B8     ICR1L=0x00;
004279 93e0 0086 	STS  134,R30
                 ; 0003 00B9     OCR1AH=0x00;
00427b 93e0 0089 	STS  137,R30
                 ; 0003 00BA     OCR1AL=0x00;
00427d 93e0 0088 	STS  136,R30
                 ; 0003 00BB     OCR1BH=0x00;
00427f 93e0 008b 	STS  139,R30
                 ; 0003 00BC     OCR1BL=0x00;
004281 93e0 008a 	STS  138,R30
                 ; 0003 00BD     OCR1CH=0x00;
004283 93e0 008d 	STS  141,R30
                 ; 0003 00BE     OCR1CL=0x00;
004285 93e0 008c 	STS  140,R30
                 ; 0003 00BF 
                 ; 0003 00C0     // Timer/Counter 2 initialization
                 ; 0003 00C1     // Clock source: System Clock
                 ; 0003 00C2     // Clock value: 7.813 kHz
                 ; 0003 00C3     // Mode: Normal top=0xFF
                 ; 0003 00C4     // OC2A output: Disconnected
                 ; 0003 00C5     // OC2B output: Disconnected
                 ; 0003 00C6     ASSR=0x00;
004287 93e0 00b6 	STS  182,R30
                 ; 0003 00C7     TCCR2A=0x00;
004289 93e0 00b0 	STS  176,R30
                 ; 0003 00C8     TCCR2B=0x07;
00428b e0e7      	LDI  R30,LOW(7)
00428c 93e0 00b1 	STS  177,R30
                 ; 0003 00C9     TCNT2=0xb2;
00428e ebe2      	LDI  R30,LOW(178)
00428f 93e0 00b2 	STS  178,R30
                 ; 0003 00CA     OCR2A=0x00;
004291 e0e0      	LDI  R30,LOW(0)
004292 93e0 00b3 	STS  179,R30
                 ; 0003 00CB     OCR2B=0x00;
004294 93e0 00b4 	STS  180,R30
                 ; 0003 00CC 
                 ; 0003 00CD     // Timer/Counter 3 initialization
                 ; 0003 00CE     // Clock source: System Clock
                 ; 0003 00CF     // Clock value: 31.250 kHz
                 ; 0003 00D0     // Mode: Normal top=0xFFFF
                 ; 0003 00D1     // OC3A output: Discon.
                 ; 0003 00D2     // OC3B output: Discon.
                 ; 0003 00D3     // OC3C output: Discon.
                 ; 0003 00D4     // Noise Canceler: Off
                 ; 0003 00D5     // Input Capture on Falling Edge
                 ; 0003 00D6     // Timer3 Overflow Interrupt: On
                 ; 0003 00D7     // Input Capture Interrupt: Off
                 ; 0003 00D8     // Compare A Match Interrupt: Off
                 ; 0003 00D9     // Compare B Match Interrupt: Off
                 ; 0003 00DA     // Compare C Match Interrupt: Off
                 ; 0003 00DB     TCCR3A=0x00;
004296 93e0 0090 	STS  144,R30
                 ; 0003 00DC     TCCR3B=0x04;
004298 e0e4      	LDI  R30,LOW(4)
004299 93e0 0091 	STS  145,R30
                 ; 0003 00DD     TCNT3H=0x85;
00429b 940e c5d8 	CALL SUBOPT_0x92
                 ; 0003 00DE     TCNT3L=0xED;
                 ; 0003 00DF     ICR3H=0x00;
00429d e0e0      	LDI  R30,LOW(0)
00429e 93e0 0097 	STS  151,R30
                 ; 0003 00E0     ICR3L=0x00;
0042a0 93e0 0096 	STS  150,R30
                 ; 0003 00E1     OCR3AH=0x00;
0042a2 93e0 0099 	STS  153,R30
                 ; 0003 00E2     OCR3AL=0x00;
0042a4 93e0 0098 	STS  152,R30
                 ; 0003 00E3     OCR3BH=0x00;
0042a6 93e0 009b 	STS  155,R30
                 ; 0003 00E4     OCR3BL=0x00;
0042a8 93e0 009a 	STS  154,R30
                 ; 0003 00E5     OCR3CH=0x00;
0042aa 93e0 009d 	STS  157,R30
                 ; 0003 00E6     OCR3CL=0x00;
0042ac 93e0 009c 	STS  156,R30
                 ; 0003 00E7 
                 ; 0003 00E8     // Timer/Counter 4 initialization
                 ; 0003 00E9     // Clock source: System Clock
                 ; 0003 00EA     // Clock value: 125.000 kHz
                 ; 0003 00EB     // Mode: Normal top=0xFFFF
                 ; 0003 00EC     // OC4A output: Discon.
                 ; 0003 00ED     // OC4B output: Discon.
                 ; 0003 00EE     // OC4C output: Discon.
                 ; 0003 00EF     // Noise Canceler: Off
                 ; 0003 00F0     // Input Capture on Falling Edge
                 ; 0003 00F1     // Timer4 Overflow Interrupt: On
                 ; 0003 00F2     // Input Capture Interrupt: Off
                 ; 0003 00F3     // Compare A Match Interrupt: Off
                 ; 0003 00F4     // Compare B Match Interrupt: Off
                 ; 0003 00F5     // Compare C Match Interrupt: Off
                 ; 0003 00F6     TCCR4A=0x00;
0042ae 93e0 00a0 	STS  160,R30
                 ; 0003 00F7     TCCR4B=0x03;
0042b0 e0e3      	LDI  R30,LOW(3)
0042b1 93e0 00a1 	STS  161,R30
                 ; 0003 00F8     TCNT4H=0x85;
0042b3 940e c5e8 	CALL SUBOPT_0x94
                 ; 0003 00F9     TCNT4L=0xED;
                 ; 0003 00FA     ICR4H=0x00;
0042b5 e0e0      	LDI  R30,LOW(0)
0042b6 93e0 00a7 	STS  167,R30
                 ; 0003 00FB     ICR4L=0x00;
0042b8 93e0 00a6 	STS  166,R30
                 ; 0003 00FC     OCR4AH=0x00;
0042ba 93e0 00a9 	STS  169,R30
                 ; 0003 00FD     OCR4AL=0x00;
0042bc 93e0 00a8 	STS  168,R30
                 ; 0003 00FE     OCR4BH=0x00;
0042be 93e0 00ab 	STS  171,R30
                 ; 0003 00FF     OCR4BL=0x00;
0042c0 93e0 00aa 	STS  170,R30
                 ; 0003 0100     OCR4CH=0x00;
0042c2 93e0 00ad 	STS  173,R30
                 ; 0003 0101     OCR4CL=0x00;
0042c4 93e0 00ac 	STS  172,R30
                 ; 0003 0102 
                 ; 0003 0103     // Timer/Counter 5 initialization
                 ; 0003 0104     // Clock source: System Clock
                 ; 0003 0105     // Clock value: Timer5 Stopped
                 ; 0003 0106     // Mode: Normal top=0xFFFF
                 ; 0003 0107     // OC5A output: Discon.
                 ; 0003 0108     // OC5B output: Discon.
                 ; 0003 0109     // OC5C output: Discon.
                 ; 0003 010A     // Noise Canceler: Off
                 ; 0003 010B     // Input Capture on Falling Edge
                 ; 0003 010C     // Timer5 Overflow Interrupt: Off
                 ; 0003 010D     // Input Capture Interrupt: Off
                 ; 0003 010E     // Compare A Match Interrupt: Off
                 ; 0003 010F     // Compare B Match Interrupt: Off
                 ; 0003 0110     // Compare C Match Interrupt: Off
                 ; 0003 0111     TCCR5A=0x00;
0042c6 93e0 0120 	STS  288,R30
                 ; 0003 0112     TCCR5B=0x00;
0042c8 93e0 0121 	STS  289,R30
                 ; 0003 0113     TCNT5H=0x00;
0042ca 93e0 0125 	STS  293,R30
                 ; 0003 0114     TCNT5L=0x00;
0042cc 93e0 0124 	STS  292,R30
                 ; 0003 0115     ICR5H=0x00;
0042ce 93e0 0127 	STS  295,R30
                 ; 0003 0116     ICR5L=0x00;
0042d0 93e0 0126 	STS  294,R30
                 ; 0003 0117     OCR5AH=0x00;
0042d2 93e0 0129 	STS  297,R30
                 ; 0003 0118     OCR5AL=0x00;
0042d4 93e0 0128 	STS  296,R30
                 ; 0003 0119     OCR5BH=0x00;
0042d6 93e0 012b 	STS  299,R30
                 ; 0003 011A     OCR5BL=0x00;
0042d8 93e0 012a 	STS  298,R30
                 ; 0003 011B     OCR5CH=0x00;
0042da 93e0 012d 	STS  301,R30
                 ; 0003 011C     OCR5CL=0x00;
0042dc 93e0 012c 	STS  300,R30
                 ; 0003 011D 
                 ; 0003 011E     // Watchdog Timer initialization
                 ; 0003 011F     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0120     // Watchdog Timer interrupt: On
                 ; 0003 0121     #pragma optsize-
                 ; 0003 0122     #asm("wdr")
0042de 95a8      	wdr
                 ; 0003 0123     WDTCSR=0x79;
0042df e7e9      	LDI  R30,LOW(121)
0042e0 93e0 0060 	STS  96,R30
                 ; 0003 0124     WDTCSR=0x69;
0042e2 e6e9      	LDI  R30,LOW(105)
0042e3 93e0 0060 	STS  96,R30
                 ; 0003 0125 
                 ; 0003 0126     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 0127     #pragma optsize+
                 ; 0003 0128     #endif
                 ; 0003 0129 
                 ; 0003 012A 
                 ; 0003 012B     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 012C     TIMSK0=0x00;
0042e5 e0e0      	LDI  R30,LOW(0)
0042e6 93e0 006e 	STS  110,R30
                 ; 0003 012D 
                 ; 0003 012E     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 012F     TIMSK1=0x00;
0042e8 93e0 006f 	STS  111,R30
                 ; 0003 0130 
                 ; 0003 0131     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0132     TIMSK2=0x00;
0042ea 93e0 0070 	STS  112,R30
                 ; 0003 0133 
                 ; 0003 0134     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0135     TIMSK3=0x00;
0042ec 93e0 0071 	STS  113,R30
                 ; 0003 0136 
                 ; 0003 0137     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0138     TIMSK4=0x00;
0042ee 93e0 0072 	STS  114,R30
                 ; 0003 0139 
                 ; 0003 013A     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 013B     TIMSK5=0x00;
0042f0 93e0 0073 	STS  115,R30
                 ; 0003 013C }
0042f2 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 013F {
                 _enable_interrupt:
                 ; 0003 0140 
                 ; 0003 0141     // -------------- enable timer ---------------  //
                 ; 0003 0142 
                 ; 0003 0143     switch(ch){
0042f3 940e c5ef 	CALL SUBOPT_0x95
                 ;	ch -> Y+0
                 ; 0003 0144         case 0: // Timer/Counter 0 Interrupt(s) initialization
0042f5 9730      	SBIW R30,0
0042f6 f0f9      	BREQ _0x6001B
                 ; 0003 0145                 //TIMSK0=0x01;
                 ; 0003 0146                 break;
                 ; 0003 0147         case 1: // Timer/Counter 1 Interrupt(s) initialization
0042f7 30e1      	CPI  R30,LOW(0x1)
0042f8 e0a0      	LDI  R26,HIGH(0x1)
0042f9 07fa      	CPC  R31,R26
0042fa f421      	BRNE _0x6001D
                 ; 0003 0148                 TIMSK1=0x01;
0042fb e0e1      	LDI  R30,LOW(1)
0042fc 93e0 006f 	STS  111,R30
                 ; 0003 0149                 break;
0042fe c017      	RJMP _0x6001B
                 ; 0003 014A         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
0042ff 30e2      	CPI  R30,LOW(0x2)
004300 e0a0      	LDI  R26,HIGH(0x2)
004301 07fa      	CPC  R31,R26
004302 f421      	BRNE _0x6001E
                 ; 0003 014B                 TIMSK2=0x01;
004303 e0e1      	LDI  R30,LOW(1)
004304 93e0 0070 	STS  112,R30
                 ; 0003 014C                 break;
004306 c00f      	RJMP _0x6001B
                 ; 0003 014D         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
004307 30e3      	CPI  R30,LOW(0x3)
004308 e0a0      	LDI  R26,HIGH(0x3)
004309 07fa      	CPC  R31,R26
00430a f421      	BRNE _0x6001F
                 ; 0003 014E                 TIMSK3=0x01;
00430b e0e1      	LDI  R30,LOW(1)
00430c 93e0 0071 	STS  113,R30
                 ; 0003 014F                 break;
00430e c007      	RJMP _0x6001B
                 ; 0003 0150         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
00430f 30e4      	CPI  R30,LOW(0x4)
004310 e0a0      	LDI  R26,HIGH(0x4)
004311 07fa      	CPC  R31,R26
004312 f419      	BRNE _0x6001B
                 ; 0003 0151                 TIMSK4=0x01;
004313 e0e1      	LDI  R30,LOW(1)
004314 93e0 0072 	STS  114,R30
                 ; 0003 0152                 break;
                 ; 0003 0153     }
                 _0x6001B:
                 ; 0003 0154     // Global enable interrupts
                 ; 0003 0155     #asm("sei")
004316 9478      	sei
                 ; 0003 0156 }
004317 9622      	ADIW R28,2
004318 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0159 {
                 ; 0003 015A 
                 ; 0003 015B     // -------------- enable timer ---------------  //
                 ; 0003 015C 
                 ; 0003 015D     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 015E         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 015F                 //TIMSK0=0x00;
                 ; 0003 0160                 break;
                 ; 0003 0161         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0162                 TIMSK1=0x00;
                 ; 0003 0163                 break;
                 ; 0003 0164         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0165                 TIMSK2=0x00;
                 ; 0003 0166                 break;
                 ; 0003 0167         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0168                 TIMSK3=0x00;
                 ; 0003 0169                 break;
                 ; 0003 016A         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 016B                 TIMSK4=0x00;
                 ; 0003 016C                 break;
                 ; 0003 016D     }
                 ; 0003 016E     // Global enable interrupts
                 ; 0003 016F     #asm("sei")
                 ; 0003 0170 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
004319 e0e0      	LDI  R30,LOW(0)
00431a b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
00431b e0e4      	LDI  R30,LOW(4)
00431c b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
00431d efef      	LDI  R30,LOW(255)
00431e b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
00431f efe7      	LDI  R30,LOW(247)
004320 b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
004321 ece0      	LDI  R30,LOW(192)
004322 b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
004323 e0e0      	LDI  R30,LOW(0)
004324 b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
004325 e8e0      	LDI  R30,LOW(128)
004326 b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
004327 e0e0      	LDI  R30,LOW(0)
004328 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
004329 efec      	LDI  R30,LOW(252)
00432a b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
00432b b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
00432c e0e0      	LDI  R30,LOW(0)
00432d bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
00432e bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
00432f e3e0      	LDI  R30,LOW(48)
004330 bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
004331 bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
004332 efe8      	LDI  R30,LOW(248)
004333 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
004335 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
004337 e8e0      	LDI  R30,LOW(128)
004338 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
00433a e0e0      	LDI  R30,LOW(0)
00433b 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00433d 940e c325 	CALL SUBOPT_0x2E
00433f f021      	BREQ _0x80005
004340 940e c325 	CALL SUBOPT_0x2E
004342 30e3      	CPI  R30,LOW(0x3)
004343 f409      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054 
                 ; 0004 0055         //PORTK=0x90;
                 ; 0004 0056         //DDRK=0x0E;
                 ; 0004 0057 
                 ; 0004 0058         /*bongkot edit*/
                 ; 0004 0059         PORTK=0x80;
004344 c007      	RJMP _0x8003D
                 ; 0004 005A         DDRK=0x00;
                 ; 0004 005B     }
                 ; 0004 005C     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
004345 940e c5f4 	CALL SUBOPT_0x96
004347 f021      	BREQ _0x80009
004348 940e c325 	CALL SUBOPT_0x2E
00434a 30e2      	CPI  R30,LOW(0x2)
00434b f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 005D         // Port K initialization
                 ; 0004 005E         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005F         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0060         PORTK=0x80;
                 _0x8003D:
00434c e8e0      	LDI  R30,LOW(128)
00434d 93e0 0108 	STS  264,R30
                 ; 0004 0061         DDRK=0x00;
00434f e0e0      	LDI  R30,LOW(0)
004350 93e0 0107 	STS  263,R30
                 ; 0004 0062     }
                 ; 0004 0063 
                 ; 0004 0064     // Port L initialization
                 ; 0004 0065     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0066     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0067     PORTL=0x00;
                 _0x80008:
004352 e0e0      	LDI  R30,LOW(0)
004353 93e0 010b 	STS  267,R30
                 ; 0004 0068     DDRL=0x00;
004355 93e0 010a 	STS  266,R30
                 ; 0004 0069 
                 ; 0004 006A }
004357 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 006D {
                 _IO_dout:
                 ; 0004 006E     switch(ch){
004358 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
004359 81e9      	LDD  R30,Y+1
00435a 81fa      	LDD  R31,Y+1+1
                 ; 0004 006F         case 0  :   DOUT1       =   !state;
00435b 9730      	SBIW R30,0
00435c f451      	BRNE _0x8000E
00435d 81e8      	LD   R30,Y
00435e 30e0      	CPI  R30,0
00435f f011      	BREQ _0x8000F
004360 9873      	CBI  0xE,3
004361 c001      	RJMP _0x80010
                 _0x8000F:
004362 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 0070                     d_out[0]    =   state;
004363 81e8      	LD   R30,Y
004364 93e0 1434 	STS  _d_out,R30
                 ; 0004 0071                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 0072                     break;
004366 c00d      	RJMP _0x8000D
                 ; 0004 0073         case 1  :   DOUT2       =   !state;
                 _0x8000E:
004367 30e1      	CPI  R30,LOW(0x1)
004368 e0a0      	LDI  R26,HIGH(0x1)
004369 07fa      	CPC  R31,R26
00436a f449      	BRNE _0x80014
00436b 81e8      	LD   R30,Y
00436c 30e0      	CPI  R30,0
00436d f011      	BREQ _0x80012
00436e 9874      	CBI  0xE,4
00436f c001      	RJMP _0x80013
                 _0x80012:
004370 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 0074                     d_out[1]    =   state;
004371 81e8      	LD   R30,Y
                +
004372 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0075                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0076                     break;
                 ; 0004 0077         default :   break;
                 _0x80014:
                 ; 0004 0078     }
                 _0x8000D:
                 ; 0004 0079 }
004374 9623      	ADIW R28,3
004375 9508      	RET
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 007C {
                 _IO_keyCheck:
                 ; 0004 007D     static char flag_hold_MODE   = 0;
                 ; 0004 007E     static char flag_hold_UP     = 0;
                 ; 0004 007F     static char flag_hold_DOWN   = 0;
                 ; 0004 0080     static char flag_hold_OK     = 0;
                 ; 0004 0081 
                 ; 0004 0082     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
004376 940e c601 	CALL SUBOPT_0x97
004378 f421      	BRNE _0x80016
004379 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
00437b 30e0      	CPI  R30,0
00437c f009      	BREQ _0x80017
                 _0x80016:
00437d c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 0083     {
                 ; 0004 0084         delay_ms(KEY_DELAY);
00437e 940e c608 	CALL SUBOPT_0x98
                 ; 0004 0085 
                 ; 0004 0086         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
004380 940e c601 	CALL SUBOPT_0x97
004382 f421      	BRNE _0x80019
004383 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004385 30e0      	CPI  R30,0
004386 f009      	BREQ _0x8001A
                 _0x80019:
004387 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0087         {
                 ; 0004 0088             flag_hold_MODE = 1;
004388 e0e1      	LDI  R30,LOW(1)
004389 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0089             return 0;
00438b c092      	RJMP _0x20E0097
                 ; 0004 008A         }
                 ; 0004 008B     }
                 _0x80018:
                 ; 0004 008C     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
00438c c013      	RJMP _0x8001B
                 _0x80015:
00438d 940e c601 	CALL SUBOPT_0x97
00438f f021      	BREQ _0x8001D
004390 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004392 30e0      	CPI  R30,0
004393 f409      	BRNE _0x8001E
                 _0x8001D:
004394 c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 008D     {
                 ; 0004 008E         printDebug("<IO_keyCheck> key MODE\r\n");
                +
004395 e8ec     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
004396 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
004397 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
004398 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
004399 940e c1f5 	CALL SUBOPT_0x3
                 ; 0004 008F         flag_hold_MODE = 0;
00439b e0e0      	LDI  R30,LOW(0)
00439c 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0090         return KEY_MODE;
00439e e0e1      	LDI  R30,LOW(1)
00439f 9508      	RET
                 ; 0004 0091     }
                 ; 0004 0092 
                 ; 0004 0093     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
0043a0 940e c60c 	CALL SUBOPT_0x99
0043a2 f421      	BRNE _0x80020
0043a3 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0043a5 30e0      	CPI  R30,0
0043a6 f009      	BREQ _0x80021
                 _0x80020:
0043a7 c00f      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 0094     {
                 ; 0004 0095         delay_ms(KEY_DELAY);
0043a8 940e c608 	CALL SUBOPT_0x98
                 ; 0004 0096 
                 ; 0004 0097         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
0043aa 940e c60c 	CALL SUBOPT_0x99
0043ac f421      	BRNE _0x80023
0043ad 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0043af 30e0      	CPI  R30,0
0043b0 f009      	BREQ _0x80024
                 _0x80023:
0043b1 c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0098         {
                 ; 0004 0099             flag_hold_UP = 1;
0043b2 e0e1      	LDI  R30,LOW(1)
0043b3 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009A             return 0;
0043b5 c068      	RJMP _0x20E0097
                 ; 0004 009B         }
                 ; 0004 009C     }
                 _0x80022:
                 ; 0004 009D     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
0043b6 c013      	RJMP _0x80025
                 _0x8001F:
0043b7 940e c60c 	CALL SUBOPT_0x99
0043b9 f021      	BREQ _0x80027
0043ba 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0043bc 30e0      	CPI  R30,0
0043bd f409      	BRNE _0x80028
                 _0x80027:
0043be c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 009E     {
                 ; 0004 009F         printDebug("<IO_keyCheck> key UP\r\n");
                +
0043bf eae5     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
0043c0 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
0043c1 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
0043c2 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
0043c3 940e c1f5 	CALL SUBOPT_0x3
                 ; 0004 00A0         flag_hold_UP = 0;
0043c5 e0e0      	LDI  R30,LOW(0)
0043c6 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 00A1         return KEY_UP;
0043c8 e0e2      	LDI  R30,LOW(2)
0043c9 9508      	RET
                 ; 0004 00A2     }
                 ; 0004 00A3 
                 ; 0004 00A4     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
0043ca 940e c615 	CALL SUBOPT_0x9A
0043cc f421      	BRNE _0x8002A
0043cd 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0043cf 30e0      	CPI  R30,0
0043d0 f009      	BREQ _0x8002B
                 _0x8002A:
0043d1 c00f      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A5     {
                 ; 0004 00A6         delay_ms(KEY_DELAY);
0043d2 940e c608 	CALL SUBOPT_0x98
                 ; 0004 00A7 
                 ; 0004 00A8         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
0043d4 940e c615 	CALL SUBOPT_0x9A
0043d6 f421      	BRNE _0x8002D
0043d7 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0043d9 30e0      	CPI  R30,0
0043da f009      	BREQ _0x8002E
                 _0x8002D:
0043db c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A9         {
                 ; 0004 00AA             flag_hold_DOWN = 1;
0043dc e0e1      	LDI  R30,LOW(1)
0043dd 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AB             return 0;
0043df c03e      	RJMP _0x20E0097
                 ; 0004 00AC         }
                 ; 0004 00AD     }
                 _0x8002C:
                 ; 0004 00AE     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
0043e0 c013      	RJMP _0x8002F
                 _0x80029:
0043e1 940e c615 	CALL SUBOPT_0x9A
0043e3 f021      	BREQ _0x80031
0043e4 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0043e6 30e0      	CPI  R30,0
0043e7 f409      	BRNE _0x80032
                 _0x80031:
0043e8 c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AF     {
                 ; 0004 00B0         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
0043e9 ebec     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
0043ea e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
0043eb e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
0043ec e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
0043ed 940e c1f5 	CALL SUBOPT_0x3
                 ; 0004 00B1         flag_hold_DOWN = 0;
0043ef e0e0      	LDI  R30,LOW(0)
0043f0 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00B2         return KEY_DOWN;
0043f2 e0e3      	LDI  R30,LOW(3)
0043f3 9508      	RET
                 ; 0004 00B3     }
                 ; 0004 00B4 
                 ; 0004 00B5     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
0043f4 940e c61e 	CALL SUBOPT_0x9B
0043f6 f421      	BRNE _0x80034
0043f7 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0043f9 30e0      	CPI  R30,0
0043fa f009      	BREQ _0x80035
                 _0x80034:
0043fb c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B6     {
                 ; 0004 00B7         delay_ms(KEY_DELAY);
0043fc 940e c608 	CALL SUBOPT_0x98
                 ; 0004 00B8 
                 ; 0004 00B9         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
0043fe 940e c61e 	CALL SUBOPT_0x9B
004400 f421      	BRNE _0x80037
004401 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004403 30e0      	CPI  R30,0
004404 f009      	BREQ _0x80038
                 _0x80037:
004405 c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00BA         {
                 ; 0004 00BB             flag_hold_OK = 1;
004406 e0e1      	LDI  R30,LOW(1)
004407 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BC             return 0;
004409 c014      	RJMP _0x20E0097
                 ; 0004 00BD         }
                 ; 0004 00BE     }
                 _0x80036:
                 ; 0004 00BF     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
00440a c013      	RJMP _0x80039
                 _0x80033:
00440b 940e c61e 	CALL SUBOPT_0x9B
00440d f021      	BREQ _0x8003B
00440e 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004410 30e0      	CPI  R30,0
004411 f409      	BRNE _0x8003C
                 _0x8003B:
004412 c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00C0     {
                 ; 0004 00C1         printDebug("<IO_keyCheck> key OK\r\n");
                +
004413 ede5     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
004414 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
004415 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
004416 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
004417 940e c1f5 	CALL SUBOPT_0x3
                 ; 0004 00C2         flag_hold_OK = 0;
004419 e0e0      	LDI  R30,LOW(0)
00441a 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00C3         return KEY_OK;
00441c e0e4      	LDI  R30,LOW(4)
00441d 9508      	RET
                 ; 0004 00C4     }
                 ; 0004 00C5 
                 ; 0004 00C6     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0097:
00441e e0e0      	LDI  R30,LOW(0)
00441f 9508      	RET
                 ; 0004 00C7 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     char refADC;
                 ; 0005 0012     unsigned int adc_data = 0x0000;
                 ; 0005 0013      if(TEMP_SEL == TEMP_TYPE_K){
004420 93aa      	ST   -Y,R26
004421 940e e39b 	CALL __SAVELOCR4
                 ;	adc_input -> Y+4
                 ;	refADC -> R17
                 ;	adc_data -> R18,R19
                +
004423 e020     +LDI R18 , LOW ( 0 )
004424 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
004425 940e c325 	CALL SUBOPT_0x2E
004427 f411      	BRNE _0xA0003
                 ; 0005 0014           refADC = ADC_VREF3_3_TYPE;
004428 e410      	LDI  R17,LOW(64)
                 ; 0005 0015      }else if(TEMP_SEL == TEMP_TMEC){
004429 c005      	RJMP _0xA0004
                 _0xA0003:
00442a 940e c325 	CALL SUBOPT_0x2E
00442c 30e1      	CPI  R30,LOW(0x1)
00442d f409      	BRNE _0xA0005
                 ; 0005 0016           refADC = ADC_VREF_TYPE;
00442e ec10      	LDI  R17,LOW(192)
                 ; 0005 0017      }
                 ; 0005 0018     //ADMUX  &= ADC_VREF_TYPE;
                 ; 0005 0019     ADMUX  &= refADC;
                 _0xA0005:
                 _0xA0004:
00442f e7ac      	LDI  R26,LOW(124)
004430 e0b0      	LDI  R27,HIGH(124)
004431 91ec      	LD   R30,X
004432 23e1      	AND  R30,R17
004433 93ec      	ST   X,R30
                 ; 0005 001A     ADCSRB &= 0xf7;
004434 91e0 007b 	LDS  R30,123
004436 7fe7      	ANDI R30,0XF7
004437 93e0 007b 	STS  123,R30
                 ; 0005 001B 
                 ; 0005 001C    // ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
                 ; 0005 001D     ADMUX  |= (adc_input & 0x07) | (refADC & 0xff);
004439 2e1a      	MOV  R1,R26
00443a 900c      	LD   R0,X
00443b 81ec      	LDD  R30,Y+4
00443c 70e7      	ANDI R30,LOW(0x7)
00443d 2fae      	MOV  R26,R30
00443e 2fe1      	MOV  R30,R17
00443f 2bea      	OR   R30,R26
004440 29e0      	OR   R30,R0
004441 2da1      	MOV  R26,R1
004442 93ec      	ST   X,R30
                 ; 0005 001E 
                 ; 0005 001F     if(adc_input > 7)
004443 81ac      	LDD  R26,Y+4
004444 30a8      	CPI  R26,LOW(0x8)
004445 f020      	BRLO _0xA0006
                 ; 0005 0020     {
                 ; 0005 0021         ADCSRB |= 0x08;
004446 91e0 007b 	LDS  R30,123
004448 60e8      	ORI  R30,8
004449 c003      	RJMP _0xA0023
                 ; 0005 0022     }
                 ; 0005 0023     else
                 _0xA0006:
                 ; 0005 0024     {
                 ; 0005 0025         ADCSRB &= 0xf7;
00444a 91e0 007b 	LDS  R30,123
00444c 7fe7      	ANDI R30,0XF7
                 _0xA0023:
00444d 93e0 007b 	STS  123,R30
                 ; 0005 0026     }
                 ; 0005 0027 
                 ; 0005 0028     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0029     //delay_us(20);
                 ; 0005 002A     delay_us(1);
                +
00444f e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
004450 958a     +DEC R24
004451 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0005 002B 
                 ; 0005 002C     // Start the AD conversion
                 ; 0005 002D     ADCSRA  |= 0x80; //ENABLE ADC
004452 91e0 007a 	LDS  R30,122
004454 68e0      	ORI  R30,0x80
004455 93e0 007a 	STS  122,R30
                 ; 0005 002E     ADCSRA  |= 0x40;
004457 91e0 007a 	LDS  R30,122
004459 64e0      	ORI  R30,0x40
00445a 93e0 007a 	STS  122,R30
                 ; 0005 002F 
                 ; 0005 0030     // Wait for the AD conversion to complete
                 ; 0005 0031     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 0032     while ( (ADCSRA & 0x10)==0);
                 _0xA0008:
00445c 91e0 007a 	LDS  R30,122
00445e 71e0      	ANDI R30,LOW(0x10)
00445f f3e1      	BREQ _0xA0008
                 ; 0005 0033     adc_data = ADCL;
004460 9120 0078 	LDS  R18,120
004462 2733      	CLR  R19
                 ; 0005 0034     adc_data |= (ADCH & 0x00ff) << 8;
004463 91e0 0079 	LDS  R30,121
004465 940e c627 	CALL SUBOPT_0x9C
004467 2ffe      	MOV  R31,R30
004468 e0e0      	LDI  R30,0
                +
004469 2b2e     +OR R18 , R30
00446a 2b3f     +OR R19 , R31
                 	__ORWRR 18,19,30,31
                 ; 0005 0035 
                 ; 0005 0036     ADCSRA  |=0x10;
00446b 91e0 007a 	LDS  R30,122
00446d 61e0      	ORI  R30,0x10
00446e 93e0 007a 	STS  122,R30
                 ; 0005 0037 
                 ; 0005 0038     //delay_us(50);
                 ; 0005 0039 
                 ; 0005 003A     return adc_data;
004470 01f9      	MOVW R30,R18
004471 940e e3a2 	CALL __LOADLOCR4
004473 9625      	ADIW R28,5
004474 9508      	RET
                 ; 0005 003B }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 003E {
                 ; 0005 003F     static int      i = 0;
                 ; 0005 0040     static char     batt_read_flag = 0;
                 ; 0005 0041 
                 ; 0005 0042     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 0043         /*
                 ; 0005 0044         printDebug("<%d>",i);
                 ; 0005 0045         SENSOR_SELECT(i);
                 ; 0005 0046         delay_ms(20);
                 ; 0005 0047         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0048         if(++i >= 5){   i = 0;  }
                 ; 0005 0049         */
                 ; 0005 004A     }
                 ; 0005 004B     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 004C //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 004D //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 004E //        }
                 ; 0005 004F     }
                 ; 0005 0050 
                 ; 0005 0051 //    if(++batt_read_flag > 25){
                 ; 0005 0052 //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 0053 //        batt_read_flag = 0;
                 ; 0005 0054 //    }
                 ; 0005 0055 
                 ; 0005 0056     return 0;
                 ; 0005 0057 }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 005A {
                 _readBattery:
                 ; 0005 005B     float   vBATT;
                 ; 0005 005C 
                 ; 0005 005D     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
004475 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
004476 940e c62a 	CALL SUBOPT_0x9D
                +
004478 e6e6     +LDI R30 , LOW ( 0x411E6666 )
004479 e6f6     +LDI R31 , HIGH ( 0x411E6666 )
00447a e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
00447b e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
00447c 940e e0c5 	CALL __MULF12
00447e 937f      	PUSH R23
00447f 936f      	PUSH R22
004480 93ff      	PUSH R31
004481 93ef      	PUSH R30
004482 e0ae      	LDI  R26,LOW(14)
004483 df9c      	RCALL _read_adc
004484 940e c633 	CALL SUBOPT_0x9E
004486 940e c638 	CALL SUBOPT_0x9F
004488 91af      	POP  R26
004489 91bf      	POP  R27
00448a 918f      	POP  R24
00448b 919f      	POP  R25
00448c 940e c63f 	CALL SUBOPT_0xA0
00448e 93e0 14e8 	STS  _adcBatt,R30
004490 93f0 14e9 	STS  _adcBatt+1,R31
004492 9360 14ea 	STS  _adcBatt+2,R22
004494 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 005E 
                 ; 0005 005F     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
004496 940e c343 	CALL SUBOPT_0x32
004498 940e c62a 	CALL SUBOPT_0x9D
00449a 940e e0c5 	CALL __MULF12
                +
00449c e6a6     +LDI R26 , LOW ( 0x3FE66666 )
00449d e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
00449e ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
00449f e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
0044a0 940e e0c5 	CALL __MULF12
0044a2 940e c64a 	CALL SUBOPT_0xA1
                 ; 0005 0060     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0061 
                 ; 0005 0062     return vBATT;
0044a4 940e c58c 	CALL SUBOPT_0x87
                 _0x20E0096:
0044a6 9624      	ADIW R28,4
0044a7 9508      	RET
                 ; 0005 0063 }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 0066 {
                 _adc_init_read:
                 ; 0005 0067     int i;
                 ; 0005 0068     printDebug("Initializing ADC.. ");
0044a8 931a      	ST   -Y,R17
0044a9 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
0044aa eeec     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
0044ab e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
0044ac e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
0044ad e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
0044ae 940e c1f5 	CALL SUBOPT_0x3
                 ; 0005 0069 
                 ; 0005 006A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0044b0 940e c325 	CALL SUBOPT_0x2E
0044b2 f021      	BREQ _0xA0013
0044b3 940e c325 	CALL SUBOPT_0x2E
0044b5 30e3      	CPI  R30,LOW(0x3)
0044b6 f4e1      	BRNE _0xA0012
                 _0xA0013:
                 ; 0005 006B         for(i=0;i<5;i++){ \
                 ; 0005 006C             SENSOR_SELECT(i);
                +
0044b7 e000     +LDI R16 , LOW ( 0 )
0044b8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0016:
                +
0044b9 3005     +CPI R16 , LOW ( 5 )
0044ba e0e0     +LDI R30 , HIGH ( 5 )
0044bb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0044bc f4ac      	BRGE _0xA0017
0044bd 940e c64d 	CALL SUBOPT_0xA2
0044bf 2fe0      	MOV  R30,R16
0044c0 940e c657 	CALL SUBOPT_0xA3
                 ; 0005 006D             delay_ms(20);
                 ; 0005 006E             adcData[i] = read_adc(8);
0044c2 01f8      	MOVW R30,R16
0044c3 940e c33e 	CALL SUBOPT_0x31
0044c5 0fea      	ADD  R30,R26
0044c6 1ffb      	ADC  R31,R27
0044c7 93ff      	PUSH R31
0044c8 93ef      	PUSH R30
0044c9 e0a8      	LDI  R26,LOW(8)
0044ca df55      	RCALL _read_adc
0044cb 91af      	POP  R26
0044cc 91bf      	POP  R27
0044cd 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 006F         }
                +
0044cf 5f0f     +SUBI R16 , LOW ( - 1 )
0044d0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0044d1 cfe7      	RJMP _0xA0016
                 _0xA0017:
                 ; 0005 0070     }
                 ; 0005 0071     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
0044d2 c025      	RJMP _0xA0018
                 _0xA0012:
0044d3 940e c5f4 	CALL SUBOPT_0x96
0044d5 f021      	BREQ _0xA001A
0044d6 940e c325 	CALL SUBOPT_0x2E
0044d8 30e2      	CPI  R30,LOW(0x2)
0044d9 f4f1      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0072         adcData[0] = read_adc(8);
0044da e0a8      	LDI  R26,LOW(8)
0044db df44      	RCALL _read_adc
0044dc e3a6      	LDI  R26,LOW(_adcData)
0044dd e1b4      	LDI  R27,HIGH(_adcData)
0044de 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 0073         adcData[1] = read_adc(9);
0044e0 e0a9      	LDI  R26,LOW(9)
0044e1 df3e      	RCALL _read_adc
                +
0044e2 e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
0044e3 e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
0044e4 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 0074         adcData[2] = read_adc(10);
0044e6 e0aa      	LDI  R26,LOW(10)
0044e7 df38      	RCALL _read_adc
                +
0044e8 e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
0044e9 e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
0044ea 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 0075         adcData[3] = read_adc(11);
0044ec e0ab      	LDI  R26,LOW(11)
0044ed df32      	RCALL _read_adc
                +
0044ee e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
0044ef e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
0044f0 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 0076         adcData[4] = read_adc(12);
0044f2 e0ac      	LDI  R26,LOW(12)
0044f3 df2c      	RCALL _read_adc
                +
0044f4 e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
0044f5 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
0044f6 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 0077     }
                 ; 0005 0078 
                 ; 0005 0079     adcBatt = read_adc(14);
                 _0xA0019:
                 _0xA0018:
0044f8 e0ae      	LDI  R26,LOW(14)
0044f9 df26      	RCALL _read_adc
0044fa eea8      	LDI  R26,LOW(_adcBatt)
0044fb e1b4      	LDI  R27,HIGH(_adcBatt)
0044fc 940e c65f 	CALL SUBOPT_0xA4
                 ; 0005 007A 
                 ; 0005 007B     printDebug("OK\r\n");
                +
0044fe e0e0     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
0044ff e1f2     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
004500 e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
004501 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
004502 940e c1f5 	CALL SUBOPT_0x3
                 ; 0005 007C }
004504 9109      	LD   R16,Y+
004505 9119      	LD   R17,Y+
004506 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 007F {
                 _init_adc:
                 ; 0005 0080     char refADC;
                 ; 0005 0081     // ADC initialization
                 ; 0005 0082     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 0083     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 0084     // ADC Auto Trigger Source: Free Running
                 ; 0005 0085     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 0086     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 0087     DIDR0=0x00;
004507 931a      	ST   -Y,R17
                 ;	refADC -> R17
004508 e0e0      	LDI  R30,LOW(0)
004509 93e0 007e 	STS  126,R30
                 ; 0005 0088 
                 ; 0005 0089 
                 ; 0005 008A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00450b 940e c325 	CALL SUBOPT_0x2E
00450d f021      	BREQ _0xA001D
00450e 940e c325 	CALL SUBOPT_0x2E
004510 30e3      	CPI  R30,LOW(0x3)
004511 f441      	BRNE _0xA001C
                 _0xA001D:
                 ; 0005 008B         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 008C         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 008D         DIDR2=0x61;
004512 e6e1      	LDI  R30,LOW(97)
004513 93e0 007d 	STS  125,R30
                 ; 0005 008E 
                 ; 0005 008F         /*bongkot edit resigter*/
                 ; 0005 0090         DIDR2=0x7F;
004515 e7ef      	LDI  R30,LOW(127)
004516 93e0 007d 	STS  125,R30
                 ; 0005 0091         refADC = ADC_VREF3_3_TYPE;
004518 e410      	LDI  R17,LOW(64)
                 ; 0005 0092         //ADMUX   = 0x40;     //3.3v reference
                 ; 0005 0093     }
                 ; 0005 0094     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
004519 c00b      	RJMP _0xA001F
                 _0xA001C:
00451a 940e c5f4 	CALL SUBOPT_0x96
00451c f021      	BREQ _0xA0021
00451d 940e c325 	CALL SUBOPT_0x2E
00451f 30e2      	CPI  R30,LOW(0x2)
004520 f421      	BRNE _0xA0020
                 _0xA0021:
                 ; 0005 0095         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0096         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0097         DIDR2=0x7F;
004521 e7ef      	LDI  R30,LOW(127)
004522 93e0 007d 	STS  125,R30
                 ; 0005 0098        // ADMUX   = ADC_VREF_TYPE;
                 ; 0005 0099         refADC = ADC_VREF_TYPE;
004524 ec10      	LDI  R17,LOW(192)
                 ; 0005 009A     }
                 ; 0005 009B 
                 ; 0005 009C 
                 ; 0005 009D     //ADMUX   = ADC_VREF_TYPE;
                 ; 0005 009E     ADMUX   = refADC;
                 _0xA0020:
                 _0xA001F:
004525 9310 007c 	STS  124,R17
                 ; 0005 009F     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 00A0               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 00A1               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 00A2               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 00A3               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 00A4               (1<<2) |          //-----
                 ; 0005 00A5               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 00A6               (0<<0);           //-----
004527 e8e6      	LDI  R30,LOW(134)
004528 93e0 007a 	STS  122,R30
                 ; 0005 00A7 
                 ; 0005 00A8     ADCSRB  = 0;
00452a e0e0      	LDI  R30,LOW(0)
00452b 93e0 007b 	STS  123,R30
                 ; 0005 00A9 
                 ; 0005 00AA     //adc_init_read();
                 ; 0005 00AB }
00452d 9119      	LD   R17,Y+
00452e 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
00452f 94f8      	cli
                 ; 0006 000E     i2c_start();
004530 940e c663 	CALL SUBOPT_0xA5
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
004532 e0a5      	LDI  R26,LOW(5)
004533 940e dfad 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
004535 eaa6      	LDI  R26,LOW(166)
004536 940e c668 	CALL SUBOPT_0xA6
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
004538 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
004539 940e c66c 	CALL SUBOPT_0xA7
                 ; 0006 0017 
                 ; 0006 0018     return 0;
00453b 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
00453c 9724      	SBIW R28,4
00453d 940e e39b 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
00453f 94f8      	cli
                 ; 0006 0021     i2c_start();
004540 940e c663 	CALL SUBOPT_0xA5
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
004542 e0a0      	LDI  R26,LOW(0)
004543 940e dfad 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
004545 940e df79 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
004547 eda1      	LDI  R26,LOW(209)
004548 940e dfad 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
00454a e0a1      	LDI  R26,LOW(1)
00454b 940e df92 	CALL _i2c_read
00454d 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
00454e e0a1      	LDI  R26,LOW(1)
00454f 940e df92 	CALL _i2c_read
004551 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
004552 e0a1      	LDI  R26,LOW(1)
004553 940e df92 	CALL _i2c_read
004555 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
004556 e0a0      	LDI  R26,LOW(0)
004557 940e df92 	CALL _i2c_read
004559 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
00455a 940e df88 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
00455c 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
00455d 2fe2      	MOV  R30,R18
00455e 27ff      	CLR  R31
00455f 2766      	CLR  R22
004560 2777      	CLR  R23
004561 940e c673 	CALL SUBOPT_0xA8
                 ; 0006 002E     z <<= 8;
004563 940e c678 	CALL SUBOPT_0xA9
004565 940e c67d 	CALL SUBOPT_0xAA
                 ; 0006 002F     z += rtc_reg3;
004567 2fe3      	MOV  R30,R19
004568 940e c681 	CALL SUBOPT_0xAB
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
00456a 2fe0      	MOV  R30,R16
00456b 940e c681 	CALL SUBOPT_0xAB
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
00456d 940e c68a 	CALL SUBOPT_0xAC
00456f 940e c678 	CALL SUBOPT_0xA9
004571 940e c68d 	CALL SUBOPT_0xAD
004573 940e c692 	CALL SUBOPT_0xAE
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
004575 940e e3a2 	CALL __LOADLOCR4
004577 9628      	ADIW R28,8
004578 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
004579 93ba      	ST   -Y,R27
00457a 93aa      	ST   -Y,R26
00457b 97a8      	SBIW R28,40
00457c e08c      	LDI  R24,12
00457d e1ac      	LDI  R26,LOW(28)
00457e e0b0      	LDI  R27,HIGH(28)
00457f e0e6      	LDI  R30,LOW(_0xC0003*2)
004580 e1f2      	LDI  R31,HIGH(_0xC0003*2)
004581 e060      	LDI  R22,BYTE3(_0xC0003*2)
004582 940e e3a7 	CALL __INITLOCB
004584 931a      	ST   -Y,R17
004585 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
004586 a5ac     +LDD R26 , Y + 44
004587 a5bd     +LDD R27 , Y + 44 + 1
004588 a58e     +LDD R24 , Y + 44 + 2
004589 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00458a 940e c694 	CALL SUBOPT_0xAF
00458c 940e c69b 	CALL SUBOPT_0xB0
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
00458e 940e c6a0 	CALL SUBOPT_0xB1
                +
004590 a5ac     +LDD R26 , Y + 44
004591 a5bd     +LDD R27 , Y + 44 + 1
004592 a58e     +LDD R24 , Y + 44 + 2
004593 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
004594 940e e18b 	CALL __SUBD21
                +
004596 87aa     +STD Y + 10 , R26
004597 87bb     +STD Y + 10 + 1 , R27
004598 878c     +STD Y + 10 + 2 , R24
004599 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
00459a 940e c45d 	CALL SUBOPT_0x59
00459c 940e c694 	CALL SUBOPT_0xAF
00459e 940e c6a7 	CALL SUBOPT_0xB2
                 ; 0006 0044     min = j - (60 * n);
0045a0 940e c6ac 	CALL SUBOPT_0xB3
0045a2 940e c6a0 	CALL SUBOPT_0xB1
0045a4 940e c45d 	CALL SUBOPT_0x59
0045a6 940e e18b 	CALL __SUBD21
                +
0045a8 87ae     +STD Y + 14 , R26
0045a9 87bf     +STD Y + 14 + 1 , R27
0045aa 8b88     +STD Y + 14 + 2 , R24
0045ab 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
0045ac 940e c6b1 	CALL SUBOPT_0xB4
                +
0045ae e1e8     +LDI R30 , LOW ( 0x18 )
0045af e0f0     +LDI R31 , HIGH ( 0x18 )
0045b0 e060     +LDI R22 , BYTE3 ( 0x18 )
0045b1 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
0045b2 940e e278 	CALL __DIVD21U
0045b4 940e c69b 	CALL SUBOPT_0xB0
                 ; 0006 0046     hrs = n - (24 * j);
                +
0045b6 e1a8     +LDI R26 , LOW ( 0x18 )
0045b7 e0b0     +LDI R27 , HIGH ( 0x18 )
0045b8 e080     +LDI R24 , BYTE3 ( 0x18 )
0045b9 e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
0045ba 940e e222 	CALL __MULD12U
0045bc 940e c6b1 	CALL SUBOPT_0xB4
0045be 940e e18b 	CALL __SUBD21
                +
0045c0 8baa     +STD Y + 18 , R26
0045c1 8bbb     +STD Y + 18 + 1 , R27
0045c2 8b8c     +STD Y + 18 + 2 , R24
0045c3 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
0045c4 940e c6b6 	CALL SUBOPT_0xB5
                +
0045c6 52e5     +SUBI R30 , LOW ( - 731 )
0045c7 4ffd     +SBCI R31 , HIGH ( - 731 )
0045c8 4f6f     +SBCI R22 , BYTE3 ( - 731 )
0045c9 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
0045ca 940e c6bb 	CALL SUBOPT_0xB6
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
0045cc 940e c45d 	CALL SUBOPT_0x59
                +
0045ce e0e7     +LDI R30 , LOW ( 0x7 )
0045cf e0f0     +LDI R31 , HIGH ( 0x7 )
0045d0 e060     +LDI R22 , BYTE3 ( 0x7 )
0045d1 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
0045d2 940e e2bf 	CALL __MODD21U
0045d4 9631      	ADIW R30,1
0045d5 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
0045d6 940e c6c0 	CALL SUBOPT_0xB7
0045d8 940e e278 	CALL __DIVD21U
0045da 940e c6c6 	CALL SUBOPT_0xB8
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
0045dc 940e c6c0 	CALL SUBOPT_0xB7
0045de 940e e2bf 	CALL __MODD21U
                +
0045e0 8fea     +STD Y + 26 , R30
0045e1 8ffb     +STD Y + 26 + 1 , R31
0045e2 8f6c     +STD Y + 26 + 2 , R22
0045e3 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
0045e4 940e c6cb 	CALL SUBOPT_0xB9
0045e6 940e c6d0 	CALL SUBOPT_0xBA
0045e8 f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
0045e9 940e c6d8 	CALL SUBOPT_0xBB
0045eb 940e c6dd 	CALL SUBOPT_0xBC
0045ed 940e c6c6 	CALL SUBOPT_0xB8
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
0045ef 940e c6e2 	CALL SUBOPT_0xBD
0045f1 940e c6b6 	CALL SUBOPT_0xB5
0045f3 940e e186 	CALL __SUBD12
0045f5 01df      	MOVW R26,R30
0045f6 01cb      	MOVW R24,R22
                +
0045f7 e6ed     +LDI R30 , LOW ( 0x16D )
0045f8 e0f1     +LDI R31 , HIGH ( 0x16D )
0045f9 e060     +LDI R22 , BYTE3 ( 0x16D )
0045fa e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
0045fb 940e e278 	CALL __DIVD21U
                +
0045fd a3ee     +STD Y + 38 , R30
0045fe a3ff     +STD Y + 38 + 1 , R31
0045ff a768     +STD Y + 38 + 2 , R22
004600 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
004601 940e c6e7 	CALL SUBOPT_0xBE
004603 940e c6ec 	CALL SUBOPT_0xBF
004605 940e c45d 	CALL SUBOPT_0x59
004607 940e c6f3 	CALL SUBOPT_0xC0
004609 940e c6e2 	CALL SUBOPT_0xBD
00460b 940e e186 	CALL __SUBD12
00460d 940e c6f8 	CALL SUBOPT_0xC1
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
00460f 940e c6cb 	CALL SUBOPT_0xB9
                +
004611 36ae     +CPI R26 , LOW ( 0x16E )
004612 e0e1     +LDI R30 , HIGH ( 0x16E )
004613 07be     +CPC R27 , R30
004614 e0e0     +LDI R30 , BYTE3 ( 0x16E )
004615 078e     +CPC R24 , R30
004616 e0e0     +LDI R30 , BYTE4 ( 0x16E )
004617 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
004618 f428      	BRSH _0xC0006
004619 940e c6cb 	CALL SUBOPT_0xB9
00461b 940e c6d0 	CALL SUBOPT_0xBA
00461d f408      	BRSH _0xC0007
                 _0xC0006:
00461e c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
00461f 940e c6fd 	CALL SUBOPT_0xC2
004621 940e c6dd 	CALL SUBOPT_0xBC
004623 940e c6f8 	CALL SUBOPT_0xC1
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
004625 940e c6e7 	CALL SUBOPT_0xBE
                +
004627 55e0     +SUBI R30 , LOW ( - 1968 )
004628 4ff8     +SBCI R31 , HIGH ( - 1968 )
004629 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
00462a 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
00462b a3ee     +STD Y + 38 , R30
00462c a3ff     +STD Y + 38 + 1 , R31
00462d a768     +STD Y + 38 + 2 , R22
00462e a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
00462f e0ec     +LDI R30 , LOW ( 0xC )
004630 e0f0     +LDI R31 , HIGH ( 0xC )
004631 e060     +LDI R22 , BYTE3 ( 0xC )
004632 e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
004633 a3ea     +STD Y + 34 , R30
004634 a3fb     +STD Y + 34 + 1 , R31
004635 a36c     +STD Y + 34 + 2 , R22
004636 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
004637 a1aa     +LDD R26 , Y + 34
004638 a1bb     +LDD R27 , Y + 34 + 1
004639 a18c     +LDD R24 , Y + 34 + 2
00463a a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
00463b 940e e389 	CALL __CPD02
00463d f010      	BRLO PC+3
00463e 940c 46cb 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
004640 940e c702 	CALL SUBOPT_0xC3
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
004642 940e c707 	CALL SUBOPT_0xC4
004644 f431      	BRNE _0xC000E
004645 e0e0      	LDI  R30,LOW(0)
                +
004646 8fea     +STD Y + 26 , R30
004647 8feb     +STD Y + 26 + 1 , R30
004648 8fec     +STD Y + 26 + 2 , R30
004649 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
00464a c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
00464b 940e c70f 	CALL SUBOPT_0xC5
00464d f429      	BRNE _0xC000F
                +
00464e e1ef     +LDI R30 , LOW ( 0x1F )
00464f e0f0     +LDI R31 , HIGH ( 0x1F )
004650 e060     +LDI R22 , BYTE3 ( 0x1F )
004651 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
004652 c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
004653 940e c717 	CALL SUBOPT_0xC6
004655 f429      	BRNE _0xC0010
                +
004656 e3eb     +LDI R30 , LOW ( 0x3B )
004657 e0f0     +LDI R31 , HIGH ( 0x3B )
004658 e060     +LDI R22 , BYTE3 ( 0x3B )
004659 e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
00465a c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
00465b 940e c71f 	CALL SUBOPT_0xC7
00465d f429      	BRNE _0xC0011
                +
00465e e5ea     +LDI R30 , LOW ( 0x5A )
00465f e0f0     +LDI R31 , HIGH ( 0x5A )
004660 e060     +LDI R22 , BYTE3 ( 0x5A )
004661 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
004662 c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
004663 940e c727 	CALL SUBOPT_0xC8
004665 f429      	BRNE _0xC0012
                +
004666 e7e8     +LDI R30 , LOW ( 0x78 )
004667 e0f0     +LDI R31 , HIGH ( 0x78 )
004668 e060     +LDI R22 , BYTE3 ( 0x78 )
004669 e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
00466a c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
00466b 940e c72f 	CALL SUBOPT_0xC9
00466d f429      	BRNE _0xC0013
                +
00466e e9e7     +LDI R30 , LOW ( 0x97 )
00466f e0f0     +LDI R31 , HIGH ( 0x97 )
004670 e060     +LDI R22 , BYTE3 ( 0x97 )
004671 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
004672 c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
004673 940e c737 	CALL SUBOPT_0xCA
004675 f429      	BRNE _0xC0014
                +
004676 ebe5     +LDI R30 , LOW ( 0xB5 )
004677 e0f0     +LDI R31 , HIGH ( 0xB5 )
004678 e060     +LDI R22 , BYTE3 ( 0xB5 )
004679 e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
00467a c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
00467b 940e c73f 	CALL SUBOPT_0xCB
00467d f429      	BRNE _0xC0015
                +
00467e ede4     +LDI R30 , LOW ( 0xD4 )
00467f e0f0     +LDI R31 , HIGH ( 0xD4 )
004680 e060     +LDI R22 , BYTE3 ( 0xD4 )
004681 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
004682 c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
004683 940e c747 	CALL SUBOPT_0xCC
004685 f429      	BRNE _0xC0016
                +
004686 efe3     +LDI R30 , LOW ( 0xF3 )
004687 e0f0     +LDI R31 , HIGH ( 0xF3 )
004688 e060     +LDI R22 , BYTE3 ( 0xF3 )
004689 e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
00468a c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
00468b 940e c74f 	CALL SUBOPT_0xCD
00468d f429      	BRNE _0xC0017
                +
00468e e1e1     +LDI R30 , LOW ( 0x111 )
00468f e0f1     +LDI R31 , HIGH ( 0x111 )
004690 e060     +LDI R22 , BYTE3 ( 0x111 )
004691 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
004692 c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
004693 940e c757 	CALL SUBOPT_0xCE
004695 f429      	BRNE _0xC0018
                +
004696 e3e0     +LDI R30 , LOW ( 0x130 )
004697 e0f1     +LDI R31 , HIGH ( 0x130 )
004698 e060     +LDI R22 , BYTE3 ( 0x130 )
004699 e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
00469a c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
00469b 940e c75f 	CALL SUBOPT_0xCF
00469d f441      	BRNE _0xC000D
                +
00469e e4ee     +LDI R30 , LOW ( 0x14E )
00469f e0f1     +LDI R31 , HIGH ( 0x14E )
0046a0 e060     +LDI R22 , BYTE3 ( 0x14E )
0046a1 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
0046a2 8fea     +STD Y + 26 , R30
0046a3 8ffb     +STD Y + 26 + 1 , R31
0046a4 8f6c     +STD Y + 26 + 2 , R22
0046a5 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
0046a6 a1aa     +LDD R26 , Y + 34
0046a7 a1bb     +LDD R27 , Y + 34 + 1
0046a8 a18c     +LDD R24 , Y + 34 + 2
0046a9 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0046aa 940e c767 	CALL SUBOPT_0xD0
0046ac f020      	BRLO _0xC001B
0046ad 940e c6e7 	CALL SUBOPT_0xBE
0046af 70e3      	ANDI R30,LOW(0x3)
0046b0 f009      	BREQ _0xC001C
                 _0xC001B:
0046b1 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
0046b2 940e c76f 	CALL SUBOPT_0xD1
0046b4 940e c6dd 	CALL SUBOPT_0xBC
                +
0046b6 8fea     +STD Y + 26 , R30
0046b7 8ffb     +STD Y + 26 + 1 , R31
0046b8 8f6c     +STD Y + 26 + 2 , R22
0046b9 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
0046ba 940e c76f 	CALL SUBOPT_0xD1
0046bc 940e c774 	CALL SUBOPT_0xD2
0046be 940e e394 	CALL __CPD21
0046c0 f450      	BRSH _0xC000A
                 ; 0006 0074     }
0046c1 940e c702 	CALL SUBOPT_0xC3
0046c3 9731      	SBIW R30,1
0046c4 4060      	SBCI R22,0
0046c5 4070      	SBCI R23,0
                +
0046c6 a3ea     +STD Y + 34 , R30
0046c7 a3fb     +STD Y + 34 + 1 , R31
0046c8 a36c     +STD Y + 34 + 2 , R22
0046c9 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
0046ca cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
0046cb 940e c6cb 	CALL SUBOPT_0xB9
0046cd 940e c6fd 	CALL SUBOPT_0xC2
0046cf 940e e186 	CALL __SUBD12
0046d1 940e c779 	CALL SUBOPT_0xD3
0046d3 940e c6c6 	CALL SUBOPT_0xB8
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
0046d5 940e c6e7 	CALL SUBOPT_0xBE
0046d7 a5aa      	LDD  R26,Y+42
0046d8 a5bb      	LDD  R27,Y+42+1
0046d9 940e e2ff 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
0046db 940e c702 	CALL SUBOPT_0xC3
                +
0046dd a5aa     +LDD R26 , Y + 42
0046de a5bb     +LDD R27 , Y + 42 + 1
0046df 9614     +ADIW R26 , 4
0046e0 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
0046e2 940e c6d8 	CALL SUBOPT_0xBB
                +
0046e4 a5aa     +LDD R26 , Y + 42
0046e5 a5bb     +LDD R27 , Y + 42 + 1
0046e6 9618     +ADIW R26 , 8
0046e7 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
0046e9 940e c77e 	CALL SUBOPT_0xD4
                +
0046eb a5aa     +LDD R26 , Y + 42
0046ec a5bb     +LDD R27 , Y + 42 + 1
0046ed 961c     +ADIW R26 , 12
0046ee 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
0046f0 940e c484 	CALL SUBOPT_0x60
                +
0046f2 a5aa     +LDD R26 , Y + 42
0046f3 a5bb     +LDD R27 , Y + 42 + 1
0046f4 9650     +ADIW R26 , 16
0046f5 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
0046f7 940e c783 	CALL SUBOPT_0xD5
                +
0046f9 a5aa     +LDD R26 , Y + 42
0046fa a5bb     +LDD R27 , Y + 42 + 1
0046fb 9654     +ADIW R26 , 20
0046fc 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
0046fe 01f8      	MOVW R30,R16
                +
0046ff a5aa     +LDD R26 , Y + 42
004700 a5bb     +LDD R27 , Y + 42 + 1
004701 9658     +ADIW R26 , 24
004702 93ed     +ST X + , R30
004703 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
004704 940e c788 	CALL SUBOPT_0xD6
004706 96e0      	ADIW R28,48
004707 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
004708 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
004709 940e c598 	CALL SUBOPT_0x89
                +
00470b 5be2     +SUBI R30 , LOW ( 1970 )
00470c 40f7     +SBCI R31 , HIGH ( 1970 )
00470d 4060     +SBCI R22 , BYTE3 ( 1970 )
00470e 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
00470f 940e c6ec 	CALL SUBOPT_0xBF
004711 940e c64a 	CALL SUBOPT_0xA1
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
004713 940e c598 	CALL SUBOPT_0x89
                +
004715 5be1     +SUBI R30 , LOW ( 1969 )
004716 40f7     +SBCI R31 , HIGH ( 1969 )
004717 4060     +SBCI R22 , BYTE3 ( 1969 )
004718 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
004719 940e e1e2 	CALL __LSRD1
00471b 940e e1e2 	CALL __LSRD1
00471d 940e c78d 	CALL SUBOPT_0xD7
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
00471f 940e c78f 	CALL SUBOPT_0xD8
004721 940e c767 	CALL SUBOPT_0xD0
004723 f018      	BRLO _0xC001F
004724 81ec      	LDD  R30,Y+4
004725 70e3      	ANDI R30,LOW(0x3)
004726 f009      	BREQ _0xC0020
                 _0xC001F:
004727 c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
004728 940e c58c 	CALL SUBOPT_0x87
00472a 940e c6dd 	CALL SUBOPT_0xBC
00472c 940e c64a 	CALL SUBOPT_0xA1
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
00472e 940e c412 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
004730 940e c707 	CALL SUBOPT_0xC4
004732 f419      	BRNE _0xC0024
004733 940e c58c 	CALL SUBOPT_0x87
004735 c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
004736 940e c70f 	CALL SUBOPT_0xC5
004738 f439      	BRNE _0xC0025
004739 940e c58c 	CALL SUBOPT_0x87
                +
00473b 5ee1     +SUBI R30 , LOW ( - 31 )
00473c 4fff     +SBCI R31 , HIGH ( - 31 )
00473d 4f6f     +SBCI R22 , BYTE3 ( - 31 )
00473e 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
00473f c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
004740 940e c717 	CALL SUBOPT_0xC6
004742 f439      	BRNE _0xC0026
004743 940e c58c 	CALL SUBOPT_0x87
                +
004745 5ce5     +SUBI R30 , LOW ( - 59 )
004746 4fff     +SBCI R31 , HIGH ( - 59 )
004747 4f6f     +SBCI R22 , BYTE3 ( - 59 )
004748 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
004749 c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
00474a 940e c71f 	CALL SUBOPT_0xC7
00474c f439      	BRNE _0xC0027
00474d 940e c58c 	CALL SUBOPT_0x87
                +
00474f 5ae6     +SUBI R30 , LOW ( - 90 )
004750 4fff     +SBCI R31 , HIGH ( - 90 )
004751 4f6f     +SBCI R22 , BYTE3 ( - 90 )
004752 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
004753 c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
004754 940e c727 	CALL SUBOPT_0xC8
004756 f439      	BRNE _0xC0028
004757 940e c58c 	CALL SUBOPT_0x87
                +
004759 58e8     +SUBI R30 , LOW ( - 120 )
00475a 4fff     +SBCI R31 , HIGH ( - 120 )
00475b 4f6f     +SBCI R22 , BYTE3 ( - 120 )
00475c 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
00475d c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
00475e 940e c72f 	CALL SUBOPT_0xC9
004760 f439      	BRNE _0xC0029
004761 940e c58c 	CALL SUBOPT_0x87
                +
004763 56e9     +SUBI R30 , LOW ( - 151 )
004764 4fff     +SBCI R31 , HIGH ( - 151 )
004765 4f6f     +SBCI R22 , BYTE3 ( - 151 )
004766 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
004767 c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
004768 940e c737 	CALL SUBOPT_0xCA
00476a f439      	BRNE _0xC002A
00476b 940e c58c 	CALL SUBOPT_0x87
                +
00476d 54eb     +SUBI R30 , LOW ( - 181 )
00476e 4fff     +SBCI R31 , HIGH ( - 181 )
00476f 4f6f     +SBCI R22 , BYTE3 ( - 181 )
004770 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
004771 c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
004772 940e c73f 	CALL SUBOPT_0xCB
004774 f439      	BRNE _0xC002B
004775 940e c58c 	CALL SUBOPT_0x87
                +
004777 52ec     +SUBI R30 , LOW ( - 212 )
004778 4fff     +SBCI R31 , HIGH ( - 212 )
004779 4f6f     +SBCI R22 , BYTE3 ( - 212 )
00477a 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
00477b c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
00477c 940e c747 	CALL SUBOPT_0xCC
00477e f439      	BRNE _0xC002C
00477f 940e c58c 	CALL SUBOPT_0x87
                +
004781 50ed     +SUBI R30 , LOW ( - 243 )
004782 4fff     +SBCI R31 , HIGH ( - 243 )
004783 4f6f     +SBCI R22 , BYTE3 ( - 243 )
004784 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
004785 c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
004786 940e c74f 	CALL SUBOPT_0xCD
004788 f439      	BRNE _0xC002D
004789 940e c58c 	CALL SUBOPT_0x87
                +
00478b 5eef     +SUBI R30 , LOW ( - 273 )
00478c 4ffe     +SBCI R31 , HIGH ( - 273 )
00478d 4f6f     +SBCI R22 , BYTE3 ( - 273 )
00478e 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
00478f c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
004790 940e c757 	CALL SUBOPT_0xCE
004792 f439      	BRNE _0xC002E
004793 940e c58c 	CALL SUBOPT_0x87
                +
004795 5de0     +SUBI R30 , LOW ( - 304 )
004796 4ffe     +SBCI R31 , HIGH ( - 304 )
004797 4f6f     +SBCI R22 , BYTE3 ( - 304 )
004798 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
004799 c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
00479a 940e c75f 	CALL SUBOPT_0xCF
00479c f441      	BRNE _0xC0023
00479d 940e c58c 	CALL SUBOPT_0x87
                +
00479f 5be2     +SUBI R30 , LOW ( - 334 )
0047a0 4ffe     +SBCI R31 , HIGH ( - 334 )
0047a1 4f6f     +SBCI R22 , BYTE3 ( - 334 )
0047a2 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
0047a3 940e e31a 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
0047a5 940e c794 	CALL SUBOPT_0xD9
0047a7 940e c799 	CALL SUBOPT_0xDA
0047a9 940e c78d 	CALL SUBOPT_0xD7
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
0047ab 940e c58c 	CALL SUBOPT_0x87
                +
0047ad e8a0     +LDI R26 , LOW ( 0x15180 )
0047ae e5b1     +LDI R27 , HIGH ( 0x15180 )
0047af e081     +LDI R24 , BYTE3 ( 0x15180 )
0047b0 e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
0047b1 940e e222 	CALL __MULD12U
0047b3 940e c64a 	CALL SUBOPT_0xA1
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
0047b5 940e c79e 	CALL SUBOPT_0xDB
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
0047b7 940e c79e 	CALL SUBOPT_0xDB
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
0047b9 940e c7a6 	CALL SUBOPT_0xDC
0047bb 940e c6a0 	CALL SUBOPT_0xB1
0047bd 940e c78d 	CALL SUBOPT_0xD7
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
0047bf 940e c7ab 	CALL SUBOPT_0xDD
0047c1 940e c78d 	CALL SUBOPT_0xD7
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
0047c3 940e c58c 	CALL SUBOPT_0x87
0047c5 966e      	ADIW R28,30
0047c6 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
0047c7 940e e329 	CALL __PUTPARD2
0047c9 9728      	SBIW R28,8
0047ca 940e e39b 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
0047cc 940e c40b 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
0047ce 940e c7b0 	CALL SUBOPT_0xDE
0047d0 f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
0047d1 940e c7b5 	CALL SUBOPT_0xDF
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
0047d3 c00b      	RJMP _0xC0031
                 _0xC0030:
0047d4 940e c7ba 	CALL SUBOPT_0xE0
0047d6 f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
0047d7 940e c7bf 	CALL SUBOPT_0xE1
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
0047d9 c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
0047da e0e0      	LDI  R30,LOW(0)
                +
0047db 83ec     +STD Y + 4 , R30
0047dc 83ed     +STD Y + 4 + 1 , R30
0047dd 83ee     +STD Y + 4 + 2 , R30
0047de 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
0047df 940e c678 	CALL SUBOPT_0xA9
0047e1 940e e385 	CALL __CPD20
0047e3 f018      	BRLO _0xC0035
0047e4 940e c7c4 	CALL SUBOPT_0xE2
0047e6 f008      	BRLO _0xC0036
                 _0xC0035:
0047e7 c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
0047e8 efef      	LDI  R30,LOW(65535)
0047e9 efff      	LDI  R31,HIGH(65535)
0047ea c016      	RJMP _0x20E0095
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
0047eb 940e c7cd 	CALL SUBOPT_0xE3
0047ed 940e c7d2 	CALL SUBOPT_0xE4
0047ef 940e c4ac 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
0047f1 940e c7d6 	CALL SUBOPT_0xE5
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
0047f3 94f8      	cli
                 ; 0006 00D5     i2c_start();
0047f4 940e c663 	CALL SUBOPT_0xA5
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
0047f6 940e c7e7 	CALL SUBOPT_0xE6
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
0047f8 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
0047f9 e3eb     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
0047fa e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
0047fb e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
0047fc e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
0047fd 940e c1f5 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
0047ff 940e c66c 	CALL SUBOPT_0xA7
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E0095:
004801 940e e3a2 	CALL __LOADLOCR4
004803 9660      	ADIW R28,16
004804 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
004805 940e c7f5 	CALL SUBOPT_0xE7
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004807 89a8      	LDD  R26,Y+16
004808 89b9      	LDD  R27,Y+16+1
004809 971f      	SBIW R26,15
00480a f434      	BRGE _0xC0038
00480b 89a8      	LDD  R26,Y+16
00480c 89b9      	LDD  R27,Y+16+1
00480d 3fa4      	CPI  R26,LOW(0xFFF4)
00480e efef      	LDI  R30,HIGH(0xFFF4)
00480f 07be      	CPC  R27,R30
004810 f45c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
004811 e5e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
004812 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
004813 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
004814 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
004815 940e c7fb 	CALL SUBOPT_0xE8
004817 940e c800 	CALL SUBOPT_0xE9
                 ; 0006 00F0         return -2;
004819 efee      	LDI  R30,LOW(65534)
00481a efff      	LDI  R31,HIGH(65534)
00481b c049      	RJMP _0x20E0094
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
00481c 01fe      	MOVW R30,R28
00481d 9672      	ADIW R30,18
00481e e1aa      	LDI  R26,26
00481f 940e e32e 	CALL __PUTPARL
004821 dee6      	RCALL _date_to_binary
004822 940e c805 	CALL SUBOPT_0xEA
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
004824 89e8      	LDD  R30,Y+16
004825 89f9      	LDD  R31,Y+16+1
004826 940e c80a 	CALL SUBOPT_0xEB
004828 940e c80a 	CALL SUBOPT_0xEB
00482a efaf      	LDI  R26,LOW(65535)
00482b efbf      	LDI  R27,HIGH(65535)
00482c 940e e248 	CALL __MULW12
00482e 940e c23b 	CALL SUBOPT_0xB
004830 940e c68d 	CALL SUBOPT_0xAD
004832 940e c80f 	CALL SUBOPT_0xEC
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
004834 940e c811 	CALL SUBOPT_0xED
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
004836 940e c40b 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
004838 940e c7b0 	CALL SUBOPT_0xDE
00483a f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
00483b 940e c7b5 	CALL SUBOPT_0xDF
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
00483d c00b      	RJMP _0xC003B
                 _0xC003A:
00483e 940e c7ba 	CALL SUBOPT_0xE0
004840 f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
004841 940e c7bf 	CALL SUBOPT_0xE1
                 ; 0006 0100     }
                 ; 0006 0101     else{
004843 c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
004844 e0e0      	LDI  R30,LOW(0)
                +
004845 83ec     +STD Y + 4 , R30
004846 83ed     +STD Y + 4 + 1 , R30
004847 83ee     +STD Y + 4 + 2 , R30
004848 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
004849 940e c678 	CALL SUBOPT_0xA9
00484b 940e e385 	CALL __CPD20
00484d f018      	BRLO _0xC003F
00484e 940e c7c4 	CALL SUBOPT_0xE2
004850 f008      	BRLO _0xC0040
                 _0xC003F:
004851 c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
004852 efef      	LDI  R30,LOW(65535)
004853 efff      	LDI  R31,HIGH(65535)
004854 c010      	RJMP _0x20E0094
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
004855 940e c7cd 	CALL SUBOPT_0xE3
004857 940e c7d2 	CALL SUBOPT_0xE4
004859 940e c4ac 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
00485b 940e c7d6 	CALL SUBOPT_0xE5
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
00485d 94f8      	cli
                 ; 0006 0113     i2c_start();
00485e 940e c663 	CALL SUBOPT_0xA5
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
004860 940e c7e7 	CALL SUBOPT_0xE6
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
004862 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
004863 940e c66c 	CALL SUBOPT_0xA7
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E0094:
004865 940e e3a2 	CALL __LOADLOCR4
004867 96ac      	ADIW R28,44
004868 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
004869 940e c81a 	CALL SUBOPT_0xEE
00486b 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
00486c dccf      	RCALL _DS1672_read
00486d 940e c81f 	CALL SUBOPT_0xEF
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
00486f 940e c37d 	CALL SUBOPT_0x3A
004871 f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
004872 e001     +LDI R16 , LOW ( 1 )
004873 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
004874 91e0 1430 	LDS  R30,_raw_rtc
004876 91f0 1431 	LDS  R31,_raw_rtc+1
004878 9160 1432 	LDS  R22,_raw_rtc+2
00487a 9170 1433 	LDS  R23,_raw_rtc+3
00487c 940e c6a7 	CALL SUBOPT_0xB2
                 ; 0006 012C     }
                 ; 0006 012D     else{
00487e c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
00487f e000     +LDI R16 , LOW ( 0 )
004880 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
004881 940e c6ac 	CALL SUBOPT_0xB3
004883 940e c811 	CALL SUBOPT_0xED
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
004885 81ee      	LDD  R30,Y+6
004886 81ff      	LDD  R31,Y+6+1
004887 940e c80a 	CALL SUBOPT_0xEB
004889 940e c80a 	CALL SUBOPT_0xEB
00488b 940e c6b1 	CALL SUBOPT_0xB4
00488d 940e c68d 	CALL SUBOPT_0xAD
00488f 940e c821 	CALL SUBOPT_0xF0
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
004891 940e e324 	CALL __PUTPARD1
004893 85ac      	LDD  R26,Y+12
004894 85bd      	LDD  R27,Y+12+1
004895 dce3      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
004896 01f8      	MOVW R30,R16
004897 8119      	LDD  R17,Y+1
004898 8108      	LDD  R16,Y+0
004899 962a      	ADIW R28,10
00489a 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
00489b 8de8      	LDD  R30,Y+24
00489c 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
00489d 30e1      	CPI  R30,LOW(0x1)
00489e e0a0      	LDI  R26,HIGH(0x1)
00489f 07fa      	CPC  R31,R26
0048a0 f429      	BRNE _0xC0046
                +
0048a1 e8e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
0048a2 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
0048a3 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
0048a4 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
0048a5 c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
0048a6 30e2      	CPI  R30,LOW(0x2)
0048a7 e0a0      	LDI  R26,HIGH(0x2)
0048a8 07fa      	CPC  R31,R26
0048a9 f429      	BRNE _0xC0047
                +
0048aa e8ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
0048ab e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
0048ac e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
0048ad e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
0048ae c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
0048af 30e3      	CPI  R30,LOW(0x3)
0048b0 e0a0      	LDI  R26,HIGH(0x3)
0048b1 07fa      	CPC  R31,R26
0048b2 f429      	BRNE _0xC0048
                +
0048b3 e9e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
0048b4 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
0048b5 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
0048b6 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
0048b7 c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
0048b8 30e4      	CPI  R30,LOW(0x4)
0048b9 e0a0      	LDI  R26,HIGH(0x4)
0048ba 07fa      	CPC  R31,R26
0048bb f429      	BRNE _0xC0049
                +
0048bc e9ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
0048bd e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
0048be e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
0048bf e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
0048c0 c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
0048c1 30e5      	CPI  R30,LOW(0x5)
0048c2 e0a0      	LDI  R26,HIGH(0x5)
0048c3 07fa      	CPC  R31,R26
0048c4 f429      	BRNE _0xC004A
                +
0048c5 eae0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
0048c6 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
0048c7 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
0048c8 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
0048c9 c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
0048ca 30e6      	CPI  R30,LOW(0x6)
0048cb e0a0      	LDI  R26,HIGH(0x6)
0048cc 07fa      	CPC  R31,R26
0048cd f429      	BRNE _0xC004B
                +
0048ce eae6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
0048cf e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
0048d0 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
0048d1 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
0048d2 c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
0048d3 30e7      	CPI  R30,LOW(0x7)
0048d4 e0a0      	LDI  R26,HIGH(0x7)
0048d5 07fa      	CPC  R31,R26
0048d6 f441      	BRNE _0xC0045
                +
0048d7 eaec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
0048d8 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
0048d9 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
0048da e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
0048db 940e e324 	CALL __PUTPARD1
0048dd 940e c360 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
0048df ebe2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
0048e0 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
0048e1 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
0048e2 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
0048e3 940e c823 	CALL SUBOPT_0xF1
0048e5 940e c357 	CALL SUBOPT_0x34
0048e7 940e c412 	CALL SUBOPT_0x4F
0048e9 940e c467 	CALL SUBOPT_0x5B
0048eb 940e c828 	CALL SUBOPT_0xF2
0048ed 940e c82c 	CALL SUBOPT_0xF3
0048ef 940e c839 	CALL SUBOPT_0xF4
0048f1 e18c      	LDI  R24,28
0048f2 940e 9e86 	CALL _printDebug
0048f4 96a0      	ADIW R28,32
                 ; 0006 014F     return;
0048f5 c025      	RJMP _0x20E0093
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
0048f6 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
0048f7 e0e0      	LDI  R30,LOW(0)
0048f8 93e0 1430 	STS  _raw_rtc,R30
0048fa 93e0 1431 	STS  _raw_rtc+1,R30
0048fc 93e0 1432 	STS  _raw_rtc+2,R30
0048fe 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
004900 94f8      	cli
                 ; 0006 0159     i2c_start();
004901 940e c663 	CALL SUBOPT_0xA5
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
004903 e0a4      	LDI  R26,LOW(4)
004904 940e dfad 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
004906 e0a0      	LDI  R26,LOW(0)
004907 940e c668 	CALL SUBOPT_0xA6
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
004909 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
00490a dc24      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
00490b 940e c234 	CALL SUBOPT_0x9
00490d 940e c840 	CALL SUBOPT_0xF5
00490f df59      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
004910 ede6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
004911 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
004912 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
004913 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
004914 940e c1f5 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
004916 01fe      	MOVW R30,R28
004917 e1aa      	LDI  R26,26
004918 940e e32e 	CALL __PUTPARL
00491a df80      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E0093:
00491b 966a      	ADIW R28,26
00491c 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0021 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0022     int i;
                 ; 0007 0023 
                 ; 0007 0024     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0025 
                 ; 0007 0026     if( config_prop_flag != 0x01){
00491d 940e c566 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
00491f e4a2      	LDI  R26,LOW(_config_prop_flag)
004920 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004921 940e e350 	CALL __EEPROMRDB
004923 30e1      	CPI  R30,LOW(0x1)
004924 f0a9      	BREQ _0xE000B
                 ; 0007 0027         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
004925 e1ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
004926 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
004927 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
004928 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
004929 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0028         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
00492b 81ea      	LDD  R30,Y+2
00492c 81fb      	LDD  R31,Y+2+1
00492d 940e c843 	CALL SUBOPT_0xF6
00492f 940e c848 	CALL SUBOPT_0xF7
004931 940e a752 	CALL _memset
                 ; 0007 0029         readConfig->timeZone   = 7;
004933 81aa      	LDD  R26,Y+2
004934 81bb      	LDD  R27,Y+2+1
004935 56a0      	SUBI R26,LOW(-160)
004936 4fbf      	SBCI R27,HIGH(-160)
004937 e0e7      	LDI  R30,LOW(7)
004938 93ec      	ST   X,R30
                 ; 0007 002A     }
                 ; 0007 002B     else{
004939 c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002C 
                 ; 0007 002D         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
00493a e000     +LDI R16 , LOW ( 0 )
00493b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
00493c 3104     +CPI R16 , LOW ( 20 )
00493d e0e0     +LDI R30 , HIGH ( 20 )
00493e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00493f f47c      	BRGE _0xE000F
                 ; 0007 002E         {
                 ; 0007 002F             readConfig->deviceType[i]   = config_prop.deviceType[i];
004940 01f8      	MOVW R30,R16
004941 81aa      	LDD  R26,Y+2
004942 81bb      	LDD  R27,Y+2+1
004943 0fea      	ADD  R30,R26
004944 1ffb      	ADC  R31,R27
004945 010f      	MOVW R0,R30
004946 e0a0      	LDI  R26,LOW(_config_prop)
004947 e0b0      	LDI  R27,HIGH(_config_prop)
004948 940e c84b 	CALL SUBOPT_0xF8
00494a 01d0      	MOVW R26,R0
00494b 93ec      	ST   X,R30
                 ; 0007 0030         }
                +
00494c 5f0f     +SUBI R16 , LOW ( - 1 )
00494d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00494e cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0031 
                 ; 0007 0032         /*
                 ; 0007 0033         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0034         {
                 ; 0007 0035             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0036             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0037         }
                 ; 0007 0038         */
                 ; 0007 0039         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
00494f 81ea      	LDD  R30,Y+2
004950 81fb      	LDD  R31,Y+2+1
004951 9674      	ADIW R30,20
004952 93fa      	ST   -Y,R31
004953 93ea      	ST   -Y,R30
                +
004954 eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004955 e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004956 e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
004957 e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
004958 940e e324 	CALL __PUTPARD1
00495a eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
00495b e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
00495c e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
00495d 940e a7a5 	CALL _strlenf
00495f 01df      	MOVW R26,R30
004960 940e a71f 	CALL _memcpyf
                 ; 0007 003A 
                 ; 0007 003B         for(i=0;i<NAME_LENGTH;i++)
                +
004962 e000     +LDI R16 , LOW ( 0 )
004963 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
004964 3208     +CPI R16 , LOW ( 40 )
004965 e0e0     +LDI R30 , HIGH ( 40 )
004966 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004967 f46c      	BRGE _0xE0012
                 ; 0007 003C         {
                 ; 0007 003D             readConfig->deviceName[i]   = config_prop.deviceName[i];
004968 81ea      	LDD  R30,Y+2
004969 81fb      	LDD  R31,Y+2+1
00496a 96b8      	ADIW R30,40
00496b 0fe0      	ADD  R30,R16
00496c 1ff1      	ADC  R31,R17
00496d 010f      	MOVW R0,R30
                +
00496e e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
00496f e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004970 940e c850 	CALL SUBOPT_0xF9
                 ; 0007 003E         }
                +
004972 5f0f     +SUBI R16 , LOW ( - 1 )
004973 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004974 cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 003F 
                 ; 0007 0040         for(i=0;i<ID_LENGTH;i++)
                +
004975 e000     +LDI R16 , LOW ( 0 )
004976 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
004977 3104     +CPI R16 , LOW ( 20 )
004978 e0e0     +LDI R30 , HIGH ( 20 )
004979 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00497a f454      	BRGE _0xE0015
                 ; 0007 0041         {
                 ; 0007 0042             readConfig->deviceID[i]   = config_prop.deviceID[i];
00497b 940e c858 	CALL SUBOPT_0xFA
00497d 010f      	MOVW R0,R30
                +
00497e e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
00497f e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004980 940e c850 	CALL SUBOPT_0xF9
                 ; 0007 0043         }
                +
004982 5f0f     +SUBI R16 , LOW ( - 1 )
004983 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004984 cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0044 
                 ; 0007 0045         for(i=0;i<NAME_LENGTH;i++)
                +
004985 e000     +LDI R16 , LOW ( 0 )
004986 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
004987 3208     +CPI R16 , LOW ( 40 )
004988 e0e0     +LDI R30 , HIGH ( 40 )
004989 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
00498a f454      	BRGE _0xE0018
                 ; 0007 0046         {
                 ; 0007 0047             readConfig->hostName[i]   = config_prop.hostName[i];
00498b 940e c85f 	CALL SUBOPT_0xFB
00498d 010f      	MOVW R0,R30
                +
00498e e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
00498f e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004990 940e c850 	CALL SUBOPT_0xF9
                 ; 0007 0048         }
                +
004992 5f0f     +SUBI R16 , LOW ( - 1 )
004993 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004994 cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 0049 
                 ; 0007 004A         for(i=0;i<ID_LENGTH;i++)
                +
004995 e000     +LDI R16 , LOW ( 0 )
004996 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
004997 3104     +CPI R16 , LOW ( 20 )
004998 e0e0     +LDI R30 , HIGH ( 20 )
004999 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00499a f454      	BRGE _0xE001B
                 ; 0007 004B         {
                 ; 0007 004C             readConfig->hostID[i]   = config_prop.hostID[i];
00499b 940e c866 	CALL SUBOPT_0xFC
00499d 010f      	MOVW R0,R30
                +
00499e e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
00499f e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
0049a0 940e c850 	CALL SUBOPT_0xF9
                 ; 0007 004D         }
                +
0049a2 5f0f     +SUBI R16 , LOW ( - 1 )
0049a3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049a4 cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 004E 
                 ; 0007 004F         readConfig->timeZone   = config_prop.timeZone;
                +
0049a5 eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
0049a6 e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
0049a7 940e e350 	CALL __EEPROMRDB
                +
0049a9 81aa     +LDD R26 , Y + 2
0049aa 81bb     +LDD R27 , Y + 2 + 1
0049ab 56a0     +SUBI R26 , LOW ( - 160 )
0049ac 4fbf     +SBCI R27 , HIGH ( - 160 )
0049ad 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0050     }
                 _0xE000C:
                 ; 0007 0051     return 0;
0049ae 940e c788 	CALL SUBOPT_0xD6
0049b0 9624      	ADIW R28,4
0049b1 9508      	RET
                 ; 0007 0052 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0055 {
                 _getOperatingConfig:
                 ; 0007 0056     int i;
                 ; 0007 0057 
                 ; 0007 0058     if( config_oper_flag != 0x01){
0049b2 940e c566 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0049b4 e4a3      	LDI  R26,LOW(_config_oper_flag)
0049b5 e0b5      	LDI  R27,HIGH(_config_oper_flag)
0049b6 940e e350 	CALL __EEPROMRDB
0049b8 30e1      	CPI  R30,LOW(0x1)
0049b9 f0d1      	BREQ _0xE001C
                 ; 0007 0059         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
0049ba e5e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
0049bb e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
0049bc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
0049bd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
0049be 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 005A 
                 ; 0007 005B         readConfig->mode                    =   MODE_DATALOGGER;
0049c0 81aa      	LDD  R26,Y+2
0049c1 81bb      	LDD  R27,Y+2+1
0049c2 e2e0      	LDI  R30,LOW(32)
0049c3 940e c86d 	CALL SUBOPT_0xFD
                 ; 0007 005C         readConfig->deviceEnable            =   0x00;
0049c5 e0e0      	LDI  R30,LOW(0)
0049c6 940e c872 	CALL SUBOPT_0xFE
                 ; 0007 005D         readConfig->alarmEnable             =   0x00;
                 ; 0007 005E 
                 ; 0007 005F         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
0049c8 3005     +CPI R16 , LOW ( 5 )
0049c9 e0e0     +LDI R30 , HIGH ( 5 )
0049ca 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0049cb f43c      	BRGE _0xE001F
                 ; 0007 0060         {
                 ; 0007 0061             readConfig->sensorEnable[i]     =   0x00;
0049cc 940e c87b 	CALL SUBOPT_0xFF
0049ce e0a0      	LDI  R26,LOW(0)
0049cf 83a0      	STD  Z+0,R26
                 ; 0007 0062         }
                +
0049d0 5f0f     +SUBI R16 , LOW ( - 1 )
0049d1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049d2 cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0063 
                 ; 0007 0064         /* // -- for test -- //
                 ; 0007 0065         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0066         readConfig->deviceEnable            =   0x01;
                 ; 0007 0067         readConfig->alarmEnable             =   0x01;
                 ; 0007 0068 
                 ; 0007 0069         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006A         {
                 ; 0007 006B             if(i==0){
                 ; 0007 006C                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006D             }
                 ; 0007 006E             else{
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0070             }
                 ; 0007 0071         }
                 ; 0007 0072         */
                 ; 0007 0073     }
                 ; 0007 0074     else{
0049d3 c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0075         readConfig->mode                    =   config_oper.mode;
0049d4 eaa1      	LDI  R26,LOW(_config_oper)
0049d5 e0b0      	LDI  R27,HIGH(_config_oper)
0049d6 940e c881 	CALL SUBOPT_0x100
                 ; 0007 0076         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
0049d8 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
0049d9 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
0049da 940e c887 	CALL SUBOPT_0x101
                 ; 0007 0077         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
0049dc eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
0049dd e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
0049de 940e c88e 	CALL SUBOPT_0x102
                 ; 0007 0078 
                 ; 0007 0079         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0049e0 e000     +LDI R16 , LOW ( 0 )
0049e1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
0049e2 3005     +CPI R16 , LOW ( 5 )
0049e3 e0e0     +LDI R30 , HIGH ( 5 )
0049e4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0049e5 f454      	BRGE _0xE0023
                 ; 0007 007A         {
                 ; 0007 007B             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
0049e6 940e c87b 	CALL SUBOPT_0xFF
0049e8 010f      	MOVW R0,R30
                +
0049e9 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
0049ea e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
0049eb 940e c850 	CALL SUBOPT_0xF9
                 ; 0007 007C         }
                +
0049ed 5f0f     +SUBI R16 , LOW ( - 1 )
0049ee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049ef cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007D     }
                 _0xE0020:
                 ; 0007 007E 
                 ; 0007 007F 
                 ; 0007 0080     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
0049f0 e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
0049f1 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
0049f2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
0049f3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
0049f4 940e c895 	CALL SUBOPT_0x103
                 ; 0007 0081     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
0049f6 ebe6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
0049f7 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
0049f8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
0049f9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
0049fa 940e c89b 	CALL SUBOPT_0x104
0049fc 81e1      	LDD  R30,Z+1
0049fd 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0082     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
0049ff eee7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
004a00 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
004a01 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
004a02 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
004a03 940e c89b 	CALL SUBOPT_0x104
004a05 81e2      	LDD  R30,Z+2
004a06 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0083     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
004a08 e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
004a09 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
004a0a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
004a0b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
004a0c 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0084 
                 ; 0007 0085     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004a0e e000     +LDI R16 , LOW ( 0 )
004a0f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
004a10 3005     +CPI R16 , LOW ( 5 )
004a11 e0e0     +LDI R30 , HIGH ( 5 )
004a12 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004a13 f43c      	BRGE _0xE0026
                 ; 0007 0086     {
                 ; 0007 0087         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
004a14 940e c8a0 	CALL SUBOPT_0x105
004a16 940e c8a5 	CALL SUBOPT_0x106
                 ; 0007 0088     }
                +
004a18 5f0f     +SUBI R16 , LOW ( - 1 )
004a19 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a1a cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 0089     printDebug("\r\n");
004a1b 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 008A 
                 ; 0007 008B     return 0;
004a1d 940e c788 	CALL SUBOPT_0xD6
004a1f c4e6      	RJMP _0x20E008E
                 ; 0007 008C }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 008F {
                 _getSensorConfig:
                 ; 0007 0090     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004a20 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004a22 f022      	BRMI _0xE0028
004a23 81aa      	LDD  R26,Y+2
004a24 81bb      	LDD  R27,Y+2+1
004a25 9715      	SBIW R26,5
004a26 f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0091         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
004a27 e4ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
004a28 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
004a29 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
004a2a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
004a2b 940e c89b 	CALL SUBOPT_0x104
004a2d 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 0092         return -1;
004a2f c4d4      	RJMP _0x20E008F
                 ; 0007 0093     }
                 ; 0007 0094 
                 ; 0007 0095     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
004a30 81aa      	LDD  R26,Y+2
004a31 81bb      	LDD  R27,Y+2+1
004a32 5bac      	SUBI R26,LOW(-_config_sens_flag)
004a33 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004a34 940e e350 	CALL __EEPROMRDB
004a36 30e1      	CPI  R30,LOW(0x1)
004a37 f411      	BRNE PC+3
004a38 940c 4a81 	JMP _0xE002A
                 ; 0007 0096         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
004a3a e7ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
004a3b e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
004a3c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
004a3d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
004a3e 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0097         readConfig->samplingRate        =   300;
004a40 81a8      	LD   R26,Y
004a41 81b9      	LDD  R27,Y+1
004a42 e2ec      	LDI  R30,LOW(300)
004a43 e0f1      	LDI  R31,HIGH(300)
004a44 940e c8b4 	CALL SUBOPT_0x109
                 ; 0007 0098         readConfig->reOccurrence        =   0x8000;
004a46 9612      	ADIW R26,2
004a47 e0e0      	LDI  R30,LOW(32768)
004a48 e8f0      	LDI  R31,HIGH(32768)
004a49 940e c8b4 	CALL SUBOPT_0x109
                 ; 0007 0099         readConfig->timeStartHour       =   0;
004a4b 9614      	ADIW R26,4
004a4c 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 009A         readConfig->timeStartMin        =   0;
004a4e 9615      	ADIW R26,5
004a4f 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 009B         readConfig->timeStopHour        =   0;
004a51 9616      	ADIW R26,6
004a52 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 009C         readConfig->timeStopMin         =   0;
004a54 9617      	ADIW R26,7
004a55 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 009D 
                 ; 0007 009E         readConfig->alarmEnable         =   0x00;
004a57 9618      	ADIW R26,8
004a58 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 009F         readConfig->lowerLimit          =   10.0;
004a5a 9619      	ADIW R26,9
004a5b 940e c8be 	CALL SUBOPT_0x10B
004a5d 940e e2ff 	CALL __PUTDP1
                 ; 0007 00A0         readConfig->lowerDelay          =   20;
004a5f 81a8      	LD   R26,Y
004a60 81b9      	LDD  R27,Y+1
004a61 961d      	ADIW R26,13
004a62 e1e4      	LDI  R30,LOW(20)
004a63 e0f0      	LDI  R31,HIGH(20)
004a64 940e c8b4 	CALL SUBOPT_0x109
                 ; 0007 00A1         readConfig->lowerExtreme        =   0.0;
004a66 961f      	ADIW R26,15
004a67 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0007 00A2         readConfig->upperLimit          =   180.0;
004a69 81a8      	LD   R26,Y
004a6a 81b9      	LDD  R27,Y+1
004a6b 9653      	ADIW R26,19
                +
004a6c e0e0     +LDI R30 , LOW ( 0x43340000 )
004a6d e0f0     +LDI R31 , HIGH ( 0x43340000 )
004a6e e364     +LDI R22 , BYTE3 ( 0x43340000 )
004a6f e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
004a70 940e e2ff 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->upperDelay          =   20;
004a72 81a8      	LD   R26,Y
004a73 81b9      	LDD  R27,Y+1
004a74 9657      	ADIW R26,23
004a75 e1e4      	LDI  R30,LOW(20)
004a76 e0f0      	LDI  R31,HIGH(20)
004a77 940e c8b4 	CALL SUBOPT_0x109
                 ; 0007 00A4         readConfig->upperExtreme        =   200.0;
004a79 9659      	ADIW R26,25
                +
004a7a e0e0     +LDI R30 , LOW ( 0x43480000 )
004a7b e0f0     +LDI R31 , HIGH ( 0x43480000 )
004a7c e468     +LDI R22 , BYTE3 ( 0x43480000 )
004a7d e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
004a7e 940e e2ff 	CALL __PUTDP1
                 ; 0007 00A5         /*
                 ; 0007 00A6         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A7         readConfig->lowerLimit          =   0.0;
                 ; 0007 00A8         readConfig->lowerDelay          =   10;
                 ; 0007 00A9         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AA         readConfig->upperLimit          =   0.0;
                 ; 0007 00AB         readConfig->upperDelay          =   10;
                 ; 0007 00AC         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AD         */
                 ; 0007 00AE     }
                 ; 0007 00AF     else{
004a80 c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B0         readConfig->samplingRate        =   config_sens[ch].samplingRate;
004a81 940e c8c3 	CALL SUBOPT_0x10C
004a83 55e7      	SUBI R30,LOW(-_config_sens)
004a84 4fff      	SBCI R31,HIGH(-_config_sens)
004a85 01df      	MOVW R26,R30
004a86 940e e34c 	CALL __EEPROMRDW
004a88 81a8      	LD   R26,Y
004a89 81b9      	LDD  R27,Y+1
004a8a 93ed      	ST   X+,R30
004a8b 93fc      	ST   X,R31
                 ; 0007 00B1         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
004a8c 940e c8c3 	CALL SUBOPT_0x10C
                +
004a8e 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004a8f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004a90 01df      	MOVW R26,R30
004a91 940e e34c 	CALL __EEPROMRDW
                +
004a93 81a8     +LDD R26 , Y + 0
004a94 81b9     +LDD R27 , Y + 0 + 1
004a95 9612     +ADIW R26 , 2
004a96 93ed     +ST X + , R30
004a97 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B2         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004a98 940e c8c3 	CALL SUBOPT_0x10C
                +
004a9a 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004a9b 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004a9c 01df      	MOVW R26,R30
004a9d 940e e350 	CALL __EEPROMRDB
                +
004a9f 81a8     +LDD R26 , Y + 0
004aa0 81b9     +LDD R27 , Y + 0 + 1
004aa1 9614     +ADIW R26 , 4
004aa2 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B3         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004aa3 940e c8c3 	CALL SUBOPT_0x10C
                +
004aa5 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004aa6 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004aa7 01df      	MOVW R26,R30
004aa8 940e e350 	CALL __EEPROMRDB
                +
004aaa 81a8     +LDD R26 , Y + 0
004aab 81b9     +LDD R27 , Y + 0 + 1
004aac 9615     +ADIW R26 , 5
004aad 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B4         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
004aae 940e c8c3 	CALL SUBOPT_0x10C
                +
004ab0 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004ab1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004ab2 01df      	MOVW R26,R30
004ab3 940e e350 	CALL __EEPROMRDB
                +
004ab5 81a8     +LDD R26 , Y + 0
004ab6 81b9     +LDD R27 , Y + 0 + 1
004ab7 9616     +ADIW R26 , 6
004ab8 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B5         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
004ab9 940e c8c3 	CALL SUBOPT_0x10C
                +
004abb 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004abc 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004abd 01df      	MOVW R26,R30
004abe 940e e350 	CALL __EEPROMRDB
                +
004ac0 81a8     +LDD R26 , Y + 0
004ac1 81b9     +LDD R27 , Y + 0 + 1
004ac2 9617     +ADIW R26 , 7
004ac3 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B6 
                 ; 0007 00B7         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004ac4 940e c8c3 	CALL SUBOPT_0x10C
                +
004ac6 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004ac7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004ac8 01df      	MOVW R26,R30
004ac9 940e e350 	CALL __EEPROMRDB
                +
004acb 81a8     +LDD R26 , Y + 0
004acc 81b9     +LDD R27 , Y + 0 + 1
004acd 9618     +ADIW R26 , 8
004ace 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00B8         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004acf 940e c8c3 	CALL SUBOPT_0x10C
004ad1 940e c8c9 	CALL SUBOPT_0x10D
                +
004ad3 81a8     +LDD R26 , Y + 0
004ad4 81b9     +LDD R27 , Y + 0 + 1
004ad5 9619     +ADIW R26 , 9
004ad6 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00B9         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004ad8 940e c8c3 	CALL SUBOPT_0x10C
004ada 940e c8cf 	CALL SUBOPT_0x10E
                +
004adc 81a8     +LDD R26 , Y + 0
004add 81b9     +LDD R27 , Y + 0 + 1
004ade 961d     +ADIW R26 , 13
004adf 93ed     +ST X + , R30
004ae0 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BA         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004ae1 940e c8c3 	CALL SUBOPT_0x10C
004ae3 940e c8d5 	CALL SUBOPT_0x10F
                +
004ae5 81a8     +LDD R26 , Y + 0
004ae6 81b9     +LDD R27 , Y + 0 + 1
004ae7 961f     +ADIW R26 , 15
004ae8 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BB         readConfig->upperLimit          =   config_sens[ch].upperLimit;
004aea 940e c8c3 	CALL SUBOPT_0x10C
004aec 940e c8db 	CALL SUBOPT_0x110
                +
004aee 81a8     +LDD R26 , Y + 0
004aef 81b9     +LDD R27 , Y + 0 + 1
004af0 9653     +ADIW R26 , 19
004af1 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BC         readConfig->upperDelay          =   config_sens[ch].upperDelay;
004af3 940e c8c3 	CALL SUBOPT_0x10C
004af5 940e c8e1 	CALL SUBOPT_0x111
                +
004af7 81a8     +LDD R26 , Y + 0
004af8 81b9     +LDD R27 , Y + 0 + 1
004af9 9657     +ADIW R26 , 23
004afa 93ed     +ST X + , R30
004afb 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BD         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
004afc 940e c8c3 	CALL SUBOPT_0x10C
004afe 940e c8e7 	CALL SUBOPT_0x112
                +
004b00 81a8     +LDD R26 , Y + 0
004b01 81b9     +LDD R27 , Y + 0 + 1
004b02 9659     +ADIW R26 , 25
004b03 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00BE     }
                 _0xE002B:
                 ; 0007 00BF     return 0;
004b05 e0e0      	LDI  R30,LOW(0)
004b06 e0f0      	LDI  R31,HIGH(0)
004b07 c3fe      	RJMP _0x20E008E
                 ; 0007 00C0 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C3 {
                 _getAuxDinConfig:
                 ; 0007 00C4     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
004b08 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004b0a f022      	BRMI _0xE002D
004b0b 81aa      	LDD  R26,Y+2
004b0c 81bb      	LDD  R27,Y+2+1
004b0d 9750      	SBIW R26,16
004b0e f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C5         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
004b0f ebe1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
004b10 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
004b11 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
004b12 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
004b13 940e c89b 	CALL SUBOPT_0x104
004b15 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 00C6         return -1;
004b17 c3ec      	RJMP _0x20E008F
                 ; 0007 00C7     }
                 ; 0007 00C8 
                 ; 0007 00C9     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
004b18 81aa      	LDD  R26,Y+2
004b19 81bb      	LDD  R27,Y+2+1
004b1a 5ba7      	SUBI R26,LOW(-_config_din_flag)
004b1b 4fba      	SBCI R27,HIGH(-_config_din_flag)
004b1c 940e e350 	CALL __EEPROMRDB
004b1e 30e1      	CPI  R30,LOW(0x1)
004b1f f071      	BREQ _0xE002F
                 ; 0007 00CA         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
004b20 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
004b21 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
004b22 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
004b23 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
004b24 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 00CB 
                 ; 0007 00CC         readConfig->channelEnable       =   0x00;
004b26 81a8      	LD   R26,Y
004b27 81b9      	LDD  R27,Y+1
004b28 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 00CD         readConfig->alarmDelay          =   0;
004b2a 9611      	ADIW R26,1
004b2b 940e c8ed 	CALL SUBOPT_0x113
                 ; 0007 00CE 
                 ; 0007 00CF         /* // -- for test -- //
                 ; 0007 00D0         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D1         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D2 
                 ; 0007 00D3         readConfig->alarmDelay          =   0;
                 ; 0007 00D4         */
                 ; 0007 00D5     }
                 ; 0007 00D6     else{
004b2d c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D7         readConfig->channelEnable       =   config_din[ch].channelEnable;
004b2e 940e c8f2 	CALL SUBOPT_0x114
004b30 5ce6      	SUBI R30,LOW(-_config_din)
004b31 4ffe      	SBCI R31,HIGH(-_config_din)
004b32 940e c8f8 	CALL SUBOPT_0x115
                 ; 0007 00D8         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
004b34 940e c8f2 	CALL SUBOPT_0x114
                +
004b36 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004b37 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004b38 01df      	MOVW R26,R30
004b39 940e c8ff 	CALL SUBOPT_0x116
                 ; 0007 00D9     }
                 _0xE0030:
                 ; 0007 00DA     return 0;
004b3b e0e0      	LDI  R30,LOW(0)
004b3c e0f0      	LDI  R31,HIGH(0)
004b3d c3c8      	RJMP _0x20E008E
                 ; 0007 00DB }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00DE {
                 _getAuxDoutConfig:
                 ; 0007 00DF     int i;
                 ; 0007 00E0 
                 ; 0007 00E1     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
004b3e 940e c566 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004b40 81ad      	LDD  R26,Y+5
004b41 23aa      	TST  R26
004b42 f022      	BRMI _0xE0032
004b43 81ac      	LDD  R26,Y+4
004b44 81bd      	LDD  R27,Y+4+1
004b45 9715      	SBIW R26,5
004b46 f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E2         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
004b47 e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
004b48 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
004b49 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
004b4a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
004b4b 940e c907 	CALL SUBOPT_0x117
                 ; 0007 00E3         return -1;
004b4d efef      	LDI  R30,LOW(65535)
004b4e efff      	LDI  R31,HIGH(65535)
004b4f c144      	RJMP _0x20E0091
                 ; 0007 00E4     }
                 ; 0007 00E5 
                 ; 0007 00E6     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
004b50 81ac      	LDD  R26,Y+4
004b51 81bd      	LDD  R27,Y+4+1
004b52 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004b53 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004b54 940e e350 	CALL __EEPROMRDB
004b56 30e1      	CPI  R30,LOW(0x1)
004b57 f0d1      	BREQ _0xE0034
                 ; 0007 00E7         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
004b58 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
004b59 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
004b5a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
004b5b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
004b5c 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 00E8         readConfig->channelEnable       =   0x00;
004b5e 81aa      	LDD  R26,Y+2
004b5f 81bb      	LDD  R27,Y+2+1
004b60 e0e0      	LDI  R30,LOW(0)
004b61 940e c86d 	CALL SUBOPT_0xFD
                 ; 0007 00E9         readConfig->stateOnEvent        =   0x01;
004b63 e0e1      	LDI  R30,LOW(1)
004b64 940e c872 	CALL SUBOPT_0xFE
                 ; 0007 00EA         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EB 
                 ; 0007 00EC         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004b66 3203     +CPI R16 , LOW ( 35 )
004b67 e0e0     +LDI R30 , HIGH ( 35 )
004b68 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b69 f43c      	BRGE _0xE0037
                 ; 0007 00ED             readConfig->eventSource[i]  =   0x00;
004b6a 940e c87b 	CALL SUBOPT_0xFF
004b6c e0a0      	LDI  R26,LOW(0)
004b6d 83a0      	STD  Z+0,R26
                 ; 0007 00EE         }
                +
004b6e 5f0f     +SUBI R16 , LOW ( - 1 )
004b6f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b70 cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00EF     }
                 ; 0007 00F0     else{
004b71 c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F1         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004b72 940e c90c 	CALL SUBOPT_0x118
004b74 59e6      	SUBI R30,LOW(-_config_dout)
004b75 4ffe      	SBCI R31,HIGH(-_config_dout)
004b76 01df      	MOVW R26,R30
004b77 940e c881 	CALL SUBOPT_0x100
                 ; 0007 00F2         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
004b79 940e c90c 	CALL SUBOPT_0x118
                +
004b7b 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004b7c 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004b7d 01df      	MOVW R26,R30
004b7e 940e c887 	CALL SUBOPT_0x101
                 ; 0007 00F3         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004b80 940e c90c 	CALL SUBOPT_0x118
                +
004b82 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004b83 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004b84 01df      	MOVW R26,R30
004b85 940e c88e 	CALL SUBOPT_0x102
                 ; 0007 00F4 
                 ; 0007 00F5         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004b87 e9e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004b88 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
004b89 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
004b8a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
004b8b 940e c907 	CALL SUBOPT_0x117
                 ; 0007 00F6         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
004b8d ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
004b8e e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004b8f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004b90 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004b91 940e c912 	CALL SUBOPT_0x119
004b93 940e c91a 	CALL SUBOPT_0x11A
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004b95 edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004b96 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004b97 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004b98 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
004b99 940e c912 	CALL SUBOPT_0x119
004b9b 940e c920 	CALL SUBOPT_0x11B
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
004b9d e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
004b9e e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004b9f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004ba0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004ba1 940e c912 	CALL SUBOPT_0x119
004ba3 940e c926 	CALL SUBOPT_0x11C
004ba5 940e c309 	CALL SUBOPT_0x29
                 ; 0007 00F9         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004ba7 e000     +LDI R16 , LOW ( 0 )
004ba8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
004ba9 940e c90c 	CALL SUBOPT_0x118
004bab 940e c926 	CALL SUBOPT_0x11C
004bad 940e c92c 	CALL SUBOPT_0x11D
004baf f4a4      	BRGE _0xE003B
                 ; 0007 00FA             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004bb0 940e c87b 	CALL SUBOPT_0xFF
                +
004bb2 2f7e     +MOV R23 , R30
004bb3 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004bb4 940e c90c 	CALL SUBOPT_0x118
004bb6 940e c931 	CALL SUBOPT_0x11E
004bb8 940e e350 	CALL __EEPROMRDB
                +
004bba 2fa7     +MOV R26 , R23
004bbb 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004bbc 93ec      	ST   X,R30
                 ; 0007 00FB             printDebug("[0x%02X]",readConfig->eventSource[i]);
004bbd 940e c8a0 	CALL SUBOPT_0x105
004bbf 940e c8a5 	CALL SUBOPT_0x106
                 ; 0007 00FC         }
                +
004bc1 5f0f     +SUBI R16 , LOW ( - 1 )
004bc2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bc3 cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FD         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004bc4 940e c90c 	CALL SUBOPT_0x118
004bc6 940e c926 	CALL SUBOPT_0x11C
004bc8 2f0e      	MOV  R16,R30
004bc9 2711      	CLR  R17
                 _0xE003D:
                +
004bca 3203     +CPI R16 , LOW ( 35 )
004bcb e0e0     +LDI R30 , HIGH ( 35 )
004bcc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004bcd f43c      	BRGE _0xE003E
                 ; 0007 00FE             readConfig->eventSource[i]  =   0x00;
004bce 940e c87b 	CALL SUBOPT_0xFF
004bd0 e0a0      	LDI  R26,LOW(0)
004bd1 83a0      	STD  Z+0,R26
                 ; 0007 00FF             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0100         }
                +
004bd2 5f0f     +SUBI R16 , LOW ( - 1 )
004bd3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bd4 cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0101         printDebug("\r\n");
004bd5 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 0102 
                 ; 0007 0103     }
                 _0xE0038:
                 ; 0007 0104     return 0;
004bd7 c0ba      	RJMP _0x20E0092
                 ; 0007 0105 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 0108 {
                 _getAuxAinConfig:
                 ; 0007 0109     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004bd8 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004bda f022      	BRMI _0xE0040
004bdb 81aa      	LDD  R26,Y+2
004bdc 81bb      	LDD  R27,Y+2+1
004bdd 9750      	SBIW R26,16
004bde f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010A         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004bdf e3e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004be0 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004be1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004be2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004be3 940e c89b 	CALL SUBOPT_0x104
004be5 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 010B         return -1;
004be7 c31c      	RJMP _0x20E008F
                 ; 0007 010C     }
                 ; 0007 010D 
                 ; 0007 010E     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004be8 81aa      	LDD  R26,Y+2
004be9 81bb      	LDD  R27,Y+2+1
004bea 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004beb 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004bec 940e e350 	CALL __EEPROMRDB
004bee 30e1      	CPI  R30,LOW(0x1)
004bef f071      	BREQ _0xE0042
                 ; 0007 010F         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004bf0 e7e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004bf1 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
004bf2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
004bf3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
004bf4 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0110         readConfig->channelEnable       =   0x00;
004bf6 81a8      	LD   R26,Y
004bf7 81b9      	LDD  R27,Y+1
004bf8 940e c8b9 	CALL SUBOPT_0x10A
                 ; 0007 0111         readConfig->alarmLevel          =   0;
004bfa 9611      	ADIW R26,1
004bfb 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0007 0112     }
                 ; 0007 0113     else{
004bfd c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0114         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004bfe 940e c937 	CALL SUBOPT_0x11F
004c00 5de8      	SUBI R30,LOW(-_config_ain)
004c01 4ffd      	SBCI R31,HIGH(-_config_ain)
004c02 940e c8f8 	CALL SUBOPT_0x115
                 ; 0007 0115         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
004c04 940e c937 	CALL SUBOPT_0x11F
                +
004c06 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004c07 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004c08 01df      	MOVW R26,R30
004c09 940e e348 	CALL __EEPROMRDD
                +
004c0b 81a8     +LDD R26 , Y + 0
004c0c 81b9     +LDD R27 , Y + 0 + 1
004c0d 9611     +ADIW R26 , 1
004c0e 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0116     }
                 _0xE0043:
                 ; 0007 0117     return 0;
004c10 e0e0      	LDI  R30,LOW(0)
004c11 e0f0      	LDI  R31,HIGH(0)
004c12 c2f3      	RJMP _0x20E008E
                 ; 0007 0118 }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011B {
                 _getAuxAoutConfig:
                 ; 0007 011C     int i;
                 ; 0007 011D 
                 ; 0007 011E     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
004c13 940e c566 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004c15 81ad      	LDD  R26,Y+5
004c16 23aa      	TST  R26
004c17 f022      	BRMI _0xE0045
004c18 81ac      	LDD  R26,Y+4
004c19 81bd      	LDD  R27,Y+4+1
004c1a 9750      	SBIW R26,16
004c1b f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 011F         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004c1c eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004c1d e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004c1e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004c1f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004c20 940e c907 	CALL SUBOPT_0x117
                 ; 0007 0120         return -1;
004c22 efef      	LDI  R30,LOW(65535)
004c23 efff      	LDI  R31,HIGH(65535)
004c24 c06f      	RJMP _0x20E0091
                 ; 0007 0121     }
                 ; 0007 0122 
                 ; 0007 0123     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
004c25 81ac      	LDD  R26,Y+4
004c26 81bd      	LDD  R27,Y+4+1
004c27 59a2      	SUBI R26,LOW(-_config_aout_flag)
004c28 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004c29 940e e350 	CALL __EEPROMRDB
004c2b 30e1      	CPI  R30,LOW(0x1)
004c2c f101      	BREQ _0xE0047
                 ; 0007 0124         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004c2d edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004c2e e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004c2f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004c30 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004c31 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0125         readConfig->channelEnable       =   0x00;
004c33 81aa      	LDD  R26,Y+2
004c34 81bb      	LDD  R27,Y+2+1
004c35 e0e0      	LDI  R30,LOW(0)
004c36 940e c86d 	CALL SUBOPT_0xFD
                 ; 0007 0126         readConfig->levelOnEvent        =   0.0;
004c38 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0007 0127         readConfig->eventSourceNumber   =   0;
004c3a 81aa      	LDD  R26,Y+2
004c3b 81bb      	LDD  R27,Y+2+1
004c3c 9615      	ADIW R26,5
004c3d e0e0      	LDI  R30,LOW(0)
004c3e 93ec      	ST   X,R30
                 ; 0007 0128 
                 ; 0007 0129         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004c3f e000     +LDI R16 , LOW ( 0 )
004c40 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004c41 3203     +CPI R16 , LOW ( 35 )
004c42 e0e0     +LDI R30 , HIGH ( 35 )
004c43 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c44 f43c      	BRGE _0xE004A
                 ; 0007 012A             readConfig->eventSource[i]  =   0x00;
004c45 940e c93d 	CALL SUBOPT_0x120
004c47 e0a0      	LDI  R26,LOW(0)
004c48 83a0      	STD  Z+0,R26
                 ; 0007 012B         }
                +
004c49 5f0f     +SUBI R16 , LOW ( - 1 )
004c4a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c4b cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012C     }
                 ; 0007 012D     else{
004c4c c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 012E         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004c4d 940e c943 	CALL SUBOPT_0x121
004c4f 58e8      	SUBI R30,LOW(-_config_aout)
004c50 4ffd      	SBCI R31,HIGH(-_config_aout)
004c51 01df      	MOVW R26,R30
004c52 940e c881 	CALL SUBOPT_0x100
                 ; 0007 012F         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004c54 940e c943 	CALL SUBOPT_0x121
                +
004c56 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004c57 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004c58 01df      	MOVW R26,R30
004c59 940e e348 	CALL __EEPROMRDD
                +
004c5b 81aa     +LDD R26 , Y + 2
004c5c 81bb     +LDD R27 , Y + 2 + 1
004c5d 9611     +ADIW R26 , 1
004c5e 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0130         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004c60 940e c943 	CALL SUBOPT_0x121
004c62 940e c949 	CALL SUBOPT_0x122
                +
004c64 81aa     +LDD R26 , Y + 2
004c65 81bb     +LDD R27 , Y + 2 + 1
004c66 9615     +ADIW R26 , 5
004c67 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0131 
                 ; 0007 0132         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004c68 e000     +LDI R16 , LOW ( 0 )
004c69 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
004c6a 940e c943 	CALL SUBOPT_0x121
004c6c 940e c949 	CALL SUBOPT_0x122
004c6e 940e c92c 	CALL SUBOPT_0x11D
004c70 f484      	BRGE _0xE004E
                 ; 0007 0133             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004c71 940e c93d 	CALL SUBOPT_0x120
                +
004c73 2f7e     +MOV R23 , R30
004c74 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004c75 940e c943 	CALL SUBOPT_0x121
004c77 940e c94f 	CALL SUBOPT_0x123
004c79 940e e350 	CALL __EEPROMRDB
                +
004c7b 2fa7     +MOV R26 , R23
004c7c 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004c7d 93ec      	ST   X,R30
                 ; 0007 0134         }
                +
004c7e 5f0f     +SUBI R16 , LOW ( - 1 )
004c7f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c80 cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0135         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004c81 940e c943 	CALL SUBOPT_0x121
004c83 940e c949 	CALL SUBOPT_0x122
004c85 2f0e      	MOV  R16,R30
004c86 2711      	CLR  R17
                 _0xE0050:
                +
004c87 3203     +CPI R16 , LOW ( 35 )
004c88 e0e0     +LDI R30 , HIGH ( 35 )
004c89 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c8a f43c      	BRGE _0xE0051
                 ; 0007 0136             readConfig->eventSource[i]  =   0x00;
004c8b 940e c93d 	CALL SUBOPT_0x120
004c8d e0a0      	LDI  R26,LOW(0)
004c8e 83a0      	STD  Z+0,R26
                 ; 0007 0137         }
                +
004c8f 5f0f     +SUBI R16 , LOW ( - 1 )
004c90 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c91 cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 0138     }
                 _0xE004B:
                 ; 0007 0139     return 0;
                 _0x20E0092:
004c92 e0e0      	LDI  R30,LOW(0)
004c93 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0091:
004c94 8119      	LDD  R17,Y+1
004c95 8108      	LDD  R16,Y+0
004c96 9626      	ADIW R28,6
004c97 9508      	RET
                 ; 0007 013A }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013D {
                 _getBuzzerConfig:
                 ; 0007 013E     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 013F     int i;
                 ; 0007 0140 
                 ; 0007 0141     if( config_buzz_flag != 0x01){
004c98 93ba      	ST   -Y,R27
004c99 93aa      	ST   -Y,R26
004c9a 9724      	SBIW R28,4
004c9b ece7      	LDI  R30,LOW(199)
004c9c 83e8      	ST   Y,R30
004c9d ecef      	LDI  R30,LOW(207)
004c9e 83e9      	STD  Y+1,R30
004c9f ede7      	LDI  R30,LOW(215)
004ca0 83ea      	STD  Y+2,R30
004ca1 edef      	LDI  R30,LOW(223)
004ca2 83eb      	STD  Y+3,R30
004ca3 931a      	ST   -Y,R17
004ca4 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004ca5 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004ca6 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004ca7 940e e350 	CALL __EEPROMRDB
004ca9 30e1      	CPI  R30,LOW(0x1)
004caa f141      	BREQ _0xE0052
                 ; 0007 0142         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
004cab e1e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
004cac e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
004cad e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
004cae e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004caf 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0143         readConfig->enable              =   0x01;
004cb1 81ae      	LDD  R26,Y+6
004cb2 81bf      	LDD  R27,Y+6+1
004cb3 e0e1      	LDI  R30,LOW(1)
004cb4 93ec      	ST   X,R30
                 ; 0007 0144         readConfig->eventSourceNumber   =   sizeof(errSrc);
004cb5 9611      	ADIW R26,1
004cb6 e0e4      	LDI  R30,LOW(4)
004cb7 93ec      	ST   X,R30
                 ; 0007 0145 
                 ; 0007 0146         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0147         for(i=0;i<sizeof(errSrc);i++){
                +
004cb8 e000     +LDI R16 , LOW ( 0 )
004cb9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004cba 3004     +CPI R16 , LOW ( 4 )
004cbb e0e0     +LDI R30 , HIGH ( 4 )
004cbc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004cbd f4a4      	BRGE _0xE0055
                 ; 0007 0148             if(i<sizeof(errSrc)){
                +
004cbe 3004     +CPI R16 , LOW ( 4 )
004cbf e0e0     +LDI R30 , HIGH ( 4 )
004cc0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004cc1 f44c      	BRGE _0xE0056
                 ; 0007 0149                 readConfig->eventSource[i]  =   errSrc[i];
004cc2 940e c955 	CALL SUBOPT_0x124
004cc4 010f      	MOVW R0,R30
004cc5 940e c95b 	CALL SUBOPT_0x125
004cc7 91ec      	LD   R30,X
004cc8 01d0      	MOVW R26,R0
004cc9 93ec      	ST   X,R30
                 ; 0007 014A                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014B             }
                 ; 0007 014C             else{
004cca c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014D                 readConfig->eventSource[i]  =   0x00;
004ccb 940e c955 	CALL SUBOPT_0x124
004ccd e0a0      	LDI  R26,LOW(0)
004cce 83a0      	STD  Z+0,R26
                 ; 0007 014E             }
                 _0xE0057:
                 ; 0007 014F         }
                +
004ccf 5f0f     +SUBI R16 , LOW ( - 1 )
004cd0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cd1 cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0150         //printDebug("\r\n");
                 ; 0007 0151     }
                 ; 0007 0152     else{
004cd2 c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0153         readConfig->enable              =   config_buzz.enable;
004cd3 e0a8      	LDI  R26,LOW(_config_buzz)
004cd4 e0b5      	LDI  R27,HIGH(_config_buzz)
004cd5 940e e350 	CALL __EEPROMRDB
004cd7 81ae      	LDD  R26,Y+6
004cd8 81bf      	LDD  R27,Y+6+1
004cd9 93ec      	ST   X,R30
                 ; 0007 0154         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004cda 940e c960 	CALL SUBOPT_0x126
                +
004cdc 81ae     +LDD R26 , Y + 6
004cdd 81bf     +LDD R27 , Y + 6 + 1
004cde 9611     +ADIW R26 , 1
004cdf 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0155 
                 ; 0007 0156         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004ce0 e000     +LDI R16 , LOW ( 0 )
004ce1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004ce2 940e c960 	CALL SUBOPT_0x126
004ce4 940e c92c 	CALL SUBOPT_0x11D
004ce6 f454      	BRGE _0xE005B
                 ; 0007 0157             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004ce7 940e c955 	CALL SUBOPT_0x124
004ce9 010f      	MOVW R0,R30
                +
004cea e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004ceb e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004cec 940e c850 	CALL SUBOPT_0xF9
                 ; 0007 0158         }
                +
004cee 5f0f     +SUBI R16 , LOW ( - 1 )
004cef 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cf0 cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 0159         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004cf1 940e c960 	CALL SUBOPT_0x126
004cf3 2f0e      	MOV  R16,R30
004cf4 2711      	CLR  R17
                 _0xE005D:
                +
004cf5 3203     +CPI R16 , LOW ( 35 )
004cf6 e0e0     +LDI R30 , HIGH ( 35 )
004cf7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004cf8 f43c      	BRGE _0xE005E
                 ; 0007 015A             readConfig->eventSource[i]  =   0x00;
004cf9 940e c955 	CALL SUBOPT_0x124
004cfb e0a0      	LDI  R26,LOW(0)
004cfc 83a0      	STD  Z+0,R26
                 ; 0007 015B         }
                +
004cfd 5f0f     +SUBI R16 , LOW ( - 1 )
004cfe 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cff cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015C     }
                 _0xE0058:
                 ; 0007 015D 
                 ; 0007 015E     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004d00 e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004d01 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004d02 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004d03 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004d04 940e c965 	CALL SUBOPT_0x127
004d06 91ec      	LD   R30,X
004d07 940e c309 	CALL SUBOPT_0x29
                 ; 0007 015F     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004d09 e7e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004d0a e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004d0b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004d0c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004d0d 940e c96a 	CALL SUBOPT_0x128
004d0f 81e1      	LDD  R30,Z+1
004d10 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0160     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004d12 eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004d13 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004d14 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004d15 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004d16 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0161     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004d18 e000     +LDI R16 , LOW ( 0 )
004d19 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004d1a 3203     +CPI R16 , LOW ( 35 )
004d1b e0e0     +LDI R30 , HIGH ( 35 )
004d1c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004d1d f45c      	BRGE _0xE0061
                 ; 0007 0162         printDebug("[0x%02X]",readConfig->eventSource[i]);
004d1e 940e c96f 	CALL SUBOPT_0x129
004d20 940e c96a 	CALL SUBOPT_0x128
004d22 940e c974 	CALL SUBOPT_0x12A
004d24 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0163     }
                +
004d26 5f0f     +SUBI R16 , LOW ( - 1 )
004d27 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d28 cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0164     printDebug("\r\n");
004d29 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 0165 
                 ; 0007 0166     return 0;
004d2b 940e c788 	CALL SUBOPT_0xD6
004d2d 9628      	ADIW R28,8
004d2e 9508      	RET
                 ; 0007 0167 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016A {
                 _getEnvAlarmConfig:
                 ; 0007 016B     if( config_alm_flag != 0x01 ){
004d2f 93ba      	ST   -Y,R27
004d30 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004d31 e7af      	LDI  R26,LOW(_config_alm_flag)
004d32 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004d33 940e e350 	CALL __EEPROMRDB
004d35 30e1      	CPI  R30,LOW(0x1)
004d36 f121      	BREQ _0xE0062
                 ; 0007 016C         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004d37 ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004d38 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004d39 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004d3a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004d3b 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 016D         readConfig->gsmRSSILevel         =   0;
004d3d 81a8      	LD   R26,Y
004d3e 81b9      	LDD  R27,Y+1
004d3f 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0007 016E         readConfig->gsmCreditBalance     =   0;
004d41 81a8      	LD   R26,Y
004d42 81b9      	LDD  R27,Y+1
004d43 9614      	ADIW R26,4
004d44 e0e0      	LDI  R30,LOW(0)
004d45 e0f0      	LDI  R31,HIGH(0)
004d46 940e c8b4 	CALL SUBOPT_0x109
                 ; 0007 016F         readConfig->batteryLevel         =   0;
004d48 9616      	ADIW R26,6
004d49 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0007 0170         readConfig->commSignalLevel      =   0;
004d4b 81a8      	LD   R26,Y
004d4c 81b9      	LDD  R27,Y+1
004d4d 961a      	ADIW R26,10
004d4e 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0007 0171         readConfig->commLostDelay        =   0;
004d50 81a8      	LD   R26,Y
004d51 81b9      	LDD  R27,Y+1
004d52 961e      	ADIW R26,14
004d53 e0e0      	LDI  R30,LOW(0)
004d54 e0f0      	LDI  R31,HIGH(0)
004d55 940e c8b4 	CALL SUBOPT_0x109
                 ; 0007 0172         readConfig->memoryMin            =   0;
004d57 9650      	ADIW R26,16
004d58 940e c8ed 	CALL SUBOPT_0x113
                 ; 0007 0173     }
                 ; 0007 0174     else{
004d5a c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0175         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004d5b e2ad      	LDI  R26,LOW(_config_alm)
004d5c e0b5      	LDI  R27,HIGH(_config_alm)
004d5d 940e e348 	CALL __EEPROMRDD
004d5f 81a8      	LD   R26,Y
004d60 81b9      	LDD  R27,Y+1
004d61 940e e2ff 	CALL __PUTDP1
                 ; 0007 0176         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004d63 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004d64 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004d65 940e e34c 	CALL __EEPROMRDW
                +
004d67 81a8     +LDD R26 , Y + 0
004d68 81b9     +LDD R27 , Y + 0 + 1
004d69 9614     +ADIW R26 , 4
004d6a 93ed     +ST X + , R30
004d6b 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0177         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004d6c e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004d6d e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004d6e 940e e348 	CALL __EEPROMRDD
                +
004d70 81a8     +LDD R26 , Y + 0
004d71 81b9     +LDD R27 , Y + 0 + 1
004d72 9616     +ADIW R26 , 6
004d73 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 0178         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004d75 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004d76 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004d77 940e e348 	CALL __EEPROMRDD
                +
004d79 81a8     +LDD R26 , Y + 0
004d7a 81b9     +LDD R27 , Y + 0 + 1
004d7b 961a     +ADIW R26 , 10
004d7c 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 0179         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004d7e e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004d7f e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004d80 940e e34c 	CALL __EEPROMRDW
                +
004d82 81a8     +LDD R26 , Y + 0
004d83 81b9     +LDD R27 , Y + 0 + 1
004d84 961e     +ADIW R26 , 14
004d85 93ed     +ST X + , R30
004d86 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017A         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004d87 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004d88 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004d89 940e e34c 	CALL __EEPROMRDW
                +
004d8b 81a8     +LDD R26 , Y + 0
004d8c 81b9     +LDD R27 , Y + 0 + 1
004d8d 9650     +ADIW R26 , 16
004d8e 93ed     +ST X + , R30
004d8f 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017B     }
                 _0xE0063:
                 ; 0007 017C 
                 ; 0007 017D     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004d90 efed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004d91 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004d92 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004d93 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004d94 940e c979 	CALL SUBOPT_0x12B
004d96 940e c97e 	CALL SUBOPT_0x12C
                 ; 0007 017E     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004d98 e2ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004d99 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004d9a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004d9b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004d9c 940e c979 	CALL SUBOPT_0x12B
004d9e 9614      	ADIW R26,4
004d9f 940e c983 	CALL SUBOPT_0x12D
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004da1 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004da2 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004da3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004da4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004da5 940e c986 	CALL SUBOPT_0x12E
004da7 940e c98b 	CALL SUBOPT_0x12F
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004da9 e8ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004daa e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004dab e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004dac e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004dad 940e c986 	CALL SUBOPT_0x12E
004daf 940e c992 	CALL SUBOPT_0x130
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004db1 ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004db2 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004db3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004db4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004db5 940e c979 	CALL SUBOPT_0x12B
004db7 961e      	ADIW R26,14
004db8 940e c983 	CALL SUBOPT_0x12D
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004dba eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004dbb e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004dbc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004dbd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004dbe 940e c979 	CALL SUBOPT_0x12B
004dc0 9650      	ADIW R26,16
004dc1 c033      	RJMP _0x20E0090
                 ; 0007 0183 
                 ; 0007 0184     return 0;
                 ; 0007 0185 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 0188 {
                 _getStatusReportConfig:
                 ; 0007 0189     if( config_stat_flag != 0x01 ){
004dc2 93ba      	ST   -Y,R27
004dc3 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004dc4 e8a0      	LDI  R26,LOW(_config_stat_flag)
004dc5 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004dc6 940e e350 	CALL __EEPROMRDB
004dc8 30e1      	CPI  R30,LOW(0x1)
004dc9 f081      	BREQ _0xE0064
                 ; 0007 018A         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004dca e1ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004dcb e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004dcc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004dcd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004dce 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 018B         readConfig->accm                =   0x30;
004dd0 81a8      	LD   R26,Y
004dd1 81b9      	LDD  R27,Y+1
004dd2 e3e0      	LDI  R30,LOW(48)
004dd3 93ec      	ST   X,R30
                 ; 0007 018C         readConfig->intv                =   60;
004dd4 9611      	ADIW R26,1
004dd5 e3ec      	LDI  R30,LOW(60)
004dd6 e0f0      	LDI  R31,HIGH(60)
004dd7 93ed      	ST   X+,R30
004dd8 93fc      	ST   X,R31
                 ; 0007 018D     }
                 ; 0007 018E     else{
004dd9 c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 018F         readConfig->accm                =   config_stat.accm;
004dda e3af      	LDI  R26,LOW(_config_stat)
004ddb e0b5      	LDI  R27,HIGH(_config_stat)
004ddc 940e e350 	CALL __EEPROMRDB
004dde 81a8      	LD   R26,Y
004ddf 81b9      	LDD  R27,Y+1
004de0 93ec      	ST   X,R30
                 ; 0007 0190         readConfig->intv                =   config_stat.intv;
                +
004de1 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004de2 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004de3 940e c8ff 	CALL SUBOPT_0x116
                 ; 0007 0191     }
                 _0xE0065:
                 ; 0007 0192 
                 ; 0007 0193     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004de5 e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004de6 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004de7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004de8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004de9 940e c979 	CALL SUBOPT_0x12B
004deb 91ec      	LD   R30,X
004dec 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0194     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004dee e8e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004def e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004df0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004df1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004df2 940e c979 	CALL SUBOPT_0x12B
004df4 9611      	ADIW R26,1
                 _0x20E0090:
004df5 940e e2f0 	CALL __GETW1P
004df7 940e c357 	CALL SUBOPT_0x34
004df9 940e c26b 	CALL SUBOPT_0x12
                 ; 0007 0195 
                 ; 0007 0196     return 0;
004dfb e0e0      	LDI  R30,LOW(0)
004dfc e0f0      	LDI  R31,HIGH(0)
004dfd 9622      	ADIW R28,2
004dfe 9508      	RET
                 ; 0007 0197 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 019F {
                 _setPropertiesConfig:
                 ; 0007 01A0     int i;
                 ; 0007 01A1 
                 ; 0007 01A2     for(i=0;i<DEVTYPE_LENGTH;i++)
004dff 940e c566 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004e01 e000     +LDI R16 , LOW ( 0 )
004e02 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004e03 3104     +CPI R16 , LOW ( 20 )
004e04 e0e0     +LDI R30 , HIGH ( 20 )
004e05 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e06 f474      	BRGE _0xE0068
                 ; 0007 01A3     {
                 ; 0007 01A4         config_prop.deviceType[i]       = newConfig->deviceType[i];
004e07 01f8      	MOVW R30,R16
004e08 50e0      	SUBI R30,LOW(-_config_prop)
004e09 40f0      	SBCI R31,HIGH(-_config_prop)
004e0a 010f      	MOVW R0,R30
004e0b 01f8      	MOVW R30,R16
004e0c 81aa      	LDD  R26,Y+2
004e0d 81bb      	LDD  R27,Y+2+1
004e0e 940e c999 	CALL SUBOPT_0x131
004e10 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01A5     }
                +
004e12 5f0f     +SUBI R16 , LOW ( - 1 )
004e13 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e14 cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A6 
                 ; 0007 01A7     /*
                 ; 0007 01A8     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01A9     {
                 ; 0007 01AA         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AB     }
                 ; 0007 01AC     */
                 ; 0007 01AD 
                 ; 0007 01AE     for(i=0;i<NAME_LENGTH;i++)
                +
004e15 e000     +LDI R16 , LOW ( 0 )
004e16 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004e17 3208     +CPI R16 , LOW ( 40 )
004e18 e0e0     +LDI R30 , HIGH ( 40 )
004e19 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004e1a f484      	BRGE _0xE006B
                 ; 0007 01AF     {
                 ; 0007 01B0         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004e1b e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004e1c e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004e1d 0fe0      	ADD  R30,R16
004e1e 1ff1      	ADC  R31,R17
004e1f 01df      	MOVW R26,R30
004e20 81ea      	LDD  R30,Y+2
004e21 81fb      	LDD  R31,Y+2+1
004e22 96b8      	ADIW R30,40
004e23 0fe0      	ADD  R30,R16
004e24 1ff1      	ADC  R31,R17
004e25 81e0      	LD   R30,Z
004e26 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01B1     }
                +
004e28 5f0f     +SUBI R16 , LOW ( - 1 )
004e29 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e2a cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B2 
                 ; 0007 01B3     for(i=0;i<ID_LENGTH;i++)
                +
004e2b e000     +LDI R16 , LOW ( 0 )
004e2c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004e2d 3104     +CPI R16 , LOW ( 20 )
004e2e e0e0     +LDI R30 , HIGH ( 20 )
004e2f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e30 f46c      	BRGE _0xE006E
                 ; 0007 01B4     {
                 ; 0007 01B5         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004e31 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004e32 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004e33 0fe0      	ADD  R30,R16
004e34 1ff1      	ADC  R31,R17
004e35 01df      	MOVW R26,R30
004e36 940e c858 	CALL SUBOPT_0xFA
004e38 81e0      	LD   R30,Z
004e39 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01B6     }
                +
004e3b 5f0f     +SUBI R16 , LOW ( - 1 )
004e3c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e3d cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B7 
                 ; 0007 01B8     for(i=0;i<NAME_LENGTH;i++)
                +
004e3e e000     +LDI R16 , LOW ( 0 )
004e3f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004e40 3208     +CPI R16 , LOW ( 40 )
004e41 e0e0     +LDI R30 , HIGH ( 40 )
004e42 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004e43 f46c      	BRGE _0xE0071
                 ; 0007 01B9     {
                 ; 0007 01BA         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004e44 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004e45 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004e46 0fe0      	ADD  R30,R16
004e47 1ff1      	ADC  R31,R17
004e48 01df      	MOVW R26,R30
004e49 940e c85f 	CALL SUBOPT_0xFB
004e4b 81e0      	LD   R30,Z
004e4c 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01BB     }
                +
004e4e 5f0f     +SUBI R16 , LOW ( - 1 )
004e4f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e50 cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BC 
                 ; 0007 01BD     for(i=0;i<ID_LENGTH;i++)
                +
004e51 e000     +LDI R16 , LOW ( 0 )
004e52 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004e53 3104     +CPI R16 , LOW ( 20 )
004e54 e0e0     +LDI R30 , HIGH ( 20 )
004e55 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e56 f46c      	BRGE _0xE0074
                 ; 0007 01BE     {
                 ; 0007 01BF         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004e57 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004e58 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004e59 0fe0      	ADD  R30,R16
004e5a 1ff1      	ADC  R31,R17
004e5b 01df      	MOVW R26,R30
004e5c 940e c866 	CALL SUBOPT_0xFC
004e5e 81e0      	LD   R30,Z
004e5f 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01C0     }
                +
004e61 5f0f     +SUBI R16 , LOW ( - 1 )
004e62 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e63 cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C1 
                 ; 0007 01C2     config_prop.timeZone                = newConfig->timeZone;
                +
004e64 eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004e65 e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004e66 010f      	MOVW R0,R30
004e67 81aa      	LDD  R26,Y+2
004e68 81bb      	LDD  R27,Y+2+1
004e69 56a0      	SUBI R26,LOW(-160)
004e6a 4fbf      	SBCI R27,HIGH(-160)
004e6b 940e c99e 	CALL SUBOPT_0x132
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop_flag                    = 0x01;
004e6d e4a2      	LDI  R26,LOW(_config_prop_flag)
004e6e e0b5      	LDI  R27,HIGH(_config_prop_flag)
004e6f 940e c9a3 	CALL SUBOPT_0x133
                 ; 0007 01C5 
                 ; 0007 01C6     is_properties_config_update          = 1;
004e71 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C7 
                 ; 0007 01C8     return 0;
004e73 940e c788 	CALL SUBOPT_0xD6
004e75 c090      	RJMP _0x20E008E
                 ; 0007 01C9 }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CC {
                 _setOperatingConfig:
                 ; 0007 01CD     int i;
                 ; 0007 01CE 
                 ; 0007 01CF     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004e76 940e c566 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004e78 81aa      	LDD  R26,Y+2
004e79 81bb      	LDD  R27,Y+2+1
004e7a 91ac      	LD   R26,X
004e7b 31a0      	CPI  R26,LOW(0x10)
004e7c f029      	BREQ _0xE0076
004e7d 81aa      	LDD  R26,Y+2
004e7e 81bb      	LDD  R27,Y+2+1
004e7f 91ac      	LD   R26,X
004e80 32a0      	CPI  R26,LOW(0x20)
004e81 f409      	BRNE _0xE0077
                 _0xE0076:
004e82 c00b      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D0         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004e83 eaef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004e84 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004e85 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004e86 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004e87 940e c895 	CALL SUBOPT_0x103
                 ; 0007 01D1         return -1;
004e89 efef      	LDI  R30,LOW(65535)
004e8a efff      	LDI  R31,HIGH(65535)
004e8b 8119      	LDD  R17,Y+1
004e8c 8108      	LDD  R16,Y+0
004e8d c078      	RJMP _0x20E008E
                 ; 0007 01D2     }
                 ; 0007 01D3 
                 ; 0007 01D4     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004e8e 81aa      	LDD  R26,Y+2
004e8f 81bb      	LDD  R27,Y+2+1
004e90 91ec      	LD   R30,X
004e91 eaa1      	LDI  R26,LOW(_config_oper)
004e92 e0b0      	LDI  R27,HIGH(_config_oper)
004e93 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01D5     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004e95 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004e96 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004e97 81ea      	LDD  R30,Y+2
004e98 81fb      	LDD  R31,Y+2+1
004e99 81e1      	LDD  R30,Z+1
004e9a 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01D6     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004e9c eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004e9d e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004e9e 81ea      	LDD  R30,Y+2
004e9f 81fb      	LDD  R31,Y+2+1
004ea0 81e2      	LDD  R30,Z+2
004ea1 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01D7 
                 ; 0007 01D8     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004ea3 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004ea4 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004ea5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004ea6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004ea7 940e e324 	CALL __PUTPARD1
004ea9 eaa1      	LDI  R26,LOW(_config_oper)
004eaa e0b0      	LDI  R27,HIGH(_config_oper)
004eab 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 01D9     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004ead e0ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004eae e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004eaf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004eb0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004eb1 940e e324 	CALL __PUTPARD1
                +
004eb3 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004eb4 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004eb5 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 01DA     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004eb7 940e c9aa 	CALL SUBOPT_0x135
                +
004eb9 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004eba e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004ebb 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 01DB     printDebug("\r\n sensorEnable    >> ");
                +
004ebd e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004ebe e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004ebf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004ec0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004ec1 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 01DC 
                 ; 0007 01DD     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004ec3 e000     +LDI R16 , LOW ( 0 )
004ec4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004ec5 3005     +CPI R16 , LOW ( 5 )
004ec6 e0e0     +LDI R30 , HIGH ( 5 )
004ec7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004ec8 f4c4      	BRGE _0xE007A
                 ; 0007 01DE     {
                 ; 0007 01DF         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004ec9 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004eca e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004ecb 0fe0      	ADD  R30,R16
004ecc 1ff1      	ADC  R31,R17
004ecd 01df      	MOVW R26,R30
004ece 940e c87b 	CALL SUBOPT_0xFF
004ed0 81e0      	LD   R30,Z
004ed1 940e e36c 	CALL __EEPROMWRB
                 ; 0007 01E0         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004ed3 940e c96f 	CALL SUBOPT_0x129
004ed5 940e e324 	CALL __PUTPARD1
                +
004ed7 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004ed8 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004ed9 0fe0      	ADD  R30,R16
004eda 1ff1      	ADC  R31,R17
004edb 01df      	MOVW R26,R30
004edc 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 01E1     }
                +
004ede 5f0f     +SUBI R16 , LOW ( - 1 )
004edf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ee0 cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E2     printDebug("\r\n");
004ee1 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 01E3 
                 ; 0007 01E4     config_oper_flag                    =   0x01;
004ee3 e4a3      	LDI  R26,LOW(_config_oper_flag)
004ee4 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004ee5 940e c9a3 	CALL SUBOPT_0x133
                 ; 0007 01E5 
                 ; 0007 01E6     is_operating_config_update          =   1;
004ee7 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E7 
                 ; 0007 01E8     return 0;
004ee9 940e c788 	CALL SUBOPT_0xD6
004eeb c01a      	RJMP _0x20E008E
                 ; 0007 01E9 }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EC {
                 _setSensorConfig:
                 ; 0007 01ED     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004eec 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004eee f022      	BRMI _0xE007C
004eef 81aa      	LDD  R26,Y+2
004ef0 81bb      	LDD  R27,Y+2+1
004ef1 9715      	SBIW R26,5
004ef2 f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01EE         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004ef3 e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004ef4 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004ef5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004ef6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004ef7 c008      	RJMP _0x20E008D
                 ; 0007 01EF         return -1;
                 ; 0007 01F0     }
                 ; 0007 01F1     if(newConfig->samplingRate == 0){
                 _0xE007B:
004ef8 940e c9b1 	CALL SUBOPT_0x136
004efa 9730      	SBIW R30,0
004efb f461      	BRNE _0xE007E
                 ; 0007 01F2         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004efc e8e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004efd e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004efe e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004eff e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E008D:
004f00 940e e324 	CALL __PUTPARD1
004f02 940e c360 	CALL SUBOPT_0x36
                 ; 0007 01F3         return -1;
                 _0x20E008F:
004f04 efef      	LDI  R30,LOW(65535)
004f05 efff      	LDI  R31,HIGH(65535)
                 _0x20E008E:
004f06 9624      	ADIW R28,4
004f07 9508      	RET
                 ; 0007 01F4     }
                 ; 0007 01F5 
                 ; 0007 01F6     if(newConfig->samplingRate < 60){
                 _0xE007E:
004f08 940e c9b1 	CALL SUBOPT_0x136
004f0a 97fc      	SBIW R30,60
004f0b f430      	BRSH _0xE007F
                 ; 0007 01F7         newConfig->samplingRate         =   60;
004f0c 81a8      	LD   R26,Y
004f0d 81b9      	LDD  R27,Y+1
004f0e e3ec      	LDI  R30,LOW(60)
004f0f e0f0      	LDI  R31,HIGH(60)
004f10 93ed      	ST   X+,R30
004f11 93fc      	ST   X,R31
                 ; 0007 01F8     }
                 ; 0007 01F9 
                 ; 0007 01FA     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004f12 940e c8c3 	CALL SUBOPT_0x10C
004f14 55e7      	SUBI R30,LOW(-_config_sens)
004f15 4fff      	SBCI R31,HIGH(-_config_sens)
004f16 010f      	MOVW R0,R30
004f17 940e c9b1 	CALL SUBOPT_0x136
004f19 940e c9b6 	CALL SUBOPT_0x137
                 ; 0007 01FB     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004f1b 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004f1c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004f1d 010f      	MOVW R0,R30
004f1e 81a8      	LD   R26,Y
004f1f 81b9      	LDD  R27,Y+1
004f20 9612      	ADIW R26,2
004f21 940e c9ba 	CALL SUBOPT_0x138
                 ; 0007 01FC     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004f23 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004f24 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004f25 01df      	MOVW R26,R30
004f26 81e8      	LD   R30,Y
004f27 81f9      	LDD  R31,Y+1
004f28 81e4      	LDD  R30,Z+4
004f29 940e c9bd 	CALL SUBOPT_0x139
                 ; 0007 01FD     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004f2b 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004f2c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004f2d 01df      	MOVW R26,R30
004f2e 81e8      	LD   R30,Y
004f2f 81f9      	LDD  R31,Y+1
004f30 81e5      	LDD  R30,Z+5
004f31 940e c9bd 	CALL SUBOPT_0x139
                 ; 0007 01FE     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004f33 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004f34 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004f35 01df      	MOVW R26,R30
004f36 81e8      	LD   R30,Y
004f37 81f9      	LDD  R31,Y+1
004f38 81e6      	LDD  R30,Z+6
004f39 940e c9bd 	CALL SUBOPT_0x139
                 ; 0007 01FF     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004f3b 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004f3c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004f3d 01df      	MOVW R26,R30
004f3e 81e8      	LD   R30,Y
004f3f 81f9      	LDD  R31,Y+1
004f40 81e7      	LDD  R30,Z+7
004f41 940e c9bd 	CALL SUBOPT_0x139
                 ; 0007 0200 
                 ; 0007 0201     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004f43 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004f44 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004f45 01df      	MOVW R26,R30
004f46 81e8      	LD   R30,Y
004f47 81f9      	LDD  R31,Y+1
004f48 85e0      	LDD  R30,Z+8
004f49 940e c9bd 	CALL SUBOPT_0x139
                 ; 0007 0202     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004f4b 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004f4c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004f4d 010f      	MOVW R0,R30
004f4e 81a8      	LD   R26,Y
004f4f 81b9      	LDD  R27,Y+1
004f50 9619      	ADIW R26,9
004f51 940e c9c0 	CALL SUBOPT_0x13A
                 ; 0007 0203     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004f53 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004f54 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004f55 010f      	MOVW R0,R30
004f56 81a8      	LD   R26,Y
004f57 81b9      	LDD  R27,Y+1
004f58 961d      	ADIW R26,13
004f59 940e c9ba 	CALL SUBOPT_0x138
                 ; 0007 0204     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004f5b 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004f5c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004f5d 010f      	MOVW R0,R30
004f5e 81a8      	LD   R26,Y
004f5f 81b9      	LDD  R27,Y+1
004f60 961f      	ADIW R26,15
004f61 940e c9c0 	CALL SUBOPT_0x13A
                 ; 0007 0205     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004f63 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004f64 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004f65 010f      	MOVW R0,R30
004f66 81a8      	LD   R26,Y
004f67 81b9      	LDD  R27,Y+1
004f68 9653      	ADIW R26,19
004f69 940e c9c0 	CALL SUBOPT_0x13A
                 ; 0007 0206     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004f6b 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004f6c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004f6d 010f      	MOVW R0,R30
004f6e 81a8      	LD   R26,Y
004f6f 81b9      	LDD  R27,Y+1
004f70 9657      	ADIW R26,23
004f71 940e c9ba 	CALL SUBOPT_0x138
                 ; 0007 0207     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004f73 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004f74 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004f75 010f      	MOVW R0,R30
004f76 81a8      	LD   R26,Y
004f77 81b9      	LDD  R27,Y+1
004f78 9659      	ADIW R26,25
004f79 940e c9c6 	CALL SUBOPT_0x13B
                 ; 0007 0208 
                 ; 0007 0209     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004f7b ece4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004f7c e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004f7d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004f7e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004f7f 940e c9cc 	CALL SUBOPT_0x13C
004f81 55e7      	SUBI R30,LOW(-_config_sens)
004f82 4fff      	SBCI R31,HIGH(-_config_sens)
004f83 940e c9d4 	CALL SUBOPT_0x13D
004f85 940e c26b 	CALL SUBOPT_0x12
                 ; 0007 020A     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004f87 eee1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004f88 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004f89 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004f8a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004f8b 940e c9cc 	CALL SUBOPT_0x13C
                +
004f8d 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004f8e 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004f8f 940e c9d4 	CALL SUBOPT_0x13D
004f91 940e c26b 	CALL SUBOPT_0x12
                 ; 0007 020B     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004f93 efee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004f94 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004f95 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004f96 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004f97 940e c9cc 	CALL SUBOPT_0x13C
                +
004f99 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004f9a 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004f9b 01df      	MOVW R26,R30
004f9c 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 020C     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004f9e e1eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004f9f e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004fa0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004fa1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004fa2 940e c9cc 	CALL SUBOPT_0x13C
                +
004fa4 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004fa5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004fa6 01df      	MOVW R26,R30
004fa7 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 020D     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004fa9 e3e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004faa e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004fab e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004fac e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004fad 940e c9cc 	CALL SUBOPT_0x13C
                +
004faf 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004fb0 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004fb1 01df      	MOVW R26,R30
004fb2 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 020E     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004fb4 e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004fb5 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004fb6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004fb7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004fb8 940e c9cc 	CALL SUBOPT_0x13C
                +
004fba 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004fbb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004fbc 01df      	MOVW R26,R30
004fbd 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 020F 
                 ; 0007 0210     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004fbf 940e c9aa 	CALL SUBOPT_0x135
004fc1 81ae      	LDD  R26,Y+6
004fc2 81bf      	LDD  R27,Y+6+1
004fc3 e1ed      	LDI  R30,LOW(29)
004fc4 940e e242 	CALL __MULB1W2U
                +
004fc6 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004fc7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004fc8 01df      	MOVW R26,R30
004fc9 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 0211     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004fcb e7e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004fcc e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004fcd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004fce e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004fcf 940e c9cc 	CALL SUBOPT_0x13C
004fd1 940e c8c9 	CALL SUBOPT_0x10D
004fd3 940e c965 	CALL SUBOPT_0x127
004fd5 e1ed      	LDI  R30,LOW(29)
004fd6 940e e242 	CALL __MULB1W2U
004fd8 940e c8c9 	CALL SUBOPT_0x10D
004fda 940e c2ce 	CALL SUBOPT_0x21
                 ; 0007 0212     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004fdc e9e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004fdd e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004fde e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004fdf e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004fe0 940e c9cc 	CALL SUBOPT_0x13C
004fe2 940e c8cf 	CALL SUBOPT_0x10E
004fe4 940e c357 	CALL SUBOPT_0x34
004fe6 85aa      	LDD  R26,Y+10
004fe7 85bb      	LDD  R27,Y+10+1
004fe8 e1ed      	LDI  R30,LOW(29)
004fe9 940e e242 	CALL __MULB1W2U
004feb 940e c8cf 	CALL SUBOPT_0x10E
004fed 940e c9d8 	CALL SUBOPT_0x13E
                 ; 0007 0213     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004fef ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004ff0 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004ff1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004ff2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004ff3 940e c9cc 	CALL SUBOPT_0x13C
004ff5 940e c8d5 	CALL SUBOPT_0x10F
004ff7 940e c965 	CALL SUBOPT_0x127
004ff9 e1ed      	LDI  R30,LOW(29)
004ffa 940e e242 	CALL __MULB1W2U
004ffc 940e c8d5 	CALL SUBOPT_0x10F
004ffe 940e c2ce 	CALL SUBOPT_0x21
                 ; 0007 0214     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
005000 ede4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
005001 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
005002 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
005003 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
005004 940e c9cc 	CALL SUBOPT_0x13C
005006 940e c8db 	CALL SUBOPT_0x110
005008 940e c965 	CALL SUBOPT_0x127
00500a e1ed      	LDI  R30,LOW(29)
00500b 940e e242 	CALL __MULB1W2U
00500d 940e c8db 	CALL SUBOPT_0x110
00500f 940e c2ce 	CALL SUBOPT_0x21
                 ; 0007 0215     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
005011 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
005012 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
005013 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
005014 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
005015 940e c9cc 	CALL SUBOPT_0x13C
005017 940e c8e1 	CALL SUBOPT_0x111
005019 940e c357 	CALL SUBOPT_0x34
00501b 85aa      	LDD  R26,Y+10
00501c 85bb      	LDD  R27,Y+10+1
00501d e1ed      	LDI  R30,LOW(29)
00501e 940e e242 	CALL __MULB1W2U
005020 940e c8e1 	CALL SUBOPT_0x111
005022 940e c9d8 	CALL SUBOPT_0x13E
                 ; 0007 0216     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
005024 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
005025 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
005026 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
005027 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
005028 940e c9cc 	CALL SUBOPT_0x13C
00502a 940e c8e7 	CALL SUBOPT_0x112
00502c 940e c965 	CALL SUBOPT_0x127
00502e e1ed      	LDI  R30,LOW(29)
00502f 940e e242 	CALL __MULB1W2U
005031 940e c8e7 	CALL SUBOPT_0x112
005033 940e c2ce 	CALL SUBOPT_0x21
                 ; 0007 0217     printDebug("\r\n");
005035 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 0218 
                 ; 0007 0219     config_sens_flag[ch]                = 0x01;
005037 81aa      	LDD  R26,Y+2
005038 81bb      	LDD  R27,Y+2+1
005039 5bac      	SUBI R26,LOW(-_config_sens_flag)
00503a 4fba      	SBCI R27,HIGH(-_config_sens_flag)
00503b e0e1      	LDI  R30,LOW(1)
00503c 940e e36c 	CALL __EEPROMWRB
                 ; 0007 021A     is_sensor_config_update[ch]          = 1;
00503e 81ea      	LDD  R30,Y+2
00503f 81fb      	LDD  R31,Y+2+1
005040 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
005041 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
005042 e0a1      	LDI  R26,LOW(1)
005043 83a0      	STD  Z+0,R26
                 ; 0007 021B 
                 ; 0007 021C     return 0;
005044 e0e0      	LDI  R30,LOW(0)
005045 e0f0      	LDI  R31,HIGH(0)
005046 c374      	RJMP _0x20E0088
                 ; 0007 021D }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0220 {
                 _setAuxDinConfig:
                 ; 0007 0221     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
005047 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
005049 f022      	BRMI _0xE0081
00504a 81aa      	LDD  R26,Y+2
00504b 81bb      	LDD  R27,Y+2+1
00504c 9751      	SBIW R26,17
00504d f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0222         return -1;
00504e efef      	LDI  R30,LOW(65535)
00504f efff      	LDI  R31,HIGH(65535)
005050 c36a      	RJMP _0x20E0088
                 ; 0007 0223     }
                 ; 0007 0224 
                 ; 0007 0225     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
005051 940e c8f2 	CALL SUBOPT_0x114
005053 5ce6      	SUBI R30,LOW(-_config_din)
005054 4ffe      	SBCI R31,HIGH(-_config_din)
005055 010f      	MOVW R0,R30
005056 81a8      	LD   R26,Y
005057 81b9      	LDD  R27,Y+1
005058 940e c99e 	CALL SUBOPT_0x132
                 ; 0007 0226     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
00505a 940e c8f2 	CALL SUBOPT_0x114
                +
00505c 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
00505d 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
00505e 940e c9db 	CALL SUBOPT_0x13F
005060 940e c9e0 	CALL SUBOPT_0x140
                 ; 0007 0227 
                 ; 0007 0228     printDebug("\r\n channel         >> [%d]",      ch);
005062 940e c9e6 	CALL SUBOPT_0x141
005064 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 0229     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
005066 940e c9eb 	CALL SUBOPT_0x142
005068 e0e3      	LDI  R30,LOW(3)
005069 940e e242 	CALL __MULB1W2U
00506b 5ce6      	SUBI R30,LOW(-_config_din)
00506c 4ffe      	SBCI R31,HIGH(-_config_din)
00506d 01df      	MOVW R26,R30
00506e 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 022A     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
005070 e6ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
005071 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
005072 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
005073 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
005074 940e c9f4 	CALL SUBOPT_0x143
005076 e0e3      	LDI  R30,LOW(3)
005077 940e e242 	CALL __MULB1W2U
                +
005079 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
00507a 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
00507b 940e c9d4 	CALL SUBOPT_0x13D
00507d 940e c26b 	CALL SUBOPT_0x12
                 ; 0007 022B 
                 ; 0007 022C     config_din_flag[ch]                 =   0x01;
00507f 81aa      	LDD  R26,Y+2
005080 81bb      	LDD  R27,Y+2+1
005081 5ba7      	SUBI R26,LOW(-_config_din_flag)
005082 4fba      	SBCI R27,HIGH(-_config_din_flag)
005083 e0e1      	LDI  R30,LOW(1)
005084 940e e36c 	CALL __EEPROMWRB
                 ; 0007 022D     is_din_config_update[ch]            =   1;
005086 81ea      	LDD  R30,Y+2
005087 81fb      	LDD  R31,Y+2+1
005088 50e3      	SUBI R30,LOW(-_is_din_config_update)
005089 4eff      	SBCI R31,HIGH(-_is_din_config_update)
00508a e0a1      	LDI  R26,LOW(1)
00508b 83a0      	STD  Z+0,R26
                 ; 0007 022E     return 0;
00508c e0e0      	LDI  R30,LOW(0)
00508d e0f0      	LDI  R31,HIGH(0)
00508e c32c      	RJMP _0x20E0088
                 ; 0007 022F }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0232 {
                 _setAuxDoutConfig:
                 ; 0007 0233     int i;
                 ; 0007 0234 
                 ; 0007 0235     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
00508f 940e c566 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005091 81ad      	LDD  R26,Y+5
005092 23aa      	TST  R26
005093 f022      	BRMI _0xE0084
005094 81ac      	LDD  R26,Y+4
005095 81bd      	LDD  R27,Y+4+1
005096 9716      	SBIW R26,6
005097 f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0236         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
005098 e8e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
005099 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
00509a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
00509b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
00509c 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0237         return -1;
00509e efef      	LDI  R30,LOW(65535)
00509f efff      	LDI  R31,HIGH(65535)
0050a0 c143      	RJMP _0x20E008B
                 ; 0007 0238     }
                 ; 0007 0239 
                 ; 0007 023A     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
0050a1 81ea      	LDD  R30,Y+2
0050a2 81fb      	LDD  R31,Y+2+1
0050a3 81a2      	LDD  R26,Z+2
0050a4 32a4      	CPI  R26,LOW(0x24)
0050a5 f060      	BRLO _0xE0086
                 ; 0007 023B         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
0050a6 eaee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
0050a7 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
0050a8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
0050a9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
0050aa 940e c89b 	CALL SUBOPT_0x104
0050ac 81e2      	LDD  R30,Z+2
0050ad 940e c309 	CALL SUBOPT_0x29
                 ; 0007 023C         return -1;
0050af efef      	LDI  R30,LOW(65535)
0050b0 efff      	LDI  R31,HIGH(65535)
0050b1 c132      	RJMP _0x20E008B
                 ; 0007 023D     }
                 ; 0007 023E 
                 ; 0007 023F     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
0050b2 940e c90c 	CALL SUBOPT_0x118
0050b4 59e6      	SUBI R30,LOW(-_config_dout)
0050b5 4ffe      	SBCI R31,HIGH(-_config_dout)
0050b6 01df      	MOVW R26,R30
0050b7 e0e1      	LDI  R30,LOW(1)
0050b8 940e c9f9 	CALL SUBOPT_0x144
                 ; 0007 0240     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
0050ba 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
0050bb 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
0050bc 01df      	MOVW R26,R30
0050bd e0e0      	LDI  R30,LOW(0)
0050be 940e c9f9 	CALL SUBOPT_0x144
                 ; 0007 0241     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
0050c0 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
0050c1 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
0050c2 01df      	MOVW R26,R30
0050c3 81ea      	LDD  R30,Y+2
0050c4 81fb      	LDD  R31,Y+2+1
0050c5 81e2      	LDD  R30,Z+2
0050c6 940e c9fc 	CALL SUBOPT_0x145
                 ; 0007 0242 
                 ; 0007 0243     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0244     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
0050c8 e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
0050c9 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
0050ca e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
0050cb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
0050cc 940e c912 	CALL SUBOPT_0x119
0050ce 940e c91a 	CALL SUBOPT_0x11A
                 ; 0007 0245     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
0050d0 e2e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
0050d1 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
0050d2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
0050d3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
0050d4 940e c912 	CALL SUBOPT_0x119
0050d6 940e c920 	CALL SUBOPT_0x11B
                 ; 0007 0246     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
0050d8 940e ca03 	CALL SUBOPT_0x146
0050da 940e c912 	CALL SUBOPT_0x119
0050dc 940e c926 	CALL SUBOPT_0x11C
0050de 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0247     printDebug("\r\n eventSource       >> ");
0050e0 940e ca08 	CALL SUBOPT_0x147
                 ; 0007 0248 
                 ; 0007 0249     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
0050e2 e000     +LDI R16 , LOW ( 0 )
0050e3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
0050e4 940e c90c 	CALL SUBOPT_0x118
0050e6 940e c926 	CALL SUBOPT_0x11C
0050e8 940e c92c 	CALL SUBOPT_0x11D
0050ea f4d4      	BRGE _0xE0089
                 ; 0007 024A 
                 ; 0007 024B         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
0050eb 940e c90c 	CALL SUBOPT_0x118
0050ed 940e c931 	CALL SUBOPT_0x11E
0050ef 940e c87b 	CALL SUBOPT_0xFF
0050f1 81e0      	LD   R30,Z
0050f2 940e c9f9 	CALL SUBOPT_0x144
                 ; 0007 024C 
                 ; 0007 024D         if( config_dout[ch].eventSource[i] != 0x00 ){
0050f4 940e c931 	CALL SUBOPT_0x11E
0050f6 940e e350 	CALL __EEPROMRDB
0050f8 30e0      	CPI  R30,0
0050f9 f041      	BREQ _0xE008A
                 ; 0007 024E             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
0050fa 940e c96f 	CALL SUBOPT_0x129
0050fc 940e c912 	CALL SUBOPT_0x119
0050fe 940e c931 	CALL SUBOPT_0x11E
005100 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 024F         }
                 ; 0007 0250     }
                 _0xE008A:
                +
005102 5f0f     +SUBI R16 , LOW ( - 1 )
005103 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005104 cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0251     printDebug("\r\n");
005105 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 0252 
                 ; 0007 0253     config_dout_flag[ch]                =   0x01;
005107 81ac      	LDD  R26,Y+4
005108 81bd      	LDD  R27,Y+4+1
005109 5aa7      	SUBI R26,LOW(-_config_dout_flag)
00510a 4fba      	SBCI R27,HIGH(-_config_dout_flag)
00510b e0e1      	LDI  R30,LOW(1)
00510c 940e e36c 	CALL __EEPROMWRB
                 ; 0007 0254     is_dout_config_update[ch]           =   1;
00510e 81ec      	LDD  R30,Y+4
00510f 81fd      	LDD  R31,Y+4+1
005110 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
005111 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
005112 e0a1      	LDI  R26,LOW(1)
005113 83a0      	STD  Z+0,R26
                 ; 0007 0255 
                 ; 0007 0256     return 0;
005114 c0cd      	RJMP _0x20E008C
                 ; 0007 0257 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025A {
                 _setAuxAinConfig:
                 ; 0007 025B     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
005115 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
005117 f022      	BRMI _0xE008C
005118 81aa      	LDD  R26,Y+2
005119 81bb      	LDD  R27,Y+2+1
00511a 9751      	SBIW R26,17
00511b f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025C         return -1;
00511c efef      	LDI  R30,LOW(65535)
00511d efff      	LDI  R31,HIGH(65535)
00511e c29c      	RJMP _0x20E0088
                 ; 0007 025D     }
                 ; 0007 025E 
                 ; 0007 025F     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
00511f 940e c937 	CALL SUBOPT_0x11F
005121 5de8      	SUBI R30,LOW(-_config_ain)
005122 4ffd      	SBCI R31,HIGH(-_config_ain)
005123 010f      	MOVW R0,R30
005124 81a8      	LD   R26,Y
005125 81b9      	LDD  R27,Y+1
005126 940e c99e 	CALL SUBOPT_0x132
                 ; 0007 0260     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
005128 940e c937 	CALL SUBOPT_0x11F
                +
00512a 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
00512b 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
00512c 940e c9db 	CALL SUBOPT_0x13F
00512e 940e c9c6 	CALL SUBOPT_0x13B
                 ; 0007 0261 
                 ; 0007 0262     printDebug("\r\n channel         >> [%d]",      ch);
005130 940e c9e6 	CALL SUBOPT_0x141
005132 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 0263     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
005134 940e c9eb 	CALL SUBOPT_0x142
005136 e0e5      	LDI  R30,LOW(5)
005137 940e e242 	CALL __MULB1W2U
005139 5de8      	SUBI R30,LOW(-_config_ain)
00513a 4ffd      	SBCI R31,HIGH(-_config_ain)
00513b 01df      	MOVW R26,R30
00513c 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 0264     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
00513e e7e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
00513f e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
005140 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
005141 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
005142 940e c9f4 	CALL SUBOPT_0x143
005144 e0e5      	LDI  R30,LOW(5)
005145 940e e242 	CALL __MULB1W2U
                +
005147 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
005148 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
005149 940e ca0e 	CALL SUBOPT_0x148
                 ; 0007 0265 
                 ; 0007 0266     config_ain_flag[ch]                 = 0x01;
00514b 81aa      	LDD  R26,Y+2
00514c 81bb      	LDD  R27,Y+2+1
00514d 5aa2      	SUBI R26,LOW(-_config_ain_flag)
00514e 4fba      	SBCI R27,HIGH(-_config_ain_flag)
00514f e0e1      	LDI  R30,LOW(1)
005150 940e e36c 	CALL __EEPROMWRB
                 ; 0007 0267 
                 ; 0007 0268     return 0;
005152 e0e0      	LDI  R30,LOW(0)
005153 e0f0      	LDI  R31,HIGH(0)
005154 c266      	RJMP _0x20E0088
                 ; 0007 0269 }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026C {
                 _setAuxAoutConfig:
                 ; 0007 026D     int i;
                 ; 0007 026E 
                 ; 0007 026F     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
005155 940e c566 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005157 81ad      	LDD  R26,Y+5
005158 23aa      	TST  R26
005159 f022      	BRMI _0xE008F
00515a 81ac      	LDD  R26,Y+4
00515b 81bd      	LDD  R27,Y+4+1
00515c 9751      	SBIW R26,17
00515d f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0270         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
00515e e9e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
00515f e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
005160 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
005161 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
005162 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 0271         return -1;
005164 efef      	LDI  R30,LOW(65535)
005165 efff      	LDI  R31,HIGH(65535)
005166 c07d      	RJMP _0x20E008B
                 ; 0007 0272     }
                 ; 0007 0273 
                 ; 0007 0274     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
005167 81ea      	LDD  R30,Y+2
005168 81fb      	LDD  R31,Y+2+1
005169 81a5      	LDD  R26,Z+5
00516a 32a4      	CPI  R26,LOW(0x24)
00516b f060      	BRLO _0xE0091
                 ; 0007 0275         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
00516c ebe9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
00516d e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
00516e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
00516f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
005170 940e c89b 	CALL SUBOPT_0x104
005172 81e5      	LDD  R30,Z+5
005173 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0276         return -1;
005175 efef      	LDI  R30,LOW(65535)
005176 efff      	LDI  R31,HIGH(65535)
005177 c06c      	RJMP _0x20E008B
                 ; 0007 0277     }
                 ; 0007 0278 
                 ; 0007 0279     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
005178 940e c943 	CALL SUBOPT_0x121
00517a 58e8      	SUBI R30,LOW(-_config_aout)
00517b 4ffd      	SBCI R31,HIGH(-_config_aout)
00517c 010f      	MOVW R0,R30
00517d 81aa      	LDD  R26,Y+2
00517e 81bb      	LDD  R27,Y+2+1
00517f 940e c99e 	CALL SUBOPT_0x132
                 ; 0007 027A     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
005181 940e c943 	CALL SUBOPT_0x121
                +
005183 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
005184 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
005185 010f      	MOVW R0,R30
005186 81aa      	LDD  R26,Y+2
005187 81bb      	LDD  R27,Y+2+1
005188 9611      	ADIW R26,1
005189 940e c9c6 	CALL SUBOPT_0x13B
                 ; 0007 027B     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
00518b 940e c943 	CALL SUBOPT_0x121
                +
00518d 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00518e 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00518f 01df      	MOVW R26,R30
005190 81ea      	LDD  R30,Y+2
005191 81fb      	LDD  R31,Y+2+1
005192 81e5      	LDD  R30,Z+5
005193 940e c9fc 	CALL SUBOPT_0x145
                 ; 0007 027C 
                 ; 0007 027D     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 027E     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
005195 e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
005196 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
005197 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
005198 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
005199 940e ca15 	CALL SUBOPT_0x149
00519b 58e8      	SUBI R30,LOW(-_config_aout)
00519c 4ffd      	SBCI R31,HIGH(-_config_aout)
00519d 01df      	MOVW R26,R30
00519e 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 027F     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
0051a0 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
0051a1 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
0051a2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
0051a3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
0051a4 940e ca15 	CALL SUBOPT_0x149
                +
0051a6 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
0051a7 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
0051a8 940e ca0e 	CALL SUBOPT_0x148
                 ; 0007 0280     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
0051aa 940e ca03 	CALL SUBOPT_0x146
0051ac 940e ca15 	CALL SUBOPT_0x149
0051ae 940e c949 	CALL SUBOPT_0x122
0051b0 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0281     printDebug("\r\n eventSource       >> ");
0051b2 940e ca08 	CALL SUBOPT_0x147
                 ; 0007 0282 
                 ; 0007 0283     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
0051b4 e000     +LDI R16 , LOW ( 0 )
0051b5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
0051b6 940e c943 	CALL SUBOPT_0x121
0051b8 940e c949 	CALL SUBOPT_0x122
0051ba 940e c92c 	CALL SUBOPT_0x11D
0051bc f4e4      	BRGE _0xE0094
                 ; 0007 0284 
                 ; 0007 0285         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
0051bd 940e c943 	CALL SUBOPT_0x121
0051bf 940e c94f 	CALL SUBOPT_0x123
0051c1 940e c93d 	CALL SUBOPT_0x120
0051c3 81e0      	LD   R30,Z
0051c4 940e e36c 	CALL __EEPROMWRB
                 ; 0007 0286 
                 ; 0007 0287         if( config_aout[ch].eventSource[i] != 0x00 ){
0051c6 940e c943 	CALL SUBOPT_0x121
0051c8 940e c94f 	CALL SUBOPT_0x123
0051ca 940e e350 	CALL __EEPROMRDB
0051cc 30e0      	CPI  R30,0
0051cd f041      	BREQ _0xE0095
                 ; 0007 0288             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
0051ce 940e c96f 	CALL SUBOPT_0x129
0051d0 940e ca15 	CALL SUBOPT_0x149
0051d2 940e c94f 	CALL SUBOPT_0x123
0051d4 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 0289         }
                 ; 0007 028A     }
                 _0xE0095:
                +
0051d6 5f0f     +SUBI R16 , LOW ( - 1 )
0051d7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051d8 cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028B     printDebug("\r\n");
0051d9 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 028C 
                 ; 0007 028D     config_aout_flag[ch]                =   0x01;
0051db 81ac      	LDD  R26,Y+4
0051dc 81bd      	LDD  R27,Y+4+1
0051dd 59a2      	SUBI R26,LOW(-_config_aout_flag)
0051de 4fba      	SBCI R27,HIGH(-_config_aout_flag)
0051df e0e1      	LDI  R30,LOW(1)
0051e0 940e e36c 	CALL __EEPROMWRB
                 ; 0007 028E 
                 ; 0007 028F     return 0;
                 _0x20E008C:
0051e2 e0e0      	LDI  R30,LOW(0)
0051e3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E008B:
0051e4 8119      	LDD  R17,Y+1
0051e5 8108      	LDD  R16,Y+0
0051e6 9626      	ADIW R28,6
0051e7 9508      	RET
                 ; 0007 0290 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0293 {
                 _setBuzzerConfig:
                 ; 0007 0294     int i;
                 ; 0007 0295 
                 ; 0007 0296     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
0051e8 940e c566 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
0051ea 81ea      	LDD  R30,Y+2
0051eb 81fb      	LDD  R31,Y+2+1
0051ec 81a1      	LDD  R26,Z+1
0051ed 32a4      	CPI  R26,LOW(0x24)
0051ee f070      	BRLO _0xE0096
                 ; 0007 0297         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
0051ef e1e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
0051f0 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
0051f1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
0051f2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
0051f3 940e c89b 	CALL SUBOPT_0x104
0051f5 81e1      	LDD  R30,Z+1
0051f6 940e c309 	CALL SUBOPT_0x29
                 ; 0007 0298         return -1;
0051f8 efef      	LDI  R30,LOW(65535)
0051f9 efff      	LDI  R31,HIGH(65535)
0051fa 8119      	LDD  R17,Y+1
0051fb 8108      	LDD  R16,Y+0
0051fc c1be      	RJMP _0x20E0088
                 ; 0007 0299     }
                 ; 0007 029A 
                 ; 0007 029B     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
0051fd 81aa      	LDD  R26,Y+2
0051fe 81bb      	LDD  R27,Y+2+1
0051ff 91ec      	LD   R30,X
005200 e0a8      	LDI  R26,LOW(_config_buzz)
005201 e0b5      	LDI  R27,HIGH(_config_buzz)
005202 940e e36c 	CALL __EEPROMWRB
                 ; 0007 029C     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
005204 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
005205 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
005206 81ea      	LDD  R30,Y+2
005207 81fb      	LDD  R31,Y+2+1
005208 81e1      	LDD  R30,Z+1
005209 940e e36c 	CALL __EEPROMWRB
                 ; 0007 029D 
                 ; 0007 029E     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
00520b e4eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
00520c e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
00520d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
00520e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
00520f 940e e324 	CALL __PUTPARD1
005211 e0a8      	LDI  R26,LOW(_config_buzz)
005212 e0b5      	LDI  R27,HIGH(_config_buzz)
005213 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 029F     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
005215 940e ca03 	CALL SUBOPT_0x146
005217 940e e324 	CALL __PUTPARD1
005219 940e c960 	CALL SUBOPT_0x126
00521b 940e c309 	CALL SUBOPT_0x29
                 ; 0007 02A0     printDebug("\r\n eventSource       >>");
                +
00521d e6ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
00521e e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
00521f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
005220 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
005221 940e c1f5 	CALL SUBOPT_0x3
                 ; 0007 02A1 
                 ; 0007 02A2     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
005223 e000     +LDI R16 , LOW ( 0 )
005224 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
005225 940e c960 	CALL SUBOPT_0x126
005227 940e c92c 	CALL SUBOPT_0x11D
005229 f4cc      	BRGE _0xE0099
                 ; 0007 02A3 
                 ; 0007 02A4         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
00522a 940e ca1d 	CALL SUBOPT_0x14A
00522c 81ea      	LDD  R30,Y+2
00522d 81fb      	LDD  R31,Y+2+1
00522e 940e c974 	CALL SUBOPT_0x12A
005230 940e e36c 	CALL __EEPROMWRB
                 ; 0007 02A5 
                 ; 0007 02A6         if( config_buzz.eventSource[i] != 0x00 ){
005232 940e ca1d 	CALL SUBOPT_0x14A
005234 940e e350 	CALL __EEPROMRDB
005236 30e0      	CPI  R30,0
005237 f041      	BREQ _0xE009A
                 ; 0007 02A7             printDebug("[0x%02X]",config_buzz.eventSource[i]);
005238 940e c96f 	CALL SUBOPT_0x129
00523a 940e e324 	CALL __PUTPARD1
00523c 940e ca1d 	CALL SUBOPT_0x14A
00523e 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 02A8         }
                 ; 0007 02A9 
                 ; 0007 02AA     }
                 _0xE009A:
                +
005240 5f0f     +SUBI R16 , LOW ( - 1 )
005241 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005242 cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AB     printDebug("\r\n");
005243 940e c8aa 	CALL SUBOPT_0x107
                 ; 0007 02AC 
                 ; 0007 02AD     config_buzz_flag                    =   0x01;
005245 e7ae      	LDI  R26,LOW(_config_buzz_flag)
005246 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
005247 940e c9a3 	CALL SUBOPT_0x133
                 ; 0007 02AE 
                 ; 0007 02AF     is_buzzer_config_update             =   1;
005249 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B0 
                 ; 0007 02B1     return 0;
00524b 940e c788 	CALL SUBOPT_0xD6
00524d c16d      	RJMP _0x20E0088
                 ; 0007 02B2 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B5 {
                 _setEnvAlarmConfig:
                 ; 0007 02B6     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
00524e 93ba      	ST   -Y,R27
00524f 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
005250 81a8      	LD   R26,Y
005251 81b9      	LDD  R27,Y+1
005252 940e e2f4 	CALL __GETD1P
005254 e2ad      	LDI  R26,LOW(_config_alm)
005255 e0b5      	LDI  R27,HIGH(_config_alm)
005256 940e e35c 	CALL __EEPROMWRD
                 ; 0007 02B7     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
005258 e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
005259 e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
00525a 010f      	MOVW R0,R30
00525b 81a8      	LD   R26,Y
00525c 81b9      	LDD  R27,Y+1
00525d 9614      	ADIW R26,4
00525e 940e c9e0 	CALL SUBOPT_0x140
                 ; 0007 02B8     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
005260 e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
005261 e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
005262 010f      	MOVW R0,R30
005263 81a8      	LD   R26,Y
005264 81b9      	LDD  R27,Y+1
005265 9616      	ADIW R26,6
005266 940e c9c6 	CALL SUBOPT_0x13B
                 ; 0007 02B9     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
005268 e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
005269 e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
00526a 010f      	MOVW R0,R30
00526b 81a8      	LD   R26,Y
00526c 81b9      	LDD  R27,Y+1
00526d 961a      	ADIW R26,10
00526e 940e c9c6 	CALL SUBOPT_0x13B
                 ; 0007 02BA     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
005270 e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
005271 e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
005272 010f      	MOVW R0,R30
005273 81a8      	LD   R26,Y
005274 81b9      	LDD  R27,Y+1
005275 961e      	ADIW R26,14
005276 940e c9e0 	CALL SUBOPT_0x140
                 ; 0007 02BB     config_alm.memoryMin                =   newConfig->memoryMin;
                +
005278 e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
005279 e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
00527a 010f      	MOVW R0,R30
00527b 81a8      	LD   R26,Y
00527c 81b9      	LDD  R27,Y+1
00527d 9650      	ADIW R26,16
00527e 940e c9e0 	CALL SUBOPT_0x140
                 ; 0007 02BC 
                 ; 0007 02BD     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
005280 e8e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
005281 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
005282 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
005283 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
005284 940e e324 	CALL __PUTPARD1
005286 e2ad      	LDI  R26,LOW(_config_alm)
005287 e0b5      	LDI  R27,HIGH(_config_alm)
005288 940e ca23 	CALL SUBOPT_0x14B
                 ; 0007 02BE     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
00528a e9ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
00528b e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
00528c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
00528d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
00528e 940e e324 	CALL __PUTPARD1
                +
005290 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
005291 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
005292 940e e34c 	CALL __EEPROMRDW
005294 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 02BF     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
005296 ebee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
005297 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
005298 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
005299 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
00529a 940e e324 	CALL __PUTPARD1
                +
00529c e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
00529d e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
00529e 940e ca23 	CALL SUBOPT_0x14B
                 ; 0007 02C0     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
0052a0 edee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
0052a1 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
0052a2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
0052a3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
0052a4 940e e324 	CALL __PUTPARD1
                +
0052a6 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
0052a7 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
0052a8 940e ca23 	CALL SUBOPT_0x14B
                 ; 0007 02C1     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
0052aa efeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
0052ab e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
0052ac e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
0052ad e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
0052ae 940e e324 	CALL __PUTPARD1
                +
0052b0 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
0052b1 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
0052b2 940e e34c 	CALL __EEPROMRDW
0052b4 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 02C2     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
0052b6 e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
0052b7 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
0052b8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
0052b9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
0052ba 940e e324 	CALL __PUTPARD1
                +
0052bc e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
0052bd e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
0052be 940e e34c 	CALL __EEPROMRDW
0052c0 940e c357 	CALL SUBOPT_0x34
0052c2 940e c26b 	CALL SUBOPT_0x12
                 ; 0007 02C3 
                 ; 0007 02C4     config_alm_flag                 = 0x01;
0052c4 e7af      	LDI  R26,LOW(_config_alm_flag)
0052c5 e0b5      	LDI  R27,HIGH(_config_alm_flag)
0052c6 940e c9a3 	CALL SUBOPT_0x133
                 ; 0007 02C5     is_env_config_update            = 1;
0052c8 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C6     return 0;
0052ca c02d      	RJMP _0x20E008A
                 ; 0007 02C7 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CA {
                 _setStatusReportConfig:
                 ; 0007 02CB     config_stat.accm                    =   newConfig->accm;
0052cb 93ba      	ST   -Y,R27
0052cc 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
0052cd 81a8      	LD   R26,Y
0052ce 81b9      	LDD  R27,Y+1
0052cf 91ec      	LD   R30,X
0052d0 e3af      	LDI  R26,LOW(_config_stat)
0052d1 e0b5      	LDI  R27,HIGH(_config_stat)
0052d2 940e e36c 	CALL __EEPROMWRB
                 ; 0007 02CC     config_stat.intv                    =   newConfig->intv;
                +
0052d4 e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
0052d5 e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
0052d6 940e c9db 	CALL SUBOPT_0x13F
0052d8 940e c9e0 	CALL SUBOPT_0x140
                 ; 0007 02CD 
                 ; 0007 02CE     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
0052da e3e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
0052db e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
0052dc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
0052dd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
0052de 940e e324 	CALL __PUTPARD1
0052e0 e3af      	LDI  R26,LOW(_config_stat)
0052e1 e0b5      	LDI  R27,HIGH(_config_stat)
0052e2 940e c9a7 	CALL SUBOPT_0x134
                 ; 0007 02CF     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
0052e4 e4ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
0052e5 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
0052e6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
0052e7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
0052e8 940e e324 	CALL __PUTPARD1
                +
0052ea e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
0052eb e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
0052ec 940e e34c 	CALL __EEPROMRDW
0052ee 940e c357 	CALL SUBOPT_0x34
0052f0 940e c26b 	CALL SUBOPT_0x12
                 ; 0007 02D0 
                 ; 0007 02D1     config_stat_flag                    = 0x01;
0052f2 e8a0      	LDI  R26,LOW(_config_stat_flag)
0052f3 e0b5      	LDI  R27,HIGH(_config_stat_flag)
0052f4 940e c9a3 	CALL SUBOPT_0x133
                 ; 0007 02D2     is_status_config_update             = 1;
0052f6 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D3     return 0;
                 _0x20E008A:
0052f8 e0e0      	LDI  R30,LOW(0)
0052f9 e0f0      	LDI  R31,HIGH(0)
0052fa 9622      	ADIW R28,2
0052fb 9508      	RET
                 ; 0007 02D4 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DC {
                 ; 0007 02DD     int i;
                 ; 0007 02DE 
                 ; 0007 02DF     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E0     config_oper_flag            = 0x00;
                 ; 0007 02E1 
                 ; 0007 02E2     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E3         config_sens_flag[i]     = 0x00;
                 ; 0007 02E4     }
                 ; 0007 02E5 
                 ; 0007 02E6     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E7         config_din_flag[i]      = 0x00;
                 ; 0007 02E8     }
                 ; 0007 02E9 
                 ; 0007 02EA     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EB         config_dout_flag[i]     = 0x00;
                 ; 0007 02EC     }
                 ; 0007 02ED 
                 ; 0007 02EE     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02EF         config_ain_flag[i]      = 0x00;
                 ; 0007 02F0     }
                 ; 0007 02F1 
                 ; 0007 02F2     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F3         config_aout_flag[i]     = 0x00;
                 ; 0007 02F4     }
                 ; 0007 02F5 
                 ; 0007 02F6     config_buzz_flag            = 0x00;
                 ; 0007 02F7     config_alm_flag             = 0x00;
                 ; 0007 02F8     config_stat_flag            = 0x00;
                 ; 0007 02F9 
                 ; 0007 02FA     return 0;
                 ; 0007 02FB }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 02FE {
                 _isDeviceConfig:
                 ; 0007 02FF     int i   = 0;
                 ; 0007 0300 
                 ; 0007 0301     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
0052fc 940e ca29 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
0052fe e4a2      	LDI  R26,LOW(_config_prop_flag)
0052ff e0b5      	LDI  R27,HIGH(_config_prop_flag)
005300 940e e350 	CALL __EEPROMRDB
005302 30e0      	CPI  R30,0
005303 f4c1      	BRNE _0xE00AB
005304 e4a3      	LDI  R26,LOW(_config_oper_flag)
005305 e0b5      	LDI  R27,HIGH(_config_oper_flag)
005306 940e e350 	CALL __EEPROMRDB
005308 30e0      	CPI  R30,0
005309 f491      	BRNE _0xE00AB
00530a e7ae      	LDI  R26,LOW(_config_buzz_flag)
00530b e0b5      	LDI  R27,HIGH(_config_buzz_flag)
00530c 940e e350 	CALL __EEPROMRDB
00530e 30e0      	CPI  R30,0
00530f f461      	BRNE _0xE00AB
005310 e7af      	LDI  R26,LOW(_config_alm_flag)
005311 e0b5      	LDI  R27,HIGH(_config_alm_flag)
005312 940e e350 	CALL __EEPROMRDB
005314 30e0      	CPI  R30,0
005315 f431      	BRNE _0xE00AB
005316 e8a0      	LDI  R26,LOW(_config_stat_flag)
005317 e0b5      	LDI  R27,HIGH(_config_stat_flag)
005318 940e e350 	CALL __EEPROMRDB
00531a 30e0      	CPI  R30,0
00531b f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0302         return 1;
00531c e0e1      	LDI  R30,LOW(1)
00531d e0f0      	LDI  R31,HIGH(1)
00531e c038      	RJMP _0x20E0089
                 ; 0007 0303     }
                 ; 0007 0304 
                 ; 0007 0305     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
00531f e000     +LDI R16 , LOW ( 0 )
005320 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
005321 3005     +CPI R16 , LOW ( 5 )
005322 e0e0     +LDI R30 , HIGH ( 5 )
005323 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005324 f464      	BRGE _0xE00AF
                 ; 0007 0306         if(config_sens_flag[i]){
005325 e4a4      	LDI  R26,LOW(_config_sens_flag)
005326 e0b5      	LDI  R27,HIGH(_config_sens_flag)
005327 940e c84b 	CALL SUBOPT_0xF8
005329 30e0      	CPI  R30,0
00532a f019      	BREQ _0xE00B0
                 ; 0007 0307             return 1;
00532b e0e1      	LDI  R30,LOW(1)
00532c e0f0      	LDI  R31,HIGH(1)
00532d c029      	RJMP _0x20E0089
                 ; 0007 0308         }
                 ; 0007 0309     }
                 _0xE00B0:
                +
00532e 5f0f     +SUBI R16 , LOW ( - 1 )
00532f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005330 cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030A 
                 ; 0007 030B     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030C     for(i=0;i<2;i++){
                +
005331 e000     +LDI R16 , LOW ( 0 )
005332 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
005333 3002     +CPI R16 , LOW ( 2 )
005334 e0e0     +LDI R30 , HIGH ( 2 )
005335 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005336 f464      	BRGE _0xE00B3
                 ; 0007 030D         if(config_din_flag[i]){
005337 e4a9      	LDI  R26,LOW(_config_din_flag)
005338 e0b5      	LDI  R27,HIGH(_config_din_flag)
005339 940e c84b 	CALL SUBOPT_0xF8
00533b 30e0      	CPI  R30,0
00533c f019      	BREQ _0xE00B4
                 ; 0007 030E             return 1;
00533d e0e1      	LDI  R30,LOW(1)
00533e e0f0      	LDI  R31,HIGH(1)
00533f c017      	RJMP _0x20E0089
                 ; 0007 030F         }
                 ; 0007 0310     }
                 _0xE00B4:
                +
005340 5f0f     +SUBI R16 , LOW ( - 1 )
005341 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005342 cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0311 
                 ; 0007 0312     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0313     for(i=0;i<2;i++){
                +
005343 e000     +LDI R16 , LOW ( 0 )
005344 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
005345 3002     +CPI R16 , LOW ( 2 )
005346 e0e0     +LDI R30 , HIGH ( 2 )
005347 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005348 f464      	BRGE _0xE00B7
                 ; 0007 0314         if(config_dout_flag[i]){
005349 e5a9      	LDI  R26,LOW(_config_dout_flag)
00534a e0b5      	LDI  R27,HIGH(_config_dout_flag)
00534b 940e c84b 	CALL SUBOPT_0xF8
00534d 30e0      	CPI  R30,0
00534e f019      	BREQ _0xE00B8
                 ; 0007 0315             return 1;
00534f e0e1      	LDI  R30,LOW(1)
005350 e0f0      	LDI  R31,HIGH(1)
005351 c005      	RJMP _0x20E0089
                 ; 0007 0316         }
                 ; 0007 0317     }
                 _0xE00B8:
                +
005352 5f0f     +SUBI R16 , LOW ( - 1 )
005353 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005354 cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 0318     return 0;
005355 e0e0      	LDI  R30,LOW(0)
005356 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
005357 9109      	LD   R16,Y+
005358 9119      	LD   R17,Y+
005359 9508      	RET
                 ; 0007 0319 }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031C {
                 _getAllConfig:
                 ; 0007 031D     int i,err;
                 ; 0007 031E 
                 ; 0007 031F     // -- load configuration -- //
                 ; 0007 0320     getPropertiesConfig(&properties_config);
00535a 940e e39b 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
00535c 940e c245 	CALL SUBOPT_0xD
                 ; 0007 0321     is_properties_config_update = 0;
                 ; 0007 0322 
                 ; 0007 0323     getOperatingConfig(&operating_config);
00535e 940e c24d 	CALL SUBOPT_0xE
                 ; 0007 0324     is_operating_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
005360 e000     +LDI R16 , LOW ( 0 )
005361 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
005362 3005     +CPI R16 , LOW ( 5 )
005363 e0e0     +LDI R30 , HIGH ( 5 )
005364 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005365 f504      	BRGE _0xE00BB
                 ; 0007 0327         err = getSensorConfig(i,&sensor_config[i]);
005366 931a      	ST   -Y,R17
005367 930a      	ST   -Y,R16
                +
005368 e1ad     +LDI R26 , 29
005369 9fa0     +MUL R26 , R16
00536a 01f0     +MOVW R30 , R0
00536b 9fa1     +MUL R26 , R17
00536c 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
00536d 54e2      	SUBI R30,LOW(-_sensor_config)
00536e 4efe      	SBCI R31,HIGH(-_sensor_config)
00536f 01df      	MOVW R26,R30
005370 940e 4a20 	CALL _getSensorConfig
005372 019f      	MOVW R18,R30
                 ; 0007 0328         if(err < 0){
005373 2333      	TST  R19
005374 f452      	BRPL _0xE00BC
                 ; 0007 0329             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
005375 e6e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
005376 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
005377 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
005378 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
005379 940e e324 	CALL __PUTPARD1
00537b 01f8      	MOVW R30,R16
00537c 940e c800 	CALL SUBOPT_0xE9
                 ; 0007 032A             continue;
00537e c004      	RJMP _0xE00B9
                 ; 0007 032B         }
                 ; 0007 032C         is_sensor_config_update[i] = 0;
                 _0xE00BC:
00537f efa8      	LDI  R26,LOW(_is_sensor_config_update)
005380 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
005381 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0007 032D     }
                 _0xE00B9:
                +
005383 5f0f     +SUBI R16 , LOW ( - 1 )
005384 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005385 cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 032E 
                 ; 0007 032F     getBuzzerConfig(&buzz_config);
005386 940e c275 	CALL SUBOPT_0x14
                 ; 0007 0330     is_buzzer_config_update = 0;
                 ; 0007 0331 
                 ; 0007 0332     for(i=0;i<USE_DIN;i++){
                +
005388 e000     +LDI R16 , LOW ( 0 )
005389 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
00538a 3002     +CPI R16 , LOW ( 2 )
00538b e0e0     +LDI R30 , HIGH ( 2 )
00538c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00538d f49c      	BRGE _0xE00BF
                 ; 0007 0333         getAuxDinConfig(i,&din_config[i]);
00538e 931a      	ST   -Y,R17
00538f 930a      	ST   -Y,R16
                +
005390 e0a3     +LDI R26 , 3
005391 9fa0     +MUL R26 , R16
005392 01f0     +MOVW R30 , R0
005393 9fa1     +MUL R26 , R17
005394 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
005395 5be1      	SUBI R30,LOW(-_din_config)
005396 4efd      	SBCI R31,HIGH(-_din_config)
005397 01df      	MOVW R26,R30
005398 940e 4b08 	CALL _getAuxDinConfig
                 ; 0007 0334         is_din_config_update[i] = 0;
00539a efad      	LDI  R26,LOW(_is_din_config_update)
00539b e1b0      	LDI  R27,HIGH(_is_din_config_update)
00539c 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0007 0335     }
                +
00539e 5f0f     +SUBI R16 , LOW ( - 1 )
00539f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053a0 cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0336 
                 ; 0007 0337     for(i=0;i<USE_DOUT;i++){
                +
0053a1 e000     +LDI R16 , LOW ( 0 )
0053a2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
0053a3 3002     +CPI R16 , LOW ( 2 )
0053a4 e0e0     +LDI R30 , HIGH ( 2 )
0053a5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0053a6 f474      	BRGE _0xE00C2
                 ; 0007 0338         getAuxDoutConfig(i,&dout_config[i]);
0053a7 931a      	ST   -Y,R17
0053a8 930a      	ST   -Y,R16
                +
0053a9 e2a6     +LDI R26 , 38
0053aa 9fa0     +MUL R26 , R16
0053ab 01f0     +MOVW R30 , R0
0053ac 9fa1     +MUL R26 , R17
0053ad 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
0053ae 940e c285 	CALL SUBOPT_0x16
                 ; 0007 0339         is_dout_config_update[i] = 0;
0053b0 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0007 033A     }
                +
0053b2 5f0f     +SUBI R16 , LOW ( - 1 )
0053b3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053b4 cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033B 
                 ; 0007 033C     getStatusReportConfig(&status_config);
0053b5 940e c28d 	CALL SUBOPT_0x17
                 ; 0007 033D     is_status_config_update = 0;
                 ; 0007 033E 
                 ; 0007 033F     getEnvAlarmConfig(&env_config);
0053b7 940e c295 	CALL SUBOPT_0x18
                 ; 0007 0340     is_env_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     return 0;
0053b9 940e ca33 	CALL SUBOPT_0x14E
                 _0x20E0088:
0053bb 9624      	ADIW R28,4
0053bc 9508      	RET
                 ; 0007 0343 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
0053bd 93aa      	ST   -Y,R26
0053be 940e ca38 	CALL SUBOPT_0x14F
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0053c0 eeeb      	LDI  R30,LOW(235)
0053c1 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053c2 e020     +LDI R18 , LOW ( 0 )
0053c3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
0053c4 3028     +CPI R18 , LOW ( 8 )
0053c5 e0e0     +LDI R30 , HIGH ( 8 )
0053c6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053c7 f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
0053c8 940e ca47 	CALL SUBOPT_0x150
0053ca 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 0020     }
                +
0053cc 5f2f     +SUBI R18 , LOW ( - 1 )
0053cd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053ce cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
0053cf 940e ca47 	CALL SUBOPT_0x150
0053d1 85ae      	LDD  R26,Y+14
0053d2 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
0053d3 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
0053d4 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
0053d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
0053d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
0053d7 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
0053d9 940e ca59 	CALL SUBOPT_0x152
0053db 89eb      	LDD  R30,Y+19
0053dc 93ea      	ST   -Y,R30
0053dd 940e c840 	CALL SUBOPT_0xF5
0053df 940e ca60 	CALL SUBOPT_0x153
                 ; 0009 0027 
                 ; 0009 0028     return 0;
0053e1 c1a1      	RJMP _0x20E0085
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
0053e2 93aa      	ST   -Y,R26
0053e3 972f      	SBIW R28,15
0053e4 940e ca63 	CALL SUBOPT_0x154
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0053e6 e1eb      	LDI  R30,LOW(27)
0053e7 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053e8 e020     +LDI R18 , LOW ( 0 )
0053e9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
0053ea 3028     +CPI R18 , LOW ( 8 )
0053eb e0e0     +LDI R30 , HIGH ( 8 )
0053ec 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053ed f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
0053ee 940e ca47 	CALL SUBOPT_0x150
0053f0 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 0034     }
                +
0053f2 5f2f     +SUBI R18 , LOW ( - 1 )
0053f3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053f4 cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
0053f5 940e ca47 	CALL SUBOPT_0x150
0053f7 89ac      	LDD  R26,Y+20
0053f8 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
0053f9 940e ca47 	CALL SUBOPT_0x150
0053fb 89ab      	LDD  R26,Y+19
0053fc 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
0053fd eae1     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
0053fe e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
0053ff e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
005400 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
005401 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
005403 940e ca59 	CALL SUBOPT_0x152
005405 8de9      	LDD  R30,Y+25
005406 93ea      	ST   -Y,R30
005407 940e c840 	CALL SUBOPT_0xF5
005409 940e ca60 	CALL SUBOPT_0x153
                 ; 0009 003D 
                 ; 0009 003E     return 0;
00540b 9666      	ADIW R28,22
00540c 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
00540d 93ba      	ST   -Y,R27
00540e 93aa      	ST   -Y,R26
00540f 9722      	SBIW R28,2
005410 940e c365 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
005412 940e ca71 	CALL SUBOPT_0x155
                 ; 0009 0049     if(frameLen > 250){
005414 f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
005415 ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
005416 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
005417 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
005418 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
005419 940e c3eb 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
00541b efef      	LDI  R30,LOW(65535)
00541c efff      	LDI  R31,HIGH(65535)
00541d c03a      	RJMP _0x20E0087
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
00541e 940e ca79 	CALL SUBOPT_0x156
                 ; 0009 004F     if(frameData == NULL){
005420 f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
005421 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
005422 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
005423 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
005424 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
005425 940e c3eb 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
005427 efef      	LDI  R30,LOW(65535)
005428 efff      	LDI  R31,HIGH(65535)
005429 c02e      	RJMP _0x20E0087
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
00542a 940e ca80 	CALL SUBOPT_0x157
00542c 0fae      	ADD  R26,R30
00542d 1fbf      	ADC  R27,R31
00542e e2ea      	LDI  R30,LOW(42)
00542f 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005430 e020     +LDI R18 , LOW ( 0 )
005431 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
005432 3028     +CPI R18 , LOW ( 8 )
005433 e0e0     +LDI R30 , HIGH ( 8 )
005434 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005435 f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
005436 940e ca80 	CALL SUBOPT_0x157
005438 940e ca86 	CALL SUBOPT_0x158
                 ; 0009 0058     }
                +
00543a 5f2f     +SUBI R18 , LOW ( - 1 )
00543b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00543c cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
00543d 940e ca89 	CALL SUBOPT_0x159
00543f 01fe      	MOVW R30,R28
005440 963f      	ADIW R30,15
005441 940e c405 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
005443 5f0c     +SUBI R16 , LOW ( - 4 )
005444 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
005445 940e ca80 	CALL SUBOPT_0x157
005447 0fea      	ADD  R30,R26
005448 1ffb      	ADC  R31,R27
005449 85ac      	LDD  R26,Y+12
00544a 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
00544b 940e ca89 	CALL SUBOPT_0x159
00544d 940e ca8e 	CALL SUBOPT_0x15A
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
00544f 940e ca9b 	CALL SUBOPT_0x15B
005451 931a      	ST   -Y,R17
005452 930a      	ST   -Y,R16
005453 e0e0      	LDI  R30,LOW(0)
005454 940e caa0 	CALL SUBOPT_0x15C
                 ; 0009 0063     free( frameData );
005456 940e caa5 	CALL SUBOPT_0x15D
                 ; 0009 0064 }
                 _0x20E0087:
005458 940e e3a0 	CALL __LOADLOCR6
00545a 9661      	ADIW R28,17
00545b 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
00545c 93aa      	ST   -Y,R26
00545d 9761      	SBIW R28,17
00545e 940e c365 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
005460 8dad      	LDD  R26,Y+29
005461 30a0      	CPI  R26,LOW(0x0)
005462 f021      	BREQ _0x12000F
005463 30a1      	CPI  R26,LOW(0x1)
005464 f011      	BREQ _0x12000F
005465 30a2      	CPI  R26,LOW(0x2)
005466 f409      	BRNE _0x120010
                 _0x12000F:
005467 c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
005468 e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
005469 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
00546a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
00546b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
00546c 940e e324 	CALL __PUTPARD1
00546e a1e9      	LDD  R30,Y+33
00546f 940e c309 	CALL SUBOPT_0x29
                 ; 0009 006F         return -1;
005471 efef      	LDI  R30,LOW(65535)
005472 efff      	LDI  R31,HIGH(65535)
005473 c078      	RJMP _0x20E0086
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
005474 940e caa9 	CALL SUBOPT_0x15E
005476 0fae      	ADD  R26,R30
005477 1fbf      	ADC  R27,R31
005478 e3ea      	LDI  R30,LOW(58)
005479 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00547a e020     +LDI R18 , LOW ( 0 )
00547b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
00547c 3028     +CPI R18 , LOW ( 8 )
00547d e0e0     +LDI R30 , HIGH ( 8 )
00547e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00547f f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
005480 940e caa9 	CALL SUBOPT_0x15E
005482 940e ca86 	CALL SUBOPT_0x158
                 ; 0009 0076     }
                +
005484 5f2f     +SUBI R18 , LOW ( - 1 )
005485 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005486 cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005487 01f8      	MOVW R30,R16
005488 01de      	MOVW R26,R28
005489 9616      	ADIW R26,6
00548a 940e c2ba 	CALL SUBOPT_0x1D
00548c 01fe      	MOVW R30,R28
00548d 967b      	ADIW R30,27
00548e 940e c405 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
005490 5f0c     +SUBI R16 , LOW ( - 4 )
005491 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
005492 940e caa9 	CALL SUBOPT_0x15E
005494 0fea      	ADD  R30,R26
005495 1ffb      	ADC  R31,R27
005496 8dad      	LDD  R26,Y+29
005497 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
005498 940e caa9 	CALL SUBOPT_0x15E
00549a 0fea      	ADD  R30,R26
00549b 1ffb      	ADC  R31,R27
00549c 8da8      	LDD  R26,Y+24
00549d 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
00549e 940e caa9 	CALL SUBOPT_0x15E
0054a0 0fea      	ADD  R30,R26
0054a1 1ffb      	ADC  R31,R27
0054a2 89af      	LDD  R26,Y+23
0054a3 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
0054a4 940e 6aa2 	CALL _ETH_generateId
0054a6 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
0054a7 8ded      	LDD  R30,Y+29
0054a8 30e0      	CPI  R30,0
0054a9 f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
0054aa 89ee      	LDD  R30,Y+22
0054ab 93ea      	ST   -Y,R30
0054ac 940e c76f 	CALL SUBOPT_0xD1
0054ae 940e e324 	CALL __PUTPARD1
0054b0 8ded      	LDD  R30,Y+29
0054b1 93ea      	ST   -Y,R30
0054b2 8dad      	LDD  R26,Y+29
0054b3 940e 8739 	CALL _addEventLogQueue
0054b5 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
0054b6 2355      	TST  R21
0054b7 f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
0054b8 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
0054b9 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
0054ba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
0054bb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
0054bc 940e e324 	CALL __PUTPARD1
0054be 8dea      	LDD  R30,Y+26
0054bf 940e c4a6 	CALL SUBOPT_0x65
0054c1 940e caaf 	CALL SUBOPT_0x15F
0054c3 a1ec      	LDD  R30,Y+36
0054c4 940e c4a6 	CALL SUBOPT_0x65
0054c6 a1ef      	LDD  R30,Y+39
0054c7 940e c4a6 	CALL SUBOPT_0x65
0054c9 940e cab6 	CALL SUBOPT_0x160
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
0054cb c006      	RJMP _0x120016
                 _0x120014:
0054cc 8dad      	LDD  R26,Y+29
0054cd 30a1      	CPI  R26,LOW(0x1)
0054ce f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
0054cf 89ee      	LDD  R30,Y+22
0054d0 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
0054d2 ebe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
0054d3 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
0054d4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
0054d5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
0054d6 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
0054d8 940e c440 	CALL SUBOPT_0x56
0054da 01d8      	MOVW R26,R16
0054db 940e 9f0a 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
0054dd 940e c440 	CALL SUBOPT_0x56
0054df 931a      	ST   -Y,R17
0054e0 930a      	ST   -Y,R16
0054e1 8dea      	LDD  R30,Y+26
0054e2 940e caa0 	CALL SUBOPT_0x15C
0054e4 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
0054e5 2355      	TST  R21
0054e6 f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
0054e7 efef      	LDI  R30,LOW(65535)
0054e8 efff      	LDI  R31,HIGH(65535)
0054e9 c002      	RJMP _0x20E0086
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
0054ea e0e0      	LDI  R30,LOW(0)
0054eb e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E0086:
0054ec 940e e3a0 	CALL __LOADLOCR6
0054ee 966e      	ADIW R28,30
0054ef 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
0054f0 93aa      	ST   -Y,R26
0054f1 972c      	SBIW R28,12
0054f2 940e ca63 	CALL SUBOPT_0x154
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054f4 e4eb      	LDI  R30,LOW(75)
0054f5 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054f6 e020     +LDI R18 , LOW ( 0 )
0054f7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
0054f8 3028     +CPI R18 , LOW ( 8 )
0054f9 e0e0     +LDI R30 , HIGH ( 8 )
0054fa 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054fb f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
0054fc 940e ca47 	CALL SUBOPT_0x150
0054fe 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 00A4     }
                +
005500 5f2f     +SUBI R18 , LOW ( - 1 )
005501 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005502 cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
005503 940e ca47 	CALL SUBOPT_0x150
005505 89aa      	LDD  R26,Y+18
005506 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
005507 940e ca47 	CALL SUBOPT_0x150
005509 89a9      	LDD  R26,Y+17
00550a 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
00550b 940e ca47 	CALL SUBOPT_0x150
00550d 89a8      	LDD  R26,Y+16
00550e 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
00550f edea     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
005510 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
005511 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
005512 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
005513 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
005515 940e ca59 	CALL SUBOPT_0x152
005517 89ef      	LDD  R30,Y+23
005518 93ea      	ST   -Y,R30
005519 940e c840 	CALL SUBOPT_0xF5
00551b 940e ca60 	CALL SUBOPT_0x153
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
00551d 9664      	ADIW R28,20
00551e 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
00551f 93ba      	ST   -Y,R27
005520 93aa      	ST   -Y,R26
005521 9722      	SBIW R28,2
005522 940e c365 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
005524 940e ca71 	CALL SUBOPT_0x155
                 ; 0009 00BA     if(frameLen > 250){
005526 f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
005527 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
005528 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
005529 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
00552a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
00552b 940e c3eb 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
00552d 940e cabb 	CALL SUBOPT_0x161
                 ; 0009 00BD         return -1;
00552f c051      	RJMP _0x20E0084
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
005530 940e ca79 	CALL SUBOPT_0x156
                 ; 0009 00C1     if(frameData == NULL){
005532 f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
005533 e3ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
005534 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
005535 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
005536 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
005537 940e c3eb 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
005539 940e cabb 	CALL SUBOPT_0x161
                 ; 0009 00C4         return -1;
00553b c045      	RJMP _0x20E0084
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
00553c 940e ca80 	CALL SUBOPT_0x157
00553e 0fae      	ADD  R26,R30
00553f 1fbf      	ADC  R27,R31
005540 e4eb      	LDI  R30,LOW(75)
005541 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005542 e020     +LDI R18 , LOW ( 0 )
005543 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
005544 3028     +CPI R18 , LOW ( 8 )
005545 e0e0     +LDI R30 , HIGH ( 8 )
005546 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005547 f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
005548 940e ca80 	CALL SUBOPT_0x157
00554a 940e ca86 	CALL SUBOPT_0x158
                 ; 0009 00CB     }
                +
00554c 5f2f     +SUBI R18 , LOW ( - 1 )
00554d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00554e cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
00554f 940e ca80 	CALL SUBOPT_0x157
005551 0fea      	ADD  R30,R26
005552 1ffb      	ADC  R31,R27
005553 85ae      	LDD  R26,Y+14
005554 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
005555 940e ca80 	CALL SUBOPT_0x157
005557 0fea      	ADD  R30,R26
005558 1ffb      	ADC  R31,R27
005559 85ad      	LDD  R26,Y+13
00555a 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
00555b 940e ca80 	CALL SUBOPT_0x157
00555d 0fea      	ADD  R30,R26
00555e 1ffb      	ADC  R31,R27
00555f 85ac      	LDD  R26,Y+12
005560 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
005561 85a8      	LDD  R26,Y+8
005562 85b9      	LDD  R27,Y+8+1
005563 940e e381 	CALL __CPW02
005565 f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
005566 940e ca89 	CALL SUBOPT_0x159
005568 940e ca8e 	CALL SUBOPT_0x15A
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
00556a e6ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
00556b e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
00556c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
00556d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
00556e 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
005570 940e ca9b 	CALL SUBOPT_0x15B
005572 01d8      	MOVW R26,R16
005573 940e cac7 	CALL SUBOPT_0x162
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
005575 931a      	ST   -Y,R17
005576 930a      	ST   -Y,R16
005577 89eb      	LDD  R30,Y+19
005578 93ea      	ST   -Y,R30
005579 940e c840 	CALL SUBOPT_0xF5
00557b 940e 5dc2 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
00557d 940e caa5 	CALL SUBOPT_0x15D
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
00557f e0e0      	LDI  R30,LOW(0)
005580 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0084:
005581 940e e3a0 	CALL __LOADLOCR6
                 _0x20E0085:
005583 9660      	ADIW R28,16
005584 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
005585 940e e329 	CALL __PUTPARD2
005587 9764      	SBIW R28,20
005588 e0e0      	LDI  R30,LOW(0)
005589 83e8      	ST   Y,R30
00558a 940e c365 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
00558c a1ac      	LDD  R26,Y+36
00558d 30a0      	CPI  R26,LOW(0x0)
00558e f021      	BREQ _0x120024
00558f 30a1      	CPI  R26,LOW(0x1)
005590 f011      	BREQ _0x120024
005591 30a2      	CPI  R26,LOW(0x2)
005592 f409      	BRNE _0x120025
                 _0x120024:
005593 c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
005594 e9e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
005595 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
005596 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
005597 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
005598 940e e324 	CALL __PUTPARD1
00559a a5e8      	LDD  R30,Y+40
00559b 940e c309 	CALL SUBOPT_0x29
                 ; 0009 00E9         return -1;
00559d efef      	LDI  R30,LOW(65535)
00559e efff      	LDI  R31,HIGH(65535)
00559f c083      	RJMP _0x20E0083
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
0055a0 8dae      	LDD  R26,Y+30
0055a1 5faf      	SUBI R26,-LOW(1)
0055a2 2fea      	MOV  R30,R26
0055a3 95e2      	SWAP R30
0055a4 7fe0      	ANDI R30,0xF0
0055a5 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
0055a6 a1ec      	LDD  R30,Y+36
0055a7 81ae      	LDD  R26,Y+6
0055a8 2bea      	OR   R30,R26
0055a9 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
0055aa 940e caca 	CALL SUBOPT_0x163
0055ac 0fae      	ADD  R26,R30
0055ad 1fbf      	ADC  R27,R31
0055ae e5ea      	LDI  R30,LOW(90)
0055af 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0055b0 e020     +LDI R18 , LOW ( 0 )
0055b1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
0055b2 3028     +CPI R18 , LOW ( 8 )
0055b3 e0e0     +LDI R30 , HIGH ( 8 )
0055b4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0055b5 f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
0055b6 940e caca 	CALL SUBOPT_0x163
0055b8 940e ca86 	CALL SUBOPT_0x158
                 ; 0009 00F3     }
                +
0055ba 5f2f     +SUBI R18 , LOW ( - 1 )
0055bb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0055bc cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0055bd 01f8      	MOVW R30,R16
0055be 01de      	MOVW R26,R28
0055bf 9617      	ADIW R26,7
0055c0 940e c2ba 	CALL SUBOPT_0x1D
0055c2 01fe      	MOVW R30,R28
0055c3 96b2      	ADIW R30,34
0055c4 940e c405 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
0055c6 5f0c     +SUBI R16 , LOW ( - 4 )
0055c7 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
0055c8 940e caca 	CALL SUBOPT_0x163
0055ca 0fea      	ADD  R30,R26
0055cb 1ffb      	ADC  R31,R27
0055cc 81ae      	LDD  R26,Y+6
0055cd 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
0055ce 01f8      	MOVW R30,R16
0055cf 01de      	MOVW R26,R28
0055d0 9617      	ADIW R26,7
0055d1 940e c2ba 	CALL SUBOPT_0x1D
0055d3 01fe      	MOVW R30,R28
0055d4 967c      	ADIW R30,28
0055d5 940e c405 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
0055d7 5f0c     +SUBI R16 , LOW ( - 4 )
0055d8 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
0055d9 940e 6aa2 	CALL _ETH_generateId
0055db 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
0055dc a1ec      	LDD  R30,Y+36
0055dd 30e0      	CPI  R30,0
0055de f549      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
0055df 8de9      	LDD  R30,Y+25
0055e0 93ea      	ST   -Y,R30
0055e1 940e caaf 	CALL SUBOPT_0x15F
0055e3 a1eb      	LDD  R30,Y+35
0055e4 a1fc      	LDD  R31,Y+35+1
0055e5 93fa      	ST   -Y,R31
0055e6 93ea      	ST   -Y,R30
                +
0055e7 a1a9     +LDD R26 , Y + 33
0055e8 a1ba     +LDD R27 , Y + 33 + 1
0055e9 a18b     +LDD R24 , Y + 33 + 2
0055ea a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
0055eb 940e 866b 	CALL _addDataLogQueue
0055ed 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
0055ee 2355      	TST  R21
0055ef f4ba      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
0055f0 ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
0055f1 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
0055f2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
0055f3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
0055f4 940e e324 	CALL __PUTPARD1
0055f6 8ded      	LDD  R30,Y+29
0055f7 940e c4a6 	CALL SUBOPT_0x65
                +
0055f9 a5e8     +LDD R30 , Y + 40
0055fa a5f9     +LDD R31 , Y + 40 + 1
0055fb a56a     +LDD R22 , Y + 40 + 2
0055fc a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
0055fd 940e e324 	CALL __PUTPARD1
0055ff a5ea      	LDD  R30,Y+42
005600 a5fb      	LDD  R31,Y+42+1
005601 940e c357 	CALL SUBOPT_0x34
005603 940e cad0 	CALL SUBOPT_0x164
005605 940e cab6 	CALL SUBOPT_0x160
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
005607 c006      	RJMP _0x12002B
                 _0x120029:
005608 a1ac      	LDD  R26,Y+36
005609 30a1      	CPI  R26,LOW(0x1)
00560a f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
00560b 8de9      	LDD  R30,Y+25
00560c 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
00560e e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
00560f e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
005610 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
005611 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
005612 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005614 940e c49a 	CALL SUBOPT_0x63
005616 931a      	ST   -Y,R17
005617 930a      	ST   -Y,R16
005618 8ded      	LDD  R30,Y+29
005619 940e caa0 	CALL SUBOPT_0x15C
00561b 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
00561c 2355      	TST  R21
00561d f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
00561e efef      	LDI  R30,LOW(65535)
00561f efff      	LDI  R31,HIGH(65535)
005620 c002      	RJMP _0x20E0083
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
005621 e0e0      	LDI  R30,LOW(0)
005622 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E0083:
005623 940e e3a0 	CALL __LOADLOCR6
005625 96a5      	ADIW R28,37
005626 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
005627 940e cad7 	CALL SUBOPT_0x165
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005629 e6eb      	LDI  R30,LOW(107)
00562a 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00562b e020     +LDI R18 , LOW ( 0 )
00562c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
00562d 3028     +CPI R18 , LOW ( 8 )
00562e e0e0     +LDI R30 , HIGH ( 8 )
00562f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005630 f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
005631 940e ca47 	CALL SUBOPT_0x150
005633 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 0121     }
                +
005635 5f2f     +SUBI R18 , LOW ( - 1 )
005636 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005637 cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
005638 940e ca47 	CALL SUBOPT_0x150
00563a 940e cada 	CALL SUBOPT_0x166
                 ; 0009 0124     frameData[i++]      = status;
00563c 85af      	LDD  R26,Y+15
00563d 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
00563e e2ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
00563f e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
005640 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
005641 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
005642 c037      	RJMP _0x20E0082
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
005643 940e cad7 	CALL SUBOPT_0x165
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005645 e7eb      	LDI  R30,LOW(123)
005646 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005647 e020     +LDI R18 , LOW ( 0 )
005648 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
005649 3028     +CPI R18 , LOW ( 8 )
00564a e0e0     +LDI R30 , HIGH ( 8 )
00564b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00564c f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
00564d 940e ca47 	CALL SUBOPT_0x150
00564f 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 0136     }
                +
005651 5f2f     +SUBI R18 , LOW ( - 1 )
005652 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005653 cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
005654 940e ca47 	CALL SUBOPT_0x150
005656 940e cada 	CALL SUBOPT_0x166
                 ; 0009 0139     frameData[i++]      = status;
005658 85af      	LDD  R26,Y+15
005659 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
00565a e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
00565b e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
00565c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
00565d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
00565e c01b      	RJMP _0x20E0082
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
00565f 940e cad7 	CALL SUBOPT_0x165
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005661 e8eb      	LDI  R30,LOW(139)
005662 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005663 e020     +LDI R18 , LOW ( 0 )
005664 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
005665 3028     +CPI R18 , LOW ( 8 )
005666 e0e0     +LDI R30 , HIGH ( 8 )
005667 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005668 f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
005669 940e ca47 	CALL SUBOPT_0x150
00566b 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 014A     }
                +
00566d 5f2f     +SUBI R18 , LOW ( - 1 )
00566e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00566f cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
005670 940e ca47 	CALL SUBOPT_0x150
005672 940e cada 	CALL SUBOPT_0x166
                 ; 0009 014D     frameData[i++]      = status;
005674 85af      	LDD  R26,Y+15
005675 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
005676 e8e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
005677 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
005678 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
005679 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E0082:
00567a 940e e324 	CALL __PUTPARD1
00567c 940e c360 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
00567e 940e ca59 	CALL SUBOPT_0x152
005680 89ed      	LDD  R30,Y+21
005681 93ea      	ST   -Y,R30
005682 940e c840 	CALL SUBOPT_0xF5
005684 940e ca60 	CALL SUBOPT_0x153
                 ; 0009 0151 
                 ; 0009 0152     return 0;
005686 9662      	ADIW R28,18
005687 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
005688 940e ca38 	CALL SUBOPT_0x14F
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00568a e9ea      	LDI  R30,LOW(154)
00568b 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00568c e020     +LDI R18 , LOW ( 0 )
00568d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
00568e 3028     +CPI R18 , LOW ( 8 )
00568f e0e0     +LDI R30 , HIGH ( 8 )
005690 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005691 f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
005692 940e ca47 	CALL SUBOPT_0x150
005694 940e ca4f 	CALL SUBOPT_0x151
                 ; 0009 015E     }
                +
005696 5f2f     +SUBI R18 , LOW ( - 1 )
005697 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005698 cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
005699 01f8      	MOVW R30,R16
                +
00569a 5f0f     +SUBI R16 , LOW ( - 1 )
00569b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00569c 940e cadd 	CALL SUBOPT_0x167
00569e e0e1      	LDI  R30,LOW(1)
00569f 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
0056a0 eaec     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
0056a1 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
0056a2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
0056a3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
0056a4 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
0056a6 940e ca59 	CALL SUBOPT_0x152
0056a8 efef      	LDI  R30,LOW(255)
0056a9 93ea      	ST   -Y,R30
0056aa 940e c840 	CALL SUBOPT_0xF5
0056ac 940e ca60 	CALL SUBOPT_0x153
                 ; 0009 0164 
                 ; 0009 0165     return 0;
0056ae 962e      	ADIW R28,14
0056af 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
0056b0 93aa      	ST   -Y,R26
0056b1 97a8      	SBIW R28,40
0056b2 50d2      	SUBI R29,2
0056b3 940e e399 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
0056b5 940e cae2 	CALL SUBOPT_0x168
0056b7 b7ed      	IN   R30,SPL
0056b8 b7fe      	IN   R31,SPH
0056b9 9731      	SBIW R30,1
0056ba 93fa      	ST   -Y,R31
0056bb 93ea      	ST   -Y,R30
0056bc 933f      	PUSH R19
0056bd 932f      	PUSH R18
0056be 01de      	MOVW R26,R28
0056bf 961b      	ADIW R26,11
0056c0 940e 86b7 	CALL _readDataLogQueue
0056c2 912f      	POP  R18
0056c3 913f      	POP  R19
0056c4 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
0056c5 efef      	LDI  R30,LOW(65535)
0056c6 efff      	LDI  R31,HIGH(65535)
0056c7 17e0      	CP   R30,R16
0056c8 07f1      	CPC  R31,R17
0056c9 f411      	BRNE PC+3
0056ca 940c 5716 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
0056cc 940e c4d5 	CALL SUBOPT_0x6D
0056ce f039      	BREQ _0x12003D
0056cf 940e c430 	CALL SUBOPT_0x53
0056d1 f021      	BREQ _0x12003D
                +
0056d2 3025     +CPI R18 , LOW ( 5 )
0056d3 e0e0     +LDI R30 , HIGH ( 5 )
0056d4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0056d5 f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
0056d6 ede7     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
0056d7 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
0056d8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
0056d9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
0056da c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
0056db e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
0056dc e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
0056dd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
0056de e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
0056df 940e c417 	CALL SUBOPT_0x50
0056e1 01f9      	MOVW R30,R18
0056e2 940e c357 	CALL SUBOPT_0x34
0056e4 940e c420 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
0056e6 940e cae8 	CALL SUBOPT_0x169
0056e8 940e c474 	CALL SUBOPT_0x5E
0056ea 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
0056eb 2311      	TST  R17
0056ec f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
0056ed e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
0056ee e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
0056ef e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
0056f0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
0056f1 940e c47f 	CALL SUBOPT_0x5F
0056f3 940e c26b 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
0056f5 c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
0056f6 940e cae8 	CALL SUBOPT_0x169
0056f8 940e caed 	CALL SUBOPT_0x16A
0056fa 933a      	ST   -Y,R19
0056fb 932a      	ST   -Y,R18
0056fc 940e c489 	CALL SUBOPT_0x61
0056fe 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
0056ff 2311      	TST  R17
005700 f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
005701 940e caf1 	CALL SUBOPT_0x16B
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
005703 940e caf7 	CALL SUBOPT_0x16C
                 ; 0009 018C                 if(res < 0)
005705 f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
005706 940e cb04 	CALL SUBOPT_0x16D
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
005708 eeea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
005709 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
00570a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
00570b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
00570c 940e e324 	CALL __PUTPARD1
00570e 940e c360 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
005710 01de     +MOVW R26 , R28
005711 5da2     +SUBI R26 , LOW ( - 558 )
005712 4fbd     +SBCI R27 , HIGH ( - 558 )
005713 91ac     +LD R26 , X
                 	__GETB2SX 558
005714 940e 86f8 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
005716 940e cae2 	CALL SUBOPT_0x168
005718 b7ed      	IN   R30,SPL
005719 b7fe      	IN   R31,SPH
00571a 93fa      	ST   -Y,R31
00571b 93ea      	ST   -Y,R30
00571c 935f      	PUSH R21
00571d b7ad      	IN   R26,SPL
00571e b7be      	IN   R27,SPH
00571f 934f      	PUSH R20
005720 940e 877a 	CALL _readEventLogQueue
005722 914f      	POP  R20
005723 915f      	POP  R21
005724 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
005725 efef      	LDI  R30,LOW(65535)
005726 efff      	LDI  R31,HIGH(65535)
005727 17e0      	CP   R30,R16
005728 07f1      	CPC  R31,R17
005729 f411      	BRNE PC+3
00572a 940c 576f 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
00572c 940e c4d5 	CALL SUBOPT_0x6D
00572e f019      	BREQ _0x120046
00572f 940e c430 	CALL SUBOPT_0x53
005731 f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
005732 e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
005733 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
005734 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
005735 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
005736 c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
005737 940e cae8 	CALL SUBOPT_0x169
005739 940e c4bb 	CALL SUBOPT_0x69
00573b 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
00573c 2311      	TST  R17
00573d f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
00573e e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
00573f e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005740 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
005741 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
005742 940e c4c6 	CALL SUBOPT_0x6A
005744 940e c26b 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
005746 c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
005747 e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
005748 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
005749 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
00574a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
00574b 940e c417 	CALL SUBOPT_0x50
00574d 940e c44c 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
00574f 940e cae8 	CALL SUBOPT_0x169
005751 940e caed 	CALL SUBOPT_0x16A
005753 935a      	ST   -Y,R21
005754 2fa4      	MOV  R26,R20
005755 940e 83c3 	CALL _LOG_insertEvent
005757 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
005758 2311      	TST  R17
005759 f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
00575a 940e caf1 	CALL SUBOPT_0x16B
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
00575c 940e caf7 	CALL SUBOPT_0x16C
                 ; 0009 01B3                 if(res < 0)
00575e f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
00575f 940e cb04 	CALL SUBOPT_0x16D
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
005761 e9e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
005762 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
005763 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
005764 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
005765 940e e324 	CALL __PUTPARD1
005767 940e c360 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
005769 01de     +MOVW R26 , R28
00576a 5da2     +SUBI R26 , LOW ( - 558 )
00576b 4fbd     +SBCI R27 , HIGH ( - 558 )
00576c 91ac     +LD R26 , X
                 	__GETB2SX 558
00576d 940e 87bf 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
00576f 940e e3a0 	CALL __LOADLOCR6
005771 96af      	ADIW R28,47
005772 5fde      	SUBI R29,-2
005773 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
005774 940e ca29 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
                 _0x12004E:
                +
005776 300f     +CPI R16 , LOW ( 15 )
005777 e0e0     +LDI R30 , HIGH ( 15 )
005778 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
005779 f014      	BRLT PC+3
00577a 940c 5828 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
00577c 940e cb0a 	CALL SUBOPT_0x16E
                +
00577e 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00577f 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
005780 01df      	MOVW R26,R30
005781 940e e2f4 	CALL __GETD1P
005783 940e c2b4 	CALL SUBOPT_0x1C
005785 f039      	BREQ _0x120051
005786 940e cb0a 	CALL SUBOPT_0x16E
                +
005788 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005789 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00578a 81a0      	LD   R26,Z
00578b 30a0      	CPI  R26,LOW(0x0)
00578c f409      	BRNE _0x120052
                 _0x120051:
00578d c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
00578e 940e cb0a 	CALL SUBOPT_0x16E
005790 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005791 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005792 81a0      	LD   R26,Z
005793 30a3      	CPI  R26,LOW(0x3)
005794 f410      	BRSH PC+3
005795 940c 57fc 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
005797 ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
005798 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
005799 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
00579a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
00579b 940e e324 	CALL __PUTPARD1
00579d 940e cb0a 	CALL SUBOPT_0x16E
                +
00579f 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057a0 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057a1 81e0      	LD   R30,Z
0057a2 940e c309 	CALL SUBOPT_0x29
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
0057a4 940e cb0a 	CALL SUBOPT_0x16E
                +
0057a6 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057a7 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057a8 81a0      	LD   R26,Z
0057a9 91e0 1426 	LDS  R30,_logDataWait
0057ab 17ea      	CP   R30,R26
0057ac f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
0057ad eee7     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
0057ae e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
0057af e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
0057b0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
0057b1 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
0057b3 e0e0      	LDI  R30,LOW(0)
0057b4 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
0057b6 c019      	RJMP _0x120055
                 _0x120054:
0057b7 940e cb0a 	CALL SUBOPT_0x16E
                +
0057b9 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057ba 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057bb 81a0      	LD   R26,Z
0057bc 91e0 142b 	LDS  R30,_logEventWait
0057be 17ea      	CP   R30,R26
0057bf f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
0057c0 e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
0057c1 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
0057c2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
0057c3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
0057c4 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
0057c6 e0e0      	LDI  R30,LOW(0)
0057c7 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
0057c9 c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
0057ca 940e cb0a 	CALL SUBOPT_0x16E
                +
0057cc 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057cd 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057ce 81a0      	LD   R26,Z
0057cf dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
0057d0 940e cb0a 	CALL SUBOPT_0x16E
                +
0057d2 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057d3 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057d4 81a0      	LD   R26,Z
0057d5 940e 6a2b 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
0057d7 e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
0057d8 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
0057d9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
0057da e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
0057db 940e cb10 	CALL SUBOPT_0x16F
0057dd 940e cb10 	CALL SUBOPT_0x16F
0057df 940e c2ce 	CALL SUBOPT_0x21
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
0057e1 940e cb1b 	CALL SUBOPT_0x170
0057e3 940e c37d 	CALL SUBOPT_0x3A
0057e5 f029      	BREQ _0x120059
0057e6 940e cb1b 	CALL SUBOPT_0x170
0057e8 940e e389 	CALL __CPD02
0057ea f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
0057eb e2e1      	LDI  R30,LOW(_commLostTimer)
0057ec e1f4      	LDI  R31,HIGH(_commLostTimer)
0057ed 940e cb24 	CALL SUBOPT_0x171
0057ef 940e 41ca 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
0057f1 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
0057f2 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
0057f3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
0057f4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
0057f5 940e cb2b 	CALL SUBOPT_0x172
0057f7 940e cb2b 	CALL SUBOPT_0x172
0057f9 940e c2ce 	CALL SUBOPT_0x21
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
0057fb c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
0057fc 940e cb0a 	CALL SUBOPT_0x16E
0057fe 940e cb39 	CALL SUBOPT_0x173
005800 940e cb3e 	CALL SUBOPT_0x174
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
005802 940e cb0a 	CALL SUBOPT_0x16E
005804 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005805 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005806 01df      	MOVW R26,R30
005807 91ec      	LD   R30,X
005808 5fef      	SUBI R30,-LOW(1)
005809 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
00580a e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
00580b e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
00580c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
00580d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
00580e 940e e324 	CALL __PUTPARD1
005810 940e cb0a 	CALL SUBOPT_0x16E
                +
005812 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005813 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005814 81e0      	LD   R30,Z
005815 940e c309 	CALL SUBOPT_0x29
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
005817 940e cb0a 	CALL SUBOPT_0x16E
005819 940e cb47 	CALL SUBOPT_0x175
00581b 93fa      	ST   -Y,R31
00581c 93ea      	ST   -Y,R30
00581d 940e cb0a 	CALL SUBOPT_0x16E
                +
00581f 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
005820 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
005821 81a0      	LD   R26,Z
005822 e0b0      	LDI  R27,0
005823 940e 40c8 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
005825 5f0f     +SUBI R16 , LOW ( - 1 )
005826 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005827 cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
005828 9109      	LD   R16,Y+
005829 9119      	LD   R17,Y+
00582a 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
00582b 93ba      	ST   -Y,R27
00582c 93aa      	ST   -Y,R26
00582d 97a6      	SBIW R28,38
00582e 50d2      	SUBI R29,2
00582f 940e e399 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
005831 e020     +LDI R18 , LOW ( 0 )
005832 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005833 940e cb4d 	CALL SUBOPT_0x176
005835 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
005836 940e cb4d 	CALL SUBOPT_0x176
005838 9611      	ADIW R26,1
005839 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
00583a 940e c2ea 	CALL SUBOPT_0x25
00583c 93e0 1421 	STS  _commLostTimer,R30
00583e 93f0 1422 	STS  _commLostTimer+1,R31
005840 9360 1423 	STS  _commLostTimer+2,R22
005842 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
005844 940e c68a 	CALL SUBOPT_0xAC
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
005846 31ea      	CPI  R30,LOW(0x1A)
005847 e0a0      	LDI  R26,HIGH(0x1A)
005848 07fa      	CPC  R31,R26
005849 f011      	BREQ PC+3
00584a 940c 58c9 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
00584c 940e cb54 	CALL SUBOPT_0x177
00584e 971d      	SBIW R26,13
00584f f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
005850 eceb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
005851 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
005852 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
005853 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
005854 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
005856 940e cb64 	CALL SUBOPT_0x179
                 ; 0009 0211                 return;
005858 c0d3      	RJMP _0x20E0081
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
005859 940e cb54 	CALL SUBOPT_0x177
00585b 940e cb68 	CALL SUBOPT_0x17A
                 ; 0009 0215             if(payload == NULL){
00585d f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
00585e e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
00585f e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
005860 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
005861 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
005862 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
005864 940e cb6e 	CALL SUBOPT_0x17B
                 ; 0009 0218                 return;
005866 c0c5      	RJMP _0x20E0081
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
005867 940e cb72 	CALL SUBOPT_0x17C
005869 940e cb79 	CALL SUBOPT_0x17D
00586b 940e 611b 	CALL _statusRequestParser
00586d 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
00586e 2333      	TST  R19
00586f f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
005870 e3e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
005871 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
005872 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
005873 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
005874 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
005876 940e cb82 	CALL SUBOPT_0x17E
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
005878 c0b3      	RJMP _0x20E0081
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
005879 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
00587a e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
00587b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
00587c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
00587d 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
00587f e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
005880 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
005881 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
005882 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
005883 940e cb8e 	CALL SUBOPT_0x180
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
005885 eae9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
005886 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
005887 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
005888 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
005889 940e cb94 	CALL SUBOPT_0x181
00588b 940e cb94 	CALL SUBOPT_0x181
00588d 940e c2ce 	CALL SUBOPT_0x21
                 ; 0009 0226             printDebug("statusList      |");
                +
00588f ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
005890 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
005891 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
005892 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
005893 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
005895 e0e0      	LDI  R30,LOW(0)
005896 83ee      	STD  Y+6,R30
005897 83ef      	STD  Y+6+1,R30
                 _0x120064:
005898 01da      	MOVW R26,R20
005899 961b      	ADIW R26,11
00589a 940e cb9a 	CALL SUBOPT_0x182
00589c f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
00589d edeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
00589e e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
00589f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
0058a0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
0058a1 940e e324 	CALL __PUTPARD1
0058a3 01fa      	MOVW R30,R20
0058a4 85a5      	LDD  R26,Z+13
0058a5 85b6      	LDD  R27,Z+14
0058a6 85ea      	LDD  R30,Y+10
0058a7 85fb      	LDD  R31,Y+10+1
0058a8 9631      	ADIW R30,1
0058a9 87ea      	STD  Y+10,R30
0058aa 87fb      	STD  Y+10+1,R31
0058ab 9731      	SBIW R30,1
0058ac 940e cba1 	CALL SUBOPT_0x183
                 ; 0009 022B             }
0058ae 81ee      	LDD  R30,Y+6
0058af 81ff      	LDD  R31,Y+6+1
0058b0 9631      	ADIW R30,1
0058b1 83ee      	STD  Y+6,R30
0058b2 83ff      	STD  Y+6+1,R31
0058b3 cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
0058b4 eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
0058b5 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
0058b6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
0058b7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
0058b8 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
0058ba 940e cba6 	CALL SUBOPT_0x184
0058bc e0a0      	LDI  R26,LOW(0)
0058bd db24      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
0058be 01fa      	MOVW R30,R20
0058bf 85a0      	LDD  R26,Z+8
0058c0 33a0      	CPI  R26,LOW(0x30)
0058c1 f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
0058c2 01da      	MOVW R26,R20
0058c3 940e 635b 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
0058c5 01da      	MOVW R26,R20
0058c6 940e a6eb 	CALL _free
                 ; 0009 0235             break;
0058c8 c460      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
0058c9 32eb      	CPI  R30,LOW(0x2B)
0058ca e0a0      	LDI  R26,HIGH(0x2B)
0058cb 07fa      	CPC  R31,R26
0058cc f011      	BREQ PC+3
0058cd 940c 5914 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
0058cf 940e cb54 	CALL SUBOPT_0x177
0058d1 971e      	SBIW R26,14
0058d2 f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
0058d3 efe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
0058d4 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
0058d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
0058d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
0058d7 c04a      	RJMP _0x20E0080
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
0058d8 e2ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
0058d9 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
0058da e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
0058db e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
0058dc 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
0058de e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
0058df e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
0058e0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
0058e1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
0058e2 940e e324 	CALL __PUTPARD1
                +
0058e4 01fe     +MOVW R30 , R28
0058e5 5cee     +SUBI R30 , LOW ( - 562 )
0058e6 4ffd     +SBCI R31 , HIGH ( - 562 )
0058e7 9001     +LD R0 , Z +
0058e8 81f0     +LD R31 , Z
0058e9 2de0     +MOV R30 , R0
                 	__GETW1SX 562
0058ea 85e2      	LDD  R30,Z+10
0058eb 940e c4a6 	CALL SUBOPT_0x65
                +
0058ed 01fe     +MOVW R30 , R28
0058ee 5cea     +SUBI R30 , LOW ( - 566 )
0058ef 4ffd     +SBCI R31 , HIGH ( - 566 )
0058f0 9001     +LD R0 , Z +
0058f1 81f0     +LD R31 , Z
0058f2 2de0     +MOV R30 , R0
                 	__GETW1SX 566
0058f3 85e3      	LDD  R30,Z+11
0058f4 940e c4a6 	CALL SUBOPT_0x65
                +
0058f6 01fe     +MOVW R30 , R28
0058f7 5ce6     +SUBI R30 , LOW ( - 570 )
0058f8 4ffd     +SBCI R31 , HIGH ( - 570 )
0058f9 9001     +LD R0 , Z +
0058fa 81f0     +LD R31 , Z
0058fb 2de0     +MOV R30 , R0
                 	__GETW1SX 570
0058fc 85e4      	LDD  R30,Z+12
0058fd 940e c4a6 	CALL SUBOPT_0x65
                +
0058ff 01fe     +MOVW R30 , R28
005900 5ce2     +SUBI R30 , LOW ( - 574 )
005901 4ffd     +SBCI R31 , HIGH ( - 574 )
005902 9001     +LD R0 , Z +
005903 81f0     +LD R31 , Z
005904 2de0     +MOV R30 , R0
                 	__GETW1SX 574
005905 85e5      	LDD  R30,Z+13
005906 940e c4a6 	CALL SUBOPT_0x65
005908 940e cab6 	CALL SUBOPT_0x160
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
00590a 940e cb4d 	CALL SUBOPT_0x176
00590c 961a      	ADIW R26,10
00590d 940e 6948 	CALL _setTimeSyncSchema
00590f 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
005910 2fa0      	MOV  R26,R16
005911 940e 6a2b 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
005913 c415      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
005914 33eb      	CPI  R30,LOW(0x3B)
005915 e0a0      	LDI  R26,HIGH(0x3B)
005916 07fa      	CPC  R31,R26
005917 f011      	BREQ PC+3
005918 940c 5980 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
00591a 940e cb54 	CALL SUBOPT_0x177
00591c 971a      	SBIW R26,10
00591d f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
00591e e8e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
00591f e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
005920 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
005921 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0080:
005922 940e e324 	CALL __PUTPARD1
                +
005924 01fe     +MOVW R30 , R28
005925 5de0     +SUBI R30 , LOW ( - 560 )
005926 4ffd     +SBCI R31 , HIGH ( - 560 )
005927 9001     +LD R0 , Z +
005928 81f0     +LD R31 , Z
005929 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00592a 940e c800 	CALL SUBOPT_0xE9
                 ; 0009 0248                 return;
                 _0x20E0081:
00592c 940e e3a0 	CALL __LOADLOCR6
00592e 96e0      	ADIW R28,48
00592f 5fde      	SUBI R29,-2
005930 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
005931 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
005932 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
005933 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
005934 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
005935 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
005937 91a0 142b 	LDS  R26,_logEventWait
005939 30a0      	CPI  R26,LOW(0x0)
00593a f021      	BREQ _0x12006D
00593b 91e0 142b 	LDS  R30,_logEventWait
00593d 17e0      	CP   R30,R16
00593e f009      	BREQ _0x12006E
                 _0x12006D:
00593f c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
005940 eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
005941 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
005942 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
005943 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
005944 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
005946 940e c462 	CALL SUBOPT_0x5A
005948 940e c4bb 	CALL SUBOPT_0x69
00594a 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
00594b 2333      	TST  R19
00594c f42a      	BRPL _0x12006F
                +
00594d e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
00594e e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
00594f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005950 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005951 c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
005952 940e c462 	CALL SUBOPT_0x5A
005954 940e c50f 	CALL SUBOPT_0x72
005956 940e cbab 	CALL SUBOPT_0x185
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005958 f41a      	BRPL _0x120071
005959 940e cbb3 	CALL SUBOPT_0x186
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
00595b c00c      	RJMP _0x120072
                 _0x120071:
                +
00595c e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
00595d e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
00595e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
00595f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005960 940e c4c6 	CALL SUBOPT_0x6A
005962 940e c50f 	CALL SUBOPT_0x72
005964 940e c779 	CALL SUBOPT_0xD3
005966 940e c2ce 	CALL SUBOPT_0x21
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
005968 940e cbb9 	CALL SUBOPT_0x187
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
00596a f462      	BRPL _0x120073
                +
00596b e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
00596c e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
00596d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
00596e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
00596f 940e e324 	CALL __PUTPARD1
005971 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
005972 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
005973 940e c357 	CALL SUBOPT_0x34
005975 940e c26b 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
005977 940e c4ff 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
005979 2fa0      	MOV  R26,R16
00597a 940e 87bf 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
00597c 2fa0      	MOV  R26,R16
00597d 940e 6a2b 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
00597f c3a9      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
005980 34ea      	CPI  R30,LOW(0x4A)
005981 e0a0      	LDI  R26,HIGH(0x4A)
005982 07fa      	CPC  R31,R26
005983 f011      	BREQ PC+3
005984 940c 5ab7 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
005986 eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
005987 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
005988 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
005989 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
00598a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
00598c 940e cb72 	CALL SUBOPT_0x17C
00598e 93fa      	ST   -Y,R31
00598f 93ea      	ST   -Y,R30
005990 940e cb4d 	CALL SUBOPT_0x176
005992 940e 9f0a 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005994 940e cb54 	CALL SUBOPT_0x177
005996 971c      	SBIW R26,12
005997 f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
005998 ede1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
005999 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
00599a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
00599b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
00599c 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
00599e 940e cb64 	CALL SUBOPT_0x179
                 ; 0009 0269                 return;
0059a0 c388      	RJMP _0x20E007F
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
0059a1 e0ae      	LDI  R26,LOW(14)
0059a2 940e cbc6 	CALL SUBOPT_0x188
                 ; 0009 026D             if(payload == NULL){
0059a4 f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
0059a5 940e cbc8 	CALL SUBOPT_0x189
                +
0059a7 e0ee     +LDI R30 , LOW ( 0xE )
0059a8 e0f0     +LDI R31 , HIGH ( 0xE )
0059a9 e060     +LDI R22 , BYTE3 ( 0xE )
0059aa e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
0059ab 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
0059ad 940e cb6e 	CALL SUBOPT_0x17B
                 ; 0009 0270                 return;
0059af c379      	RJMP _0x20E007F
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
0059b0 940e cbd3 	CALL SUBOPT_0x18B
0059b2 940e 6177 	CALL _configManageParser
0059b4 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
0059b5 2333      	TST  R19
0059b6 f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
0059b7 e4e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
0059b8 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
0059b9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
0059ba e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
0059bb 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
0059bd 940e cb82 	CALL SUBOPT_0x17E
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
0059bf c369      	RJMP _0x20E007F
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
0059c0 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
0059c1 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
0059c2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
0059c3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
0059c4 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
0059c6 940e cbd5 	CALL SUBOPT_0x18C
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
0059c8 ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
0059c9 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
0059ca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
0059cb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
0059cc 940e cbda 	CALL SUBOPT_0x18D
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
0059ce 940e cbe0 	CALL SUBOPT_0x18E
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
0059d0 f011      	BREQ PC+3
0059d1 940c 5a40 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
0059d3 01fa      	MOVW R30,R20
0059d4 85a1      	LDD  R26,Z+9
0059d5 940e 6370 	CALL _getConfigLen
0059d7 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
0059d8 2333      	TST  R19
0059d9 f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
0059da ede4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
0059db e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
0059dc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
0059dd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
0059de 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
0059e0 c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
0059e1 01d9      	MOVW R26,R18
0059e2 940e a6d0 	CALL _malloc
0059e4 87ea      	STD  Y+10,R30
0059e5 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
0059e6 9730      	SBIW R30,0
0059e7 f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
0059e8 e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
0059e9 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
0059ea e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
0059eb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
0059ec 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
0059ee 930a      	ST   -Y,R16
0059ef e5a0      	LDI  R26,LOW(80)
0059f0 c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
0059f1 01fa      	MOVW R30,R20
0059f2 85a1      	LDD  R26,Z+9
0059f3 93aa      	ST   -Y,R26
0059f4 85ab      	LDD  R26,Y+11
0059f5 85bc      	LDD  R27,Y+11+1
0059f6 940e 63c2 	CALL _configRead
0059f8 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
0059f9 2400      	CLR  R0
0059fa 1602      	CP   R0,R18
0059fb 0603      	CPC  R0,R19
0059fc f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
0059fd e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
0059fe e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
0059ff e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
005a00 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
005a01 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
005a03 efef      	LDI  R30,LOW(65535)
005a04 efff      	LDI  R31,HIGH(65535)
005a05 17e2      	CP   R30,R18
005a06 07f3      	CPC  R31,R19
005a07 f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005a08 930a      	ST   -Y,R16
005a09 e3a0      	LDI  R26,LOW(48)
005a0a c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
005a0b efee      	LDI  R30,LOW(65534)
005a0c efff      	LDI  R31,HIGH(65534)
005a0d 17e2      	CP   R30,R18
005a0e 07f3      	CPC  R31,R19
005a0f f021      	BREQ _0x120082
005a10 2400      	CLR  R0
005a11 1602      	CP   R0,R18
005a12 0603      	CPC  R0,R19
005a13 f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
005a14 930a      	ST   -Y,R16
005a15 e5a0      	LDI  R26,LOW(80)
005a16 c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
005a17 efed      	LDI  R30,LOW(65533)
005a18 efff      	LDI  R31,HIGH(65533)
005a19 17e2      	CP   R30,R18
005a1a 07f3      	CPC  R31,R19
005a1b f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
005a1c 940e cba6 	CALL SUBOPT_0x184
005a1e 940e cbe4 	CALL SUBOPT_0x18F
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
005a20 c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
005a21 930a      	ST   -Y,R16
005a22 efaf      	LDI  R26,LOW(255)
                 _0x12011A:
005a23 d999      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
005a24 85aa      	LDD  R26,Y+10
005a25 85bb      	LDD  R27,Y+10+1
005a26 940e a6eb 	CALL _free
                 ; 0009 02A3                                             break;
005a28 c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
005a29 940e cba6 	CALL SUBOPT_0x184
005a2b 940e cbea 	CALL SUBOPT_0x190
005a2d 85ee      	LDD  R30,Y+14
005a2e 85ff      	LDD  R31,Y+14+1
005a2f 93fa      	ST   -Y,R31
005a30 93ea      	ST   -Y,R30
005a31 01d9      	MOVW R26,R18
005a32 940e cbf0 	CALL SUBOPT_0x191
                 ; 0009 02AC                                         if(res < 0){
005a34 f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
005a35 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
005a36 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
005a37 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
005a38 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
005a39 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
005a3b 85aa      	LDD  R26,Y+10
005a3c 85bb      	LDD  R27,Y+10+1
005a3d 940e a6eb 	CALL _free
                 ; 0009 02B1                                         break;
005a3f c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
005a40 32e0      	CPI  R30,LOW(0x20)
005a41 e0a0      	LDI  R26,HIGH(0x20)
005a42 07fa      	CPC  R31,R26
005a43 f011      	BREQ PC+3
005a44 940c 5a8b 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
005a46 01fa      	MOVW R30,R20
005a47 85a2      	LDD  R26,Z+10
005a48 85b3      	LDD  R27,Z+11
005a49 940e a6d0 	CALL _malloc
005a4b 940e cbf5 	CALL SUBOPT_0x192
                 ; 0009 02B4                                         if(cnfgWr == NULL){
005a4d 9730      	SBIW R30,0
005a4e f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
005a4f e9e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
005a50 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
005a51 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
005a52 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
005a53 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
005a55 930a      	ST   -Y,R16
005a56 e5a0      	LDI  R26,LOW(80)
005a57 c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
005a58 940e cbf8 	CALL SUBOPT_0x193
005a5a 01fa      	MOVW R30,R20
005a5b 85a4      	LDD  R26,Z+12
005a5c 85b5      	LDD  R27,Z+13
005a5d 93ba      	ST   -Y,R27
005a5e 93aa      	ST   -Y,R26
005a5f 85a2      	LDD  R26,Z+10
005a60 85b3      	LDD  R27,Z+11
005a61 940e a70d 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
005a63 01fa      	MOVW R30,R20
005a64 85a1      	LDD  R26,Z+9
005a65 93aa      	ST   -Y,R26
005a66 940e cbfd 	CALL SUBOPT_0x194
005a68 01fa      	MOVW R30,R20
005a69 85a2      	LDD  R26,Z+10
005a6a 85b3      	LDD  R27,Z+11
005a6b 940e 67f2 	CALL _configWrite
005a6d 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
005a6e 85a8      	LDD  R26,Y+8
005a6f 85b9      	LDD  R27,Y+8+1
005a70 940e a6eb 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
005a72 2333      	TST  R19
005a73 f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
005a74 ece4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
005a75 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
005a76 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
005a77 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
005a78 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
005a7a 940e cba6 	CALL SUBOPT_0x184
005a7c 940e cbe4 	CALL SUBOPT_0x18F
                 ; 0009 02C7                                             break;
005a7e c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
005a7f 940e cba6 	CALL SUBOPT_0x184
005a81 940e cbea 	CALL SUBOPT_0x190
005a83 940e cc02 	CALL SUBOPT_0x195
005a85 940e cbf0 	CALL SUBOPT_0x191
                 ; 0009 02D1                                         if(res < 0){
005a87 f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005a88 940e cc07 	CALL SUBOPT_0x196
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
005a8a c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
005a8b 33e0      	CPI  R30,LOW(0x30)
005a8c e0a0      	LDI  R26,HIGH(0x30)
005a8d 07fa      	CPC  R31,R26
005a8e f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
005a8f 940e 69bf 	CALL _configConfirm
005a91 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
005a92 2333      	TST  R19
005a93 f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
005a94 e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
005a95 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005a96 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
005a97 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
005a98 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
005a9a 940e cba6 	CALL SUBOPT_0x184
005a9c 940e cbe4 	CALL SUBOPT_0x18F
                 ; 0009 02DE                                             break;
005a9e c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
005a9f 940e cba6 	CALL SUBOPT_0x184
005aa1 940e cbea 	CALL SUBOPT_0x190
005aa3 940e cc02 	CALL SUBOPT_0x195
005aa5 940e cbf0 	CALL SUBOPT_0x191
                 ; 0009 02E7                                         if(res < 0){
005aa7 f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005aa8 940e cc07 	CALL SUBOPT_0x196
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
005aaa c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
005aab 940e cc0d 	CALL SUBOPT_0x197
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
005aad 930a      	ST   -Y,R16
005aae e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005aaf d90d      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
005ab0 01da      	MOVW R26,R20
005ab1 940e 6362 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
005ab3 01da      	MOVW R26,R20
005ab4 940e a6eb 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
005ab6 c272      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005ab7 35eb      	CPI  R30,LOW(0x5B)
005ab8 e0a0      	LDI  R26,HIGH(0x5B)
005ab9 07fa      	CPC  R31,R26
005aba f011      	BREQ PC+3
005abb 940c 5b17 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
005abd 940e cb54 	CALL SUBOPT_0x177
005abf 971a      	SBIW R26,10
005ac0 f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005ac1 eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
005ac2 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
005ac3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
005ac4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
005ac5 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 02FA                 return;
005ac7 c261      	RJMP _0x20E007F
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005ac8 ede6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
005ac9 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
005aca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
005acb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
005acc 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005ace 91a0 1426 	LDS  R26,_logDataWait
005ad0 30a0      	CPI  R26,LOW(0x0)
005ad1 f021      	BREQ _0x120093
005ad2 91e0 1426 	LDS  R30,_logDataWait
005ad4 17e0      	CP   R30,R16
005ad5 f009      	BREQ _0x120094
                 _0x120093:
005ad6 c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005ad7 efec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005ad8 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
005ad9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
005ada e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
005adb 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
005add 940e c462 	CALL SUBOPT_0x5A
005adf 940e c474 	CALL SUBOPT_0x5E
005ae1 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
005ae2 2333      	TST  R19
005ae3 f42a      	BRPL _0x120095
                +
005ae4 e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005ae5 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005ae6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005ae7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005ae8 c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
005ae9 940e c462 	CALL SUBOPT_0x5A
005aeb 940e c4e9 	CALL SUBOPT_0x6F
005aed 940e cbab 	CALL SUBOPT_0x185
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005aef f41a      	BRPL _0x120097
005af0 940e cbb3 	CALL SUBOPT_0x186
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
005af2 c00c      	RJMP _0x120098
                 _0x120097:
                +
005af3 e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
005af4 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
005af5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005af6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005af7 940e c47f 	CALL SUBOPT_0x5F
005af9 940e c4e9 	CALL SUBOPT_0x6F
005afb 940e c779 	CALL SUBOPT_0xD3
005afd 940e c2ce 	CALL SUBOPT_0x21
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
005aff 940e cbb9 	CALL SUBOPT_0x187
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
005b01 f462      	BRPL _0x120099
                +
005b02 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005b03 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005b04 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005b05 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
005b06 940e e324 	CALL __PUTPARD1
005b08 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
005b09 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
005b0a 940e c357 	CALL SUBOPT_0x34
005b0c 940e c26b 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
005b0e 940e c4d9 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
005b10 2fa0      	MOV  R26,R16
005b11 940e 86f8 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
005b13 2fa0      	MOV  R26,R16
005b14 940e 6a2b 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
005b16 c212      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
005b17 36ea      	CPI  R30,LOW(0x6A)
005b18 e0a0      	LDI  R26,HIGH(0x6A)
005b19 07fa      	CPC  R31,R26
005b1a f011      	BREQ PC+3
005b1b 940c 5b83 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
005b1d 940e cb54 	CALL SUBOPT_0x177
005b1f 9753      	SBIW R26,19
005b20 f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
005b21 e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
005b22 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
005b23 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
005b24 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
005b25 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
005b27 940e cb64 	CALL SUBOPT_0x179
                 ; 0009 0318                 return;
005b29 c1ff      	RJMP _0x20E007F
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
005b2a e1a1      	LDI  R26,LOW(17)
005b2b 940e cbc6 	CALL SUBOPT_0x188
                 ; 0009 031C             if(payload == NULL){
005b2d f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
005b2e 940e cbc8 	CALL SUBOPT_0x189
                +
005b30 e1e1     +LDI R30 , LOW ( 0x11 )
005b31 e0f0     +LDI R31 , HIGH ( 0x11 )
005b32 e060     +LDI R22 , BYTE3 ( 0x11 )
005b33 e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
005b34 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
005b36 940e cb6e 	CALL SUBOPT_0x17B
                 ; 0009 031F                 return;
005b38 c1f0      	RJMP _0x20E007F
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
005b39 940e cbd3 	CALL SUBOPT_0x18B
005b3b 940e 61fd 	CALL _logManipulationCmdParser
005b3d 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
005b3e 2333      	TST  R19
005b3f f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005b40 940e cc12 	CALL SUBOPT_0x198
                 ; 0009 0325                 free( (void *) payload );
005b42 940e cb82 	CALL SUBOPT_0x17E
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
005b44 c1e4      	RJMP _0x20E007F
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
005b45 e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
005b46 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
005b47 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
005b48 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
005b49 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
005b4b 940e cbd5 	CALL SUBOPT_0x18C
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
005b4d ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
005b4e e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
005b4f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
005b50 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
005b51 940e cc18 	CALL SUBOPT_0x199
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
005b53 eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
005b54 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
005b55 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
005b56 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
005b57 940e e324 	CALL __PUTPARD1
005b59 01fa      	MOVW R30,R20
                +
005b5a 85a5     +LDD R26 , Z + 13
005b5b 85b6     +LDD R27 , Z + 13 + 1
005b5c 8587     +LDD R24 , Z + 13 + 2
005b5d 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005b5e 940e cc23 	CALL SUBOPT_0x19A
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
005b60 01fa      	MOVW R30,R20
005b61 85a0      	LDD  R26,Z+8
005b62 93aa      	ST   -Y,R26
005b63 940e cc27 	CALL SUBOPT_0x19B
005b65 940e e329 	CALL __PUTPARD2
005b67 01fa      	MOVW R30,R20
                +
005b68 85a5     +LDD R26 , Z + 13
005b69 85b6     +LDD R27 , Z + 13 + 1
005b6a 8587     +LDD R24 , Z + 13 + 2
005b6b 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005b6c 940e 692f 	CALL _setLogManipulateSchema
005b6e 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
005b6f 2333      	TST  R19
005b70 f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005b71 efea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005b72 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005b73 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005b74 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005b75 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005b77 940e cba6 	CALL SUBOPT_0x184
005b79 e0a1      	LDI  R26,LOW(1)
005b7a daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
005b7b 940e cba6 	CALL SUBOPT_0x184
005b7d e0a0      	LDI  R26,LOW(0)
005b7e daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
005b7f 01da      	MOVW R26,R20
005b80 940e a6eb 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
005b82 c1a6      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005b83 36eb      	CPI  R30,LOW(0x6B)
005b84 e0a0      	LDI  R26,HIGH(0x6B)
005b85 07fa      	CPC  R31,R26
005b86 f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
005b87 940e cb54 	CALL SUBOPT_0x177
005b89 971c      	SBIW R26,12
005b8a f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
005b8b e3e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
005b8c e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
005b8d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
005b8e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005b8f 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 033F                 return;
005b91 c197      	RJMP _0x20E007F
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005b92 e0aa      	LDI  R26,LOW(10)
005b93 940e cbc6 	CALL SUBOPT_0x188
                 ; 0009 0343             if(payload == NULL){
005b95 f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005b96 940e cbc8 	CALL SUBOPT_0x189
005b98 940e cc2c 	CALL SUBOPT_0x19C
                 ; 0009 0345                 return;
005b9a c18e      	RJMP _0x20E007F
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
005b9b 940e cc31 	CALL SUBOPT_0x19D
005b9d 940e 6285 	CALL _logManipulationAckParser
005b9f 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
005ba0 2333      	TST  R19
005ba1 f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005ba2 940e cc12 	CALL SUBOPT_0x198
                 ; 0009 034B                 free( (void *) payload );
005ba4 01da      	MOVW R26,R20
005ba5 940e a6eb 	CALL _free
                 ; 0009 034C                 return;
005ba7 c181      	RJMP _0x20E007F
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005ba8 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005ba9 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
005baa e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
005bab e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
005bac 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
005bae 940e cbd5 	CALL SUBOPT_0x18C
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005bb0 e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005bb1 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005bb2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005bb3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005bb4 940e cbda 	CALL SUBOPT_0x18D
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
005bb6 01da      	MOVW R26,R20
005bb7 940e a6eb 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005bb9 2fa0      	MOV  R26,R16
005bba 940e 6a2b 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005bbc c16c      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005bbd 37ea      	CPI  R30,LOW(0x7A)
005bbe e0a0      	LDI  R26,HIGH(0x7A)
005bbf 07fa      	CPC  R31,R26
005bc0 f011      	BREQ PC+3
005bc1 940c 5c4b 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005bc3 940e cb54 	CALL SUBOPT_0x177
005bc5 971c      	SBIW R26,12
005bc6 f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005bc7 ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005bc8 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005bc9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005bca e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005bcb 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005bcd 940e cb64 	CALL SUBOPT_0x179
                 ; 0009 035A                 return;
005bcf c159      	RJMP _0x20E007F
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005bd0 e0ad      	LDI  R26,LOW(13)
005bd1 940e cbc6 	CALL SUBOPT_0x188
                 ; 0009 035E             if(payload == NULL){
005bd3 f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005bd4 940e cbc8 	CALL SUBOPT_0x189
005bd6 940e cc37 	CALL SUBOPT_0x19E
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005bd8 940e cb6e 	CALL SUBOPT_0x17B
                 ; 0009 0361                 return;
005bda c14e      	RJMP _0x20E007F
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005bdb 940e cbd3 	CALL SUBOPT_0x18B
005bdd 940e 6296 	CALL _networkMaintenanceParser
005bdf 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005be0 2333      	TST  R19
005be1 f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005be2 efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005be3 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005be4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005be5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005be6 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005be8 940e cb82 	CALL SUBOPT_0x17E
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005bea c13e      	RJMP _0x20E007F
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005beb e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005bec e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005bed e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005bee e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005bef 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005bf1 940e cc3c 	CALL SUBOPT_0x19F
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005bf3 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005bf4 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005bf5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005bf6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005bf7 940e cb94 	CALL SUBOPT_0x181
005bf9 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005bfb 01fa      	MOVW R30,R20
005bfc 940e cc41 	CALL SUBOPT_0x1A0
005bfe f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005bff e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005c00 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005c01 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005c02 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005c03 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005c05 01fa      	MOVW R30,R20
005c06 85a3      	LDD  R26,Z+11
005c07 85b4      	LDD  R27,Z+12
005c08 93ba      	ST   -Y,R27
005c09 93aa      	ST   -Y,R26
005c0a 85a1      	LDD  R26,Z+9
005c0b 85b2      	LDD  R27,Z+10
005c0c 940e 9f0a 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005c0e eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005c0f e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005c10 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005c11 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
005c12 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
005c14 940e cbe0 	CALL SUBOPT_0x18E
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
005c16 f529      	BRNE _0x1200AE
005c17 01fa      	MOVW R30,R20
005c18 85a3      	LDD  R26,Z+11
005c19 85b4      	LDD  R27,Z+12
005c1a 940e 6948 	CALL _setTimeSyncSchema
005c1c 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005c1d 2333      	TST  R19
005c1e f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005c1f eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005c20 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005c21 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
005c22 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
005c23 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005c25 940e cc46 	CALL SUBOPT_0x1A1
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
005c27 01da      	MOVW R26,R20
005c28 940e 6369 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005c2a 01da      	MOVW R26,R20
005c2b 940e a6eb 	CALL _free
                 ; 0009 037C                                             return;
005c2d c0fb      	RJMP _0x20E007F
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005c2e 940e cba6 	CALL SUBOPT_0x184
005c30 e0a0      	LDI  R26,LOW(0)
005c31 da11      	RCALL _ETH_sendNetworkMaintenanceAck
005c32 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
005c33 2333      	TST  R19
005c34 f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
005c35 edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
005c36 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
005c37 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005c38 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005c39 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005c3b c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005c3c 940e cc0d 	CALL SUBOPT_0x197
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005c3e 940e cc46 	CALL SUBOPT_0x1A1
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005c40 01fa      	MOVW R30,R20
005c41 940e cc41 	CALL SUBOPT_0x1A0
005c43 f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
005c44 01da      	MOVW R26,R20
005c45 940e 6369 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
005c47 01da      	MOVW R26,R20
005c48 940e a6eb 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005c4a c0de      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005c4b 38ea      	CPI  R30,LOW(0x8A)
005c4c e0a0      	LDI  R26,HIGH(0x8A)
005c4d 07fa      	CPC  R31,R26
005c4e f011      	BREQ PC+3
005c4f 940c 5cb4 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005c51 940e cb54 	CALL SUBOPT_0x177
005c53 971f      	SBIW R26,15
005c54 f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
005c55 e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
005c56 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
005c57 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
005c58 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
005c59 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
005c5b 940e cb64 	CALL SUBOPT_0x179
                 ; 0009 0398                 return;
005c5d c0cb      	RJMP _0x20E007F
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
005c5e e0ad      	LDI  R26,LOW(13)
005c5f 940e cbc6 	CALL SUBOPT_0x188
                 ; 0009 039C             if(payload == NULL){
005c61 f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
005c62 940e cbc8 	CALL SUBOPT_0x189
005c64 940e cc37 	CALL SUBOPT_0x19E
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
005c66 940e cb6e 	CALL SUBOPT_0x17B
                 ; 0009 039F                 return;
005c68 c0c0      	RJMP _0x20E007F
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
005c69 940e cc31 	CALL SUBOPT_0x19D
005c6b 940e 62ef 	CALL _remoteDeviceControlParser
005c6d 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
005c6e 2333      	TST  R19
005c6f f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
005c70 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
005c71 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
005c72 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
005c73 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005c74 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
005c76 940e cb82 	CALL SUBOPT_0x17E
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
005c78 c0b0      	RJMP _0x20E007F
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005c79 eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005c7a e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005c7b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005c7c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005c7d 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
005c7f 940e cc3c 	CALL SUBOPT_0x19F
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
005c81 ede9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
005c82 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
005c83 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005c84 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005c85 940e cc18 	CALL SUBOPT_0x199
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005c87 940e cbe0 	CALL SUBOPT_0x18E
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005c89 f511      	BRNE _0x1200BA
005c8a 01fa      	MOVW R30,R20
005c8b 940e cc27 	CALL SUBOPT_0x19B
005c8d 940e 697a 	CALL _setMuteAlarm
005c8f 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
005c90 2333      	TST  R19
005c91 f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
005c92 efe1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
005c93 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005c94 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005c95 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005c96 940e cc18 	CALL SUBOPT_0x199
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005c98 940e cc46 	CALL SUBOPT_0x1A1
                 ; 0009 03B3                                                 free( (void *) payload );
005c9a 01da      	MOVW R26,R20
005c9b 940e a6eb 	CALL _free
                 ; 0009 03B4                                                 return;
005c9d c08b      	RJMP _0x20E007F
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
005c9e 940e cba6 	CALL SUBOPT_0x184
005ca0 e0a0      	LDI  R26,LOW(0)
005ca1 d9bd      	RCALL _ETH_remoteDeviceControlAck
005ca2 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
005ca3 2333      	TST  R19
005ca4 f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005ca5 e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005ca6 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005ca7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005ca8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005ca9 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
005cab c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
005cac 940e cc0d 	CALL SUBOPT_0x197
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005cae 940e cc46 	CALL SUBOPT_0x1A1
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
005cb0 01da      	MOVW R26,R20
005cb1 940e a6eb 	CALL _free
                 ; 0009 03C5             break;
005cb3 c075      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005cb4 39eb      	CPI  R30,LOW(0x9B)
005cb5 e0a0      	LDI  R26,HIGH(0x9B)
005cb6 07fa      	CPC  R31,R26
005cb7 f011      	BREQ PC+3
005cb8 940c 5d15 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005cba 940e cb54 	CALL SUBOPT_0x177
005cbc 971c      	SBIW R26,12
005cbd f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005cbe e7eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005cbf e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005cc0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005cc1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005cc2 940e cb5b 	CALL SUBOPT_0x178
                 ; 0009 03C9                 return;
005cc4 c064      	RJMP _0x20E007F
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005cc5 e0aa      	LDI  R26,LOW(10)
005cc6 940e cbc6 	CALL SUBOPT_0x188
                 ; 0009 03CD             if(payload == NULL){
005cc8 f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005cc9 940e cbc8 	CALL SUBOPT_0x189
005ccb 940e cc2c 	CALL SUBOPT_0x19C
                 ; 0009 03CF                 return;
005ccd c05b      	RJMP _0x20E007F
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005cce 940e cc31 	CALL SUBOPT_0x19D
005cd0 d667      	RCALL _clearListParser
005cd1 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005cd2 2333      	TST  R19
005cd3 f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005cd4 ebe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005cd5 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005cd6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005cd7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005cd8 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005cda 01da      	MOVW R26,R20
005cdb 940e a6eb 	CALL _free
                 ; 0009 03D6                 return;
005cdd c04b      	RJMP _0x20E007F
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005cde eee3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005cdf e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005ce0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005ce1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005ce2 940e cb89 	CALL SUBOPT_0x17F
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005ce4 940e cc3c 	CALL SUBOPT_0x19F
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005ce6 e0e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005ce7 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005ce8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005ce9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005cea 940e cbda 	CALL SUBOPT_0x18D
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005cec 01fa      	MOVW R30,R20
005ced 940e cc4a 	CALL SUBOPT_0x1A2
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005cef 30e1      	CPI  R30,LOW(0x1)
005cf0 e0a0      	LDI  R26,HIGH(0x1)
005cf1 07fa      	CPC  R31,R26
005cf2 f4c1      	BRNE _0x1200C5
005cf3 01fa      	MOVW R30,R20
005cf4 85e1      	LDD  R30,Z+9
005cf5 30e0      	CPI  R30,0
005cf6 f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005cf7 e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005cf8 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005cf9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005cfa e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005cfb 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005cfd e0e1      	LDI  R30,LOW(1)
005cfe 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005d00 01da      	MOVW R26,R20
005d01 940e a6eb 	CALL _free
                 ; 0009 03E3                                         return;
005d03 c025      	RJMP _0x20E007F
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005d04 e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005d05 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005d06 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005d07 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005d08 940e cbda 	CALL SUBOPT_0x18D
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005d0a c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005d0b eae6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005d0c e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005d0d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005d0e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005d0f 940e cb8e 	CALL SUBOPT_0x180
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005d11 01da      	MOVW R26,R20
005d12 940e a6eb 	CALL _free
                 ; 0009 03F2             break;
005d14 c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005d15 3fea      	CPI  R30,LOW(0xFA)
005d16 e0a0      	LDI  R26,HIGH(0xFA)
005d17 07fa      	CPC  R31,R26
005d18 f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005d19 eee6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005d1a e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005d1b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005d1c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005d1d 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005d1f c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005d20 e2e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005d21 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005d22 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005d23 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005d24 940e e324 	CALL __PUTPARD1
005d26 2fe1      	MOV  R30,R17
005d27 940e c309 	CALL SUBOPT_0x29
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E007F:
005d29 940e e3a0 	CALL __LOADLOCR6
005d2b 96e0      	ADIW R28,48
005d2c 5fde      	SUBI R29,-2
005d2d 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005d2e 940e cc4d 	CALL SUBOPT_0x1A3
005d30 940e e399 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005d32 940e c1e1 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005d34 efa4      	LDI  R26,LOW(500)
005d35 e0b1      	LDI  R27,HIGH(500)
005d36 940e a6d0 	CALL _malloc
005d38 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005d39 2e00      	MOV  R0,R16
005d3a 2a01      	OR   R0,R17
005d3b f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005d3c e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005d3d e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005d3e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005d3f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005d40 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005d42 2e00      	MOV  R0,R16
005d43 2a01      	OR   R0,R17
005d44 f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005d45 931a      	ST   -Y,R17
005d46 930a      	ST   -Y,R16
005d47 efe3      	LDI  R30,LOW(499)
005d48 e0f1      	LDI  R31,HIGH(499)
005d49 93fa      	ST   -Y,R31
005d4a 93ea      	ST   -Y,R30
005d4b e0aa      	LDI  R26,LOW(10)
005d4c e0b0      	LDI  R27,0
005d4d 940e 4077 	CALL _read_uart0
005d4f 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005d50 2400      	CLR  R0
005d51 1602      	CP   R0,R18
005d52 0603      	CPC  R0,R19
005d53 f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005d54 c066      	RJMP _0x20E007E
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B //    printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 ; 0009 041C //    print_payload(ptr,size);
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CC:
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005d55 01fa      	MOVW R30,R20
005d56 940e cc54 	CALL SUBOPT_0x1A4
                +
005d58 e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005d59 e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005d5a 940e a783 	CALL _strcspn
                +
005d5c 0f4e     +ADD R20 , R30
005d5d 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005d5e 1724     +CP R18 , R20
005d5f 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005d60 f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005d61 c059      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005d62 01fa      	MOVW R30,R20
005d63 9631      	ADIW R30,1
005d64 0fe0      	ADD  R30,R16
005d65 1ff1      	ADC  R31,R17
005d66 81e0      	LD   R30,Z
005d67 e0f0      	LDI  R31,0
005d68 2ffe      	MOV  R31,R30
005d69 e0e0      	LDI  R30,0
005d6a 87e8      	STD  Y+8,R30
005d6b 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005d6c 01fa      	MOVW R30,R20
005d6d 940e c974 	CALL SUBOPT_0x12A
005d6f 85a8      	LDD  R26,Y+8
005d70 85b9      	LDD  R27,Y+8+1
005d71 e0f0      	LDI  R31,0
005d72 2bea      	OR   R30,R26
005d73 2bfb      	OR   R31,R27
005d74 940e cbf5 	CALL SUBOPT_0x192
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005d76 940e cc59 	CALL SUBOPT_0x1A5
005d78 83ee      	STD  Y+6,R30
005d79 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005d7a 81ae      	LDD  R26,Y+6
005d7b 81bf      	LDD  R27,Y+6+1
005d7c 172a      	CP   R18,R26
005d7d 073b      	CPC  R19,R27
005d7e f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005d7f 5f4f     +SUBI R20 , LOW ( - 1 )
005d80 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005d81 834e     +STD Y + 6 , R20
005d82 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005d83 e7ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4852 ) )
005d84 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4852 ) )
005d85 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4852 ) )
005d86 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4852 ) )
                 	__POINTD1FN _0x120000,4852
005d87 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005d89 c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005d8a 01fa      	MOVW R30,R20
005d8b 9633      	ADIW R30,3
005d8c 940e cc54 	CALL SUBOPT_0x1A4
005d8e 85aa      	LDD  R26,Y+10
005d8f 85bb      	LDD  R27,Y+10+1
005d90 d0c9      	RCALL _ETH_checksum
005d91 010f      	MOVW R0,R30
005d92 01fa      	MOVW R30,R20
005d93 9633      	ADIW R30,3
005d94 85a8      	LDD  R26,Y+8
005d95 85b9      	LDD  R27,Y+8+1
005d96 0fea      	ADD  R30,R26
005d97 1ffb      	ADC  R31,R27
005d98 0fe0      	ADD  R30,R16
005d99 1ff1      	ADC  R31,R17
005d9a 81e0      	LD   R30,Z
005d9b 940e cc5e 	CALL SUBOPT_0x1A6
005d9d f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005d9e e8ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4873 ) )
005d9f e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4873 ) )
005da0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4873 ) )
005da1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4873 ) )
                 	__POINTD1FN _0x120000,4873
005da2 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005da4 5f4f     +SUBI R20 , LOW ( - 1 )
005da5 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005da6 834e     +STD Y + 6 , R20
005da7 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005da8 c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005da9 01fa      	MOVW R30,R20
005daa 9633      	ADIW R30,3
005dab 940e cc54 	CALL SUBOPT_0x1A4
005dad 85aa      	LDD  R26,Y+10
005dae 85bb      	LDD  R27,Y+10+1
005daf da7b      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005db0 85e8      	LDD  R30,Y+8
005db1 85f9      	LDD  R31,Y+8+1
005db2 9633      	ADIW R30,3
                +
005db3 0f4e     +ADD R20 , R30
005db4 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005db5 81ae      	LDD  R26,Y+6
005db6 81bf      	LDD  R27,Y+6+1
005db7 17a2      	CP   R26,R18
005db8 07b3      	CPC  R27,R19
005db9 f40c      	BRGE _0x1200CF
005dba cf9a      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E007E:
005dbb 01d8      	MOVW R26,R16
005dbc 940e a6eb 	CALL _free
                 ; 0009 0445 }
005dbe 940e e3a0 	CALL __LOADLOCR6
005dc0 962a      	ADIW R28,10
005dc1 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005dc2 940e cc63 	CALL SUBOPT_0x1A7
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005dc4 e040     +LDI R20 , LOW ( 0 )
005dc5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005dc6 85e9      	LDD  R30,Y+9
005dc7 85fa      	LDD  R31,Y+9+1
005dc8 9631      	ADIW R30,1
005dc9 87e9      	STD  Y+9,R30
005dca 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005dcb 9634      	ADIW R30,4
005dcc 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005dcd 3f45     +CPI R20 , LOW ( 501 )
005dce e0e1     +LDI R30 , HIGH ( 501 )
005dcf 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005dd0 f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005dd1 eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4904 ) )
005dd2 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4904 ) )
005dd3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4904 ) )
005dd4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4904 ) )
                 	__POINTD1FN _0x120000,4904
005dd5 940e c3eb 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005dd7 efef      	LDI  R30,LOW(65535)
005dd8 efff      	LDI  R31,HIGH(65535)
005dd9 c07c      	RJMP _0x20E007D
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005dda 01da      	MOVW R26,R20
005ddb 940e a6d0 	CALL _malloc
005ddd 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005dde 2e02      	MOV  R0,R18
005ddf 2a03      	OR   R0,R19
005de0 f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005de1 eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4956 ) )
005de2 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4956 ) )
005de3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4956 ) )
005de4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4956 ) )
                 	__POINTD1FN _0x120000,4956
005de5 940e c3eb 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005de7 efef      	LDI  R30,LOW(65535)
005de8 efff      	LDI  R31,HIGH(65535)
005de9 c06c      	RJMP _0x20E007D
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005dea 933a      	ST   -Y,R19
005deb 932a      	ST   -Y,R18
005dec e0e0      	LDI  R30,LOW(0)
005ded 93ea      	ST   -Y,R30
005dee 01da      	MOVW R26,R20
005def 940e a752 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005df1 01d9      	MOVW R26,R18
005df2 e7ee      	LDI  R30,LOW(126)
005df3 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005df4 85e9      	LDD  R30,Y+9
005df5 85fa      	LDD  R31,Y+9+1
005df6 940e e1ec 	CALL __ASRW8
                +
005df8 01d9     +MOVW R26 , R18
005df9 9611     +ADIW R26 , 1
005dfa 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005dfb 85e9      	LDD  R30,Y+9
                +
005dfc 01d9     +MOVW R26 , R18
005dfd 9612     +ADIW R26 , 2
005dfe 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005dff 85e8      	LDD  R30,Y+8
005e00 30e0      	CPI  R30,0
005e01 f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005e02 940e 6aa2 	CALL _ETH_generateId
005e04 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005e05 85e8      	LDD  R30,Y+8
                +
005e06 01d9     +MOVW R26 , R18
005e07 9613     +ADIW R26 , 3
005e08 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005e09 01f9      	MOVW R30,R18
005e0a 9634      	ADIW R30,4
005e0b 93fa      	ST   -Y,R31
005e0c 93ea      	ST   -Y,R30
005e0d 85ed      	LDD  R30,Y+13
005e0e 85fe      	LDD  R31,Y+13+1
005e0f 93fa      	ST   -Y,R31
005e10 93ea      	ST   -Y,R30
005e11 85ad      	LDD  R26,Y+13
005e12 85be      	LDD  R27,Y+13+1
005e13 940e a70d 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005e15 01fa      	MOVW R30,R20
005e16 9731      	SBIW R30,1
005e17 0fe2      	ADD  R30,R18
005e18 1ff3      	ADC  R31,R19
005e19 93ff      	PUSH R31
005e1a 93ef      	PUSH R30
005e1b 01f9      	MOVW R30,R18
005e1c 9633      	ADIW R30,3
005e1d 93fa      	ST   -Y,R31
005e1e 93ea      	ST   -Y,R30
005e1f 85ab      	LDD  R26,Y+11
005e20 85bc      	LDD  R27,Y+11+1
005e21 d038      	RCALL _ETH_checksum
005e22 91af      	POP  R26
005e23 91bf      	POP  R27
005e24 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005e25 81ae      	LDD  R26,Y+6
005e26 81bf      	LDD  R27,Y+6+1
005e27 940e e381 	CALL __CPW02
005e29 f41c      	BRGE _0x1200D9
005e2a 85a8      	LDD  R26,Y+8
005e2b 3faf      	CPI  R26,LOW(0xFF)
005e2c f409      	BRNE _0x1200DA
                 _0x1200D9:
005e2d c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005e2e 85e8      	LDD  R30,Y+8
005e2f 93ea      	ST   -Y,R30
005e30 933a      	ST   -Y,R19
005e31 932a      	ST   -Y,R18
005e32 935a      	ST   -Y,R21
005e33 934a      	ST   -Y,R20
005e34 85ab      	LDD  R26,Y+11
005e35 85bc      	LDD  R27,Y+11+1
005e36 940e 69c2 	CALL _ETH_addWaitQueue
005e38 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005e39 2311      	TST  R17
005e3a f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005e3b e1e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5007 ) )
005e3c e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5007 ) )
005e3d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5007 ) )
005e3e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5007 ) )
                 	__POINTD1FN _0x120000,5007
005e3f 940e e324 	CALL __PUTPARD1
005e41 85ec      	LDD  R30,Y+12
005e42 940e c309 	CALL SUBOPT_0x29
                 ; 0009 0472             free(sendPacket);
005e44 01d9      	MOVW R26,R18
005e45 940e c3f3 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005e47 c00e      	RJMP _0x20E007D
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C //    printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 ; 0009 047D //    print_payload(sendPacket,packetLen);
                 ; 0009 047E     write_uart0(sendPacket,packetLen);
                 _0x1200D8:
005e48 933a      	ST   -Y,R19
005e49 932a      	ST   -Y,R18
005e4a 01da      	MOVW R26,R20
005e4b 940e 40c8 	CALL _write_uart0
                 ; 0009 047F     free(sendPacket);
005e4d 01d9      	MOVW R26,R18
005e4e 940e a6eb 	CALL _free
                 ; 0009 0480 
                 ; 0009 0481     //printDebug("-- Completed --\r\n");
                 ; 0009 0482     delay_ms(7);
005e50 940e c238 	CALL SUBOPT_0xA
005e52 940e dfc5 	CALL _delay_ms
                 ; 0009 0483 
                 ; 0009 0484     return 0;
005e54 e0e0      	LDI  R30,LOW(0)
005e55 e0f0      	LDI  R31,HIGH(0)
                 _0x20E007D:
005e56 940e e3a0 	CALL __LOADLOCR6
005e58 962d      	ADIW R28,13
005e59 9508      	RET
                 ; 0009 0485 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0488 {
                 _ETH_checksum:
                 ; 0009 0489     int i;
                 ; 0009 048A     char sum = 0;
                 ; 0009 048B 
                 ; 0009 048C     //printDebug("<checksum> \r\n");
                 ; 0009 048D     for (i=0;i<len;i++){
005e5a 940e c55a 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005e5c e030      	LDI  R19,0
                +
005e5d e000     +LDI R16 , LOW ( 0 )
005e5e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005e5f 81ec      	LDD  R30,Y+4
005e60 81fd      	LDD  R31,Y+4+1
005e61 170e      	CP   R16,R30
005e62 071f      	CPC  R17,R31
005e63 f43c      	BRGE _0x1200DE
                 ; 0009 048E         sum += buf[i];
005e64 01f8      	MOVW R30,R16
005e65 940e cc68 	CALL SUBOPT_0x1A8
005e67 0f3e      	ADD  R19,R30
                 ; 0009 048F         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0490     }
                +
005e68 5f0f     +SUBI R16 , LOW ( - 1 )
005e69 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e6a cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0491     return (0xff - (sum & 0xff));
005e6b 2fe3      	MOV  R30,R19
005e6c 940e c627 	CALL SUBOPT_0x9C
005e6e efaf      	LDI  R26,LOW(255)
005e6f e0b0      	LDI  R27,HIGH(255)
005e70 940e e341 	CALL __SWAPW12
005e72 1bea      	SUB  R30,R26
005e73 0bfb      	SBC  R31,R27
005e74 940e e3a2 	CALL __LOADLOCR4
005e76 9628      	ADIW R28,8
005e77 9508      	RET
                 ; 0009 0492 
                 ; 0009 0493 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049C {
                 _ETH_switchMode:
                 ; 0009 049D     if(mode == MODE_CONF){
005e78 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005e79 81e8      	LD   R30,Y
005e7a 30e0      	CPI  R30,0
005e7b f451      	BRNE _0x1200DF
                 ; 0009 049E         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005e7c e4e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5058 ) )
005e7d e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5058 ) )
005e7e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5058 ) )
005e7f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5058 ) )
                 	__POINTD1FN _0x120000,5058
005e80 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 049F         ETH_CONF;
005e82 91e0 0102 	LDS  R30,258
005e84 68e0      	ORI  R30,0x80
005e85 c009      	RJMP _0x12011C
                 ; 0009 04A0     }
                 ; 0009 04A1     else{
                 _0x1200DF:
                 ; 0009 04A2         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005e86 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 5099 ) )
005e87 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5099 ) )
005e88 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5099 ) )
005e89 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5099 ) )
                 	__POINTD1FN _0x120000,5099
005e8a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 04A3         ETH_NORM;
005e8c 91e0 0102 	LDS  R30,258
005e8e 77ef      	ANDI R30,0x7F
                 _0x12011C:
005e8f 93e0 0102 	STS  258,R30
                 ; 0009 04A4     }
                 ; 0009 04A5 
                 ; 0009 04A6     delay_ms(5);
005e91 940e c608 	CALL SUBOPT_0x98
                 ; 0009 04A7 
                 ; 0009 04A8     ETH_current_mode = mode;
005e93 81e8      	LD   R30,Y
005e94 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04A9 
                 ; 0009 04AA     delay_ms(5);
005e96 940e c608 	CALL SUBOPT_0x98
                 ; 0009 04AB     ETH_OFF;
005e98 98a4      	CBI  0x14,4
                 ; 0009 04AC     delay_ms(1500);
005e99 edac      	LDI  R26,LOW(1500)
005e9a e0b5      	LDI  R27,HIGH(1500)
005e9b 940e dfc5 	CALL _delay_ms
                 ; 0009 04AD     ETH_ON;
005e9d 9aa4      	SBI  0x14,4
                 ; 0009 04AE     #asm("wdr")
005e9e 95a8      	wdr
                 ; 0009 04AF     delay_ms(2000);
005e9f eda0      	LDI  R26,LOW(2000)
005ea0 e0b7      	LDI  R27,HIGH(2000)
005ea1 940e dfc5 	CALL _delay_ms
                 ; 0009 04B0 
                 ; 0009 04B1     return ETH_MODE;
005ea3 91e0 0102 	LDS  R30,258
005ea5 78e0      	ANDI R30,LOW(0x80)
005ea6 9621      	ADIW R28,1
005ea7 9508      	RET
                 ; 0009 04B2 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B5 {
                 _ETH_getConfig:
                 ; 0009 04B6     TIMER   timeout;
                 ; 0009 04B7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B8     int     i=0;
                 ; 0009 04B9 
                 ; 0009 04BA     ETH_switchMode((unsigned char) MODE_CONF);
005ea8 93ba      	ST   -Y,R27
005ea9 93aa      	ST   -Y,R26
005eaa 9728      	SBIW R28,8
005eab e3ee      	LDI  R30,LOW(62)
005eac 83e8      	ST   Y,R30
005ead e5e2      	LDI  R30,LOW(82)
005eae 83e9      	STD  Y+1,R30
005eaf e0ed      	LDI  R30,LOW(13)
005eb0 83ea      	STD  Y+2,R30
005eb1 e0e0      	LDI  R30,LOW(0)
005eb2 83eb      	STD  Y+3,R30
005eb3 940e ca29 	CALL SUBOPT_0x14C
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005eb5 e0a0      	LDI  R26,LOW(0)
005eb6 dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BB     /*
                 ; 0009 04BC     if(mode != MODE_CONF){
                 ; 0009 04BD         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BE         return -1;
                 ; 0009 04BF     }
                 ; 0009 04C0     */
                 ; 0009 04C1 
                 ; 0009 04C2     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005eb7 e000     +LDI R16 , LOW ( 0 )
005eb8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005eb9 3405     +CPI R16 , LOW ( 325 )
005eba e0e1     +LDI R30 , HIGH ( 325 )
005ebb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005ebc f42c      	BRGE _0x1200E3
                 ; 0009 04C3         configRd[i] = 0x00;
005ebd 940e cc6e 	CALL SUBOPT_0x1A9
                 ; 0009 04C4     }
                +
005ebf 5f0f     +SUBI R16 , LOW ( - 1 )
005ec0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ec1 cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C5     configLen       = 0;
005ec2 940e c554 	CALL SUBOPT_0x7E
                 ; 0009 04C6     config_start    = 0;
005ec4 940e cc71 	CALL SUBOPT_0x1AA
                 ; 0009 04C7     config_ready    = 0;
                 ; 0009 04C8     config_end      = 0;
                 ; 0009 04C9     config_response = 0;
                 ; 0009 04CA 
                 ; 0009 04CB     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005ec6 e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5140 ) )
005ec7 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5140 ) )
005ec8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5140 ) )
005ec9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5140 ) )
                 	__POINTD1FN _0x120000,5140
005eca 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 04CC     for(i=0;i<strlen(getInfoCmd);i++){
                +
005ecc e000     +LDI R16 , LOW ( 0 )
005ecd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005ece 940e cc7b 	CALL SUBOPT_0x1AB
005ed0 f440      	BRSH _0x1200E6
                 ; 0009 04CD         putchar3(getInfoCmd[i]);
005ed1 940e c95b 	CALL SUBOPT_0x125
005ed3 91ac      	LD   R26,X
005ed4 940e 413a 	CALL _putchar3
                 ; 0009 04CE     }
                +
005ed6 5f0f     +SUBI R16 , LOW ( - 1 )
005ed7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ed8 cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04CF     printDebug("\r\n");
005ed9 940e cc82 	CALL SUBOPT_0x1AC
                 ; 0009 04D0 
                 ; 0009 04D1     for(i=0;i<strlen(getInfoCmd);i++){
                +
005edb e000     +LDI R16 , LOW ( 0 )
005edc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005edd 940e cc7b 	CALL SUBOPT_0x1AB
005edf f440      	BRSH _0x1200E9
                 ; 0009 04D2         putchar0(getInfoCmd[i]);
005ee0 940e c95b 	CALL SUBOPT_0x125
005ee2 91ac      	LD   R26,X
005ee3 940e 406e 	CALL _putchar0
                 ; 0009 04D3     }
                +
005ee5 5f0f     +SUBI R16 , LOW ( - 1 )
005ee6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ee7 cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D4 
                 ; 0009 04D5     TIMER_setTimer(&timeout, 7);
005ee8 940e c440 	CALL SUBOPT_0x56
005eea 940e cc88 	CALL SUBOPT_0x1AD
                 ; 0009 04D6 
                 ; 0009 04D7     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005eec 91e0 10f1 	LDS  R30,_config_ready
005eee 30e0      	CPI  R30,0
005eef f431      	BRNE _0x1200ED
005ef0 940e c45d 	CALL SUBOPT_0x59
005ef2 940e 41b4 	CALL _TIMER_checkTimerExceed
005ef4 9730      	SBIW R30,0
005ef5 f009      	BREQ _0x1200EE
                 _0x1200ED:
005ef6 c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D8        delay_ms(50);
005ef7 940e c531 	CALL SUBOPT_0x7A
                 ; 0009 04D9        #asm("wdr")
005ef9 95a8      	wdr
                 ; 0009 04DA     }
005efa cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DB 
                 ; 0009 04DC     memcpy(ptr,&configRd[0],configLen);
005efb 940e cc8e 	CALL SUBOPT_0x1AE
005efd 940e cc93 	CALL SUBOPT_0x1AF
                 ; 0009 04DD 
                 ; 0009 04DE     *buflen    = configLen;
005eff 91e0 10ee 	LDS  R30,_configLen
005f01 91f0 10ef 	LDS  R31,_configLen+1
005f03 85aa      	LDD  R26,Y+10
005f04 85bb      	LDD  R27,Y+10+1
005f05 93ed      	ST   X+,R30
005f06 93fc      	ST   X,R31
                 ; 0009 04DF 
                 ; 0009 04E0     ETH_switchMode(MODE_NORM);
005f07 e8a0      	LDI  R26,LOW(128)
005f08 df6f      	RCALL _ETH_switchMode
                 ; 0009 04E1 
                 ; 0009 04E2     /*
                 ; 0009 04E3     if(mode != MODE_NORM){
                 ; 0009 04E4         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E5         return -1;
                 ; 0009 04E6     }
                 ; 0009 04E7     */
                 ; 0009 04E8 
                 ; 0009 04E9     if(config_response == 'S'){
005f09 91a0 10f3 	LDS  R26,_config_response
005f0b 35a3      	CPI  R26,LOW(0x53)
005f0c f419      	BRNE _0x1200EF
                 ; 0009 04EA         return 0;
005f0d e0e0      	LDI  R30,LOW(0)
005f0e e0f0      	LDI  R31,HIGH(0)
005f0f c002      	RJMP _0x20E007C
                 ; 0009 04EB     }
                 ; 0009 04EC     else{
                 _0x1200EF:
                 ; 0009 04ED         return -1;
005f10 efef      	LDI  R30,LOW(65535)
005f11 efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EE     }
                 ; 0009 04EF }
                 _0x20E007C:
005f12 8119      	LDD  R17,Y+1
005f13 8108      	LDD  R16,Y+0
005f14 962e      	ADIW R28,14
005f15 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F2 {
                 _ETH_setConfig:
                 ; 0009 04F3     TIMER   timeout;
                 ; 0009 04F4     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F5     char    setInfoCmd[] = ">W";
                 ; 0009 04F6     int     i=0;
                 ; 0009 04F7     char    setStr[30];
                 ; 0009 04F8     int     readLen=0;
                 ; 0009 04F9     char    *ptr;
                 ; 0009 04FA 
                 ; 0009 04FB     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005f16 93ba      	ST   -Y,R27
005f17 93aa      	ST   -Y,R26
005f18 97a9      	SBIW R28,41
005f19 e3ee      	LDI  R30,LOW(62)
005f1a 8fee      	STD  Y+30,R30
005f1b e5e7      	LDI  R30,LOW(87)
005f1c 8fef      	STD  Y+31,R30
005f1d e0e0      	LDI  R30,LOW(0)
005f1e a3e8      	STD  Y+32,R30
005f1f e3ee      	LDI  R30,LOW(62)
005f20 a3e9      	STD  Y+33,R30
005f21 e5e2      	LDI  R30,LOW(82)
005f22 a3ea      	STD  Y+34,R30
005f23 e0ed      	LDI  R30,LOW(13)
005f24 a3eb      	STD  Y+35,R30
005f25 e0e0      	LDI  R30,LOW(0)
005f26 a3ec      	STD  Y+36,R30
005f27 940e c3de 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005f29 e020     +LDI R18 , LOW ( 0 )
005f2a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005f2b e4a5      	LDI  R26,LOW(325)
005f2c e0b1      	LDI  R27,HIGH(325)
005f2d 940e cb68 	CALL SUBOPT_0x17A
                 ; 0009 04FC     if(ptr == NULL){
005f2f f449      	BRNE _0x1200F1
                 ; 0009 04FD         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005f30 ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5174 ) )
005f31 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5174 ) )
005f32 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5174 ) )
005f33 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5174 ) )
                 	__POINTD1FN _0x120000,5174
005f34 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 04FE         return -1;
005f36 efef      	LDI  R30,LOW(65535)
005f37 efff      	LDI  R31,HIGH(65535)
005f38 c1c7      	RJMP _0x20E007B
                 ; 0009 04FF     }
                 ; 0009 0500 
                 ; 0009 0501     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005f39 e0a0      	LDI  R26,LOW(0)
005f3a df3d      	RCALL _ETH_switchMode
                 ; 0009 0502 
                 ; 0009 0503     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0504     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005f3b e000     +LDI R16 , LOW ( 0 )
005f3c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005f3d 3405     +CPI R16 , LOW ( 325 )
005f3e e0e1     +LDI R30 , HIGH ( 325 )
005f3f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005f40 f42c      	BRGE _0x1200F4
                 ; 0009 0505         configRd[i] = 0x00;
005f41 940e cc6e 	CALL SUBOPT_0x1A9
                 ; 0009 0506     }
                +
005f43 5f0f     +SUBI R16 , LOW ( - 1 )
005f44 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f45 cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0507     configLen       = 0;
005f46 940e c554 	CALL SUBOPT_0x7E
                 ; 0009 0508     config_start    = 0;
005f48 940e cc71 	CALL SUBOPT_0x1AA
                 ; 0009 0509     config_ready    = 0;
                 ; 0009 050A     config_end      = 0;
                 ; 0009 050B     config_response = 0;
                 ; 0009 050C 
                 ; 0009 050D     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005f4a eeee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5224 ) )
005f4b e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5224 ) )
005f4c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5224 ) )
005f4d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5224 ) )
                 	__POINTD1FN _0x120000,5224
005f4e 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 050E     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f50 e000     +LDI R16 , LOW ( 0 )
005f51 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005f52 940e cc9a 	CALL SUBOPT_0x1B0
005f54 f450      	BRSH _0x1200F7
                 ; 0009 050F         putchar3(getInfoCmd[i]);
005f55 01de      	MOVW R26,R28
005f56 9697      	ADIW R26,39
005f57 0fa0      	ADD  R26,R16
005f58 1fb1      	ADC  R27,R17
005f59 91ac      	LD   R26,X
005f5a 940e 413a 	CALL _putchar3
                 ; 0009 0510     }
                +
005f5c 5f0f     +SUBI R16 , LOW ( - 1 )
005f5d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f5e cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0511     printDebug("\r\n");
005f5f 940e cc82 	CALL SUBOPT_0x1AC
                 ; 0009 0512 
                 ; 0009 0513     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f61 e000     +LDI R16 , LOW ( 0 )
005f62 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005f63 940e cc9a 	CALL SUBOPT_0x1B0
005f65 f450      	BRSH _0x1200FA
                 ; 0009 0514         putchar0(getInfoCmd[i]);
005f66 01de      	MOVW R26,R28
005f67 9697      	ADIW R26,39
005f68 0fa0      	ADD  R26,R16
005f69 1fb1      	ADC  R27,R17
005f6a 91ac      	LD   R26,X
005f6b 940e 406e 	CALL _putchar0
                 ; 0009 0515     }
                +
005f6d 5f0f     +SUBI R16 , LOW ( - 1 )
005f6e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f6f cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0516 
                 ; 0009 0517     TIMER_setTimer(&timeout, 7);
005f70 01fe      	MOVW R30,R28
005f71 96bb      	ADIW R30,43
005f72 93fa      	ST   -Y,R31
005f73 93ea      	ST   -Y,R30
005f74 940e cc88 	CALL SUBOPT_0x1AD
                 ; 0009 0518 
                 ; 0009 0519     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005f76 91e0 10f1 	LDS  R30,_config_ready
005f78 30e0      	CPI  R30,0
005f79 f419      	BRNE _0x1200FE
005f7a 940e cca1 	CALL SUBOPT_0x1B1
005f7c f009      	BREQ _0x1200FF
                 _0x1200FE:
005f7d c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051A        delay_ms(50);
005f7e 940e c531 	CALL SUBOPT_0x7A
                 ; 0009 051B        #asm("wdr")
005f80 95a8      	wdr
                 ; 0009 051C     }
005f81 cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051D 
                 ; 0009 051E     memcpy(ptr,&configRd[0],configLen);
005f82 935a      	ST   -Y,R21
005f83 934a      	ST   -Y,R20
005f84 940e cc93 	CALL SUBOPT_0x1AF
                 ; 0009 051F     readLen = configLen;
                +
005f86 9120 10ee+LDS R18 , 0 + ( _configLen )
005f88 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0520 
                 ; 0009 0521     if(config_response != 'S'){
005f8a 91a0 10f3 	LDS  R26,_config_response
005f8c 35a3      	CPI  R26,LOW(0x53)
005f8d f051      	BREQ _0x120100
                 ; 0009 0522         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005f8e e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5258 ) )
005f8f e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5258 ) )
005f90 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5258 ) )
005f91 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5258 ) )
                 	__POINTD1FN _0x120000,5258
005f92 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0523         free( ptr );
005f94 01da      	MOVW R26,R20
005f95 940e c3f3 	CALL SUBOPT_0x4A
                 ; 0009 0524         return -1;
005f97 c168      	RJMP _0x20E007B
                 ; 0009 0525     }
                 ; 0009 0526 
                 ; 0009 0527     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0528     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 0529                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052A                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052B                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052C                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052D                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052E                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 052F                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0530                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0531                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0532                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0533                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0534                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005f98 940e c440 	CALL SUBOPT_0x56
                +
005f9a e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5311 ) )
005f9b e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5311 ) )
005f9c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5311 ) )
005f9d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5311 ) )
                 	__POINTD1FN _0x120000,5311
005f9e 940e e324 	CALL __PUTPARD1
005fa0 adab      	LDD  R26,Y+59
005fa1 adbc      	LDD  R27,Y+59+1
005fa2 940e cca9 	CALL SUBOPT_0x1B2
005fa4 adeb      	LDD  R30,Y+59
005fa5 adfc      	LDD  R31,Y+59+1
005fa6 940e ccae 	CALL SUBOPT_0x1B3
005fa8 adeb      	LDD  R30,Y+59
005fa9 adfc      	LDD  R31,Y+59+1
005faa 940e ccb6 	CALL SUBOPT_0x1B4
005fac 940e ccbf 	CALL SUBOPT_0x1B5
005fae 940e ccc6 	CALL SUBOPT_0x1B6
005fb0 940e ccbf 	CALL SUBOPT_0x1B5
005fb2 940e cccb 	CALL SUBOPT_0x1B7
005fb4 940e ccbf 	CALL SUBOPT_0x1B5
005fb6 940e ccd3 	CALL SUBOPT_0x1B8
005fb8 940e ccdc 	CALL SUBOPT_0x1B9
005fba 940e cce3 	CALL SUBOPT_0x1BA
005fbc 940e ccdc 	CALL SUBOPT_0x1B9
005fbe 940e cce8 	CALL SUBOPT_0x1BB
005fc0 940e ccdc 	CALL SUBOPT_0x1B9
005fc2 940e cc4a 	CALL SUBOPT_0x1A2
005fc4 940e ccf0 	CALL SUBOPT_0x1BC
005fc6 940e ccf7 	CALL SUBOPT_0x1BD
005fc8 940e ccfe 	CALL SUBOPT_0x1BE
005fca 940e ccf7 	CALL SUBOPT_0x1BD
005fcc 940e cd03 	CALL SUBOPT_0x1BF
005fce 940e ccf7 	CALL SUBOPT_0x1BD
005fd0 940e cd0b 	CALL SUBOPT_0x1C0
                +
005fd2 01de     +MOVW R26 , R28
005fd3 5ba7     +SUBI R26 , LOW ( - 73 )
005fd4 4fbf     +SBCI R27 , HIGH ( - 73 )
005fd5 900d     +LD R0 , X +
005fd6 91bc     +LD R27 , X
005fd7 2da0     +MOV R26 , R0
                 	__GETW2SX 73
005fd8 940e cca9 	CALL SUBOPT_0x1B2
005fda 940e cd0e 	CALL SUBOPT_0x1C1
005fdc 940e ccae 	CALL SUBOPT_0x1B3
005fde 940e cd0e 	CALL SUBOPT_0x1C1
005fe0 940e ccb6 	CALL SUBOPT_0x1B4
005fe2 940e cd15 	CALL SUBOPT_0x1C2
005fe4 940e ccc6 	CALL SUBOPT_0x1B6
005fe6 940e cd15 	CALL SUBOPT_0x1C2
005fe8 940e cccb 	CALL SUBOPT_0x1B7
005fea 940e cd15 	CALL SUBOPT_0x1C2
005fec 940e ccd3 	CALL SUBOPT_0x1B8
005fee 940e cd1c 	CALL SUBOPT_0x1C3
005ff0 940e cce3 	CALL SUBOPT_0x1BA
005ff2 940e cd1c 	CALL SUBOPT_0x1C3
005ff4 940e cce8 	CALL SUBOPT_0x1BB
005ff6 940e cd1c 	CALL SUBOPT_0x1C3
005ff8 940e cc4a 	CALL SUBOPT_0x1A2
005ffa 940e ccf0 	CALL SUBOPT_0x1BC
005ffc 940e cd23 	CALL SUBOPT_0x1C4
005ffe 940e ccfe 	CALL SUBOPT_0x1BE
006000 940e cd23 	CALL SUBOPT_0x1C4
006002 940e cd03 	CALL SUBOPT_0x1BF
006004 940e cd23 	CALL SUBOPT_0x1C4
006006 940e cd0b 	CALL SUBOPT_0x1C0
                +
006008 01de     +MOVW R26 , R28
006009 5aa9     +SUBI R26 , LOW ( - 87 )
00600a 4fbf     +SBCI R27 , HIGH ( - 87 )
00600b 900d     +LD R0 , X +
00600c 91bc     +LD R27 , X
00600d 2da0     +MOV R26 , R0
                 	__GETW2SX 87
00600e 940e cca9 	CALL SUBOPT_0x1B2
006010 940e cd2a 	CALL SUBOPT_0x1C5
006012 940e ccae 	CALL SUBOPT_0x1B3
006014 940e cd2a 	CALL SUBOPT_0x1C5
006016 940e ccb6 	CALL SUBOPT_0x1B4
006018 940e cd31 	CALL SUBOPT_0x1C6
00601a 940e ccc6 	CALL SUBOPT_0x1B6
00601c 940e cd31 	CALL SUBOPT_0x1C6
00601e 940e cccb 	CALL SUBOPT_0x1B7
006020 940e cd31 	CALL SUBOPT_0x1C6
006022 940e ccd3 	CALL SUBOPT_0x1B8
006024 940e cd38 	CALL SUBOPT_0x1C7
006026 940e cce3 	CALL SUBOPT_0x1BA
006028 940e cd38 	CALL SUBOPT_0x1C7
00602a 940e cce8 	CALL SUBOPT_0x1BB
00602c 940e cd38 	CALL SUBOPT_0x1C7
00602e 940e cc4a 	CALL SUBOPT_0x1A2
006030 940e ccf0 	CALL SUBOPT_0x1BC
006032 940e cd3f 	CALL SUBOPT_0x1C8
006034 940e ccfe 	CALL SUBOPT_0x1BE
006036 940e cd3f 	CALL SUBOPT_0x1C8
006038 940e cd03 	CALL SUBOPT_0x1BF
00603a 940e cd3f 	CALL SUBOPT_0x1C8
00603c 940e cd0b 	CALL SUBOPT_0x1C0
00603e e380      	LDI  R24,48
00603f 940e c107 	CALL _sprintf
006041 96e6      	ADIW R28,54
                 ; 0009 0535 
                 ; 0009 0536     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
006042 940e cd46 	CALL SUBOPT_0x1C9
006044 940e c26b 	CALL SUBOPT_0x12
                 ; 0009 0537 
                 ; 0009 0538     memcpy((ptr+14),&setStr[0],24);
006046 01fa      	MOVW R30,R20
006047 963e      	ADIW R30,14
006048 940e cd50 	CALL SUBOPT_0x1CA
00604a e1a8      	LDI  R26,LOW(24)
00604b 940e cd57 	CALL SUBOPT_0x1CB
                 ; 0009 0539 
                 ; 0009 053A     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053B                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053C                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053D                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053E                 (server[9]*100) + (server[10]*10) + server[11]);
00604d 940e c440 	CALL SUBOPT_0x56
                +
00604f e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5343 ) )
006050 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5343 ) )
006051 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5343 ) )
006052 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5343 ) )
                 	__POINTD1FN _0x120000,5343
006053 940e e324 	CALL __PUTPARD1
006055 a9ad      	LDD  R26,Y+53
006056 a9be      	LDD  R27,Y+53+1
006057 940e cca9 	CALL SUBOPT_0x1B2
006059 a9ed      	LDD  R30,Y+53
00605a a9fe      	LDD  R31,Y+53+1
00605b 940e ccae 	CALL SUBOPT_0x1B3
00605d a9ed      	LDD  R30,Y+53
00605e a9fe      	LDD  R31,Y+53+1
00605f 940e ccb6 	CALL SUBOPT_0x1B4
006061 ade9      	LDD  R30,Y+57
006062 adfa      	LDD  R31,Y+57+1
006063 940e ccc6 	CALL SUBOPT_0x1B6
006065 ade9      	LDD  R30,Y+57
006066 adfa      	LDD  R31,Y+57+1
006067 940e cccb 	CALL SUBOPT_0x1B7
006069 ade9      	LDD  R30,Y+57
00606a adfa      	LDD  R31,Y+57+1
00606b 940e ccd3 	CALL SUBOPT_0x1B8
00606d aded      	LDD  R30,Y+61
00606e adfe      	LDD  R31,Y+61+1
00606f 940e cce3 	CALL SUBOPT_0x1BA
006071 aded      	LDD  R30,Y+61
006072 adfe      	LDD  R31,Y+61+1
006073 940e cce8 	CALL SUBOPT_0x1BB
006075 aded      	LDD  R30,Y+61
006076 adfe      	LDD  R31,Y+61+1
006077 940e cc4a 	CALL SUBOPT_0x1A2
006079 940e ccf0 	CALL SUBOPT_0x1BC
00607b 940e cd5a 	CALL SUBOPT_0x1CC
00607d 940e ccfe 	CALL SUBOPT_0x1BE
00607f 940e cd5a 	CALL SUBOPT_0x1CC
006081 940e cd03 	CALL SUBOPT_0x1BF
006083 940e cd5a 	CALL SUBOPT_0x1CC
006085 940e cd0b 	CALL SUBOPT_0x1C0
006087 e180      	LDI  R24,16
006088 940e c107 	CALL _sprintf
00608a 9666      	ADIW R28,22
                 ; 0009 053F 
                 ; 0009 0540     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
00608b 940e cd46 	CALL SUBOPT_0x1C9
00608d 940e c26b 	CALL SUBOPT_0x12
                 ; 0009 0541 
                 ; 0009 0542     memcpy((ptr+42),&setStr[0],8);
00608f 01fa      	MOVW R30,R20
006090 96ba      	ADIW R30,42
006091 940e cd50 	CALL SUBOPT_0x1CA
006093 e0a8      	LDI  R26,LOW(8)
006094 940e cd57 	CALL SUBOPT_0x1CB
                 ; 0009 0543 
                 ; 0009 0544 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0545 //    for(i=0;i<configLen;i++){
                 ; 0009 0546 //        putchar3(ptr[i]);
                 ; 0009 0547 //    }
                 ; 0009 0548 //    printDebug("\r\n\---\r\n");
                 ; 0009 0549 
                 ; 0009 054A     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054B     for(i=0;i<CONF_READ_BUFFER;i++){
                +
006096 e000     +LDI R16 , LOW ( 0 )
006097 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
006098 3405     +CPI R16 , LOW ( 325 )
006099 e0e1     +LDI R30 , HIGH ( 325 )
00609a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
00609b f42c      	BRGE _0x120103
                 ; 0009 054C         configRd[i] = 0x00;
00609c 940e cc6e 	CALL SUBOPT_0x1A9
                 ; 0009 054D     }
                +
00609e 5f0f     +SUBI R16 , LOW ( - 1 )
00609f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060a0 cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054E     configLen       = 0;
0060a1 940e c554 	CALL SUBOPT_0x7E
                 ; 0009 054F     config_start    = 0;
0060a3 940e cc71 	CALL SUBOPT_0x1AA
                 ; 0009 0550     config_ready    = 0;
                 ; 0009 0551     config_end      = 0;
                 ; 0009 0552     config_response = 0;
                 ; 0009 0553 
                 ; 0009 0554     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
0060a5 e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5394 ) )
0060a6 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5394 ) )
0060a7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5394 ) )
0060a8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5394 ) )
                 	__POINTD1FN _0x120000,5394
0060a9 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0555     for(i=0;i<strlen(setInfoCmd);i++){
                +
0060ab e000     +LDI R16 , LOW ( 0 )
0060ac e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
0060ad 01de      	MOVW R26,R28
0060ae 9694      	ADIW R26,36
0060af 940e a799 	CALL _strlen
0060b1 170e      	CP   R16,R30
0060b2 071f      	CPC  R17,R31
0060b3 f488      	BRSH _0x120106
                 ; 0009 0556         putchar0(setInfoCmd[i]);
0060b4 01de      	MOVW R26,R28
0060b5 9694      	ADIW R26,36
0060b6 0fa0      	ADD  R26,R16
0060b7 1fb1      	ADC  R27,R17
0060b8 91ac      	LD   R26,X
0060b9 940e 406e 	CALL _putchar0
                 ; 0009 0557         putchar3(setInfoCmd[i]);
0060bb 01de      	MOVW R26,R28
0060bc 9694      	ADIW R26,36
0060bd 0fa0      	ADD  R26,R16
0060be 1fb1      	ADC  R27,R17
0060bf 91ac      	LD   R26,X
0060c0 940e 413a 	CALL _putchar3
                 ; 0009 0558     }
                +
0060c2 5f0f     +SUBI R16 , LOW ( - 1 )
0060c3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060c4 cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 0559     for(i=12;i<readLen;i++){
                +
0060c5 e00c     +LDI R16 , LOW ( 12 )
0060c6 e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
0060c7 1702     +CP R16 , R18
0060c8 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
0060c9 f47c      	BRGE _0x120109
                 ; 0009 055A         putchar0(ptr[i]);
0060ca 01f8      	MOVW R30,R16
0060cb 0fe4      	ADD  R30,R20
0060cc 1ff5      	ADC  R31,R21
0060cd 81a0      	LD   R26,Z
0060ce 940e 406e 	CALL _putchar0
                 ; 0009 055B         putchar3(ptr[i]);
0060d0 01f8      	MOVW R30,R16
0060d1 0fe4      	ADD  R30,R20
0060d2 1ff5      	ADC  R31,R21
0060d3 81a0      	LD   R26,Z
0060d4 940e 413a 	CALL _putchar3
                 ; 0009 055C     }
                +
0060d6 5f0f     +SUBI R16 , LOW ( - 1 )
0060d7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060d8 cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055D     putchar0('\r');
0060d9 e0ad      	LDI  R26,LOW(13)
0060da 940e 406e 	CALL _putchar0
                 ; 0009 055E     printDebug("\r\n\---\r\n");
                +
0060dc ebea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5428 ) )
0060dd e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5428 ) )
0060de e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5428 ) )
0060df e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5428 ) )
                 	__POINTD1FN _0x120000,5428
0060e0 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 055F 
                 ; 0009 0560     TIMER_setTimer(&timeout, 10);
0060e2 01fe      	MOVW R30,R28
0060e3 96bb      	ADIW R30,43
0060e4 940e c2f8 	CALL SUBOPT_0x27
                 ; 0009 0561 
                 ; 0009 0562     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
0060e6 91e0 10f1 	LDS  R30,_config_ready
0060e8 30e0      	CPI  R30,0
0060e9 f419      	BRNE _0x12010D
0060ea 940e cca1 	CALL SUBOPT_0x1B1
0060ec f009      	BREQ _0x12010E
                 _0x12010D:
0060ed c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0563        delay_ms(50);
0060ee 940e c531 	CALL SUBOPT_0x7A
                 ; 0009 0564        #asm("wdr")
0060f0 95a8      	wdr
                 ; 0009 0565     }
0060f1 cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0566 
                 ; 0009 0567     ETH_switchMode(MODE_NORM);
0060f2 e8a0      	LDI  R26,LOW(128)
0060f3 dd84      	RCALL _ETH_switchMode
                 ; 0009 0568 
                 ; 0009 0569     free( ptr );
0060f4 01da      	MOVW R26,R20
0060f5 940e a6eb 	CALL _free
                 ; 0009 056A 
                 ; 0009 056B     if(config_response == 'S'){
0060f7 91a0 10f3 	LDS  R26,_config_response
0060f9 35a3      	CPI  R26,LOW(0x53)
0060fa f419      	BRNE _0x12010F
                 ; 0009 056C         return 0;
0060fb e0e0      	LDI  R30,LOW(0)
0060fc e0f0      	LDI  R31,HIGH(0)
0060fd c002      	RJMP _0x20E007B
                 ; 0009 056D     }
                 ; 0009 056E     else{
                 _0x12010F:
                 ; 0009 056F         return -1;
0060fe efef      	LDI  R30,LOW(65535)
0060ff efff      	LDI  R31,HIGH(65535)
                 ; 0009 0570     }
                 ; 0009 0571 }
                 _0x20E007B:
006100 940e e3a0 	CALL __LOADLOCR6
006102 96e7      	ADIW R28,55
006103 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0574 {
                 _ETH_reset:
                 ; 0009 0575     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
006104 ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 5436 ) )
006105 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5436 ) )
006106 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5436 ) )
006107 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5436 ) )
                 	__POINTD1FN _0x120000,5436
006108 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 0576     ETH_RESET   = 0;
00610a 9872      	CBI  0xE,2
                 ; 0009 0577     delay_ms(3000);
00610b eba8      	LDI  R26,LOW(3000)
00610c e0bb      	LDI  R27,HIGH(3000)
00610d 940e dfc5 	CALL _delay_ms
                 ; 0009 0578     ETH_RESET   = 1;
00610f 9a72      	SBI  0xE,2
                 ; 0009 0579     delay_ms(1);
006110 940e c51f 	CALL SUBOPT_0x75
006112 940e dfc5 	CALL _delay_ms
                 ; 0009 057A     printDebug("...Done\r\n");
                +
006114 efe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5488 ) )
006115 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5488 ) )
006116 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5488 ) )
006117 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5488 ) )
                 	__POINTD1FN _0x120000,5488
006118 940e c1f5 	CALL SUBOPT_0x3
                 ; 0009 057B }
00611a 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
00611b 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00611d 940e cd61 	CALL SUBOPT_0x1CD
                 _0x140004:
                +
00611f 3008     +CPI R16 , LOW ( 8 )
006120 e0e0     +LDI R30 , HIGH ( 8 )
006121 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006122 f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
006123 940e cd66 	CALL SUBOPT_0x1CE
006125 81ac      	LDD  R26,Y+4
006126 81bd      	LDD  R27,Y+4+1
006127 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
006128 5f0f     +SUBI R16 , LOW ( - 1 )
006129 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00612a cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
00612b 940e cd66 	CALL SUBOPT_0x1CE
00612d 940e cd6f 	CALL SUBOPT_0x1CF
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
00612f 940e c627 	CALL SUBOPT_0x9C
006131 2ffe      	MOV  R31,R30
006132 e0e0      	LDI  R30,0
006133 010f      	MOVW R0,R30
006134 940e cd66 	CALL SUBOPT_0x1CE
006136 940e c627 	CALL SUBOPT_0x9C
006138 29e0      	OR   R30,R0
006139 29f1      	OR   R31,R1
00613a 940e cd74 	CALL SUBOPT_0x1D0
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
00613c 85a0      	LDD  R26,Z+8
00613d 33a0      	CPI  R26,LOW(0x30)
00613e f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
00613f c1a9      	RJMP _0x20E007A
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
006140 81ee      	LDD  R30,Y+6
006141 81ff      	LDD  R31,Y+6+1
006142 1be2      	SUB  R30,R18
006143 0bf3      	SBC  R31,R19
                +
006144 81ac     +LDD R26 , Y + 4
006145 81bd     +LDD R27 , Y + 4 + 1
006146 961b     +ADIW R26 , 11
006147 93ed     +ST X + , R30
006148 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
006149 81ec      	LDD  R30,Y+4
00614a 81fd      	LDD  R31,Y+4+1
00614b 85a3      	LDD  R26,Z+11
00614c 85b4      	LDD  R27,Z+12
00614d 940e cd7c 	CALL SUBOPT_0x1D1
                +
00614f 81ac     +LDD R26 , Y + 4
006150 81bd     +LDD R27 , Y + 4 + 1
006151 961d     +ADIW R26 , 13
006152 93ed     +ST X + , R30
006153 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
006154 81ac      	LDD  R26,Y+4
006155 81bd      	LDD  R27,Y+4+1
006156 961d      	ADIW R26,13
006157 940e e2f0 	CALL __GETW1P
006159 9730      	SBIW R30,0
00615a f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
00615b e0e0     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
00615c e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
00615d e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
00615e e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
00615f 940e c1f5 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
006161 efef      	LDI  R30,LOW(65535)
006162 efff      	LDI  R31,HIGH(65535)
006163 c187      	RJMP _0x20E0079
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
006164 e000     +LDI R16 , LOW ( 0 )
006165 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
006166 81ac      	LDD  R26,Y+4
006167 81bd      	LDD  R27,Y+4+1
006168 961b      	ADIW R26,11
006169 940e cd83 	CALL SUBOPT_0x1D2
00616b f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
00616c 81ec      	LDD  R30,Y+4
00616d 81fd      	LDD  R31,Y+4+1
00616e 85a5      	LDD  R26,Z+13
00616f 85b6      	LDD  R27,Z+14
006170 940e cd88 	CALL SUBOPT_0x1D3
006172 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
006173 5f0f     +SUBI R16 , LOW ( - 1 )
006174 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006175 cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
006176 c172      	RJMP _0x20E007A
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
006177 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
006179 e020     +LDI R18 , LOW ( 0 )
00617a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00617b e2e6     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
00617c e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
00617d e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
00617e e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
00617f 940e c1f5 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
006181 940e cbf8 	CALL SUBOPT_0x193
006183 85a8      	LDD  R26,Y+8
006184 85b9      	LDD  R27,Y+8+1
006185 940e 9f0a 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
006187 e000     +LDI R16 , LOW ( 0 )
006188 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
006189 3008     +CPI R16 , LOW ( 8 )
00618a e0e0     +LDI R30 , HIGH ( 8 )
00618b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00618c f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
00618d 940e cd66 	CALL SUBOPT_0x1CE
00618f 81ac      	LDD  R26,Y+4
006190 81bd      	LDD  R27,Y+4+1
006191 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
006192 5f0f     +SUBI R16 , LOW ( - 1 )
006193 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006194 cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
006195 940e cd66 	CALL SUBOPT_0x1CE
006197 940e cd6f 	CALL SUBOPT_0x1CF
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
006199 81ac     +LDD R26 , Y + 4
00619a 81bd     +LDD R27 , Y + 4 + 1
00619b 9619     +ADIW R26 , 9
00619c 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
00619d 81ec      	LDD  R30,Y+4
00619e 81fd      	LDD  R31,Y+4+1
00619f 85a0      	LDD  R26,Z+8
0061a0 31a0      	CPI  R26,LOW(0x10)
0061a1 f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
0061a2 e3ed     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
0061a3 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
0061a4 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
0061a5 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
0061a6 940e c1f5 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
0061a8 81ac      	LDD  R26,Y+4
0061a9 81bd      	LDD  R27,Y+4+1
0061aa 961a      	ADIW R26,10
0061ab 940e c8ed 	CALL SUBOPT_0x113
                 ; 000A 0048         st->confSpec    =   NULL;
0061ad 81ac      	LDD  R26,Y+4
0061ae 81bd      	LDD  R27,Y+4+1
0061af 961c      	ADIW R26,12
0061b0 940e c8ed 	CALL SUBOPT_0x113
                 ; 000A 0049         return 0;
0061b2 c136      	RJMP _0x20E007A
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
0061b3 e5ec     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
0061b4 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
0061b5 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
0061b6 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
0061b7 940e c1f5 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
0061b9 81ee      	LDD  R30,Y+6
0061ba 81ff      	LDD  R31,Y+6+1
0061bb 1be2      	SUB  R30,R18
0061bc 0bf3      	SBC  R31,R19
                +
0061bd 81ac     +LDD R26 , Y + 4
0061be 81bd     +LDD R27 , Y + 4 + 1
0061bf 961a     +ADIW R26 , 10
0061c0 93ed     +ST X + , R30
0061c1 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
0061c2 e7eb     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
0061c3 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
0061c4 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
0061c5 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
0061c6 940e e324 	CALL __PUTPARD1
0061c8 85a8      	LDD  R26,Y+8
0061c9 85b9      	LDD  R27,Y+8+1
0061ca 961a      	ADIW R26,10
0061cb 940e c2bf 	CALL SUBOPT_0x1E
0061cd 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
0061cf 81ec      	LDD  R30,Y+4
0061d0 81fd      	LDD  R31,Y+4+1
0061d1 85a2      	LDD  R26,Z+10
0061d2 85b3      	LDD  R27,Z+11
0061d3 940e cd7c 	CALL SUBOPT_0x1D1
                +
0061d5 81ac     +LDD R26 , Y + 4
0061d6 81bd     +LDD R27 , Y + 4 + 1
0061d7 961c     +ADIW R26 , 12
0061d8 93ed     +ST X + , R30
0061d9 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
0061da 81ac      	LDD  R26,Y+4
0061db 81bd      	LDD  R27,Y+4+1
0061dc 961c      	ADIW R26,12
0061dd 940e e2f0 	CALL __GETW1P
0061df 9730      	SBIW R30,0
0061e0 f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
0061e1 e9ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
0061e2 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
0061e3 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
0061e4 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
0061e5 940e c1f5 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
0061e7 efef      	LDI  R30,LOW(65535)
0061e8 efff      	LDI  R31,HIGH(65535)
0061e9 c101      	RJMP _0x20E0079
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
0061ea e000     +LDI R16 , LOW ( 0 )
0061eb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
0061ec 81ac      	LDD  R26,Y+4
0061ed 81bd      	LDD  R27,Y+4+1
0061ee 961a      	ADIW R26,10
0061ef 940e cd83 	CALL SUBOPT_0x1D2
0061f1 f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
0061f2 81ec      	LDD  R30,Y+4
0061f3 81fd      	LDD  R31,Y+4+1
0061f4 85a4      	LDD  R26,Z+12
0061f5 85b5      	LDD  R27,Z+13
0061f6 940e cd88 	CALL SUBOPT_0x1D3
0061f8 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
0061f9 5f0f     +SUBI R16 , LOW ( - 1 )
0061fa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0061fb cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
0061fc c0ec      	RJMP _0x20E007A
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
0061fd 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0061ff 940e cd61 	CALL SUBOPT_0x1CD
                 _0x140014:
                +
006201 3008     +CPI R16 , LOW ( 8 )
006202 e0e0     +LDI R30 , HIGH ( 8 )
006203 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006204 f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
006205 940e cd66 	CALL SUBOPT_0x1CE
006207 81ac      	LDD  R26,Y+4
006208 81bd      	LDD  R27,Y+4+1
006209 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
00620a 5f0f     +SUBI R16 , LOW ( - 1 )
00620b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00620c cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
00620d 940e cd66 	CALL SUBOPT_0x1CE
00620f 940e cd92 	CALL SUBOPT_0x1D4
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
006211 81ae      	LDD  R26,Y+6
006212 81bf      	LDD  R27,Y+6+1
006213 9717      	SBIW R26,7
006214 f414      	BRGE PC+3
006215 940c 6284 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
006217 940e cd66 	CALL SUBOPT_0x1CE
006219 940e cd97 	CALL SUBOPT_0x1D5
00621b 940e cd9f 	CALL SUBOPT_0x1D6
00621d 937f      	PUSH R23
00621e 936f      	PUSH R22
00621f 93ff      	PUSH R31
006220 93ef      	PUSH R30
006221 940e cd66 	CALL SUBOPT_0x1CE
006223 940e cd97 	CALL SUBOPT_0x1D5
006225 940e e1f6 	CALL __LSLD16
006227 91af      	POP  R26
006228 91bf      	POP  R27
006229 918f      	POP  R24
00622a 919f      	POP  R25
00622b 940e e195 	CALL __ORD12
00622d 937f      	PUSH R23
00622e 936f      	PUSH R22
00622f 93ff      	PUSH R31
006230 93ef      	PUSH R30
006231 940e cd66 	CALL SUBOPT_0x1CE
006233 940e cd97 	CALL SUBOPT_0x1D5
006235 940e cda5 	CALL SUBOPT_0x1D7
006237 91af      	POP  R26
006238 91bf      	POP  R27
006239 918f      	POP  R24
00623a 919f      	POP  R25
00623b 940e e195 	CALL __ORD12
00623d 937f      	PUSH R23
00623e 936f      	PUSH R22
00623f 93ff      	PUSH R31
006240 93ef      	PUSH R30
006241 940e cd66 	CALL SUBOPT_0x1CE
006243 940e cd97 	CALL SUBOPT_0x1D5
006245 91af      	POP  R26
006246 91bf      	POP  R27
006247 918f      	POP  R24
006248 919f      	POP  R25
006249 940e cdab 	CALL SUBOPT_0x1D8
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
00624b 940e cd66 	CALL SUBOPT_0x1CE
00624d 940e cd97 	CALL SUBOPT_0x1D5
00624f 940e cd9f 	CALL SUBOPT_0x1D6
006251 937f      	PUSH R23
006252 936f      	PUSH R22
006253 93ff      	PUSH R31
006254 93ef      	PUSH R30
006255 940e cd66 	CALL SUBOPT_0x1CE
006257 940e cd97 	CALL SUBOPT_0x1D5
006259 940e e1f6 	CALL __LSLD16
00625b 91af      	POP  R26
00625c 91bf      	POP  R27
00625d 918f      	POP  R24
00625e 919f      	POP  R25
00625f 940e e195 	CALL __ORD12
006261 937f      	PUSH R23
006262 936f      	PUSH R22
006263 93ff      	PUSH R31
006264 93ef      	PUSH R30
006265 940e cd66 	CALL SUBOPT_0x1CE
006267 940e cd97 	CALL SUBOPT_0x1D5
006269 940e cda5 	CALL SUBOPT_0x1D7
00626b 91af      	POP  R26
00626c 91bf      	POP  R27
00626d 918f      	POP  R24
00626e 919f      	POP  R25
00626f 940e e195 	CALL __ORD12
006271 937f      	PUSH R23
006272 936f      	PUSH R22
006273 93ff      	PUSH R31
006274 93ef      	PUSH R30
006275 940e cd66 	CALL SUBOPT_0x1CE
006277 940e cd97 	CALL SUBOPT_0x1D5
006279 91af      	POP  R26
00627a 91bf      	POP  R27
00627b 918f      	POP  R24
00627c 919f      	POP  R25
00627d 940e e195 	CALL __ORD12
                +
00627f 81ac     +LDD R26 , Y + 4
006280 81bd     +LDD R27 , Y + 4 + 1
006281 961d     +ADIW R26 , 13
006282 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
006284 c064      	RJMP _0x20E007A
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
006285 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006287 940e cd61 	CALL SUBOPT_0x1CD
                 _0x140018:
                +
006289 3008     +CPI R16 , LOW ( 8 )
00628a e0e0     +LDI R30 , HIGH ( 8 )
00628b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00628c f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
00628d 940e cdb3 	CALL SUBOPT_0x1D9
00628f 81ac      	LDD  R26,Y+4
006290 81bd      	LDD  R27,Y+4+1
006291 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
006292 5f0f     +SUBI R16 , LOW ( - 1 )
006293 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006294 cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
006295 c0b2      	RJMP _0x20E0078
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
006296 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006298 940e cd61 	CALL SUBOPT_0x1CD
                 _0x14001B:
                +
00629a 3008     +CPI R16 , LOW ( 8 )
00629b e0e0     +LDI R30 , HIGH ( 8 )
00629c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00629d f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
00629e 940e cd66 	CALL SUBOPT_0x1CE
0062a0 81ac      	LDD  R26,Y+4
0062a1 81bd      	LDD  R27,Y+4+1
0062a2 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
0062a3 5f0f     +SUBI R16 , LOW ( - 1 )
0062a4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062a5 cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
0062a6 940e cd66 	CALL SUBOPT_0x1CE
0062a8 940e cd92 	CALL SUBOPT_0x1D4
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
0062aa 81ee      	LDD  R30,Y+6
0062ab 81ff      	LDD  R31,Y+6+1
0062ac 9732      	SBIW R30,2
0062ad 940e cd74 	CALL SUBOPT_0x1D0
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
0062af 940e cc41 	CALL SUBOPT_0x1A0
0062b1 f5b8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
0062b2 81ec      	LDD  R30,Y+4
0062b3 81fd      	LDD  R31,Y+4+1
0062b4 85a1      	LDD  R26,Z+9
0062b5 85b2      	LDD  R27,Z+10
0062b6 940e cd7c 	CALL SUBOPT_0x1D1
                +
0062b8 81ac     +LDD R26 , Y + 4
0062b9 81bd     +LDD R27 , Y + 4 + 1
0062ba 961b     +ADIW R26 , 11
0062bb 93ed     +ST X + , R30
0062bc 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
0062bd 81ac      	LDD  R26,Y+4
0062be 81bd      	LDD  R27,Y+4+1
0062bf 961b      	ADIW R26,11
0062c0 940e e2f0 	CALL __GETW1P
0062c2 9730      	SBIW R30,0
0062c3 f499      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
0062c4 ece4     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
0062c5 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
0062c6 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
0062c7 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
0062c8 940e cdb7 	CALL SUBOPT_0x1DA
0062ca 85a1      	LDD  R26,Z+9
0062cb 85b2      	LDD  R27,Z+10
0062cc e0e1      	LDI  R30,LOW(1)
0062cd e0f0      	LDI  R31,HIGH(1)
0062ce 940e e21a 	CALL __MULW12U
0062d0 940e c357 	CALL SUBOPT_0x34
0062d2 940e c26b 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
0062d4 efef      	LDI  R30,LOW(65535)
0062d5 efff      	LDI  R31,HIGH(65535)
0062d6 c014      	RJMP _0x20E0079
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
0062d7 e000     +LDI R16 , LOW ( 0 )
0062d8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
0062d9 81ac      	LDD  R26,Y+4
0062da 81bd      	LDD  R27,Y+4+1
0062db 9619      	ADIW R26,9
0062dc 940e cd83 	CALL SUBOPT_0x1D2
0062de f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
0062df 81ec      	LDD  R30,Y+4
0062e0 81fd      	LDD  R31,Y+4+1
0062e1 85a3      	LDD  R26,Z+11
0062e2 85b4      	LDD  R27,Z+12
0062e3 940e cd88 	CALL SUBOPT_0x1D3
0062e5 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
0062e6 5f0f     +SUBI R16 , LOW ( - 1 )
0062e7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062e8 cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E007A:
0062e9 e0e0      	LDI  R30,LOW(0)
0062ea e0f0      	LDI  R31,HIGH(0)
                 _0x20E0079:
0062eb 940e e3a2 	CALL __LOADLOCR4
0062ed 962a      	ADIW R28,10
0062ee 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
0062ef 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0062f1 940e cd61 	CALL SUBOPT_0x1CD
                 _0x140023:
                +
0062f3 3008     +CPI R16 , LOW ( 8 )
0062f4 e0e0     +LDI R30 , HIGH ( 8 )
0062f5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0062f6 f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
0062f7 940e cdb3 	CALL SUBOPT_0x1D9
0062f9 81ac      	LDD  R26,Y+4
0062fa 81bd      	LDD  R27,Y+4+1
0062fb 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
0062fc 5f0f     +SUBI R16 , LOW ( - 1 )
0062fd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062fe cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
0062ff 940e cdb3 	CALL SUBOPT_0x1D9
006301 940e cd92 	CALL SUBOPT_0x1D4
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
006303 940e cdb3 	CALL SUBOPT_0x1D9
006305 940e cd97 	CALL SUBOPT_0x1D5
006307 940e cd9f 	CALL SUBOPT_0x1D6
006309 937f      	PUSH R23
00630a 936f      	PUSH R22
00630b 93ff      	PUSH R31
00630c 93ef      	PUSH R30
00630d 940e cdb3 	CALL SUBOPT_0x1D9
00630f 940e cd97 	CALL SUBOPT_0x1D5
006311 940e e1f6 	CALL __LSLD16
006313 91af      	POP  R26
006314 91bf      	POP  R27
006315 918f      	POP  R24
006316 919f      	POP  R25
006317 940e e195 	CALL __ORD12
006319 937f      	PUSH R23
00631a 936f      	PUSH R22
00631b 93ff      	PUSH R31
00631c 93ef      	PUSH R30
00631d 940e cdb3 	CALL SUBOPT_0x1D9
00631f 940e cd97 	CALL SUBOPT_0x1D5
006321 940e cda5 	CALL SUBOPT_0x1D7
006323 91af      	POP  R26
006324 91bf      	POP  R27
006325 918f      	POP  R24
006326 919f      	POP  R25
006327 940e e195 	CALL __ORD12
006329 937f      	PUSH R23
00632a 936f      	PUSH R22
00632b 93ff      	PUSH R31
00632c 93ef      	PUSH R30
00632d 940e cdb3 	CALL SUBOPT_0x1D9
00632f 940e cd97 	CALL SUBOPT_0x1D5
006331 91af      	POP  R26
006332 91bf      	POP  R27
006333 918f      	POP  R24
006334 919f      	POP  R25
006335 940e cdab 	CALL SUBOPT_0x1D8
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
006337 c01d      	RJMP _0x20E0077
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
006338 940e c55a 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00633a 940e cd61 	CALL SUBOPT_0x1CD
                 _0x140026:
                +
00633c 3008     +CPI R16 , LOW ( 8 )
00633d e0e0     +LDI R30 , HIGH ( 8 )
00633e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00633f f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
006340 940e cdb3 	CALL SUBOPT_0x1D9
006342 81ac      	LDD  R26,Y+4
006343 81bd      	LDD  R27,Y+4+1
006344 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
006345 5f0f     +SUBI R16 , LOW ( - 1 )
006346 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006347 cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0078:
006348 01f9      	MOVW R30,R18
                +
006349 5f2f     +SUBI R18 , LOW ( - 1 )
00634a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00634b 940e cc68 	CALL SUBOPT_0x1A8
00634d 940e cd92 	CALL SUBOPT_0x1D4
                 ; 000A 00CB     st->status      =   pkt[k++];
00634f 940e cdb3 	CALL SUBOPT_0x1D9
                +
006351 81ac     +LDD R26 , Y + 4
006352 81bd     +LDD R27 , Y + 4 + 1
006353 9619     +ADIW R26 , 9
006354 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0077:
006355 e0e0      	LDI  R30,LOW(0)
006356 e0f0      	LDI  R31,HIGH(0)
006357 940e e3a2 	CALL __LOADLOCR4
006359 9628      	ADIW R28,8
00635a 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
00635b 940e c5ef 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
00635d 85a5      	LDD  R26,Z+13
00635e 85b6      	LDD  R27,Z+14
00635f 940e a6eb 	CALL _free
                 ; 000A 00D3 }
006361 c05e      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
006362 940e c5ef 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
006364 85a4      	LDD  R26,Z+12
006365 85b5      	LDD  R27,Z+13
006366 940e a6eb 	CALL _free
                 ; 000A 00D8 }
006368 c057      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
006369 940e c5ef 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
00636b 85a3      	LDD  R26,Z+11
00636c 85b4      	LDD  R27,Z+12
00636d 940e a6eb 	CALL _free
                 ; 000A 00DD }
00636f c050      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
006370 93aa      	ST   -Y,R26
006371 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
006372 81e9      	LDD  R30,Y+1
006373 7fe0      	ANDI R30,LOW(0xF0)
006374 2f1e      	MOV  R17,R30
006375 2fe1      	MOV  R30,R17
006376 940e c3e3 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
006378 f419      	BRNE _0x160006
006379 eae1      	LDI  R30,LOW(161)
00637a e0f0      	LDI  R31,HIGH(161)
00637b c043      	RJMP _0x20E0075
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
00637c 32e0      	CPI  R30,LOW(0x20)
00637d e0a0      	LDI  R26,HIGH(0x20)
00637e 07fa      	CPC  R31,R26
00637f f419      	BRNE _0x160007
006380 e0e8      	LDI  R30,LOW(8)
006381 e0f0      	LDI  R31,HIGH(8)
006382 c03c      	RJMP _0x20E0075
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
006383 33e0      	CPI  R30,LOW(0x30)
006384 e0a0      	LDI  R26,HIGH(0x30)
006385 07fa      	CPC  R31,R26
006386 f419      	BRNE _0x160008
006387 e1ed      	LDI  R30,LOW(29)
006388 e0f0      	LDI  R31,HIGH(29)
006389 c035      	RJMP _0x20E0075
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
00638a 34e0      	CPI  R30,LOW(0x40)
00638b e0a0      	LDI  R26,HIGH(0x40)
00638c 07fa      	CPC  R31,R26
00638d f419      	BRNE _0x160009
00638e e0e3      	LDI  R30,LOW(3)
00638f e0f0      	LDI  R31,HIGH(3)
006390 c02e      	RJMP _0x20E0075
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
006391 35e0      	CPI  R30,LOW(0x50)
006392 e0a0      	LDI  R26,HIGH(0x50)
006393 07fa      	CPC  R31,R26
006394 f419      	BRNE _0x16000A
006395 e2e6      	LDI  R30,LOW(38)
006396 e0f0      	LDI  R31,HIGH(38)
006397 c027      	RJMP _0x20E0075
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
006398 36e0      	CPI  R30,LOW(0x60)
006399 e0a0      	LDI  R26,HIGH(0x60)
00639a 07fa      	CPC  R31,R26
00639b f419      	BRNE _0x16000B
00639c e0e5      	LDI  R30,LOW(5)
00639d e0f0      	LDI  R31,HIGH(5)
00639e c020      	RJMP _0x20E0075
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
00639f 37e0      	CPI  R30,LOW(0x70)
0063a0 e0a0      	LDI  R26,HIGH(0x70)
0063a1 07fa      	CPC  R31,R26
0063a2 f419      	BRNE _0x16000C
0063a3 e2e9      	LDI  R30,LOW(41)
0063a4 e0f0      	LDI  R31,HIGH(41)
0063a5 c019      	RJMP _0x20E0075
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
0063a6 38e0      	CPI  R30,LOW(0x80)
0063a7 e0a0      	LDI  R26,HIGH(0x80)
0063a8 07fa      	CPC  R31,R26
0063a9 f419      	BRNE _0x16000D
0063aa e2e5      	LDI  R30,LOW(37)
0063ab e0f0      	LDI  R31,HIGH(37)
0063ac c012      	RJMP _0x20E0075
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
0063ad 39e0      	CPI  R30,LOW(0x90)
0063ae e0a0      	LDI  R26,HIGH(0x90)
0063af 07fa      	CPC  R31,R26
0063b0 f419      	BRNE _0x16000F
0063b1 e1e2      	LDI  R30,LOW(18)
0063b2 e0f0      	LDI  R31,HIGH(18)
0063b3 c00b      	RJMP _0x20E0075
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
0063b4 efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
0063b5 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
0063b6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
0063b7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
0063b8 940e e324 	CALL __PUTPARD1
0063ba 2fe1      	MOV  R30,R17
0063bb 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0018                                     return -1;
0063bd efef      	LDI  R30,LOW(65535)
0063be efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0075:
0063bf 8118      	LDD  R17,Y+0
                 _0x20E0076:
0063c0 9622      	ADIW R28,2
0063c1 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
0063c2 940e cdbc 	CALL SUBOPT_0x1DB
0063c4 940e c3de 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
0063c6 e020     +LDI R18 , LOW ( 0 )
0063c7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0063c8 e050      	LDI  R21,0
0063c9 85ec      	LDD  R30,Y+12
0063ca 7fe0      	ANDI R30,LOW(0xF0)
0063cb 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
0063cc 2fe5      	MOV  R30,R21
0063cd 940e c3e3 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
0063cf f011      	BREQ PC+3
0063d0 940c 6440 	JMP _0x160013
0063d2 940e c848 	CALL SUBOPT_0xF7
0063d4 940e cdbf 	CALL SUBOPT_0x1DC
                 ; 000B 0029                                     if(cnfgStrc == NULL){
0063d6 f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
0063d7 e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
0063d8 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
0063d9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
0063da e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
0063db 940e e324 	CALL __PUTPARD1
                +
0063dd eae1     +LDI R30 , LOW ( 0xA1 )
0063de e0f0     +LDI R31 , HIGH ( 0xA1 )
0063df e060     +LDI R22 , BYTE3 ( 0xA1 )
0063e0 e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
0063e1 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 002B                                         return -2;
0063e3 efee      	LDI  R30,LOW(65534)
0063e4 efff      	LDI  R31,HIGH(65534)
0063e5 c408      	RJMP _0x20E0074
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
0063e6 81ae      	LDD  R26,Y+6
0063e7 81bf      	LDD  R27,Y+6+1
0063e8 940e 491d 	CALL _getPropertiesConfig
0063ea 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
0063eb 2333      	TST  R19
0063ec f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
0063ed e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
0063ee e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
0063ef e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
0063f0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
0063f1 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
0063f3 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0032                                         return -3;
0063f5 efed      	LDI  R30,LOW(65533)
0063f6 efff      	LDI  R31,HIGH(65533)
0063f7 c3f6      	RJMP _0x20E0074
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
0063f8 e8ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
0063f9 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
0063fa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
0063fb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
0063fc 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
0063fe 940e cdc5 	CALL SUBOPT_0x1DD
006400 940e c357 	CALL SUBOPT_0x34
006402 940e c26b 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
006404 940e cdc5 	CALL SUBOPT_0x1DD
006406 9674      	ADIW R30,20
006407 940e c357 	CALL SUBOPT_0x34
006409 940e c26b 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
00640b 940e cdc5 	CALL SUBOPT_0x1DD
00640d 96b8      	ADIW R30,40
00640e 940e c357 	CALL SUBOPT_0x34
006410 940e c26b 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
006412 940e cdc5 	CALL SUBOPT_0x1DD
006414 5be0      	SUBI R30,LOW(-80)
006415 4fff      	SBCI R31,HIGH(-80)
006416 940e c357 	CALL SUBOPT_0x34
006418 940e c26b 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
00641a 940e cdc5 	CALL SUBOPT_0x1DD
00641c 59ec      	SUBI R30,LOW(-100)
00641d 4fff      	SBCI R31,HIGH(-100)
00641e 940e c357 	CALL SUBOPT_0x34
006420 940e c26b 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
006422 940e cdc5 	CALL SUBOPT_0x1DD
006424 57e4      	SUBI R30,LOW(-140)
006425 4fff      	SBCI R31,HIGH(-140)
006426 940e c357 	CALL SUBOPT_0x34
006428 940e c26b 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
00642a ebe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
00642b e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
00642c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
00642d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
00642e 940e c965 	CALL SUBOPT_0x127
006430 56a0      	SUBI R26,LOW(-160)
006431 4fbf      	SBCI R27,HIGH(-160)
006432 91ec      	LD   R30,X
006433 940e e1fb 	CALL __CBD1
006435 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
006437 940e cdca 	CALL SUBOPT_0x1DE
006439 940e c848 	CALL SUBOPT_0xF7
00643b 940e cdcf 	CALL SUBOPT_0x1DF
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
00643d eae1      	LDI  R30,LOW(161)
00643e e0f0      	LDI  R31,HIGH(161)
00643f c3ae      	RJMP _0x20E0074
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
006440 32e0      	CPI  R30,LOW(0x20)
006441 e0a0      	LDI  R26,HIGH(0x20)
006442 07fa      	CPC  R31,R26
006443 f011      	BREQ PC+3
006444 940c 64ad 	JMP _0x160016
006446 940e cdd2 	CALL SUBOPT_0x1E0
006448 940e cdbf 	CALL SUBOPT_0x1DC
                 ; 000B 004A                                     if(cnfgStrc == NULL){
00644a f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
00644b ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
00644c e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
00644d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
00644e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
00644f 940e e324 	CALL __PUTPARD1
                +
006451 e0e8     +LDI R30 , LOW ( 0x8 )
006452 e0f0     +LDI R31 , HIGH ( 0x8 )
006453 e060     +LDI R22 , BYTE3 ( 0x8 )
006454 e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
006455 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 004C                                         return -2;
006457 efee      	LDI  R30,LOW(65534)
006458 efff      	LDI  R31,HIGH(65534)
006459 c394      	RJMP _0x20E0074
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
00645a 81ae      	LDD  R26,Y+6
00645b 81bf      	LDD  R27,Y+6+1
00645c 940e 49b2 	CALL _getOperatingConfig
00645e 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
00645f 2333      	TST  R19
006460 f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
006461 eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
006462 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
006463 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
006464 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
006465 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
006467 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0053                                         return -3;
006469 efed      	LDI  R30,LOW(65533)
00646a efff      	LDI  R31,HIGH(65533)
00646b c382      	RJMP _0x20E0074
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
00646c e1ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
00646d e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
00646e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
00646f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
006470 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
006472 e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
006473 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
006474 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
006475 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
006476 940e c965 	CALL SUBOPT_0x127
006478 91ec      	LD   R30,X
006479 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
00647b e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
00647c e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
00647d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
00647e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
00647f 940e c96a 	CALL SUBOPT_0x128
006481 81e1      	LDD  R30,Z+1
006482 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
006484 940e cdd5 	CALL SUBOPT_0x1E1
006486 81e2      	LDD  R30,Z+2
006487 940e c309 	CALL SUBOPT_0x29
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
006489 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
00648a e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
00648b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
00648c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
00648d 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
00648f e000     +LDI R16 , LOW ( 0 )
006490 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
006491 3005     +CPI R16 , LOW ( 5 )
006492 e0e0     +LDI R30 , HIGH ( 5 )
006493 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
006494 f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
006495 940e cdda 	CALL SUBOPT_0x1E2
006497 940e c8a5 	CALL SUBOPT_0x106
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
006499 e0e4      	LDI  R30,LOW(4)
00649a e0f0      	LDI  R31,HIGH(4)
00649b 17e0      	CP   R30,R16
00649c 07f1      	CPC  R31,R17
00649d f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
00649e 940e cddf 	CALL SUBOPT_0x1E3
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
0064a0 5f0f     +SUBI R16 , LOW ( - 1 )
0064a1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0064a2 cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
0064a3 940e cdca 	CALL SUBOPT_0x1DE
0064a5 e0a8      	LDI  R26,LOW(8)
0064a6 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
0064a8 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
0064aa e0e8      	LDI  R30,LOW(8)
0064ab e0f0      	LDI  R31,HIGH(8)
0064ac c341      	RJMP _0x20E0074
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
0064ad 33e0      	CPI  R30,LOW(0x30)
0064ae e0a0      	LDI  R26,HIGH(0x30)
0064af 07fa      	CPC  R31,R26
0064b0 f011      	BREQ PC+3
0064b1 940c 656e 	JMP _0x16001D
0064b3 940e cde5 	CALL SUBOPT_0x1E4
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
0064b5 e1ad      	LDI  R26,LOW(29)
0064b6 940e cdec 	CALL SUBOPT_0x1E5
                 ; 000B 0070                                     if(cnfgStrc == NULL){
0064b8 f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
0064b9 eae3     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
0064ba e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
0064bb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
0064bc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
0064bd 940e e324 	CALL __PUTPARD1
                +
0064bf e1ed     +LDI R30 , LOW ( 0x1D )
0064c0 e0f0     +LDI R31 , HIGH ( 0x1D )
0064c1 e060     +LDI R22 , BYTE3 ( 0x1D )
0064c2 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
0064c3 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0072                                         return -2;
0064c5 efee      	LDI  R30,LOW(65534)
0064c6 efff      	LDI  R31,HIGH(65534)
0064c7 c326      	RJMP _0x20E0074
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
0064c8 940e cbf8 	CALL SUBOPT_0x193
0064ca 85a8      	LDD  R26,Y+8
0064cb 85b9      	LDD  R27,Y+8+1
0064cc 940e 4a20 	CALL _getSensorConfig
0064ce 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
0064cf 2333      	TST  R19
0064d0 f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
0064d1 ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
0064d2 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
0064d3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
0064d4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
0064d5 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
0064d7 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0079                                         return -3;
0064d9 efed      	LDI  R30,LOW(65533)
0064da efff      	LDI  R31,HIGH(65533)
0064db c312      	RJMP _0x20E0074
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
0064dc e0e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
0064dd e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
0064de e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
0064df e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
0064e0 940e cdee 	CALL SUBOPT_0x1E6
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
0064e2 e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
0064e3 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
0064e4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
0064e5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
0064e6 940e c965 	CALL SUBOPT_0x127
0064e8 940e c2bf 	CALL SUBOPT_0x1E
0064ea 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
0064ec e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
0064ed e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
0064ee e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
0064ef e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
0064f0 940e c965 	CALL SUBOPT_0x127
0064f2 9612      	ADIW R26,2
0064f3 940e c2bf 	CALL SUBOPT_0x1E
0064f5 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
0064f7 e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
0064f8 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
0064f9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
0064fa e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
0064fb 940e c96a 	CALL SUBOPT_0x128
0064fd 81e4      	LDD  R30,Z+4
0064fe 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
006500 e6ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
006501 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
006502 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
006503 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
006504 940e c96a 	CALL SUBOPT_0x128
006506 81e5      	LDD  R30,Z+5
006507 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
006509 e8e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
00650a e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
00650b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
00650c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
00650d 940e c96a 	CALL SUBOPT_0x128
00650f 81e6      	LDD  R30,Z+6
006510 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
006512 e9e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
006513 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
006514 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
006515 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
006516 940e c96a 	CALL SUBOPT_0x128
006518 81e7      	LDD  R30,Z+7
006519 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
00651b 940e cdd5 	CALL SUBOPT_0x1E1
00651d 85e0      	LDD  R30,Z+8
00651e 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
006520 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
006521 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
006522 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
006523 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
006524 940e c96a 	CALL SUBOPT_0x128
006526 940e cc27 	CALL SUBOPT_0x19B
006528 940e cc23 	CALL SUBOPT_0x19A
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
00652a ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
00652b e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
00652c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
00652d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
00652e 940e c965 	CALL SUBOPT_0x127
006530 961d      	ADIW R26,13
006531 940e c2bf 	CALL SUBOPT_0x1E
006533 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
006535 eded     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
006536 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
006537 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
006538 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
006539 940e c96a 	CALL SUBOPT_0x128
                +
00653b 85a7     +LDD R26 , Z + 15
00653c 89b0     +LDD R27 , Z + 15 + 1
00653d 8981     +LDD R24 , Z + 15 + 2
00653e 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
00653f 940e cc23 	CALL SUBOPT_0x19A
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
006541 efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
006542 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
006543 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
006544 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
006545 940e c96a 	CALL SUBOPT_0x128
                +
006547 89a3     +LDD R26 , Z + 19
006548 89b4     +LDD R27 , Z + 19 + 1
006549 8985     +LDD R24 , Z + 19 + 2
00654a 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
00654b 940e cc23 	CALL SUBOPT_0x19A
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
00654d e0eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
00654e e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
00654f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
006550 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
006551 940e c965 	CALL SUBOPT_0x127
006553 9657      	ADIW R26,23
006554 940e c2bf 	CALL SUBOPT_0x1E
006556 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
006558 e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
006559 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
00655a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
00655b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
00655c 940e c96a 	CALL SUBOPT_0x128
                +
00655e 8da1     +LDD R26 , Z + 25
00655f 8db2     +LDD R27 , Z + 25 + 1
006560 8d83     +LDD R24 , Z + 25 + 2
006561 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
006562 940e cc23 	CALL SUBOPT_0x19A
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
006564 940e cdca 	CALL SUBOPT_0x1DE
006566 e1ad      	LDI  R26,LOW(29)
006567 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
006569 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
00656b e1ed      	LDI  R30,LOW(29)
00656c e0f0      	LDI  R31,HIGH(29)
00656d c280      	RJMP _0x20E0074
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
00656e 34e0      	CPI  R30,LOW(0x40)
00656f e0a0      	LDI  R26,HIGH(0x40)
006570 07fa      	CPC  R31,R26
006571 f011      	BREQ PC+3
006572 940c 65b7 	JMP _0x160020
006574 940e cde5 	CALL SUBOPT_0x1E4
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
006576 940e c522 	CALL SUBOPT_0x76
006578 940e cdbf 	CALL SUBOPT_0x1DC
                 ; 000B 0099                                     if(cnfgStrc == NULL){
00657a f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
00657b e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
00657c e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
00657d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
00657e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
00657f 940e cdf3 	CALL SUBOPT_0x1E7
                 ; 000B 009B                                         return -2;
006581 efee      	LDI  R30,LOW(65534)
006582 efff      	LDI  R31,HIGH(65534)
006583 c26a      	RJMP _0x20E0074
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
006584 940e cbf8 	CALL SUBOPT_0x193
006586 85a8      	LDD  R26,Y+8
006587 85b9      	LDD  R27,Y+8+1
006588 940e 4b08 	CALL _getAuxDinConfig
00658a 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
00658b 2333      	TST  R19
00658c f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
00658d e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
00658e e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
00658f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
006590 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
006591 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
006593 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 00A2                                         return -3;
006595 efed      	LDI  R30,LOW(65533)
006596 efff      	LDI  R31,HIGH(65533)
006597 c256      	RJMP _0x20E0074
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
006598 e9e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
006599 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
00659a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
00659b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
00659c 940e cdee 	CALL SUBOPT_0x1E6
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
00659e 940e cdfa 	CALL SUBOPT_0x1E8
0065a0 91ec      	LD   R30,X
0065a1 940e c309 	CALL SUBOPT_0x29
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
0065a3 ede1     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
0065a4 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
0065a5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
0065a6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
0065a7 940e c965 	CALL SUBOPT_0x127
0065a9 9611      	ADIW R26,1
0065aa 940e c2bf 	CALL SUBOPT_0x1E
0065ac 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
0065ae 940e cdca 	CALL SUBOPT_0x1DE
0065b0 940e c522 	CALL SUBOPT_0x76
0065b2 940e cdcf 	CALL SUBOPT_0x1DF
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
0065b4 e0e3      	LDI  R30,LOW(3)
0065b5 e0f0      	LDI  R31,HIGH(3)
0065b6 c237      	RJMP _0x20E0074
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
0065b7 35e0      	CPI  R30,LOW(0x50)
0065b8 e0a0      	LDI  R26,HIGH(0x50)
0065b9 07fa      	CPC  R31,R26
0065ba f011      	BREQ PC+3
0065bb 940c 661d 	JMP _0x160023
0065bd 940e cde5 	CALL SUBOPT_0x1E4
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
0065bf e2a6      	LDI  R26,LOW(38)
0065c0 940e cdec 	CALL SUBOPT_0x1E5
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
0065c2 f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
0065c3 eee9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
0065c4 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
0065c5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
0065c6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
0065c7 940e e324 	CALL __PUTPARD1
                +
0065c9 e2e6     +LDI R30 , LOW ( 0x26 )
0065ca e0f0     +LDI R31 , HIGH ( 0x26 )
0065cb e060     +LDI R22 , BYTE3 ( 0x26 )
0065cc e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
0065cd 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 00B9                                         return -2;
0065cf efee      	LDI  R30,LOW(65534)
0065d0 efff      	LDI  R31,HIGH(65534)
0065d1 c21c      	RJMP _0x20E0074
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
0065d2 940e cbf8 	CALL SUBOPT_0x193
0065d4 85a8      	LDD  R26,Y+8
0065d5 85b9      	LDD  R27,Y+8+1
0065d6 940e 4b3e 	CALL _getAuxDoutConfig
0065d8 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
0065d9 2333      	TST  R19
0065da f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
0065db e1ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
0065dc e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
0065dd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
0065de e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
0065df 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
0065e1 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 00C0                                         return -3;
0065e3 efed      	LDI  R30,LOW(65533)
0065e4 efff      	LDI  R31,HIGH(65533)
0065e5 c208      	RJMP _0x20E0074
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
0065e6 e4e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
0065e7 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
0065e8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
0065e9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
0065ea 940e cdee 	CALL SUBOPT_0x1E6
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
0065ec 940e cdff 	CALL SUBOPT_0x1E9
0065ee 91ec      	LD   R30,X
0065ef 940e c309 	CALL SUBOPT_0x29
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
0065f1 e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
0065f2 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
0065f3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
0065f4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
0065f5 940e c96a 	CALL SUBOPT_0x128
0065f7 81e1      	LDD  R30,Z+1
0065f8 940e c309 	CALL SUBOPT_0x29
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
0065fa 940e ce04 	CALL SUBOPT_0x1EA
0065fc 81e2      	LDD  R30,Z+2
0065fd 940e c309 	CALL SUBOPT_0x29
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
0065ff 940e ce09 	CALL SUBOPT_0x1EB
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006601 e000     +LDI R16 , LOW ( 0 )
006602 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
006603 3203     +CPI R16 , LOW ( 35 )
006604 e0e0     +LDI R30 , HIGH ( 35 )
006605 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006606 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
006607 940e cdda 	CALL SUBOPT_0x1E2
006609 940e c8a5 	CALL SUBOPT_0x106
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
00660b 940e ce0f 	CALL SUBOPT_0x1EC
00660d f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
00660e 940e cddf 	CALL SUBOPT_0x1E3
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
006610 5f0f     +SUBI R16 , LOW ( - 1 )
006611 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006612 cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
006613 940e cdca 	CALL SUBOPT_0x1DE
006615 e2a6      	LDI  R26,LOW(38)
006616 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
006618 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
00661a e2e6      	LDI  R30,LOW(38)
00661b e0f0      	LDI  R31,HIGH(38)
00661c c1d1      	RJMP _0x20E0074
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
00661d 36e0      	CPI  R30,LOW(0x60)
00661e e0a0      	LDI  R26,HIGH(0x60)
00661f 07fa      	CPC  R31,R26
006620 f011      	BREQ PC+3
006621 940c 6669 	JMP _0x16002A
006623 940e cde5 	CALL SUBOPT_0x1E4
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
006625 e0a5      	LDI  R26,LOW(5)
006626 940e cdec 	CALL SUBOPT_0x1E5
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
006628 f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
006629 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
00662a e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
00662b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
00662c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
00662d 940e e324 	CALL __PUTPARD1
                +
00662f e0e5     +LDI R30 , LOW ( 0x5 )
006630 e0f0     +LDI R31 , HIGH ( 0x5 )
006631 e060     +LDI R22 , BYTE3 ( 0x5 )
006632 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
006633 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 00E0                                         return -2;
006635 efee      	LDI  R30,LOW(65534)
006636 efff      	LDI  R31,HIGH(65534)
006637 c1b6      	RJMP _0x20E0074
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
006638 940e cbf8 	CALL SUBOPT_0x193
00663a 85a8      	LDD  R26,Y+8
00663b 85b9      	LDD  R27,Y+8+1
00663c 940e 4bd8 	CALL _getAuxAinConfig
00663e 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
00663f 2333      	TST  R19
006640 f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
006641 efec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
006642 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
006643 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
006644 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
006645 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
006647 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 00E7                                         return -3;
006649 efed      	LDI  R30,LOW(65533)
00664a efff      	LDI  R31,HIGH(65533)
00664b c1a2      	RJMP _0x20E0074
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
00664c e2e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
00664d e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
00664e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
00664f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
006650 940e cdee 	CALL SUBOPT_0x1E6
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
006652 940e cdfa 	CALL SUBOPT_0x1E8
006654 91ec      	LD   R30,X
006655 940e c309 	CALL SUBOPT_0x29
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
006657 e4e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
006658 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
006659 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
00665a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
00665b 940e c96a 	CALL SUBOPT_0x128
00665d 940e ce14 	CALL SUBOPT_0x1ED
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
00665f 940e cdca 	CALL SUBOPT_0x1DE
006661 e0a5      	LDI  R26,LOW(5)
006662 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
006664 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
006666 e0e5      	LDI  R30,LOW(5)
006667 e0f0      	LDI  R31,HIGH(5)
006668 c185      	RJMP _0x20E0074
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
006669 37e0      	CPI  R30,LOW(0x70)
00666a e0a0      	LDI  R26,HIGH(0x70)
00666b 07fa      	CPC  R31,R26
00666c f011      	BREQ PC+3
00666d 940c 66d2 	JMP _0x16002D
00666f 940e cde5 	CALL SUBOPT_0x1E4
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
006671 e2a9      	LDI  R26,LOW(41)
006672 940e cdec 	CALL SUBOPT_0x1E5
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
006674 f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
006675 e5ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
006676 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
006677 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
006678 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
006679 940e e324 	CALL __PUTPARD1
                +
00667b e2e9     +LDI R30 , LOW ( 0x29 )
00667c e0f0     +LDI R31 , HIGH ( 0x29 )
00667d e060     +LDI R22 , BYTE3 ( 0x29 )
00667e e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
00667f 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 00FE                                         return -2;
006681 efee      	LDI  R30,LOW(65534)
006682 efff      	LDI  R31,HIGH(65534)
006683 c16a      	RJMP _0x20E0074
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
006684 940e cbf8 	CALL SUBOPT_0x193
006686 85a8      	LDD  R26,Y+8
006687 85b9      	LDD  R27,Y+8+1
006688 940e 4c13 	CALL _getAuxAoutConfig
00668a 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
00668b 2333      	TST  R19
00668c f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
00668d e9e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
00668e e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
00668f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
006690 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
006691 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
006693 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0105                                         return -3;
006695 efed      	LDI  R30,LOW(65533)
006696 efff      	LDI  R31,HIGH(65533)
006697 c156      	RJMP _0x20E0074
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
006698 ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
006699 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
00669a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
00669b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
00669c 940e cdee 	CALL SUBOPT_0x1E6
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
00669e 940e cdff 	CALL SUBOPT_0x1E9
0066a0 91ec      	LD   R30,X
0066a1 940e c309 	CALL SUBOPT_0x29
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
0066a3 ede9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
0066a4 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
0066a5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
0066a6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
0066a7 940e c96a 	CALL SUBOPT_0x128
0066a9 940e ce14 	CALL SUBOPT_0x1ED
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
0066ab 940e ce04 	CALL SUBOPT_0x1EA
0066ad 81e5      	LDD  R30,Z+5
0066ae 940e c309 	CALL SUBOPT_0x29
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
0066b0 940e ce09 	CALL SUBOPT_0x1EB
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0066b2 e000     +LDI R16 , LOW ( 0 )
0066b3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
0066b4 3203     +CPI R16 , LOW ( 35 )
0066b5 e0e0     +LDI R30 , HIGH ( 35 )
0066b6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0066b7 f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
0066b8 940e cdda 	CALL SUBOPT_0x1E2
0066ba 9636      	ADIW R30,6
0066bb 0fe0      	ADD  R30,R16
0066bc 1ff1      	ADC  R31,R17
0066bd 81e0      	LD   R30,Z
0066be 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
0066c0 940e ce0f 	CALL SUBOPT_0x1EC
0066c2 f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
0066c3 940e cddf 	CALL SUBOPT_0x1E3
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
0066c5 5f0f     +SUBI R16 , LOW ( - 1 )
0066c6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0066c7 cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
0066c8 940e cdca 	CALL SUBOPT_0x1DE
0066ca e2a9      	LDI  R26,LOW(41)
0066cb 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
0066cd 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
0066cf e2e9      	LDI  R30,LOW(41)
0066d0 e0f0      	LDI  R31,HIGH(41)
0066d1 c11c      	RJMP _0x20E0074
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
0066d2 38e0      	CPI  R30,LOW(0x80)
0066d3 e0a0      	LDI  R26,HIGH(0x80)
0066d4 07fa      	CPC  R31,R26
0066d5 f011      	BREQ PC+3
0066d6 940c 6731 	JMP _0x160034
0066d8 e2a5      	LDI  R26,LOW(37)
0066d9 940e cdec 	CALL SUBOPT_0x1E5
                 ; 000B 0121                                     if(cnfgStrc == NULL){
0066db f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
0066dc efe2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
0066dd e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
0066de e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
0066df e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
0066e0 940e e324 	CALL __PUTPARD1
                +
0066e2 e2e5     +LDI R30 , LOW ( 0x25 )
0066e3 e0f0     +LDI R31 , HIGH ( 0x25 )
0066e4 e060     +LDI R22 , BYTE3 ( 0x25 )
0066e5 e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
0066e6 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0123                                         return -2;
0066e8 efee      	LDI  R30,LOW(65534)
0066e9 efff      	LDI  R31,HIGH(65534)
0066ea c103      	RJMP _0x20E0074
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
0066eb 81ae      	LDD  R26,Y+6
0066ec 81bf      	LDD  R27,Y+6+1
0066ed 940e 4c98 	CALL _getBuzzerConfig
0066ef 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
0066f0 2333      	TST  R19
0066f1 f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
0066f2 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
0066f3 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
0066f4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
0066f5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
0066f6 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
0066f8 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 012A                                         return -3;
0066fa efed      	LDI  R30,LOW(65533)
0066fb efff      	LDI  R31,HIGH(65533)
0066fc c0f1      	RJMP _0x20E0074
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
0066fd e4ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
0066fe e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
0066ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
006700 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
006701 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
006703 e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
006704 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
006705 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
006706 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
006707 940e c965 	CALL SUBOPT_0x127
006709 91ec      	LD   R30,X
00670a 940e c309 	CALL SUBOPT_0x29
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
00670c 940e ce04 	CALL SUBOPT_0x1EA
00670e 81e1      	LDD  R30,Z+1
00670f 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
006711 940e ce09 	CALL SUBOPT_0x1EB
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006713 e000     +LDI R16 , LOW ( 0 )
006714 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
006715 3203     +CPI R16 , LOW ( 35 )
006716 e0e0     +LDI R30 , HIGH ( 35 )
006717 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006718 f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
006719 940e cdda 	CALL SUBOPT_0x1E2
00671b 940e c974 	CALL SUBOPT_0x12A
00671d 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
00671f 940e ce0f 	CALL SUBOPT_0x1EC
006721 f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
006722 940e cddf 	CALL SUBOPT_0x1E3
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
006724 5f0f     +SUBI R16 , LOW ( - 1 )
006725 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006726 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
006727 940e cdca 	CALL SUBOPT_0x1DE
006729 e2a5      	LDI  R26,LOW(37)
00672a 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
00672c 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
00672e e2e5      	LDI  R30,LOW(37)
00672f e0f0      	LDI  R31,HIGH(37)
006730 c0bd      	RJMP _0x20E0074
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
006731 39e0      	CPI  R30,LOW(0x90)
006732 e0a0      	LDI  R26,HIGH(0x90)
006733 07fa      	CPC  R31,R26
006734 f011      	BREQ PC+3
006735 940c 67a1 	JMP _0x16003B
006737 e1a2      	LDI  R26,LOW(18)
006738 940e cdec 	CALL SUBOPT_0x1E5
                 ; 000B 0145                                     if(cnfgStrc == NULL){
00673a f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
00673b e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
00673c e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
00673d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
00673e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
00673f 940e e324 	CALL __PUTPARD1
                +
006741 e1e2     +LDI R30 , LOW ( 0x12 )
006742 e0f0     +LDI R31 , HIGH ( 0x12 )
006743 e060     +LDI R22 , BYTE3 ( 0x12 )
006744 e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
006745 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0147                                         return -2;
006747 efee      	LDI  R30,LOW(65534)
006748 efff      	LDI  R31,HIGH(65534)
006749 c0a4      	RJMP _0x20E0074
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
00674a 81ae      	LDD  R26,Y+6
00674b 81bf      	LDD  R27,Y+6+1
00674c 940e 4d2f 	CALL _getEnvAlarmConfig
00674e 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
00674f 2333      	TST  R19
006750 f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
006751 ece0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
006752 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
006753 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
006754 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
006755 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
006757 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 014E                                         return -3;
006759 efed      	LDI  R30,LOW(65533)
00675a efff      	LDI  R31,HIGH(65533)
00675b c092      	RJMP _0x20E0074
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
00675c eeea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
00675d e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
00675e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
00675f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
006760 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
006762 e0e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
006763 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
006764 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
006765 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
006766 940e c965 	CALL SUBOPT_0x127
006768 940e c97e 	CALL SUBOPT_0x12C
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
00676a e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
00676b e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
00676c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
00676d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
00676e 940e c965 	CALL SUBOPT_0x127
006770 9614      	ADIW R26,4
006771 940e c983 	CALL SUBOPT_0x12D
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
006773 e3eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
006774 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
006775 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
006776 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
006777 940e c96a 	CALL SUBOPT_0x128
006779 940e c98b 	CALL SUBOPT_0x12F
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
00677b e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
00677c e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
00677d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
00677e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
00677f 940e c96a 	CALL SUBOPT_0x128
006781 940e c992 	CALL SUBOPT_0x130
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
006783 e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
006784 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
006785 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
006786 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
006787 940e c965 	CALL SUBOPT_0x127
006789 961e      	ADIW R26,14
00678a 940e c983 	CALL SUBOPT_0x12D
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
00678c e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
00678d e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
00678e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
00678f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
006790 940e c965 	CALL SUBOPT_0x127
006792 9650      	ADIW R26,16
006793 940e c2bf 	CALL SUBOPT_0x1E
006795 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
006797 940e cdca 	CALL SUBOPT_0x1DE
006799 e1a2      	LDI  R26,LOW(18)
00679a 940e cd57 	CALL SUBOPT_0x1CB
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
00679c 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
00679e e1e2      	LDI  R30,LOW(18)
00679f e0f0      	LDI  R31,HIGH(18)
0067a0 c04d      	RJMP _0x20E0074
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
0067a1 3ae0      	CPI  R30,LOW(0xA0)
0067a2 e0a0      	LDI  R26,HIGH(0xA0)
0067a3 07fa      	CPC  R31,R26
0067a4 f011      	BREQ PC+3
0067a5 940c 67e7 	JMP _0x160041
0067a7 940e c522 	CALL SUBOPT_0x76
0067a9 940e cdbf 	CALL SUBOPT_0x1DC
                 ; 000B 0164                                     if(cnfgStrc == NULL){
0067ab f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
0067ac e9ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
0067ad e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
0067ae e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
0067af e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
0067b0 940e cdf3 	CALL SUBOPT_0x1E7
                 ; 000B 0166                                         return -2;
0067b2 efee      	LDI  R30,LOW(65534)
0067b3 efff      	LDI  R31,HIGH(65534)
0067b4 c039      	RJMP _0x20E0074
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
0067b5 81ae      	LDD  R26,Y+6
0067b6 81bf      	LDD  R27,Y+6+1
0067b7 940e 4dc2 	CALL _getStatusReportConfig
0067b9 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
0067ba 2333      	TST  R19
0067bb f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
0067bc ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
0067bd e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
0067be e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
0067bf e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
0067c0 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
0067c2 940e caa5 	CALL SUBOPT_0x15D
                 ; 000B 016D                                         return -3;
0067c4 efed      	LDI  R30,LOW(65533)
0067c5 efff      	LDI  R31,HIGH(65533)
0067c6 c027      	RJMP _0x20E0074
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
0067c7 e0e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
0067c8 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
0067c9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
0067ca e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
0067cb 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
0067cd e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
0067ce e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
0067cf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
0067d0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
0067d1 940e c965 	CALL SUBOPT_0x127
0067d3 91ec      	LD   R30,X
0067d4 940e c309 	CALL SUBOPT_0x29
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
0067d6 e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
0067d7 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
0067d8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
0067d9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
0067da 940e c965 	CALL SUBOPT_0x127
0067dc 9611      	ADIW R26,1
0067dd 940e c2bf 	CALL SUBOPT_0x1E
0067df 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
0067e1 940e cdca 	CALL SUBOPT_0x1DE
0067e3 940e c522 	CALL SUBOPT_0x76
0067e5 940e cdcf 	CALL SUBOPT_0x1DF
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
0067e7 940e ce19 	CALL SUBOPT_0x1EE
0067e9 2fe5      	MOV  R30,R21
0067ea 940e c309 	CALL SUBOPT_0x29
                 ; 000B 017D                                     return -1;
0067ec efef      	LDI  R30,LOW(65535)
0067ed efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E0074:
0067ee 940e e3a0 	CALL __LOADLOCR6
0067f0 962d      	ADIW R28,13
0067f1 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
0067f2 93ba      	ST   -Y,R27
0067f3 93aa      	ST   -Y,R26
0067f4 940e c3de 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
0067f6 e030      	LDI  R19,0
                +
0067f7 e040     +LDI R20 , LOW ( 0 )
0067f8 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0067f9 85ea      	LDD  R30,Y+10
0067fa 7fe0      	ANDI R30,LOW(0xF0)
0067fb 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
0067fc e8e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
0067fd e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
0067fe e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
0067ff e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
006800 940e c96a 	CALL SUBOPT_0x128
006802 940e c800 	CALL SUBOPT_0xE9
                 ; 000B 018D     print_payload(conf,len);
006804 940e cbf8 	CALL SUBOPT_0x193
006806 85a8      	LDD  R26,Y+8
006807 85b9      	LDD  R27,Y+8+1
006808 940e 9f0a 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
00680a 2fe3      	MOV  R30,R19
00680b 940e c3e3 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
00680d f4b9      	BRNE _0x160045
                +
00680e eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
00680f e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
006810 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
006811 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
006812 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
006814 85a8      	LDD  R26,Y+8
006815 85b9      	LDD  R27,Y+8+1
006816 940e 4dff 	CALL _setPropertiesConfig
006818 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
006819 2311      	TST  R17
00681a f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
00681b ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
00681c e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
00681d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
00681e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
00681f 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
006821 efed      	LDI  R30,LOW(65533)
006822 efff      	LDI  R31,HIGH(65533)
006823 c107      	RJMP _0x20E0073
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
006824 c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
006825 32e0      	CPI  R30,LOW(0x20)
006826 e0a0      	LDI  R26,HIGH(0x20)
006827 07fa      	CPC  R31,R26
006828 f4b9      	BRNE _0x160047
                +
006829 efe3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
00682a e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
00682b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
00682c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
00682d 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
00682f 85a8      	LDD  R26,Y+8
006830 85b9      	LDD  R27,Y+8+1
006831 940e 4e76 	CALL _setOperatingConfig
006833 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
006834 2311      	TST  R17
006835 f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
006836 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
006837 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
006838 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
006839 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
00683a 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
00683c efed      	LDI  R30,LOW(65533)
00683d efff      	LDI  R31,HIGH(65533)
00683e c0ec      	RJMP _0x20E0073
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
00683f c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
006840 33e0      	CPI  R30,LOW(0x30)
006841 e0a0      	LDI  R26,HIGH(0x30)
006842 07fa      	CPC  R31,R26
006843 f4c9      	BRNE _0x160049
006844 940e ce20 	CALL SUBOPT_0x1EF
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
006846 e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
006847 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
006848 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
006849 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
00684a 940e c3eb 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
00684c 940e ce26 	CALL SUBOPT_0x1F0
00684e 940e 4eec 	CALL _setSensorConfig
006850 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
006851 2311      	TST  R17
006852 f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
006853 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
006854 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
006855 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
006856 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
006857 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
006859 efed      	LDI  R30,LOW(65533)
00685a efff      	LDI  R31,HIGH(65533)
00685b c0cf      	RJMP _0x20E0073
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
00685c c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
00685d 34e0      	CPI  R30,LOW(0x40)
00685e e0a0      	LDI  R26,HIGH(0x40)
00685f 07fa      	CPC  R31,R26
006860 f4c9      	BRNE _0x16004B
006861 940e ce20 	CALL SUBOPT_0x1EF
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
006863 e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
006864 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
006865 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
006866 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
006867 940e c3eb 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
006869 940e ce26 	CALL SUBOPT_0x1F0
00686b 940e 5047 	CALL _setAuxDinConfig
00686d 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
00686e 2311      	TST  R17
00686f f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
006870 eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
006871 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
006872 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
006873 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
006874 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
006876 efed      	LDI  R30,LOW(65533)
006877 efff      	LDI  R31,HIGH(65533)
006878 c0b2      	RJMP _0x20E0073
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
006879 c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
00687a 35e0      	CPI  R30,LOW(0x50)
00687b e0a0      	LDI  R26,HIGH(0x50)
00687c 07fa      	CPC  R31,R26
00687d f4c9      	BRNE _0x16004D
00687e 940e ce20 	CALL SUBOPT_0x1EF
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
006880 ecef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
006881 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
006882 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
006883 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
006884 940e c3eb 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
006886 940e ce26 	CALL SUBOPT_0x1F0
006888 940e 508f 	CALL _setAuxDoutConfig
00688a 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
00688b 2311      	TST  R17
00688c f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
00688d eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
00688e e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
00688f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
006890 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
006891 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
006893 efed      	LDI  R30,LOW(65533)
006894 efff      	LDI  R31,HIGH(65533)
006895 c095      	RJMP _0x20E0073
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
006896 c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
006897 36e0      	CPI  R30,LOW(0x60)
006898 e0a0      	LDI  R26,HIGH(0x60)
006899 07fa      	CPC  R31,R26
00689a f4c9      	BRNE _0x16004F
00689b 940e ce20 	CALL SUBOPT_0x1EF
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
00689d e1e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
00689e e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
00689f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
0068a0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
0068a1 940e c3eb 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
0068a3 940e ce26 	CALL SUBOPT_0x1F0
0068a5 940e 5115 	CALL _setAuxAinConfig
0068a7 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
0068a8 2311      	TST  R17
0068a9 f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
0068aa e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
0068ab e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
0068ac e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
0068ad e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
0068ae 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
0068b0 efed      	LDI  R30,LOW(65533)
0068b1 efff      	LDI  R31,HIGH(65533)
0068b2 c078      	RJMP _0x20E0073
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
0068b3 c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
0068b4 37e0      	CPI  R30,LOW(0x70)
0068b5 e0a0      	LDI  R26,HIGH(0x70)
0068b6 07fa      	CPC  R31,R26
0068b7 f4c9      	BRNE _0x160051
0068b8 940e ce20 	CALL SUBOPT_0x1EF
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
0068ba e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
0068bb e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
0068bc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
0068bd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
0068be 940e c3eb 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
0068c0 940e ce26 	CALL SUBOPT_0x1F0
0068c2 940e 5155 	CALL _setAuxAoutConfig
0068c4 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
0068c5 2311      	TST  R17
0068c6 f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
0068c7 e8e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
0068c8 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
0068c9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
0068ca e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
0068cb 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
0068cd efed      	LDI  R30,LOW(65533)
0068ce efff      	LDI  R31,HIGH(65533)
0068cf c05b      	RJMP _0x20E0073
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
0068d0 c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
0068d1 38e0      	CPI  R30,LOW(0x80)
0068d2 e0a0      	LDI  R26,HIGH(0x80)
0068d3 07fa      	CPC  R31,R26
0068d4 f4b9      	BRNE _0x160053
                +
0068d5 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
0068d6 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
0068d7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
0068d8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
0068d9 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
0068db 85a8      	LDD  R26,Y+8
0068dc 85b9      	LDD  R27,Y+8+1
0068dd 940e 51e8 	CALL _setBuzzerConfig
0068df 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
0068e0 2311      	TST  R17
0068e1 f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
0068e2 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
0068e3 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
0068e4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
0068e5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
0068e6 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
0068e8 efed      	LDI  R30,LOW(65533)
0068e9 efff      	LDI  R31,HIGH(65533)
0068ea c040      	RJMP _0x20E0073
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
0068eb c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
0068ec 39e0      	CPI  R30,LOW(0x90)
0068ed e0a0      	LDI  R26,HIGH(0x90)
0068ee 07fa      	CPC  R31,R26
0068ef f4b9      	BRNE _0x160055
                +
0068f0 efe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
0068f1 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
0068f2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
0068f3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
0068f4 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
0068f6 85a8      	LDD  R26,Y+8
0068f7 85b9      	LDD  R27,Y+8+1
0068f8 940e 524e 	CALL _setEnvAlarmConfig
0068fa 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
0068fb 2311      	TST  R17
0068fc f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
0068fd e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
0068fe e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
0068ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
006900 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
006901 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
006903 efed      	LDI  R30,LOW(65533)
006904 efff      	LDI  R31,HIGH(65533)
006905 c025      	RJMP _0x20E0073
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
006906 c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
006907 3ae0      	CPI  R30,LOW(0xA0)
006908 e0a0      	LDI  R26,HIGH(0xA0)
006909 07fa      	CPC  R31,R26
00690a f4b1      	BRNE _0x160059
                +
00690b e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
00690c e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
00690d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
00690e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
00690f 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
006911 85a8      	LDD  R26,Y+8
006912 85b9      	LDD  R27,Y+8+1
006913 940e 52cb 	CALL _setStatusReportConfig
006915 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
006916 2311      	TST  R17
006917 f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
006918 e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
006919 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
00691a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
00691b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
00691c 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
00691e efed      	LDI  R30,LOW(65533)
00691f efff      	LDI  R31,HIGH(65533)
006920 c00a      	RJMP _0x20E0073
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
006921 940e ce19 	CALL SUBOPT_0x1EE
006923 2fe3      	MOV  R30,R19
006924 940e c309 	CALL SUBOPT_0x29
                 ; 000B 01E6                                     return -1;
006926 efef      	LDI  R30,LOW(65535)
006927 efff      	LDI  R31,HIGH(65535)
006928 c002      	RJMP _0x20E0073
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
006929 e0e0      	LDI  R30,LOW(0)
00692a e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
00692b 940e e3a0 	CALL __LOADLOCR6
00692d 962b      	ADIW R28,11
00692e 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
00692f 940e e329 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
006931 940e c598 	CALL SUBOPT_0x89
006933 940e c5ab 	CALL SUBOPT_0x8C
006935 940e e394 	CALL __CPD21
006937 f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
006938 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
006939 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
00693a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
00693b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
00693c 940e ce2b 	CALL SUBOPT_0x1F1
00693e 940e ce2b 	CALL SUBOPT_0x1F1
006940 940e c2ce 	CALL SUBOPT_0x21
                 ; 000B 01EF         return -1;
006942 efef      	LDI  R30,LOW(65535)
006943 efff      	LDI  R31,HIGH(65535)
006944 c0e4      	RJMP _0x20E0070
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
006945 e0e0      	LDI  R30,LOW(0)
006946 e0f0      	LDI  R31,HIGH(0)
006947 c0e1      	RJMP _0x20E0070
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
006948 940e cdbc 	CALL SUBOPT_0x1DB
00694a 931a      	ST   -Y,R17
00694b 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
00694c 940e ce2f 	CALL SUBOPT_0x1F2
00694e 85e8      	LDD  R30,Y+8
00694f 85f9      	LDD  R31,Y+8+1
006950 940e c405 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
006952 940e ce34 	CALL SUBOPT_0x1F3
006954 f449      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
006955 eced     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
006956 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
006957 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
006958 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
006959 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
00695b efef      	LDI  R30,LOW(65535)
00695c efff      	LDI  R31,HIGH(65535)
00695d c018      	RJMP _0x20E0072
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
00695e efe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
00695f e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
006960 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
006961 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
006962 940e ce38 	CALL SUBOPT_0x1F4
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
006964 940e c6b1 	CALL SUBOPT_0xB4
006966 940e 47c7 	CALL _RTC_setBinary
006968 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
006969 2311      	TST  R17
00696a f44a      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
00696b e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
00696c e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
00696d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
00696e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
00696f 940e ce38 	CALL SUBOPT_0x1F4
                 ; 000B 0206         return -1;
006971 efef      	LDI  R30,LOW(65535)
006972 efff      	LDI  R31,HIGH(65535)
006973 c002      	RJMP _0x20E0072
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
006974 e0e0      	LDI  R30,LOW(0)
006975 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0072:
006976 8119      	LDD  R17,Y+1
006977 8108      	LDD  R16,Y+0
006978 9628      	ADIW R28,8
006979 9508      	RET
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
00697a 940e ce3c 	CALL SUBOPT_0x1F5
                 ;	period -> Y+2
                 ;	res -> R16,R17
00697c 940e ce34 	CALL SUBOPT_0x1F3
00697e f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
00697f e5ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
006980 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
006981 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
006982 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
006983 940e c1f5 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
006985 c023      	RJMP _0x16005E
                 _0x16005D:
006986 940e c6b1 	CALL SUBOPT_0xB4
                +
006988 32ac     +CPI R26 , LOW ( 0x12C )
006989 e0e1     +LDI R30 , HIGH ( 0x12C )
00698a 07be     +CPC R27 , R30
00698b e0e0     +LDI R30 , BYTE3 ( 0x12C )
00698c 078e     +CPC R24 , R30
00698d e0e0     +LDI R30 , BYTE4 ( 0x12C )
00698e 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
00698f f050      	BRLO _0x160060
006990 940e c6b1 	CALL SUBOPT_0xB4
                +
006992 38a1     +CPI R26 , LOW ( 0x15181 )
006993 e5e1     +LDI R30 , HIGH ( 0x15181 )
006994 07be     +CPC R27 , R30
006995 e0e1     +LDI R30 , BYTE3 ( 0x15181 )
006996 078e     +CPC R24 , R30
006997 e0e0     +LDI R30 , BYTE4 ( 0x15181 )
006998 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
006999 f048      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
00699a e8e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
00699b e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
00699c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
00699d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
00699e 940e ce38 	CALL SUBOPT_0x1F4
                 ; 000B 0215         return -1;
0069a0 efef      	LDI  R30,LOW(65535)
0069a1 efff      	LDI  R31,HIGH(65535)
0069a2 c018      	RJMP _0x20E0071
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
0069a3 eaea     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
0069a4 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
0069a5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
0069a6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
0069a7 940e ce38 	CALL SUBOPT_0x1F4
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
0069a9 940e c6b1 	CALL SUBOPT_0xB4
0069ab 940e 7d92 	CALL _ALARM_mute
0069ad 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
0069ae 2311      	TST  R17
0069af f44a      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
0069b0 ede5     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
0069b1 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
0069b2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
0069b3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
0069b4 940e ce38 	CALL SUBOPT_0x1F4
                 ; 000B 021E         return -1;
0069b6 efef      	LDI  R30,LOW(65535)
0069b7 efff      	LDI  R31,HIGH(65535)
0069b8 c002      	RJMP _0x20E0071
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
0069b9 e0e0      	LDI  R30,LOW(0)
0069ba e0f0      	LDI  R31,HIGH(0)
                 _0x20E0071:
0069bb 8119      	LDD  R17,Y+1
0069bc 8108      	LDD  R16,Y+0
0069bd 9626      	ADIW R28,6
0069be 9508      	RET
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
0069bf e0e0      	LDI  R30,LOW(0)
0069c0 e0f0      	LDI  R31,HIGH(0)
0069c1 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
0069c2 940e c566 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
0069c4 d0cd      	RCALL _ETH_findFreeSlotWaitQueue
0069c5 2f0e      	MOV  R16,R30
0069c6 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
0069c7 2311      	TST  R17
0069c8 f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
0069c9 e0e2     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
0069ca e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
0069cb e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
0069cc e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
0069cd 940e c1f5 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
0069cf efef      	LDI  R30,LOW(65535)
0069d0 efff      	LDI  R31,HIGH(65535)
0069d1 c055      	RJMP _0x20E006F
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
0069d2 940e cb0a 	CALL SUBOPT_0x16E
                +
0069d4 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
0069d5 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
0069d6 93ff      	PUSH R31
0069d7 93ef      	PUSH R30
0069d8 81ac      	LDD  R26,Y+4
0069d9 81bd      	LDD  R27,Y+4+1
0069da 940e a6d0 	CALL _malloc
0069dc 91af      	POP  R26
0069dd 91bf      	POP  R27
0069de 93ed      	ST   X+,R30
0069df 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
0069e0 940e cb0a 	CALL SUBOPT_0x16E
0069e2 940e cb47 	CALL SUBOPT_0x175
0069e4 9730      	SBIW R30,0
0069e5 f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
0069e6 e3e7     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
0069e7 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
0069e8 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
0069e9 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
0069ea 940e c907 	CALL SUBOPT_0x117
                 ; 000C 001F         return -1;
0069ec efef      	LDI  R30,LOW(65535)
0069ed efff      	LDI  R31,HIGH(65535)
0069ee c038      	RJMP _0x20E006F
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
0069ef 940e cb0a 	CALL SUBOPT_0x16E
0069f1 940e cb47 	CALL SUBOPT_0x175
0069f3 93fa      	ST   -Y,R31
0069f4 93ea      	ST   -Y,R30
0069f5 940e cbf8 	CALL SUBOPT_0x193
0069f7 85a8      	LDD  R26,Y+8
0069f8 85b9      	LDD  R27,Y+8+1
0069f9 940e a70d 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
0069fb 940e cb0a 	CALL SUBOPT_0x16E
                +
0069fd 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0069fe 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0069ff 81ac      	LDD  R26,Y+4
006a00 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
006a01 940e cb0a 	CALL SUBOPT_0x16E
                +
006a03 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
006a04 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
006a05 85a8      	LDD  R26,Y+8
006a06 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
006a07 940e cb0a 	CALL SUBOPT_0x16E
006a09 940e ce41 	CALL SUBOPT_0x1F6
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
006a0b 940e cb0a 	CALL SUBOPT_0x16E
                +
006a0d 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
006a0e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
006a0f 81aa      	LDD  R26,Y+2
006a10 81bb      	LDD  R27,Y+2+1
006a11 83a0      	STD  Z+0,R26
006a12 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
006a13 940e cb0a 	CALL SUBOPT_0x16E
006a15 940e cb39 	CALL SUBOPT_0x173
006a17 940e cb3e 	CALL SUBOPT_0x174
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
006a19 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
006a1a e5ee     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
006a1b e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
006a1c e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
006a1d e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
006a1e 940e ce46 	CALL SUBOPT_0x1F7
006a20 01f8      	MOVW R30,R16
006a21 940e e201 	CALL __CWD1
006a23 940e c2ce 	CALL SUBOPT_0x21
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
006a25 2de7      	MOV  R30,R7
006a26 e0f0      	LDI  R31,0
                 _0x20E006F:
006a27 8119      	LDD  R17,Y+1
006a28 8108      	LDD  R16,Y+0
                 _0x20E0070:
006a29 9629      	ADIW R28,9
006a2a 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a2b 93aa      	ST   -Y,R26
006a2c 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a2d e010      	LDI  R17,LOW(0)
                 _0x180006:
006a2e 301f      	CPI  R17,15
006a2f f4f8      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
006a30 940e ce4b 	CALL SUBOPT_0x1F8
006a32 81e0      	LD   R30,Z
006a33 81a9      	LDD  R26,Y+1
006a34 17ea      	CP   R30,R26
006a35 f4b9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
006a36 e0ab      	LDI  R26,LOW(11)
006a37 9f1a      	MUL  R17,R26
006a38 01f0      	MOVW R30,R0
006a39 940e cb47 	CALL SUBOPT_0x175
006a3b 940e ce51 	CALL SUBOPT_0x1F9
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
006a3d 940e ce65 	CALL SUBOPT_0x1FA
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
006a3f 940e ce6b 	CALL SUBOPT_0x1FB
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
006a41 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
006a42 eae9     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
006a43 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
006a44 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
006a45 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
006a46 940e ce7e 	CALL SUBOPT_0x1FC
006a48 940e ce83 	CALL SUBOPT_0x1FD
                 ; 000C 0044             return ETH_waitQCount;
006a4a 2de7      	MOV  R30,R7
006a4b e0f0      	LDI  R31,0
006a4c c042      	RJMP _0x20E006D
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
006a4d 5f1f      	SUBI R17,-1
006a4e cfdf      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
006a4f efe6     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
006a50 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
006a51 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
006a52 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
006a53 940e e324 	CALL __PUTPARD1
006a55 81ed      	LDD  R30,Y+5
006a56 940e c309 	CALL SUBOPT_0x29
                 ; 000C 0048     return -1;
006a58 efef      	LDI  R30,LOW(65535)
006a59 efff      	LDI  R31,HIGH(65535)
006a5a c034      	RJMP _0x20E006D
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a5b 931a      	ST   -Y,R17
                 ;	i -> R17
006a5c e010      	LDI  R17,LOW(0)
                 _0x18000A:
006a5d 301f      	CPI  R17,15
006a5e f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
006a5f e0ab      	LDI  R26,LOW(11)
006a60 9f1a      	MUL  R17,R26
006a61 01f0      	MOVW R30,R0
006a62 940e cb47 	CALL SUBOPT_0x175
006a64 940e ce51 	CALL SUBOPT_0x1F9
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
006a66 940e ce65 	CALL SUBOPT_0x1FA
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
006a68 940e ce6b 	CALL SUBOPT_0x1FB
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
006a6a 5f1f      	SUBI R17,-1
006a6b cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
006a6c c050      	RJMP _0x20E006B
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a6d 93aa      	ST   -Y,R26
006a6e 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a6f e010      	LDI  R17,LOW(0)
                 _0x18000D:
006a70 301f      	CPI  R17,15
006a71 f450      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
006a72 940e ce4b 	CALL SUBOPT_0x1F8
006a74 81e0      	LD   R30,Z
006a75 81a9      	LDD  R26,Y+1
006a76 17ea      	CP   R30,R26
006a77 f411      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
006a78 e0e1      	LDI  R30,LOW(1)
006a79 c015      	RJMP _0x20E006D
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
006a7a 5f1f      	SUBI R17,-1
006a7b cff4      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
006a7c c011      	RJMP _0x20E006E
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
006a7d 93aa      	ST   -Y,R26
006a7e 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a7f e010      	LDI  R17,LOW(0)
                 _0x180011:
006a80 3614      	CPI  R17,100
006a81 f460      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
006a82 940e c68a 	CALL SUBOPT_0xAC
006a84 51e4      	SUBI R30,LOW(-_sess_list)
006a85 4efb      	SBCI R31,HIGH(-_sess_list)
006a86 81e0      	LD   R30,Z
006a87 81a9      	LDD  R26,Y+1
006a88 17ea      	CP   R30,R26
006a89 f411      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
006a8a e0e1      	LDI  R30,LOW(1)
006a8b c003      	RJMP _0x20E006D
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
006a8c 5f1f      	SUBI R17,-1
006a8d cff2      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
                 _0x20E006E:
006a8e e0e0      	LDI  R30,LOW(0)
                 _0x20E006D:
006a8f 8118      	LDD  R17,Y+0
006a90 9622      	ADIW R28,2
006a91 9508      	RET
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a92 931a      	ST   -Y,R17
                 ;	i -> R17
006a93 e010      	LDI  R17,LOW(0)
                 _0x180015:
006a94 301f      	CPI  R17,15
006a95 f450      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006a96 e0ab      	LDI  R26,LOW(11)
006a97 9f1a      	MUL  R17,R26
006a98 01f0      	MOVW R30,R0
                +
006a99 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006a9a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006a9b 81e0      	LD   R30,Z
006a9c 30e0      	CPI  R30,0
006a9d f0f1      	BREQ _0x20E006C
                 ; 000C 0079             return i;
                 ; 000C 007A         }
                 ; 000C 007B     }
006a9e 5f1f      	SUBI R17,-1
006a9f cff4      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
006aa0 efef      	LDI  R30,LOW(255)
006aa1 c01b      	RJMP _0x20E006B
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
006aa2 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
006aa3 940e a61b 	CALL _rand
006aa5 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006aa6 2fa1      	MOV  R26,R17
006aa7 dfc5      	RCALL _ETH_isIdExist
006aa8 30e0      	CPI  R30,0
006aa9 f441      	BRNE _0x18001B
006aaa 3010      	CPI  R17,0
006aab f031      	BREQ _0x18001B
006aac 3f1f      	CPI  R17,255
006aad f021      	BREQ _0x18001B
006aae 2fa1      	MOV  R26,R17
006aaf dfcd      	RCALL _ETH_isIdUsed
006ab0 30e0      	CPI  R30,0
006ab1 f009      	BREQ _0x18001A
                 _0x18001B:
006ab2 cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
006ab3 01f4      	MOVW R30,R8
006ab4 51e4      	SUBI R30,LOW(-_sess_list)
006ab5 4efb      	SBCI R31,HIGH(-_sess_list)
006ab6 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006ab7 01d4      	MOVW R26,R8
006ab8 9611      	ADIW R26,1
006ab9 940e ce89 	CALL SUBOPT_0x1FE
006abb 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
                 _0x20E006C:
006abc 2fe1      	MOV  R30,R17
                 _0x20E006B:
006abd 9119      	LD   R17,Y+
006abe 9508      	RET
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;#include "ad595.h"
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;
                 ;/******************
                 ;Y = mX + c
                 ;temp = (epFactor_B * adc) + epFactor_C
                 ;******************/
                 ;
                 ;eeprom float            epFactor_A[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_B[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_C[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet1[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef1[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef1[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet2[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef2[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef2[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet3[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef3[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef3[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epCalType[5]            = {CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT};
                 ;
                 ;flash float             epTMECTempSlope         = -0.1114;
                 ;flash float             epTMECTempOffset        = 63.73;
                 ;
                 ;flash float             epPT100TempSlope         = 1.0938;
                 ;flash float             epPT100TempOffset        = -208.42;
                 ;
                 ;//flash float             epPT100Temp_A           = 0.00005;
                 ;//flash float             epPT100Temp_B           = 0.1308;
                 ;//flash float             epPT100Temp_C           = -221.71;
                 ;
                 ;flash float             epPT100Temp_A           = 0.000633;
                 ;flash float             epPT100Temp_B           = 0.162124;
                 ;flash float             epPT100Temp_C           = -180.886306;
                 ;
                 ;// Parameter for sensor pt100
                 ;flash float             tempTable[15]           = {-80.0, -70.0, -60.0, -50.0, -40.0, -30.0, -20.0, -10.0, 0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0};
                 ;//flash float             voltTable[13]           = {0.7276, 0.7734, 0.8176, 0.8604, 0.9019, 0.9420, 0.9810, 1.0188, 1.0556, 1.0912, 1.1259, 1.1596, 1.1924};
                 ;flash float             adcTable[15]            = {290.7750, 309.0467, 326.7189, 343.8240, 360.3923, 376.4502, 392.0239,
                 ;                                                    407.1367, 421.8099, 436.0630, 449.9139, 463.3793, 476.4748, 489.2156, 501.6149};
                 ;
                 ;float iTCVoltData[5] = {0.0,0.0,0.0,0.0,0.0};
                 ;float iTCADCData[5] = {0.0,0.0,0.0,0.0,0.0};
                 ;/*============================================================*/
                 ;void iSensorGetADCValue(){
                 ; 000D 003C void iSensorGetADCValue(){
                 
                 	.CSEG
                 _iSensorGetADCValue:
                 ; 000D 003D     long viADCbuffer = 0;
                 ; 000D 003E     unsigned int viADCSmoothValue = 0;
                 ; 000D 003F     int i = 0,j = 0;
                 ; 000D 0040     viADCbuffer = 0;
006abf 940e cc4d 	CALL SUBOPT_0x1A3
006ac1 940e c365 	CALL SUBOPT_0x37
                 ;	viADCbuffer -> Y+6
                 ;	viADCSmoothValue -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
006ac3 940e ce8e 	CALL SUBOPT_0x1FF
                 ; 000D 0041     printDebug("[iSensorGetValue]data[");
                +
006ac5 eaec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006ac6 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006ac7 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006ac8 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006ac9 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0042     for(i=0;i<5;i++){
                +
006acb e020     +LDI R18 , LOW ( 0 )
006acc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1A0004:
                +
006acd 3025     +CPI R18 , LOW ( 5 )
006ace e0e0     +LDI R30 , HIGH ( 5 )
006acf 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
006ad0 f5c4      	BRGE _0x1A0005
                 ; 000D 0043         #asm("wdr")
006ad1 95a8      	wdr
                 ; 000D 0044         viADCbuffer = 0;
006ad2 940e ce8e 	CALL SUBOPT_0x1FF
                 ; 000D 0045         for(j=0;j<30;j++){
                +
006ad4 e040     +LDI R20 , LOW ( 0 )
006ad5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0007:
                +
006ad6 314e     +CPI R20 , LOW ( 30 )
006ad7 e0e0     +LDI R30 , HIGH ( 30 )
006ad8 075e     +CPC R21 , R30
                 	__CPWRN 20,21,30
006ad9 f46c      	BRGE _0x1A0008
                 ; 000D 0046             viADCbuffer += read_adc(8+i);
006ada 2fa2      	MOV  R26,R18
006adb 5fa8      	SUBI R26,-LOW(8)
006adc 940e 4420 	CALL _read_adc
006ade 940e ce94 	CALL SUBOPT_0x200
006ae0 940e e17c 	CALL __ADDD12
006ae2 940e c6bb 	CALL SUBOPT_0xB6
                 ; 000D 0047         }
                +
006ae4 5f4f     +SUBI R20 , LOW ( - 1 )
006ae5 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
006ae6 cfef      	RJMP _0x1A0007
                 _0x1A0008:
                 ; 000D 0048         viADCSmoothValue = (unsigned int)(viADCbuffer/30);
006ae7 940e c45d 	CALL SUBOPT_0x59
                +
006ae9 e1ee     +LDI R30 , LOW ( 0x1E )
006aea e0f0     +LDI R31 , HIGH ( 0x1E )
006aeb e060     +LDI R22 , BYTE3 ( 0x1E )
006aec e070     +LDI R23 , BYTE4 ( 0x1E )
                 	__GETD1N 0x1E
006aed 940e e29d 	CALL __DIVD21
006aef 018f      	MOVW R16,R30
                 ; 000D 0049         if(i==4){
006af0 e0e4      	LDI  R30,LOW(4)
006af1 e0f0      	LDI  R31,HIGH(4)
006af2 17e2      	CP   R30,R18
006af3 07f3      	CPC  R31,R19
006af4 f429      	BRNE _0x1A0009
                 ; 000D 004A            printDebug("ch%d: %04d ",i+1,viADCSmoothValue);
                +
006af5 ece3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 23 ) )
006af6 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 23 ) )
006af7 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 23 ) )
006af8 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 23 ) )
                 	__POINTD1FN _0x1A0000,23
006af9 c004      	RJMP _0x1A00C2
                 ; 000D 004B         }else{
                 _0x1A0009:
                 ; 000D 004C            printDebug("ch%d: %04d, ",i+1,viADCSmoothValue);
                +
006afa ecef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 35 ) )
006afb e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 35 ) )
006afc e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 35 ) )
006afd e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 35 ) )
                 	__POINTD1FN _0x1A0000,35
                 _0x1A00C2:
006afe 940e e324 	CALL __PUTPARD1
006b00 01f9      	MOVW R30,R18
006b01 940e ce99 	CALL SUBOPT_0x201
006b03 01f8      	MOVW R30,R16
006b04 940e c9d8 	CALL SUBOPT_0x13E
                 ; 000D 004D         }
                 ; 000D 004E 
                 ; 000D 004F     }
                +
006b06 5f2f     +SUBI R18 , LOW ( - 1 )
006b07 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006b08 cfc4      	RJMP _0x1A0004
                 _0x1A0005:
                 ; 000D 0050     printDebug("]\r\n");
                +
006b09 edec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 48 ) )
006b0a e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 48 ) )
006b0b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 48 ) )
006b0c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 48 ) )
                 	__POINTD1FN _0x1A0000,48
006b0d 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0051     return;
006b0f 940e e3a0 	CALL __LOADLOCR6
006b11 962a      	ADIW R28,10
006b12 9508      	RET
                 ; 000D 0052 }
                 ;
                 ;void updateSensorADC(int ch)
                 ; 000D 0055 {
                 _updateSensorADC:
                 ; 000D 0056     int adc_raw                                     = 0;
                 ; 000D 0057 
                 ; 000D 0058     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006b13 940e c566 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	adc_raw -> R16,R17
                +
006b15 e000     +LDI R16 , LOW ( 0 )
006b16 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006b17 940e c325 	CALL SUBOPT_0x2E
006b19 f021      	BREQ _0x1A000C
006b1a 940e c325 	CALL SUBOPT_0x2E
006b1c 30e3      	CPI  R30,LOW(0x3)
006b1d f411      	BRNE _0x1A000B
                 _0x1A000C:
                 ; 000D 0059         adc_raw     = read_adc(8);
006b1e e0a8      	LDI  R26,LOW(8)
006b1f c009      	RJMP _0x1A00C3
                 ; 000D 005A     }
                 ; 000D 005B     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A000B:
006b20 940e c5f4 	CALL SUBOPT_0x96
006b22 f021      	BREQ _0x1A0010
006b23 940e c325 	CALL SUBOPT_0x2E
006b25 30e2      	CPI  R30,LOW(0x2)
006b26 f429      	BRNE _0x1A000F
                 _0x1A0010:
                 ; 000D 005C         adc_raw     = read_adc(8+ch);
006b27 81aa      	LDD  R26,Y+2
006b28 5fa8      	SUBI R26,-LOW(8)
                 _0x1A00C3:
006b29 940e 4420 	CALL _read_adc
006b2b 018f      	MOVW R16,R30
                 ; 000D 005D     }
                 ; 000D 005E 
                 ; 000D 005F     if( fabs(adcData[ch] - adc_raw) < 10){
                 _0x1A000F:
006b2c 940e ce9f 	CALL SUBOPT_0x202
006b2e 940e c2af 	CALL SUBOPT_0x1B
006b30 940e cea3 	CALL SUBOPT_0x203
006b32 940e c8be 	CALL SUBOPT_0x10B
006b34 940e e158 	CALL __CMPF12
006b36 f508      	BRSH _0x1A0012
                 ; 000D 0060         adcData[ch] = (float)((adcData[ch] * 9.9) + (float)(adc_raw * 0.1))/10;           // Temp Sensor Low-Pass Filter
006b37 940e ce9f 	CALL SUBOPT_0x202
006b39 0fea      	ADD  R30,R26
006b3a 1ffb      	ADC  R31,R27
006b3b 93ff      	PUSH R31
006b3c 93ef      	PUSH R30
006b3d 940e ce9f 	CALL SUBOPT_0x202
006b3f 940e c2af 	CALL SUBOPT_0x1B
                +
006b41 e6a6     +LDI R26 , LOW ( 0x411E6666 )
006b42 e6b6     +LDI R27 , HIGH ( 0x411E6666 )
006b43 e18e     +LDI R24 , BYTE3 ( 0x411E6666 )
006b44 e491     +LDI R25 , BYTE4 ( 0x411E6666 )
                 	__GETD2N 0x411E6666
006b45 940e e0c5 	CALL __MULF12
006b47 937f      	PUSH R23
006b48 936f      	PUSH R22
006b49 93ff      	PUSH R31
006b4a 93ef      	PUSH R30
006b4b 940e ceb5 	CALL SUBOPT_0x204
006b4d 940e c638 	CALL SUBOPT_0x9F
006b4f 91af      	POP  R26
006b50 91bf      	POP  R27
006b51 918f      	POP  R24
006b52 919f      	POP  R25
006b53 940e c63f 	CALL SUBOPT_0xA0
006b55 91af      	POP  R26
006b56 91bf      	POP  R27
006b57 c0b0      	RJMP _0x1A00C4
                 ; 000D 0061         //printDebug("<updateSensorADC>        < 10\r\n");
                 ; 000D 0062     }
                 ; 000D 0063     else if( fabs(adcData[ch] - adc_raw) < 30){
                 _0x1A0012:
006b58 940e ce9f 	CALL SUBOPT_0x202
006b5a 940e c2af 	CALL SUBOPT_0x1B
006b5c 940e cea3 	CALL SUBOPT_0x203
                +
006b5e e0e0     +LDI R30 , LOW ( 0x41F00000 )
006b5f e0f0     +LDI R31 , HIGH ( 0x41F00000 )
006b60 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
006b61 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
006b62 940e e158 	CALL __CMPF12
006b64 f518      	BRSH _0x1A0014
                 ; 000D 0064         adcData[ch] = (float)((adcData[ch] * 9.5) + (float)(adc_raw * 0.5))/10;           // Temp Sensor Low-Pass Filter
006b65 940e ce9f 	CALL SUBOPT_0x202
006b67 0fea      	ADD  R30,R26
006b68 1ffb      	ADC  R31,R27
006b69 93ff      	PUSH R31
006b6a 93ef      	PUSH R30
006b6b 940e ce9f 	CALL SUBOPT_0x202
006b6d 940e c2af 	CALL SUBOPT_0x1B
                +
006b6f e0a0     +LDI R26 , LOW ( 0x41180000 )
006b70 e0b0     +LDI R27 , HIGH ( 0x41180000 )
006b71 e188     +LDI R24 , BYTE3 ( 0x41180000 )
006b72 e491     +LDI R25 , BYTE4 ( 0x41180000 )
                 	__GETD2N 0x41180000
006b73 940e e0c5 	CALL __MULF12
006b75 937f      	PUSH R23
006b76 936f      	PUSH R22
006b77 93ff      	PUSH R31
006b78 93ef      	PUSH R30
006b79 940e ceb5 	CALL SUBOPT_0x204
006b7b 940e cebb 	CALL SUBOPT_0x205
006b7d 940e e0c5 	CALL __MULF12
006b7f 91af      	POP  R26
006b80 91bf      	POP  R27
006b81 918f      	POP  R24
006b82 919f      	POP  R25
006b83 940e c63f 	CALL SUBOPT_0xA0
006b85 91af      	POP  R26
006b86 91bf      	POP  R27
006b87 c080      	RJMP _0x1A00C4
                 ; 000D 0065         //printDebug("<updateSensorADC>                < 30\r\n");
                 ; 000D 0066     }
                 ; 000D 0067     else if( fabs(adcData[ch] - adc_raw) < 50){
                 _0x1A0014:
006b88 940e ce9f 	CALL SUBOPT_0x202
006b8a 940e c2af 	CALL SUBOPT_0x1B
006b8c 940e cea3 	CALL SUBOPT_0x203
                +
006b8e e0e0     +LDI R30 , LOW ( 0x42480000 )
006b8f e0f0     +LDI R31 , HIGH ( 0x42480000 )
006b90 e468     +LDI R22 , BYTE3 ( 0x42480000 )
006b91 e472     +LDI R23 , BYTE4 ( 0x42480000 )
                 	__GETD1N 0x42480000
006b92 940e e158 	CALL __CMPF12
006b94 f528      	BRSH _0x1A0016
                 ; 000D 0068         adcData[ch] = (float)((adcData[ch] * 8.5) + (float)(adc_raw * 1.5))/10;           // Temp Sensor Low-Pass Filter
006b95 940e ce9f 	CALL SUBOPT_0x202
006b97 0fea      	ADD  R30,R26
006b98 1ffb      	ADC  R31,R27
006b99 93ff      	PUSH R31
006b9a 93ef      	PUSH R30
006b9b 940e ce9f 	CALL SUBOPT_0x202
006b9d 940e c2af 	CALL SUBOPT_0x1B
                +
006b9f e0a0     +LDI R26 , LOW ( 0x41080000 )
006ba0 e0b0     +LDI R27 , HIGH ( 0x41080000 )
006ba1 e088     +LDI R24 , BYTE3 ( 0x41080000 )
006ba2 e491     +LDI R25 , BYTE4 ( 0x41080000 )
                 	__GETD2N 0x41080000
006ba3 940e e0c5 	CALL __MULF12
006ba5 937f      	PUSH R23
006ba6 936f      	PUSH R22
006ba7 93ff      	PUSH R31
006ba8 93ef      	PUSH R30
006ba9 940e ceb5 	CALL SUBOPT_0x204
                +
006bab e0a0     +LDI R26 , LOW ( 0x3FC00000 )
006bac e0b0     +LDI R27 , HIGH ( 0x3FC00000 )
006bad ec80     +LDI R24 , BYTE3 ( 0x3FC00000 )
006bae e39f     +LDI R25 , BYTE4 ( 0x3FC00000 )
                 	__GETD2N 0x3FC00000
006baf 940e e0c5 	CALL __MULF12
006bb1 91af      	POP  R26
006bb2 91bf      	POP  R27
006bb3 918f      	POP  R24
006bb4 919f      	POP  R25
006bb5 940e c63f 	CALL SUBOPT_0xA0
006bb7 91af      	POP  R26
006bb8 91bf      	POP  R27
006bb9 c04e      	RJMP _0x1A00C4
                 ; 000D 0069         //printDebug("<updateSensorADC>                            < 50\r\n");
                 ; 000D 006A     }
                 ; 000D 006B     else if( fabs(adcData[ch] - adc_raw) < 100){
                 _0x1A0016:
006bba 940e ce9f 	CALL SUBOPT_0x202
006bbc 940e c2af 	CALL SUBOPT_0x1B
006bbe 940e cea3 	CALL SUBOPT_0x203
                +
006bc0 e0e0     +LDI R30 , LOW ( 0x42C80000 )
006bc1 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
006bc2 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
006bc3 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
006bc4 940e e158 	CALL __CMPF12
006bc6 f528      	BRSH _0x1A0018
                 ; 000D 006C         adcData[ch] = (float)((adcData[ch] * 7.0) + (float)(adc_raw * 3.0))/10;           // Temp Sensor Low-Pass Filter
006bc7 940e ce9f 	CALL SUBOPT_0x202
006bc9 0fea      	ADD  R30,R26
006bca 1ffb      	ADC  R31,R27
006bcb 93ff      	PUSH R31
006bcc 93ef      	PUSH R30
006bcd 940e ce9f 	CALL SUBOPT_0x202
006bcf 940e c2af 	CALL SUBOPT_0x1B
                +
006bd1 e0a0     +LDI R26 , LOW ( 0x40E00000 )
006bd2 e0b0     +LDI R27 , HIGH ( 0x40E00000 )
006bd3 ee80     +LDI R24 , BYTE3 ( 0x40E00000 )
006bd4 e490     +LDI R25 , BYTE4 ( 0x40E00000 )
                 	__GETD2N 0x40E00000
006bd5 940e e0c5 	CALL __MULF12
006bd7 937f      	PUSH R23
006bd8 936f      	PUSH R22
006bd9 93ff      	PUSH R31
006bda 93ef      	PUSH R30
006bdb 940e ceb5 	CALL SUBOPT_0x204
                +
006bdd e0a0     +LDI R26 , LOW ( 0x40400000 )
006bde e0b0     +LDI R27 , HIGH ( 0x40400000 )
006bdf e480     +LDI R24 , BYTE3 ( 0x40400000 )
006be0 e490     +LDI R25 , BYTE4 ( 0x40400000 )
                 	__GETD2N 0x40400000
006be1 940e e0c5 	CALL __MULF12
006be3 91af      	POP  R26
006be4 91bf      	POP  R27
006be5 918f      	POP  R24
006be6 919f      	POP  R25
006be7 940e c63f 	CALL SUBOPT_0xA0
006be9 91af      	POP  R26
006bea 91bf      	POP  R27
006beb c01c      	RJMP _0x1A00C4
                 ; 000D 006D         //printDebug("<updateSensorADC>                                    < 100\r\n");
                 ; 000D 006E     }
                 ; 000D 006F     else{
                 _0x1A0018:
                 ; 000D 0070         adcData[ch] = (float)((adcData[ch] * 5.0) + (float)(adc_raw * 5.0))/10;           // Temp Sensor Low-Pass Filter
006bec 940e ce9f 	CALL SUBOPT_0x202
006bee 0fea      	ADD  R30,R26
006bef 1ffb      	ADC  R31,R27
006bf0 93ff      	PUSH R31
006bf1 93ef      	PUSH R30
006bf2 940e ce9f 	CALL SUBOPT_0x202
006bf4 940e c2af 	CALL SUBOPT_0x1B
006bf6 940e cec0 	CALL SUBOPT_0x206
006bf8 937f      	PUSH R23
006bf9 936f      	PUSH R22
006bfa 93ff      	PUSH R31
006bfb 93ef      	PUSH R30
006bfc 940e ceb5 	CALL SUBOPT_0x204
006bfe 940e cec0 	CALL SUBOPT_0x206
006c00 91af      	POP  R26
006c01 91bf      	POP  R27
006c02 918f      	POP  R24
006c03 919f      	POP  R25
006c04 940e c63f 	CALL SUBOPT_0xA0
006c06 91af      	POP  R26
006c07 91bf      	POP  R27
                 _0x1A00C4:
006c08 940e e2ff 	CALL __PUTDP1
                 ; 000D 0071         //printDebug("<updateSensorADC>                                            >= 100\r\n");
                 ; 000D 0072     }
                 ; 000D 0073 
                 ; 000D 0074     return;
006c0a 8119      	LDD  R17,Y+1
006c0b 8108      	LDD  R16,Y+0
006c0c 9624      	ADIW R28,4
006c0d 9508      	RET
                 ; 000D 0075 }
                 ;/*============================================================*/
                 ;
                 ;float iUpdateSmoothlyADC(int ch){
                 ; 000D 0078 float iUpdateSmoothlyADC(int ch){
                 _iUpdateSmoothlyADC:
                 ; 000D 0079      unsigned long viADCbuffer = 0;
                 ; 000D 007A      float viRawVoltValue = 0.0;
                 ; 000D 007B      unsigned int i = 0;
                 ; 000D 007C      viADCbuffer = 0;
006c0e 93ba      	ST   -Y,R27
006c0f 93aa      	ST   -Y,R26
006c10 9728      	SBIW R28,8
006c11 940e cec7 	CALL SUBOPT_0x207
006c13 e0e0      	LDI  R30,LOW(0)
006c14 83eb      	STD  Y+3,R30
006c15 83ec      	STD  Y+4,R30
006c16 83ed      	STD  Y+5,R30
006c17 83ee      	STD  Y+6,R30
006c18 83ef      	STD  Y+7,R30
006c19 940e ca29 	CALL SUBOPT_0x14C
                 ;	ch -> Y+10
                 ;	viADCbuffer -> Y+6
                 ;	viRawVoltValue -> Y+2
                 ;	i -> R16,R17
006c1b 940e ce8e 	CALL SUBOPT_0x1FF
                 ; 000D 007D      for(i=0;i<20;i++){
                +
006c1d e000     +LDI R16 , LOW ( 0 )
006c1e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A001B:
                +
006c1f 3104     +CPI R16 , LOW ( 20 )
006c20 e0e0     +LDI R30 , HIGH ( 20 )
006c21 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
006c22 f478      	BRSH _0x1A001C
                 ; 000D 007E         viADCbuffer += (unsigned long)(read_adc(8+ch));
006c23 85aa      	LDD  R26,Y+10
006c24 5fa8      	SUBI R26,-LOW(8)
006c25 940e 4420 	CALL _read_adc
006c27 2766      	CLR  R22
006c28 2777      	CLR  R23
006c29 940e c45d 	CALL SUBOPT_0x59
006c2b 940e e17c 	CALL __ADDD12
006c2d 940e c6bb 	CALL SUBOPT_0xB6
                 ; 000D 007F      }
                +
006c2f 5f0f     +SUBI R16 , LOW ( - 1 )
006c30 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006c31 cfed      	RJMP _0x1A001B
                 _0x1A001C:
                 ; 000D 0080      viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
006c32 940e cecc 	CALL SUBOPT_0x208
                +
006c34 e0a0     +LDI R26 , LOW ( 0x41A00000 )
006c35 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
006c36 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
006c37 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
006c38 940e a289 	CALL _iAD595ADCToVolt
006c3a 940e c821 	CALL SUBOPT_0xF0
                 ; 000D 0081 
                 ; 000D 0082      return viRawVoltValue;
006c3c 8119      	LDD  R17,Y+1
006c3d 8108      	LDD  R16,Y+0
006c3e 962c      	ADIW R28,12
006c3f 9508      	RET
                 ; 000D 0083 }
                 ;
                 ;float iReadSmoothlyADC(int ch){
                 ; 000D 0085 float iReadSmoothlyADC(int ch){
                 ; 000D 0086      unsigned long viADCbuffer = 0;
                 ; 000D 0087      float viRawVoltValue = 0.0;
                 ; 000D 0088      unsigned int i = 0;
                 ; 000D 0089      float viSmoothlyValue = 20.0;
                 ; 000D 008A 
                 ; 000D 008B      viADCbuffer = 0;
                 ;	ch -> Y+14
                 ;	viADCbuffer -> Y+10
                 ;	viRawVoltValue -> Y+6
                 ;	i -> R16,R17
                 ;	viSmoothlyValue -> Y+2
                 ; 000D 008C      for(i=0;i<20;i++){
                 ; 000D 008D         viADCbuffer += (unsigned long)(read_adc(8+ch));
                 ; 000D 008E      }
                 ; 000D 008F 
                 ; 000D 0090      return (float)(viADCbuffer/viSmoothlyValue);
                 ; 000D 0091 }
                 ;
                 ;//void iUpdateAD595Sensor(){
                 ;//    if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ;//        adc_raw     = read_adc(8);
                 ;//    }
                 ;//}
                 ;
                 ;int sensorRead(int ch, struct sens_val_st *sensor)
                 ; 000D 009A {
                 _sensorRead:
                 ; 000D 009B     static TIMER t[MAX_SENS_CHANNEL]                = {0,0,0,0,0};
                 ; 000D 009C     static char lastCheck[MAX_SENS_CHANNEL]         = {0xFF,0xFF,0xFF,0xFF,0xFF};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000D 009D     static char steadyState[MAX_SENS_CHANNEL]       = {0,0,0,0,0};
                 ; 000D 009E     char channelConnect                             = 0;
                 ; 000D 009F     float x_1 = 0.0;
                 ; 000D 00A0     float x_2 = 0.0;
                 ; 000D 00A1     float y_1 = 0.0;
                 ; 000D 00A2     float y_2 = 0.0;
                 ; 000D 00A3 
                 ; 000D 00A4     const float  viZeroSet   = 1.667;
                 ; 000D 00A5 
                 ; 000D 00A6     unsigned long viADCbuffer;
                 ; 000D 00A7     int i = 0;
                 ; 000D 00A8     float offset = 0.0;
                 ; 000D 00A9     float sensorRef1 = 0.0,sensorRef2 = 0.0,sensorRef3 = 0.0;
                 ; 000D 00AA     float stdMeter1 = 0.0,stdMeter2 = 0.0,stdMeter3 = 0.0;        //standrad  meter
                 ; 000D 00AB     float lowRange = 0.0;
                 ; 000D 00AC     float stdMeterRange = 0.0;
                 ; 000D 00AD     float factorAA = 0.0,factorBB = 0.0,factorCC = 0.0;
                 ; 000D 00AE     float viSensorTempValue = 0.0;
                 ; 000D 00AF     float viRawVoltValue = 0.0;
                 ; 000D 00B0     float viRiaseUpVoltValue = 0.0;
                 ; 000D 00B1     float viVoltUseCaluate = 0.0;       // + to -
                 ; 000D 00B2 
                 ; 000D 00B3     if( (ch<0) || (ch>=MAX_SENS_CHANNEL) ){
006c40 93ba      	ST   -Y,R27
006c41 93aa      	ST   -Y,R26
006c42 97ef      	SBIW R28,63
006c43 9769      	SBIW R28,25
006c44 e588      	LDI  R24,88
006c45 e0a0      	LDI  R26,LOW(0)
006c46 e0b0      	LDI  R27,HIGH(0)
006c47 e4e0      	LDI  R30,LOW(_0x1A0022*2)
006c48 e4f4      	LDI  R31,HIGH(_0x1A0022*2)
006c49 e060      	LDI  R22,BYTE3(_0x1A0022*2)
006c4a 940e e3a7 	CALL __INITLOCB
006c4c 940e e39b 	CALL __SAVELOCR4
                 ;	ch -> Y+94
                 ;	*sensor -> Y+92
                 ;	channelConnect -> R17
                 ;	x_1 -> Y+88
                 ;	x_2 -> Y+84
                 ;	y_1 -> Y+80
                 ;	y_2 -> Y+76
                 ;	viZeroSet -> Y+72
                 ;	viADCbuffer -> Y+68
                 ;	i -> R18,R19
                 ;	offset -> Y+64
                 ;	sensorRef1 -> Y+60
                 ;	sensorRef2 -> Y+56
                 ;	sensorRef3 -> Y+52
                 ;	stdMeter1 -> Y+48
                 ;	stdMeter2 -> Y+44
                 ;	stdMeter3 -> Y+40
                 ;	lowRange -> Y+36
                 ;	stdMeterRange -> Y+32
                 ;	factorAA -> Y+28
                 ;	factorBB -> Y+24
                 ;	factorCC -> Y+20
                 ;	viSensorTempValue -> Y+16
                 ;	viRawVoltValue -> Y+12
                 ;	viRiaseUpVoltValue -> Y+8
                 ;	viVoltUseCaluate -> Y+4
006c4e e010      	LDI  R17,0
                +
006c4f e020     +LDI R18 , LOW ( 0 )
006c50 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006c51 01de     +MOVW R26 , R28
006c52 5aa1     +SUBI R26 , LOW ( - 95 )
006c53 4fbf     +SBCI R27 , HIGH ( - 95 )
006c54 91ac     +LD R26 , X
                 	__GETB2SX 95
006c55 23aa      	TST  R26
006c56 f022      	BRMI _0x1A0024
006c57 940e ced1 	CALL SUBOPT_0x209
006c59 9715      	SBIW R26,5
006c5a f04c      	BRLT _0x1A0023
                 _0x1A0024:
                 ; 000D 00B4         printDebug("<sensorRead> ERR: ch value out of range\r\n");
                +
006c5b eee0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 52 ) )
006c5c e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 52 ) )
006c5d e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 52 ) )
006c5e e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 52 ) )
                 	__POINTD1FN _0x1A0000,52
006c5f 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 00B5         return -3;
006c61 efed      	LDI  R30,LOW(65533)
006c62 efff      	LDI  R31,HIGH(65533)
006c63 c2ff      	RJMP _0x20E006A
                 ; 000D 00B6     }
                 ; 000D 00B7 
                 ; 000D 00B8     // ----- Check Sensor Status (Connected-Disconnected) ----- //
                 ; 000D 00B9     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0023:
006c64 940e c325 	CALL SUBOPT_0x2E
006c66 f021      	BREQ _0x1A0027
006c67 940e c325 	CALL SUBOPT_0x2E
006c69 30e3      	CPI  R30,LOW(0x3)
006c6a f511      	BRNE _0x1A0026
                 _0x1A0027:
                 ; 000D 00BA     /*bongkot comment*/
                 ; 000D 00BB         SENSOR_SELECT(ch);
006c6b 940e c64d 	CALL SUBOPT_0xA2
                +
006c6d 01fe     +MOVW R30 , R28
006c6e 5ae2     +SUBI R30 , LOW ( - 94 )
006c6f 4fff     +SBCI R31 , HIGH ( - 94 )
006c70 81e0     +LD R30 , Z
                 	__GETB1SX 94
006c71 940e c657 	CALL SUBOPT_0xA3
                 ; 000D 00BC         delay_ms(20);                                               // -- for multiplex stable -- //
                 ; 000D 00BD         channelConnect = SENSOR_CONNECT;
006c73 940e c330 	CALL SUBOPT_0x2F
006c75 2f1e      	MOV  R17,R30
                 ; 000D 00BE 
                 ; 000D 00BF         //updateSensorADC(ch);
                 ; 000D 00C0 //        if(adcData[ch] < TMC_DISCON_LIMIT){
                 ; 000D 00C1 //            channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00C2 //        }
                 ; 000D 00C3 //        else{
                 ; 000D 00C4 //            channelConnect  = SENS_NORMAL;
                 ; 000D 00C5 //        }
                 ; 000D 00C6 //         viADCbuffer = 0;
                 ; 000D 00C7 //         for(i=0;i<20;i++){
                 ; 000D 00C8 //            viADCbuffer += (unsigned long)(read_adc(8+ch));
                 ; 000D 00C9 //         }
                 ; 000D 00CA //         viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 00CB //         //viSensorTempValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 00CC //         iTCVoltData[ch] = (float)(viRawVoltValue+0.213);
                 ; 000D 00CD //         iTCADCData[ch]  = (float)(viADCbuffer/20.0);
                 ; 000D 00CE //
                 ; 000D 00CF //         printDebug("[sensorRead1]ch1[%04.2f|%0.2f],ch2[%04.2f|%0.2f],ch3[%04.2f|%0.2f],ch4[%04.2f|%0.2f],ch5[%04.2f|%0.2f]\r\n",iTCADCData[0],iTCVoltData[0],iTCADCData[1],iTCVoltData[1],iTCADCData[2],iTCVoltData[2],iTCADCData[3],iTCVoltD                 ata[3],iTCADCData[4],iTCVoltData[4]);
                 ; 000D 00D0 
                 ; 000D 00D1 
                 ; 000D 00D2 //         if(viSensorTempValue < TMCP_SHORT_LIMIT){
                 ; 000D 00D3 //             //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00D4 //             channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00D5 //         }else if(viSensorTempValue > TMCP_OPEN_LIMIT){
                 ; 000D 00D6 //             channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00D7 //         }else{
                 ; 000D 00D8 //             channelConnect  = SENS_NORMAL;
                 ; 000D 00D9 //         }
                 ; 000D 00DA //         viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch)+0.213)-viZeroSet);
                 ; 000D 00DB //         viRiaseUpVoltValue = (float)(iTCVoltData[ch]-viZeroSet);
                 ; 000D 00DC //         iTCVoltData[ch] = viRiaseUpVoltValue;
                 ; 000D 00DD          //printDebug("[sensorRead2]ch1[%04.2f|%0.2f],ch2[%04.2f|%0.2f],ch3[%04.2f|%0.2f],ch4[%04.2f|%0.2f],ch5[%04.2f|%0.2f]\r\n",iTCADCData[0],iTCVoltData[0],iTCADCData[1],iTCVoltData[1],iTCADCData[2],iTCVoltData[2],iTCADCData[3],iTCVoltD                 ata[3],iTCADCData[4],iTCVoltData[4]);
006c76 940e ced8 ; 000D 00DE 
                 ; 000D 00DF          viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
                 	CALL SUBOPT_0x20A
006c78 940e cef1 ; 000D 00E0          viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
006c7a f410      ; 000D 00E1          if(viVoltUseCaluate < TMCP_SHORT_LIMIT){
                 	CALL SUBOPT_0x20B
                 	BRSH _0x1A0029
006c7b e814      ; 000D 00E2              //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00E3              channelConnect  = SENS_ERR_DISCONNECT;
006c7c c00f      	LDI  R17,LOW(132)
                 ; 000D 00E4          }else if(viVoltUseCaluate > TMCP_OPEN_LIMIT){
006c7d 940e c678 	RJMP _0x1A002A
                +
006c7f efe6     +LDI R30 , LOW ( 0x3FBC28F6 )
006c80 e2f8     +LDI R31 , HIGH ( 0x3FBC28F6 )
006c81 eb6c     +LDI R22 , BYTE3 ( 0x3FBC28F6 )
006c82 e37f     +LDI R23 , BYTE4 ( 0x3FBC28F6 )
                 	__GETD1N 0x3FBC28F6
006c83 940e e158 	CALL __CMPF12
006c85 f009      	BREQ PC+2
006c86 f410      	BRCC PC+3
006c87 940c 6c8b 	JMP  _0x1A002B
                 ; 000D 00E5              channelConnect  = SENS_ERR_DISCONNECT;
006c89 e814      	LDI  R17,LOW(132)
                 ; 000D 00E6          }else{
006c8a c001      	RJMP _0x1A002C
                 _0x1A002B:
                 ; 000D 00E7              channelConnect  = SENS_NORMAL;
006c8b e010      	LDI  R17,LOW(0)
                 ; 000D 00E8          }
                 _0x1A002C:
                 _0x1A002A:
                 ; 000D 00E9 
                 ; 000D 00EA 
                 ; 000D 00EB 
                 ; 000D 00EC         /*bongkot test*/
                 ; 000D 00ED         //channelConnect  = SENS_NORMAL;
                 ; 000D 00EE         //printDebug("SENSOR:NORMAL\r\n");
                 ; 000D 00EF 
                 ; 000D 00F0 
                 ; 000D 00F1     }
                 ; 000D 00F2     else if(TEMP_SEL == TEMP_TMEC){
006c8c c04d      	RJMP _0x1A002D
                 _0x1A0026:
006c8d 940e c325 	CALL SUBOPT_0x2E
006c8f 30e1      	CPI  R30,LOW(0x1)
006c90 f519      	BRNE _0x1A002E
                 ; 000D 00F3 
                 ; 000D 00F4         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006c91 940e cef8 	CALL SUBOPT_0x20C
                 ; 000D 00F5 
                 ; 000D 00F6         if(adcData[ch] < TMEC_SHORT_LIMIT){
006c93 940e c2af 	CALL SUBOPT_0x1B
006c95 01df      	MOVW R26,R30
006c96 01cb      	MOVW R24,R22
                +
006c97 e0e0     +LDI R30 , LOW ( 0x40000000 )
006c98 e0f0     +LDI R31 , HIGH ( 0x40000000 )
006c99 e060     +LDI R22 , BYTE3 ( 0x40000000 )
006c9a e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
006c9b 940e e158 	CALL __CMPF12
006c9d f410      	BRSH _0x1A002F
                 ; 000D 00F7             channelConnect  = SENS_ERR_SHORT;
006c9e e910      	LDI  R17,LOW(144)
                 ; 000D 00F8         }
                 ; 000D 00F9         else if(adcData[ch] > TMEC_OPEN_LIMIT){
006c9f c013      	RJMP _0x1A0030
                 _0x1A002F:
006ca0 940e cf03 	CALL SUBOPT_0x20D
006ca2 940e c2af 	CALL SUBOPT_0x1B
006ca4 01df      	MOVW R26,R30
006ca5 01cb      	MOVW R24,R22
                +
006ca6 e0e0     +LDI R30 , LOW ( 0x447F4000 )
006ca7 e4f0     +LDI R31 , HIGH ( 0x447F4000 )
006ca8 e76f     +LDI R22 , BYTE3 ( 0x447F4000 )
006ca9 e474     +LDI R23 , BYTE4 ( 0x447F4000 )
                 	__GETD1N 0x447F4000
006caa 940e e158 	CALL __CMPF12
006cac f009      	BREQ PC+2
006cad f410      	BRCC PC+3
006cae 940c 6cb2 	JMP  _0x1A0031
                 ; 000D 00FA             channelConnect  = SENS_ERR_DISCONNECT;
006cb0 e814      	LDI  R17,LOW(132)
                 ; 000D 00FB         }
                 ; 000D 00FC         else{
006cb1 c001      	RJMP _0x1A0032
                 _0x1A0031:
                 ; 000D 00FD             channelConnect  = SENS_NORMAL;
006cb2 e010      	LDI  R17,LOW(0)
                 ; 000D 00FE         }
                 _0x1A0032:
                 _0x1A0030:
                 ; 000D 00FF     }
                 ; 000D 0100     else if(TEMP_SEL == TEMP_PT100){
006cb3 c026      	RJMP _0x1A0033
                 _0x1A002E:
006cb4 940e c325 	CALL SUBOPT_0x2E
006cb6 30e2      	CPI  R30,LOW(0x2)
006cb7 f511      	BRNE _0x1A0034
                 ; 000D 0101 
                 ; 000D 0102         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006cb8 940e cef8 	CALL SUBOPT_0x20C
                 ; 000D 0103 
                 ; 000D 0104         if(adcData[ch] < PT100_SHORT_LIMIT){
006cba 940e c2af 	CALL SUBOPT_0x1B
006cbc 01df      	MOVW R26,R30
006cbd 01cb      	MOVW R24,R22
                +
006cbe e0e0     +LDI R30 , LOW ( 0x41000000 )
006cbf e0f0     +LDI R31 , HIGH ( 0x41000000 )
006cc0 e060     +LDI R22 , BYTE3 ( 0x41000000 )
006cc1 e471     +LDI R23 , BYTE4 ( 0x41000000 )
                 	__GETD1N 0x41000000
006cc2 940e e158 	CALL __CMPF12
006cc4 f410      	BRSH _0x1A0035
                 ; 000D 0105             channelConnect  = SENS_ERR_SHORT;
006cc5 e910      	LDI  R17,LOW(144)
                 ; 000D 0106         }
                 ; 000D 0107         else if(adcData[ch] > PT100_OPEN_LIMIT){
006cc6 c013      	RJMP _0x1A0036
                 _0x1A0035:
006cc7 940e cf03 	CALL SUBOPT_0x20D
006cc9 940e c2af 	CALL SUBOPT_0x1B
006ccb 01df      	MOVW R26,R30
006ccc 01cb      	MOVW R24,R22
                +
006ccd e0e0     +LDI R30 , LOW ( 0x44728000 )
006cce e8f0     +LDI R31 , HIGH ( 0x44728000 )
006ccf e762     +LDI R22 , BYTE3 ( 0x44728000 )
006cd0 e474     +LDI R23 , BYTE4 ( 0x44728000 )
                 	__GETD1N 0x44728000
006cd1 940e e158 	CALL __CMPF12
006cd3 f009      	BREQ PC+2
006cd4 f410      	BRCC PC+3
006cd5 940c 6cd9 	JMP  _0x1A0037
                 ; 000D 0108             channelConnect  = SENS_ERR_DISCONNECT;
006cd7 e814      	LDI  R17,LOW(132)
                 ; 000D 0109         }
                 ; 000D 010A         else{
006cd8 c001      	RJMP _0x1A0038
                 _0x1A0037:
                 ; 000D 010B             channelConnect  = SENS_NORMAL;
006cd9 e010      	LDI  R17,LOW(0)
                 ; 000D 010C         }
                 _0x1A0038:
                 _0x1A0036:
                 ; 000D 010D     }
                 ; 000D 010E 
                 ; 000D 010F     /*bongkot test*/
                 ; 000D 0110     //sensor->status  = SENS_NORMAL;
                 ; 000D 0111     //lastCheck[ch] = channelConnect;
                 ; 000D 0112 
                 ; 000D 0113     // ----- Confirm Sensor Status Stable ----- //
                 ; 000D 0114     if(channelConnect != lastCheck[ch])
                 _0x1A0034:
                 _0x1A0033:
                 _0x1A002D:
006cda 940e cf0b 	CALL SUBOPT_0x20E
006cdc 59ec      	SUBI R30,LOW(-_lastCheck_S00D0004000)
006cdd 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0004000)
006cde 81e0      	LD   R30,Z
006cdf 17e1      	CP   R30,R17
006ce0 f079      	BREQ _0x1A0039
                 ; 000D 0115     {
                 ; 000D 0116         TIMER_setTimer(&t[ch],5);
006ce1 940e cf12 	CALL SUBOPT_0x20F
006ce3 940e c2ba 	CALL SUBOPT_0x1D
006ce5 940e cf18 	CALL SUBOPT_0x210
                 ; 000D 0117         lastCheck[ch]       = channelConnect;
006ce7 940e cf0b 	CALL SUBOPT_0x20E
006ce9 59ec      	SUBI R30,LOW(-_lastCheck_S00D0004000)
006cea 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0004000)
006ceb 8310      	ST   Z,R17
                 ; 000D 0118         steadyState[ch]     = 0;
006cec 940e cf1e 	CALL SUBOPT_0x211
006cee e0a0      	LDI  R26,LOW(0)
006cef c00f      	RJMP _0x1A00C5
                 ; 000D 0119     }
                 ; 000D 011A     else if(!steadyState[ch])
                 _0x1A0039:
006cf0 940e cf1e 	CALL SUBOPT_0x211
006cf2 81e0      	LD   R30,Z
006cf3 30e0      	CPI  R30,0
006cf4 f459      	BRNE _0x1A003B
                 ; 000D 011B     {
                 ; 000D 011C         if(TIMER_checkTimerExceed(t[ch])){
006cf5 940e cf12 	CALL SUBOPT_0x20F
006cf7 940e c2af 	CALL SUBOPT_0x1B
006cf9 940e c2b4 	CALL SUBOPT_0x1C
006cfb f021      	BREQ _0x1A003C
                 ; 000D 011D             steadyState[ch] = 1;
006cfc 940e cf1e 	CALL SUBOPT_0x211
006cfe e0a1      	LDI  R26,LOW(1)
                 _0x1A00C5:
006cff 83a0      	STD  Z+0,R26
                 ; 000D 011E         }
                 ; 000D 011F     }
                 _0x1A003C:
                 ; 000D 0120 
                 ; 000D 0121     /*bongkot test*/
                 ; 000D 0122     //printDebug("SENSOR:channelConnect Status Stable\r\n");
                 ; 000D 0123     //steadyState[ch] = 1;
                 ; 000D 0124 
                 ; 000D 0125     if(!steadyState[ch])
                 _0x1A003B:
006d00 940e cf1e 	CALL SUBOPT_0x211
006d02 81e0      	LD   R30,Z
006d03 30e0      	CPI  R30,0
006d04 f441      	BRNE _0x1A003D
                 ; 000D 0126     {
                 ; 000D 0127         //printDebug("<sensorRead> sensor %d state unstable\r\n",ch+1);
                 ; 000D 0128         sensor->status  = SENS_ERR_UNKNOWN;
006d05 940e cf22 	CALL SUBOPT_0x212
006d07 9614      	ADIW R26,4
006d08 efef      	LDI  R30,LOW(255)
006d09 93ec      	ST   X,R30
                 ; 000D 0129         return -9;
006d0a efe7      	LDI  R30,LOW(65527)
006d0b efff      	LDI  R31,HIGH(65527)
006d0c c256      	RJMP _0x20E006A
                 ; 000D 012A     }
                 ; 000D 012B 
                 ; 000D 012C     /*bongkot test*/
                 ; 000D 012D     //printDebug("SENSOR:steadyState ok\r\n");
                 ; 000D 012E 
                 ; 000D 012F 
                 ; 000D 0130     // ----- Return if Sensor Data is not available ----- //
                 ; 000D 0131     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED))
                 _0x1A003D:
006d0d 940e c325 	CALL SUBOPT_0x2E
006d0f f021      	BREQ _0x1A003F
006d10 940e c325 	CALL SUBOPT_0x2E
006d12 30e3      	CPI  R30,LOW(0x3)
006d13 f431      	BRNE _0x1A003E
                 _0x1A003F:
                 ; 000D 0132     {   /*bongkot comment*/
                 ; 000D 0133 //        if(!channelConnect){
                 ; 000D 0134 //            sensor->status  = SENS_ERR_DISCONNECT;
                 ; 000D 0135 //            return -2;
                 ; 000D 0136 //        }
                 ; 000D 0137         if(channelConnect != SENS_NORMAL){
006d14 3010      	CPI  R17,0
006d15 f019      	BREQ _0x1A0041
                 ; 000D 0138             sensor->status  = channelConnect;
006d16 940e cf29 	CALL SUBOPT_0x213
                 ; 000D 0139             return -2;
006d18 c24a      	RJMP _0x20E006A
                 ; 000D 013A         }
                 ; 000D 013B        // updateSensorADC(ch);                            // -- update adcData[ch] -- //
                 ; 000D 013C     }
                 _0x1A0041:
                 ; 000D 013D     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
006d19 c00f      	RJMP _0x1A0042
                 _0x1A003E:
006d1a 940e c5f4 	CALL SUBOPT_0x96
006d1c f021      	BREQ _0x1A0044
006d1d 940e c325 	CALL SUBOPT_0x2E
006d1f 30e2      	CPI  R30,LOW(0x2)
006d20 f441      	BRNE _0x1A0043
                 _0x1A0044:
                 ; 000D 013E         if(channelConnect != SENS_NORMAL){
006d21 3010      	CPI  R17,0
006d22 f019      	BREQ _0x1A0046
                 ; 000D 013F             sensor->status  = channelConnect;
006d23 940e cf29 	CALL SUBOPT_0x213
                 ; 000D 0140             return -2;
006d25 c23d      	RJMP _0x20E006A
                 ; 000D 0141         }
                 ; 000D 0142 
                 ; 000D 0143         updateSensorADC(ch);                            // -- update adcData[ch] -- again ^_^ --- //
                 _0x1A0046:
006d26 940e ced1 	CALL SUBOPT_0x209
006d28 ddea      	RCALL _updateSensorADC
                 ; 000D 0144     }
                 ; 000D 0145 
                 ; 000D 0146     switch(epCalType[ch]){
                 _0x1A0043:
                 _0x1A0042:
006d29 940e ced1 	CALL SUBOPT_0x209
006d2b 5aa8      	SUBI R26,LOW(-_epCalType)
006d2c 4fb9      	SBCI R27,HIGH(-_epCalType)
006d2d 940e e350 	CALL __EEPROMRDB
006d2f 940e cf33 	CALL SUBOPT_0x214
                 ; 000D 0147         case CAL_SELFCOMPARE    :   // --- Same as CAL_EXTOFFSET --- //
006d31 f031      	BREQ _0x1A004B
                 ; 000D 0148         case CAL_EXTOFFSET      :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006d32 30e2      	CPI  R30,LOW(0x2)
006d33 e0a0      	LDI  R26,HIGH(0x2)
006d34 07fa      	CPC  R31,R26
006d35 f011      	BREQ PC+3
006d36 940c 6dcd 	JMP _0x1A004C
                 _0x1A004B:
006d38 940e c325 	CALL SUBOPT_0x2E
006d3a f029      	BREQ _0x1A004E
006d3b 940e c325 	CALL SUBOPT_0x2E
006d3d 30e3      	CPI  R30,LOW(0x3)
006d3e f009      	BREQ _0x1A004E
006d3f c041      	RJMP _0x1A004D
                 _0x1A004E:
                 ; 000D 0149                                         /*bongkot comment*/
                 ; 000D 014A                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]) + epFactor_C[ch];
                 ; 000D 014B                                          //sensor->value   +=    epFactor_C[ch];
                 ; 000D 014C                                          viADCbuffer = 0;
006d40 940e cf38 	CALL SUBOPT_0x215
                 ; 000D 014D                                          for(i=0;i<30;i++){
                 _0x1A0051:
                +
006d42 312e     +CPI R18 , LOW ( 30 )
006d43 e0e0     +LDI R30 , HIGH ( 30 )
006d44 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006d45 f42c      	BRGE _0x1A0052
                 ; 000D 014E                                             viADCbuffer += read_adc(8+ch);
006d46 940e cf43 	CALL SUBOPT_0x216
                 ; 000D 014F                                          }
                +
006d48 5f2f     +SUBI R18 , LOW ( - 1 )
006d49 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006d4a cff7      	RJMP _0x1A0051
                 _0x1A0052:
                 ; 000D 0150 
                 ; 000D 0151                                          viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006d4b 940e cf5e 	CALL SUBOPT_0x217
                 ; 000D 0152                                          offset =  epTempRef1[ch] - epADCRef1[ch];
006d4d 940e cf71 	CALL SUBOPT_0x218
006d4f 937f      	PUSH R23
006d50 936f      	PUSH R22
006d51 93ff      	PUSH R31
006d52 93ef      	PUSH R30
006d53 940e cf7b 	CALL SUBOPT_0x219
006d55 91af      	POP  R26
006d56 91bf      	POP  R27
006d57 918f      	POP  R24
006d58 919f      	POP  R25
006d59 940e cf85 	CALL SUBOPT_0x21A
                +
006d5b 01de     +MOVW R26 , R28
006d5c 5ca0     +SUBI R26 , LOW ( - 64 )
006d5d 4fbf     +SBCI R27 , HIGH ( - 64 )
006d5e 93ed     +ST X + , R30
006d5f 93fd     +ST X + , R31
006d60 936d     +ST X + , R22
006d61 937c     +ST X , R23
                 	__PUTD1SX 64
                 ; 000D 0153                                          printDebug("TempRaw(%f), TempRef(%f), Offset(%f)\r\n",viSensorTempValue,epTempRef1[ch],offset);
                +
006d62 e0ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006d63 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006d64 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006d65 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006d66 940e cf8a 	CALL SUBOPT_0x21B
006d68 940e e324 	CALL __PUTPARD1
                +
006d6a 01fe     +MOVW R30 , R28
006d6b 59ea     +SUBI R30 , LOW ( - 102 )
006d6c 4fff     +SBCI R31 , HIGH ( - 102 )
006d6d 9001     +LD R0 , Z +
006d6e 81f0     +LD R31 , Z
006d6f 2de0     +MOV R30 , R0
                 	__GETW1SX 102
006d70 940e cf8e 	CALL SUBOPT_0x21C
006d72 940e cf97 	CALL SUBOPT_0x21D
006d74 940e c5b5 	CALL SUBOPT_0x8E
                 ; 000D 0154                                          sensor->value = viSensorTempValue + offset;
                +
006d76 01fe     +MOVW R30 , R28
006d77 5ce0     +SUBI R30 , LOW ( - 64 )
006d78 4fff     +SBCI R31 , HIGH ( - 64 )
006d79 9001     +LD R0 , Z +
006d7a 9011     +LD R1 , Z +
006d7b 9161     +LD R22 , Z +
006d7c 8170     +LD R23 , Z
006d7d 01f0     +MOVW R30 , R0
                 	__GETD1SX 64
006d7e 940e cfa2 	CALL SUBOPT_0x21E
006d80 c047      	RJMP _0x1A00C6
                 ; 000D 0155                                     }
                 ; 000D 0156                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A004D:
006d81 940e c325 	CALL SUBOPT_0x2E
006d83 30e1      	CPI  R30,LOW(0x1)
006d84 f489      	BRNE _0x1A0054
                 ; 000D 0157 
                 ; 000D 0158                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epFactor_C[ch];
006d85 940e cf03 	CALL SUBOPT_0x20D
006d87 940e c2af 	CALL SUBOPT_0x1B
006d89 940e cfa7 	CALL SUBOPT_0x21F
006d8b 937f      	PUSH R23
006d8c 936f      	PUSH R22
006d8d 93ff      	PUSH R31
006d8e 93ef      	PUSH R30
006d8f 940e cfae 	CALL SUBOPT_0x220
006d91 91af      	POP  R26
006d92 91bf      	POP  R27
006d93 918f      	POP  R24
006d94 919f      	POP  R25
006d95 c032      	RJMP _0x1A00C6
                 ; 000D 0159                                     }
                 ; 000D 015A                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0054:
006d96 940e c325 	CALL SUBOPT_0x2E
006d98 30e2      	CPI  R30,LOW(0x2)
006d99 f591      	BRNE _0x1A0056
                 ; 000D 015B                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 015C                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 015D                                                              epFactor_C[ch];
006d9a 940e cf03 	CALL SUBOPT_0x20D
006d9c 940e c2af 	CALL SUBOPT_0x1B
006d9e 940e cfb8 	CALL SUBOPT_0x221
006da0 937f      	PUSH R23
006da1 936f      	PUSH R22
006da2 93ff      	PUSH R31
006da3 93ef      	PUSH R30
006da4 940e cf03 	CALL SUBOPT_0x20D
006da6 940e c2af 	CALL SUBOPT_0x1B
006da8 91af      	POP  R26
006da9 91bf      	POP  R27
006daa 918f      	POP  R24
006dab 919f      	POP  R25
006dac 940e e0c5 	CALL __MULF12
006dae 937f      	PUSH R23
006daf 936f      	PUSH R22
006db0 93ff      	PUSH R31
006db1 93ef      	PUSH R30
006db2 940e cf03 	CALL SUBOPT_0x20D
006db4 940e c2af 	CALL SUBOPT_0x1B
006db6 940e cfbf 	CALL SUBOPT_0x222
006db8 91af      	POP  R26
006db9 91bf      	POP  R27
006dba 918f      	POP  R24
006dbb 919f      	POP  R25
006dbc 940e e075 	CALL __ADDF12
006dbe 937f      	PUSH R23
006dbf 936f      	PUSH R22
006dc0 93ff      	PUSH R31
006dc1 93ef      	PUSH R30
006dc2 940e cfae 	CALL SUBOPT_0x220
006dc4 91af      	POP  R26
006dc5 91bf      	POP  R27
006dc6 918f      	POP  R24
006dc7 919f      	POP  R25
                 _0x1A00C6:
006dc8 940e e075 	CALL __ADDF12
006dca 940e cfc6 	CALL SUBOPT_0x223
                 ; 000D 015E //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epFactor_C[ch];
                 ; 000D 015F                                     }
                 ; 000D 0160                                     break;
                 _0x1A0056:
006dcc c18f      	RJMP _0x1A0049
                 ; 000D 0161         case CAL_EXTLINEAR      :  {
                 _0x1A004C:
006dcd 30e3      	CPI  R30,LOW(0x3)
006dce e0a0      	LDI  R26,HIGH(0x3)
006dcf 07fa      	CPC  R31,R26
006dd0 f011      	BREQ PC+3
006dd1 940c 6e52 	JMP _0x1A0057
                 ; 000D 0162                                         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006dd3 940e c325 	CALL SUBOPT_0x2E
006dd5 f029      	BREQ _0x1A0059
006dd6 940e c325 	CALL SUBOPT_0x2E
006dd8 30e3      	CPI  R30,LOW(0x3)
006dd9 f009      	BREQ _0x1A0059
006dda c058      	RJMP _0x1A0058
                 _0x1A0059:
                 ; 000D 0163                                                //sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
                 ; 000D 0164 
                 ; 000D 0165                                                viADCbuffer = 0;
006ddb 940e cf38 	CALL SUBOPT_0x215
                 ; 000D 0166                                                  for(i=0;i<30;i++){
                 _0x1A005C:
                +
006ddd 312e     +CPI R18 , LOW ( 30 )
006dde e0e0     +LDI R30 , HIGH ( 30 )
006ddf 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006de0 f42c      	BRGE _0x1A005D
                 ; 000D 0167                                                     viADCbuffer += read_adc(8+ch);
006de1 940e cf43 	CALL SUBOPT_0x216
                 ; 000D 0168                                                  }
                +
006de3 5f2f     +SUBI R18 , LOW ( - 1 )
006de4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006de5 cff7      	RJMP _0x1A005C
                 _0x1A005D:
                 ; 000D 0169 
                 ; 000D 016A                                                 sensorRef1 = iAD595ADCToTemp(epADCRef1[ch],1);
006de6 940e cf7b 	CALL SUBOPT_0x219
006de8 940e cfca 	CALL SUBOPT_0x224
006dea 940e a117 	CALL _iAD595ADCToTemp
006dec 940e cfd0 	CALL SUBOPT_0x225
                 ; 000D 016B                                                 sensorRef2 = iAD595ADCToTemp(epADCRef2[ch],1);
006dee 940e cfca 	CALL SUBOPT_0x224
006df0 940e a117 	CALL _iAD595ADCToTemp
                +
006df2 afe8     +STD Y + 56 , R30
006df3 aff9     +STD Y + 56 + 1 , R31
006df4 af6a     +STD Y + 56 + 2 , R22
006df5 af7b     +STD Y + 56 + 3 , R23
                 	__PUTD1S 56
                 ; 000D 016C                                                 stdMeter1  = epTempRef1[ch];
006df6 940e cf71 	CALL SUBOPT_0x218
006df8 940e cfde 	CALL SUBOPT_0x226
                 ; 000D 016D                                                 stdMeter2  = epTempRef2[ch];
                 ; 000D 016E                                                 lowRange   =  sensorRef2 - sensorRef1;
                +
006dfa adac     +LDD R26 , Y + 60
006dfb adbd     +LDD R27 , Y + 60 + 1
006dfc ad8e     +LDD R24 , Y + 60 + 2
006dfd ad9f     +LDD R25 , Y + 60 + 3
                 	__GETD2S 60
                +
006dfe ade8     +LDD R30 , Y + 56
006dff adf9     +LDD R31 , Y + 56 + 1
006e00 ad6a     +LDD R22 , Y + 56 + 2
006e01 ad7b     +LDD R23 , Y + 56 + 3
                 	__GETD1S 56
006e02 940e e06e 	CALL __SUBF12
                +
006e04 a3ec     +STD Y + 36 , R30
006e05 a3fd     +STD Y + 36 + 1 , R31
006e06 a36e     +STD Y + 36 + 2 , R22
006e07 a37f     +STD Y + 36 + 3 , R23
                 	__PUTD1S 36
                 ; 000D 016F                                                 stdMeterRange = stdMeter2 - stdMeter1;
                +
006e08 a9a8     +LDD R26 , Y + 48
006e09 a9b9     +LDD R27 , Y + 48 + 1
006e0a a98a     +LDD R24 , Y + 48 + 2
006e0b a99b     +LDD R25 , Y + 48 + 3
                 	__GETD2S 48
                +
006e0c a5ec     +LDD R30 , Y + 44
006e0d a5fd     +LDD R31 , Y + 44 + 1
006e0e a56e     +LDD R22 , Y + 44 + 2
006e0f a57f     +LDD R23 , Y + 44 + 3
                 	__GETD1S 44
006e10 940e e06e 	CALL __SUBF12
                +
006e12 a3e8     +STD Y + 32 , R30
006e13 a3f9     +STD Y + 32 + 1 , R31
006e14 a36a     +STD Y + 32 + 2 , R22
006e15 a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
                 ; 000D 0170                                                 viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006e16 940e cf5e 	CALL SUBOPT_0x217
                 ; 000D 0171                                                sensor->value = (((viSensorTempValue-sensorRef1)*stdMeterRange)/lowRange)+stdMeter1;
                +
006e18 adac     +LDD R26 , Y + 60
006e19 adbd     +LDD R27 , Y + 60 + 1
006e1a ad8e     +LDD R24 , Y + 60 + 2
006e1b ad9f     +LDD R25 , Y + 60 + 3
                 	__GETD2S 60
006e1c 940e c240 	CALL SUBOPT_0xC
006e1e 940e e06e 	CALL __SUBF12
                +
006e20 a1a8     +LDD R26 , Y + 32
006e21 a1b9     +LDD R27 , Y + 32 + 1
006e22 a18a     +LDD R24 , Y + 32 + 2
006e23 a19b     +LDD R25 , Y + 32 + 3
                 	__GETD2S 32
006e24 940e e0c5 	CALL __MULF12
006e26 01df      	MOVW R26,R30
006e27 01cb      	MOVW R24,R22
                +
006e28 a1ec     +LDD R30 , Y + 36
006e29 a1fd     +LDD R31 , Y + 36 + 1
006e2a a16e     +LDD R22 , Y + 36 + 2
006e2b a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
006e2c 940e e113 	CALL __DIVF21
                +
006e2e a9a8     +LDD R26 , Y + 48
006e2f a9b9     +LDD R27 , Y + 48 + 1
006e30 a98a     +LDD R24 , Y + 48 + 2
006e31 a99b     +LDD R25 , Y + 48 + 3
                 	__GETD2S 48
006e32 c01a      	RJMP _0x1A00C7
                 ; 000D 0172 
                 ; 000D 0173 
                 ; 000D 0174 
                 ; 000D 0175                                         }else{
                 _0x1A0058:
                 ; 000D 0176                                                sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
006e33 940e cff0 	CALL SUBOPT_0x227
006e35 937f      	PUSH R23
006e36 936f      	PUSH R22
006e37 93ff      	PUSH R31
006e38 93ef      	PUSH R30
006e39 940e cf03 	CALL SUBOPT_0x20D
006e3b 940e c2af 	CALL SUBOPT_0x1B
006e3d 91af      	POP  R26
006e3e 91bf      	POP  R27
006e3f 918f      	POP  R24
006e40 919f      	POP  R25
006e41 940e e0c5 	CALL __MULF12
006e43 937f      	PUSH R23
006e44 936f      	PUSH R22
006e45 93ff      	PUSH R31
006e46 93ef      	PUSH R30
006e47 940e cfae 	CALL SUBOPT_0x220
006e49 91af      	POP  R26
006e4a 91bf      	POP  R27
006e4b 918f      	POP  R24
006e4c 919f      	POP  R25
                 _0x1A00C7:
006e4d 940e e075 	CALL __ADDF12
006e4f 940e cfc6 	CALL SUBOPT_0x223
                 ; 000D 0177                                         }
                 ; 000D 0178 
                 ; 000D 0179                                         break;
006e51 c10a      	RJMP _0x1A0049
                 ; 000D 017A                                     }
                 ; 000D 017B         case CAL_EXTPOLYNOMIAL  :   {   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0057:
006e52 30e4      	CPI  R30,LOW(0x4)
006e53 e0a0      	LDI  R26,HIGH(0x4)
006e54 07fa      	CPC  R31,R26
006e55 f011      	BREQ PC+3
006e56 940c 6f0b 	JMP _0x1A0067
006e58 940e c325 	CALL SUBOPT_0x2E
006e5a f029      	BREQ _0x1A0061
006e5b 940e c325 	CALL SUBOPT_0x2E
006e5d 30e3      	CPI  R30,LOW(0x3)
006e5e f009      	BREQ _0x1A0061
006e5f c060      	RJMP _0x1A0060
                 _0x1A0061:
                 ; 000D 017C                                             viADCbuffer = 0;
006e60 940e cf38 	CALL SUBOPT_0x215
                 ; 000D 017D                                             for(i=0;i<30;i++){
                 _0x1A0064:
                +
006e62 312e     +CPI R18 , LOW ( 30 )
006e63 e0e0     +LDI R30 , HIGH ( 30 )
006e64 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006e65 f42c      	BRGE _0x1A0065
                 ; 000D 017E                                                 viADCbuffer += read_adc(8+ch);
006e66 940e cf43 	CALL SUBOPT_0x216
                 ; 000D 017F                                             }
                +
006e68 5f2f     +SUBI R18 , LOW ( - 1 )
006e69 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006e6a cff7      	RJMP _0x1A0064
                 _0x1A0065:
                 ; 000D 0180                                             sensorRef1 = epADCRef1[ch];
006e6b 940e cf7b 	CALL SUBOPT_0x219
006e6d 940e cfd0 	CALL SUBOPT_0x225
                 ; 000D 0181                                             sensorRef2 = epADCRef2[ch];
                +
006e6f afe8     +STD Y + 56 , R30
006e70 aff9     +STD Y + 56 + 1 , R31
006e71 af6a     +STD Y + 56 + 2 , R22
006e72 af7b     +STD Y + 56 + 3 , R23
                 	__PUTD1S 56
                 ; 000D 0182                                             sensorRef3 = epADCRef3[ch];
006e73 940e cf0b 	CALL SUBOPT_0x20E
006e75 940e cffa 	CALL SUBOPT_0x228
                +
006e77 abec     +STD Y + 52 , R30
006e78 abfd     +STD Y + 52 + 1 , R31
006e79 ab6e     +STD Y + 52 + 2 , R22
006e7a ab7f     +STD Y + 52 + 3 , R23
                 	__PUTD1S 52
                 ; 000D 0183                                             stdMeter1 = epTempRef1[ch];
006e7b 940e cf71 	CALL SUBOPT_0x218
006e7d 940e cfde 	CALL SUBOPT_0x226
                 ; 000D 0184                                             stdMeter2 = epTempRef2[ch];
                 ; 000D 0185                                             stdMeter3 = epTempRef3[ch];
006e7f 940e cf0b 	CALL SUBOPT_0x20E
006e81 940e d003 	CALL SUBOPT_0x229
                +
006e83 a7e8     +STD Y + 40 , R30
006e84 a7f9     +STD Y + 40 + 1 , R31
006e85 a76a     +STD Y + 40 + 2 , R22
006e86 a77b     +STD Y + 40 + 3 , R23
                 	__PUTD1S 40
                 ; 000D 0186                                             viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006e87 940e cf5e 	CALL SUBOPT_0x217
                 ; 000D 0187                                             gaussian(sensorRef1,  sensorRef2,  sensorRef3, stdMeter1, stdMeter2, stdMeter3, &factorAA, &factorBB, &factorCC);
006e89 940e d00c 	CALL SUBOPT_0x22A
006e8b 940e d00c 	CALL SUBOPT_0x22A
006e8d 940e d00c 	CALL SUBOPT_0x22A
006e8f 940e d00c 	CALL SUBOPT_0x22A
006e91 940e d00c 	CALL SUBOPT_0x22A
006e93 940e d00c 	CALL SUBOPT_0x22A
006e95 01fe      	MOVW R30,R28
006e96 96f4      	ADIW R30,52
006e97 93fa      	ST   -Y,R31
006e98 93ea      	ST   -Y,R30
006e99 01fe      	MOVW R30,R28
006e9a 96f2      	ADIW R30,50
006e9b 93fa      	ST   -Y,R31
006e9c 93ea      	ST   -Y,R30
006e9d 01de      	MOVW R26,R28
006e9e 96d0      	ADIW R26,48
006e9f 940e a073 	CALL _gaussian
                 ; 000D 0188                                             sensor->value = (factorAA*viSensorTempValue*viSensorTempValue) + (factorBB*viSensorTempValue) + factorCC;      //polynomail formula
006ea1 940e c240 	CALL SUBOPT_0xC
                +
006ea3 8dac     +LDD R26 , Y + 28
006ea4 8dbd     +LDD R27 , Y + 28 + 1
006ea5 8d8e     +LDD R24 , Y + 28 + 2
006ea6 8d9f     +LDD R25 , Y + 28 + 3
                 	__GETD2S 28
006ea7 940e e0c5 	CALL __MULF12
006ea9 940e cfa2 	CALL SUBOPT_0x21E
006eab 940e e0c5 	CALL __MULF12
006ead 937f      	PUSH R23
006eae 936f      	PUSH R22
006eaf 93ff      	PUSH R31
006eb0 93ef      	PUSH R30
006eb1 940e c240 	CALL SUBOPT_0xC
006eb3 940e d013 	CALL SUBOPT_0x22B
006eb5 940e e0c5 	CALL __MULF12
006eb7 91af      	POP  R26
006eb8 91bf      	POP  R27
006eb9 918f      	POP  R24
006eba 919f      	POP  R25
006ebb 940e e075 	CALL __ADDF12
006ebd 940e d018 	CALL SUBOPT_0x22C
006ebf c046      	RJMP _0x1A00C8
                 ; 000D 0189 
                 ; 000D 018A                                         }else{
                 _0x1A0060:
                 ; 000D 018B                                               sensor->value   =   (epFactor_A[ch]   * adcData[ch] * adcData[ch]) +
                 ; 000D 018C                                                         (epFactor_B[ch]   * adcData[ch]) +
                 ; 000D 018D                                                          epFactor_C[ch];
006ec0 940e cf0b 	CALL SUBOPT_0x20E
006ec2 940e d01d 	CALL SUBOPT_0x22D
006ec4 940e e348 	CALL __EEPROMRDD
006ec6 937f      	PUSH R23
006ec7 936f      	PUSH R22
006ec8 93ff      	PUSH R31
006ec9 93ef      	PUSH R30
006eca 940e cf03 	CALL SUBOPT_0x20D
006ecc 940e c2af 	CALL SUBOPT_0x1B
006ece 91af      	POP  R26
006ecf 91bf      	POP  R27
006ed0 918f      	POP  R24
006ed1 919f      	POP  R25
006ed2 940e e0c5 	CALL __MULF12
006ed4 937f      	PUSH R23
006ed5 936f      	PUSH R22
006ed6 93ff      	PUSH R31
006ed7 93ef      	PUSH R30
006ed8 940e cf03 	CALL SUBOPT_0x20D
006eda 940e c2af 	CALL SUBOPT_0x1B
006edc 91af      	POP  R26
006edd 91bf      	POP  R27
006ede 918f      	POP  R24
006edf 919f      	POP  R25
006ee0 940e e0c5 	CALL __MULF12
006ee2 937f      	PUSH R23
006ee3 936f      	PUSH R22
006ee4 93ff      	PUSH R31
006ee5 93ef      	PUSH R30
006ee6 940e cff0 	CALL SUBOPT_0x227
006ee8 937f      	PUSH R23
006ee9 936f      	PUSH R22
006eea 93ff      	PUSH R31
006eeb 93ef      	PUSH R30
006eec 940e cf03 	CALL SUBOPT_0x20D
006eee 940e c2af 	CALL SUBOPT_0x1B
006ef0 91af      	POP  R26
006ef1 91bf      	POP  R27
006ef2 918f      	POP  R24
006ef3 919f      	POP  R25
006ef4 940e e0c5 	CALL __MULF12
006ef6 91af      	POP  R26
006ef7 91bf      	POP  R27
006ef8 918f      	POP  R24
006ef9 919f      	POP  R25
006efa 940e e075 	CALL __ADDF12
006efc 937f      	PUSH R23
006efd 936f      	PUSH R22
006efe 93ff      	PUSH R31
006eff 93ef      	PUSH R30
006f00 940e cfae 	CALL SUBOPT_0x220
006f02 91af      	POP  R26
006f03 91bf      	POP  R27
006f04 918f      	POP  R24
006f05 919f      	POP  R25
                 _0x1A00C8:
006f06 940e e075 	CALL __ADDF12
006f08 940e cfc6 	CALL SUBOPT_0x223
                 ; 000D 018E                                         }
                 ; 000D 018F 
                 ; 000D 0190                                         break;
006f0a c051      	RJMP _0x1A0049
                 ; 000D 0191                                     }
                 ; 000D 0192         default                 :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0067:
006f0b 940e c325 	CALL SUBOPT_0x2E
006f0d f021      	BREQ _0x1A0069
006f0e 940e c325 	CALL SUBOPT_0x2E
006f10 30e3      	CPI  R30,LOW(0x3)
006f11 f429      	BRNE _0x1A0068
                 _0x1A0069:
                 ; 000D 0193                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]);
                 ; 000D 0194 //                                         viADCbuffer = 0;
                 ; 000D 0195 //                                         for(i=0;i<20;i++){
                 ; 000D 0196 //                                            viADCbuffer += (unsigned long)(read_adc(8+ch));
                 ; 000D 0197 //                                         }
                 ; 000D 0198 //                                         viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 0199 //
                 ; 000D 019A //                                         sensor->value = iAD595VoltToTemp((float)((viRawVoltValue+0.213)-viZeroSet));        //0.213 *2 = 0.426
                 ; 000D 019B 
                 ; 000D 019C                                          viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
006f12 940e ced8 	CALL SUBOPT_0x20A
                 ; 000D 019D                                          viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
                 ; 000D 019E                                          sensor->value = iAD595VoltToTemp(viVoltUseCaluate);        //0.213 *2 = 0.426
006f14 940e a2a6 	CALL _iAD595VoltToTemp
006f16 c03d      	RJMP _0x1A00C9
                 ; 000D 019F                                     }
                 ; 000D 01A0                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0068:
006f17 940e c325 	CALL SUBOPT_0x2E
006f19 30e1      	CPI  R30,LOW(0x1)
006f1a f459      	BRNE _0x1A006C
                 ; 000D 01A1                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epTMECTempOffset;
006f1b 940e cf03 	CALL SUBOPT_0x20D
006f1d 940e c2af 	CALL SUBOPT_0x1B
006f1f 940e cfa7 	CALL SUBOPT_0x21F
                +
006f21 e8a5     +LDI R26 , LOW ( 0x427EEB85 )
006f22 eebb     +LDI R27 , HIGH ( 0x427EEB85 )
006f23 e78e     +LDI R24 , BYTE3 ( 0x427EEB85 )
006f24 e492     +LDI R25 , BYTE4 ( 0x427EEB85 )
                 	__GETD2N 0x427EEB85
006f25 c02c      	RJMP _0x1A00CA
                 ; 000D 01A2                                     }
                 ; 000D 01A3                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A006C:
006f26 940e c325 	CALL SUBOPT_0x2E
006f28 30e2      	CPI  R30,LOW(0x2)
006f29 f591      	BRNE _0x1A006E
                 ; 000D 01A4                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 01A5                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 01A6                                                              epPT100Temp_C;
006f2a 940e cf03 	CALL SUBOPT_0x20D
006f2c 940e c2af 	CALL SUBOPT_0x1B
006f2e 940e cfb8 	CALL SUBOPT_0x221
006f30 937f      	PUSH R23
006f31 936f      	PUSH R22
006f32 93ff      	PUSH R31
006f33 93ef      	PUSH R30
006f34 940e cf03 	CALL SUBOPT_0x20D
006f36 940e c2af 	CALL SUBOPT_0x1B
006f38 91af      	POP  R26
006f39 91bf      	POP  R27
006f3a 918f      	POP  R24
006f3b 919f      	POP  R25
006f3c 940e e0c5 	CALL __MULF12
006f3e 937f      	PUSH R23
006f3f 936f      	PUSH R22
006f40 93ff      	PUSH R31
006f41 93ef      	PUSH R30
006f42 940e cf03 	CALL SUBOPT_0x20D
006f44 940e c2af 	CALL SUBOPT_0x1B
006f46 940e cfbf 	CALL SUBOPT_0x222
006f48 91af      	POP  R26
006f49 91bf      	POP  R27
006f4a 918f      	POP  R24
006f4b 919f      	POP  R25
006f4c 940e e075 	CALL __ADDF12
                +
006f4e eea5     +LDI R26 , LOW ( 0xC334E2E5 )
006f4f eeb2     +LDI R27 , HIGH ( 0xC334E2E5 )
006f50 e384     +LDI R24 , BYTE3 ( 0xC334E2E5 )
006f51 ec93     +LDI R25 , BYTE4 ( 0xC334E2E5 )
                 	__GETD2N 0xC334E2E5
                 _0x1A00CA:
006f52 940e e075 	CALL __ADDF12
                 _0x1A00C9:
                +
006f54 01de     +MOVW R26 , R28
006f55 5aa4     +SUBI R26 , LOW ( - 92 )
006f56 4fbf     +SBCI R27 , HIGH ( - 92 )
006f57 900d     +LD R0 , X +
006f58 91bc     +LD R27 , X
006f59 2da0     +MOV R26 , R0
                 	__GETW2SX 92
006f5a 940e e2ff 	CALL __PUTDP1
                 ; 000D 01A7 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epPT100TempOffset;
                 ; 000D 01A8 //                                        getInterval(adcData[ch], &x_1, &x_2, &y_1, &y_2);
                 ; 000D 01A9 //                                        sensor->value = (((adcData[ch] - x_1) * (y_2 - y_1)) / (x_2 - x_1)) + y_1;
                 ; 000D 01AA 
                 ; 000D 01AB                                         // test
                 ; 000D 01AC                                         //printDebug("ADC: %f, Value: %f \r\n", adcData[ch], sensor->value);
                 ; 000D 01AD                                         //
                 ; 000D 01AE                                     }
                 ; 000D 01AF                                     break;
                 _0x1A006E:
                 ; 000D 01B0     }
                 _0x1A0049:
                 ; 000D 01B1     //printDebug("end read sensor.\r\n");
                 ; 000D 01B2     sensor->status  = SENS_NORMAL;
006f5c 940e cf22 	CALL SUBOPT_0x212
006f5e 9614      	ADIW R26,4
006f5f e0e0      	LDI  R30,LOW(0)
006f60 93ec      	ST   X,R30
                 ; 000D 01B3 
                 ; 000D 01B4     return 0;
006f61 e0e0      	LDI  R30,LOW(0)
006f62 e0f0      	LDI  R31,HIGH(0)
                 _0x20E006A:
006f63 940e e3a2 	CALL __LOADLOCR4
006f65 96ef      	ADIW R28,63
006f66 96a1      	ADIW R28,33
006f67 9508      	RET
                 ; 000D 01B5 }
                 ;/*============================================================*/
                 ;void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 01B7 void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 01B8 
                 ; 000D 01B9     int i = 0;
                 ; 000D 01BA 
                 ; 000D 01BB     for(i = 0; i < 15; i++) {
                 ;	adcRaw -> Y+10
                 ;	*x1 -> Y+8
                 ;	*x2 -> Y+6
                 ;	*y1 -> Y+4
                 ;	*y2 -> Y+2
                 ;	i -> R16,R17
                 ; 000D 01BC         if(adcRaw <= adcTable[i]) {
                 ; 000D 01BD             *x1 = adcTable[i-1];
                 ; 000D 01BE             *y1 = tempTable[i-1];
                 ; 000D 01BF             *x2 = adcTable[i];
                 ; 000D 01C0             *y2 = tempTable[i];
                 ; 000D 01C1             break;
                 ; 000D 01C2         }
                 ; 000D 01C3     }
                 ; 000D 01C4 
                 ; 000D 01C5     return;
                 ; 000D 01C6 }
                 ;/*============================================================*/
                 ;int sensorCalibrate1(int p1, int p2)
                 ; 000D 01C9 {
                 _sensorCalibrate1:
                 ; 000D 01CA     float p2_raw;
                 ; 000D 01CB 
                 ; 000D 01CC     if(operating_config.sensorEnable[p1] != 0x01){
006f68 93ba      	ST   -Y,R27
006f69 93aa      	ST   -Y,R26
006f6a 9724      	SBIW R28,4
                 ;	p1 -> Y+6
                 ;	p2 -> Y+4
                 ;	p2_raw -> Y+0
                +
006f6b ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006f6c e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006f6d 940e d024 	CALL SUBOPT_0x22E
006f6f 91ac      	LD   R26,X
006f70 30a1      	CPI  R26,LOW(0x1)
006f71 f061      	BREQ _0x1A0073
                 ; 000D 01CD         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p1+1);
                +
006f72 e3e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 133 ) )
006f73 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 133 ) )
006f74 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 133 ) )
006f75 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 133 ) )
                 	__POINTD1FN _0x1A0000,133
006f76 940e c96a 	CALL SUBOPT_0x128
006f78 9631      	ADIW R30,1
006f79 940e c800 	CALL SUBOPT_0xE9
                 ; 000D 01CE         return -1;
006f7b efef      	LDI  R30,LOW(65535)
006f7c efff      	LDI  R31,HIGH(65535)
006f7d c0b6      	RJMP _0x20E0069
                 ; 000D 01CF     }
                 ; 000D 01D0     if(operating_config.sensorEnable[p2] != 0x01){
                 _0x1A0073:
                +
006f7e ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006f7f e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006f80 81ac      	LDD  R26,Y+4
006f81 81bd      	LDD  R27,Y+4+1
006f82 940e d029 	CALL SUBOPT_0x22F
006f84 f061      	BREQ _0x1A0074
                 ; 000D 01D1         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p2+1);
                +
006f85 e3e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 133 ) )
006f86 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 133 ) )
006f87 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 133 ) )
006f88 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 133 ) )
                 	__POINTD1FN _0x1A0000,133
006f89 940e cdb7 	CALL SUBOPT_0x1DA
006f8b 9631      	ADIW R30,1
006f8c 940e c800 	CALL SUBOPT_0xE9
                 ; 000D 01D2         return -1;
006f8e efef      	LDI  R30,LOW(65535)
006f8f efff      	LDI  R31,HIGH(65535)
006f90 c0a3      	RJMP _0x20E0069
                 ; 000D 01D3     }
                 ; 000D 01D4 
                 ; 000D 01D5     if(sensor[p1].status != SENS_NORMAL){
                 _0x1A0074:
006f91 81ae      	LDD  R26,Y+6
006f92 81bf      	LDD  R27,Y+6+1
006f93 940e d02e 	CALL SUBOPT_0x230
006f95 30e0      	CPI  R30,0
006f96 f089      	BREQ _0x1A0075
                 ; 000D 01D6         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p1+1,sensor[p1].status);
                +
006f97 e6e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 185 ) )
006f98 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 185 ) )
006f99 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 185 ) )
006f9a e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 185 ) )
                 	__POINTD1FN _0x1A0000,185
006f9b 940e c96a 	CALL SUBOPT_0x128
006f9d 940e ce99 	CALL SUBOPT_0x201
006f9f 85ae      	LDD  R26,Y+14
006fa0 85bf      	LDD  R27,Y+14+1
006fa1 940e d02e 	CALL SUBOPT_0x230
006fa3 940e d035 	CALL SUBOPT_0x231
                 ; 000D 01D7         return -1;
006fa5 efef      	LDI  R30,LOW(65535)
006fa6 efff      	LDI  R31,HIGH(65535)
006fa7 c08c      	RJMP _0x20E0069
                 ; 000D 01D8     }
                 ; 000D 01D9     if(sensor[p2].status != SENS_NORMAL){
                 _0x1A0075:
006fa8 81ac      	LDD  R26,Y+4
006fa9 81bd      	LDD  R27,Y+4+1
006faa 940e d02e 	CALL SUBOPT_0x230
006fac 30e0      	CPI  R30,0
006fad f089      	BREQ _0x1A0076
                 ; 000D 01DA         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p2+1,sensor[p2].status);
                +
006fae e6e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 185 ) )
006faf e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 185 ) )
006fb0 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 185 ) )
006fb1 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 185 ) )
                 	__POINTD1FN _0x1A0000,185
006fb2 940e cdb7 	CALL SUBOPT_0x1DA
006fb4 940e ce99 	CALL SUBOPT_0x201
006fb6 85ac      	LDD  R26,Y+12
006fb7 85bd      	LDD  R27,Y+12+1
006fb8 940e d02e 	CALL SUBOPT_0x230
006fba 940e d035 	CALL SUBOPT_0x231
                 ; 000D 01DB         return -1;
006fbc efef      	LDI  R30,LOW(65535)
006fbd efff      	LDI  R31,HIGH(65535)
006fbe c075      	RJMP _0x20E0069
                 ; 000D 01DC     }
                 ; 000D 01DD 
                 ; 000D 01DE     epCalType[p2]   = CAL_SELFCOMPARE;
                 _0x1A0076:
006fbf 81ac      	LDD  R26,Y+4
006fc0 81bd      	LDD  R27,Y+4+1
006fc1 5aa8      	SUBI R26,LOW(-_epCalType)
006fc2 4fb9      	SBCI R27,HIGH(-_epCalType)
006fc3 e0e1      	LDI  R30,LOW(1)
006fc4 940e e36c 	CALL __EEPROMWRB
                 ; 000D 01DF 
                 ; 000D 01E0     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006fc6 940e c325 	CALL SUBOPT_0x2E
006fc8 f021      	BREQ _0x1A0078
006fc9 940e c325 	CALL SUBOPT_0x2E
006fcb 30e3      	CPI  R30,LOW(0x3)
006fcc f499      	BRNE _0x1A0077
                 _0x1A0078:
                 ; 000D 01E1         p2_raw          = (ADC_CONV_FAC*100 * adcData[p2]);
006fcd 940e c343 	CALL SUBOPT_0x32
006fcf 940e c350 	CALL SUBOPT_0x33
006fd1 937f      	PUSH R23
006fd2 936f      	PUSH R22
006fd3 93ff      	PUSH R31
006fd4 93ef      	PUSH R30
006fd5 940e d03a 	CALL SUBOPT_0x232
006fd7 940e c2af 	CALL SUBOPT_0x1B
006fd9 91af      	POP  R26
006fda 91bf      	POP  R27
006fdb 918f      	POP  R24
006fdc 919f      	POP  R25
006fdd 940e e0c5 	CALL __MULF12
006fdf c033      	RJMP _0x1A00CB
                 ; 000D 01E2     }
                 ; 000D 01E3     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0077:
006fe0 940e c325 	CALL SUBOPT_0x2E
006fe2 30e1      	CPI  R30,LOW(0x1)
006fe3 f439      	BRNE _0x1A007B
                 ; 000D 01E4         p2_raw          = epTMECTempSlope   * adcData[p2];
006fe4 940e d03a 	CALL SUBOPT_0x232
006fe6 940e c2af 	CALL SUBOPT_0x1B
006fe8 940e cfa7 	CALL SUBOPT_0x21F
006fea c028      	RJMP _0x1A00CB
                 ; 000D 01E5     }
                 ; 000D 01E6     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A007B:
006feb 940e c325 	CALL SUBOPT_0x2E
006fed 30e2      	CPI  R30,LOW(0x2)
006fee f531      	BRNE _0x1A007D
                 ; 000D 01E7         p2_raw          = (epPT100Temp_A    * adcData[p2] * adcData[p2]) +
                 ; 000D 01E8                           (epPT100Temp_B    * adcData[p2]);
006fef 940e d03a 	CALL SUBOPT_0x232
006ff1 940e c2af 	CALL SUBOPT_0x1B
006ff3 940e cfb8 	CALL SUBOPT_0x221
006ff5 937f      	PUSH R23
006ff6 936f      	PUSH R22
006ff7 93ff      	PUSH R31
006ff8 93ef      	PUSH R30
006ff9 940e d03a 	CALL SUBOPT_0x232
006ffb 940e c2af 	CALL SUBOPT_0x1B
006ffd 91af      	POP  R26
006ffe 91bf      	POP  R27
006fff 918f      	POP  R24
007000 919f      	POP  R25
007001 940e e0c5 	CALL __MULF12
007003 937f      	PUSH R23
007004 936f      	PUSH R22
007005 93ff      	PUSH R31
007006 93ef      	PUSH R30
007007 940e d03a 	CALL SUBOPT_0x232
007009 940e c2af 	CALL SUBOPT_0x1B
00700b 940e cfbf 	CALL SUBOPT_0x222
00700d 91af      	POP  R26
00700e 91bf      	POP  R27
00700f 918f      	POP  R24
007010 919f      	POP  R25
007011 940e e075 	CALL __ADDF12
                 _0x1A00CB:
007013 940e e31a 	CALL __PUTD1S0
                 ; 000D 01E9     }
                 ; 000D 01EA 
                 ; 000D 01EB     epFactor_A[p2]  = 0;
                 _0x1A007D:
007015 81ec      	LDD  R30,Y+4
007016 81fd      	LDD  R31,Y+4+1
007017 940e d01d 	CALL SUBOPT_0x22D
007019 940e d03e 	CALL SUBOPT_0x233
                 ; 000D 01EC     epFactor_B[p2]  = 0;
00701b 940e d047 	CALL SUBOPT_0x234
00701d 940e d03e 	CALL SUBOPT_0x233
                 ; 000D 01ED     epFactor_C[p2]  = sensor[p1].value - p2_raw;
00701f 940e d04e 	CALL SUBOPT_0x235
007021 93ff      	PUSH R31
007022 93ef      	PUSH R30
007023 81ae      	LDD  R26,Y+6
007024 81bf      	LDD  R27,Y+6+1
007025 e0e5      	LDI  R30,LOW(5)
007026 940e e242 	CALL __MULB1W2U
007028 940e c2c8 	CALL SUBOPT_0x20
00702a 940e c5ab 	CALL SUBOPT_0x8C
00702c 940e e06e 	CALL __SUBF12
00702e 91af      	POP  R26
00702f 91bf      	POP  R27
007030 940e e35c 	CALL __EEPROMWRD
                 ; 000D 01EE 
                 ; 000D 01EF     return 0;
007032 e0e0      	LDI  R30,LOW(0)
007033 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0069:
007034 9628      	ADIW R28,8
007035 9508      	RET
                 ; 000D 01F0 }
                 ;/*============================================================*/
                 ;int sensorCalibrate2(int prbId)
                 ; 000D 01F3 {
                 _sensorCalibrate2:
                 ; 000D 01F4     float p2_raw;
                 ; 000D 01F5     float tmpA,tmpB,tmpC;
                 ; 000D 01F6     //int i = 0;
                 ; 000D 01F7     //long viADCbuffer = 0;
                 ; 000D 01F8 
                 ; 000D 01F9     if(epIsPointSet1[prbId] == 0){
007036 93ba      	ST   -Y,R27
007037 93aa      	ST   -Y,R26
007038 9760      	SBIW R28,16
                 ;	prbId -> Y+16
                 ;	p2_raw -> Y+12
                 ;	tmpA -> Y+8
                 ;	tmpB -> Y+4
                 ;	tmpC -> Y+0
007039 89a8      	LDD  R26,Y+16
00703a 89b9      	LDD  R27,Y+16+1
00703b 52af      	SUBI R26,LOW(-_epIsPointSet1)
00703c 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
00703d 940e e350 	CALL __EEPROMRDB
00703f 30e0      	CPI  R30,0
007040 f461      	BRNE _0x1A007E
                 ; 000D 01FA         printDebug("<sensorCalibrate2> ABORT: sensor ch %d No set point found\r\n",prbId+1);
                +
007041 e9ec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 240 ) )
007042 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 240 ) )
007043 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 240 ) )
007044 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 240 ) )
                 	__POINTD1FN _0x1A0000,240
007045 940e c7fb 	CALL SUBOPT_0xE8
007047 9631      	ADIW R30,1
007048 940e c800 	CALL SUBOPT_0xE9
                 ; 000D 01FB         return -1;
00704a efef      	LDI  R30,LOW(65535)
00704b efff      	LDI  R31,HIGH(65535)
00704c c166      	RJMP _0x20E0068
                 ; 000D 01FC     }
                 ; 000D 01FD 
                 ; 000D 01FE     if(epIsPointSet2[prbId] == 0){
                 _0x1A007E:
00704d 89a8      	LDD  R26,Y+16
00704e 89b9      	LDD  R27,Y+16+1
00704f 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007050 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007051 940e e350 	CALL __EEPROMRDB
007053 30e0      	CPI  R30,0
007054 f011      	BREQ PC+3
007055 940c 70cc 	JMP _0x1A007F
                 ; 000D 01FF         printDebug("<sensorCalibrate2> -- CAL_EXTOFFSET --\r\n");
                +
007057 ede8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 300 ) )
007058 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 300 ) )
007059 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 300 ) )
00705a e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 300 ) )
                 	__POINTD1FN _0x1A0000,300
00705b 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0200         epFactor_A[prbId]   = 0;
00705d 89e8      	LDD  R30,Y+16
00705e 89f9      	LDD  R31,Y+16+1
00705f 940e d01d 	CALL SUBOPT_0x22D
007061 940e d055 	CALL SUBOPT_0x236
                 ; 000D 0201         epFactor_B[prbId]   = 0;
007063 89e8      	LDD  R30,Y+16
007064 89f9      	LDD  R31,Y+16+1
007065 940e d047 	CALL SUBOPT_0x234
007067 940e d055 	CALL SUBOPT_0x236
                 ; 000D 0202 
                 ; 000D 0203         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007069 940e c325 	CALL SUBOPT_0x2E
00706b f021      	BREQ _0x1A0081
00706c 940e c325 	CALL SUBOPT_0x2E
00706e 30e3      	CPI  R30,LOW(0x3)
00706f f489      	BRNE _0x1A0080
                 _0x1A0081:
                 ; 000D 0204             p2_raw          = (ADC_CONV_FAC*100 * epADCRef1[prbId]);
007070 940e c343 	CALL SUBOPT_0x32
007072 940e c350 	CALL SUBOPT_0x33
007074 937f      	PUSH R23
007075 936f      	PUSH R22
007076 93ff      	PUSH R31
007077 93ef      	PUSH R30
007078 940e d05c 	CALL SUBOPT_0x237
00707a 91af      	POP  R26
00707b 91bf      	POP  R27
00707c 918f      	POP  R24
00707d 919f      	POP  R25
00707e 940e e0c5 	CALL __MULF12
007080 c02b      	RJMP _0x1A00CC
                 ; 000D 0205 
                 ; 000D 0206 
                 ; 000D 0207         }
                 ; 000D 0208         else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0080:
007081 940e c325 	CALL SUBOPT_0x2E
007083 30e1      	CPI  R30,LOW(0x1)
007084 f429      	BRNE _0x1A0084
                 ; 000D 0209             p2_raw          = epTMECTempSlope   * epADCRef1[prbId];
007085 940e d05c 	CALL SUBOPT_0x237
007087 940e cfa7 	CALL SUBOPT_0x21F
007089 c022      	RJMP _0x1A00CC
                 ; 000D 020A         }
                 ; 000D 020B         else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0084:
00708a 940e c325 	CALL SUBOPT_0x2E
00708c 30e2      	CPI  R30,LOW(0x2)
00708d f511      	BRNE _0x1A0086
                 ; 000D 020C             p2_raw          = (epPT100Temp_A    * epADCRef1[prbId] * epADCRef1[prbId]) +
                 ; 000D 020D                               (epPT100Temp_B    * epADCRef1[prbId]);
00708e 940e d05c 	CALL SUBOPT_0x237
007090 940e cfb8 	CALL SUBOPT_0x221
007092 937f      	PUSH R23
007093 936f      	PUSH R22
007094 93ff      	PUSH R31
007095 93ef      	PUSH R30
007096 940e d05c 	CALL SUBOPT_0x237
007098 91af      	POP  R26
007099 91bf      	POP  R27
00709a 918f      	POP  R24
00709b 919f      	POP  R25
00709c 940e e0c5 	CALL __MULF12
00709e 937f      	PUSH R23
00709f 936f      	PUSH R22
0070a0 93ff      	PUSH R31
0070a1 93ef      	PUSH R30
0070a2 940e d05c 	CALL SUBOPT_0x237
0070a4 940e cfbf 	CALL SUBOPT_0x222
0070a6 91af      	POP  R26
0070a7 91bf      	POP  R27
0070a8 918f      	POP  R24
0070a9 919f      	POP  R25
0070aa 940e e075 	CALL __ADDF12
                 _0x1A00CC:
                +
0070ac 87ec     +STD Y + 12 , R30
0070ad 87fd     +STD Y + 12 + 1 , R31
0070ae 876e     +STD Y + 12 + 2 , R22
0070af 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 000D 020E         }
                 ; 000D 020F 
                 ; 000D 0210         epFactor_C[prbId]   = epTempRef1[prbId] - p2_raw;
                 _0x1A0086:
0070b0 89e8      	LDD  R30,Y+16
0070b1 89f9      	LDD  R31,Y+16+1
0070b2 940e d04e 	CALL SUBOPT_0x235
0070b4 93ff      	PUSH R31
0070b5 93ef      	PUSH R30
0070b6 89e8      	LDD  R30,Y+16
0070b7 89f9      	LDD  R31,Y+16+1
0070b8 940e cf8e 	CALL SUBOPT_0x21C
0070ba 940e c23b 	CALL SUBOPT_0xB
0070bc 940e e06e 	CALL __SUBF12
0070be 91af      	POP  R26
0070bf 91bf      	POP  R27
0070c0 940e e35c 	CALL __EEPROMWRD
                 ; 000D 0211         epCalType[prbId]    = CAL_EXTOFFSET;
0070c2 940e d067 	CALL SUBOPT_0x238
0070c4 e0e2      	LDI  R30,LOW(2)
0070c5 940e e36c 	CALL __EEPROMWRB
                 ; 000D 0212         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
0070c7 940e d06c 	CALL SUBOPT_0x239
0070c9 940e d072 	CALL SUBOPT_0x23A
                 ; 000D 0213         return 0;
0070cb c0e5      	RJMP _0x20E0067
                 ; 000D 0214     }
                 ; 000D 0215 
                 ; 000D 0216     if(epIsPointSet3[prbId] == 0){
                 _0x1A007F:
0070cc 89a8      	LDD  R26,Y+16
0070cd 89b9      	LDD  R27,Y+16+1
0070ce 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0070cf 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0070d0 940e e350 	CALL __EEPROMRDB
0070d2 30e0      	CPI  R30,0
0070d3 f011      	BREQ PC+3
0070d4 940c 714a 	JMP _0x1A0087
                 ; 000D 0217         printDebug("<sensorCalibrate2> -- CAL_EXTLINEAR --\r\n");
                +
0070d6 e2e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 372 ) )
0070d7 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 372 ) )
0070d8 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 372 ) )
0070d9 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 372 ) )
                 	__POINTD1FN _0x1A0000,372
0070da 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0218         epFactor_A[prbId]   = 0;
0070dc 89e8      	LDD  R30,Y+16
0070dd 89f9      	LDD  R31,Y+16+1
0070de 940e d01d 	CALL SUBOPT_0x22D
0070e0 940e d055 	CALL SUBOPT_0x236
                 ; 000D 0219 
                 ; 000D 021A         epFactor_B[prbId]   = (epTempRef2[prbId] - epTempRef1[prbId])/(epADCRef2[prbId] - epADCRef1[prbId]);
0070e2 940e d079 	CALL SUBOPT_0x23B
0070e4 0fea      	ADD  R30,R26
0070e5 1ffb      	ADC  R31,R27
0070e6 93ff      	PUSH R31
0070e7 93ef      	PUSH R30
0070e8 940e d080 	CALL SUBOPT_0x23C
0070ea 937f      	PUSH R23
0070eb 936f      	PUSH R22
0070ec 93ff      	PUSH R31
0070ed 93ef      	PUSH R30
0070ee 89e8      	LDD  R30,Y+16
0070ef 89f9      	LDD  R31,Y+16+1
0070f0 940e cf8e 	CALL SUBOPT_0x21C
0070f2 91af      	POP  R26
0070f3 91bf      	POP  R27
0070f4 918f      	POP  R24
0070f5 919f      	POP  R25
0070f6 940e cf85 	CALL SUBOPT_0x21A
0070f8 937f      	PUSH R23
0070f9 936f      	PUSH R22
0070fa 93ff      	PUSH R31
0070fb 93ef      	PUSH R30
0070fc 940e d08b 	CALL SUBOPT_0x23D
0070fe 937f      	PUSH R23
0070ff 936f      	PUSH R22
007100 93ff      	PUSH R31
007101 93ef      	PUSH R30
007102 940e d05c 	CALL SUBOPT_0x237
007104 91af      	POP  R26
007105 91bf      	POP  R27
007106 918f      	POP  R24
007107 919f      	POP  R25
007108 940e cf85 	CALL SUBOPT_0x21A
00710a 91af      	POP  R26
00710b 91bf      	POP  R27
00710c 918f      	POP  R24
00710d 919f      	POP  R25
00710e 940e e113 	CALL __DIVF21
007110 91af      	POP  R26
007111 91bf      	POP  R27
007112 940e e35c 	CALL __EEPROMWRD
                 ; 000D 021B         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
007114 940e d096 	CALL SUBOPT_0x23E
007116 940e d047 	CALL SUBOPT_0x234
007118 940e ca23 	CALL SUBOPT_0x14B
                 ; 000D 021C 
                 ; 000D 021D         epFactor_C[prbId]   = epTempRef2[prbId] - (epFactor_B[prbId] * epADCRef2[prbId]);
00711a 89e8      	LDD  R30,Y+16
00711b 89f9      	LDD  R31,Y+16+1
00711c 940e d04e 	CALL SUBOPT_0x235
00711e 93ff      	PUSH R31
00711f 93ef      	PUSH R30
007120 940e d080 	CALL SUBOPT_0x23C
007122 937f      	PUSH R23
007123 936f      	PUSH R22
007124 93ff      	PUSH R31
007125 93ef      	PUSH R30
007126 89e8      	LDD  R30,Y+16
007127 89f9      	LDD  R31,Y+16+1
007128 940e d047 	CALL SUBOPT_0x234
00712a 940e e348 	CALL __EEPROMRDD
00712c 937f      	PUSH R23
00712d 936f      	PUSH R22
00712e 93ff      	PUSH R31
00712f 93ef      	PUSH R30
007130 940e d08b 	CALL SUBOPT_0x23D
007132 91af      	POP  R26
007133 91bf      	POP  R27
007134 918f      	POP  R24
007135 919f      	POP  R25
007136 940e e0c5 	CALL __MULF12
007138 91af      	POP  R26
007139 91bf      	POP  R27
00713a 918f      	POP  R24
00713b 919f      	POP  R25
00713c 940e cf85 	CALL SUBOPT_0x21A
00713e 91af      	POP  R26
00713f 91bf      	POP  R27
007140 940e e35c 	CALL __EEPROMWRD
                 ; 000D 021E         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
007142 940e d06c 	CALL SUBOPT_0x239
007144 940e d072 	CALL SUBOPT_0x23A
                 ; 000D 021F 
                 ; 000D 0220         epCalType[prbId]    = CAL_EXTLINEAR;
007146 940e d067 	CALL SUBOPT_0x238
007148 e0e3      	LDI  R30,LOW(3)
007149 c065      	RJMP _0x1A00CD
                 ; 000D 0221     }
                 ; 000D 0222     else{
                 _0x1A0087:
                 ; 000D 0223         printDebug("<sensorCalibrate2> -- CAL_EXTPOLYNOMIAL --\r\n");
                +
00714a e6e8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 444 ) )
00714b e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 444 ) )
00714c e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 444 ) )
00714d e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 444 ) )
                 	__POINTD1FN _0x1A0000,444
00714e 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0224 
                 ; 000D 0225         gaussian(epADCRef1[prbId],  epADCRef2[prbId],  epADCRef3[prbId],
                 ; 000D 0226                  epTempRef1[prbId], epTempRef2[prbId], epTempRef3[prbId],
                 ; 000D 0227                  &tmpA, &tmpB, &tmpC);
007150 940e d05c 	CALL SUBOPT_0x237
007152 940e c7fb 	CALL SUBOPT_0xE8
007154 940e d09c 	CALL SUBOPT_0x23F
007156 940e d0a1 	CALL SUBOPT_0x240
007158 8de8      	LDD  R30,Y+24
007159 8df9      	LDD  R31,Y+24+1
00715a 940e cffa 	CALL SUBOPT_0x228
00715c 940e c823 	CALL SUBOPT_0xF1
00715e 940e cf8e 	CALL SUBOPT_0x21C
007160 940e e324 	CALL __PUTPARD1
007162 a1e8      	LDD  R30,Y+32
007163 a1f9      	LDD  R31,Y+32+1
007164 940e d0a8 	CALL SUBOPT_0x241
007166 940e d0a1 	CALL SUBOPT_0x240
007168 a1ec      	LDD  R30,Y+36
007169 a1fd      	LDD  R31,Y+36+1
00716a 940e d003 	CALL SUBOPT_0x229
00716c 940e e324 	CALL __PUTPARD1
00716e 01fe      	MOVW R30,R28
00716f 96b0      	ADIW R30,32
007170 93fa      	ST   -Y,R31
007171 93ea      	ST   -Y,R30
007172 01fe      	MOVW R30,R28
007173 967e      	ADIW R30,30
007174 93fa      	ST   -Y,R31
007175 93ea      	ST   -Y,R30
007176 01de      	MOVW R26,R28
007177 965c      	ADIW R26,28
007178 940e a073 	CALL _gaussian
                 ; 000D 0228 
                 ; 000D 0229         epFactor_A[prbId]   = tmpA;
00717a 89e8      	LDD  R30,Y+16
00717b 89f9      	LDD  R31,Y+16+1
00717c e9a5      	LDI  R26,LOW(_epFactor_A)
00717d e0b5      	LDI  R27,HIGH(_epFactor_A)
00717e 940e e1cb 	CALL __LSLW2
007180 0fae      	ADD  R26,R30
007181 1fbf      	ADC  R27,R31
007182 940e c412 	CALL SUBOPT_0x4F
007184 940e e35c 	CALL __EEPROMWRD
                 ; 000D 022A         epFactor_B[prbId]   = tmpB;
007186 940e d079 	CALL SUBOPT_0x23B
007188 0fae      	ADD  R26,R30
007189 1fbf      	ADC  R27,R31
00718a 940e c598 	CALL SUBOPT_0x89
00718c 940e e35c 	CALL __EEPROMWRD
                 ; 000D 022B         epFactor_C[prbId]   = tmpC;
00718e 89e8      	LDD  R30,Y+16
00718f 89f9      	LDD  R31,Y+16+1
007190 ebad      	LDI  R26,LOW(_epFactor_C)
007191 e0b5      	LDI  R27,HIGH(_epFactor_C)
007192 940e d0ad 	CALL SUBOPT_0x242
007194 940e c58c 	CALL SUBOPT_0x87
007196 940e e35c 	CALL __EEPROMWRD
                 ; 000D 022C 
                 ; 000D 022D         printDebug("<sensorCalibrate2> --A--> %f\r\n", epFactor_A[prbId]);
                +
007198 e9e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 489 ) )
007199 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 489 ) )
00719a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 489 ) )
00719b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 489 ) )
                 	__POINTD1FN _0x1A0000,489
00719c 940e c7fb 	CALL SUBOPT_0xE8
00719e 940e d01d 	CALL SUBOPT_0x22D
0071a0 940e ca23 	CALL SUBOPT_0x14B
                 ; 000D 022E         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
0071a2 940e d096 	CALL SUBOPT_0x23E
0071a4 940e d047 	CALL SUBOPT_0x234
0071a6 940e ca23 	CALL SUBOPT_0x14B
                 ; 000D 022F         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
0071a8 940e d06c 	CALL SUBOPT_0x239
0071aa 940e d072 	CALL SUBOPT_0x23A
                 ; 000D 0230 
                 ; 000D 0231 
                 ; 000D 0232 
                 ; 000D 0233         epCalType[prbId]    = CAL_EXTPOLYNOMIAL;
0071ac 940e d067 	CALL SUBOPT_0x238
0071ae e0e4      	LDI  R30,LOW(4)
                 _0x1A00CD:
0071af 940e e36c 	CALL __EEPROMWRB
                 ; 000D 0234     }
                 ; 000D 0235 
                 ; 000D 0236     return 0;
                 _0x20E0067:
0071b1 e0e0      	LDI  R30,LOW(0)
0071b2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
0071b3 9662      	ADIW R28,18
0071b4 9508      	RET
                 ; 000D 0237 }
                 ;/*============================================================*/
                 ;int sensorGetCurrentSetPoint(int ch,int pnt, unsigned char *buf)
                 ; 000D 023A {
                 _sensorGetCurrentSetPoint:
                 ; 000D 023B     unsigned char   valStr[10];
                 ; 000D 023C     float           valTmp;
                 ; 000D 023D     //signed int      val;
                 ; 000D 023E     int             i;
                 ; 000D 023F 
                 ; 000D 0240     if(pnt == CALPOINT(1)){
0071b5 93ba      	ST   -Y,R27
0071b6 93aa      	ST   -Y,R26
0071b7 972e      	SBIW R28,14
0071b8 931a      	ST   -Y,R17
0071b9 930a      	ST   -Y,R16
                 ;	ch -> Y+20
                 ;	pnt -> Y+18
                 ;	*buf -> Y+16
                 ;	valStr -> Y+6
                 ;	valTmp -> Y+2
                 ;	i -> R16,R17
0071ba 89aa      	LDD  R26,Y+18
0071bb 89bb      	LDD  R27,Y+18+1
0071bc 36a5      	CPI  R26,LOW(0x65)
0071bd e0e0      	LDI  R30,HIGH(0x65)
0071be 07be      	CPC  R27,R30
0071bf f541      	BRNE _0x1A0089
                 ; 000D 0241         if(epIsPointSet1[ch] == 1){
0071c0 89ac      	LDD  R26,Y+20
0071c1 89bd      	LDD  R27,Y+20+1
0071c2 52af      	SUBI R26,LOW(-_epIsPointSet1)
0071c3 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
0071c4 940e e350 	CALL __EEPROMRDB
0071c6 30e1      	CPI  R30,LOW(0x1)
0071c7 f4a9      	BRNE _0x1A008A
                 ; 000D 0242             valTmp  = epTempRef1[ch];
0071c8 89ec      	LDD  R30,Y+20
0071c9 89fd      	LDD  R31,Y+20+1
0071ca 940e cf8e 	CALL SUBOPT_0x21C
0071cc 940e c6a7 	CALL SUBOPT_0xB2
                 ; 000D 0243             printDebug("<sensorGetCurrentSetPoint> tempRef1 = [%f][%f]\r\n",epTempRef1[ch],valTmp);
                +
0071ce ebe4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 520 ) )
0071cf e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 520 ) )
0071d0 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 520 ) )
0071d1 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 520 ) )
                 	__POINTD1FN _0x1A0000,520
0071d2 940e d0b2 	CALL SUBOPT_0x243
0071d4 940e cf8e 	CALL SUBOPT_0x21C
0071d6 940e c445 	CALL SUBOPT_0x57
0071d8 940e c2ce 	CALL SUBOPT_0x21
                 ; 000D 0244             ftoa(valTmp,2,valStr);
0071da 940e d0b7 	CALL SUBOPT_0x244
                 ; 000D 0245             //val = (epTempRef1[ch] * 100);
                 ; 000D 0246         }
                 ; 000D 0247         else{
0071dc c00a      	RJMP _0x1A008B
                 _0x1A008A:
                 ; 000D 0248             printDebug("<sensorGetCurrentSetPoint> tempRef1 not set [0.00]\r\n");
                +
0071dd eee5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 569 ) )
0071de e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 569 ) )
0071df e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 569 ) )
0071e0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 569 ) )
                 	__POINTD1FN _0x1A0000,569
0071e1 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0249             sprintf(valStr,"0.00");                 //val = 0;
0071e3 940e c440 	CALL SUBOPT_0x56
0071e5 940e d0c1 	CALL SUBOPT_0x245
                 ; 000D 024A         }
                 _0x1A008B:
                 ; 000D 024B     }
                 ; 000D 024C     else if(pnt == CALPOINT(2)){
0071e7 c071      	RJMP _0x1A008C
                 _0x1A0089:
0071e8 89aa      	LDD  R26,Y+18
0071e9 89bb      	LDD  R27,Y+18+1
0071ea 36a6      	CPI  R26,LOW(0x66)
0071eb e0e0      	LDI  R30,HIGH(0x66)
0071ec 07be      	CPC  R27,R30
0071ed f581      	BRNE _0x1A008D
                 ; 000D 024D         if(epIsPointSet2[ch] == 1){
0071ee 89ac      	LDD  R26,Y+20
0071ef 89bd      	LDD  R27,Y+20+1
0071f0 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0071f1 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0071f2 940e e350 	CALL __EEPROMRDB
0071f4 30e1      	CPI  R30,LOW(0x1)
0071f5 f4e9      	BRNE _0x1A008E
                 ; 000D 024E             valTmp  = epTempRef2[ch];
0071f6 89ec      	LDD  R30,Y+20
0071f7 89fd      	LDD  R31,Y+20+1
0071f8 940e d0a8 	CALL SUBOPT_0x241
0071fa 0fae      	ADD  R26,R30
0071fb 1fbf      	ADC  R27,R31
0071fc 940e e348 	CALL __EEPROMRDD
0071fe 940e c6a7 	CALL SUBOPT_0xB2
                 ; 000D 024F             printDebug("<sensorGetCurrentSetPoint> tempRef2 = [%f][%f]\r\n",epTempRef2[ch],valTmp);
                +
007200 e1ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 627 ) )
007201 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 627 ) )
007202 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 627 ) )
007203 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 627 ) )
                 	__POINTD1FN _0x1A0000,627
007204 940e d0b2 	CALL SUBOPT_0x243
007206 940e d0a8 	CALL SUBOPT_0x241
007208 0fae      	ADD  R26,R30
007209 1fbf      	ADC  R27,R31
00720a 940e e348 	CALL __EEPROMRDD
00720c 940e c445 	CALL SUBOPT_0x57
00720e 940e c2ce 	CALL SUBOPT_0x21
                 ; 000D 0250             ftoa(valTmp,2,valStr);
007210 940e d0b7 	CALL SUBOPT_0x244
                 ; 000D 0251             //val = (epTempRef1[ch] * 100);
                 ; 000D 0252         }
                 ; 000D 0253         else{
007212 c00a      	RJMP _0x1A008F
                 _0x1A008E:
                 ; 000D 0254             printDebug("<sensorGetCurrentSetPoint> tempRef2 not set [0.00]\r\n");
                +
007213 e5e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 676 ) )
007214 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 676 ) )
007215 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 676 ) )
007216 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 676 ) )
                 	__POINTD1FN _0x1A0000,676
007217 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0255             sprintf(valStr,"0.00");                 //val = 0;
007219 940e c440 	CALL SUBOPT_0x56
00721b 940e d0c1 	CALL SUBOPT_0x245
                 ; 000D 0256         }
                 _0x1A008F:
                 ; 000D 0257         /*
                 ; 000D 0258         if(epIsPointSet2[ch] == 1){ val = (epTempRef2[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef2[ch]);}
                 ; 000D 0259         else{                       val = 0;        }
                 ; 000D 025A         */
                 ; 000D 025B     }
                 ; 000D 025C     else if(pnt == CALPOINT(3)){
00721d c03b      	RJMP _0x1A0090
                 _0x1A008D:
00721e 89aa      	LDD  R26,Y+18
00721f 89bb      	LDD  R27,Y+18+1
007220 36a7      	CPI  R26,LOW(0x67)
007221 e0e0      	LDI  R30,HIGH(0x67)
007222 07be      	CPC  R27,R30
007223 f541      	BRNE _0x1A0091
                 ; 000D 025D         if(epIsPointSet3[ch] == 1){
007224 89ac      	LDD  R26,Y+20
007225 89bd      	LDD  R27,Y+20+1
007226 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007227 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007228 940e e350 	CALL __EEPROMRDB
00722a 30e1      	CPI  R30,LOW(0x1)
00722b f4a9      	BRNE _0x1A0092
                 ; 000D 025E             valTmp  = epTempRef3[ch];
00722c 89ec      	LDD  R30,Y+20
00722d 89fd      	LDD  R31,Y+20+1
00722e 940e d003 	CALL SUBOPT_0x229
007230 940e c6a7 	CALL SUBOPT_0xB2
                 ; 000D 025F             printDebug("<sensorGetCurrentSetPoint> tempRef3 = [%f][%f]\r\n",epTempRef3[ch],valTmp);
                +
007232 e8e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 729 ) )
007233 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 729 ) )
007234 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 729 ) )
007235 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 729 ) )
                 	__POINTD1FN _0x1A0000,729
007236 940e d0b2 	CALL SUBOPT_0x243
007238 940e d003 	CALL SUBOPT_0x229
00723a 940e c445 	CALL SUBOPT_0x57
00723c 940e c2ce 	CALL SUBOPT_0x21
                 ; 000D 0260             ftoa(valTmp,2,valStr);
00723e 940e d0b7 	CALL SUBOPT_0x244
                 ; 000D 0261             //val = (epTempRef1[ch] * 100);
                 ; 000D 0262         }
                 ; 000D 0263         else{
007240 c00a      	RJMP _0x1A0093
                 _0x1A0092:
                 ; 000D 0264             printDebug("<sensorGetCurrentSetPoint> tempRef3 not set [0.00]\r\n");
                +
007241 ebe6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 778 ) )
007242 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 778 ) )
007243 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 778 ) )
007244 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 778 ) )
                 	__POINTD1FN _0x1A0000,778
007245 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 0265             sprintf(valStr,"0.00");                 //val = 0;
007247 940e c440 	CALL SUBOPT_0x56
007249 940e d0c1 	CALL SUBOPT_0x245
                 ; 000D 0266         }
                 _0x1A0093:
                 ; 000D 0267         /*
                 ; 000D 0268         if(epIsPointSet3[ch] == 1){ val = (epTempRef3[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef3[ch]);}
                 ; 000D 0269         else{                       val = 0;        }
                 ; 000D 026A         */
                 ; 000D 026B     }
                 ; 000D 026C     else{
00724b c00d      	RJMP _0x1A0094
                 _0x1A0091:
                 ; 000D 026D         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
00724c eeeb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 831 ) )
00724d e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 831 ) )
00724e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 831 ) )
00724f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 831 ) )
                 	__POINTD1FN _0x1A0000,831
007250 940e e324 	CALL __PUTPARD1
007252 89ee      	LDD  R30,Y+22
007253 89ff      	LDD  R31,Y+22+1
007254 940e c800 	CALL SUBOPT_0xE9
                 ; 000D 026E         return -1;
007256 efef      	LDI  R30,LOW(65535)
007257 efff      	LDI  R31,HIGH(65535)
007258 c0d8      	RJMP _0x20E0066
                 ; 000D 026F     }
                 _0x1A0094:
                 _0x1A0090:
                 _0x1A008C:
                 ; 000D 0270     //printDebug("<sensorGetCurrentSetPoint> read val = [%d]\r\n",val);
                 ; 000D 0271     printDebug("<sensorGetCurrentSetPoint> read val(%d) = [%s]\r\n",strlen(valStr),valStr);
                +
007259 e2e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 887 ) )
00725a e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 887 ) )
00725b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 887 ) )
00725c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 887 ) )
                 	__POINTD1FN _0x1A0000,887
00725d 940e e324 	CALL __PUTPARD1
00725f 01de      	MOVW R26,R28
007260 961a      	ADIW R26,10
007261 940e a799 	CALL _strlen
007263 940e c357 	CALL SUBOPT_0x34
007265 01fe      	MOVW R30,R28
007266 963e      	ADIW R30,14
007267 940e c9d8 	CALL SUBOPT_0x13E
                 ; 000D 0272 
                 ; 000D 0273     if(valStr[0] == '-'){
007269 81ae      	LDD  R26,Y+6
00726a 32ad      	CPI  R26,LOW(0x2D)
00726b f011      	BREQ PC+3
00726c 940c 72bf 	JMP _0x1A0095
                 ; 000D 0274         buf[0] = 1;
00726e 89a8      	LDD  R26,Y+16
00726f 89b9      	LDD  R27,Y+16+1
007270 e0e1      	LDI  R30,LOW(1)
007271 93ec      	ST   X,R30
                 ; 000D 0275         if(strlen(valStr) == 7){
007272 940e d0cc 	CALL SUBOPT_0x246
007274 30e7      	CPI  R30,LOW(0x7)
007275 e0a0      	LDI  R26,HIGH(0x7)
007276 07fa      	CPC  R31,R26
007277 f499      	BRNE _0x1A0096
                 ; 000D 0276             buf[1]  = valStr[1] - 0x30;     buf[2]  = valStr[2] - 0x30;     buf[3]  = valStr[3] - 0x30;
007278 81ef      	LDD  R30,Y+7
007279 53e0      	SUBI R30,LOW(48)
                +
00727a 89a8     +LDD R26 , Y + 16
00727b 89b9     +LDD R27 , Y + 16 + 1
00727c 9611     +ADIW R26 , 1
00727d 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
00727e 85e8      	LDD  R30,Y+8
00727f 940e d0d0 	CALL SUBOPT_0x247
007281 85e9      	LDD  R30,Y+9
007282 940e d0d6 	CALL SUBOPT_0x248
                 ; 000D 0277             buf[4]  = valStr[5] - 0x30;     buf[5]  = valStr[6] - 0x30;
007284 85eb      	LDD  R30,Y+11
007285 940e d0dc 	CALL SUBOPT_0x249
007287 85ec      	LDD  R30,Y+12
007288 940e d0e2 	CALL SUBOPT_0x24A
                 ; 000D 0278         }
                 ; 000D 0279         else if(strlen(valStr) == 6){
00728a c033      	RJMP _0x1A0097
                 _0x1A0096:
00728b 940e d0cc 	CALL SUBOPT_0x246
00728d 30e6      	CPI  R30,LOW(0x6)
00728e e0a0      	LDI  R26,HIGH(0x6)
00728f 07fa      	CPC  R31,R26
007290 f479      	BRNE _0x1A0098
                 ; 000D 027A             buf[1]  = 0;                    buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
007291 940e d0e8 	CALL SUBOPT_0x24B
007293 81ef      	LDD  R30,Y+7
007294 940e d0d0 	CALL SUBOPT_0x247
007296 85e8      	LDD  R30,Y+8
007297 940e d0d6 	CALL SUBOPT_0x248
                 ; 000D 027B             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
007299 85ea      	LDD  R30,Y+10
00729a 940e d0dc 	CALL SUBOPT_0x249
00729c 85eb      	LDD  R30,Y+11
00729d 940e d0e2 	CALL SUBOPT_0x24A
                 ; 000D 027C         }
                 ; 000D 027D         else if(strlen(valStr) == 5){
00729f c01e      	RJMP _0x1A0099
                 _0x1A0098:
0072a0 940e d0cc 	CALL SUBOPT_0x246
0072a2 30e5      	CPI  R30,LOW(0x5)
0072a3 e0a0      	LDI  R26,HIGH(0x5)
0072a4 07fa      	CPC  R31,R26
0072a5 f489      	BRNE _0x1A009A
                 ; 000D 027E             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[1] - 0x30;
0072a6 940e d0e8 	CALL SUBOPT_0x24B
0072a8 89a8      	LDD  R26,Y+16
0072a9 89b9      	LDD  R27,Y+16+1
0072aa 9612      	ADIW R26,2
0072ab e0e0      	LDI  R30,LOW(0)
0072ac 93ec      	ST   X,R30
0072ad 81ef      	LDD  R30,Y+7
0072ae 940e d0d6 	CALL SUBOPT_0x248
                 ; 000D 027F             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
0072b0 85e9      	LDD  R30,Y+9
0072b1 940e d0dc 	CALL SUBOPT_0x249
0072b3 85ea      	LDD  R30,Y+10
0072b4 940e d0e2 	CALL SUBOPT_0x24A
                 ; 000D 0280         }
                 ; 000D 0281         else{
0072b6 c007      	RJMP _0x1A009B
                 _0x1A009A:
                 ; 000D 0282             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
0072b7 940e d0ee 	CALL SUBOPT_0x24C
0072b9 940e c26b 	CALL SUBOPT_0x12
                 ; 000D 0283             return -1;
0072bb efef      	LDI  R30,LOW(65535)
0072bc efff      	LDI  R31,HIGH(65535)
0072bd c073      	RJMP _0x20E0066
                 ; 000D 0284         }
                 _0x1A009B:
                 _0x1A0099:
                 _0x1A0097:
                 ; 000D 0285     }
                 ; 000D 0286     else{
0072be c050      	RJMP _0x1A009C
                 _0x1A0095:
                 ; 000D 0287         buf[0] = 0;
0072bf 89a8      	LDD  R26,Y+16
0072c0 89b9      	LDD  R27,Y+16+1
0072c1 e0e0      	LDI  R30,LOW(0)
0072c2 93ec      	ST   X,R30
                 ; 000D 0288         if(strlen(valStr) == 6){
0072c3 940e d0cc 	CALL SUBOPT_0x246
0072c5 30e6      	CPI  R30,LOW(0x6)
0072c6 e0a0      	LDI  R26,HIGH(0x6)
0072c7 07fa      	CPC  R31,R26
0072c8 f499      	BRNE _0x1A009D
                 ; 000D 0289             buf[1]  = valStr[0] - 0x30;     buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
0072c9 81ee      	LDD  R30,Y+6
0072ca 53e0      	SUBI R30,LOW(48)
                +
0072cb 89a8     +LDD R26 , Y + 16
0072cc 89b9     +LDD R27 , Y + 16 + 1
0072cd 9611     +ADIW R26 , 1
0072ce 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
0072cf 81ef      	LDD  R30,Y+7
0072d0 940e d0d0 	CALL SUBOPT_0x247
0072d2 85e8      	LDD  R30,Y+8
0072d3 940e d0d6 	CALL SUBOPT_0x248
                 ; 000D 028A             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
0072d5 85ea      	LDD  R30,Y+10
0072d6 940e d0dc 	CALL SUBOPT_0x249
0072d8 85eb      	LDD  R30,Y+11
0072d9 940e d0e2 	CALL SUBOPT_0x24A
                 ; 000D 028B         }
                 ; 000D 028C         else if(strlen(valStr) == 5){
0072db c033      	RJMP _0x1A009E
                 _0x1A009D:
0072dc 940e d0cc 	CALL SUBOPT_0x246
0072de 30e5      	CPI  R30,LOW(0x5)
0072df e0a0      	LDI  R26,HIGH(0x5)
0072e0 07fa      	CPC  R31,R26
0072e1 f479      	BRNE _0x1A009F
                 ; 000D 028D             buf[1]  = 0;                    buf[2]  = valStr[0] - 0x30;     buf[3]  = valStr[1] - 0x30;
0072e2 940e d0e8 	CALL SUBOPT_0x24B
0072e4 81ee      	LDD  R30,Y+6
0072e5 940e d0d0 	CALL SUBOPT_0x247
0072e7 81ef      	LDD  R30,Y+7
0072e8 940e d0d6 	CALL SUBOPT_0x248
                 ; 000D 028E             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
0072ea 85e9      	LDD  R30,Y+9
0072eb 940e d0dc 	CALL SUBOPT_0x249
0072ed 85ea      	LDD  R30,Y+10
0072ee 940e d0e2 	CALL SUBOPT_0x24A
                 ; 000D 028F         }
                 ; 000D 0290         else if(strlen(valStr) == 4){
0072f0 c01e      	RJMP _0x1A00A0
                 _0x1A009F:
0072f1 940e d0cc 	CALL SUBOPT_0x246
0072f3 30e4      	CPI  R30,LOW(0x4)
0072f4 e0a0      	LDI  R26,HIGH(0x4)
0072f5 07fa      	CPC  R31,R26
0072f6 f489      	BRNE _0x1A00A1
                 ; 000D 0291             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[0] - 0x30;
0072f7 940e d0e8 	CALL SUBOPT_0x24B
0072f9 89a8      	LDD  R26,Y+16
0072fa 89b9      	LDD  R27,Y+16+1
0072fb 9612      	ADIW R26,2
0072fc e0e0      	LDI  R30,LOW(0)
0072fd 93ec      	ST   X,R30
0072fe 81ee      	LDD  R30,Y+6
0072ff 940e d0d6 	CALL SUBOPT_0x248
                 ; 000D 0292             buf[4]  = valStr[2] - 0x30;     buf[5]  = valStr[3] - 0x30;
007301 85e8      	LDD  R30,Y+8
007302 940e d0dc 	CALL SUBOPT_0x249
007304 85e9      	LDD  R30,Y+9
007305 940e d0e2 	CALL SUBOPT_0x24A
                 ; 000D 0293         }
                 ; 000D 0294         else{
007307 c007      	RJMP _0x1A00A2
                 _0x1A00A1:
                 ; 000D 0295             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
007308 940e d0ee 	CALL SUBOPT_0x24C
00730a 940e c26b 	CALL SUBOPT_0x12
                 ; 000D 0296             return -1;
00730c efef      	LDI  R30,LOW(65535)
00730d efff      	LDI  R31,HIGH(65535)
00730e c022      	RJMP _0x20E0066
                 ; 000D 0297         }
                 _0x1A00A2:
                 _0x1A00A0:
                 _0x1A009E:
                 ; 000D 0298     }
                 _0x1A009C:
                 ; 000D 0299 
                 ; 000D 029A     printDebug("<sensorGetCurrentSetPoint> buf read");
                +
00730f e8ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 994 ) )
007310 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 994 ) )
007311 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 994 ) )
007312 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 994 ) )
                 	__POINTD1FN _0x1A0000,994
007313 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 029B     for(i=0;i<6;i++){
                +
007315 e000     +LDI R16 , LOW ( 0 )
007316 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A00A4:
                +
007317 3006     +CPI R16 , LOW ( 6 )
007318 e0e0     +LDI R30 , HIGH ( 6 )
007319 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
00731a f474      	BRGE _0x1A00A5
                 ; 000D 029C         printDebug("[%d]",buf[i]);
                +
00731b ebe2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1030 ) )
00731c e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1030 ) )
00731d e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1030 ) )
00731e e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1030 ) )
                 	__POINTD1FN _0x1A0000,1030
00731f 940e e324 	CALL __PUTPARD1
007321 01f8      	MOVW R30,R16
007322 89ac      	LDD  R26,Y+20
007323 89bd      	LDD  R27,Y+20+1
007324 940e cba1 	CALL SUBOPT_0x183
                 ; 000D 029D     }
                +
007326 5f0f     +SUBI R16 , LOW ( - 1 )
007327 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007328 cfee      	RJMP _0x1A00A4
                 _0x1A00A5:
                 ; 000D 029E     printDebug("\r\n");
                +
007329 eded     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 49 ) )
00732a e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 49 ) )
00732b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 49 ) )
00732c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 49 ) )
                 	__POINTD1FN _0x1A0000,49
00732d 940e c1f5 	CALL SUBOPT_0x3
                 ; 000D 029F 
                 ; 000D 02A0     return 0;
00732f e0e0      	LDI  R30,LOW(0)
007330 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0066:
007331 8119      	LDD  R17,Y+1
007332 8108      	LDD  R16,Y+0
007333 9666      	ADIW R28,22
007334 9508      	RET
                 ; 000D 02A1 }
                 ;/*============================================================*/
                 ;int sensorSetCurrentSetPoint(int ch,int pnt,unsigned char *buf)
                 ; 000D 02A4 {
                 _sensorSetCurrentSetPoint:
                 ; 000D 02A5     float   val=0;
                 ; 000D 02A6     long viADCbuffer = 0;
                 ; 000D 02A7     int i = 0;
                 ; 000D 02A8     float viVoltUseCaluate = 0.0;
                 ; 000D 02A9     float viRiaseUpVoltValue = 0.0;
                 ; 000D 02AA     const float viZeroSet = 1.667;
                 ; 000D 02AB 
                 ; 000D 02AC     if(operating_config.sensorEnable[ch] != 0x01){
007335 940e d0f8 	CALL SUBOPT_0x24D
007337 e9e8      	LDI  R30,LOW(_0x1A00A6*2)
007338 e4f4      	LDI  R31,HIGH(_0x1A00A6*2)
007339 e060      	LDI  R22,BYTE3(_0x1A00A6*2)
00733a 940e e3a7 	CALL __INITLOCB
00733c 940e ca29 	CALL SUBOPT_0x14C
                 ;	ch -> Y+26
                 ;	pnt -> Y+24
                 ;	*buf -> Y+22
                 ;	val -> Y+18
                 ;	viADCbuffer -> Y+14
                 ;	i -> R16,R17
                 ;	viVoltUseCaluate -> Y+10
                 ;	viRiaseUpVoltValue -> Y+6
                 ;	viZeroSet -> Y+2
                +
00733e ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00733f e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
007340 8daa      	LDD  R26,Y+26
007341 8dbb      	LDD  R27,Y+26+1
007342 940e d029 	CALL SUBOPT_0x22F
007344 f061      	BREQ _0x1A00A7
                 ; 000D 02AD         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d is disable\r\n",ch+1);
                +
007345 ebe7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1035 ) )
007346 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1035 ) )
007347 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1035 ) )
007348 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1035 ) )
                 	__POINTD1FN _0x1A0000,1035
007349 940e d0ff 	CALL SUBOPT_0x24E
00734b 9631      	ADIW R30,1
00734c 940e c800 	CALL SUBOPT_0xE9
                 ; 000D 02AE         return -1;
00734e efef      	LDI  R30,LOW(65535)
00734f efff      	LDI  R31,HIGH(65535)
007350 c161      	RJMP _0x20E0065
                 ; 000D 02AF     }
                 ; 000D 02B0 
                 ; 000D 02B1     if(sensor[ch].status != SENS_NORMAL){
                 _0x1A00A7:
007351 8daa      	LDD  R26,Y+26
007352 8dbb      	LDD  R27,Y+26+1
007353 940e d02e 	CALL SUBOPT_0x230
007355 30e0      	CPI  R30,0
007356 f089      	BREQ _0x1A00A8
                 ; 000D 02B2         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d error(0x%02X)\r\n",ch+1,sensor[ch].status);
                +
007357 efe3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1095 ) )
007358 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1095 ) )
007359 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1095 ) )
00735a e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1095 ) )
                 	__POINTD1FN _0x1A0000,1095
00735b 940e d0ff 	CALL SUBOPT_0x24E
00735d 940e ce99 	CALL SUBOPT_0x201
00735f a1aa      	LDD  R26,Y+34
007360 a1bb      	LDD  R27,Y+34+1
007361 940e d02e 	CALL SUBOPT_0x230
007363 940e d035 	CALL SUBOPT_0x231
                 ; 000D 02B3         return -1;
007365 efef      	LDI  R30,LOW(65535)
007366 efff      	LDI  R31,HIGH(65535)
007367 c14a      	RJMP _0x20E0065
                 ; 000D 02B4     }
                 ; 000D 02B5 
                 ; 000D 02B6     printDebug("<sensorSetCurrentSetPoint> buf: [%d]/[%d][%d][%d][%d][%d]\r\n",
                 _0x1A00A8:
                 ; 000D 02B7                                         buf[0],buf[1],buf[2],buf[3],buf[4],buf[5]);
                +
007368 e3e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1158 ) )
007369 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1158 ) )
00736a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1158 ) )
00736b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1158 ) )
                 	__POINTD1FN _0x1A0000,1158
00736c 940e e324 	CALL __PUTPARD1
00736e 8daa      	LDD  R26,Y+26
00736f 8dbb      	LDD  R27,Y+26+1
007370 91ec      	LD   R30,X
007371 940e c4a6 	CALL SUBOPT_0x65
007373 8dee      	LDD  R30,Y+30
007374 8dff      	LDD  R31,Y+30+1
007375 81e1      	LDD  R30,Z+1
007376 940e c4a6 	CALL SUBOPT_0x65
007378 a1ea      	LDD  R30,Y+34
007379 a1fb      	LDD  R31,Y+34+1
00737a 81e2      	LDD  R30,Z+2
00737b 940e c4a6 	CALL SUBOPT_0x65
00737d a1ee      	LDD  R30,Y+38
00737e a1ff      	LDD  R31,Y+38+1
00737f 81e3      	LDD  R30,Z+3
007380 940e c4a6 	CALL SUBOPT_0x65
007382 a5ea      	LDD  R30,Y+42
007383 a5fb      	LDD  R31,Y+42+1
007384 81e4      	LDD  R30,Z+4
007385 940e c4a6 	CALL SUBOPT_0x65
007387 a5ee      	LDD  R30,Y+46
007388 a5ff      	LDD  R31,Y+46+1
007389 81e5      	LDD  R30,Z+5
00738a 940e c4a6 	CALL SUBOPT_0x65
00738c e188      	LDI  R24,24
00738d 940e 9e86 	CALL _printDebug
00738f 966c      	ADIW R28,28
                 ; 000D 02B8 
                 ; 000D 02B9     val =  (float) (0.0);
007390 e0e0      	LDI  R30,LOW(0)
                +
007391 8bea     +STD Y + 18 , R30
007392 8beb     +STD Y + 18 + 1 , R30
007393 8bec     +STD Y + 18 + 2 , R30
007394 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
                 ; 000D 02BA     val += (float) (buf[1] * 100);
007395 89ee      	LDD  R30,Y+22
007396 89ff      	LDD  R31,Y+22+1
007397 81e1      	LDD  R30,Z+1
007398 e6a4      	LDI  R26,LOW(100)
007399 940e d104 	CALL SUBOPT_0x24F
                 ; 000D 02BB     val += (float) (buf[2] * 10);
00739b 81e2      	LDD  R30,Z+2
00739c e0aa      	LDI  R26,LOW(10)
00739d 940e d104 	CALL SUBOPT_0x24F
                 ; 000D 02BC     val += (float) (buf[3]);
00739f 81e3      	LDD  R30,Z+3
0073a0 27ff      	CLR  R31
0073a1 2766      	CLR  R22
0073a2 2777      	CLR  R23
0073a3 940e e03b 	CALL __CDF1
0073a5 940e d117 	CALL SUBOPT_0x250
                 ; 000D 02BD     val += (float) (buf[4] * 0.1);
0073a7 81e4      	LDD  R30,Z+4
0073a8 940e d124 	CALL SUBOPT_0x251
0073aa 940e c638 	CALL SUBOPT_0x9F
0073ac 940e d117 	CALL SUBOPT_0x250
                 ; 000D 02BE     val += (float) (buf[5] * 0.01);
0073ae 81e5      	LDD  R30,Z+5
0073af 940e d124 	CALL SUBOPT_0x251
                +
0073b1 e0aa     +LDI R26 , LOW ( 0x3C23D70A )
0073b2 edb7     +LDI R27 , HIGH ( 0x3C23D70A )
0073b3 e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
0073b4 e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
0073b5 940e e0c5 	CALL __MULF12
0073b7 940e d12a 	CALL SUBOPT_0x252
0073b9 940e e075 	CALL __ADDF12
0073bb 940e d12f 	CALL SUBOPT_0x253
                 ; 000D 02BF     if(buf[0] == 1){    val *= (float) (-1.0);  }
0073bd 89ae      	LDD  R26,Y+22
0073be 89bf      	LDD  R27,Y+22+1
0073bf 91ac      	LD   R26,X
0073c0 30a1      	CPI  R26,LOW(0x1)
0073c1 f451      	BRNE _0x1A00A9
0073c2 940e d12a 	CALL SUBOPT_0x252
                +
0073c4 e0e0     +LDI R30 , LOW ( 0xBF800000 )
0073c5 e0f0     +LDI R31 , HIGH ( 0xBF800000 )
0073c6 e860     +LDI R22 , BYTE3 ( 0xBF800000 )
0073c7 eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
0073c8 940e e0c5 	CALL __MULF12
0073ca 940e d12f 	CALL SUBOPT_0x253
                 ; 000D 02C0 
                 ; 000D 02C1     printDebug("<sensorSetCurrentSetPoint> sensor %1d, point %1d, set to [%f]",ch+1,pnt,val);
                 _0x1A00A9:
                +
0073cc e6ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1218 ) )
0073cd e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1218 ) )
0073ce e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1218 ) )
0073cf e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1218 ) )
                 	__POINTD1FN _0x1A0000,1218
0073d0 940e d0ff 	CALL SUBOPT_0x24E
0073d2 940e ce99 	CALL SUBOPT_0x201
0073d4 a1e8      	LDD  R30,Y+32
0073d5 a1f9      	LDD  R31,Y+32+1
0073d6 940e d134 	CALL SUBOPT_0x254
0073d8 940e c6d8 	CALL SUBOPT_0xBB
0073da 940e c5b5 	CALL SUBOPT_0x8E
                 ; 000D 02C2 
                 ; 000D 02C3     if(pnt == CALPOINT(1)){
0073dc 8da8      	LDD  R26,Y+24
0073dd 8db9      	LDD  R27,Y+24+1
0073de 36a5      	CPI  R26,LOW(0x65)
0073df e0e0      	LDI  R30,HIGH(0x65)
0073e0 07be      	CPC  R27,R30
0073e1 f011      	BREQ PC+3
0073e2 940c 7424 	JMP _0x1A00AA
                 ; 000D 02C4         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0073e4 940e c325 	CALL SUBOPT_0x2E
0073e6 f021      	BREQ _0x1A00AC
0073e7 940e c325 	CALL SUBOPT_0x2E
0073e9 30e3      	CPI  R30,LOW(0x3)
0073ea f4d1      	BRNE _0x1A00AB
                 _0x1A00AC:
                 ; 000D 02C5 //           viADCbuffer = 0;
                 ; 000D 02C6 //             for(i=0;i<30;i++){
                 ; 000D 02C7 //                viADCbuffer += read_adc(8+ch);
                 ; 000D 02C8 //             }
                 ; 000D 02C9 //
                 ; 000D 02CA //             epADCRef1[ch] = iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 02CB 
                 ; 000D 02CC              viRiaseUpVoltValue = (float)((iUpdateSmoothlyADC(ch))+0.213);
0073eb 8daa      	LDD  R26,Y+26
0073ec 8dbb      	LDD  R27,Y+26+1
0073ed d820      	RCALL _iUpdateSmoothlyADC
                +
0073ee eaac     +LDI R26 , LOW ( 0x3E5A1CAC )
0073ef e1bc     +LDI R27 , HIGH ( 0x3E5A1CAC )
0073f0 e58a     +LDI R24 , BYTE3 ( 0x3E5A1CAC )
0073f1 e39e     +LDI R25 , BYTE4 ( 0x3E5A1CAC )
                 	__GETD2N 0x3E5A1CAC
0073f2 940e e075 	CALL __ADDF12
0073f4 940e c69b 	CALL SUBOPT_0xB0
                 ; 000D 02CD              viVoltUseCaluate = (viRiaseUpVoltValue-viZeroSet);
0073f6 940e d139 	CALL SUBOPT_0x255
0073f8 940e d140 	CALL SUBOPT_0x256
                 ; 000D 02CE              epADCRef1[ch] = iAD595VoltToTemp(viVoltUseCaluate);        //0.213 *2 = 0.426
0073fa 940e d145 	CALL SUBOPT_0x257
0073fc 93ff      	PUSH R31
0073fd 93ef      	PUSH R30
0073fe 940e c42b 	CALL SUBOPT_0x52
007400 940e a2a6 	CALL _iAD595VoltToTemp
007402 91af      	POP  R26
007403 91bf      	POP  R27
007404 c007      	RJMP _0x1A00CE
                 ; 000D 02CF         }else{
                 _0x1A00AB:
                 ; 000D 02D0            epADCRef1[ch]       = adcData[ch];
007405 940e d145 	CALL SUBOPT_0x257
007407 940e d14e 	CALL SUBOPT_0x258
007409 940e c2af 	CALL SUBOPT_0x1B
00740b 01d0      	MOVW R26,R0
                 _0x1A00CE:
00740c 940e e35c 	CALL __EEPROMWRD
                 ; 000D 02D1         }
                 ; 000D 02D2 
                 ; 000D 02D3 
                 ; 000D 02D4 
                 ; 000D 02D5         epTempRef1[ch]      = val;
00740e 8dea      	LDD  R30,Y+26
00740f 8dfb      	LDD  R31,Y+26+1
007410 eeaa      	LDI  R26,LOW(_epTempRef1)
007411 e0b5      	LDI  R27,HIGH(_epTempRef1)
007412 940e d153 	CALL SUBOPT_0x259
                 ; 000D 02D6         //epADCRef1[ch]       = adcData[ch];
                 ; 000D 02D7         epIsPointSet1[ch]   = 1;
007414 52af      	SUBI R26,LOW(-_epIsPointSet1)
007415 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
007416 e0e1      	LDI  R30,LOW(1)
007417 940e d15e 	CALL SUBOPT_0x25A
                 ; 000D 02D8         epIsPointSet2[ch]   = 0;                        // -- reset cal_point 2 -- //
007419 50a2      	SUBI R26,LOW(-_epIsPointSet2)
00741a 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
00741b e0e0      	LDI  R30,LOW(0)
00741c 940e d15e 	CALL SUBOPT_0x25A
                 ; 000D 02D9         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
00741e 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00741f 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007420 e0e0      	LDI  R30,LOW(0)
007421 940e e36c 	CALL __EEPROMWRB
                 ; 000D 02DA     }
                 ; 000D 02DB     else if(pnt == CALPOINT(2)){
007423 c08c      	RJMP _0x1A00AF
                 _0x1A00AA:
007424 8da8      	LDD  R26,Y+24
007425 8db9      	LDD  R27,Y+24+1
007426 36a6      	CPI  R26,LOW(0x66)
007427 e0e0      	LDI  R30,HIGH(0x66)
007428 07be      	CPC  R27,R30
007429 f011      	BREQ PC+3
00742a 940c 746f 	JMP _0x1A00B0
                 ; 000D 02DC 
                 ; 000D 02DD         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00742c 940e c325 	CALL SUBOPT_0x2E
00742e f021      	BREQ _0x1A00B2
00742f 940e c325 	CALL SUBOPT_0x2E
007431 30e3      	CPI  R30,LOW(0x3)
007432 f4c1      	BRNE _0x1A00B1
                 _0x1A00B2:
                 ; 000D 02DE            viADCbuffer = 0;
007433 940e d163 	CALL SUBOPT_0x25B
                 ; 000D 02DF              for(i=0;i<30;i++){
                 _0x1A00B5:
                +
007435 310e     +CPI R16 , LOW ( 30 )
007436 e0e0     +LDI R30 , HIGH ( 30 )
007437 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
007438 f42c      	BRGE _0x1A00B6
                 ; 000D 02E0                 viADCbuffer += read_adc(8+ch);
007439 940e d16b 	CALL SUBOPT_0x25C
                 ; 000D 02E1              }
                +
00743b 5f0f     +SUBI R16 , LOW ( - 1 )
00743c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00743d cff7      	RJMP _0x1A00B5
                 _0x1A00B6:
                 ; 000D 02E2 
                 ; 000D 02E3              epADCRef2[ch] = iAD595ADCToTemp(viADCbuffer,30);
00743e 8dea      	LDD  R30,Y+26
00743f 8dfb      	LDD  R31,Y+26+1
007440 940e d09c 	CALL SUBOPT_0x23F
007442 0fea      	ADD  R30,R26
007443 1ffb      	ADC  R31,R27
007444 93ff      	PUSH R31
007445 93ef      	PUSH R30
007446 940e d17c 	CALL SUBOPT_0x25D
007448 91af      	POP  R26
007449 91bf      	POP  R27
00744a c00b      	RJMP _0x1A00CF
                 ; 000D 02E4         }else{
                 _0x1A00B1:
                 ; 000D 02E5            epADCRef2[ch]       = adcData[ch];
00744b 8dea      	LDD  R30,Y+26
00744c 8dfb      	LDD  R31,Y+26+1
00744d 940e d09c 	CALL SUBOPT_0x23F
00744f 0fea      	ADD  R30,R26
007450 1ffb      	ADC  R31,R27
007451 940e d14e 	CALL SUBOPT_0x258
007453 940e c2af 	CALL SUBOPT_0x1B
007455 01d0      	MOVW R26,R0
                 _0x1A00CF:
007456 940e e35c 	CALL __EEPROMWRD
                 ; 000D 02E6         }
                 ; 000D 02E7 
                 ; 000D 02E8         epTempRef2[ch]      = val;
007458 8dea      	LDD  R30,Y+26
007459 8dfb      	LDD  R31,Y+26+1
00745a 940e d0a8 	CALL SUBOPT_0x241
00745c 0fae      	ADD  R26,R30
00745d 1fbf      	ADC  R27,R31
00745e 940e c77e 	CALL SUBOPT_0xD4
007460 940e e35c 	CALL __EEPROMWRD
                 ; 000D 02E9         //epADCRef2[ch]       = adcData[ch];
                 ; 000D 02EA         epIsPointSet2[ch]   = 1;
007462 8daa      	LDD  R26,Y+26
007463 8dbb      	LDD  R27,Y+26+1
007464 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007465 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007466 e0e1      	LDI  R30,LOW(1)
007467 940e d15e 	CALL SUBOPT_0x25A
                 ; 000D 02EB         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
007469 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00746a 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
00746b e0e0      	LDI  R30,LOW(0)
00746c 940e e36c 	CALL __EEPROMWRB
                 ; 000D 02EC     }
                 ; 000D 02ED     else if(pnt == CALPOINT(3)){
00746e c041      	RJMP _0x1A00B8
                 _0x1A00B0:
00746f 8da8      	LDD  R26,Y+24
007470 8db9      	LDD  R27,Y+24+1
007471 36a7      	CPI  R26,LOW(0x67)
007472 e0e0      	LDI  R30,HIGH(0x67)
007473 07be      	CPC  R27,R30
007474 f581      	BRNE _0x1A00B9
                 ; 000D 02EE         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007475 940e c325 	CALL SUBOPT_0x2E
007477 f021      	BREQ _0x1A00BB
007478 940e c325 	CALL SUBOPT_0x2E
00747a 30e3      	CPI  R30,LOW(0x3)
00747b f4a1      	BRNE _0x1A00BA
                 _0x1A00BB:
                 ; 000D 02EF            viADCbuffer = 0;
00747c 940e d163 	CALL SUBOPT_0x25B
                 ; 000D 02F0              for(i=0;i<30;i++){
                 _0x1A00BE:
                +
00747e 310e     +CPI R16 , LOW ( 30 )
00747f e0e0     +LDI R30 , HIGH ( 30 )
007480 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
007481 f42c      	BRGE _0x1A00BF
                 ; 000D 02F1                 viADCbuffer += read_adc(8+ch);
007482 940e d16b 	CALL SUBOPT_0x25C
                 ; 000D 02F2              }
                +
007484 5f0f     +SUBI R16 , LOW ( - 1 )
007485 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007486 cff7      	RJMP _0x1A00BE
                 _0x1A00BF:
                 ; 000D 02F3 
                 ; 000D 02F4              epADCRef3[ch] = iAD595ADCToTemp(viADCbuffer,30);
007487 940e d184 	CALL SUBOPT_0x25E
007489 93ff      	PUSH R31
00748a 93ef      	PUSH R30
00748b 940e d17c 	CALL SUBOPT_0x25D
00748d 91af      	POP  R26
00748e 91bf      	POP  R27
00748f c007      	RJMP _0x1A00D0
                 ; 000D 02F5         }else{
                 _0x1A00BA:
                 ; 000D 02F6            epADCRef3[ch]       = adcData[ch];
007490 940e d184 	CALL SUBOPT_0x25E
007492 940e d14e 	CALL SUBOPT_0x258
007494 940e c2af 	CALL SUBOPT_0x1B
007496 01d0      	MOVW R26,R0
                 _0x1A00D0:
007497 940e e35c 	CALL __EEPROMWRD
                 ; 000D 02F7         }
                 ; 000D 02F8 
                 ; 000D 02F9         epTempRef3[ch]      = val;
007499 8dea      	LDD  R30,Y+26
00749a 8dfb      	LDD  R31,Y+26+1
00749b e4a4      	LDI  R26,LOW(_epTempRef3)
00749c e0b6      	LDI  R27,HIGH(_epTempRef3)
00749d 940e d153 	CALL SUBOPT_0x259
                 ; 000D 02FA         //epADCRef3[ch]       = adcData[ch];
                 ; 000D 02FB         epIsPointSet3[ch]   = 1;
00749f 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0074a0 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0074a1 e0e1      	LDI  R30,LOW(1)
0074a2 940e e36c 	CALL __EEPROMWRB
                 ; 000D 02FC     }
                 ; 000D 02FD     else{
0074a4 c00b      	RJMP _0x1A00C1
                 _0x1A00B9:
                 ; 000D 02FE         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
0074a5 eeeb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 831 ) )
0074a6 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 831 ) )
0074a7 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 831 ) )
0074a8 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 831 ) )
                 	__POINTD1FN _0x1A0000,831
0074a9 940e c823 	CALL SUBOPT_0xF1
0074ab 940e c800 	CALL SUBOPT_0xE9
                 ; 000D 02FF         return -1;
0074ad efef      	LDI  R30,LOW(65535)
0074ae efff      	LDI  R31,HIGH(65535)
0074af c002      	RJMP _0x20E0065
                 ; 000D 0300     }
                 _0x1A00C1:
                 _0x1A00B8:
                 _0x1A00AF:
                 ; 000D 0301 
                 ; 000D 0302     return 0;
0074b0 e0e0      	LDI  R30,LOW(0)
0074b1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0065:
0074b2 8119      	LDD  R17,Y+1
0074b3 8108      	LDD  R16,Y+0
0074b4 966c      	ADIW R28,28
0074b5 9508      	RET
                 ; 000D 0303 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
0074b6 940e e329 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
0074b8 91a0 15d2 	LDS  R26,_dataQ_len
0074ba 91b0 15d3 	LDS  R27,_dataQ_len+1
0074bc 971a      	SBIW R26,10
0074bd f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
0074be efef      	LDI  R30,LOW(65535)
0074bf efff      	LDI  R31,HIGH(65535)
0074c0 940c 789b 	JMP  _0x20E005B
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
0074c2 940e d18d 	CALL SUBOPT_0x25F
0074c4 59e2      	SUBI R30,LOW(-_dataQ)
0074c5 4efa      	SBCI R31,HIGH(-_dataQ)
0074c6 940e d193 	CALL SUBOPT_0x260
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
0074c8 940e d18d 	CALL SUBOPT_0x25F
                +
0074ca 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
0074cb 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
0074cc 81ac      	LDD  R26,Y+4
0074cd 81bd      	LDD  R27,Y+4+1
0074ce 83a0      	STD  Z+0,R26
0074cf 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
0074d0 940e d18d 	CALL SUBOPT_0x25F
                +
0074d2 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
0074d3 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
0074d4 940e c5ab 	CALL SUBOPT_0x8C
0074d6 940e d198 	CALL SUBOPT_0x261
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
0074d8 01d5      	MOVW R26,R10
0074d9 9611      	ADIW R26,1
0074da 940e d19b 	CALL SUBOPT_0x262
0074dc 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
0074dd eda2      	LDI  R26,LOW(_dataQ_len)
0074de e1b5      	LDI  R27,HIGH(_dataQ_len)
0074df 940e c549 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
0074e1 e0e0      	LDI  R30,LOW(0)
0074e2 e0f0      	LDI  R31,HIGH(0)
0074e3 940c 789b 	JMP  _0x20E005B
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
0074e5 93ba      	ST   -Y,R27
0074e6 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
0074e7 91e0 15d2 	LDS  R30,_dataQ_len
0074e9 91f0 15d3 	LDS  R31,_dataQ_len+1
0074eb 9730      	SBIW R30,0
0074ec f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
0074ed efef      	LDI  R30,LOW(65535)
0074ee efff      	LDI  R31,HIGH(65535)
0074ef 940c 787e 	JMP  _0x20E005C
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
0074f1 940e d1a0 	CALL SUBOPT_0x263
0074f3 59e2      	SUBI R30,LOW(-_dataQ)
0074f4 4efa      	SBCI R31,HIGH(-_dataQ)
0074f5 940e d1a6 	CALL SUBOPT_0x264
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
0074f7 940e d1a0 	CALL SUBOPT_0x263
                +
0074f9 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
0074fa 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
0074fb 01df      	MOVW R26,R30
0074fc 940e e2f0 	CALL __GETW1P
0074fe 81aa      	LDD  R26,Y+2
0074ff 81bb      	LDD  R27,Y+2+1
007500 93ed      	ST   X+,R30
007501 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
007502 940e d1a0 	CALL SUBOPT_0x263
                +
007504 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007505 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007506 01df      	MOVW R26,R30
007507 940e e2f4 	CALL __GETD1P
007509 81a8      	LD   R26,Y
00750a 81b9      	LDD  R27,Y+1
00750b 940e e2ff 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
00750d 01d6      	MOVW R26,R12
00750e 9611      	ADIW R26,1
00750f 940e d19b 	CALL SUBOPT_0x262
007511 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
007512 eda2      	LDI  R26,LOW(_dataQ_len)
007513 e1b5      	LDI  R27,HIGH(_dataQ_len)
007514 940c 7877 	JMP  _0x20E005E
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
007516 931a      	ST   -Y,R17
                 ;	current_status -> R17
007517 e010      	LDI  R17,0
007518 91e0 0103 	LDS  R30,259
00751a 78e0      	ANDI R30,LOW(0x80)
00751b e0f0      	LDI  R31,0
00751c 940e e1d2 	CALL __ASRW3
00751e 940e e1d0 	CALL __ASRW4
007520 9730      	SBIW R30,0
007521 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
007522 e0e0      	LDI  R30,LOW(0)
007523 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
007525 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
007527 e6e6     +LDI R30 , LOW ( 0x40866666 )
007528 e6f6     +LDI R31 , HIGH ( 0x40866666 )
007529 e866     +LDI R22 , BYTE3 ( 0x40866666 )
00752a e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
00752b 940e d1ae 	CALL SUBOPT_0x265
                 ; 000F 0035         return 0;
00752d c041      	RJMP _0x20E0064
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
00752e e0e1      	LDI  R30,LOW(1)
00752f 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
007531 940e 4475 	CALL _readBattery
007533 940e d1ae 	CALL SUBOPT_0x265
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
007535 940e d1b7 	CALL SUBOPT_0x266
007537 940e e37d 	CALL __CPD10
007539 f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
00753a e0e0      	LDI  R30,LOW(0)
00753b 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
00753d c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
00753e 940e d1b7 	CALL SUBOPT_0x266
007540 940e c31c 	CALL SUBOPT_0x2D
007542 940e e158 	CALL __CMPF12
007544 f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
007545 e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
007546 c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
007547 e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
007548 91a0 15d9 	LDS  R26,_lastCheck_S00F0001000
00754a 171a      	CP   R17,R26
00754b f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
00754c e0e0      	LDI  R30,LOW(0)
00754d 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
00754f 9310 15d9 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
007551 91e0 15d8 	LDS  R30,_t_flag_S00F0001000
007553 30e0      	CPI  R30,0
007554 f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
007555 ede4      	LDI  R30,LOW(_t_S00F0001000)
007556 e1f5      	LDI  R31,HIGH(_t_S00F0001000)
007557 940e c2f8 	CALL SUBOPT_0x27
                 ; 000F 0053                 t_flag              = 1;
007559 e0e1      	LDI  R30,LOW(1)
00755a c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
00755b 91a0 15d4 	LDS  R26,_t_S00F0001000
00755d 91b0 15d5 	LDS  R27,_t_S00F0001000+1
00755f 9180 15d6 	LDS  R24,_t_S00F0001000+2
007561 9190 15d7 	LDS  R25,_t_S00F0001000+3
007563 940e 41b4 	CALL _TIMER_checkTimerExceed
007565 9730      	SBIW R30,0
007566 f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
007567 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
007569 e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
00756a 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
00756c e0e1      	LDI  R30,LOW(1)
00756d e0f0      	LDI  R31,HIGH(1)
00756e c002      	RJMP _0x20E0063
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0064:
00756f e0e0      	LDI  R30,LOW(0)
007570 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0063:
007571 9119      	LD   R17,Y+
007572 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
007573 931a      	ST   -Y,R17
007574 930a      	ST   -Y,R16
                 ;	res -> R16,R17
007575 91e0 0100 	LDS  R30,256
007577 940e d1c0 	CALL SUBOPT_0x267
007579 9730      	SBIW R30,0
00757a f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
00757b e0e1      	LDI  R30,LOW(1)
00757c 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
00757e efef      	LDI  R30,LOW(255)
00757f 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
007581 e0e0      	LDI  R30,LOW(0)
007582 93e0 1421 	STS  _commLostTimer,R30
007584 93e0 1422 	STS  _commLostTimer+1,R30
007586 93e0 1423 	STS  _commLostTimer+2,R30
007588 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
00758a e0e1      	LDI  R30,LOW(1)
00758b e0f0      	LDI  R31,HIGH(1)
00758c c047      	RJMP _0x20E0062
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
00758d e0e0      	LDI  R30,LOW(0)
00758e 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
007590 940e cb1b 	CALL SUBOPT_0x170
007592 940e c37d 	CALL SUBOPT_0x3A
007594 f029      	BREQ _0x1E0013
007595 940e cb1b 	CALL SUBOPT_0x170
007597 940e e389 	CALL __CPD02
007599 f409      	BRNE _0x1E0014
                 _0x1E0013:
00759a c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
00759b ebe8     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
00759c e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
00759d e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
00759e e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
00759f 940e cb2b 	CALL SUBOPT_0x172
0075a1 940e cb2b 	CALL SUBOPT_0x172
0075a3 940e c2ce 	CALL SUBOPT_0x21
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
0075a5 940e cb1b 	CALL SUBOPT_0x170
0075a7 940e 41b4 	CALL _TIMER_checkTimerExceed
0075a9 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
0075aa 2311      	TST  R17
0075ab f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
0075ac efef      	LDI  R30,LOW(255)
0075ad 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
0075af e0e0      	LDI  R30,LOW(0)
0075b0 e0f0      	LDI  R31,HIGH(0)
0075b1 c022      	RJMP _0x20E0062
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
0075b2 2e00      	MOV  R0,R16
0075b3 2a01      	OR   R0,R17
0075b4 f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
0075b5 91a0 1480 	LDS  R26,_serverCommStatus
0075b7 30a2      	CPI  R26,LOW(0x2)
0075b8 f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
0075b9 eeec     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
0075ba e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
0075bb e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
0075bc e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
0075bd 940e c1f5 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
0075bf e0e2      	LDI  R30,LOW(2)
0075c0 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
0075c2 e0e1      	LDI  R30,LOW(1)
0075c3 e0f0      	LDI  R31,HIGH(1)
0075c4 c00f      	RJMP _0x20E0062
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
0075c5 91e0 1480 	LDS  R30,_serverCommStatus
0075c7 30e0      	CPI  R30,0
0075c8 f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
0075c9 e1e0     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
0075ca e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
0075cb e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
0075cc e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
0075cd 940e c1f5 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
0075cf e0e0      	LDI  R30,LOW(0)
0075d0 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
0075d2 e0e0      	LDI  R30,LOW(0)
0075d3 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0062:
0075d4 9109      	LD   R16,Y+
0075d5 9119      	LD   R17,Y+
0075d6 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
0075d7 940e d1c5 	CALL SUBOPT_0x268
0075d9 f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
0075da e0e2      	LDI  R30,LOW(2)
0075db c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
0075dc 940e c300 	CALL SUBOPT_0x28
                +
0075de e0e0     +LDI R30 , LOW ( 0x400 )
0075df e0f4     +LDI R31 , HIGH ( 0x400 )
0075e0 e060     +LDI R22 , BYTE3 ( 0x400 )
0075e1 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
0075e2 940e e278 	CALL __DIVD21U
0075e4 01df      	MOVW R26,R30
                +
0075e5 91e0 1375+LDS R30 , _env_config + ( 16 )
0075e7 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
0075e9 17ae      	CP   R26,R30
0075ea 07bf      	CPC  R27,R31
0075eb f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
0075ec e0e1      	LDI  R30,LOW(1)
0075ed c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
0075ee e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
0075ef 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
0075f1 30e0      	CPI  R30,0
0075f2 f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
0075f3 e0e1      	LDI  R30,LOW(1)
0075f4 e0f0      	LDI  R31,HIGH(1)
0075f5 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
0075f6 c1aa      	RJMP _0x20E005F
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
0075f7 93ba      	ST   -Y,R27
0075f8 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
0075f9 81a9      	LDD  R26,Y+1
0075fa 23aa      	TST  R26
0075fb f022      	BRMI _0x1E0022
0075fc 81a8      	LD   R26,Y
0075fd 81b9      	LDD  R27,Y+1
0075fe 9715      	SBIW R26,5
0075ff f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
007600 e3e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
007601 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
007602 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
007603 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
007604 940e c986 	CALL SUBOPT_0x12E
007606 940e c800 	CALL SUBOPT_0xE9
                 ; 000F 00B1         return 0;
007608 e0e0      	LDI  R30,LOW(0)
007609 e0f0      	LDI  R31,HIGH(0)
00760a c01d      	RJMP _0x20E0061
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
00760b 940e d1d0 	CALL SUBOPT_0x269
                +
00760d 2f7e     +MOV R23 , R30
00760e 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
00760f 81a8      	LD   R26,Y
007610 81b9      	LDD  R27,Y+1
007611 940e d02e 	CALL SUBOPT_0x230
                +
007613 2fa7     +MOV R26 , R23
007614 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
007615 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007616 940e d1d0 	CALL SUBOPT_0x269
007618 81a0      	LD   R26,Z
007619 3faf      	CPI  R26,LOW(0xFF)
00761a f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
00761b e0e0      	LDI  R30,LOW(0)
00761c e0f0      	LDI  R31,HIGH(0)
00761d c00a      	RJMP _0x20E0061
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
00761e 940e d1d0 	CALL SUBOPT_0x269
007620 81e0      	LD   R30,Z
007621 30e0      	CPI  R30,0
007622 f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
007623 e0e1      	LDI  R30,LOW(1)
007624 e0f0      	LDI  R31,HIGH(1)
007625 c002      	RJMP _0x20E0061
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
007626 e0e0      	LDI  R30,LOW(0)
007627 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0061:
007628 9622      	ADIW R28,2
007629 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
00762a 940e c566 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
00762c e000     +LDI R16 , LOW ( 0 )
00762d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00762e 81ab      	LDD  R26,Y+3
00762f 23aa      	TST  R26
007630 f022      	BRMI _0x1E0029
007631 81aa      	LDD  R26,Y+2
007632 81bb      	LDD  R27,Y+2+1
007633 9715      	SBIW R26,5
007634 f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
007635 e6e7     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
007636 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
007637 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
007638 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
007639 940e c89b 	CALL SUBOPT_0x104
00763b 940e c800 	CALL SUBOPT_0xE9
                 ; 000F 00CC         return 0;
00763d e0e0      	LDI  R30,LOW(0)
00763e e0f0      	LDI  R31,HIGH(0)
00763f c0cf      	RJMP _0x20E0060
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
007640 940e c937 	CALL SUBOPT_0x11F
                +
007642 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007643 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007644 81e0      	LD   R30,Z
007645 30e0      	CPI  R30,0
007646 f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
007647 e0e0      	LDI  R30,LOW(0)
007648 e0f0      	LDI  R31,HIGH(0)
007649 c0c5      	RJMP _0x20E0060
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
00764a 940e c937 	CALL SUBOPT_0x11F
00764c 940e c2c8 	CALL SUBOPT_0x20
00764e 937f      	PUSH R23
00764f 936f      	PUSH R22
007650 93ff      	PUSH R31
007651 93ef      	PUSH R30
007652 940e c8c3 	CALL SUBOPT_0x10C
                +
007654 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
007655 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
007656 01df      	MOVW R26,R30
007657 940e e2f4 	CALL __GETD1P
007659 91af      	POP  R26
00765a 91bf      	POP  R27
00765b 918f      	POP  R24
00765c 919f      	POP  R25
00765d 940e e158 	CALL __CMPF12
00765f f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
007660 940e d1d5 	CALL SUBOPT_0x26A
007662 81e0      	LD   R30,Z
007663 30e0      	CPI  R30,0
007664 f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
007665 940e d1da 	CALL SUBOPT_0x26B
007667 940e c2ba 	CALL SUBOPT_0x1D
007669 81ac      	LDD  R26,Y+4
00766a 81bd      	LDD  R27,Y+4+1
00766b 940e d1e1 	CALL SUBOPT_0x26C
00766d 940e c2c4 	CALL SUBOPT_0x1F
                 ; 000F 00D9             flag_lower[ch] = 1;
00766f 940e d1d5 	CALL SUBOPT_0x26A
007671 e0a1      	LDI  R26,LOW(1)
007672 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
007673 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
007674 940e d1da 	CALL SUBOPT_0x26B
007676 940e c2af 	CALL SUBOPT_0x1B
007678 940e c2b4 	CALL SUBOPT_0x1C
00767a f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
00767b 940e d1e9 	CALL SUBOPT_0x26D
00767d 60e1      	ORI  R30,1
00767e 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
00767f 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
007680 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
007681 940e d1d5 	CALL SUBOPT_0x26A
007683 e0a0      	LDI  R26,LOW(0)
007684 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
007685 940e d1e9 	CALL SUBOPT_0x26D
007687 7fee      	ANDI R30,0xFE
007688 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
007689 940e c937 	CALL SUBOPT_0x11F
00768b 940e c2c8 	CALL SUBOPT_0x20
00768d 937f      	PUSH R23
00768e 936f      	PUSH R22
00768f 93ff      	PUSH R31
007690 93ef      	PUSH R30
007691 940e c8c3 	CALL SUBOPT_0x10C
                +
007693 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
007694 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
007695 01df      	MOVW R26,R30
007696 940e e2f4 	CALL __GETD1P
007698 91af      	POP  R26
007699 91bf      	POP  R27
00769a 918f      	POP  R24
00769b 919f      	POP  R25
00769c 940e e158 	CALL __CMPF12
00769e f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
00769f 940e d1e9 	CALL SUBOPT_0x26D
0076a1 60e2      	ORI  R30,2
0076a2 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
0076a3 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
0076a4 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
0076a5 940e d1e9 	CALL SUBOPT_0x26D
0076a7 7fed      	ANDI R30,0xFD
0076a8 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
0076a9 940e c937 	CALL SUBOPT_0x11F
0076ab 940e c2c8 	CALL SUBOPT_0x20
0076ad 937f      	PUSH R23
0076ae 936f      	PUSH R22
0076af 93ff      	PUSH R31
0076b0 93ef      	PUSH R30
0076b1 940e c8c3 	CALL SUBOPT_0x10C
                +
0076b3 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
0076b4 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
0076b5 01df      	MOVW R26,R30
0076b6 940e e2f4 	CALL __GETD1P
0076b8 91af      	POP  R26
0076b9 91bf      	POP  R27
0076ba 918f      	POP  R24
0076bb 919f      	POP  R25
0076bc 940e e158 	CALL __CMPF12
0076be f009      	BREQ PC+2
0076bf f410      	BRCC PC+3
0076c0 940c 76e3 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
0076c2 940e d1ef 	CALL SUBOPT_0x26E
0076c4 81e0      	LD   R30,Z
0076c5 30e0      	CPI  R30,0
0076c6 f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
0076c7 940e d1da 	CALL SUBOPT_0x26B
0076c9 940e c2ba 	CALL SUBOPT_0x1D
0076cb 81ac      	LDD  R26,Y+4
0076cc 81bd      	LDD  R27,Y+4+1
0076cd 940e d1f4 	CALL SUBOPT_0x26F
0076cf 940e c2c4 	CALL SUBOPT_0x1F
                 ; 000F 0101             flag_upper[ch] = 1;
0076d1 940e d1ef 	CALL SUBOPT_0x26E
0076d3 e0a1      	LDI  R26,LOW(1)
0076d4 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
0076d5 c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
0076d6 940e d1da 	CALL SUBOPT_0x26B
0076d8 940e c2af 	CALL SUBOPT_0x1B
0076da 940e c2b4 	CALL SUBOPT_0x1C
0076dc f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
0076dd 940e d1e9 	CALL SUBOPT_0x26D
0076df 60e4      	ORI  R30,4
0076e0 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
0076e1 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
0076e2 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
0076e3 940e d1ef 	CALL SUBOPT_0x26E
0076e5 e0a0      	LDI  R26,LOW(0)
0076e6 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
0076e7 940e d1e9 	CALL SUBOPT_0x26D
0076e9 7feb      	ANDI R30,0xFB
0076ea 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
0076eb 940e c937 	CALL SUBOPT_0x11F
0076ed 940e c2c8 	CALL SUBOPT_0x20
0076ef 937f      	PUSH R23
0076f0 936f      	PUSH R22
0076f1 93ff      	PUSH R31
0076f2 93ef      	PUSH R30
0076f3 940e c8c3 	CALL SUBOPT_0x10C
                +
0076f5 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
0076f6 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
0076f7 01df      	MOVW R26,R30
0076f8 940e e2f4 	CALL __GETD1P
0076fa 91af      	POP  R26
0076fb 91bf      	POP  R27
0076fc 918f      	POP  R24
0076fd 919f      	POP  R25
0076fe 940e e158 	CALL __CMPF12
007700 f009      	BREQ PC+2
007701 f410      	BRCC PC+3
007702 940c 770a 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
007704 940e d1e9 	CALL SUBOPT_0x26D
007706 60e8      	ORI  R30,8
007707 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
007708 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
007709 c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
00770a 940e d1e9 	CALL SUBOPT_0x26D
00770c 7fe7      	ANDI R30,0XF7
00770d 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
00770e 01f8      	MOVW R30,R16
                 _0x20E0060:
00770f 8119      	LDD  R17,Y+1
007710 8108      	LDD  R16,Y+0
007711 9624      	ADIW R28,4
007712 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
007713 940e e399 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
007715 ef1f      	LDI  R17,255
007716 940e c1e1 	CALL SUBOPT_0x0
                +
007718 e020     +LDI R18 , LOW ( 0 )
007719 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
00771a 3022     +CPI R18 , LOW ( 2 )
00771b e0e0     +LDI R30 , HIGH ( 2 )
00771c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00771d f014      	BRLT PC+3
00771e 940c 778b 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
007720 940e c27d 	CALL SUBOPT_0x15
007722 81a0      	LD   R26,Z
007723 30a1      	CPI  R26,LOW(0x1)
007724 f011      	BREQ PC+3
007725 940c 7788 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
007727 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
007728 9730      	SBIW R30,0
007729 f441      	BRNE _0x1E0042
00772a 91e0 0103 	LDS  R30,259
00772c 940e d1c0 	CALL SUBOPT_0x267
00772e 940e e215 	CALL __LNEGW1
007730 2f1e      	MOV  R17,R30
007731 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
007732 30e1      	CPI  R30,LOW(0x1)
007733 e0a0      	LDI  R26,HIGH(0x1)
007734 07fa      	CPC  R31,R26
007735 f451      	BRNE _0x1E0044
007736 91e0 0103 	LDS  R30,259
007738 70e8      	ANDI R30,LOW(0x8)
007739 e0f0      	LDI  R31,0
00773a 940e e1d2 	CALL __ASRW3
00773c 940e e215 	CALL __LNEGW1
00773e 2f1e      	MOV  R17,R30
00773f c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
007740 eae4     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
007741 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
007742 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
007743 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
007744 940e c263 	CALL SUBOPT_0x11
007746 940e c26b 	CALL SUBOPT_0x12
007748 e0e0      	LDI  R30,LOW(0)
007749 e0f0      	LDI  R31,HIGH(0)
00774a 940e e3a0 	CALL __LOADLOCR6
00774c c131      	RJMP _0x20E005C
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
00774d e0a0      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
00774e e1b6      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
00774f 0fa2      	ADD  R26,R18
007750 1fb3      	ADC  R27,R19
007751 91ec      	LD   R30,X
007752 17e1      	CP   R30,R17
007753 f081      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
007754 01f9      	MOVW R30,R18
007755 efa8      	LDI  R26,LOW(_t_S00F0006000)
007756 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
007757 940e d1fc 	CALL SUBOPT_0x270
                +
007759 e0a1     +LDI R26 , LOW ( 0x1 )
00775a e0b0     +LDI R27 , HIGH ( 0x1 )
00775b e080     +LDI R24 , BYTE3 ( 0x1 )
00775c e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
00775d 940e 41ca 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
00775f 01f9      	MOVW R30,R18
007760 50e0      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
007761 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
007762 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
007763 c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
007764 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
007765 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
007766 940e c255 	CALL SUBOPT_0xF
007768 f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
007769 01f9      	MOVW R30,R18
00776a efa8      	LDI  R26,LOW(_t_S00F0006000)
00776b e1b5      	LDI  R27,HIGH(_t_S00F0006000)
00776c 940e d200 	CALL SUBOPT_0x271
00776e 940e c2b4 	CALL SUBOPT_0x1C
007770 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
007771 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
007772 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
007773 0fa2      	ADD  R26,R18
007774 1fb3      	ADC  R27,R19
007775 e0e1      	LDI  R30,LOW(1)
007776 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
007777 3010      	CPI  R17,0
007778 f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
007779 940e c30f 	CALL SUBOPT_0x2A
00777b e0e1      	LDI  R30,LOW(1)
00777c c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
00777d 940e c30f 	CALL SUBOPT_0x2A
00777f e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
007780 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
007781 5f4f     +SUBI R20 , LOW ( - 1 )
007782 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
007783 c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
007784 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
007785 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
007786 940e c270 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
007788 5f2f     +SUBI R18 , LOW ( - 1 )
007789 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00778a cf8f      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
00778b 01fa      	MOVW R30,R20
00778c 940e e3a0 	CALL __LOADLOCR6
00778e c0ef      	RJMP _0x20E005C
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
00778f 91e0 1434 	LDS  R30,_d_out
007791 30e0      	CPI  R30,0
007792 f011      	BREQ _0x1E004C
007793 e0e1      	LDI  R30,LOW(1)
007794 c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
007795 e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
007796 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
007798 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
00779a 30e0      	CPI  R30,0
00779b f011      	BREQ _0x1E004E
00779c e0e1      	LDI  R30,LOW(1)
00779d c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
00779e e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
00779f 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E005F:
0077a1 e0e0      	LDI  R30,LOW(0)
0077a2 e0f0      	LDI  R31,HIGH(0)
0077a3 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
0077a4 940e c566 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
0077a6 e000     +LDI R16 , LOW ( 0 )
0077a7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0077a8 81aa      	LDD  R26,Y+2
0077a9 81bb      	LDD  R27,Y+2+1
0077aa 940e c8ed 	CALL SUBOPT_0x113
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
0077ac 940e 52fc 	CALL _isDeviceConfig
0077ae 9730      	SBIW R30,0
0077af f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
0077b0 81aa      	LDD  R26,Y+2
0077b1 81bb      	LDD  R27,Y+2+1
0077b2 91ed      	LD   R30,X+
0077b3 91fd      	LD   R31,X+
0077b4 68f0      	ORI  R31,HIGH(0x8000)
0077b5 c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
0077b6 81aa      	LDD  R26,Y+2
0077b7 81bb      	LDD  R27,Y+2+1
0077b8 91ed      	LD   R30,X+
0077b9 91fd      	LD   R31,X+
0077ba 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
0077bb 93fe      	ST   -X,R31
0077bc 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
0077bd 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0077bf 30e0      	CPI  R30,0
0077c0 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
0077c1 81aa      	LDD  R26,Y+2
0077c2 81bb      	LDD  R27,Y+2+1
0077c3 91ed      	LD   R30,X+
0077c4 91fd      	LD   R31,X+
0077c5 64f0      	ORI  R31,HIGH(0x4000)
0077c6 c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
0077c7 81aa      	LDD  R26,Y+2
0077c8 81bb      	LDD  R27,Y+2+1
0077c9 91ed      	LD   R30,X+
0077ca 91fd      	LD   R31,X+
0077cb 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
0077cc 93fe      	ST   -X,R31
0077cd 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
0077ce 91a0 11b6 	LDS  R26,_operating_config
0077d0 31a0      	CPI  R26,LOW(0x10)
0077d1 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
0077d2 81aa      	LDD  R26,Y+2
0077d3 81bb      	LDD  R27,Y+2+1
0077d4 91ed      	LD   R30,X+
0077d5 91fd      	LD   R31,X+
0077d6 60f8      	ORI  R31,HIGH(0x800)
0077d7 c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
0077d8 81aa      	LDD  R26,Y+2
0077d9 81bb      	LDD  R27,Y+2+1
0077da 91ed      	LD   R30,X+
0077db 91fd      	LD   R31,X+
0077dc 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
0077dd 93fe      	ST   -X,R31
0077de 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
0077df 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0077e1 30e0      	CPI  R30,0
0077e2 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
0077e3 81aa      	LDD  R26,Y+2
0077e4 81bb      	LDD  R27,Y+2+1
0077e5 91ed      	LD   R30,X+
0077e6 91fd      	LD   R31,X+
0077e7 60f2      	ORI  R31,HIGH(0x200)
0077e8 c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
0077e9 81aa      	LDD  R26,Y+2
0077ea 81bb      	LDD  R27,Y+2+1
0077eb 91ed      	LD   R30,X+
0077ec 91fd      	LD   R31,X+
0077ed 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
0077ee 93fe      	ST   -X,R31
0077ef 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0077f0 e000     +LDI R16 , LOW ( 0 )
0077f1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
0077f2 3005     +CPI R16 , LOW ( 5 )
0077f3 e0e0     +LDI R30 , HIGH ( 5 )
0077f4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0077f5 f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
0077f6 940e d204 	CALL SUBOPT_0x272
0077f8 f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
0077f9 940e d20b 	CALL SUBOPT_0x273
0077fb 2be6      	OR   R30,R22
0077fc 2bf7      	OR   R31,R23
0077fd c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
0077fe 940e d20b 	CALL SUBOPT_0x273
007800 95e0      	COM  R30
007801 95f0      	COM  R31
007802 23e6      	AND  R30,R22
007803 23f7      	AND  R31,R23
                 _0x1E0067:
007804 01dc      	MOVW R26,R24
007805 93ed      	ST   X+,R30
007806 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
007807 5f0f     +SUBI R16 , LOW ( - 1 )
007808 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007809 cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
00780a ede1     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
00780b e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
00780c e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
00780d e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
00780e 940e c9f4 	CALL SUBOPT_0x143
007810 940e c2bf 	CALL SUBOPT_0x1E
007812 940e cbcf 	CALL SUBOPT_0x18A
                 ; 000F 0191 
                 ; 000F 0192     return 0;
007814 940e c788 	CALL SUBOPT_0xD6
007816 940c 7d90 	JMP  _0x20E0057
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
007818 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
007819 91a0 1680 	LDS  R26,_eventQ_len
00781b 91b0 1681 	LDS  R27,_eventQ_len+1
00781d 9754      	SBIW R26,20
00781e f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
00781f efef      	LDI  R30,LOW(65535)
007820 efff      	LDI  R31,HIGH(65535)
007821 c05c      	RJMP _0x20E005C
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
007822 940e d219 	CALL SUBOPT_0x274
007824 5fec      	SUBI R30,LOW(-_eventQ)
007825 4ef9      	SBCI R31,HIGH(-_eventQ)
007826 940e c6b1 	CALL SUBOPT_0xB4
007828 940e d198 	CALL SUBOPT_0x261
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
00782a 940e d219 	CALL SUBOPT_0x274
                +
00782c 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
00782d 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
00782e 81a9      	LDD  R26,Y+1
00782f 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
007830 940e d219 	CALL SUBOPT_0x274
                +
007832 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
007833 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
007834 81a8      	LD   R26,Y
007835 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
007836 91a0 167c 	LDS  R26,_last_wr_eventQ
007838 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00783a 9611      	ADIW R26,1
00783b e1e4      	LDI  R30,LOW(20)
00783c e0f0      	LDI  R31,HIGH(20)
00783d 940e e2b1 	CALL __MODW21
00783f 93e0 167c 	STS  _last_wr_eventQ,R30
007841 93f0 167d 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
007843 e8a0      	LDI  R26,LOW(_eventQ_len)
007844 e1b6      	LDI  R27,HIGH(_eventQ_len)
007845 91ed      	LD   R30,X+
007846 91fd      	LD   R31,X+
007847 9631      	ADIW R30,1
007848 c031      	RJMP _0x20E005D
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
007849 93ba      	ST   -Y,R27
00784a 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
00784b 91e0 1680 	LDS  R30,_eventQ_len
00784d 91f0 1681 	LDS  R31,_eventQ_len+1
00784f 9730      	SBIW R30,0
007850 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
007851 efef      	LDI  R30,LOW(65535)
007852 efff      	LDI  R31,HIGH(65535)
007853 c02a      	RJMP _0x20E005C
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
007854 940e d221 	CALL SUBOPT_0x275
007856 5fec      	SUBI R30,LOW(-_eventQ)
007857 4ef9      	SBCI R31,HIGH(-_eventQ)
007858 940e d1a6 	CALL SUBOPT_0x264
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
00785a 940e d221 	CALL SUBOPT_0x275
                +
00785c 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
00785d 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
00785e 81e0      	LD   R30,Z
00785f 81aa      	LDD  R26,Y+2
007860 81bb      	LDD  R27,Y+2+1
007861 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
007862 940e d221 	CALL SUBOPT_0x275
                +
007864 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
007865 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
007866 940e d229 	CALL SUBOPT_0x276
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
007868 91a0 167e 	LDS  R26,_last_rd_eventQ
00786a 91b0 167f 	LDS  R27,_last_rd_eventQ+1
00786c 9611      	ADIW R26,1
00786d e1e4      	LDI  R30,LOW(20)
00786e e0f0      	LDI  R31,HIGH(20)
00786f 940e e2b1 	CALL __MODW21
007871 93e0 167e 	STS  _last_rd_eventQ,R30
007873 93f0 167f 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
007875 e8a0      	LDI  R26,LOW(_eventQ_len)
007876 e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005E:
007877 91ed      	LD   R30,X+
007878 91fd      	LD   R31,X+
007879 9731      	SBIW R30,1
                 _0x20E005D:
00787a 93fe      	ST   -X,R31
00787b 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
00787c e0e0      	LDI  R30,LOW(0)
00787d e0f0      	LDI  R31,HIGH(0)
                 _0x20E005C:
00787e 9626      	ADIW R28,6
00787f 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
007880 93ba      	ST   -Y,R27
007881 93aa      	ST   -Y,R26
007882 940e c365 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
007884 e000     +LDI R16 , LOW ( 0 )
007885 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
007886 81ee      	LDD  R30,Y+6
007887 81ff      	LDD  R31,Y+6+1
007888 170e      	CP   R16,R30
007889 071f      	CPC  R17,R31
00788a f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
00788b 01f8      	MOVW R30,R16
00788c 85a8      	LDD  R26,Y+8
00788d 85b9      	LDD  R27,Y+8+1
00788e 0fae      	ADD  R26,R30
00788f 1fbf      	ADC  R27,R31
007890 91ac      	LD   R26,X
007891 d00b      	RCALL _checkAlarmFromSrc
007892 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
007893 2b24     +OR R18 , R20
007894 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
007895 5f0f     +SUBI R16 , LOW ( - 1 )
007896 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007897 cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
007898 01f9      	MOVW R30,R18
007899 940e e3a0 	CALL __LOADLOCR6
                 _0x20E005B:
00789b 962a      	ADIW R28,10
00789c 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
00789d 93aa      	ST   -Y,R26
00789e 940e d22e 	CALL SUBOPT_0x277
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
0078a0 e020     +LDI R18 , LOW ( 0 )
0078a1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0078a2 81ec      	LDD  R30,Y+4
0078a3 e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
0078a4 3ce0      	CPI  R30,LOW(0xC0)
0078a5 e0a0      	LDI  R26,HIGH(0xC0)
0078a6 07fa      	CPC  R31,R26
0078a7 f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
0078a8 91a0 146f 	LDS  R26,_sensorStatus
0078aa 30a0      	CPI  R26,LOW(0x0)
0078ab f011      	BREQ _0x22000D
0078ac 3faf      	CPI  R26,LOW(0xFF)
0078ad f421      	BRNE _0x22000F
                 _0x22000D:
0078ae 91a0 1474 	LDS  R26,_dataStatus
0078b0 30a0      	CPI  R26,LOW(0x0)
0078b1 f011      	BREQ _0x22000C
                 _0x22000F:
                +
0078b2 e021     +LDI R18 , LOW ( 1 )
0078b3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
0078b4 c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
0078b5 3ce1      	CPI  R30,LOW(0xC1)
0078b6 e0a0      	LDI  R26,HIGH(0xC1)
0078b7 07fa      	CPC  R31,R26
0078b8 f439      	BRNE _0x220011
0078b9 91e0 1474 	LDS  R30,_dataStatus
0078bb 70e1      	ANDI R30,LOW(0x1)
0078bc f011      	BREQ _0x220012
                +
0078bd e021     +LDI R18 , LOW ( 1 )
0078be e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
0078bf c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
0078c0 3ce2      	CPI  R30,LOW(0xC2)
0078c1 e0a0      	LDI  R26,HIGH(0xC2)
0078c2 07fa      	CPC  R31,R26
0078c3 f439      	BRNE _0x220013
0078c4 91e0 1474 	LDS  R30,_dataStatus
0078c6 71e1      	ANDI R30,LOW(0x11)
0078c7 f011      	BREQ _0x220014
                +
0078c8 e021     +LDI R18 , LOW ( 1 )
0078c9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
0078ca c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
0078cb 3ce3      	CPI  R30,LOW(0xC3)
0078cc e0a0      	LDI  R26,HIGH(0xC3)
0078cd 07fa      	CPC  R31,R26
0078ce f439      	BRNE _0x220015
0078cf 91e0 1474 	LDS  R30,_dataStatus
0078d1 70e2      	ANDI R30,LOW(0x2)
0078d2 f011      	BREQ _0x220016
                +
0078d3 e021     +LDI R18 , LOW ( 1 )
0078d4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
0078d5 c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
0078d6 3ce4      	CPI  R30,LOW(0xC4)
0078d7 e0a0      	LDI  R26,HIGH(0xC4)
0078d8 07fa      	CPC  R31,R26
0078d9 f439      	BRNE _0x220017
0078da 91e0 1474 	LDS  R30,_dataStatus
0078dc 70e4      	ANDI R30,LOW(0x4)
0078dd f011      	BREQ _0x220018
                +
0078de e021     +LDI R18 , LOW ( 1 )
0078df e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
0078e0 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
0078e1 3ce5      	CPI  R30,LOW(0xC5)
0078e2 e0a0      	LDI  R26,HIGH(0xC5)
0078e3 07fa      	CPC  R31,R26
0078e4 f439      	BRNE _0x220019
0078e5 91e0 1474 	LDS  R30,_dataStatus
0078e7 71e4      	ANDI R30,LOW(0x14)
0078e8 f011      	BREQ _0x22001A
                +
0078e9 e021     +LDI R18 , LOW ( 1 )
0078ea e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
0078eb c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
0078ec 3ce6      	CPI  R30,LOW(0xC6)
0078ed e0a0      	LDI  R26,HIGH(0xC6)
0078ee 07fa      	CPC  R31,R26
0078ef f439      	BRNE _0x22001B
0078f0 91e0 1474 	LDS  R30,_dataStatus
0078f2 70e8      	ANDI R30,LOW(0x8)
0078f3 f011      	BREQ _0x22001C
                +
0078f4 e021     +LDI R18 , LOW ( 1 )
0078f5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
0078f6 c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
0078f7 3ce7      	CPI  R30,LOW(0xC7)
0078f8 e0a0      	LDI  R26,HIGH(0xC7)
0078f9 07fa      	CPC  R31,R26
0078fa f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
0078fb 91a0 146f 	LDS  R26,_sensorStatus
0078fd 30a0      	CPI  R26,LOW(0x0)
0078fe f011      	BREQ _0x22001F
0078ff 3faf      	CPI  R26,LOW(0xFF)
007900 f409      	BRNE _0x220020
                 _0x22001F:
007901 c002      	RJMP _0x22001E
                 _0x220020:
                +
007902 e021     +LDI R18 , LOW ( 1 )
007903 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
007904 c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
007905 3ce8      	CPI  R30,LOW(0xC8)
007906 e0a0      	LDI  R26,HIGH(0xC8)
007907 07fa      	CPC  R31,R26
007908 f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
007909 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
00790b 30a0      	CPI  R26,LOW(0x0)
00790c f021      	BREQ _0x220023
                +
00790d 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
00790f 3faf      	CPI  R26,LOW(0xFF)
007910 f421      	BRNE _0x220025
                 _0x220023:
                +
007911 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
007913 30a0      	CPI  R26,LOW(0x0)
007914 f011      	BREQ _0x220022
                 _0x220025:
                +
007915 e021     +LDI R18 , LOW ( 1 )
007916 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
007917 c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
007918 3ce9      	CPI  R30,LOW(0xC9)
007919 e0a0      	LDI  R26,HIGH(0xC9)
00791a 07fa      	CPC  R31,R26
00791b f439      	BRNE _0x220027
                +
00791c 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00791e 70e1      	ANDI R30,LOW(0x1)
00791f f011      	BREQ _0x220028
                +
007920 e021     +LDI R18 , LOW ( 1 )
007921 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
007922 c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
007923 3cea      	CPI  R30,LOW(0xCA)
007924 e0a0      	LDI  R26,HIGH(0xCA)
007925 07fa      	CPC  R31,R26
007926 f439      	BRNE _0x220029
                +
007927 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007929 71e1      	ANDI R30,LOW(0x11)
00792a f011      	BREQ _0x22002A
                +
00792b e021     +LDI R18 , LOW ( 1 )
00792c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
00792d c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
00792e 3ceb      	CPI  R30,LOW(0xCB)
00792f e0a0      	LDI  R26,HIGH(0xCB)
007930 07fa      	CPC  R31,R26
007931 f439      	BRNE _0x22002B
                +
007932 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007934 70e2      	ANDI R30,LOW(0x2)
007935 f011      	BREQ _0x22002C
                +
007936 e021     +LDI R18 , LOW ( 1 )
007937 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
007938 c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
007939 3cec      	CPI  R30,LOW(0xCC)
00793a e0a0      	LDI  R26,HIGH(0xCC)
00793b 07fa      	CPC  R31,R26
00793c f439      	BRNE _0x22002D
                +
00793d 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00793f 70e4      	ANDI R30,LOW(0x4)
007940 f011      	BREQ _0x22002E
                +
007941 e021     +LDI R18 , LOW ( 1 )
007942 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
007943 c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
007944 3ced      	CPI  R30,LOW(0xCD)
007945 e0a0      	LDI  R26,HIGH(0xCD)
007946 07fa      	CPC  R31,R26
007947 f439      	BRNE _0x22002F
                +
007948 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00794a 71e4      	ANDI R30,LOW(0x14)
00794b f011      	BREQ _0x220030
                +
00794c e021     +LDI R18 , LOW ( 1 )
00794d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
00794e c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
00794f 3cee      	CPI  R30,LOW(0xCE)
007950 e0a0      	LDI  R26,HIGH(0xCE)
007951 07fa      	CPC  R31,R26
007952 f439      	BRNE _0x220031
                +
007953 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007955 70e8      	ANDI R30,LOW(0x8)
007956 f011      	BREQ _0x220032
                +
007957 e021     +LDI R18 , LOW ( 1 )
007958 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
007959 c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
00795a 3cef      	CPI  R30,LOW(0xCF)
00795b e0a0      	LDI  R26,HIGH(0xCF)
00795c 07fa      	CPC  R31,R26
00795d f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
00795e 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
007960 30a0      	CPI  R26,LOW(0x0)
007961 f021      	BREQ _0x220035
                +
007962 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
007964 3faf      	CPI  R26,LOW(0xFF)
007965 f409      	BRNE _0x220036
                 _0x220035:
007966 c002      	RJMP _0x220034
                 _0x220036:
                +
007967 e021     +LDI R18 , LOW ( 1 )
007968 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
007969 c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
00796a 3de0      	CPI  R30,LOW(0xD0)
00796b e0a0      	LDI  R26,HIGH(0xD0)
00796c 07fa      	CPC  R31,R26
00796d f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
00796e 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007970 30a0      	CPI  R26,LOW(0x0)
007971 f021      	BREQ _0x220039
                +
007972 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007974 3faf      	CPI  R26,LOW(0xFF)
007975 f421      	BRNE _0x22003B
                 _0x220039:
                +
007976 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
007978 30a0      	CPI  R26,LOW(0x0)
007979 f011      	BREQ _0x220038
                 _0x22003B:
                +
00797a e021     +LDI R18 , LOW ( 1 )
00797b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
00797c c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
00797d 3de1      	CPI  R30,LOW(0xD1)
00797e e0a0      	LDI  R26,HIGH(0xD1)
00797f 07fa      	CPC  R31,R26
007980 f439      	BRNE _0x22003D
                +
007981 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007983 70e1      	ANDI R30,LOW(0x1)
007984 f011      	BREQ _0x22003E
                +
007985 e021     +LDI R18 , LOW ( 1 )
007986 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
007987 c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
007988 3de2      	CPI  R30,LOW(0xD2)
007989 e0a0      	LDI  R26,HIGH(0xD2)
00798a 07fa      	CPC  R31,R26
00798b f439      	BRNE _0x22003F
                +
00798c 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00798e 71e1      	ANDI R30,LOW(0x11)
00798f f011      	BREQ _0x220040
                +
007990 e021     +LDI R18 , LOW ( 1 )
007991 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
007992 c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
007993 3de3      	CPI  R30,LOW(0xD3)
007994 e0a0      	LDI  R26,HIGH(0xD3)
007995 07fa      	CPC  R31,R26
007996 f439      	BRNE _0x220041
                +
007997 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007999 70e2      	ANDI R30,LOW(0x2)
00799a f011      	BREQ _0x220042
                +
00799b e021     +LDI R18 , LOW ( 1 )
00799c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
00799d c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
00799e 3de4      	CPI  R30,LOW(0xD4)
00799f e0a0      	LDI  R26,HIGH(0xD4)
0079a0 07fa      	CPC  R31,R26
0079a1 f439      	BRNE _0x220043
                +
0079a2 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0079a4 70e4      	ANDI R30,LOW(0x4)
0079a5 f011      	BREQ _0x220044
                +
0079a6 e021     +LDI R18 , LOW ( 1 )
0079a7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
0079a8 c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
0079a9 3de5      	CPI  R30,LOW(0xD5)
0079aa e0a0      	LDI  R26,HIGH(0xD5)
0079ab 07fa      	CPC  R31,R26
0079ac f439      	BRNE _0x220045
                +
0079ad 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0079af 71e4      	ANDI R30,LOW(0x14)
0079b0 f011      	BREQ _0x220046
                +
0079b1 e021     +LDI R18 , LOW ( 1 )
0079b2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
0079b3 c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
0079b4 3de6      	CPI  R30,LOW(0xD6)
0079b5 e0a0      	LDI  R26,HIGH(0xD6)
0079b6 07fa      	CPC  R31,R26
0079b7 f439      	BRNE _0x220047
                +
0079b8 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0079ba 70e8      	ANDI R30,LOW(0x8)
0079bb f011      	BREQ _0x220048
                +
0079bc e021     +LDI R18 , LOW ( 1 )
0079bd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
0079be c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
0079bf 3de7      	CPI  R30,LOW(0xD7)
0079c0 e0a0      	LDI  R26,HIGH(0xD7)
0079c1 07fa      	CPC  R31,R26
0079c2 f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0079c3 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0079c5 30a0      	CPI  R26,LOW(0x0)
0079c6 f021      	BREQ _0x22004B
                +
0079c7 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0079c9 3faf      	CPI  R26,LOW(0xFF)
0079ca f409      	BRNE _0x22004C
                 _0x22004B:
0079cb c002      	RJMP _0x22004A
                 _0x22004C:
                +
0079cc e021     +LDI R18 , LOW ( 1 )
0079cd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
0079ce c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
0079cf 3de8      	CPI  R30,LOW(0xD8)
0079d0 e0a0      	LDI  R26,HIGH(0xD8)
0079d1 07fa      	CPC  R31,R26
0079d2 f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
0079d3 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
0079d5 30a0      	CPI  R26,LOW(0x0)
0079d6 f021      	BREQ _0x22004F
                +
0079d7 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
0079d9 3faf      	CPI  R26,LOW(0xFF)
0079da f421      	BRNE _0x220051
                 _0x22004F:
                +
0079db 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
0079dd 30a0      	CPI  R26,LOW(0x0)
0079de f011      	BREQ _0x22004E
                 _0x220051:
                +
0079df e021     +LDI R18 , LOW ( 1 )
0079e0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
0079e1 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
0079e2 3de9      	CPI  R30,LOW(0xD9)
0079e3 e0a0      	LDI  R26,HIGH(0xD9)
0079e4 07fa      	CPC  R31,R26
0079e5 f439      	BRNE _0x220053
                +
0079e6 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0079e8 70e1      	ANDI R30,LOW(0x1)
0079e9 f011      	BREQ _0x220054
                +
0079ea e021     +LDI R18 , LOW ( 1 )
0079eb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
0079ec c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
0079ed 3dea      	CPI  R30,LOW(0xDA)
0079ee e0a0      	LDI  R26,HIGH(0xDA)
0079ef 07fa      	CPC  R31,R26
0079f0 f439      	BRNE _0x220055
                +
0079f1 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0079f3 71e1      	ANDI R30,LOW(0x11)
0079f4 f011      	BREQ _0x220056
                +
0079f5 e021     +LDI R18 , LOW ( 1 )
0079f6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
0079f7 c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
0079f8 3deb      	CPI  R30,LOW(0xDB)
0079f9 e0a0      	LDI  R26,HIGH(0xDB)
0079fa 07fa      	CPC  R31,R26
0079fb f439      	BRNE _0x220057
                +
0079fc 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0079fe 70e2      	ANDI R30,LOW(0x2)
0079ff f011      	BREQ _0x220058
                +
007a00 e021     +LDI R18 , LOW ( 1 )
007a01 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
007a02 c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
007a03 3dec      	CPI  R30,LOW(0xDC)
007a04 e0a0      	LDI  R26,HIGH(0xDC)
007a05 07fa      	CPC  R31,R26
007a06 f439      	BRNE _0x220059
                +
007a07 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a09 70e4      	ANDI R30,LOW(0x4)
007a0a f011      	BREQ _0x22005A
                +
007a0b e021     +LDI R18 , LOW ( 1 )
007a0c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
007a0d c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
007a0e 3ded      	CPI  R30,LOW(0xDD)
007a0f e0a0      	LDI  R26,HIGH(0xDD)
007a10 07fa      	CPC  R31,R26
007a11 f439      	BRNE _0x22005B
                +
007a12 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a14 71e4      	ANDI R30,LOW(0x14)
007a15 f011      	BREQ _0x22005C
                +
007a16 e021     +LDI R18 , LOW ( 1 )
007a17 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
007a18 c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
007a19 3dee      	CPI  R30,LOW(0xDE)
007a1a e0a0      	LDI  R26,HIGH(0xDE)
007a1b 07fa      	CPC  R31,R26
007a1c f439      	BRNE _0x22005D
                +
007a1d 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a1f 70e8      	ANDI R30,LOW(0x8)
007a20 f011      	BREQ _0x22005E
                +
007a21 e021     +LDI R18 , LOW ( 1 )
007a22 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
007a23 c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
007a24 3def      	CPI  R30,LOW(0xDF)
007a25 e0a0      	LDI  R26,HIGH(0xDF)
007a26 07fa      	CPC  R31,R26
007a27 f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007a28 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007a2a 30a0      	CPI  R26,LOW(0x0)
007a2b f021      	BREQ _0x220061
                +
007a2c 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007a2e 3faf      	CPI  R26,LOW(0xFF)
007a2f f409      	BRNE _0x220062
                 _0x220061:
007a30 c002      	RJMP _0x220060
                 _0x220062:
                +
007a31 e021     +LDI R18 , LOW ( 1 )
007a32 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
007a33 c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
007a34 3ee0      	CPI  R30,LOW(0xE0)
007a35 e0a0      	LDI  R26,HIGH(0xE0)
007a36 07fa      	CPC  R31,R26
007a37 f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
007a38 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007a3a 30a0      	CPI  R26,LOW(0x0)
007a3b f021      	BREQ _0x220065
                +
007a3c 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007a3e 3faf      	CPI  R26,LOW(0xFF)
007a3f f421      	BRNE _0x220067
                 _0x220065:
                +
007a40 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
007a42 30a0      	CPI  R26,LOW(0x0)
007a43 f011      	BREQ _0x220064
                 _0x220067:
                +
007a44 e021     +LDI R18 , LOW ( 1 )
007a45 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
007a46 c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
007a47 3ee1      	CPI  R30,LOW(0xE1)
007a48 e0a0      	LDI  R26,HIGH(0xE1)
007a49 07fa      	CPC  R31,R26
007a4a f439      	BRNE _0x220069
                +
007a4b 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a4d 70e1      	ANDI R30,LOW(0x1)
007a4e f011      	BREQ _0x22006A
                +
007a4f e021     +LDI R18 , LOW ( 1 )
007a50 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
007a51 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
007a52 3ee2      	CPI  R30,LOW(0xE2)
007a53 e0a0      	LDI  R26,HIGH(0xE2)
007a54 07fa      	CPC  R31,R26
007a55 f439      	BRNE _0x22006B
                +
007a56 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a58 71e1      	ANDI R30,LOW(0x11)
007a59 f011      	BREQ _0x22006C
                +
007a5a e021     +LDI R18 , LOW ( 1 )
007a5b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
007a5c c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
007a5d 3ee3      	CPI  R30,LOW(0xE3)
007a5e e0a0      	LDI  R26,HIGH(0xE3)
007a5f 07fa      	CPC  R31,R26
007a60 f439      	BRNE _0x22006D
                +
007a61 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a63 70e2      	ANDI R30,LOW(0x2)
007a64 f011      	BREQ _0x22006E
                +
007a65 e021     +LDI R18 , LOW ( 1 )
007a66 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
007a67 c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
007a68 3ee4      	CPI  R30,LOW(0xE4)
007a69 e0a0      	LDI  R26,HIGH(0xE4)
007a6a 07fa      	CPC  R31,R26
007a6b f439      	BRNE _0x22006F
                +
007a6c 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a6e 70e4      	ANDI R30,LOW(0x4)
007a6f f011      	BREQ _0x220070
                +
007a70 e021     +LDI R18 , LOW ( 1 )
007a71 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
007a72 c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
007a73 3ee5      	CPI  R30,LOW(0xE5)
007a74 e0a0      	LDI  R26,HIGH(0xE5)
007a75 07fa      	CPC  R31,R26
007a76 f439      	BRNE _0x220071
                +
007a77 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a79 71e4      	ANDI R30,LOW(0x14)
007a7a f011      	BREQ _0x220072
                +
007a7b e021     +LDI R18 , LOW ( 1 )
007a7c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
007a7d c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
007a7e 3ee6      	CPI  R30,LOW(0xE6)
007a7f e0a0      	LDI  R26,HIGH(0xE6)
007a80 07fa      	CPC  R31,R26
007a81 f439      	BRNE _0x220073
                +
007a82 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007a84 70e8      	ANDI R30,LOW(0x8)
007a85 f011      	BREQ _0x220074
                +
007a86 e021     +LDI R18 , LOW ( 1 )
007a87 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
007a88 c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
007a89 3ee7      	CPI  R30,LOW(0xE7)
007a8a e0a0      	LDI  R26,HIGH(0xE7)
007a8b 07fa      	CPC  R31,R26
007a8c f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007a8d 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007a8f 30a0      	CPI  R26,LOW(0x0)
007a90 f021      	BREQ _0x220077
                +
007a91 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007a93 3faf      	CPI  R26,LOW(0xFF)
007a94 f409      	BRNE _0x220078
                 _0x220077:
007a95 c002      	RJMP _0x220076
                 _0x220078:
                +
007a96 e021     +LDI R18 , LOW ( 1 )
007a97 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
007a98 c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
007a99 37e1      	CPI  R30,LOW(0x71)
007a9a e0a0      	LDI  R26,HIGH(0x71)
007a9b 07fa      	CPC  R31,R26
007a9c f409      	BRNE _0x220079
007a9d c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
007a9e 37e2      	CPI  R30,LOW(0x72)
007a9f e0a0      	LDI  R26,HIGH(0x72)
007aa0 07fa      	CPC  R31,R26
007aa1 f481      	BRNE _0x22007A
                +
007aa2 e000     +LDI R16 , LOW ( 0 )
007aa3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007aa4 3002     +CPI R16 , LOW ( 2 )
007aa5 e0e0     +LDI R30 , HIGH ( 2 )
007aa6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007aa7 f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
007aa8 e7ac      	LDI  R26,LOW(_dinStatus)
007aa9 e1b4      	LDI  R27,HIGH(_dinStatus)
007aaa 0fa0      	ADD  R26,R16
007aab 1fb1      	ADC  R27,R17
007aac 91ac      	LD   R26,X
007aad 30a1      	CPI  R26,LOW(0x1)
007aae f411      	BRNE _0x22007E
                +
007aaf e021     +LDI R18 , LOW ( 1 )
007ab0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007ab1 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007ab2 37e3      	CPI  R30,LOW(0x73)
007ab3 e0a0      	LDI  R26,HIGH(0x73)
007ab4 07fa      	CPC  R31,R26
007ab5 f471      	BRNE _0x22007F
                +
007ab6 e000     +LDI R16 , LOW ( 0 )
007ab7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007ab8 3002     +CPI R16 , LOW ( 2 )
007ab9 e0e0     +LDI R30 , HIGH ( 2 )
007aba 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007abb f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
007abc e7ac      	LDI  R26,LOW(_dinStatus)
007abd e1b4      	LDI  R27,HIGH(_dinStatus)
007abe 940e d233 	CALL SUBOPT_0x278
007ac0 f411      	BRNE _0x220083
                +
007ac1 e021     +LDI R18 , LOW ( 1 )
007ac2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
007ac3 c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
007ac4 34e0      	CPI  R30,LOW(0x40)
007ac5 e0a0      	LDI  R26,HIGH(0x40)
007ac6 07fa      	CPC  R31,R26
007ac7 f409      	BRNE _0x220084
007ac8 c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
007ac9 35e0      	CPI  R30,LOW(0x50)
007aca e0a0      	LDI  R26,HIGH(0x50)
007acb 07fa      	CPC  R31,R26
007acc f439      	BRNE _0x220085
007acd 91a0 147c 	LDS  R26,_dinStatus
007acf 30a1      	CPI  R26,LOW(0x1)
007ad0 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007ad1 e021     +LDI R18 , LOW ( 1 )
007ad2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
007ad3 c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
007ad4 36e0      	CPI  R30,LOW(0x60)
007ad5 e0a0      	LDI  R26,HIGH(0x60)
007ad6 07fa      	CPC  R31,R26
007ad7 f439      	BRNE _0x220087
007ad8 91e0 147c 	LDS  R30,_dinStatus
007ada 30e0      	CPI  R30,0
007adb f411      	BRNE _0x220088
                +
007adc e021     +LDI R18 , LOW ( 1 )
007add e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
007ade c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007adf 34e1      	CPI  R30,LOW(0x41)
007ae0 e0a0      	LDI  R26,HIGH(0x41)
007ae1 07fa      	CPC  R31,R26
007ae2 f409      	BRNE _0x220089
007ae3 c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
007ae4 35e1      	CPI  R30,LOW(0x51)
007ae5 e0a0      	LDI  R26,HIGH(0x51)
007ae6 07fa      	CPC  R31,R26
007ae7 f439      	BRNE _0x22008A
                +
007ae8 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
007aea 30a1      	CPI  R26,LOW(0x1)
007aeb f411      	BRNE _0x22008B
                +
007aec e021     +LDI R18 , LOW ( 1 )
007aed e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
007aee c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
007aef 36e1      	CPI  R30,LOW(0x61)
007af0 e0a0      	LDI  R26,HIGH(0x61)
007af1 07fa      	CPC  R31,R26
007af2 f439      	BRNE _0x22008C
                +
007af3 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
007af5 30e0      	CPI  R30,0
007af6 f411      	BRNE _0x22008D
                +
007af7 e021     +LDI R18 , LOW ( 1 )
007af8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
007af9 c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
007afa 38e0      	CPI  R30,LOW(0x80)
007afb e0a0      	LDI  R26,HIGH(0x80)
007afc 07fa      	CPC  R31,R26
007afd f409      	BRNE _0x22008E
007afe c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
007aff 38e1      	CPI  R30,LOW(0x81)
007b00 e0a0      	LDI  R26,HIGH(0x81)
007b01 07fa      	CPC  R31,R26
007b02 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
007b03 c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
007b04 38e2      	CPI  R30,LOW(0x82)
007b05 e0a0      	LDI  R26,HIGH(0x82)
007b06 07fa      	CPC  R31,R26
007b07 f439      	BRNE _0x220090
007b08 91a0 147a 	LDS  R26,_powerSrcStatus
007b0a 30a1      	CPI  R26,LOW(0x1)
007b0b f411      	BRNE _0x220091
                +
007b0c e021     +LDI R18 , LOW ( 1 )
007b0d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
007b0e c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
007b0f 38e3      	CPI  R30,LOW(0x83)
007b10 e0a0      	LDI  R26,HIGH(0x83)
007b11 07fa      	CPC  R31,R26
007b12 f439      	BRNE _0x220092
007b13 91a0 147b 	LDS  R26,_batteryStatus
007b15 30a1      	CPI  R26,LOW(0x1)
007b16 f411      	BRNE _0x220093
                +
007b17 e021     +LDI R18 , LOW ( 1 )
007b18 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
007b19 c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
007b1a 38e4      	CPI  R30,LOW(0x84)
007b1b e0a0      	LDI  R26,HIGH(0x84)
007b1c 07fa      	CPC  R31,R26
007b1d f409      	BRNE _0x220094
007b1e c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
007b1f 38e5      	CPI  R30,LOW(0x85)
007b20 e0a0      	LDI  R26,HIGH(0x85)
007b21 07fa      	CPC  R31,R26
007b22 f439      	BRNE _0x220095
007b23 91a0 14a7 	LDS  R26,_memoryAlarm
007b25 30a1      	CPI  R26,LOW(0x1)
007b26 f411      	BRNE _0x220096
                +
007b27 e021     +LDI R18 , LOW ( 1 )
007b28 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
007b29 c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
007b2a 38e6      	CPI  R30,LOW(0x86)
007b2b e0a0      	LDI  R26,HIGH(0x86)
007b2c 07fa      	CPC  R31,R26
007b2d f439      	BRNE _0x220097
007b2e 91a0 14a7 	LDS  R26,_memoryAlarm
007b30 30a2      	CPI  R26,LOW(0x2)
007b31 f411      	BRNE _0x220098
                +
007b32 e021     +LDI R18 , LOW ( 1 )
007b33 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
007b34 c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
007b35 38e7      	CPI  R30,LOW(0x87)
007b36 e0a0      	LDI  R26,HIGH(0x87)
007b37 07fa      	CPC  R31,R26
007b38 f439      	BRNE _0x220099
007b39 91a0 1480 	LDS  R26,_serverCommStatus
007b3b 30a2      	CPI  R26,LOW(0x2)
007b3c f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
007b3d e021     +LDI R18 , LOW ( 1 )
007b3e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
007b3f c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
007b40 39e0      	CPI  R30,LOW(0x90)
007b41 e0a0      	LDI  R26,HIGH(0x90)
007b42 07fa      	CPC  R31,R26
007b43 f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
007b44 39e1      	CPI  R30,LOW(0x91)
007b45 e0a0      	LDI  R26,HIGH(0x91)
007b46 07fa      	CPC  R31,R26
007b47 f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
007b48 c004      	RJMP _0x22009E
                 _0x22009D:
007b49 39e2      	CPI  R30,LOW(0x92)
007b4a e0a0      	LDI  R26,HIGH(0x92)
007b4b 07fa      	CPC  R31,R26
007b4c f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
007b4d c004      	RJMP _0x2200A0
                 _0x22009F:
007b4e 39e3      	CPI  R30,LOW(0x93)
007b4f e0a0      	LDI  R26,HIGH(0x93)
007b50 07fa      	CPC  R31,R26
007b51 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
007b52 c004      	RJMP _0x2200A2
                 _0x2200A1:
007b53 39e4      	CPI  R30,LOW(0x94)
007b54 e0a0      	LDI  R26,HIGH(0x94)
007b55 07fa      	CPC  R31,R26
007b56 f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
007b57 c004      	RJMP _0x2200A4
                 _0x2200A3:
007b58 39ef      	CPI  R30,LOW(0x9F)
007b59 e0a0      	LDI  R26,HIGH(0x9F)
007b5a 07fa      	CPC  R31,R26
007b5b f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
007b5c e2e8     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
007b5d e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
007b5e e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
007b5f e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
007b60 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
007b61 e5eb     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
007b62 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
007b63 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
007b64 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
007b65 940e e324 	CALL __PUTPARD1
007b67 85e8      	LDD  R30,Y+8
007b68 940e c309 	CALL SUBOPT_0x29
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
007b6a 01f9      	MOVW R30,R18
007b6b 940e e3a2 	CALL __LOADLOCR4
007b6d 940c 7ef5 	JMP  _0x20E0054
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
007b6f 93ba      	ST   -Y,R27
007b70 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b71 91e0 1692 	LDS  R30,_mtncAlarm
007b73 91a0 1479 	LDS  R26,_mtncStatus
007b75 17ea      	CP   R30,R26
007b76 f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
007b77 91e0 1479 	LDS  R30,_mtncStatus
007b79 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
007b7b 91e0 1479 	LDS  R30,_mtncStatus
007b7d 81a8      	LD   R26,Y
007b7e 81b9      	LDD  R27,Y+1
007b7f 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
007b80 e0e1      	LDI  R30,LOW(1)
007b81 e0f0      	LDI  R31,HIGH(1)
007b82 c0ee      	RJMP _0x20E0059
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
007b83 c0eb      	RJMP _0x20E005A
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
007b84 93ba      	ST   -Y,R27
007b85 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b86 91e0 1693 	LDS  R30,_powerSrcAlarm
007b88 91a0 147a 	LDS  R26,_powerSrcStatus
007b8a 17ea      	CP   R30,R26
007b8b f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
007b8c 91e0 169c 	LDS  R30,_lastCheck_S0110003000
007b8e 17ea      	CP   R30,R26
007b8f f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
007b90 e0e0      	LDI  R30,LOW(0)
007b91 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
007b93 91e0 147a 	LDS  R30,_powerSrcStatus
007b95 93e0 169c 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
007b97 91e0 169b 	LDS  R30,_t_flag_S0110003000
007b99 30e0      	CPI  R30,0
007b9a f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
007b9b 91a0 147a 	LDS  R26,_powerSrcStatus
007b9d 30a1      	CPI  R26,LOW(0x1)
007b9e f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007b9f e9e7      	LDI  R30,LOW(_t_S0110003000)
007ba0 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007ba1 940e cb24 	CALL SUBOPT_0x171
007ba3 c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
007ba4 e9e7      	LDI  R30,LOW(_t_S0110003000)
007ba5 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007ba6 940e d238 	CALL SUBOPT_0x279
                 _0x2200F2:
007ba8 940e 41ca 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
007baa e0e1      	LDI  R30,LOW(1)
007bab 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
007bad c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
007bae 91a0 1697 	LDS  R26,_t_S0110003000
007bb0 91b0 1698 	LDS  R27,_t_S0110003000+1
007bb2 9180 1699 	LDS  R24,_t_S0110003000+2
007bb4 9190 169a 	LDS  R25,_t_S0110003000+3
007bb6 940e 41b4 	CALL _TIMER_checkTimerExceed
007bb8 9730      	SBIW R30,0
007bb9 f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
007bba 91e0 147a 	LDS  R30,_powerSrcStatus
007bbc 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
007bbe 91e0 147a 	LDS  R30,_powerSrcStatus
007bc0 940e d23f 	CALL SUBOPT_0x27A
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007bc2 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
007bc4 e0e1      	LDI  R30,LOW(1)
007bc5 e0f0      	LDI  R31,HIGH(1)
007bc6 c0aa      	RJMP _0x20E0059
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
007bc7 c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
007bc8 e0e0      	LDI  R30,LOW(0)
007bc9 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
007bcb c0a3      	RJMP _0x20E005A
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
007bcc 93ba      	ST   -Y,R27
007bcd 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007bce 940e d244 	CALL SUBOPT_0x27B
007bd0 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007bd1 91e0 14a6 	LDS  R30,_batteryAlarm
007bd3 91a0 147b 	LDS  R26,_batteryStatus
007bd5 17ea      	CP   R30,R26
007bd6 f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
007bd7 91e0 16a2 	LDS  R30,_lastCheck_S0110004000
007bd9 17ea      	CP   R30,R26
007bda f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
007bdb e0e0      	LDI  R30,LOW(0)
007bdc 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
007bde 91e0 147b 	LDS  R30,_batteryStatus
007be0 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007be2 91e0 16a1 	LDS  R30,_t_flag_S0110004000
007be4 30e0      	CPI  R30,0
007be5 f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
007be6 e9ed      	LDI  R30,LOW(_t_S0110004000)
007be7 e1f6      	LDI  R31,HIGH(_t_S0110004000)
007be8 940e c2f8 	CALL SUBOPT_0x27
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
007bea e0e1      	LDI  R30,LOW(1)
007beb 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
007bed c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
007bee 91a0 169d 	LDS  R26,_t_S0110004000
007bf0 91b0 169e 	LDS  R27,_t_S0110004000+1
007bf2 9180 169f 	LDS  R24,_t_S0110004000+2
007bf4 9190 16a0 	LDS  R25,_t_S0110004000+3
007bf6 940e 41b4 	CALL _TIMER_checkTimerExceed
007bf8 9730      	SBIW R30,0
007bf9 f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
007bfa 91e0 147b 	LDS  R30,_batteryStatus
007bfc 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
007bfe 91e0 147b 	LDS  R30,_batteryStatus
007c00 940e d23f 	CALL SUBOPT_0x27A
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
007c02 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
007c04 e0e1      	LDI  R30,LOW(1)
007c05 e0f0      	LDI  R31,HIGH(1)
007c06 c06a      	RJMP _0x20E0059
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
007c07 c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
007c08 e0e0      	LDI  R30,LOW(0)
007c09 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
007c0b c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
007c0c e0e0      	LDI  R30,LOW(0)
007c0d 93e0 169d 	STS  _t_S0110004000,R30
007c0f 93e0 169e 	STS  _t_S0110004000+1,R30
007c11 93e0 169f 	STS  _t_S0110004000+2,R30
007c13 93e0 16a0 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
007c15 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
007c17 e6e9      	LDI  R30,LOW(105)
007c18 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
007c1a 91e0 14a6 	LDS  R30,_batteryAlarm
007c1c 30e0      	CPI  R30,0
007c1d f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
007c1e e0e0      	LDI  R30,LOW(0)
007c1f 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
007c21 940e d24f 	CALL SUBOPT_0x27C
                 ; 0011 0109             return 1;
007c23 c04d      	RJMP _0x20E0059
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
007c24 c04a      	RJMP _0x20E005A
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
007c25 93ba      	ST   -Y,R27
007c26 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007c27 940e d256 	CALL SUBOPT_0x27D
007c29 f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
007c2a 91e0 14a7 	LDS  R30,_memoryAlarm
007c2c 91a0 1482 	LDS  R26,_memoryStatus
007c2e 17ea      	CP   R30,R26
007c2f f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
007c30 91e0 16a7 	LDS  R30,_t_flag_S0110005000
007c32 30e0      	CPI  R30,0
007c33 f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
007c34 eae3      	LDI  R30,LOW(_t_S0110005000)
007c35 e1f6      	LDI  R31,HIGH(_t_S0110005000)
007c36 940e c385 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
007c38 e0e1      	LDI  R30,LOW(1)
007c39 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
007c3b c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
007c3c 91a0 16a3 	LDS  R26,_t_S0110005000
007c3e 91b0 16a4 	LDS  R27,_t_S0110005000+1
007c40 9180 16a5 	LDS  R24,_t_S0110005000+2
007c42 9190 16a6 	LDS  R25,_t_S0110005000+3
007c44 940e 41b4 	CALL _TIMER_checkTimerExceed
007c46 9730      	SBIW R30,0
007c47 f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
007c48 91e0 1482 	LDS  R30,_memoryStatus
007c4a 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
007c4c 91e0 1482 	LDS  R30,_memoryStatus
007c4e 940e d23f 	CALL SUBOPT_0x27A
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
007c50 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
007c52 e0e1      	LDI  R30,LOW(1)
007c53 e0f0      	LDI  R31,HIGH(1)
007c54 c01c      	RJMP _0x20E0059
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
007c55 c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
007c56 e0e0      	LDI  R30,LOW(0)
007c57 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
007c59 c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
007c5a e0e0      	LDI  R30,LOW(0)
007c5b 93e0 16a3 	STS  _t_S0110005000,R30
007c5d 93e0 16a4 	STS  _t_S0110005000+1,R30
007c5f 93e0 16a5 	STS  _t_S0110005000+2,R30
007c61 93e0 16a6 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
007c63 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
007c65 91e0 14a6 	LDS  R30,_batteryAlarm
007c67 30e0      	CPI  R30,0
007c68 f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
007c69 e0e0      	LDI  R30,LOW(0)
007c6a 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
007c6c 940e d24f 	CALL SUBOPT_0x27C
                 ; 0011 0136             return 1;
007c6e c002      	RJMP _0x20E0059
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005A:
007c6f e0e0      	LDI  R30,LOW(0)
007c70 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0059:
007c71 9622      	ADIW R28,2
007c72 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
007c73 940e c8af 	CALL SUBOPT_0x108
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007c75 f022      	BRMI _0x2200C7
007c76 81aa      	LDD  R26,Y+2
007c77 81bb      	LDD  R27,Y+2+1
007c78 9712      	SBIW R26,2
007c79 f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
007c7a e8eb     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
007c7b e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
007c7c e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
007c7d e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
007c7e 940e c89b 	CALL SUBOPT_0x104
007c80 940e c800 	CALL SUBOPT_0xE9
                 ; 0011 0145         return 0;
007c82 c10b      	RJMP _0x20E0058
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
007c83 940e d25d 	CALL SUBOPT_0x27E
007c85 56ea      	SUBI R30,LOW(-_dinAlarm)
007c86 4efb      	SBCI R31,HIGH(-_dinAlarm)
007c87 81e0      	LD   R30,Z
007c88 17ea      	CP   R30,R26
007c89 f411      	BRNE PC+3
007c8a 940c 7ccc 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
007c8c 940e d25d 	CALL SUBOPT_0x27E
007c8e 54ee      	SUBI R30,LOW(-_lastCheck_S0110006000)
007c8f 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
007c90 81e0      	LD   R30,Z
007c91 17ea      	CP   R30,R26
007c92 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
007c93 940e d265 	CALL SUBOPT_0x27F
007c95 e0a0      	LDI  R26,LOW(0)
007c96 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
007c97 81aa      	LDD  R26,Y+2
007c98 81bb      	LDD  R27,Y+2+1
007c99 54ae      	SUBI R26,LOW(-_lastCheck_S0110006000)
007c9a 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
007c9b 940e d26a 	CALL SUBOPT_0x280
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
007c9d 940e d265 	CALL SUBOPT_0x27F
007c9f 81e0      	LD   R30,Z
007ca0 30e0      	CPI  R30,0
007ca1 f469      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007ca2 81ea      	LDD  R30,Y+2
007ca3 81fb      	LDD  R31,Y+2+1
007ca4 eaa8      	LDI  R26,LOW(_t_S0110006000)
007ca5 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007ca6 940e d1fc 	CALL SUBOPT_0x270
007ca8 940e cf18 	CALL SUBOPT_0x210
                 ; 0011 0151             t_flag[ch]          = 1;
007caa 940e d265 	CALL SUBOPT_0x27F
007cac e0a1      	LDI  R26,LOW(1)
007cad 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007cae c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007caf 81ea      	LDD  R30,Y+2
007cb0 81fb      	LDD  R31,Y+2+1
007cb1 eaa8      	LDI  R26,LOW(_t_S0110006000)
007cb2 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007cb3 940e d200 	CALL SUBOPT_0x271
007cb5 940e c2b4 	CALL SUBOPT_0x1C
007cb7 f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
007cb8 81aa      	LDD  R26,Y+2
007cb9 81bb      	LDD  R27,Y+2+1
007cba 56aa      	SUBI R26,LOW(-_dinAlarm)
007cbb 4ebb      	SBCI R27,HIGH(-_dinAlarm)
007cbc 940e d26a 	CALL SUBOPT_0x280
                 ; 0011 0157                 *code           = dinStatus[ch];
007cbe 81ea      	LDD  R30,Y+2
007cbf 81fb      	LDD  R31,Y+2+1
007cc0 58e4      	SUBI R30,LOW(-_dinStatus)
007cc1 4efb      	SBCI R31,HIGH(-_dinStatus)
007cc2 940e d229 	CALL SUBOPT_0x276
                 ; 0011 0158                 t_flag[ch]      = 0;
007cc4 940e d265 	CALL SUBOPT_0x27F
007cc6 e0a0      	LDI  R26,LOW(0)
007cc7 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
007cc8 e0e1      	LDI  R30,LOW(1)
007cc9 e0f0      	LDI  R31,HIGH(1)
007cca c0c5      	RJMP _0x20E0057
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
007ccb c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
007ccc 940e d265 	CALL SUBOPT_0x27F
007cce e0a0      	LDI  R26,LOW(0)
007ccf 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007cd0 c0bd      	RJMP _0x20E0058
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007cd1 940e d271 	CALL SUBOPT_0x281
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007cd3 59e1      	SUBI R30,LOW(-_sensorStatus)
007cd4 4efb      	SBCI R31,HIGH(-_sensorStatus)
007cd5 81a0      	LD   R26,Z
007cd6 81ea      	LDD  R30,Y+2
007cd7 81fb      	LDD  R31,Y+2+1
007cd8 57e4      	SUBI R30,LOW(-_sensorAlarm)
007cd9 4efb      	SBCI R31,HIGH(-_sensorAlarm)
007cda 81e0      	LD   R30,Z
007cdb 17ea      	CP   R30,R26
007cdc f411      	BRNE PC+3
007cdd 940c 7d30 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007cdf 940e d276 	CALL SUBOPT_0x282
007ce1 81a0      	LD   R26,Z
007ce2 81ea      	LDD  R30,Y+2
007ce3 81fb      	LDD  R31,Y+2+1
007ce4 53e3      	SUBI R30,LOW(-_lastCheck_S0110007000)
007ce5 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
007ce6 81e0      	LD   R30,Z
007ce7 17ea      	CP   R30,R26
007ce8 f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
007ce9 940e d27b 	CALL SUBOPT_0x283
007ceb e0a0      	LDI  R26,LOW(0)
007cec 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
007ced 81aa      	LDD  R26,Y+2
007cee 81bb      	LDD  R27,Y+2+1
007cef 53a3      	SUBI R26,LOW(-_lastCheck_S0110007000)
007cf0 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
007cf1 940e d276 	CALL SUBOPT_0x282
007cf3 81e0      	LD   R30,Z
007cf4 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
007cf5 940e d27b 	CALL SUBOPT_0x283
007cf7 81e0      	LD   R30,Z
007cf8 30e0      	CPI  R30,0
007cf9 f4c9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007cfa 940e d276 	CALL SUBOPT_0x282
007cfc 81a0      	LD   R26,Z
007cfd 3faf      	CPI  R26,LOW(0xFF)
007cfe f439      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
007cff 940e d280 	CALL SUBOPT_0x284
                +
007d01 e1ae     +LDI R26 , LOW ( 0x1E )
007d02 e0b0     +LDI R27 , HIGH ( 0x1E )
007d03 e080     +LDI R24 , BYTE3 ( 0x1E )
007d04 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
007d05 c006      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
007d06 940e d280 	CALL SUBOPT_0x284
                +
007d08 e0a3     +LDI R26 , LOW ( 0x3 )
007d09 e0b0     +LDI R27 , HIGH ( 0x3 )
007d0a e080     +LDI R24 , BYTE3 ( 0x3 )
007d0b e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
                 _0x2200F4:
007d0c 940e 41ca 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
007d0e 940e d27b 	CALL SUBOPT_0x283
007d10 e0a1      	LDI  R26,LOW(1)
007d11 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
007d12 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
007d13 81ea      	LDD  R30,Y+2
007d14 81fb      	LDD  R31,Y+2+1
007d15 eba4      	LDI  R26,LOW(_t_S0110007000)
007d16 e1b6      	LDI  R27,HIGH(_t_S0110007000)
007d17 940e d200 	CALL SUBOPT_0x271
007d19 940e c2b4 	CALL SUBOPT_0x1C
007d1b f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
007d1c 81aa      	LDD  R26,Y+2
007d1d 81bb      	LDD  R27,Y+2+1
007d1e 57a4      	SUBI R26,LOW(-_sensorAlarm)
007d1f 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
007d20 940e d276 	CALL SUBOPT_0x282
007d22 81e0      	LD   R30,Z
007d23 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
007d24 940e d276 	CALL SUBOPT_0x282
007d26 940e d229 	CALL SUBOPT_0x276
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
007d28 940e d27b 	CALL SUBOPT_0x283
007d2a e0a0      	LDI  R26,LOW(0)
007d2b 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
007d2c e0e1      	LDI  R30,LOW(1)
007d2d e0f0      	LDI  R31,HIGH(1)
007d2e c061      	RJMP _0x20E0057
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
007d2f c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
007d30 940e d27b 	CALL SUBOPT_0x283
007d32 e0a0      	LDI  R26,LOW(0)
007d33 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
007d34 c059      	RJMP _0x20E0058
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
007d35 940e d271 	CALL SUBOPT_0x281
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007d37 58ec      	SUBI R30,LOW(-_dataStatus)
007d38 4efb      	SBCI R31,HIGH(-_dataStatus)
007d39 81a0      	LD   R26,Z
007d3a 81ea      	LDD  R30,Y+2
007d3b 81fb      	LDD  R31,Y+2+1
007d3c 56ef      	SUBI R30,LOW(-_dataAlarm)
007d3d 4efb      	SBCI R31,HIGH(-_dataAlarm)
007d3e 81e0      	LD   R30,Z
007d3f 17ea      	CP   R30,R26
007d40 f411      	BRNE PC+3
007d41 940c 7d8a 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
007d43 940e d285 	CALL SUBOPT_0x285
007d45 81e0      	LD   R30,Z
007d46 30e0      	CPI  R30,0
007d47 f489      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
007d48 81ea      	LDD  R30,Y+2
007d49 81fb      	LDD  R31,Y+2+1
007d4a eda2      	LDI  R26,LOW(_t_S0110008000)
007d4b e1b6      	LDI  R27,HIGH(_t_S0110008000)
007d4c 940e d1fc 	CALL SUBOPT_0x270
                +
007d4e e0a3     +LDI R26 , LOW ( 0x3 )
007d4f e0b0     +LDI R27 , HIGH ( 0x3 )
007d50 e080     +LDI R24 , BYTE3 ( 0x3 )
007d51 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
007d52 940e 41ca 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
007d54 940e d285 	CALL SUBOPT_0x285
007d56 e0a1      	LDI  R26,LOW(1)
007d57 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
007d58 c030      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
007d59 81ea      	LDD  R30,Y+2
007d5a 81fb      	LDD  R31,Y+2+1
007d5b eda2      	LDI  R26,LOW(_t_S0110008000)
007d5c e1b6      	LDI  R27,HIGH(_t_S0110008000)
007d5d 940e d200 	CALL SUBOPT_0x271
007d5f 940e c2b4 	CALL SUBOPT_0x1C
007d61 f139      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
007d62 81aa      	LDD  R26,Y+2
007d63 81bb      	LDD  R27,Y+2+1
007d64 56af      	SUBI R26,LOW(-_dataAlarm)
007d65 4ebb      	SBCI R27,HIGH(-_dataAlarm)
007d66 81ea      	LDD  R30,Y+2
007d67 81fb      	LDD  R31,Y+2+1
007d68 58ec      	SUBI R30,LOW(-_dataStatus)
007d69 4efb      	SBCI R31,HIGH(-_dataStatus)
007d6a 81e0      	LD   R30,Z
007d6b 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
007d6c 81ea      	LDD  R30,Y+2
007d6d 81fb      	LDD  R31,Y+2+1
007d6e 58ec      	SUBI R30,LOW(-_dataStatus)
007d6f 4efb      	SBCI R31,HIGH(-_dataStatus)
007d70 940e d229 	CALL SUBOPT_0x276
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
007d72 940e d285 	CALL SUBOPT_0x285
007d74 e0a0      	LDI  R26,LOW(0)
007d75 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
007d76 ebeb     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
007d77 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
007d78 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
007d79 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
007d7a 940e c89b 	CALL SUBOPT_0x104
007d7c 9631      	ADIW R30,1
007d7d 940e e201 	CALL __CWD1
007d7f 940e c96a 	CALL SUBOPT_0x128
007d81 56ef      	SUBI R30,LOW(-_dataAlarm)
007d82 4efb      	SBCI R31,HIGH(-_dataAlarm)
007d83 81e0      	LD   R30,Z
007d84 940e d035 	CALL SUBOPT_0x231
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
007d86 e0e1      	LDI  R30,LOW(1)
007d87 e0f0      	LDI  R31,HIGH(1)
007d88 c007      	RJMP _0x20E0057
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
007d89 c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
007d8a 940e d285 	CALL SUBOPT_0x285
007d8c e0a0      	LDI  R26,LOW(0)
007d8d 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0058:
007d8e e0e0      	LDI  R30,LOW(0)
007d8f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0057:
007d90 9624      	ADIW R28,4
007d91 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
007d92 940e c585 	CALL SUBOPT_0x86
                 ;	period -> Y+0
007d94 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
007d95 940e c2ea 	CALL SUBOPT_0x25
007d97 940e c2ef 	CALL SUBOPT_0x26
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
007d99 e0e1      	LDI  R30,LOW(1)
007d9a c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
007d9b e8e7      	LDI  R30,LOW(_muteAlarmExpired)
007d9c e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
007d9d 93fa      	ST   -Y,R31
007d9e 93ea      	ST   -Y,R30
007d9f 940e c6b1 	CALL SUBOPT_0xB4
007da1 940e 41ca 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
007da3 e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007da4 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
007da6 e0e0      	LDI  R30,LOW(0)
007da7 e0f0      	LDI  R31,HIGH(0)
007da8 940c 8242 	JMP  _0x20E004A
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
007daa 91e0 148b 	LDS  R30,_muteMode
007dac 940e cf33 	CALL SUBOPT_0x214
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007dae f0f1      	BREQ _0x20E0055
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007daf 30e2      	CPI  R30,LOW(0x2)
007db0 e0a0      	LDI  R26,HIGH(0x2)
007db1 07fa      	CPC  R31,R26
007db2 f469      	BRNE _0x2200E7
007db3 91a0 1487 	LDS  R26,_muteAlarmExpired
007db5 91b0 1488 	LDS  R27,_muteAlarmExpired+1
007db7 9180 1489 	LDS  R24,_muteAlarmExpired+2
007db9 9190 148a 	LDS  R25,_muteAlarmExpired+3
007dbb 940e 41b4 	CALL _TIMER_checkTimerExceed
007dbd 9730      	SBIW R30,0
007dbe f459      	BRNE _0x20E0056
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007dbf c00d      	RJMP _0x20E0055
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007dc0 eeed     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007dc1 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007dc2 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007dc3 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007dc4 940e e324 	CALL __PUTPARD1
007dc6 91e0 148b 	LDS  R30,_muteMode
007dc8 940e c309 	CALL SUBOPT_0x29
                 ; 0011 01FF                                 return 1;
                 _0x20E0056:
007dca e0e1      	LDI  R30,LOW(1)
007dcb e0f0      	LDI  R31,HIGH(1)
007dcc 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0055:
007dcd e0e0      	LDI  R30,LOW(0)
007dce e0f0      	LDI  R31,HIGH(0)
007dcf 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007dd0 940e ca29 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007dd2 3005     +CPI R16 , LOW ( 5 )
007dd3 e0e0     +LDI R30 , HIGH ( 5 )
007dd4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007dd5 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
007dd6 e8ac      	LDI  R26,LOW(_sensorAlarm)
007dd7 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007dd8 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
007dda e9a1      	LDI  R26,LOW(_dataAlarm)
007ddb e1b4      	LDI  R27,HIGH(_dataAlarm)
007ddc 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0011 0210     }
                +
007dde 5f0f     +SUBI R16 , LOW ( - 1 )
007ddf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007de0 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007de1 e000     +LDI R16 , LOW ( 0 )
007de2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007de3 3100     +CPI R16 , LOW ( 16 )
007de4 e0e0     +LDI R30 , HIGH ( 16 )
007de5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007de6 f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
007de7 e9a6      	LDI  R26,LOW(_dinAlarm)
007de8 e1b4      	LDI  R27,HIGH(_dinAlarm)
007de9 0fa0      	ADD  R26,R16
007dea 1fb1      	ADC  R27,R17
007deb efef      	LDI  R30,LOW(255)
007dec 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
007ded 5f0f     +SUBI R16 , LOW ( - 1 )
007dee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007def cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
007df0 e000     +LDI R16 , LOW ( 0 )
007df1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
007df2 3100     +CPI R16 , LOW ( 16 )
007df3 e0e0     +LDI R30 , HIGH ( 16 )
007df4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007df5 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
007df6 e8a2      	LDI  R26,LOW(_ainAlarm)
007df7 e1b6      	LDI  R27,HIGH(_ainAlarm)
007df8 0fa0      	ADD  R26,R16
007df9 1fb1      	ADC  R27,R17
007dfa efef      	LDI  R30,LOW(255)
007dfb 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
007dfc 5f0f     +SUBI R16 , LOW ( - 1 )
007dfd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007dfe cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
007dff efef      	LDI  R30,LOW(255)
007e00 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
007e01 e0e0      	LDI  R30,LOW(0)
007e02 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
007e04 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
007e06 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
007e08 93e0 1694 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
007e0a 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
007e0c 93e0 1695 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007e0e 93e0 1696 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007e10 940c 8294 	JMP  _0x20E0048
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
007e12 93ba      	ST   -Y,R27
007e13 93aa      	ST   -Y,R26
007e14 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
007e15 940e c234 	CALL SUBOPT_0x9
007e17 8dac      	LDD  R26,Y+28
007e18 8dbd      	LDD  R27,Y+28+1
007e19 940e 4869 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
007e1b e1ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
007e1c e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
007e1d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
007e1e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
007e1f 940e c5ae 	CALL SUBOPT_0x8D
007e21 940e c5ae 	CALL SUBOPT_0x8D
007e23 940e c5ae 	CALL SUBOPT_0x8D
007e25 940e e324 	CALL __PUTPARD1
007e27 e08c      	LDI  R24,12
007e28 d1de      	RCALL _printOLED
007e29 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
007e2a e2ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
007e2b e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
007e2c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
007e2d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
007e2e 940e c467 	CALL SUBOPT_0x5B
007e30 940e c828 	CALL SUBOPT_0xF2
007e32 940e d28a 	CALL SUBOPT_0x286
                 ; 0012 0019 
                 ; 0012 001A }
007e34 966c      	ADIW R28,28
007e35 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
007e36 940e ca29 	CALL SUBOPT_0x14C
                 ;	i -> R16,R17
                 _0x240004:
                +
007e38 3005     +CPI R16 , LOW ( 5 )
007e39 e0e0     +LDI R30 , HIGH ( 5 )
007e3a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007e3b f014      	BRLT PC+3
007e3c 940c 7eb3 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
007e3e 940e d204 	CALL SUBOPT_0x272
007e40 f411      	BRNE PC+3
007e41 940c 7ea8 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
007e43 940e d28f 	CALL SUBOPT_0x287
                +
007e45 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007e46 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007e47 81e0      	LD   R30,Z
007e48 940e c314 	CALL SUBOPT_0x2B
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
007e4a f469      	BRNE _0x24000A
                +
007e4b e3eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007e4c e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007e4d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007e4e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007e4f 940e d295 	CALL SUBOPT_0x288
007e51 940e d28f 	CALL SUBOPT_0x287
007e53 940e c2c8 	CALL SUBOPT_0x20
007e55 940e d299 	CALL SUBOPT_0x289
                 ; 0012 0028                                                 break;
007e57 c04f      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
007e58 38e1      	CPI  R30,LOW(0x81)
007e59 e0a0      	LDI  R26,HIGH(0x81)
007e5a 07fa      	CPC  R31,R26
007e5b f449      	BRNE _0x24000B
                +
007e5c e4e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007e5d e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007e5e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007e5f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007e60 940e d295 	CALL SUBOPT_0x288
007e62 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 002A                                                 break;
007e64 c042      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007e65 38e2      	CPI  R30,LOW(0x82)
007e66 e0a0      	LDI  R26,HIGH(0x82)
007e67 07fa      	CPC  R31,R26
007e68 f449      	BRNE _0x24000C
                +
007e69 e5e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
007e6a e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
007e6b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007e6c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007e6d 940e d295 	CALL SUBOPT_0x288
007e6f 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 002C                                                 break;
007e71 c035      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007e72 38e4      	CPI  R30,LOW(0x84)
007e73 e0a0      	LDI  R26,HIGH(0x84)
007e74 07fa      	CPC  R31,R26
007e75 f449      	BRNE _0x24000D
                +
007e76 e5eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
007e77 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
007e78 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
007e79 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
007e7a 940e d295 	CALL SUBOPT_0x288
007e7c 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 002E                                                 break;
007e7e c028      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007e7f 39e0      	CPI  R30,LOW(0x90)
007e80 e0a0      	LDI  R26,HIGH(0x90)
007e81 07fa      	CPC  R31,R26
007e82 f449      	BRNE _0x24000E
                +
007e83 e6e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007e84 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007e85 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
007e86 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
007e87 940e d295 	CALL SUBOPT_0x288
007e89 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 0030                                                 break;
007e8b c01b      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007e8c 3fef      	CPI  R30,LOW(0xFF)
007e8d e0a0      	LDI  R26,HIGH(0xFF)
007e8e 07fa      	CPC  R31,R26
007e8f f449      	BRNE _0x240010
                +
007e90 e7e1     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007e91 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007e92 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007e93 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007e94 940e d295 	CALL SUBOPT_0x288
007e96 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 0032                                                 break;
007e98 c00e      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
007e99 e8e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
007e9a e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
007e9b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007e9c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007e9d 940e d295 	CALL SUBOPT_0x288
007e9f 940e d28f 	CALL SUBOPT_0x287
                +
007ea1 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007ea2 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007ea3 81e0      	LD   R30,Z
007ea4 940e d035 	CALL SUBOPT_0x231
                 ; 0012 0034                                                 return;
007ea6 c3ed      	RJMP _0x20E0048
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
007ea7 c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
007ea8 ebec     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
007ea9 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
007eaa e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
007eab e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
007eac 940e d295 	CALL SUBOPT_0x288
007eae 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007eb0 5f0f     +SUBI R16 , LOW ( - 1 )
007eb1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007eb2 cf85      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007eb3 c3e0      	RJMP _0x20E0048
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007eb4 940e e329 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007eb6 81ec      	LDD  R30,Y+4
007eb7 30e0      	CPI  R30,0
007eb8 f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
007eb9 ece5     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
007eba e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
007ebb e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
007ebc e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007ebd c033      	RJMP _0x240056
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007ebe 940e d2a1 	CALL SUBOPT_0x28B
007ec0 f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007ec1 ece9     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007ec2 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007ec3 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007ec4 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007ec5 c02b      	RJMP _0x240056
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007ec6 940e d2a1 	CALL SUBOPT_0x28B
007ec8 f018      	BRLO _0x240017
007ec9 940e d2aa 	CALL SUBOPT_0x28C
007ecb f008      	BRLO _0x240018
                 _0x240017:
007ecc c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007ecd eced     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007ece e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007ecf e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007ed0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007ed1 c01f      	RJMP _0x240056
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007ed2 940e d2aa 	CALL SUBOPT_0x28C
007ed4 f018      	BRLO _0x24001B
007ed5 940e d2b3 	CALL SUBOPT_0x28D
007ed7 f008      	BRLO _0x24001C
                 _0x24001B:
007ed8 c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
007ed9 ede1     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
007eda e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
007edb e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
007edc e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007edd c013      	RJMP _0x240056
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007ede 940e d2b3 	CALL SUBOPT_0x28D
007ee0 f018      	BRLO _0x24001F
007ee1 940e d2bc 	CALL SUBOPT_0x28E
007ee3 f008      	BRLO _0x240020
                 _0x24001F:
007ee4 c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007ee5 ede5     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007ee6 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
007ee7 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
007ee8 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
007ee9 c007      	RJMP _0x240056
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
007eea 940e d2bc 	CALL SUBOPT_0x28E
007eec f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
007eed ede9     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
007eee e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
007eef e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
007ef0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240056:
007ef1 940e e324 	CALL __PUTPARD1
007ef3 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0054:
007ef5 9625      	ADIW R28,5
007ef6 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
007ef7 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007ef8 81aa      	LDD  R26,Y+2
007ef9 23aa      	TST  R26
007efa f022      	BRMI _0x240024
007efb 81a9      	LDD  R26,Y+1
007efc 81ba      	LDD  R27,Y+1+1
007efd 9718      	SBIW R26,8
007efe f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
007eff eded     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
007f00 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
007f01 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
007f02 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
007f03 940e c1f5 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
007f05 c045      	RJMP _0x20E0052
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
007f06 81a9      	LDD  R26,Y+1
007f07 81ba      	LDD  R27,Y+1+1
007f08 e0e3      	LDI  R30,LOW(3)
007f09 940e e242 	CALL __MULB1W2U
007f0b 5be1      	SUBI R30,LOW(-_din_config)
007f0c 4efd      	SBCI R31,HIGH(-_din_config)
007f0d 81a0      	LD   R26,Z
007f0e 30a1      	CPI  R26,LOW(0x1)
007f0f f5d9      	BRNE _0x20E0052
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
007f10 81a8      	LD   R26,Y
007f11 30a0      	CPI  R26,LOW(0x0)
007f12 f011      	BREQ _0x240028
007f13 30a1      	CPI  R26,LOW(0x1)
007f14 f409      	BRNE _0x240029
                 _0x240028:
007f15 c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
007f16 c034      	RJMP _0x20E0052
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
007f17 e1e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
007f18 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
007f19 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
007f1a e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
007f1b c024      	RJMP _0x20E0053
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
007f1c 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007f1d 81aa      	LDD  R26,Y+2
007f1e 23aa      	TST  R26
007f1f f022      	BRMI _0x24002B
007f20 81a9      	LDD  R26,Y+1
007f21 81ba      	LDD  R27,Y+1+1
007f22 9718      	SBIW R26,8
007f23 f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
007f24 e1ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
007f25 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
007f26 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
007f27 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
007f28 940e c1f5 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
007f2a c020      	RJMP _0x20E0052
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
007f2b 81a9      	LDD  R26,Y+1
007f2c 81ba      	LDD  R27,Y+1+1
007f2d e2e6      	LDI  R30,LOW(38)
007f2e 940e e242 	CALL __MULB1W2U
007f30 58e1      	SUBI R30,LOW(-_dout_config)
007f31 4efd      	SBCI R31,HIGH(-_dout_config)
007f32 81a0      	LD   R26,Z
007f33 30a1      	CPI  R26,LOW(0x1)
007f34 f4b1      	BRNE _0x20E0052
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
007f35 81a8      	LD   R26,Y
007f36 30a0      	CPI  R26,LOW(0x0)
007f37 f011      	BREQ _0x24002F
007f38 30a1      	CPI  R26,LOW(0x1)
007f39 f409      	BRNE _0x240030
                 _0x24002F:
007f3a c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
007f3b c00f      	RJMP _0x20E0052
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
007f3c e5e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
007f3d e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
007f3e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
007f3f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0053:
007f40 940e e324 	CALL __PUTPARD1
007f42 81ed      	LDD  R30,Y+5
007f43 81fe      	LDD  R31,Y+5+1
007f44 940e d134 	CALL SUBOPT_0x254
007f46 85e8      	LDD  R30,Y+8
007f47 940e c4a6 	CALL SUBOPT_0x65
007f49 940e d28a 	CALL SUBOPT_0x286
                 ; 0012 007E }
                 _0x20E0052:
007f4b 9623      	ADIW R28,3
007f4c 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007f4d 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007f4e e5ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007f4f e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007f50 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007f51 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007f52 940e d2ca 	CALL SUBOPT_0x290
007f54 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 0083 }
007f56 c12e      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
007f57 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007f58 e6e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
007f59 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
007f5a e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
007f5b e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
007f5c 940e d2ca 	CALL SUBOPT_0x290
007f5e 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 0088 }
007f60 c124      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007f61 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007f62 e6ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007f63 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007f64 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007f65 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007f66 940e d2ca 	CALL SUBOPT_0x290
007f68 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 008D }
007f6a c11a      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
007f6b 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007f6c e7e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007f6d e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007f6e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007f6f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007f70 940e d2ca 	CALL SUBOPT_0x290
007f72 940e d29c 	CALL SUBOPT_0x28A
                 ; 0012 0092 }
007f74 c110      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007f75 972a      	SBIW R28,10
007f76 940e d22e 	CALL SUBOPT_0x277
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
007f78 e000     +LDI R16 , LOW ( 0 )
007f79 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
007f7a 3005     +CPI R16 , LOW ( 5 )
007f7b e0e0     +LDI R30 , HIGH ( 5 )
007f7c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007f7d f014      	BRLT PC+3
007f7e 940c 7fbf 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007f80 940e d204 	CALL SUBOPT_0x272
007f82 f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007f83 01f8      	MOVW R30,R16
007f84 01de      	MOVW R26,R28
007f85 9619      	ADIW R26,9
007f86 0fea      	ADD  R30,R26
007f87 1ffb      	ADC  R31,R27
007f88 010f      	MOVW R0,R30
007f89 e8ac      	LDI  R26,LOW(_sensorAlarm)
007f8a e1b4      	LDI  R27,HIGH(_sensorAlarm)
007f8b 940e d233 	CALL SUBOPT_0x278
007f8d f011      	BREQ _0x240035
007f8e e0e1      	LDI  R30,LOW(1)
007f8f c001      	RJMP _0x240036
                 _0x240035:
007f90 e0e0      	LDI  R30,LOW(0)
                 _0x240036:
007f91 01d0      	MOVW R26,R0
007f92 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
007f93 e1ad     +LDI R26 , 29
007f94 9fa0     +MUL R26 , R16
007f95 01f0     +MOVW R30 , R0
007f96 9fa1     +MUL R26 , R17
007f97 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
007f98 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
007f99 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
007f9a 81e0      	LD   R30,Z
007f9b 30e0      	CPI  R30,0
007f9c f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
007f9d 01f8      	MOVW R30,R16
007f9e 01de      	MOVW R26,R28
007f9f 9614      	ADIW R26,4
007fa0 0fea      	ADD  R30,R26
007fa1 1ffb      	ADC  R31,R27
007fa2 010f      	MOVW R0,R30
007fa3 e9a1      	LDI  R26,LOW(_dataAlarm)
007fa4 e1b4      	LDI  R27,HIGH(_dataAlarm)
007fa5 940e d233 	CALL SUBOPT_0x278
007fa7 f011      	BREQ _0x240039
007fa8 e0e1      	LDI  R30,LOW(1)
007fa9 c001      	RJMP _0x24003A
                 _0x240039:
007faa e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
007fab 01d0      	MOVW R26,R0
007fac c005      	RJMP _0x240057
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
007fad 01de      	MOVW R26,R28
007fae 9614      	ADIW R26,4
007faf 0fa0      	ADD  R26,R16
007fb0 1fb1      	ADC  R27,R17
007fb1 e0e0      	LDI  R30,LOW(0)
                 _0x240057:
007fb2 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
007fb3 c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
007fb4 01de      	MOVW R26,R28
007fb5 9619      	ADIW R26,9
007fb6 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0012 00A8             flagData[i]         = 0;
007fb8 01de      	MOVW R26,R28
007fb9 9614      	ADIW R26,4
007fba 940e ca2e 	CALL SUBOPT_0x14D
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
007fbc 5f0f     +SUBI R16 , LOW ( - 1 )
007fbd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007fbe cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
007fbf 940e d244 	CALL SUBOPT_0x27B
007fc1 f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
007fc2 91e0 14a6 	LDS  R30,_batteryAlarm
007fc4 30e0      	CPI  R30,0
007fc5 f011      	BREQ _0x24003F
007fc6 e0e1      	LDI  R30,LOW(1)
007fc7 c001      	RJMP _0x240040
                 _0x24003F:
007fc8 e0e0      	LDI  R30,LOW(0)
                 _0x240040:
007fc9 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
007fca c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
007fcb e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
007fcc 940e d256 	CALL SUBOPT_0x27D
007fce f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
007fcf 91e0 14a7 	LDS  R30,_memoryAlarm
007fd1 30e0      	CPI  R30,0
007fd2 f011      	BREQ _0x240044
007fd3 e0e1      	LDI  R30,LOW(1)
007fd4 c001      	RJMP _0x240045
                 _0x240044:
007fd5 e0e0      	LDI  R30,LOW(0)
                 _0x240045:
007fd6 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
007fd7 c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
007fd8 e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
007fd9 e7e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
007fda e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
007fdb e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
007fdc e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
007fdd 940e e324 	CALL __PUTPARD1
007fdf 85ed      	LDD  R30,Y+13
007fe0 940e c4a6 	CALL SUBOPT_0x65
007fe2 89ea      	LDD  R30,Y+18
007fe3 940e c4a6 	CALL SUBOPT_0x65
007fe5 89ef      	LDD  R30,Y+23
007fe6 940e c4a6 	CALL SUBOPT_0x65
007fe8 8dec      	LDD  R30,Y+28
007fe9 940e c4a6 	CALL SUBOPT_0x65
007feb a1e9      	LDD  R30,Y+33
007fec 940e c4a6 	CALL SUBOPT_0x65
007fee 8dec      	LDD  R30,Y+28
007fef 940e c4a6 	CALL SUBOPT_0x65
007ff1 a1e9      	LDD  R30,Y+33
007ff2 940e c4a6 	CALL SUBOPT_0x65
007ff4 a1ee      	LDD  R30,Y+38
007ff5 940e c4a6 	CALL SUBOPT_0x65
007ff7 a5eb      	LDD  R30,Y+43
007ff8 940e c4a6 	CALL SUBOPT_0x65
007ffa a9e8      	LDD  R30,Y+48
007ffb 940e c4a6 	CALL SUBOPT_0x65
007ffd 2fe3      	MOV  R30,R19
007ffe 940e c4a6 	CALL SUBOPT_0x65
008000 2fe2      	MOV  R30,R18
008001 940e c4a6 	CALL SUBOPT_0x65
008003 e380      	LDI  R24,48
008004 d002      	RCALL _printOLED
008005 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
008006 c129      	RJMP _0x20E004F
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
008007 92ff      	PUSH R15
008008 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
008009 97ef      	SBIW R28,63
00800a 9721      	SBIW R28,1
00800b 931a      	ST   -Y,R17
00800c 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
00800d 01de      	MOVW R26,R28
00800e 96de      	ADIW R26,62
00800f 940e e178 	CALL __ADDW2R15
008011 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
008012 940e ce2f 	CALL SUBOPT_0x1F2
008014 01de      	MOVW R26,R28
008015 5bac      	SUBI R26,LOW(-(68))
008016 4fbf      	SBCI R27,HIGH(-(68))
008017 940e d2cf 	CALL SUBOPT_0x291
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
008019 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
00801a e0a1      	LDI  R26,LOW(1)
00801b 940e 40fc 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
00801d e0e2      	LDI  R30,LOW(2)
00801e 93ea      	ST   -Y,R30
00801f 01de      	MOVW R26,R28
008020 9613      	ADIW R26,3
008021 940e 4144 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
008023 e0a4      	LDI  R26,LOW(4)
008024 940e 40fc 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
008026 01fe      	MOVW R30,R28
008027 96fe      	ADIW R30,62
008028 940e d238 	CALL SUBOPT_0x279
00802a 940e 41ca 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     /*bongkot OLED assume flag_oled_ack = 1(OLED has connect and ack);*/
                 ; 0012 00E1     //flag_oled_ack = 1;
                 ; 0012 00E2 
                 ; 0012 00E3     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004A:
00802c 99f0      	SBIC 0x1E,0
00802d c00c      	RJMP _0x24004D
                +
00802e 01de     +MOVW R26 , R28
00802f 5ca2     +SUBI R26 , LOW ( - 62 )
008030 4fbf     +SBCI R27 , HIGH ( - 62 )
008031 900d     +LD R0 , X +
008032 901d     +LD R1 , X +
008033 918d     +LD R24 , X +
008034 919c     +LD R25 , X
008035 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
008036 940e 41b4 	CALL _TIMER_checkTimerExceed
008038 9730      	SBIW R30,0
008039 f009      	BREQ _0x24004E
                 _0x24004D:
00803a c001      	RJMP _0x24004C
                 _0x24004E:
00803b cff0      	RJMP _0x24004A
                 _0x24004C:
                 ; 0012 00E4 
                 ; 0012 00E5     if(!flag_oled_ack){
00803c 99f0      	SBIC 0x1E,0
00803d c006      	RJMP _0x24004F
                 ; 0012 00E6         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
00803e e9ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
00803f e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
008040 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
008041 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
008042 940e c1f5 	CALL SUBOPT_0x3
                 ; 0012 00E7     }
                 ; 0012 00E8 
                 ; 0012 00E9 }
                 _0x24004F:
008044 8119      	LDD  R17,Y+1
008045 8108      	LDD  R16,Y+0
008046 96ef      	ADIW R28,63
008047 9623      	ADIW R28,3
008048 90ff      	POP  R15
008049 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00F1 {
                 _OLED_reset:
                 ; 0012 00F2     OLED_RESET = 0;            // Active SOLED Reset
00804a 98a5      	CBI  0x14,5
                 ; 0012 00F3     delay_ms(1);
00804b 940e c51f 	CALL SUBOPT_0x75
00804d 940e dfc5 	CALL _delay_ms
                 ; 0012 00F4     OLED_RESET = 1;            // Dective SOLED Reset for start use.
00804f 9aa5      	SBI  0x14,5
                 ; 0012 00F5     delay_ms(1);
008050 940e c51f 	CALL SUBOPT_0x75
008052 940e dfc5 	CALL _delay_ms
                 ; 0012 00F6 
                 ; 0012 00F7 }
008054 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00FA {
                 _init_oled:
                 ; 0012 00FB     printDebug("Initializing OLED.. ");
                +
008055 ebe6     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
008056 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
008057 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
008058 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
008059 940e c1f5 	CALL SUBOPT_0x3
                 ; 0012 00FC     flag_oled_ack = 0;
00805b 98f0      	CBI  0x1E,0
                 ; 0012 00FD     OLED_reset();
00805c dfed      	RCALL _OLED_reset
                 ; 0012 00FE     printDebug("OK\r\n");
                +
00805d eceb     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
00805e e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
00805f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
008060 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
008061 940e e324 	CALL __PUTPARD1
008063 e080      	LDI  R24,0
008064 940e 9e86 	CALL _printDebug
008066 c1db      	RJMP _0x20E004A
                 ; 0012 00FF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
008067 93aa      	ST   -Y,R26
                 ;	res -> Y+0
008068 81a8      	LD   R26,Y
008069 30a1      	CPI  R26,LOW(0x1)
00806a f010      	BRLO _0x260005
00806b 31a0      	CPI  R26,LOW(0x10)
00806c f008      	BRLO _0x260006
                 _0x260005:
00806d c017      	RJMP _0x260004
                 _0x260006:
                +
00806e eae3     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
00806f e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
008070 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
008071 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
008072 940e e324 	CALL __PUTPARD1
008074 81ec      	LDD  R30,Y+4
008075 e6aa      	LDI  R26,LOW(_error_msg*2)
008076 e0b1      	LDI  R27,HIGH(_error_msg*2)
008077 e080      	LDI  R24,BYTE3(_error_msg*2)
008078 27ff      	CLR  R31
008079 2766      	CLR  R22
00807a 2777      	CLR  R23
00807b 940e e1e7 	CALL __LSLD1
00807d 940e e1e7 	CALL __LSLD1
00807f 940e e17c 	CALL __ADDD12
008081 940e e309 	CALL __GETD1PF
008083 940e cbcf 	CALL SUBOPT_0x18A
                 _0x260004:
                 _0x20E0051:
008085 9621      	ADIW R28,1
008086 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
008087 940e c55a 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
008089 940e d1c5 	CALL SUBOPT_0x268
00808b f449      	BRNE _0x260007
                +
00808c eaef     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
00808d e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
00808e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
00808f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
008090 940e c1f5 	CALL SUBOPT_0x3
008092 efef      	LDI  R30,LOW(65535)
008093 efff      	LDI  R31,HIGH(65535)
008094 c09b      	RJMP _0x20E004F
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
008095 940e cc8e 	CALL SUBOPT_0x1AE
008097 940e d2d8 	CALL SUBOPT_0x292
                 ; 0013 002F     if(res != FR_OK){
008099 f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
00809a ede2     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
00809b e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
00809c e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
00809d e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
00809e 940e c5ae 	CALL SUBOPT_0x8D
0080a0 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0013 0031         error(res);
0080a2 940e d2df 	CALL SUBOPT_0x293
                 ; 0013 0032         return -1;
0080a4 c08b      	RJMP _0x20E004F
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
0080a5 940e cc8e 	CALL SUBOPT_0x1AE
0080a7 940e cbf8 	CALL SUBOPT_0x193
0080a9 940e cbf8 	CALL SUBOPT_0x193
0080ab b7ad      	IN   R26,SPL
0080ac b7be      	IN   R27,SPH
0080ad 9711      	SBIW R26,1
0080ae 933f      	PUSH R19
0080af 932f      	PUSH R18
0080b0 940e b917 	CALL _f_write
0080b2 912f      	POP  R18
0080b3 913f      	POP  R19
0080b4 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
0080b5 3010      	CPI  R17,0
0080b6 f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
0080b7 efe8     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
0080b8 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
0080b9 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
0080ba e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
0080bb 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
0080bd 940e ca9b 	CALL SUBOPT_0x15B
0080bf 81ae      	LDD  R26,Y+6
0080c0 81bf      	LDD  R27,Y+6+1
0080c1 940e 9f0a 	CALL _print_payload
                 ; 0013 0039         error(res);
0080c3 2fa1      	MOV  R26,R17
0080c4 dfa2      	RCALL _error
                 ; 0013 003A         return -2;
0080c5 efee      	LDI  R30,LOW(65534)
0080c6 efff      	LDI  R31,HIGH(65534)
0080c7 c068      	RJMP _0x20E004F
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
0080c8 81ec      	LDD  R30,Y+4
0080c9 81fd      	LDD  R31,Y+4+1
0080ca 17e2      	CP   R30,R18
0080cb 07f3      	CPC  R31,R19
0080cc f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
0080cd e1ea     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
0080ce e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
0080cf e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
0080d0 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
0080d1 940e e324 	CALL __PUTPARD1
0080d3 01f9      	MOVW R30,R18
0080d4 940e c357 	CALL SUBOPT_0x34
0080d6 85ec      	LDD  R30,Y+12
0080d7 85fd      	LDD  R31,Y+12+1
0080d8 940e c9d8 	CALL SUBOPT_0x13E
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
0080da efed      	LDI  R30,LOW(65533)
0080db efff      	LDI  R31,HIGH(65533)
0080dc c053      	RJMP _0x20E004F
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
0080dd c050      	RJMP _0x20E0050
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
0080de 940e c55a 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
0080e0 940e d1c5 	CALL SUBOPT_0x268
0080e2 f449      	BRNE _0x26000B
                +
0080e3 e4e7     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
0080e4 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
0080e5 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
0080e6 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
0080e7 940e c1f5 	CALL SUBOPT_0x3
0080e9 efef      	LDI  R30,LOW(65535)
0080ea efff      	LDI  R31,HIGH(65535)
0080eb c044      	RJMP _0x20E004F
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
0080ec 940e cc8e 	CALL SUBOPT_0x1AE
0080ee 940e d2d8 	CALL SUBOPT_0x292
                 ; 0013 004D     if(res != FR_OK){
0080f0 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
0080f1 e6e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
0080f2 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
0080f3 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
0080f4 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
0080f5 940e c5ae 	CALL SUBOPT_0x8D
0080f7 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0013 004F         error(res);
0080f9 940e d2df 	CALL SUBOPT_0x293
                 ; 0013 0050         return -1;
0080fb c034      	RJMP _0x20E004F
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
0080fc 940e cc8e 	CALL SUBOPT_0x1AE
0080fe 940e cbf8 	CALL SUBOPT_0x193
008100 940e cbf8 	CALL SUBOPT_0x193
008102 b7ad      	IN   R26,SPL
008103 b7be      	IN   R27,SPH
008104 9711      	SBIW R26,1
008105 933f      	PUSH R19
008106 932f      	PUSH R18
008107 940e b7b4 	CALL _f_read
008109 912f      	POP  R18
00810a 913f      	POP  R19
00810b 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
00810c 3010      	CPI  R17,0
00810d f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
00810e e8ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
00810f e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
008110 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
008111 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
008112 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
008114 2fa1      	MOV  R26,R17
008115 df51      	RCALL _error
                 ; 0013 0057         return -2;
008116 efee      	LDI  R30,LOW(65534)
008117 efff      	LDI  R31,HIGH(65534)
008118 c017      	RJMP _0x20E004F
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
008119 81ec      	LDD  R30,Y+4
00811a 81fd      	LDD  R31,Y+4+1
00811b 17e2      	CP   R30,R18
00811c 07f3      	CPC  R31,R19
00811d f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
00811e eaee     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
00811f e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
008120 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
008121 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
008122 940e e324 	CALL __PUTPARD1
008124 01f9      	MOVW R30,R18
008125 940e c357 	CALL SUBOPT_0x34
008127 85ec      	LDD  R30,Y+12
008128 85fd      	LDD  R31,Y+12+1
008129 940e c9d8 	CALL SUBOPT_0x13E
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
00812b efed      	LDI  R30,LOW(65533)
00812c efff      	LDI  R31,HIGH(65533)
00812d c002      	RJMP _0x20E004F
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0050:
00812e e0e0      	LDI  R30,LOW(0)
00812f e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
008130 940e e3a2 	CALL __LOADLOCR4
008132 962e      	ADIW R28,14
008133 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
008134 940e c81a 	CALL SUBOPT_0xEE
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
008136 e1ef      	LDI  R30,LOW(_root_path)
008137 e1f9      	LDI  R31,HIGH(_root_path)
008138 940e d2e5 	CALL SUBOPT_0x294
00813a e1ad      	LDI  R26,LOW(_pfat)
00813b e1b9      	LDI  R27,HIGH(_pfat)
00813c 940e bcdf 	CALL _f_getfree
00813e 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
00813f 3010      	CPI  R17,0
008140 f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
008141 edea     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
008142 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
008143 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
008144 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
008145 940e d2ec 	CALL SUBOPT_0x295
008147 940e c26b 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
008149 2fa1      	MOV  R26,R17
00814a 940e d2f2 	CALL SUBOPT_0x296
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
00814c c012      	RJMP _0x20E004E
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
00814d 91e0 191d 	LDS  R30,_pfat
00814f 91f0 191e 	LDS  R31,_pfat+1
008151 940e d300 	CALL SUBOPT_0x297
008153 940e d303 	CALL SUBOPT_0x298
008155 940e d308 	CALL SUBOPT_0x299
008157 940e e1e2 	CALL __LSRD1
008159 81ad      	LDD  R26,Y+5
00815a 81be      	LDD  R27,Y+5+1
00815b 940e e2ff 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
00815d e0e0      	LDI  R30,LOW(0)
00815e e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
00815f 8118      	LDD  R17,Y+0
008160 9627      	ADIW R28,7
008161 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
008162 931a      	ST   -Y,R17
                 ;	res -> R17
008163 e0e0      	LDI  R30,LOW(0)
008164 93ea      	ST   -Y,R30
008165 eeab      	LDI  R26,LOW(_fat)
008166 e1b6      	LDI  R27,HIGH(_fat)
008167 940e b65c 	CALL _f_mount
008169 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
00816a 3010      	CPI  R17,0
00816b f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
00816c e0e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
00816d e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
00816e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
00816f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
008170 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
008172 940e d2df 	CALL SUBOPT_0x293
                 ; 0013 0083         return -1;
008174 c008      	RJMP _0x20E004D
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
008175 e2e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
008176 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
008177 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
008178 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
008179 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
00817b e0e0      	LDI  R30,LOW(0)
00817c e0f0      	LDI  R31,HIGH(0)
                 _0x20E004D:
00817d 9119      	LD   R17,Y+
00817e 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
00817f 93aa      	ST   -Y,R26
008180 97ef      	SBIW R28,63
008181 9763      	SBIW R28,19
008182 50d2      	SUBI R29,2
008183 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
008184 940e d1c5 	CALL SUBOPT_0x268
008186 f449      	BRNE _0x260014
                +
008187 ecee     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
008188 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
008189 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
00818a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
00818b 940e c1f5 	CALL SUBOPT_0x3
00818d efef      	LDI  R30,LOW(65535)
00818e efff      	LDI  R31,HIGH(65535)
00818f c048      	RJMP _0x20E004C
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
008190 01fe      	MOVW R30,R28
008191 9631      	ADIW R30,1
008192 93fa      	ST   -Y,R31
008193 93ea      	ST   -Y,R30
008194 940e d30d 	CALL SUBOPT_0x29A
                +
008196 01fe     +MOVW R30 , R28
008197 5ae2     +SUBI R30 , LOW ( - 606 )
008198 4ffd     +SBCI R31 , HIGH ( - 606 )
008199 9001     +LD R0 , Z +
00819a 81f0     +LD R31 , Z
00819b 2de0     +MOV R30 , R0
                 	__GETW1SX 606
00819c 940e c357 	CALL SUBOPT_0x34
00819e e088      	LDI  R24,8
00819f 940e c107 	CALL _sprintf
0081a1 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
0081a2 01de     +MOVW R26 , R28
0081a3 5aad     +SUBI R26 , LOW ( - 595 )
0081a4 4fbd     +SBCI R27 , HIGH ( - 595 )
0081a5 91ac     +LD R26 , X
                 	__GETB2SX 595
0081a6 30a1      	CPI  R26,LOW(0x1)
0081a7 f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
0081a8 01fe      	MOVW R30,R28
0081a9 96f3      	ADIW R30,51
0081aa 940e d2e5 	CALL SUBOPT_0x294
0081ac e0aa      	LDI  R26,LOW(10)
0081ad c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
0081ae 01fe      	MOVW R30,R28
0081af 96f3      	ADIW R30,51
0081b0 940e d2e5 	CALL SUBOPT_0x294
0081b2 e0a6      	LDI  R26,LOW(6)
                 _0x260021:
0081b3 940e b687 	CALL _f_open
0081b5 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
0081b6 3018      	CPI  R17,8
0081b7 f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
0081b8 e0e0      	LDI  R30,LOW(0)
0081b9 e0f0      	LDI  R31,HIGH(0)
0081ba c01d      	RJMP _0x20E004C
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
0081bb 3010      	CPI  R17,0
0081bc f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
0081bd efe7     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
0081be e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
0081bf e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
0081c0 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
0081c1 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
0081c3 940e d2df 	CALL SUBOPT_0x293
                 ; 0013 00DB         return -1;
0081c5 c012      	RJMP _0x20E004C
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
0081c6 01de      	MOVW R26,R28
0081c7 96d3      	ADIW R26,51
0081c8 940e bb34 	CALL _f_close
0081ca 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
0081cb 3010      	CPI  R17,0
0081cc f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
0081cd e1e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
0081ce e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
0081cf e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
0081d0 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
0081d1 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
0081d3 940e d2df 	CALL SUBOPT_0x293
                 ; 0013 00E4         return -1;
0081d5 c002      	RJMP _0x20E004C
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
0081d6 e0e1      	LDI  R30,LOW(1)
0081d7 e0f0      	LDI  R31,HIGH(1)
                 _0x20E004C:
0081d8 8118      	LDD  R17,Y+0
0081d9 96ef      	ADIW R28,63
0081da 9667      	ADIW R28,23
0081db 5fde      	SUBI R29,-2
0081dc 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
0081dd 93ba      	ST   -Y,R27
0081de 93aa      	ST   -Y,R26
0081df 97e2      	SBIW R28,50
0081e0 931a      	ST   -Y,R17
0081e1 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
0081e2 940e d1c5 	CALL SUBOPT_0x268
0081e4 f449      	BRNE _0x26001B
                +
0081e5 e3ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
0081e6 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
0081e7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
0081e8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
0081e9 940e c1f5 	CALL SUBOPT_0x3
0081eb efef      	LDI  R30,LOW(65535)
0081ec efff      	LDI  R31,HIGH(65535)
0081ed c02a      	RJMP _0x20E004B
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
0081ee 940e ce2f 	CALL SUBOPT_0x1F2
0081f0 940e d30d 	CALL SUBOPT_0x29A
0081f2 adee      	LDD  R30,Y+62
0081f3 adff      	LDD  R31,Y+62+1
0081f4 940e c357 	CALL SUBOPT_0x34
0081f6 e088      	LDI  R24,8
0081f7 940e c107 	CALL _sprintf
0081f9 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
0081fa a9ee      	LDD  R30,Y+54
0081fb a9ff      	LDD  R31,Y+54+1
0081fc 940e d312 	CALL SUBOPT_0x29B
0081fe e0a3      	LDI  R26,LOW(3)
0081ff 940e b687 	CALL _f_open
008201 2f0e      	MOV  R16,R30
008202 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
008203 2e00      	MOV  R0,R16
008204 2a01      	OR   R0,R17
008205 f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
008206 e5ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
008207 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
008208 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
008209 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
00820a 940e e324 	CALL __PUTPARD1
00820c ade8      	LDD  R30,Y+56
00820d adf9      	LDD  R31,Y+56+1
00820e 940e c357 	CALL SUBOPT_0x34
008210 940e c26b 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
008212 2fa0      	MOV  R26,R16
008213 940e d2f2 	CALL SUBOPT_0x296
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
008215 c002      	RJMP _0x20E004B
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
008216 e0e0      	LDI  R30,LOW(0)
008217 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004B:
008218 8119      	LDD  R17,Y+1
008219 8108      	LDD  R16,Y+0
00821a 96e8      	ADIW R28,56
00821b 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
00821c 940e c566 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
00821e 940e d1c5 	CALL SUBOPT_0x268
008220 f449      	BRNE _0x26001D
                +
008221 e8e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
008222 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
008223 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
008224 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
008225 940e c1f5 	CALL SUBOPT_0x3
008227 efef      	LDI  R30,LOW(65535)
008228 efff      	LDI  R31,HIGH(65535)
008229 c016      	RJMP _0x20E0049
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
00822a 81aa      	LDD  R26,Y+2
00822b 81bb      	LDD  R27,Y+2+1
00822c 940e bb34 	CALL _f_close
00822e 2f0e      	MOV  R16,R30
00822f 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
008230 2e00      	MOV  R0,R16
008231 2a01      	OR   R0,R17
008232 f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
008233 eae6     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
008234 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
008235 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
008236 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
008237 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
008239 2fa0      	MOV  R26,R16
00823a de2c      	RCALL _error
                 ; 0013 0108         return -1;
00823b efef      	LDI  R30,LOW(65535)
00823c efff      	LDI  R31,HIGH(65535)
00823d c002      	RJMP _0x20E0049
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
00823e e0e0      	LDI  R30,LOW(0)
00823f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
008240 8119      	LDD  R17,Y+1
008241 8108      	LDD  R16,Y+0
                 _0x20E004A:
008242 9624      	ADIW R28,4
008243 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
008244 931a      	ST   -Y,R17
008245 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
008246 ece8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
008247 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
008248 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
008249 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
00824a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
00824c eeeb      	LDI  R30,LOW(_fat)
00824d e1f6      	LDI  R31,HIGH(_fat)
00824e 93e0 191d 	STS  _pfat,R30
008250 93f0 191e 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
008252 eea8      	LDI  R26,LOW(1000)
008253 e0b3      	LDI  R27,HIGH(1000)
008254 940e dfc5 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
008256 eeee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
008257 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
008258 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
008259 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
00825a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
00825c df05      	RCALL _SD_mount
00825d 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
00825e 2311      	TST  R17
00825f f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
008260 e0ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
008261 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
008262 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
008263 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
008264 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
008266 efef      	LDI  R30,LOW(65535)
008267 efff      	LDI  R31,HIGH(65535)
008268 c02b      	RJMP _0x20E0048
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
008269 e2ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
00826a e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
00826b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
00826c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
00826d 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
00826f eea8      	LDI  R26,LOW(1000)
008270 e0b3      	LDI  R27,HIGH(1000)
008271 940e dfc5 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
008273 e6ab      	LDI  R26,LOW(_sdFreeSpace)
008274 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
008275 debe      	RCALL _SD_readMemoryRemain
008276 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
008277 2311      	TST  R17
008278 f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
008279 e4eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
00827a e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
00827b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
00827c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
00827d 940e c1f5 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
00827f efef      	LDI  R30,LOW(65535)
008280 efff      	LDI  R31,HIGH(65535)
008281 c012      	RJMP _0x20E0048
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
008282 e7e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
008283 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
008284 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
008285 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
008286 940e e324 	CALL __PUTPARD1
008288 91e0 146b 	LDS  R30,_sdFreeSpace
00828a 91f0 146c 	LDS  R31,_sdFreeSpace+1
00828c 9160 146d 	LDS  R22,_sdFreeSpace+2
00828e 9170 146e 	LDS  R23,_sdFreeSpace+3
008290 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0013 012D 
                 ; 0013 012E     return 0;
008292 e0e0      	LDI  R30,LOW(0)
008293 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0048:
008294 9109      	LD   R16,Y+
008295 9119      	LD   R17,Y+
008296 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
008297 940e e329 	CALL __PUTPARD2
008299 9728      	SBIW R28,8
00829a 940e e39b 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00829c 940e d319 	CALL SUBOPT_0x29C
00829e 940e d31e 	CALL SUBOPT_0x29D
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
0082a0 f44a      	BRPL _0x280009
                +
0082a1 edee     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
0082a2 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
0082a3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
0082a4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
0082a5 940e c1f5 	CALL SUBOPT_0x3
0082a7 efef      	LDI  R30,LOW(65535)
0082a8 efff      	LDI  R31,HIGH(65535)
0082a9 c078      	RJMP _0x20E0047
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
0082aa e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
0082ab 940e d325 	CALL SUBOPT_0x29E
0082ad 940e d32b 	CALL SUBOPT_0x29F
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
0082af 940e d319 	CALL SUBOPT_0x29C
0082b1 940e cecc 	CALL SUBOPT_0x208
0082b3 b7ed      	IN   R30,SPL
0082b4 b7fe      	IN   R31,SPH
0082b5 9731      	SBIW R30,1
0082b6 93fa      	ST   -Y,R31
0082b7 93ea      	ST   -Y,R30
0082b8 934f      	PUSH R20
0082b9 933f      	PUSH R19
0082ba 940e c51f 	CALL SUBOPT_0x75
0082bc ddca      	RCALL _SD_writeData
0082bd 913f      	POP  R19
0082be 914f      	POP  R20
0082bf 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
0082c0 2311      	TST  R17
0082c1 f44a      	BRPL _0x28000A
                +
0082c2 e0ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
0082c3 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
0082c4 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
0082c5 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
0082c6 940e c1f5 	CALL SUBOPT_0x3
0082c8 efef      	LDI  R30,LOW(65535)
0082c9 efff      	LDI  R31,HIGH(65535)
0082ca c057      	RJMP _0x20E0047
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
0082cb 940e d319 	CALL SUBOPT_0x29C
0082cd 940e d32f 	CALL SUBOPT_0x2A0
0082cf 940e e324 	CALL __PUTPARD1
0082d1 01fe      	MOVW R30,R28
0082d2 9678      	ADIW R30,24
0082d3 940e d333 	CALL SUBOPT_0x2A1
0082d5 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
0082d7 f44a      	BRPL _0x28000B
                +
0082d8 e3e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
0082d9 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
0082da e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
0082db e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
0082dc 940e c1f5 	CALL SUBOPT_0x3
0082de efef      	LDI  R30,LOW(65535)
0082df efff      	LDI  R31,HIGH(65535)
0082e0 c041      	RJMP _0x20E0047
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
0082e1 940e d319 	CALL SUBOPT_0x29C
0082e3 940e d33c 	CALL SUBOPT_0x2A3
0082e5 01fe      	MOVW R30,R28
0082e6 9676      	ADIW R30,22
0082e7 93fa      	ST   -Y,R31
0082e8 93ea      	ST   -Y,R30
0082e9 940e c518 	CALL SUBOPT_0x73
0082eb 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
0082ed f44a      	BRPL _0x28000C
                +
0082ee e6eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
0082ef e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
0082f0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
0082f1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
0082f2 940e c1f5 	CALL SUBOPT_0x3
0082f4 efef      	LDI  R30,LOW(65535)
0082f5 efff      	LDI  R31,HIGH(65535)
0082f6 c02b      	RJMP _0x20E0047
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
0082f7 940e d319 	CALL SUBOPT_0x29C
0082f9 940e d345 	CALL SUBOPT_0x2A4
0082fb 940e e324 	CALL __PUTPARD1
0082fd 940e c4d0 	CALL SUBOPT_0x6C
0082ff 940e c525 	CALL SUBOPT_0x77
008301 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
008303 f44a      	BRPL _0x28000D
                +
008304 e9eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
008305 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
008306 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
008307 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
008308 940e c1f5 	CALL SUBOPT_0x3
00830a efef      	LDI  R30,LOW(65535)
00830b efff      	LDI  R31,HIGH(65535)
00830c c015      	RJMP _0x20E0047
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
00830d 940e d319 	CALL SUBOPT_0x29C
00830f 940e d34c 	CALL SUBOPT_0x2A5
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
008311 f45a      	BRPL _0x28000E
                +
008312 ece9     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
008313 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
008314 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
008315 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
008316 940e c5ae 	CALL SUBOPT_0x8D
008318 940e cbcf 	CALL SUBOPT_0x18A
00831a efef      	LDI  R30,LOW(65535)
00831b efff      	LDI  R31,HIGH(65535)
00831c c005      	RJMP _0x20E0047
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
00831d e0e0      	LDI  R30,LOW(0)
00831e 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
008320 85e8      	LDD  R30,Y+8
008321 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
008322 940e e3a2 	CALL __LOADLOCR4
008324 9668      	ADIW R28,24
008325 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
008326 940e c7f5 	CALL SUBOPT_0xE7
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008328 940e d358 	CALL SUBOPT_0x2A6
00832a 940e d35d 	CALL SUBOPT_0x2A7
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
00832c f44a      	BRPL _0x28000F
                +
00832d efea     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
00832e e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
00832f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
008330 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
008331 940e c1f5 	CALL SUBOPT_0x3
008333 efef      	LDI  R30,LOW(65535)
008334 efff      	LDI  R31,HIGH(65535)
008335 c1bd      	RJMP _0x20E0044
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
008336 940e d358 	CALL SUBOPT_0x2A6
008338 940e d364 	CALL SUBOPT_0x2A8
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
00833a f44a      	BRPL _0x280010
                +
00833b e2e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
00833c e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
00833d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
00833e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
00833f 940e c1f5 	CALL SUBOPT_0x3
008341 efef      	LDI  R30,LOW(65535)
008342 efff      	LDI  R31,HIGH(65535)
008343 c1af      	RJMP _0x20E0044
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
008344 940e d36b 	CALL SUBOPT_0x2A9
008346 940e cf8a 	CALL SUBOPT_0x21B
008348 940e c2ce 	CALL SUBOPT_0x21
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
00834a 940e d371 	CALL SUBOPT_0x2AA
00834c f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
00834d e8e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
00834e e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
00834f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
008350 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
008351 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
008353 940e d378 	CALL SUBOPT_0x2AB
                 ; 0014 0050         if(res < 0)
008355 f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
008356 eae2     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
008357 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
008358 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
008359 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
00835a 940e c47f 	CALL SUBOPT_0x5F
00835c 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
00835e e0e1      	LDI  R30,LOW(1)
00835f 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
008361 e0e0      	LDI  R30,LOW(0)
008362 e0f0      	LDI  R31,HIGH(0)
008363 c18f      	RJMP _0x20E0044
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
008364 940e d325 	CALL SUBOPT_0x29E
008366 940e d32b 	CALL SUBOPT_0x29F
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
008368 940e d358 	CALL SUBOPT_0x2A6
00836a 940e cecc 	CALL SUBOPT_0x208
00836c b7ed      	IN   R30,SPL
00836d b7fe      	IN   R31,SPH
00836e 9731      	SBIW R30,1
00836f 93fa      	ST   -Y,R31
008370 93ea      	ST   -Y,R30
008371 934f      	PUSH R20
008372 933f      	PUSH R19
008373 940e c51f 	CALL SUBOPT_0x75
008375 dd68      	RCALL _SD_readData
008376 913f      	POP  R19
008377 914f      	POP  R20
008378 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
008379 2311      	TST  R17
00837a f44a      	BRPL _0x280013
                +
00837b ede3     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
00837c e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
00837d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
00837e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
00837f 940e c1f5 	CALL SUBOPT_0x3
008381 efef      	LDI  R30,LOW(65535)
008382 efff      	LDI  R31,HIGH(65535)
008383 c16f      	RJMP _0x20E0044
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
008384 940e d358 	CALL SUBOPT_0x2A6
008386 940e d32f 	CALL SUBOPT_0x2A0
008388 940e c823 	CALL SUBOPT_0xF1
00838a 940e d333 	CALL SUBOPT_0x2A1
00838c 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
00838e f44a      	BRPL _0x280014
                +
00838f efed     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
008390 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
008391 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
008392 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
008393 940e c1f5 	CALL SUBOPT_0x3
008395 efef      	LDI  R30,LOW(65535)
008396 efff      	LDI  R31,HIGH(65535)
008397 c15b      	RJMP _0x20E0044
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
008398 940e d358 	CALL SUBOPT_0x2A6
00839a 940e d33c 	CALL SUBOPT_0x2A3
00839c 8dea      	LDD  R30,Y+26
00839d 8dfb      	LDD  R31,Y+26+1
00839e 93fa      	ST   -Y,R31
00839f 93ea      	ST   -Y,R30
0083a0 940e c518 	CALL SUBOPT_0x73
0083a2 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
0083a4 f44a      	BRPL _0x280015
                +
0083a5 e2ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
0083a6 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
0083a7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
0083a8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
0083a9 940e c1f5 	CALL SUBOPT_0x3
0083ab efef      	LDI  R30,LOW(65535)
0083ac efff      	LDI  R31,HIGH(65535)
0083ad c145      	RJMP _0x20E0044
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
0083ae 940e d358 	CALL SUBOPT_0x2A6
0083b0 940e d345 	CALL SUBOPT_0x2A4
0083b2 940e d0b2 	CALL SUBOPT_0x243
0083b4 940e d333 	CALL SUBOPT_0x2A1
0083b6 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
0083b8 f44a      	BRPL _0x280016
                +
0083b9 e5e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
0083ba e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
0083bb e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
0083bc e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
0083bd 940e c1f5 	CALL SUBOPT_0x3
0083bf efef      	LDI  R30,LOW(65535)
0083c0 efff      	LDI  R31,HIGH(65535)
0083c1 c131      	RJMP _0x20E0044
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
0083c2 c126      	RJMP _0x20E0045
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
0083c3 93aa      	ST   -Y,R26
0083c4 9728      	SBIW R28,8
0083c5 940e e39b 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0083c7 940e d38e 	CALL SUBOPT_0x2AD
0083c9 940e d31e 	CALL SUBOPT_0x29D
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
0083cb f44a      	BRPL _0x280017
                +
0083cc e8e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
0083cd e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
0083ce e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
0083cf e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
0083d0 940e c1f5 	CALL SUBOPT_0x3
0083d2 efef      	LDI  R30,LOW(65535)
0083d3 efff      	LDI  R31,HIGH(65535)
0083d4 c076      	RJMP _0x20E0046
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
0083d5 e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
0083d6 940e d393 	CALL SUBOPT_0x2AE
0083d8 940e d32b 	CALL SUBOPT_0x29F
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
0083da 940e d38e 	CALL SUBOPT_0x2AD
0083dc 940e cecc 	CALL SUBOPT_0x208
0083de b7ed      	IN   R30,SPL
0083df b7fe      	IN   R31,SPH
0083e0 9731      	SBIW R30,1
0083e1 93fa      	ST   -Y,R31
0083e2 93ea      	ST   -Y,R30
0083e3 934f      	PUSH R20
0083e4 933f      	PUSH R19
0083e5 940e c51f 	CALL SUBOPT_0x75
0083e7 dc9f      	RCALL _SD_writeData
0083e8 913f      	POP  R19
0083e9 914f      	POP  R20
0083ea 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
0083eb 2311      	TST  R17
0083ec f44a      	BRPL _0x280018
                +
0083ed ebe3     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
0083ee e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
0083ef e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
0083f0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
0083f1 940e c1f5 	CALL SUBOPT_0x3
0083f3 efef      	LDI  R30,LOW(65535)
0083f4 efff      	LDI  R31,HIGH(65535)
0083f5 c055      	RJMP _0x20E0046
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
0083f6 940e d38e 	CALL SUBOPT_0x2AD
0083f8 940e d32f 	CALL SUBOPT_0x2A0
0083fa 940e e324 	CALL __PUTPARD1
0083fc 01fe      	MOVW R30,R28
0083fd 9674      	ADIW R30,20
0083fe 940e d333 	CALL SUBOPT_0x2A1
008400 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
008402 f44a      	BRPL _0x280019
                +
008403 eee1     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
008404 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
008405 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
008406 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
008407 940e c1f5 	CALL SUBOPT_0x3
008409 efef      	LDI  R30,LOW(65535)
00840a efff      	LDI  R31,HIGH(65535)
00840b c03f      	RJMP _0x20E0046
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
00840c 940e d38e 	CALL SUBOPT_0x2AD
00840e 940e d33c 	CALL SUBOPT_0x2A3
008410 01fe      	MOVW R30,R28
008411 9673      	ADIW R30,19
008412 940e d399 	CALL SUBOPT_0x2AF
008414 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
008416 f44a      	BRPL _0x28001A
                +
008417 e1e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
008418 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
008419 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
00841a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
00841b 940e c1f5 	CALL SUBOPT_0x3
00841d efef      	LDI  R30,LOW(65535)
00841e efff      	LDI  R31,HIGH(65535)
00841f c02b      	RJMP _0x20E0046
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
008420 940e d38e 	CALL SUBOPT_0x2AD
008422 940e d39d 	CALL SUBOPT_0x2B0
008424 940e e324 	CALL __PUTPARD1
008426 940e c4d0 	CALL SUBOPT_0x6C
008428 940e c51f 	CALL SUBOPT_0x75
00842a 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
00842c f44a      	BRPL _0x28001B
                +
00842d e4e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
00842e e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
00842f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
008430 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
008431 940e c1f5 	CALL SUBOPT_0x3
008433 efef      	LDI  R30,LOW(65535)
008434 efff      	LDI  R31,HIGH(65535)
008435 c015      	RJMP _0x20E0046
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
008436 940e d38e 	CALL SUBOPT_0x2AD
008438 940e d34c 	CALL SUBOPT_0x2A5
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
00843a f45a      	BRPL _0x28001C
                +
00843b e7e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
00843c e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
00843d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
00843e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
00843f 940e c5ae 	CALL SUBOPT_0x8D
008441 940e cbcf 	CALL SUBOPT_0x18A
008443 efef      	LDI  R30,LOW(65535)
008444 efff      	LDI  R31,HIGH(65535)
008445 c005      	RJMP _0x20E0046
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
008446 e0e0      	LDI  R30,LOW(0)
008447 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
008449 85e8      	LDD  R30,Y+8
00844a 85f9      	LDD  R31,Y+8+1
                 _0x20E0046:
00844b 940e e3a2 	CALL __LOADLOCR4
00844d 9664      	ADIW R28,20
00844e 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
00844f 940e c7f5 	CALL SUBOPT_0xE7
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008451 940e d358 	CALL SUBOPT_0x2A6
008453 940e d35d 	CALL SUBOPT_0x2A7
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
008455 f44a      	BRPL _0x28001D
                +
008456 eae2     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
008457 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
008458 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
008459 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
00845a 940e c1f5 	CALL SUBOPT_0x3
00845c efef      	LDI  R30,LOW(65535)
00845d efff      	LDI  R31,HIGH(65535)
00845e c094      	RJMP _0x20E0044
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
00845f 940e d358 	CALL SUBOPT_0x2A6
008461 940e d364 	CALL SUBOPT_0x2A8
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
008463 f44a      	BRPL _0x28001E
                +
008464 ecef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
008465 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
008466 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
008467 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
008468 940e c1f5 	CALL SUBOPT_0x3
00846a efef      	LDI  R30,LOW(65535)
00846b efff      	LDI  R31,HIGH(65535)
00846c c086      	RJMP _0x20E0044
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
00846d 940e d36b 	CALL SUBOPT_0x2A9
00846f 940e cf8a 	CALL SUBOPT_0x21B
008471 940e c2ce 	CALL SUBOPT_0x21
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
008473 940e d371 	CALL SUBOPT_0x2AA
008475 f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
008476 efea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
008477 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
008478 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
008479 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
00847a 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
00847c 940e d3a4 	CALL SUBOPT_0x2B1
                 ; 0014 00A9         if(res < 0)
00847e f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
00847f eae2     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
008480 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
008481 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
008482 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
008483 940e c4c6 	CALL SUBOPT_0x6A
008485 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
008487 e0e1      	LDI  R30,LOW(1)
008488 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
00848a e0e0      	LDI  R30,LOW(0)
00848b e0f0      	LDI  R31,HIGH(0)
00848c c066      	RJMP _0x20E0044
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
00848d 940e d393 	CALL SUBOPT_0x2AE
00848f 940e d32b 	CALL SUBOPT_0x29F
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
008491 940e d358 	CALL SUBOPT_0x2A6
008493 940e cecc 	CALL SUBOPT_0x208
008495 b7ed      	IN   R30,SPL
008496 b7fe      	IN   R31,SPH
008497 9731      	SBIW R30,1
008498 93fa      	ST   -Y,R31
008499 93ea      	ST   -Y,R30
00849a 934f      	PUSH R20
00849b 933f      	PUSH R19
00849c 940e c51f 	CALL SUBOPT_0x75
00849e dc3f      	RCALL _SD_readData
00849f 913f      	POP  R19
0084a0 914f      	POP  R20
0084a1 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
0084a2 2311      	TST  R17
0084a3 f44a      	BRPL _0x280021
                +
0084a4 e1ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
0084a5 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
0084a6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
0084a7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
0084a8 940e c1f5 	CALL SUBOPT_0x3
0084aa efef      	LDI  R30,LOW(65535)
0084ab efff      	LDI  R31,HIGH(65535)
0084ac c046      	RJMP _0x20E0044
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
0084ad 940e d358 	CALL SUBOPT_0x2A6
0084af 940e d32f 	CALL SUBOPT_0x2A0
0084b1 940e c823 	CALL SUBOPT_0xF1
0084b3 940e d333 	CALL SUBOPT_0x2A1
0084b5 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
0084b7 f44a      	BRPL _0x280022
                +
0084b8 e4e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
0084b9 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
0084ba e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
0084bb e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
0084bc 940e c1f5 	CALL SUBOPT_0x3
0084be efef      	LDI  R30,LOW(65535)
0084bf efff      	LDI  R31,HIGH(65535)
0084c0 c032      	RJMP _0x20E0044
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
0084c1 940e d358 	CALL SUBOPT_0x2A6
0084c3 940e d33c 	CALL SUBOPT_0x2A3
0084c5 8dea      	LDD  R30,Y+26
0084c6 8dfb      	LDD  R31,Y+26+1
0084c7 940e d399 	CALL SUBOPT_0x2AF
0084c9 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
0084cb f44a      	BRPL _0x280023
                +
0084cc e7e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
0084cd e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
0084ce e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
0084cf e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
0084d0 940e c1f5 	CALL SUBOPT_0x3
0084d2 efef      	LDI  R30,LOW(65535)
0084d3 efff      	LDI  R31,HIGH(65535)
0084d4 c01e      	RJMP _0x20E0044
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
0084d5 940e d358 	CALL SUBOPT_0x2A6
0084d7 940e d39d 	CALL SUBOPT_0x2B0
0084d9 940e d0b2 	CALL SUBOPT_0x243
0084db 940e d399 	CALL SUBOPT_0x2AF
0084dd 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
0084df f44a      	BRPL _0x280024
                +
0084e0 e9ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
0084e1 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
0084e2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
0084e3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
0084e4 940e c1f5 	CALL SUBOPT_0x3
0084e6 efef      	LDI  R30,LOW(65535)
0084e7 efff      	LDI  R31,HIGH(65535)
0084e8 c00a      	RJMP _0x20E0044
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0045:
                +
0084e9 85e8     +LDD R30 , Y + 8
0084ea 85f9     +LDD R31 , Y + 8 + 1
0084eb 856a     +LDD R22 , Y + 8 + 2
0084ec 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
0084ed 89a8      	LDD  R26,Y+16
0084ee 89b9      	LDD  R27,Y+16+1
0084ef 940e e2ff 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
0084f1 e0e1      	LDI  R30,LOW(1)
0084f2 e0f0      	LDI  R31,HIGH(1)
                 _0x20E0044:
0084f3 940e e3a2 	CALL __LOADLOCR4
0084f5 966a      	ADIW R28,26
0084f6 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
0084f7 940e c566 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
0084f9 940e d3b5 	CALL SUBOPT_0x2B2
0084fb 940e d3ba 	CALL SUBOPT_0x2B3
0084fd 940e cbf8 	CALL SUBOPT_0x193
0084ff 940e c525 	CALL SUBOPT_0x77
008501 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 00CE     if(res < 0)
008503 f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
008504 eceb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
008505 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
008506 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
008507 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
008508 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
00850a efef      	LDI  R30,LOW(65535)
00850b efff      	LDI  R31,HIGH(65535)
00850c c048      	RJMP _0x20E0042
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
00850d efe6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
00850e e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
00850f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
008510 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
008511 c03b      	RJMP _0x20E0043
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
008512 940e ce3c 	CALL SUBOPT_0x1F5
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
008514 e1e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
008515 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
008516 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
008517 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
008518 940e ce38 	CALL SUBOPT_0x1F4
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
00851a 940e ce2f 	CALL SUBOPT_0x1F2
00851c 940e c525 	CALL SUBOPT_0x77
00851e 940e cac7 	CALL SUBOPT_0x162
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
008520 940e d3ba 	CALL SUBOPT_0x2B3
008522 01fe      	MOVW R30,R28
008523 9638      	ADIW R30,8
008524 940e d333 	CALL SUBOPT_0x2A1
008526 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 00E1     if(res < 0)
008528 f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
008529 e3e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
00852a e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
00852b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
00852c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
00852d 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
00852f efef      	LDI  R30,LOW(65535)
008530 efff      	LDI  R31,HIGH(65535)
008531 c049      	RJMP _0x20E0040
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
008532 c046      	RJMP _0x20E0041
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
008533 940e c566 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
008535 940e d3b5 	CALL SUBOPT_0x2B2
008537 940e d3c1 	CALL SUBOPT_0x2B4
008539 940e cbf8 	CALL SUBOPT_0x193
00853b 940e c525 	CALL SUBOPT_0x77
00853d 940e d389 	CALL SUBOPT_0x2AC
                 ; 0014 00EF     if(res < 0)
00853f f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
008540 e6e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
008541 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
008542 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
008543 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
008544 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
008546 efef      	LDI  R30,LOW(65535)
008547 efff      	LDI  R31,HIGH(65535)
008548 c00c      	RJMP _0x20E0042
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
008549 e8ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
00854a e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
00854b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
00854c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0043:
00854d 940e e324 	CALL __PUTPARD1
00854f 81ae      	LDD  R26,Y+6
008550 81bf      	LDD  R27,Y+6+1
008551 940e c97e 	CALL SUBOPT_0x12C
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
008553 e0e0      	LDI  R30,LOW(0)
008554 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0042:
008555 8119      	LDD  R17,Y+1
008556 8108      	LDD  R16,Y+0
008557 9626      	ADIW R28,6
008558 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
008559 940e ce3c 	CALL SUBOPT_0x1F5
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
00855b eae6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
00855c e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
00855d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
00855e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
00855f 940e ce38 	CALL SUBOPT_0x1F4
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
008561 940e ce2f 	CALL SUBOPT_0x1F2
008563 940e c525 	CALL SUBOPT_0x77
008565 940e cac7 	CALL SUBOPT_0x162
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
008567 940e d3c1 	CALL SUBOPT_0x2B4
008569 01fe      	MOVW R30,R28
00856a 9638      	ADIW R30,8
00856b 940e d333 	CALL SUBOPT_0x2A1
00856d 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 0102     if(res < 0)
00856f f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
008570 ece6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
008571 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
008572 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
008573 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
008574 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
008576 efef      	LDI  R30,LOW(65535)
008577 efff      	LDI  R31,HIGH(65535)
008578 c002      	RJMP _0x20E0040
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0041:
008579 e0e0      	LDI  R30,LOW(0)
00857a e0f0      	LDI  R31,HIGH(0)
                 _0x20E0040:
00857b 8119      	LDD  R17,Y+1
00857c 8108      	LDD  R16,Y+0
00857d 9628      	ADIW R28,8
00857e 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
00857f 940e cdbc 	CALL SUBOPT_0x1DB
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
008581 81ec      	LDD  R30,Y+4
008582 81fd      	LDD  R31,Y+4+1
008583 940e c45d 	CALL SUBOPT_0x59
008585 940e d308 	CALL SUBOPT_0x299
                +
008587 5fe0     +SUBI R30 , LOW ( - 16 )
008588 4fff     +SBCI R31 , HIGH ( - 16 )
008589 4f6f     +SBCI R22 , BYTE3 ( - 16 )
00858a 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
00858b 940e c64a 	CALL SUBOPT_0xA1
                 ; 0014 0115 
                 ; 0014 0116     return address;
00858d 940e c58c 	CALL SUBOPT_0x87
00858f 962a      	ADIW R28,10
008590 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
008591 93ba      	ST   -Y,R27
008592 93aa      	ST   -Y,R26
008593 97a0      	SBIW R28,32
008594 50d2      	SUBI R29,2
008595 931a      	ST   -Y,R17
008596 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
008597 01fe     +MOVW R30 , R28
008598 5de9     +SUBI R30 , LOW ( - 551 )
008599 4ffd     +SBCI R31 , HIGH ( - 551 )
00859a 9001     +LD R0 , Z +
00859b 81f0     +LD R31 , Z
00859c 2de0     +MOV R30 , R0
                 	__GETW1SX 551
00859d 93fa      	ST   -Y,R31
00859e 93ea      	ST   -Y,R30
                +
00859f 01de     +MOVW R26 , R28
0085a0 5da8     +SUBI R26 , LOW ( - 552 )
0085a1 4fbd     +SBCI R27 , HIGH ( - 552 )
0085a2 91ac     +LD R26 , X
                 	__GETB2SX 552
0085a3 dbdb      	RCALL _SD_createFile
0085a4 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
0085a5 2311      	TST  R17
0085a6 f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
0085a7 eeef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
0085a8 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
0085a9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
0085aa e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
0085ab 940e d3c8 	CALL SUBOPT_0x2B5
0085ad 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
0085af efef      	LDI  R30,LOW(65535)
0085b0 efff      	LDI  R31,HIGH(65535)
0085b1 c075      	RJMP _0x20E003E
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
0085b2 2e00      	MOV  R0,R16
0085b3 2a01      	OR   R0,R17
0085b4 f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
0085b5 e1eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
0085b6 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
0085b7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
0085b8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
0085b9 940e d3c8 	CALL SUBOPT_0x2B5
0085bb 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
0085bd e0e0      	LDI  R30,LOW(0)
0085be e0f0      	LDI  R31,HIGH(0)
0085bf c067      	RJMP _0x20E003E
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
0085c0 e3ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
0085c1 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
0085c2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
0085c3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
0085c4 940e d3c8 	CALL SUBOPT_0x2B5
0085c6 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
0085c8 01fe     +MOVW R30 , R28
0085c9 5dee     +SUBI R30 , LOW ( - 546 )
0085ca 4ffd     +SBCI R31 , HIGH ( - 546 )
0085cb 9001     +LD R0 , Z +
0085cc 81f0     +LD R31 , Z
0085cd 2de0     +MOV R30 , R0
                 	__GETW1SX 546
0085ce 9730      	SBIW R30,0
0085cf f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
0085d0 e5ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
0085d1 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
0085d2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
0085d3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
0085d4 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
0085d6 c04e      	RJMP _0x20E003F
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
0085d7 940e ce2f 	CALL SUBOPT_0x1F2
                +
0085d9 01de     +MOVW R26 , R28
0085da 5da7     +SUBI R26 , LOW ( - 553 )
0085db 4fbd     +SBCI R27 , HIGH ( - 553 )
0085dc 900d     +LD R0 , X +
0085dd 91bc     +LD R27 , X
0085de 2da0     +MOV R26 , R0
                 	__GETW2SX 553
0085df dbfd      	RCALL _SD_openFile
0085e0 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
0085e1 2311      	TST  R17
0085e2 f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
0085e3 e8ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
0085e4 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
0085e5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
0085e6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
0085e7 940e d3c8 	CALL SUBOPT_0x2B5
0085e9 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
0085eb efef      	LDI  R30,LOW(65535)
0085ec efff      	LDI  R31,HIGH(65535)
0085ed c039      	RJMP _0x20E003E
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
0085ee ebe7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
0085ef e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
0085f0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
0085f1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
0085f2 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
0085f4 940e d3d2 	CALL SUBOPT_0x2B6
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
0085f6 940e ce2f 	CALL SUBOPT_0x1F2
0085f8 940e d3ba 	CALL SUBOPT_0x2B3
                +
0085fa 01fe     +MOVW R30 , R28
0085fb 5de6     +SUBI R30 , LOW ( - 554 )
0085fc 4ffd     +SBCI R31 , HIGH ( - 554 )
0085fd 9001     +LD R0 , Z +
0085fe 81f0     +LD R31 , Z
0085ff 2de0     +MOV R30 , R0
                 	__GETW1SX 554
008600 93fa      	ST   -Y,R31
008601 93ea      	ST   -Y,R30
                +
008602 01de     +MOVW R26 , R28
008603 5da6     +SUBI R26 , LOW ( - 554 )
008604 4fbd     +SBCI R27 , HIGH ( - 554 )
008605 900d     +LD R0 , X +
008606 91bc     +LD R27 , X
008607 2da0     +MOV R26 , R0
                 	__GETW2SX 554
008608 940e d337 	CALL SUBOPT_0x2A2
                 ; 0014 013D             if(res < 0)
00860a f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
00860b edef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
00860c e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
00860d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
00860e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
00860f 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
008611 940e d3d2 	CALL SUBOPT_0x2B6
                 ; 0014 0141                 return -1;
008613 efef      	LDI  R30,LOW(65535)
008614 efff      	LDI  R31,HIGH(65535)
008615 c011      	RJMP _0x20E003E
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
008616 01de      	MOVW R26,R28
008617 9612      	ADIW R26,2
008618 dc03      	RCALL _SD_closeFile
008619 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
00861a 2311      	TST  R17
00861b f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
00861c e1e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
00861d e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
00861e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
00861f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
008620 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
008622 efef      	LDI  R30,LOW(65535)
008623 efff      	LDI  R31,HIGH(65535)
008624 c002      	RJMP _0x20E003E
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E003F:
008625 e0e1      	LDI  R30,LOW(1)
008626 e0f0      	LDI  R31,HIGH(1)
                 _0x20E003E:
008627 8119      	LDD  R17,Y+1
008628 8108      	LDD  R16,Y+0
008629 96a9      	ADIW R28,41
00862a 5fde      	SUBI R29,-2
00862b 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
00862c 940e e39b 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
00862e e020     +LDI R18 , LOW ( 0 )
00862f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
008630 e3ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
008631 e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
008632 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
008633 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
008634 940e c1f5 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
008636 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
008637 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
008638 940e c843 	CALL SUBOPT_0xF6
00863a 940e d3e2 	CALL SUBOPT_0x2B7
                 ; 0014 0159     if(res < 0)
00863c f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
00863d 940e d3ed 	CALL SUBOPT_0x2B8
00863f 940e c47f 	CALL SUBOPT_0x5F
008641 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
008643 5021     +SUBI R18 , LOW ( 1 )
008644 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
008645 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
008646 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
008647 940e c843 	CALL SUBOPT_0xF6
008649 940e d3e2 	CALL SUBOPT_0x2B7
                 ; 0014 0160     if(res < 0)
00864b f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
00864c 940e d3ed 	CALL SUBOPT_0x2B8
00864e 940e c4c6 	CALL SUBOPT_0x6A
008650 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
008652 5021     +SUBI R18 , LOW ( 1 )
008653 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
008654 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
008655 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
008656 940e c843 	CALL SUBOPT_0xF6
008658 940e cc02 	CALL SUBOPT_0x195
00865a df36      	RCALL _LOG_createFile
00865b 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
00865c 2311      	TST  R17
00865d f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
00865e 940e d3ed 	CALL SUBOPT_0x2B8
008660 940e d3f2 	CALL SUBOPT_0x2B9
008662 940e c26b 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
008664 5021     +SUBI R18 , LOW ( 1 )
008665 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
008666 01f9      	MOVW R30,R18
008667 940e e3a2 	CALL __LOADLOCR4
008669 9624      	ADIW R28,4
00866a 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
00866b 940e ce3c 	CALL SUBOPT_0x1F5
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
00866d d0b1      	RCALL _findFreeSlotDataLogQueue
00866e 2f0e      	MOV  R16,R30
00866f 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
008670 2311      	TST  R17
008671 f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
008672 e8e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
008673 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
008674 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
008675 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
008676 940e c1f5 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
008678 efef      	LDI  R30,LOW(65535)
008679 efff      	LDI  R31,HIGH(65535)
00867a c038      	RJMP _0x20E003D
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
00867b 940e cb0a 	CALL SUBOPT_0x16E
00867d 55e0      	SUBI R30,LOW(-_dataLogQueue)
00867e 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00867f 85ac      	LDD  R26,Y+12
008680 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
008681 940e cb0a 	CALL SUBOPT_0x16E
                +
008683 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008684 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
008685 940e c78f 	CALL SUBOPT_0xD8
008687 940e d198 	CALL SUBOPT_0x261
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
008689 940e cb0a 	CALL SUBOPT_0x16E
                +
00868b 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00868c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00868d 81ae      	LDD  R26,Y+6
00868e 81bf      	LDD  R27,Y+6+1
00868f 83a0      	STD  Z+0,R26
008690 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
008691 940e cb0a 	CALL SUBOPT_0x16E
                +
008693 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008694 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008695 940e c6b1 	CALL SUBOPT_0xB4
008697 940e d198 	CALL SUBOPT_0x261
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
008699 91e0 1a1e 	LDS  R30,_dataLogQCount
00869b 5fef      	SUBI R30,-LOW(1)
00869c 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
00869e ebe8     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
00869f e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
0086a0 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
0086a1 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
0086a2 940e e324 	CALL __PUTPARD1
0086a4 89e8      	LDD  R30,Y+16
0086a5 940e c4a6 	CALL SUBOPT_0x65
0086a7 01f8      	MOVW R30,R16
0086a8 940e d134 	CALL SUBOPT_0x254
0086aa 91e0 1a1e 	LDS  R30,_dataLogQCount
0086ac 940e c4a6 	CALL SUBOPT_0x65
0086ae 940e c4ac 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
0086b0 91e0 1a1e 	LDS  R30,_dataLogQCount
0086b2 e0f0      	LDI  R31,0
                 _0x20E003D:
0086b3 8119      	LDD  R17,Y+1
0086b4 8108      	LDD  R16,Y+0
0086b5 962d      	ADIW R28,13
0086b6 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
0086b7 940e c566 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
0086b9 91e0 1a1e 	LDS  R30,_dataLogQCount
0086bb 30e0      	CPI  R30,0
0086bc f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
0086bd e1e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
0086be e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
0086bf e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
0086c0 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
0086c1 940e c1f5 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
0086c3 c0f5      	RJMP _0x20E003B
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
0086c4 e000     +LDI R16 , LOW ( 0 )
0086c5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
0086c6 300a     +CPI R16 , LOW ( 10 )
0086c7 e0e0     +LDI R30 , HIGH ( 10 )
0086c8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
0086c9 f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
0086ca 940e cb0a 	CALL SUBOPT_0x16E
0086cc 55e0      	SUBI R30,LOW(-_dataLogQueue)
0086cd 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
0086ce 81e0      	LD   R30,Z
0086cf 85a8      	LDD  R26,Y+8
0086d0 17ea      	CP   R30,R26
0086d1 f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
0086d2 940e cb0a 	CALL SUBOPT_0x16E
                +
0086d4 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
0086d5 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
0086d6 940e d3f8 	CALL SUBOPT_0x2BA
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
0086d8 940e cb0a 	CALL SUBOPT_0x16E
                +
0086da 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
0086db 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
0086dc 01df      	MOVW R26,R30
0086dd 940e e2f0 	CALL __GETW1P
0086df 81ac      	LDD  R26,Y+4
0086e0 81bd      	LDD  R27,Y+4+1
0086e1 93ed      	ST   X+,R30
0086e2 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
0086e3 940e cb0a 	CALL SUBOPT_0x16E
                +
0086e5 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
0086e6 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
0086e7 01df      	MOVW R26,R30
0086e8 940e e2f4 	CALL __GETD1P
0086ea 81aa      	LDD  R26,Y+2
0086eb 81bb      	LDD  R27,Y+2+1
0086ec 940e e2ff 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
0086ee 01f8      	MOVW R30,R16
0086ef c0cb      	RJMP _0x20E003A
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
0086f0 5f0f     +SUBI R16 , LOW ( - 1 )
0086f1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0086f2 cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
0086f3 e4e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
0086f4 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
0086f5 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
0086f6 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
0086f7 c0bc      	RJMP _0x20E003C
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
0086f8 93aa      	ST   -Y,R26
0086f9 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0086fa e010      	LDI  R17,LOW(0)
                 _0x2A000A:
0086fb 301a      	CPI  R17,10
0086fc f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
0086fd 940e d400 	CALL SUBOPT_0x2BB
0086ff 81e0      	LD   R30,Z
008700 81a9      	LDD  R26,Y+1
008701 17ea      	CP   R30,R26
008702 f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
008703 940e d400 	CALL SUBOPT_0x2BB
008705 940e d406 	CALL SUBOPT_0x2BC
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
008707 91e0 1a1e 	LDS  R30,_dataLogQCount
008709 50e1      	SUBI R30,LOW(1)
00870a 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
00870c e8e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
00870d e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
00870e e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
00870f e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
008710 940e ce7e 	CALL SUBOPT_0x1FC
008712 940e ce83 	CALL SUBOPT_0x1FD
                 ; 0015 004B             return dataLogQCount;
008714 91e0 1a1e 	LDS  R30,_dataLogQCount
008716 e0f0      	LDI  R31,0
008717 c0da      	RJMP _0x20E0038
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
008718 5f1f      	SUBI R17,-1
008719 cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
00871a ede9     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
00871b e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
00871c e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
00871d e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
00871e c0cc      	RJMP _0x20E0039
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
00871f 931a      	ST   -Y,R17
                 ;	i -> R17
008720 e010      	LDI  R17,LOW(0)
                 _0x2A000E:
008721 301a      	CPI  R17,10
008722 f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
008723 940e d400 	CALL SUBOPT_0x2BB
008725 81e0      	LD   R30,Z
008726 30e0      	CPI  R30,0
008727 f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
008728 2fe1      	MOV  R30,R17
008729 c0ea      	RJMP _0x20E0037
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
00872a 5f1f      	SUBI R17,-1
00872b cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
00872c efef      	LDI  R30,LOW(255)
00872d c0e6      	RJMP _0x20E0037
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
00872e 931a      	ST   -Y,R17
                 ;	i -> R17
00872f e010      	LDI  R17,LOW(0)
                 _0x2A0012:
008730 301a      	CPI  R17,10
008731 f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
008732 940e d400 	CALL SUBOPT_0x2BB
008734 940e d406 	CALL SUBOPT_0x2BC
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
008736 5f1f      	SUBI R17,-1
008737 cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
008738 c0db      	RJMP _0x20E0037
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
008739 93aa      	ST   -Y,R26
00873a 931a      	ST   -Y,R17
00873b 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
00873c d0b8      	RCALL _findFreeSlotEventLogQueue
00873d 2f0e      	MOV  R16,R30
00873e 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
00873f 2311      	TST  R17
008740 f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
008741 e1eb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
008742 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
008743 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
008744 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
008745 940e c1f5 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
008747 c071      	RJMP _0x20E003B
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
008748 940e d421 	CALL SUBOPT_0x2BD
00874a 5ded      	SUBI R30,LOW(-_eventLogQueue)
00874b 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00874c 85a8      	LDD  R26,Y+8
00874d 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
00874e 940e d421 	CALL SUBOPT_0x2BD
                +
008750 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
008751 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
008752 940e c678 	CALL SUBOPT_0xA9
008754 940e d198 	CALL SUBOPT_0x261
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
008756 940e d421 	CALL SUBOPT_0x2BD
                +
008758 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
008759 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00875a 81ab      	LDD  R26,Y+3
00875b 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
00875c 940e d421 	CALL SUBOPT_0x2BD
                +
00875e 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00875f 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008760 81aa      	LDD  R26,Y+2
008761 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
008762 91e0 19af 	LDS  R30,_eventLogQCount
008764 5fef      	SUBI R30,-LOW(1)
008765 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
008767 e5e3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
008768 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
008769 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
00876a e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
00876b 940e ce46 	CALL SUBOPT_0x1F7
00876d 01f8      	MOVW R30,R16
00876e 940e d134 	CALL SUBOPT_0x254
008770 91e0 19af 	LDS  R30,_eventLogQCount
008772 940e c4a6 	CALL SUBOPT_0x65
008774 940e c4ac 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
008776 91e0 19af 	LDS  R30,_eventLogQCount
008778 e0f0      	LDI  R31,0
008779 c041      	RJMP _0x20E003A
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
00877a 940e c566 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
00877c 91e0 19af 	LDS  R30,_eventLogQCount
00877e 30e0      	CPI  R30,0
00877f f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
008780 eaef     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
008781 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
008782 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
008783 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
008784 940e c1f5 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
008786 c032      	RJMP _0x20E003B
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
008787 e000     +LDI R16 , LOW ( 0 )
008788 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
008789 3104     +CPI R16 , LOW ( 20 )
00878a e0e0     +LDI R30 , HIGH ( 20 )
00878b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00878c f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
00878d 940e d421 	CALL SUBOPT_0x2BD
00878f 5ded      	SUBI R30,LOW(-_eventLogQueue)
008790 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
008791 81e0      	LD   R30,Z
008792 85a8      	LDD  R26,Y+8
008793 17ea      	CP   R30,R26
008794 f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
008795 940e d421 	CALL SUBOPT_0x2BD
                +
008797 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
008798 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
008799 940e d3f8 	CALL SUBOPT_0x2BA
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
00879b 940e d421 	CALL SUBOPT_0x2BD
                +
00879d 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00879e 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00879f 81e0      	LD   R30,Z
0087a0 81ac      	LDD  R26,Y+4
0087a1 81bd      	LDD  R27,Y+4+1
0087a2 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
0087a3 940e d421 	CALL SUBOPT_0x2BD
                +
0087a5 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0087a6 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0087a7 81e0      	LD   R30,Z
0087a8 81aa      	LDD  R26,Y+2
0087a9 81bb      	LDD  R27,Y+2+1
0087aa 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
0087ab 01f8      	MOVW R30,R16
0087ac c00e      	RJMP _0x20E003A
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
0087ad 5f0f     +SUBI R16 , LOW ( - 1 )
0087ae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0087af cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
0087b0 eee1     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
0087b1 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
0087b2 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
0087b3 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003C:
0087b4 940e e324 	CALL __PUTPARD1
0087b6 85ec      	LDD  R30,Y+12
0087b7 940e c309 	CALL SUBOPT_0x29
                 ; 0015 0099     return -1;
                 _0x20E003B:
0087b9 efef      	LDI  R30,LOW(65535)
0087ba efff      	LDI  R31,HIGH(65535)
                 _0x20E003A:
0087bb 8119      	LDD  R17,Y+1
0087bc 8108      	LDD  R16,Y+0
0087bd 9629      	ADIW R28,9
0087be 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
0087bf 93aa      	ST   -Y,R26
0087c0 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0087c1 e010      	LDI  R17,LOW(0)
                 _0x2A001B:
0087c2 3114      	CPI  R17,20
0087c3 f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
0087c4 940e d427 	CALL SUBOPT_0x2BE
0087c6 81e0      	LD   R30,Z
0087c7 81a9      	LDD  R26,Y+1
0087c8 17ea      	CP   R30,R26
0087c9 f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
0087ca 940e d427 	CALL SUBOPT_0x2BE
0087cc 940e d42d 	CALL SUBOPT_0x2BF
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
0087ce 940e d433 	CALL SUBOPT_0x2C0
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
0087d0 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0087d1 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0087d2 e0a0      	LDI  R26,LOW(0)
0087d3 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
0087d4 91e0 19af 	LDS  R30,_eventLogQCount
0087d6 50e1      	SUBI R30,LOW(1)
0087d7 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
0087d9 e2e3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
0087da e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
0087db e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
0087dc e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
0087dd 940e ce7e 	CALL SUBOPT_0x1FC
0087df 940e ce83 	CALL SUBOPT_0x1FD
                 ; 0015 00AA             return eventLogQCount;
0087e1 91e0 19af 	LDS  R30,_eventLogQCount
0087e3 e0f0      	LDI  R31,0
0087e4 c00d      	RJMP _0x20E0038
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
0087e5 5f1f      	SUBI R17,-1
0087e6 cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
0087e7 e7e8     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
0087e8 e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
0087e9 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
0087ea e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E0039:
0087eb 940e e324 	CALL __PUTPARD1
0087ed 81ed      	LDD  R30,Y+5
0087ee 940e c309 	CALL SUBOPT_0x29
                 ; 0015 00AE     return -1;
0087f0 efef      	LDI  R30,LOW(65535)
0087f1 efff      	LDI  R31,HIGH(65535)
                 _0x20E0038:
0087f2 8118      	LDD  R17,Y+0
0087f3 9622      	ADIW R28,2
0087f4 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
0087f5 931a      	ST   -Y,R17
                 ;	i -> R17
0087f6 e010      	LDI  R17,LOW(0)
                 _0x2A001F:
0087f7 3114      	CPI  R17,20
0087f8 f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
0087f9 940e d427 	CALL SUBOPT_0x2BE
0087fb 81e0      	LD   R30,Z
0087fc 30e0      	CPI  R30,0
0087fd f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
0087fe 2fe1      	MOV  R30,R17
0087ff c014      	RJMP _0x20E0037
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
008800 5f1f      	SUBI R17,-1
008801 cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
008802 efef      	LDI  R30,LOW(255)
008803 c010      	RJMP _0x20E0037
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
008804 931a      	ST   -Y,R17
                 ;	i -> R17
008805 e010      	LDI  R17,LOW(0)
                 _0x2A0023:
008806 3114      	CPI  R17,20
008807 f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
008808 940e d427 	CALL SUBOPT_0x2BE
00880a 940e d42d 	CALL SUBOPT_0x2BF
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
00880c 940e d433 	CALL SUBOPT_0x2C0
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
00880e 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00880f 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008810 e0a0      	LDI  R26,LOW(0)
008811 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
008812 5f1f      	SUBI R17,-1
008813 cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0037:
008814 9119      	LD   R17,Y+
008815 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
008816 93aa      	ST   -Y,R26
008817 97ef      	SBIW R28,63
008818 9761      	SBIW R28,17
008819 e48e      	LDI  R24,78
00881a e0a0      	LDI  R26,LOW(0)
00881b e0b0      	LDI  R27,HIGH(0)
00881c ebec      	LDI  R30,LOW(_0x2C0003*2)
00881d e5fd      	LDI  R31,HIGH(_0x2C0003*2)
00881e e060      	LDI  R22,BYTE3(_0x2C0003*2)
00881f 940e e3a7 	CALL __INITLOCB
008821 940e e399 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
008823 91e0 14df 	LDS  R30,_currentPage
008825 30e0      	CPI  R30,0
008826 f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
008827 01de     +MOVW R26 , R28
008828 5aaa     +SUBI R26 , LOW ( - 86 )
008829 4fbf     +SBCI R27 , HIGH ( - 86 )
00882a 91ac     +LD R26 , X
                 	__GETB2SX 86
00882b 30a1      	CPI  R26,LOW(0x1)
00882c f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
00882d 940e d43e 	CALL SUBOPT_0x2C1
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
00882f 940c 9794 	JMP  _0x2C0006
                 _0x2C0004:
008831 91a0 14df 	LDS  R26,_currentPage
008833 30a1      	CPI  R26,LOW(0x1)
008834 f011      	BREQ PC+3
008835 940c 8891 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
008837 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
008839 f409      	BRNE _0x2C000B
00883a c04b      	RJMP _0x2C02B4
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
00883b 30e2      	CPI  R30,LOW(0x2)
00883c e0a0      	LDI  R26,HIGH(0x2)
00883d 07fa      	CPC  R31,R26
00883e f449      	BRNE _0x2C000C
00883f 940e d456 	CALL SUBOPT_0x2C3
008841 f41c      	BRGE _0x2C000D
008842 e0e3      	LDI  R30,LOW(3)
008843 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
008845 940e d45d 	CALL SUBOPT_0x2C4
008847 c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
008848 30e3      	CPI  R30,LOW(0x3)
008849 e0a0      	LDI  R26,HIGH(0x3)
00884a 07fa      	CPC  R31,R26
00884b f451      	BRNE _0x2C000E
00884c 940e d46a 	CALL SUBOPT_0x2C5
00884e 30a4      	CPI  R26,LOW(0x4)
00884f f01c      	BRLT _0x2C000F
008850 e0e0      	LDI  R30,LOW(0)
008851 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
008853 940e d45d 	CALL SUBOPT_0x2C4
008855 c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
008856 30e4      	CPI  R30,LOW(0x4)
008857 e0a0      	LDI  R26,HIGH(0x4)
008858 07fa      	CPC  R31,R26
008859 f5a9      	BRNE _0x2C000A
00885a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00885c 30e0      	CPI  R30,0
00885d f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
00885e 940e d470 	CALL SUBOPT_0x2C6
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
008860 c02e      	RJMP _0x2C0012
                 _0x2C0011:
008861 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008863 30a1      	CPI  R26,LOW(0x1)
008864 f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
008865 e0ee      	LDI  R30,LOW(14)
008866 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
008868 940e d489 	CALL SUBOPT_0x2C8
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
00886a c024      	RJMP _0x2C0014
                 _0x2C0013:
00886b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00886d 30a2      	CPI  R26,LOW(0x2)
00886e f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
00886f e1e1      	LDI  R30,LOW(17)
008870 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
008872 940e d496 	CALL SUBOPT_0x2C9
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
008874 c01a      	RJMP _0x2C0016
                 _0x2C0015:
008875 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008877 30a3      	CPI  R26,LOW(0x3)
008878 f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
008879 e2e2      	LDI  R30,LOW(34)
00887a 940e d4a3 	CALL SUBOPT_0x2CA
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
00887c e0e1      	LDI  R30,LOW(1)
00887d 940e d4a9 	CALL SUBOPT_0x2CB
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
00887f 940e d4b3 	CALL SUBOPT_0x2CC
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
008881 e3ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
008882 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
008883 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
008884 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
008885 c005      	RJMP _0x2C02B5
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C02B4:
008886 e0e0      	LDI  R30,LOW(0)
008887 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
008889 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02B5:
00888b 940e e324 	CALL __PUTPARD1
00888d 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
00888f 940c 9794 	JMP  _0x2C0019
                 _0x2C0007:
008891 91a0 14df 	LDS  R26,_currentPage
008893 30a2      	CPI  R26,LOW(0x2)
008894 f011      	BREQ PC+3
008895 940c 88e0 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
008897 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
008899 f419      	BRNE _0x2C001E
00889a 940e d43e 	CALL SUBOPT_0x2C1
00889c c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
00889d 30e2      	CPI  R30,LOW(0x2)
00889e e0a0      	LDI  R26,HIGH(0x2)
00889f 07fa      	CPC  R31,R26
0088a0 f449      	BRNE _0x2C001F
0088a1 940e d456 	CALL SUBOPT_0x2C3
0088a3 f41c      	BRGE _0x2C0020
0088a4 e0e1      	LDI  R30,LOW(1)
0088a5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
0088a7 940e d45d 	CALL SUBOPT_0x2C4
0088a9 c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
0088aa 30e3      	CPI  R30,LOW(0x3)
0088ab e0a0      	LDI  R26,HIGH(0x3)
0088ac 07fa      	CPC  R31,R26
0088ad f451      	BRNE _0x2C0021
0088ae 940e d46a 	CALL SUBOPT_0x2C5
0088b0 30a2      	CPI  R26,LOW(0x2)
0088b1 f01c      	BRLT _0x2C0022
0088b2 e0e0      	LDI  R30,LOW(0)
0088b3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
0088b5 940e d45d 	CALL SUBOPT_0x2C4
0088b7 c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
0088b8 30e4      	CPI  R30,LOW(0x4)
0088b9 e0a0      	LDI  R26,HIGH(0x4)
0088ba 07fa      	CPC  R31,R26
0088bb f511      	BRNE _0x2C001D
0088bc 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0088be 30e0      	CPI  R30,0
0088bf f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
0088c0 e0e3      	LDI  R30,LOW(3)
0088c1 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
0088c3 940e d4be 	CALL SUBOPT_0x2CE
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
0088c5 c018      	RJMP _0x2C0025
                 _0x2C0024:
0088c6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0088c8 30a1      	CPI  R26,LOW(0x1)
0088c9 f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
0088ca e2e1      	LDI  R30,LOW(33)
0088cb 940e d4cb 	CALL SUBOPT_0x2CF
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
0088cd e0e2      	LDI  R30,LOW(2)
0088ce 940e d4a9 	CALL SUBOPT_0x2CB
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
0088d0 940e d4b3 	CALL SUBOPT_0x2CC
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
0088d2 940e d4d1 	CALL SUBOPT_0x2D0
0088d4 c005      	RJMP _0x2C02B6
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
0088d5 e0e0      	LDI  R30,LOW(0)
0088d6 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
0088d8 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02B6:
0088da 940e e324 	CALL __PUTPARD1
0088dc 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
0088de 940c 9794 	JMP  _0x2C0028
                 _0x2C001A:
0088e0 91a0 14df 	LDS  R26,_currentPage
0088e2 30a3      	CPI  R26,LOW(0x3)
0088e3 f011      	BREQ PC+3
0088e4 940c 8abd 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
0088e6 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
0088e8 f419      	BRNE _0x2C002D
0088e9 940e d470 	CALL SUBOPT_0x2C6
0088eb c1cf      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
0088ec 30e2      	CPI  R30,LOW(0x2)
0088ed e0a0      	LDI  R26,HIGH(0x2)
0088ee 07fa      	CPC  R31,R26
0088ef f449      	BRNE _0x2C002E
0088f0 940e d456 	CALL SUBOPT_0x2C3
0088f2 f41c      	BRGE _0x2C002F
0088f3 e0e2      	LDI  R30,LOW(2)
0088f4 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
0088f6 940e d45d 	CALL SUBOPT_0x2C4
0088f8 c1c2      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
0088f9 30e3      	CPI  R30,LOW(0x3)
0088fa e0a0      	LDI  R26,HIGH(0x3)
0088fb 07fa      	CPC  R31,R26
0088fc f451      	BRNE _0x2C0030
0088fd 940e d46a 	CALL SUBOPT_0x2C5
0088ff 30a3      	CPI  R26,LOW(0x3)
008900 f01c      	BRLT _0x2C0031
008901 e0e0      	LDI  R30,LOW(0)
008902 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
008904 940e d45d 	CALL SUBOPT_0x2C4
008906 c1b4      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
008907 30e4      	CPI  R30,LOW(0x4)
008908 e0a0      	LDI  R26,HIGH(0x4)
008909 07fa      	CPC  R31,R26
00890a f011      	BREQ PC+3
00890b 940c 8abb 	JMP _0x2C002C
00890d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00890f 30e0      	CPI  R30,0
008910 f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
008911 e0e4      	LDI  R30,LOW(4)
008912 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
008914 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
008915 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
008916 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
008917 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
008918 940e d4d6 	CALL SUBOPT_0x2D1
                +
00891a eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
00891b e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
00891c 940e c357 	CALL SUBOPT_0x34
                +
00891e e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
00891f e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
008920 940e c357 	CALL SUBOPT_0x34
008922 940e c4ac 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
008924 e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
008925 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
008926 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
008927 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
008928 940e d4d6 	CALL SUBOPT_0x2D1
                +
00892a eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
00892b e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
00892c 940e c357 	CALL SUBOPT_0x34
                +
00892e e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
00892f e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
008930 940e c357 	CALL SUBOPT_0x34
008932 e08c      	LDI  R24,12
008933 940e 8007 	CALL _printOLED
008935 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
008936 c184      	RJMP _0x2C0034
                 _0x2C0033:
008937 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008939 30a1      	CPI  R26,LOW(0x1)
00893a f011      	BREQ PC+3
00893b 940c 89e1 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
00893d e0e5      	LDI  R30,LOW(5)
00893e 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
008940 01fe      	MOVW R30,R28
008941 9638      	ADIW R30,8
008942 940e c843 	CALL SUBOPT_0xF6
008944 940e d4dc 	CALL SUBOPT_0x2D2
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
008946 940e d4ef 	CALL SUBOPT_0x2D3
008948 940e d4f3 	CALL SUBOPT_0x2D4
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
00894a 91a0 11b6 	LDS  R26,_operating_config
00894c 31a0      	CPI  R26,LOW(0x10)
00894d f439      	BRNE _0x2C0036
00894e 940e d4f7 	CALL SUBOPT_0x2D5
                +
008950 e6e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
008951 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
008952 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
008953 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
008954 c011      	RJMP _0x2C02B7
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
008955 91a0 11b6 	LDS  R26,_operating_config
008957 32a0      	CPI  R26,LOW(0x20)
008958 f439      	BRNE _0x2C0038
008959 940e d4f7 	CALL SUBOPT_0x2D5
                +
00895b e7e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
00895c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
00895d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
00895e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
00895f c006      	RJMP _0x2C02B7
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
008960 940e d4f7 	CALL SUBOPT_0x2D5
                +
008962 e7ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
008963 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
008964 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
008965 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C02B7:
008966 940e e324 	CALL __PUTPARD1
008968 940e d4fc 	CALL SUBOPT_0x2D6
                 ; 0016 00A0                                 strcat(cmd,str);
00896a 940e d501 	CALL SUBOPT_0x2D7
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
00896c 940e d4f3 	CALL SUBOPT_0x2D4
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
00896e 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
008970 30a1      	CPI  R26,LOW(0x1)
008971 f439      	BRNE _0x2C003A
008972 940e d4f7 	CALL SUBOPT_0x2D5
                +
008974 e8e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
008975 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
008976 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
008977 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
008978 c006      	RJMP _0x2C02B8
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
008979 940e d4f7 	CALL SUBOPT_0x2D5
                +
00897b e9e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
00897c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
00897d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
00897e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B8:
00897f 940e e324 	CALL __PUTPARD1
008981 940e d4fc 	CALL SUBOPT_0x2D6
                 ; 0016 00A5                                 strcat(cmd,str);
008983 940e d501 	CALL SUBOPT_0x2D7
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
008985 940e d4f3 	CALL SUBOPT_0x2D4
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
008987 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
008989 30a1      	CPI  R26,LOW(0x1)
00898a f439      	BRNE _0x2C003C
00898b 940e d4f7 	CALL SUBOPT_0x2D5
                +
00898d e8e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
00898e e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
00898f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
008990 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
008991 c006      	RJMP _0x2C02B9
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
008992 940e d4f7 	CALL SUBOPT_0x2D5
                +
008994 e9e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
008995 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
008996 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
008997 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B9:
008998 940e e324 	CALL __PUTPARD1
00899a 940e d4fc 	CALL SUBOPT_0x2D6
                 ; 0016 00AA                                 strcat(cmd,str);
00899c 940e d501 	CALL SUBOPT_0x2D7
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
00899e 940e d4f3 	CALL SUBOPT_0x2D4
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
0089a0 e000     +LDI R16 , LOW ( 0 )
0089a1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0089a2 e020     +LDI R18 , LOW ( 0 )
0089a3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
0089a4 3005     +CPI R16 , LOW ( 5 )
0089a5 e0e0     +LDI R30 , HIGH ( 5 )
0089a6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0089a7 f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
0089a8 940e d50a 	CALL SUBOPT_0x2D8
0089aa 81a0      	LD   R26,Z
0089ab 30a1      	CPI  R26,LOW(0x1)
0089ac f421      	BRNE _0x2C0041
0089ad 940e d50f 	CALL SUBOPT_0x2D9
0089af e4e5      	LDI  R30,LOW(69)
0089b0 c003      	RJMP _0x2C02BA
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
0089b1 940e d50f 	CALL SUBOPT_0x2D9
0089b3 e4e4      	LDI  R30,LOW(68)
                 _0x2C02BA:
0089b4 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
0089b5 3004     +CPI R16 , LOW ( 4 )
0089b6 e0e0     +LDI R30 , HIGH ( 4 )
0089b7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
0089b8 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
0089b9 940e d50f 	CALL SUBOPT_0x2D9
0089bb e2ef      	LDI  R30,LOW(47)
0089bc 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
0089bd 5f0f     +SUBI R16 , LOW ( - 1 )
0089be 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0089bf cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
0089c0 940e d50f 	CALL SUBOPT_0x2D9
0089c2 e2ec      	LDI  R30,LOW(44)
0089c3 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
0089c4 940e d50f 	CALL SUBOPT_0x2D9
0089c6 e0e0      	LDI  R30,LOW(0)
0089c7 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
0089c8 01fe      	MOVW R30,R28
0089c9 9638      	ADIW R30,8
0089ca 93fa      	ST   -Y,R31
0089cb 93ea      	ST   -Y,R30
0089cc 01de      	MOVW R26,R28
0089cd 96dc      	ADIW R26,60
0089ce 940e a762 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
0089d0 e9e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
0089d1 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
0089d2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
0089d3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
0089d4 940e d517 	CALL SUBOPT_0x2DA
0089d6 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
0089d8 eaeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
0089d9 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
0089da e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
0089db e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
0089dc 940e d517 	CALL SUBOPT_0x2DA
0089de 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
0089e0 c0da      	RJMP _0x2C0044
                 _0x2C0035:
0089e1 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0089e3 30a2      	CPI  R26,LOW(0x2)
0089e4 f011      	BREQ PC+3
0089e5 940c 8ab4 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
0089e7 01fe      	MOVW R30,R28
0089e8 9638      	ADIW R30,8
0089e9 940e c843 	CALL SUBOPT_0xF6
0089eb 940e d4dc 	CALL SUBOPT_0x2D2
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
0089ed e4a5      	LDI  R26,LOW(325)
0089ee e0b1      	LDI  R27,HIGH(325)
0089ef 940e a6d0 	CALL _malloc
                +
0089f1 01de     +MOVW R26 , R28
0089f2 5aac     +SUBI R26 , LOW ( - 84 )
0089f3 4fbf     +SBCI R27 , HIGH ( - 84 )
0089f4 93ed     +ST X + , R30
0089f5 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
0089f6 940e d51d 	CALL SUBOPT_0x2DB
0089f8 9730      	SBIW R30,0
0089f9 f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
0089fa ebe0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
0089fb e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
0089fc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
0089fd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
0089fe 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008a00 940e d470 	CALL SUBOPT_0x2C6
008a02 c0b8      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
008a03 940e d51d 	CALL SUBOPT_0x2DB
008a05 93fa      	ST   -Y,R31
008a06 93ea      	ST   -Y,R30
008a07 01de      	MOVW R26,R28
008a08 5aac      	SUBI R26,LOW(-(84))
008a09 4fbf      	SBCI R27,HIGH(-(84))
008a0a 940e 5ea8 	CALL _ETH_getConfig
008a0c 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
008a0d 2355      	TST  R21
008a0e f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
008a0f eee4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
008a10 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
008a11 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
008a12 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
008a13 c02c      	RJMP _0x2C02BB
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
008a14 e0ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
008a15 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
008a16 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
008a17 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
008a18 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
008a1a e3eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
008a1b e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
008a1c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
008a1d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
008a1e 940e e324 	CALL __PUTPARD1
                +
008a20 01fe     +MOVW R30 , R28
008a21 5aea     +SUBI R30 , LOW ( - 86 )
008a22 4fff     +SBCI R31 , HIGH ( - 86 )
008a23 9001     +LD R0 , Z +
008a24 81f0     +LD R31 , Z
008a25 2de0     +MOV R30 , R0
                 	__GETW1SX 86
008a26 940e c357 	CALL SUBOPT_0x34
008a28 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
008a2a e000     +LDI R16 , LOW ( 0 )
008a2b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
008a2c 940e d524 	CALL SUBOPT_0x2DC
008a2e 170e      	CP   R16,R30
008a2f 071f      	CPC  R17,R31
008a30 f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
008a31 01f8      	MOVW R30,R16
008a32 940e d52b 	CALL SUBOPT_0x2DD
008a34 0fae      	ADD  R26,R30
008a35 1fbf      	ADC  R27,R31
008a36 91ac      	LD   R26,X
008a37 940e 413a 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
008a39 5f0f     +SUBI R16 , LOW ( - 1 )
008a3a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008a3b cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
008a3c eee1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
008a3d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
008a3e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
008a3f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C02BB:
008a40 940e e324 	CALL __PUTPARD1
008a42 940e c360 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
008a44 940e d51d 	CALL SUBOPT_0x2DB
008a46 93fa      	ST   -Y,R31
008a47 93ea      	ST   -Y,R30
008a48 940e d532 	CALL SUBOPT_0x2DE
008a4a 940e 99b8 	CALL _getNetworkInfo
008a4c 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
008a4d 2355      	TST  R21
008a4e f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
008a4f e6e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
008a50 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
008a51 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
008a52 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
008a53 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
008a55 940e e3a0 	CALL __LOADLOCR6
008a57 96ef      	ADIW R28,63
008a58 9668      	ADIW R28,24
008a59 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
008a5a e0e6      	LDI  R30,LOW(6)
008a5b 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008a5d e8ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
008a5e e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
008a5f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
008a60 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
008a61 940e d541 	CALL SUBOPT_0x2DF
008a63 940e d555 	CALL SUBOPT_0x2E0
008a65 940e d567 	CALL SUBOPT_0x2E1
008a67 940e d579 	CALL SUBOPT_0x2E2
008a69 940e d58b 	CALL SUBOPT_0x2E3
008a6b 940e d59d 	CALL SUBOPT_0x2E4
008a6d 940e d5af 	CALL SUBOPT_0x2E5
008a6f 940e d5c1 	CALL SUBOPT_0x2E6
008a71 940e d5d3 	CALL SUBOPT_0x2E7
008a73 940e d5e5 	CALL SUBOPT_0x2E8
008a75 940e d5f7 	CALL SUBOPT_0x2E9
008a77 940e d609 	CALL SUBOPT_0x2EA
008a79 940e d61b 	CALL SUBOPT_0x2EB
008a7b 940e d62d 	CALL SUBOPT_0x2EC
008a7d 940e d63f 	CALL SUBOPT_0x2ED
008a7f 940e d651 	CALL SUBOPT_0x2EE
008a81 e480      	LDI  R24,64
008a82 940e 9e86 	CALL _printDebug
008a84 96ef      	ADIW R28,63
008a85 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008a86 ede3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
008a87 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
008a88 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
008a89 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
008a8a 940e d541 	CALL SUBOPT_0x2DF
008a8c 940e d555 	CALL SUBOPT_0x2E0
008a8e 940e d567 	CALL SUBOPT_0x2E1
008a90 940e d579 	CALL SUBOPT_0x2E2
008a92 940e d58b 	CALL SUBOPT_0x2E3
008a94 940e d59d 	CALL SUBOPT_0x2E4
008a96 940e d5af 	CALL SUBOPT_0x2E5
008a98 940e d5c1 	CALL SUBOPT_0x2E6
008a9a 940e d5d3 	CALL SUBOPT_0x2E7
008a9c 940e d5e5 	CALL SUBOPT_0x2E8
008a9e 940e d5f7 	CALL SUBOPT_0x2E9
008aa0 940e d609 	CALL SUBOPT_0x2EA
008aa2 940e d61b 	CALL SUBOPT_0x2EB
008aa4 940e d62d 	CALL SUBOPT_0x2EC
008aa6 940e d63f 	CALL SUBOPT_0x2ED
008aa8 940e d651 	CALL SUBOPT_0x2EE
008aaa e480      	LDI  R24,64
008aab 940e 8007 	CALL _printOLED
008aad 96ef      	ADIW R28,63
008aae 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008aaf 940e d52b 	CALL SUBOPT_0x2DD
008ab1 940e a6eb 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
008ab3 c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
008ab4 e0e0      	LDI  R30,LOW(0)
008ab5 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
008ab7 940e d4b9 	CALL SUBOPT_0x2CD
008ab9 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
008abb 940c 9794 	JMP  _0x2C004E
                 _0x2C0029:
008abd 91a0 14df 	LDS  R26,_currentPage
008abf 30a4      	CPI  R26,LOW(0x4)
008ac0 f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008ac1 940e d666 	CALL SUBOPT_0x2F0
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
008ac3 f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
008ac4 30e3      	CPI  R30,LOW(0x3)
008ac5 e0a0      	LDI  R26,HIGH(0x3)
008ac6 07fa      	CPC  R31,R26
008ac7 f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
008ac8 30e1      	CPI  R30,LOW(0x1)
008ac9 e0a0      	LDI  R26,HIGH(0x1)
008aca 07fa      	CPC  R31,R26
008acb f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008acc 30e4      	CPI  R30,LOW(0x4)
008acd e0a0      	LDI  R26,HIGH(0x4)
008ace 07fa      	CPC  R31,R26
008acf f429      	BRNE _0x2C0052
                 _0x2C0056:
008ad0 e0e3      	LDI  R30,LOW(3)
008ad1 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
008ad3 940e d4be 	CALL SUBOPT_0x2CE
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
008ad5 940c 9794 	JMP  _0x2C0058
                 _0x2C004F:
008ad7 91a0 14df 	LDS  R26,_currentPage
008ad9 30a5      	CPI  R26,LOW(0x5)
008ada f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
008adb 940e d666 	CALL SUBOPT_0x2F0
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
008add f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
008ade 30e3      	CPI  R30,LOW(0x3)
008adf e0a0      	LDI  R26,HIGH(0x3)
008ae0 07fa      	CPC  R31,R26
008ae1 f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
008ae2 30e1      	CPI  R30,LOW(0x1)
008ae3 e0a0      	LDI  R26,HIGH(0x1)
008ae4 07fa      	CPC  R31,R26
008ae5 f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008ae6 30e4      	CPI  R30,LOW(0x4)
008ae7 e0a0      	LDI  R26,HIGH(0x4)
008ae8 07fa      	CPC  R31,R26
008ae9 f429      	BRNE _0x2C005C
                 _0x2C0060:
008aea e0e3      	LDI  R30,LOW(3)
008aeb 940e d66f 	CALL SUBOPT_0x2F1
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
008aed 940e d4be 	CALL SUBOPT_0x2CE
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
008aef 940c 9794 	JMP  _0x2C0062
                 _0x2C0059:
008af1 91a0 14df 	LDS  R26,_currentPage
008af3 30a6      	CPI  R26,LOW(0x6)
008af4 f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
008af5 940e d666 	CALL SUBOPT_0x2F0
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
008af7 f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
008af8 30e3      	CPI  R30,LOW(0x3)
008af9 e0a0      	LDI  R26,HIGH(0x3)
008afa 07fa      	CPC  R31,R26
008afb f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
008afc 30e1      	CPI  R30,LOW(0x1)
008afd e0a0      	LDI  R26,HIGH(0x1)
008afe 07fa      	CPC  R31,R26
008aff f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008b00 30e4      	CPI  R30,LOW(0x4)
008b01 e0a0      	LDI  R26,HIGH(0x4)
008b02 07fa      	CPC  R31,R26
008b03 f429      	BRNE _0x2C0066
                 _0x2C006A:
008b04 e0e3      	LDI  R30,LOW(3)
008b05 940e d675 	CALL SUBOPT_0x2F2
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
008b07 940e d4be 	CALL SUBOPT_0x2CE
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
008b09 940c 9794 	JMP  _0x2C006C
                 _0x2C0063:
008b0b 91a0 14df 	LDS  R26,_currentPage
008b0d 30a7      	CPI  R26,LOW(0x7)
008b0e f011      	BREQ PC+3
008b0f 940c 8b95 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
008b11 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
008b13 f441      	BRNE _0x2C0071
008b14 e0e2      	LDI  R30,LOW(2)
008b15 940e d66f 	CALL SUBOPT_0x2F1
008b17 940e d67b 	CALL SUBOPT_0x2F3
008b19 940e d680 	CALL SUBOPT_0x2F4
008b1b c077      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
008b1c 30e2      	CPI  R30,LOW(0x2)
008b1d e0a0      	LDI  R26,HIGH(0x2)
008b1e 07fa      	CPC  R31,R26
008b1f f449      	BRNE _0x2C0072
008b20 940e d456 	CALL SUBOPT_0x2C3
008b22 f41c      	BRGE _0x2C0073
008b23 e0e1      	LDI  R30,LOW(1)
008b24 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
008b26 940e d45d 	CALL SUBOPT_0x2C4
008b28 c06a      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
008b29 30e3      	CPI  R30,LOW(0x3)
008b2a e0a0      	LDI  R26,HIGH(0x3)
008b2b 07fa      	CPC  R31,R26
008b2c f451      	BRNE _0x2C0074
008b2d 940e d46a 	CALL SUBOPT_0x2C5
008b2f 30a2      	CPI  R26,LOW(0x2)
008b30 f01c      	BRLT _0x2C0075
008b31 e0e0      	LDI  R30,LOW(0)
008b32 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
008b34 940e d45d 	CALL SUBOPT_0x2C4
008b36 c05c      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
008b37 30e4      	CPI  R30,LOW(0x4)
008b38 e0a0      	LDI  R26,HIGH(0x4)
008b39 07fa      	CPC  R31,R26
008b3a f011      	BREQ PC+3
008b3b 940c 8b93 	JMP _0x2C0070
008b3d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008b3f 30e0      	CPI  R30,0
008b40 f561      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
008b41 e0e8      	LDI  R30,LOW(8)
008b42 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
008b44 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
008b46 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
008b48 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
008b4a 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
008b4c e0e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
008b4d e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
008b4e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
008b4f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
008b50 940e d689 	CALL SUBOPT_0x2F5
008b52 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b54 940e d035 	CALL SUBOPT_0x231
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
008b56 940e d68f 	CALL SUBOPT_0x2F6
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
008b58 e3e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
008b59 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
008b5a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
008b5b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
008b5c 940e d689 	CALL SUBOPT_0x2F5
008b5e 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
008b60 e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
008b61 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
008b62 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
008b63 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
008b64 940e e324 	CALL __PUTPARD1
008b66 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b68 940e c4a6 	CALL SUBOPT_0x65
008b6a 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
008b6c c026      	RJMP _0x2C0078
                 _0x2C0077:
008b6d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b6f 30a1      	CPI  R26,LOW(0x1)
008b70 f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
008b71 e0e9      	LDI  R30,LOW(9)
008b72 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
008b74 e4e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008b75 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008b76 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008b77 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008b78 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
008b7a e000     +LDI R16 , LOW ( 0 )
008b7b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
008b7c 300c     +CPI R16 , LOW ( 12 )
008b7d e0e0     +LDI R30 , HIGH ( 12 )
008b7e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008b7f f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
008b80 940e d694 	CALL SUBOPT_0x2F7
008b82 e2ae      	LDI  R26,LOW(_setIp_S0160000000)
008b83 e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
008b84 940e d69c 	CALL SUBOPT_0x2F8
008b86 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0148                                 }
                +
008b88 5f0f     +SUBI R16 , LOW ( - 1 )
008b89 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008b8a cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
008b8b c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
008b8c e0e0      	LDI  R30,LOW(0)
008b8d 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
008b8f 940e d4b9 	CALL SUBOPT_0x2CD
008b91 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
008b93 940c 9794 	JMP  _0x2C007E
                 _0x2C006D:
008b95 91a0 14df 	LDS  R26,_currentPage
008b97 30a8      	CPI  R26,LOW(0x8)
008b98 f011      	BREQ PC+3
008b99 940c 8c2d 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
008b9b 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
008b9d f431      	BRNE _0x2C0083
008b9e e0e7      	LDI  R30,LOW(7)
008b9f 940e d483 	CALL SUBOPT_0x2C7
008ba1 940e d6a1 	CALL SUBOPT_0x2F9
008ba3 c087      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
008ba4 30e2      	CPI  R30,LOW(0x2)
008ba5 e0a0      	LDI  R26,HIGH(0x2)
008ba6 07fa      	CPC  R31,R26
008ba7 f449      	BRNE _0x2C0084
008ba8 940e d456 	CALL SUBOPT_0x2C3
008baa f41c      	BRGE _0x2C0085
008bab e0e2      	LDI  R30,LOW(2)
008bac 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
008bae 940e d68f 	CALL SUBOPT_0x2F6
008bb0 c07a      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008bb1 30e3      	CPI  R30,LOW(0x3)
008bb2 e0a0      	LDI  R26,HIGH(0x3)
008bb3 07fa      	CPC  R31,R26
008bb4 f451      	BRNE _0x2C0086
008bb5 940e d46a 	CALL SUBOPT_0x2C5
008bb7 30a3      	CPI  R26,LOW(0x3)
008bb8 f01c      	BRLT _0x2C0087
008bb9 e0e0      	LDI  R30,LOW(0)
008bba 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
008bbc 940e d68f 	CALL SUBOPT_0x2F6
008bbe c06c      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
008bbf 30e4      	CPI  R30,LOW(0x4)
008bc0 e0a0      	LDI  R26,HIGH(0x4)
008bc1 07fa      	CPC  R31,R26
008bc2 f011      	BREQ PC+3
008bc3 940c 8c2b 	JMP _0x2C0082
008bc5 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008bc7 30e0      	CPI  R30,0
008bc8 f4c9      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
008bc9 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008bcb 940e e210 	CALL __LNEGB1
008bcd 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
008bcf e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008bd0 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008bd1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
008bd2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
008bd3 940e d6a6 	CALL SUBOPT_0x2FA
008bd5 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008bd7 940e d035 	CALL SUBOPT_0x231
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
008bd9 940e d6af 	CALL SUBOPT_0x2FB
008bdb 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008bdd 940e c4a6 	CALL SUBOPT_0x65
008bdf 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008be1 c049      	RJMP _0x2C008A
                 _0x2C0089:
008be2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008be4 30a1      	CPI  R26,LOW(0x1)
008be5 f4c9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
008be6 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008be8 940e e210 	CALL __LNEGB1
008bea 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
008bec e7e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
008bed e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
008bee e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
008bef e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
008bf0 940e d6a6 	CALL SUBOPT_0x2FA
008bf2 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008bf4 940e d035 	CALL SUBOPT_0x231
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
008bf6 940e d6af 	CALL SUBOPT_0x2FB
008bf8 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008bfa 940e c4a6 	CALL SUBOPT_0x65
008bfc 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
008bfe c02c      	RJMP _0x2C008C
                 _0x2C008B:
008bff 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c01 30a2      	CPI  R26,LOW(0x2)
008c02 f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
008c03 91e0 1a5e 	LDS  R30,_devEn_S0160000000
                +
008c05 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
008c07 91e0 1a5f 	LDS  R30,_almEn_S0160000000
                +
008c09 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
008c0b 940e d6b4 	CALL SUBOPT_0x2FC
                 ; 0016 0167                                 if(res < 0){
008c0d f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008c0e 940e d6bb 	CALL SUBOPT_0x2FD
                 ; 0016 0169                                     currentPage = P_FAILED;
008c10 e2e5      	LDI  R30,LOW(37)
008c11 940e d4cb 	CALL SUBOPT_0x2CF
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
008c13 940e d6c1 	CALL SUBOPT_0x2FE
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
008c15 940e d6c8 	CALL SUBOPT_0x2FF
008c17 c007      	RJMP _0x2C02BC
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
008c18 e2e4      	LDI  R30,LOW(36)
008c19 940e d4cb 	CALL SUBOPT_0x2CF
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
008c1b 940e d6c1 	CALL SUBOPT_0x2FE
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
008c1d 940e d6cd 	CALL SUBOPT_0x300
                 _0x2C02BC:
008c1f 940e e324 	CALL __PUTPARD1
008c21 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
008c23 c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
008c24 e0e0      	LDI  R30,LOW(0)
008c25 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
008c27 940e d4b9 	CALL SUBOPT_0x2CD
008c29 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
008c2b 940c 9794 	JMP  _0x2C0091
                 _0x2C007F:
008c2d 91a0 14df 	LDS  R26,_currentPage
008c2f 30a9      	CPI  R26,LOW(0x9)
008c30 f011      	BREQ PC+3
008c31 940c 8ca6 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
008c33 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
008c35 f431      	BRNE _0x2C0096
008c36 e0e7      	LDI  R30,LOW(7)
008c37 940e d66f 	CALL SUBOPT_0x2F1
008c39 940e d6a1 	CALL SUBOPT_0x2F9
008c3b c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
008c3c 30e2      	CPI  R30,LOW(0x2)
008c3d e0a0      	LDI  R26,HIGH(0x2)
008c3e 07fa      	CPC  R31,R26
008c3f f451      	BRNE _0x2C0097
008c40 940e d46a 	CALL SUBOPT_0x2C5
008c42 30ad      	CPI  R26,LOW(0xD)
008c43 f01c      	BRLT _0x2C0098
008c44 e0e0      	LDI  R30,LOW(0)
008c45 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
008c47 940e d6d2 	CALL SUBOPT_0x301
008c49 c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
008c4a 30e3      	CPI  R30,LOW(0x3)
008c4b e0a0      	LDI  R26,HIGH(0x3)
008c4c 07fa      	CPC  R31,R26
008c4d f449      	BRNE _0x2C0099
008c4e 940e d456 	CALL SUBOPT_0x2C3
008c50 f41c      	BRGE _0x2C009A
008c51 e0ec      	LDI  R30,LOW(12)
008c52 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
008c54 940e d6d2 	CALL SUBOPT_0x301
008c56 c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
008c57 30e4      	CPI  R30,LOW(0x4)
008c58 e0a0      	LDI  R26,HIGH(0x4)
008c59 07fa      	CPC  R31,R26
008c5a f011      	BREQ PC+3
008c5b 940c 8ca4 	JMP _0x2C0095
008c5d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c5f 30ac      	CPI  R26,LOW(0xC)
008c60 f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
008c61 e0e0      	LDI  R30,LOW(0)
008c62 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
008c64 e0ea      	LDI  R30,LOW(10)
008c65 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
008c67 ede6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008c68 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008c69 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008c6a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008c6b 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
008c6d e000     +LDI R16 , LOW ( 0 )
008c6e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
008c6f 300c     +CPI R16 , LOW ( 12 )
008c70 e0e0     +LDI R30 , HIGH ( 12 )
008c71 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008c72 f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
008c73 940e d694 	CALL SUBOPT_0x2F7
008c75 e3aa      	LDI  R26,LOW(_setMask_S0160000000)
008c76 e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
008c77 940e d69c 	CALL SUBOPT_0x2F8
008c79 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 018B                                 }
                +
008c7b 5f0f     +SUBI R16 , LOW ( - 1 )
008c7c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008c7d cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
008c7e c025      	RJMP _0x2C00A0
                 _0x2C009C:
008c7f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c81 30ac      	CPI  R26,LOW(0xC)
008c82 f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
008c83 940e d6d7 	CALL SUBOPT_0x302
008c85 f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
008c86 940e d6e2 	CALL SUBOPT_0x303
008c88 30e3      	CPI  R30,LOW(0x3)
008c89 f010      	BRLO _0x2C00A3
008c8a 940e d6eb 	CALL SUBOPT_0x304
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
008c8c c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
008c8d 940e d6e2 	CALL SUBOPT_0x303
008c8f 30ea      	CPI  R30,LOW(0xA)
008c90 f010      	BRLO _0x2C00A5
008c91 940e d6eb 	CALL SUBOPT_0x304
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
008c93 940e d6f3 	CALL SUBOPT_0x305
008c95 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
008c96 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
008c97 81e0      	LD   R30,Z
008c98 940e c4a6 	CALL SUBOPT_0x65
008c9a 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
008c9c c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
008c9d e0e0      	LDI  R30,LOW(0)
008c9e 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
008ca0 940e d4b9 	CALL SUBOPT_0x2CD
008ca2 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
008ca4 940c 9794 	JMP  _0x2C00A7
                 _0x2C0092:
008ca6 91a0 14df 	LDS  R26,_currentPage
008ca8 30aa      	CPI  R26,LOW(0xA)
008ca9 f011      	BREQ PC+3
008caa 940c 8d23 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
008cac 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
008cae f441      	BRNE _0x2C00AC
008caf e0e9      	LDI  R30,LOW(9)
008cb0 940e d483 	CALL SUBOPT_0x2C7
                +
008cb2 e4e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008cb3 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008cb4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008cb5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008cb6 c066      	RJMP _0x2C02BD
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
008cb7 30e2      	CPI  R30,LOW(0x2)
008cb8 e0a0      	LDI  R26,HIGH(0x2)
008cb9 07fa      	CPC  R31,R26
008cba f451      	BRNE _0x2C00AD
008cbb 940e d46a 	CALL SUBOPT_0x2C5
008cbd 30ad      	CPI  R26,LOW(0xD)
008cbe f01c      	BRLT _0x2C00AE
008cbf e0e0      	LDI  R30,LOW(0)
008cc0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
008cc2 940e d6d2 	CALL SUBOPT_0x301
008cc4 c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
008cc5 30e3      	CPI  R30,LOW(0x3)
008cc6 e0a0      	LDI  R26,HIGH(0x3)
008cc7 07fa      	CPC  R31,R26
008cc8 f449      	BRNE _0x2C00AF
008cc9 940e d456 	CALL SUBOPT_0x2C3
008ccb f41c      	BRGE _0x2C00B0
008ccc e0ec      	LDI  R30,LOW(12)
008ccd 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008ccf 940e d6d2 	CALL SUBOPT_0x301
008cd1 c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
008cd2 30e4      	CPI  R30,LOW(0x4)
008cd3 e0a0      	LDI  R26,HIGH(0x4)
008cd4 07fa      	CPC  R31,R26
008cd5 f011      	BREQ PC+3
008cd6 940c 8d21 	JMP _0x2C00AB
008cd8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cda 30ac      	CPI  R26,LOW(0xC)
008cdb f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
008cdc e0e0      	LDI  R30,LOW(0)
008cdd 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008cdf e0eb      	LDI  R30,LOW(11)
008ce0 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
008ce2 ede9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008ce3 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008ce4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008ce5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008ce6 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008ce8 e000     +LDI R16 , LOW ( 0 )
008ce9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
008cea 300c     +CPI R16 , LOW ( 12 )
008ceb e0e0     +LDI R30 , HIGH ( 12 )
008cec 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008ced f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
008cee 940e d694 	CALL SUBOPT_0x2F7
008cf0 e4a6      	LDI  R26,LOW(_setGw_S0160000000)
008cf1 e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
008cf2 940e d69c 	CALL SUBOPT_0x2F8
008cf4 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 01AB                                 }
                +
008cf6 5f0f     +SUBI R16 , LOW ( - 1 )
008cf7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008cf8 cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
008cf9 c027      	RJMP _0x2C00B6
                 _0x2C00B2:
008cfa 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cfc 30ac      	CPI  R26,LOW(0xC)
008cfd f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
008cfe 940e d6d7 	CALL SUBOPT_0x302
008d00 f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
008d01 940e d703 	CALL SUBOPT_0x306
008d03 30e3      	CPI  R30,LOW(0x3)
008d04 f010      	BRLO _0x2C00B9
008d05 940e d70c 	CALL SUBOPT_0x307
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
008d07 c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
008d08 940e d703 	CALL SUBOPT_0x306
008d0a 30ea      	CPI  R30,LOW(0xA)
008d0b f010      	BRLO _0x2C00BB
008d0c 940e d70c 	CALL SUBOPT_0x307
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
008d0e 940e d6f3 	CALL SUBOPT_0x305
008d10 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
008d11 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
008d12 81e0      	LD   R30,Z
008d13 940e c4a6 	CALL SUBOPT_0x65
008d15 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
008d17 c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
008d18 e0e0      	LDI  R30,LOW(0)
008d19 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
008d1b 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02BD:
008d1d 940e e324 	CALL __PUTPARD1
008d1f 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
008d21 940c 9794 	JMP  _0x2C00BD
                 _0x2C00A8:
008d23 91a0 14df 	LDS  R26,_currentPage
008d25 30ab      	CPI  R26,LOW(0xB)
008d26 f011      	BREQ PC+3
008d27 940c 8da0 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
008d29 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
008d2b f441      	BRNE _0x2C00C2
008d2c e0ea      	LDI  R30,LOW(10)
008d2d 940e d483 	CALL SUBOPT_0x2C7
                +
008d2f ede6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008d30 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008d31 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008d32 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008d33 c066      	RJMP _0x2C02BE
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
008d34 30e2      	CPI  R30,LOW(0x2)
008d35 e0a0      	LDI  R26,HIGH(0x2)
008d36 07fa      	CPC  R31,R26
008d37 f451      	BRNE _0x2C00C3
008d38 940e d46a 	CALL SUBOPT_0x2C5
008d3a 30ad      	CPI  R26,LOW(0xD)
008d3b f01c      	BRLT _0x2C00C4
008d3c e0e0      	LDI  R30,LOW(0)
008d3d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
008d3f 940e d6d2 	CALL SUBOPT_0x301
008d41 c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
008d42 30e3      	CPI  R30,LOW(0x3)
008d43 e0a0      	LDI  R26,HIGH(0x3)
008d44 07fa      	CPC  R31,R26
008d45 f449      	BRNE _0x2C00C5
008d46 940e d456 	CALL SUBOPT_0x2C3
008d48 f41c      	BRGE _0x2C00C6
008d49 e0ec      	LDI  R30,LOW(12)
008d4a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
008d4c 940e d6d2 	CALL SUBOPT_0x301
008d4e c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
008d4f 30e4      	CPI  R30,LOW(0x4)
008d50 e0a0      	LDI  R26,HIGH(0x4)
008d51 07fa      	CPC  R31,R26
008d52 f011      	BREQ PC+3
008d53 940c 8d9e 	JMP _0x2C00C1
008d55 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d57 30ac      	CPI  R26,LOW(0xC)
008d58 f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
008d59 e0e0      	LDI  R30,LOW(0)
008d5a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
008d5c e0ec      	LDI  R30,LOW(12)
008d5d 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
008d5f edec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
008d60 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
008d61 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
008d62 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
008d63 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
008d65 e000     +LDI R16 , LOW ( 0 )
008d66 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
008d67 300c     +CPI R16 , LOW ( 12 )
008d68 e0e0     +LDI R30 , HIGH ( 12 )
008d69 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008d6a f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
008d6b 940e d694 	CALL SUBOPT_0x2F7
008d6d e5a2      	LDI  R26,LOW(_setServer_S0160000000)
008d6e e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
008d6f 940e d69c 	CALL SUBOPT_0x2F8
008d71 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 01CB                                 }
                +
008d73 5f0f     +SUBI R16 , LOW ( - 1 )
008d74 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008d75 cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
008d76 c027      	RJMP _0x2C00CC
                 _0x2C00C8:
008d77 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d79 30ac      	CPI  R26,LOW(0xC)
008d7a f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
008d7b 940e d6d7 	CALL SUBOPT_0x302
008d7d f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
008d7e 940e d714 	CALL SUBOPT_0x308
008d80 30e3      	CPI  R30,LOW(0x3)
008d81 f010      	BRLO _0x2C00CF
008d82 940e d71d 	CALL SUBOPT_0x309
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
008d84 c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
008d85 940e d714 	CALL SUBOPT_0x308
008d87 30ea      	CPI  R30,LOW(0xA)
008d88 f010      	BRLO _0x2C00D1
008d89 940e d71d 	CALL SUBOPT_0x309
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
008d8b 940e d6f3 	CALL SUBOPT_0x305
008d8d 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
008d8e 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
008d8f 81e0      	LD   R30,Z
008d90 940e c4a6 	CALL SUBOPT_0x65
008d92 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
008d94 c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
008d95 e0e0      	LDI  R30,LOW(0)
008d96 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
008d98 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02BE:
008d9a 940e e324 	CALL __PUTPARD1
008d9c 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
008d9e 940c 9794 	JMP  _0x2C00D3
                 _0x2C00BE:
008da0 91a0 14df 	LDS  R26,_currentPage
008da2 30ac      	CPI  R26,LOW(0xC)
008da3 f011      	BREQ PC+3
008da4 940c 8e2c 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
008da6 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008da8 f441      	BRNE _0x2C00D8
008da9 e0eb      	LDI  R30,LOW(11)
008daa 940e d483 	CALL SUBOPT_0x2C7
                +
008dac ede9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008dad e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008dae e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008daf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008db0 c075      	RJMP _0x2C02BF
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008db1 30e2      	CPI  R30,LOW(0x2)
008db2 e0a0      	LDI  R26,HIGH(0x2)
008db3 07fa      	CPC  R31,R26
008db4 f451      	BRNE _0x2C00D9
008db5 940e d46a 	CALL SUBOPT_0x2C5
008db7 30ad      	CPI  R26,LOW(0xD)
008db8 f01c      	BRLT _0x2C00DA
008db9 e0e0      	LDI  R30,LOW(0)
008dba 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
008dbc 940e d6d2 	CALL SUBOPT_0x301
008dbe c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008dbf 30e3      	CPI  R30,LOW(0x3)
008dc0 e0a0      	LDI  R26,HIGH(0x3)
008dc1 07fa      	CPC  R31,R26
008dc2 f449      	BRNE _0x2C00DB
008dc3 940e d456 	CALL SUBOPT_0x2C3
008dc5 f41c      	BRGE _0x2C00DC
008dc6 e0ec      	LDI  R30,LOW(12)
008dc7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
008dc9 940e d6d2 	CALL SUBOPT_0x301
008dcb c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
008dcc 30e4      	CPI  R30,LOW(0x4)
008dcd e0a0      	LDI  R26,HIGH(0x4)
008dce 07fa      	CPC  R31,R26
008dcf f011      	BREQ PC+3
008dd0 940c 8e2a 	JMP _0x2C00D7
008dd2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008dd4 30ac      	CPI  R26,LOW(0xC)
008dd5 f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008dd6 e0ed      	LDI  R30,LOW(13)
008dd7 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008dd9 edef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
008dda e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
008ddb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
008ddc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
008ddd 940e d541 	CALL SUBOPT_0x2DF
008ddf 940e d555 	CALL SUBOPT_0x2E0
008de1 940e d567 	CALL SUBOPT_0x2E1
008de3 940e d579 	CALL SUBOPT_0x2E2
008de5 940e d58b 	CALL SUBOPT_0x2E3
008de7 940e d59d 	CALL SUBOPT_0x2E4
008de9 940e d5af 	CALL SUBOPT_0x2E5
008deb 940e d5c1 	CALL SUBOPT_0x2E6
008ded 940e d5d3 	CALL SUBOPT_0x2E7
008def 940e d5e5 	CALL SUBOPT_0x2E8
008df1 940e d5f7 	CALL SUBOPT_0x2E9
008df3 940e d609 	CALL SUBOPT_0x2EA
008df5 940e d61b 	CALL SUBOPT_0x2EB
008df7 940e d62d 	CALL SUBOPT_0x2EC
008df9 940e d63f 	CALL SUBOPT_0x2ED
008dfb 940e d651 	CALL SUBOPT_0x2EE
008dfd e480      	LDI  R24,64
008dfe 940e 8007 	CALL _printOLED
008e00 96ef      	ADIW R28,63
008e01 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
008e02 c027      	RJMP _0x2C00DF
                 _0x2C00DE:
008e03 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e05 30ac      	CPI  R26,LOW(0xC)
008e06 f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
008e07 940e d6d7 	CALL SUBOPT_0x302
008e09 f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
008e0a 940e d725 	CALL SUBOPT_0x30A
008e0c 30e3      	CPI  R30,LOW(0x3)
008e0d f010      	BRLO _0x2C00E2
008e0e 940e d72e 	CALL SUBOPT_0x30B
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
008e10 c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
008e11 940e d725 	CALL SUBOPT_0x30A
008e13 30ea      	CPI  R30,LOW(0xA)
008e14 f010      	BRLO _0x2C00E4
008e15 940e d72e 	CALL SUBOPT_0x30B
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
008e17 940e d6f3 	CALL SUBOPT_0x305
008e19 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
008e1a 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
008e1b 81e0      	LD   R30,Z
008e1c 940e c4a6 	CALL SUBOPT_0x65
008e1e 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
008e20 c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
008e21 e0e0      	LDI  R30,LOW(0)
008e22 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
008e24 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02BF:
008e26 940e e324 	CALL __PUTPARD1
008e28 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
008e2a 940c 9794 	JMP  _0x2C00E6
                 _0x2C00D4:
008e2c 91a0 14df 	LDS  R26,_currentPage
008e2e 30ad      	CPI  R26,LOW(0xD)
008e2f f571      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
008e30 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
008e32 f431      	BRNE _0x2C00EB
008e33 e0e7      	LDI  R30,LOW(7)
008e34 940e d66f 	CALL SUBOPT_0x2F1
008e36 940e d6a1 	CALL SUBOPT_0x2F9
008e38 c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
008e39 30e2      	CPI  R30,LOW(0x2)
008e3a e0a0      	LDI  R26,HIGH(0x2)
008e3b 07fa      	CPC  R31,R26
008e3c f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
008e3d 30e3      	CPI  R30,LOW(0x3)
008e3e e0a0      	LDI  R26,HIGH(0x3)
008e3f 07fa      	CPC  R31,R26
008e40 f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
008e41 30e4      	CPI  R30,LOW(0x4)
008e42 e0a0      	LDI  R26,HIGH(0x4)
008e43 07fa      	CPC  R31,R26
008e44 f4b9      	BRNE _0x2C00EA
008e45 e2e4      	LDI  R30,LOW(36)
008e46 940e d4cb 	CALL SUBOPT_0x2CF
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
008e48 e0ed      	LDI  R30,LOW(13)
008e49 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
008e4b 940e d532 	CALL SUBOPT_0x2DE
008e4d 940e 5f16 	CALL _ETH_setConfig
008e4f 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008e50 2355      	TST  R21
008e51 f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008e52 e1e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008e53 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008e54 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008e55 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008e56 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008e58 940e d6cd 	CALL SUBOPT_0x300
008e5a 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
008e5c 940c 9794 	JMP  _0x2C00F0
                 _0x2C00E7:
008e5e 91a0 14df 	LDS  R26,_currentPage
008e60 30ae      	CPI  R26,LOW(0xE)
008e61 f011      	BREQ PC+3
008e62 940c 8eb3 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008e64 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008e66 f431      	BRNE _0x2C00F5
008e67 e0e1      	LDI  R30,LOW(1)
008e68 940e d66f 	CALL SUBOPT_0x2F1
008e6a 940e d73c 	CALL SUBOPT_0x30D
008e6c c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
008e6d 30e2      	CPI  R30,LOW(0x2)
008e6e e0a0      	LDI  R26,HIGH(0x2)
008e6f 07fa      	CPC  R31,R26
008e70 f449      	BRNE _0x2C00F6
008e71 940e d456 	CALL SUBOPT_0x2C3
008e73 f41c      	BRGE _0x2C00F7
008e74 e0e1      	LDI  R30,LOW(1)
008e75 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008e77 940e d45d 	CALL SUBOPT_0x2C4
008e79 c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008e7a 30e3      	CPI  R30,LOW(0x3)
008e7b e0a0      	LDI  R26,HIGH(0x3)
008e7c 07fa      	CPC  R31,R26
008e7d f451      	BRNE _0x2C00F8
008e7e 940e d46a 	CALL SUBOPT_0x2C5
008e80 30a2      	CPI  R26,LOW(0x2)
008e81 f01c      	BRLT _0x2C00F9
008e82 e0e0      	LDI  R30,LOW(0)
008e83 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008e85 940e d45d 	CALL SUBOPT_0x2C4
008e87 c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008e88 30e4      	CPI  R30,LOW(0x4)
008e89 e0a0      	LDI  R26,HIGH(0x4)
008e8a 07fa      	CPC  R31,R26
008e8b f529      	BRNE _0x2C00F4
008e8c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008e8e 30e0      	CPI  R30,0
008e8f f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
008e90 e0ef      	LDI  R30,LOW(15)
008e91 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008e93 940e d741 	CALL SUBOPT_0x30E
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008e95 c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008e96 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e98 30a1      	CPI  R26,LOW(0x1)
008e99 f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008e9a e2e1      	LDI  R30,LOW(33)
008e9b 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
008e9d e1e0      	LDI  R30,LOW(16)
008e9e 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
008ea0 e0ee      	LDI  R30,LOW(14)
008ea1 940e d4a9 	CALL SUBOPT_0x2CB
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008ea3 940e d4b3 	CALL SUBOPT_0x2CC
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008ea5 940e d4d1 	CALL SUBOPT_0x2D0
008ea7 c005      	RJMP _0x2C02C0
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008ea8 e0e0      	LDI  R30,LOW(0)
008ea9 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
008eab 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02C0:
008ead 940e e324 	CALL __PUTPARD1
008eaf 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008eb1 940c 9794 	JMP  _0x2C00FF
                 _0x2C00F1:
008eb3 91a0 14df 	LDS  R26,_currentPage
008eb5 30af      	CPI  R26,LOW(0xF)
008eb6 f549      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008eb7 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008eb9 f0f9      	BREQ _0x2C02C1
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008eba 30e2      	CPI  R30,LOW(0x2)
008ebb e0a0      	LDI  R26,HIGH(0x2)
008ebc 07fa      	CPC  R31,R26
008ebd f451      	BRNE _0x2C0105
008ebe 940e d46a 	CALL SUBOPT_0x2C5
008ec0 30a5      	CPI  R26,LOW(0x5)
008ec1 f01c      	BRLT _0x2C0106
008ec2 e0e0      	LDI  R30,LOW(0)
008ec3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008ec5 940e d741 	CALL SUBOPT_0x30E
008ec7 c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008ec8 30e3      	CPI  R30,LOW(0x3)
008ec9 e0a0      	LDI  R26,HIGH(0x3)
008eca 07fa      	CPC  R31,R26
008ecb f449      	BRNE _0x2C0107
008ecc 940e d456 	CALL SUBOPT_0x2C3
008ece f41c      	BRGE _0x2C0108
008ecf e0e4      	LDI  R30,LOW(4)
008ed0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008ed2 940e d741 	CALL SUBOPT_0x30E
008ed4 c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008ed5 30e4      	CPI  R30,LOW(0x4)
008ed6 e0a0      	LDI  R26,HIGH(0x4)
008ed7 07fa      	CPC  R31,R26
008ed8 f429      	BRNE _0x2C0103
                 _0x2C02C1:
008ed9 e0ee      	LDI  R30,LOW(14)
008eda 940e d483 	CALL SUBOPT_0x2C7
008edc 940e d489 	CALL SUBOPT_0x2C8
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
008ede 940c 9794 	JMP  _0x2C010A
                 _0x2C0100:
008ee0 91a0 14df 	LDS  R26,_currentPage
008ee2 31a0      	CPI  R26,LOW(0x10)
008ee3 f011      	BREQ PC+3
008ee4 940c 8f69 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008ee6 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008ee8 f431      	BRNE _0x2C010F
008ee9 e0ee      	LDI  R30,LOW(14)
008eea 940e d66f 	CALL SUBOPT_0x2F1
008eec 940e d489 	CALL SUBOPT_0x2C8
008eee c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
008eef 30e2      	CPI  R30,LOW(0x2)
008ef0 e0a0      	LDI  R26,HIGH(0x2)
008ef1 07fa      	CPC  R31,R26
008ef2 f449      	BRNE _0x2C0110
008ef3 940e d456 	CALL SUBOPT_0x2C3
008ef5 f41c      	BRGE _0x2C0111
008ef6 e0e5      	LDI  R30,LOW(5)
008ef7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
008ef9 940e d45d 	CALL SUBOPT_0x2C4
008efb c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
008efc 30e3      	CPI  R30,LOW(0x3)
008efd e0a0      	LDI  R26,HIGH(0x3)
008efe 07fa      	CPC  R31,R26
008eff f451      	BRNE _0x2C0112
008f00 940e d46a 	CALL SUBOPT_0x2C5
008f02 30a6      	CPI  R26,LOW(0x6)
008f03 f01c      	BRLT _0x2C0113
008f04 e0e0      	LDI  R30,LOW(0)
008f05 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
008f07 940e d45d 	CALL SUBOPT_0x2C4
008f09 c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
008f0a 30e4      	CPI  R30,LOW(0x4)
008f0b e0a0      	LDI  R26,HIGH(0x4)
008f0c 07fa      	CPC  R31,R26
008f0d f011      	BREQ PC+3
008f0e 940c 8f67 	JMP _0x2C010E
008f10 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f12 30a5      	CPI  R26,LOW(0x5)
008f13 f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
008f14 940e d748 	CALL SUBOPT_0x30F
008f16 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
008f17 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
008f18 940e d74c 	CALL SUBOPT_0x310
008f1a 940e e210 	CALL __LNEGB1
008f1c 940e d753 	CALL SUBOPT_0x311
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
008f1e 940e d75b 	CALL SUBOPT_0x312
008f20 940e d74c 	CALL SUBOPT_0x310
008f22 940e c4a6 	CALL SUBOPT_0x65
008f24 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
008f26 c040      	RJMP _0x2C0116
                 _0x2C0115:
008f27 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f29 30a5      	CPI  R26,LOW(0x5)
008f2a f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
008f2b 940e d762 	CALL SUBOPT_0x313
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
008f2d e0e0      	LDI  R30,LOW(0)
008f2e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
008f30 e000     +LDI R16 , LOW ( 0 )
008f31 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
008f32 3005     +CPI R16 , LOW ( 5 )
008f33 e0e0     +LDI R30 , HIGH ( 5 )
008f34 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008f35 f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
008f36 940e d50a 	CALL SUBOPT_0x2D8
008f38 010f      	MOVW R0,R30
008f39 e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
008f3a e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
008f3b 0fa0      	ADD  R26,R16
008f3c 1fb1      	ADC  R27,R17
008f3d 91ec      	LD   R30,X
008f3e 01d0      	MOVW R26,R0
008f3f 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
008f40 5f0f     +SUBI R16 , LOW ( - 1 )
008f41 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008f42 cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
008f43 940e d6b4 	CALL SUBOPT_0x2FC
                 ; 0016 025A                                 if(res < 0){
008f45 f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008f46 940e d6bb 	CALL SUBOPT_0x2FD
                 ; 0016 025C                                     currentPage = P_FAILED;
008f48 e2e5      	LDI  R30,LOW(37)
008f49 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
008f4b e0ee      	LDI  R30,LOW(14)
008f4c 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
008f4e e1e0      	LDI  R30,LOW(16)
008f4f 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
008f51 940e d6c8 	CALL SUBOPT_0x2FF
008f53 c007      	RJMP _0x2C02C2
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008f54 940e d762 	CALL SUBOPT_0x313
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008f56 e1e0      	LDI  R30,LOW(16)
008f57 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008f59 940e d6cd 	CALL SUBOPT_0x300
                 _0x2C02C2:
008f5b 940e e324 	CALL __PUTPARD1
008f5d 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
008f5f c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
008f60 e0e0      	LDI  R30,LOW(0)
008f61 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008f63 940e d4b9 	CALL SUBOPT_0x2CD
008f65 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008f67 940c 9794 	JMP  _0x2C011E
                 _0x2C010B:
008f69 91a0 14df 	LDS  R26,_currentPage
008f6b 31a1      	CPI  R26,LOW(0x11)
008f6c f011      	BREQ PC+3
008f6d 940c 8fc9 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
008f6f 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
008f71 f431      	BRNE _0x2C0123
008f72 e0e1      	LDI  R30,LOW(1)
008f73 940e d675 	CALL SUBOPT_0x2F2
008f75 940e d73c 	CALL SUBOPT_0x30D
008f77 c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008f78 30e2      	CPI  R30,LOW(0x2)
008f79 e0a0      	LDI  R26,HIGH(0x2)
008f7a 07fa      	CPC  R31,R26
008f7b f449      	BRNE _0x2C0124
008f7c 940e d456 	CALL SUBOPT_0x2C3
008f7e f41c      	BRGE _0x2C0125
008f7f e0e1      	LDI  R30,LOW(1)
008f80 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
008f82 940e d45d 	CALL SUBOPT_0x2C4
008f84 c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008f85 30e3      	CPI  R30,LOW(0x3)
008f86 e0a0      	LDI  R26,HIGH(0x3)
008f87 07fa      	CPC  R31,R26
008f88 f451      	BRNE _0x2C0126
008f89 940e d46a 	CALL SUBOPT_0x2C5
008f8b 30a2      	CPI  R26,LOW(0x2)
008f8c f01c      	BRLT _0x2C0127
008f8d e0e0      	LDI  R30,LOW(0)
008f8e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
008f90 940e d45d 	CALL SUBOPT_0x2C4
008f92 c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
008f93 30e4      	CPI  R30,LOW(0x4)
008f94 e0a0      	LDI  R26,HIGH(0x4)
008f95 07fa      	CPC  R31,R26
008f96 f589      	BRNE _0x2C0122
008f97 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008f99 30e0      	CPI  R30,0
008f9a f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
008f9b e1e2      	LDI  R30,LOW(18)
008f9c 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
008f9e 91e0 148b 	LDS  R30,_muteMode
008fa0 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
008fa2 940e d769 	CALL SUBOPT_0x314
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
008fa4 940e d6af 	CALL SUBOPT_0x2FB
008fa6 91e0 1a65 	LDS  R30,_mute_S0160000000
008fa8 940e c4a6 	CALL SUBOPT_0x65
008faa 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
008fac c01b      	RJMP _0x2C012A
                 _0x2C0129:
008fad 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008faf 30a1      	CPI  R26,LOW(0x1)
008fb0 f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
008fb1 e2e1      	LDI  R30,LOW(33)
008fb2 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
008fb4 e1e3      	LDI  R30,LOW(19)
008fb5 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
008fb7 e1e1      	LDI  R30,LOW(17)
008fb8 940e d4a9 	CALL SUBOPT_0x2CB
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
008fba 940e d4b3 	CALL SUBOPT_0x2CC
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
008fbc 940e d4d1 	CALL SUBOPT_0x2D0
008fbe c005      	RJMP _0x2C02C3
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
008fbf e0e0      	LDI  R30,LOW(0)
008fc0 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
008fc2 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02C3:
008fc4 940e e324 	CALL __PUTPARD1
008fc6 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
008fc8 c7cb      	RJMP _0x2C012D
                 _0x2C011F:
008fc9 91a0 14df 	LDS  R26,_currentPage
008fcb 31a2      	CPI  R26,LOW(0x12)
008fcc f011      	BREQ PC+3
008fcd 940c 9027 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
008fcf 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
008fd1 f431      	BRNE _0x2C0132
008fd2 e1e1      	LDI  R30,LOW(17)
008fd3 940e d483 	CALL SUBOPT_0x2C7
008fd5 940e d496 	CALL SUBOPT_0x2C9
008fd7 c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
008fd8 30e2      	CPI  R30,LOW(0x2)
008fd9 e0a0      	LDI  R26,HIGH(0x2)
008fda 07fa      	CPC  R31,R26
008fdb f449      	BRNE _0x2C0133
008fdc 940e d456 	CALL SUBOPT_0x2C3
008fde f41c      	BRGE _0x2C0134
008fdf e0e1      	LDI  R30,LOW(1)
008fe0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
008fe2 940e d769 	CALL SUBOPT_0x314
008fe4 c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
008fe5 30e3      	CPI  R30,LOW(0x3)
008fe6 e0a0      	LDI  R26,HIGH(0x3)
008fe7 07fa      	CPC  R31,R26
008fe8 f451      	BRNE _0x2C0135
008fe9 940e d46a 	CALL SUBOPT_0x2C5
008feb 30a2      	CPI  R26,LOW(0x2)
008fec f01c      	BRLT _0x2C0136
008fed e0e0      	LDI  R30,LOW(0)
008fee 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
008ff0 940e d769 	CALL SUBOPT_0x314
008ff2 c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
008ff3 30e4      	CPI  R30,LOW(0x4)
008ff4 e0a0      	LDI  R26,HIGH(0x4)
008ff5 07fa      	CPC  R31,R26
008ff6 f579      	BRNE _0x2C0131
008ff7 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008ff9 30e0      	CPI  R30,0
008ffa f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
008ffb 91e0 1a65 	LDS  R30,_mute_S0160000000
008ffd 940e e210 	CALL __LNEGB1
008fff 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
009001 940e d6af 	CALL SUBOPT_0x2FB
009003 91e0 1a65 	LDS  R30,_mute_S0160000000
009005 940e c4a6 	CALL SUBOPT_0x65
009007 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
009009 c01c      	RJMP _0x2C0139
                 _0x2C0138:
00900a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00900c 30a1      	CPI  R26,LOW(0x1)
00900d f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
00900e 940e d76e 	CALL SUBOPT_0x315
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
009010 e1e2      	LDI  R30,LOW(18)
009011 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
009013 91e0 1a65 	LDS  R30,_mute_S0160000000
009015 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
009017 e0e0      	LDI  R30,LOW(0)
009018 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
00901a 940e d6cd 	CALL SUBOPT_0x300
00901c c005      	RJMP _0x2C02C4
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
00901d e0e0      	LDI  R30,LOW(0)
00901e 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
009020 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02C4:
009022 940e e324 	CALL __PUTPARD1
009024 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
009026 c76d      	RJMP _0x2C013C
                 _0x2C012E:
009027 91a0 14df 	LDS  R26,_currentPage
009029 31a3      	CPI  R26,LOW(0x13)
00902a f011      	BREQ PC+3
00902b 940c 9089 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
00902d 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
00902f f431      	BRNE _0x2C0141
009030 e1e1      	LDI  R30,LOW(17)
009031 940e d66f 	CALL SUBOPT_0x2F1
009033 940e d496 	CALL SUBOPT_0x2C9
009035 c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
009036 30e2      	CPI  R30,LOW(0x2)
009037 e0a0      	LDI  R26,HIGH(0x2)
009038 07fa      	CPC  R31,R26
009039 f481      	BRNE _0x2C0142
00903a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00903c 30a4      	CPI  R26,LOW(0x4)
00903d f414      	BRGE _0x2C0143
00903e 940e d775 	CALL SUBOPT_0x316
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
009040 940e d46a 	CALL SUBOPT_0x2C5
009042 30a5      	CPI  R26,LOW(0x5)
009043 f01c      	BRLT _0x2C0144
009044 e0e0      	LDI  R30,LOW(0)
009045 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
009047 940e d77a 	CALL SUBOPT_0x317
009049 c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
00904a 30e3      	CPI  R30,LOW(0x3)
00904b e0a0      	LDI  R26,HIGH(0x3)
00904c 07fa      	CPC  R31,R26
00904d f479      	BRNE _0x2C0145
00904e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009050 30a4      	CPI  R26,LOW(0x4)
009051 f414      	BRGE _0x2C0146
009052 940e d775 	CALL SUBOPT_0x316
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
009054 940e d456 	CALL SUBOPT_0x2C3
009056 f41c      	BRGE _0x2C0147
009057 e0e4      	LDI  R30,LOW(4)
009058 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
00905a 940e d77a 	CALL SUBOPT_0x317
00905c c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
00905d 30e4      	CPI  R30,LOW(0x4)
00905e e0a0      	LDI  R26,HIGH(0x4)
00905f 07fa      	CPC  R31,R26
009060 f539      	BRNE _0x2C0140
009061 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009063 30a4      	CPI  R26,LOW(0x4)
009064 f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
009065 e1e4      	LDI  R30,LOW(20)
009066 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
009068 940e d77f 	CALL SUBOPT_0x318
00906a 940e d4b3 	CALL SUBOPT_0x2CC
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
00906c e5e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
00906d e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
00906e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
00906f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
009070 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
009072 c015      	RJMP _0x2C014A
                 _0x2C0149:
009073 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009075 30a4      	CPI  R26,LOW(0x4)
009076 f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
009077 940e d748 	CALL SUBOPT_0x30F
009079 5daa      	SUBI R26,LOW(-_newPwd_S0160000000)
00907a 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
00907b 940e d787 	CALL SUBOPT_0x319
00907d f024      	BRLT _0x2C014C
00907e 940e d78c 	CALL SUBOPT_0x31A
009080 e0a0      	LDI  R26,LOW(0)
009081 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
009082 940e d792 	CALL SUBOPT_0x31B
009084 940e d78c 	CALL SUBOPT_0x31A
009086 940e d799 	CALL SUBOPT_0x31C
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
009088 c70b      	RJMP _0x2C014D
                 _0x2C013D:
009089 91a0 14df 	LDS  R26,_currentPage
00908b 31a4      	CPI  R26,LOW(0x14)
00908c f011      	BREQ PC+3
00908d 940c 9119 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
00908f 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
009091 f431      	BRNE _0x2C0152
009092 e1e1      	LDI  R30,LOW(17)
009093 940e d66f 	CALL SUBOPT_0x2F1
009095 940e d496 	CALL SUBOPT_0x2C9
009097 c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
009098 30e2      	CPI  R30,LOW(0x2)
009099 e0a0      	LDI  R26,HIGH(0x2)
00909a 07fa      	CPC  R31,R26
00909b f481      	BRNE _0x2C0153
00909c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00909e 30a4      	CPI  R26,LOW(0x4)
00909f f414      	BRGE _0x2C0154
0090a0 940e d775 	CALL SUBOPT_0x316
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
0090a2 940e d46a 	CALL SUBOPT_0x2C5
0090a4 30a5      	CPI  R26,LOW(0x5)
0090a5 f01c      	BRLT _0x2C0155
0090a6 e0e0      	LDI  R30,LOW(0)
0090a7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
0090a9 940e d77a 	CALL SUBOPT_0x317
0090ab c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
0090ac 30e3      	CPI  R30,LOW(0x3)
0090ad e0a0      	LDI  R26,HIGH(0x3)
0090ae 07fa      	CPC  R31,R26
0090af f479      	BRNE _0x2C0156
0090b0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090b2 30a4      	CPI  R26,LOW(0x4)
0090b3 f414      	BRGE _0x2C0157
0090b4 940e d775 	CALL SUBOPT_0x316
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
0090b6 940e d456 	CALL SUBOPT_0x2C3
0090b8 f41c      	BRGE _0x2C0158
0090b9 e0e4      	LDI  R30,LOW(4)
0090ba 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
0090bc 940e d77a 	CALL SUBOPT_0x317
0090be c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
0090bf 30e4      	CPI  R30,LOW(0x4)
0090c0 e0a0      	LDI  R26,HIGH(0x4)
0090c1 07fa      	CPC  R31,R26
0090c2 f011      	BREQ PC+3
0090c3 940c 9118 	JMP _0x2C0151
0090c5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090c7 30a4      	CPI  R26,LOW(0x4)
0090c8 f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
0090c9 940e d79d 	CALL SUBOPT_0x31D
0090cb e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
0090cc e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
0090cd 940e d333 	CALL SUBOPT_0x2A1
0090cf 940e a6f4 	CALL _memcmp
0090d1 30e0      	CPI  R30,0
0090d2 f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
0090d3 e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
0090d4 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
0090d5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
0090d6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
0090d7 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
0090d9 940e d79d 	CALL SUBOPT_0x31D
0090db 940e d7a2 	CALL SUBOPT_0x31E
0090dd 940e a752 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
0090df 940e d77f 	CALL SUBOPT_0x318
0090e1 940e a752 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
0090e3 e2e5      	LDI  R30,LOW(37)
0090e4 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
0090e6 e1e1      	LDI  R30,LOW(17)
0090e7 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
0090e9 e1e4      	LDI  R30,LOW(20)
0090ea 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
0090ec 940e d6c8 	CALL SUBOPT_0x2FF
0090ee c00f      	RJMP _0x2C02C5
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
0090ef 940e d7a6 	CALL SUBOPT_0x31F
0090f1 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
0090f2 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
0090f3 940e d333 	CALL SUBOPT_0x2A1
0090f5 940e 9b3f 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
0090f7 940e d76e 	CALL SUBOPT_0x315
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
0090f9 e1e4      	LDI  R30,LOW(20)
0090fa 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
0090fc 940e d6cd 	CALL SUBOPT_0x300
                 _0x2C02C5:
0090fe 940e e324 	CALL __PUTPARD1
009100 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
009102 c015      	RJMP _0x2C015D
                 _0x2C015A:
009103 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009105 30a4      	CPI  R26,LOW(0x4)
009106 f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
009107 940e d748 	CALL SUBOPT_0x30F
009109 5da6      	SUBI R26,LOW(-_confPwd_S0160000000)
00910a 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
00910b 940e d787 	CALL SUBOPT_0x319
00910d f024      	BRLT _0x2C015F
00910e 940e d7af 	CALL SUBOPT_0x320
009110 e0a0      	LDI  R26,LOW(0)
009111 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
009112 940e d792 	CALL SUBOPT_0x31B
009114 940e d7af 	CALL SUBOPT_0x320
009116 940e d799 	CALL SUBOPT_0x31C
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
009118 c67b      	RJMP _0x2C0160
                 _0x2C014E:
009119 91a0 14df 	LDS  R26,_currentPage
00911b 31a5      	CPI  R26,LOW(0x15)
00911c f011      	BREQ PC+3
00911d 940c 91ae 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
00911f 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
009121 f419      	BRNE _0x2C0165
009122 940e d7b5 	CALL SUBOPT_0x321
009124 c088      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
009125 30e2      	CPI  R30,LOW(0x2)
009126 e0a0      	LDI  R26,HIGH(0x2)
009127 07fa      	CPC  R31,R26
009128 f449      	BRNE _0x2C0166
009129 940e d456 	CALL SUBOPT_0x2C3
00912b f41c      	BRGE _0x2C0167
00912c e0e3      	LDI  R30,LOW(3)
00912d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
00912f 940e d45d 	CALL SUBOPT_0x2C4
009131 c07b      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
009132 30e3      	CPI  R30,LOW(0x3)
009133 e0a0      	LDI  R26,HIGH(0x3)
009134 07fa      	CPC  R31,R26
009135 f451      	BRNE _0x2C0168
009136 940e d46a 	CALL SUBOPT_0x2C5
009138 30a4      	CPI  R26,LOW(0x4)
009139 f01c      	BRLT _0x2C0169
00913a e0e0      	LDI  R30,LOW(0)
00913b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
00913d 940e d45d 	CALL SUBOPT_0x2C4
00913f c06d      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
009140 30e4      	CPI  R30,LOW(0x4)
009141 e0a0      	LDI  R26,HIGH(0x4)
009142 07fa      	CPC  R31,R26
009143 f011      	BREQ PC+3
009144 940c 91ad 	JMP _0x2C0164
009146 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009148 30e0      	CPI  R30,0
009149 f571      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
00914a e1e6      	LDI  R30,LOW(22)
00914b 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
00914d e6a6      	LDI  R26,LOW(_vRef_S0160000000)
00914e e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
00914f 940e 994a 	CALL _get_current_vref
009151 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
009152 2355      	TST  R21
009153 f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
009154 e0e2      	LDI  R30,LOW(2)
009155 93e0 1a66 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
009157 e0e5      	LDI  R30,LOW(5)
                +
009158 93e0 1a67+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
00915a e0e6      	LDI  R30,LOW(6)
                +
00915b 93e0 1a68+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
00915d e8ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
00915e e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
00915f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
009160 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
009161 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
009163 e000     +LDI R16 , LOW ( 0 )
009164 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
009165 3003     +CPI R16 , LOW ( 3 )
009166 e0e0     +LDI R30 , HIGH ( 3 )
009167 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
009168 f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
009169 940e d7bc 	CALL SUBOPT_0x322
00916b 01f8      	MOVW R30,R16
00916c 940e d134 	CALL SUBOPT_0x254
00916e e6a6      	LDI  R26,LOW(_vRef_S0160000000)
00916f e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
009170 940e d69c 	CALL SUBOPT_0x2F8
009172 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 02F5                                 }
                +
009174 5f0f     +SUBI R16 , LOW ( - 1 )
009175 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009176 cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
009177 c035      	RJMP _0x2C0170
                 _0x2C016B:
009178 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00917a 30a1      	CPI  R26,LOW(0x1)
00917b f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
00917c e1e7      	LDI  R30,LOW(23)
00917d 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
00917f e0e0      	LDI  R30,LOW(0)
009180 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
009182 940e d7c3 	CALL SUBOPT_0x323
009184 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
009186 c026      	RJMP _0x2C0172
                 _0x2C0171:
009187 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009189 30a2      	CPI  R26,LOW(0x2)
00918a f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
00918b e1ea      	LDI  R30,LOW(26)
00918c 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
00918e e0e0      	LDI  R30,LOW(0)
00918f 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
009191 940e d7ce 	CALL SUBOPT_0x324
009193 940e d7d5 	CALL SUBOPT_0x325
009195 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
009197 c015      	RJMP _0x2C0174
                 _0x2C0173:
009198 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00919a 30a3      	CPI  R26,LOW(0x3)
00919b f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
00919c e2e0      	LDI  R30,LOW(32)
00919d 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
00919f eae4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
0091a0 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
0091a1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
0091a2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
0091a3 c005      	RJMP _0x2C02C6
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
0091a4 e0e0      	LDI  R30,LOW(0)
0091a5 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
0091a7 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02C6:
0091a9 940e e324 	CALL __PUTPARD1
0091ab 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
0091ad c5e6      	RJMP _0x2C0177
                 _0x2C0161:
0091ae 91a0 14df 	LDS  R26,_currentPage
0091b0 31a6      	CPI  R26,LOW(0x16)
0091b1 f011      	BREQ PC+3
0091b2 940c 9215 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
0091b4 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
0091b6 f431      	BRNE _0x2C017C
0091b7 e1e5      	LDI  R30,LOW(21)
0091b8 940e d483 	CALL SUBOPT_0x2C7
0091ba 940e d7da 	CALL SUBOPT_0x326
0091bc c057      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
0091bd 30e2      	CPI  R30,LOW(0x2)
0091be e0a0      	LDI  R26,HIGH(0x2)
0091bf 07fa      	CPC  R31,R26
0091c0 f451      	BRNE _0x2C017D
0091c1 940e d46a 	CALL SUBOPT_0x2C5
0091c3 30a4      	CPI  R26,LOW(0x4)
0091c4 f01c      	BRLT _0x2C017E
0091c5 e0e0      	LDI  R30,LOW(0)
0091c6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
0091c8 940e d7df 	CALL SUBOPT_0x327
0091ca c049      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
0091cb 30e3      	CPI  R30,LOW(0x3)
0091cc e0a0      	LDI  R26,HIGH(0x3)
0091cd 07fa      	CPC  R31,R26
0091ce f449      	BRNE _0x2C017F
0091cf 940e d456 	CALL SUBOPT_0x2C3
0091d1 f41c      	BRGE _0x2C0180
0091d2 e0e3      	LDI  R30,LOW(3)
0091d3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
0091d5 940e d7df 	CALL SUBOPT_0x327
0091d7 c03c      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
0091d8 30e4      	CPI  R30,LOW(0x4)
0091d9 e0a0      	LDI  R26,HIGH(0x4)
0091da 07fa      	CPC  R31,R26
0091db f5c1      	BRNE _0x2C017B
0091dc 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0091de 30a3      	CPI  R26,LOW(0x3)
0091df f481      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
0091e0 e2e4      	LDI  R30,LOW(36)
0091e1 940e d4a3 	CALL SUBOPT_0x2CA
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
0091e3 e1e6      	LDI  R30,LOW(22)
0091e4 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
0091e6 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
0091e7 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0091e8 940e 9ad9 	CALL _set_vref
                 ; 0016 031B                                 cursor = 0;
0091ea e0e0      	LDI  R30,LOW(0)
0091eb 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
0091ed 940e d6cd 	CALL SUBOPT_0x300
0091ef c020      	RJMP _0x2C02C7
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
0091f0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0091f2 30a3      	CPI  R26,LOW(0x3)
0091f3 f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
0091f4 940e d748 	CALL SUBOPT_0x30F
0091f6 59aa      	SUBI R26,LOW(-_vRef_S0160000000)
0091f7 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
0091f8 940e d787 	CALL SUBOPT_0x319
0091fa f020      	BRLO _0x2C0185
0091fb 940e d7e4 	CALL SUBOPT_0x328
0091fd e0a0      	LDI  R26,LOW(0)
0091fe 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
0091ff 940e d7bc 	CALL SUBOPT_0x322
009201 940e d75b 	CALL SUBOPT_0x312
009203 940e d7e4 	CALL SUBOPT_0x328
009205 81e0      	LD   R30,Z
009206 940e c4a6 	CALL SUBOPT_0x65
009208 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
00920a c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
00920b e0e0      	LDI  R30,LOW(0)
00920c 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
00920e 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02C7:
009210 940e e324 	CALL __PUTPARD1
009212 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
009214 c57f      	RJMP _0x2C0187
                 _0x2C0178:
009215 91a0 14df 	LDS  R26,_currentPage
009217 31a7      	CPI  R26,LOW(0x17)
009218 f011      	BREQ PC+3
009219 940c 9270 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
00921b 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
00921d f449      	BRNE _0x2C018C
00921e e1e5      	LDI  R30,LOW(21)
00921f 940e d66f 	CALL SUBOPT_0x2F1
009221 e0e0      	LDI  R30,LOW(0)
009222 93e0 1a69 	STS  _prb1_S0160000000,R30
009224 940e d7da 	CALL SUBOPT_0x326
009226 c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
009227 30e2      	CPI  R30,LOW(0x2)
009228 e0a0      	LDI  R26,HIGH(0x2)
009229 07fa      	CPC  R31,R26
00922a f451      	BRNE _0x2C018D
00922b 940e d46a 	CALL SUBOPT_0x2C5
00922d 30a2      	CPI  R26,LOW(0x2)
00922e f01c      	BRLT _0x2C018E
00922f e0e0      	LDI  R30,LOW(0)
009230 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
009232 940e d7ea 	CALL SUBOPT_0x329
009234 c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
009235 30e3      	CPI  R30,LOW(0x3)
009236 e0a0      	LDI  R26,HIGH(0x3)
009237 07fa      	CPC  R31,R26
009238 f449      	BRNE _0x2C018F
009239 940e d456 	CALL SUBOPT_0x2C3
00923b f41c      	BRGE _0x2C0190
00923c e0e1      	LDI  R30,LOW(1)
00923d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
00923f 940e d7ea 	CALL SUBOPT_0x329
009241 c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
009242 30e4      	CPI  R30,LOW(0x4)
009243 e0a0      	LDI  R26,HIGH(0x4)
009244 07fa      	CPC  R31,R26
009245 f549      	BRNE _0x2C018B
009246 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009248 30e0      	CPI  R30,0
009249 f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
00924a 940e d7ef 	CALL SUBOPT_0x32A
00924c f018      	BRLO _0x2C0193
00924d e0e0      	LDI  R30,LOW(0)
00924e 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
009250 940e d7f6 	CALL SUBOPT_0x32B
009252 940e d7d5 	CALL SUBOPT_0x325
009254 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
009256 c018      	RJMP _0x2C0194
                 _0x2C0192:
009257 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009259 30a1      	CPI  R26,LOW(0x1)
00925a f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
00925b e1e8      	LDI  R30,LOW(24)
00925c 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
00925e e0e0      	LDI  R30,LOW(0)
00925f 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
009261 940e d7ce 	CALL SUBOPT_0x324
009263 940e d7fd 	CALL SUBOPT_0x32C
009265 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
009267 c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
009268 e0e0      	LDI  R30,LOW(0)
009269 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
00926b 940e d4b9 	CALL SUBOPT_0x2CD
00926d 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
00926f c524      	RJMP _0x2C0197
                 _0x2C0188:
009270 91a0 14df 	LDS  R26,_currentPage
009272 31a8      	CPI  R26,LOW(0x18)
009273 f011      	BREQ PC+3
009274 940c 92ce 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
009276 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
009278 f459      	BRNE _0x2C019C
009279 e1e7      	LDI  R30,LOW(23)
00927a 940e d483 	CALL SUBOPT_0x2C7
00927c e0e0      	LDI  R30,LOW(0)
00927d 93e0 1a6a 	STS  _prb2_S0160000000,R30
00927f 940e d7c3 	CALL SUBOPT_0x323
009281 940e d29c 	CALL SUBOPT_0x28A
009283 c049      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
009284 30e2      	CPI  R30,LOW(0x2)
009285 e0a0      	LDI  R26,HIGH(0x2)
009286 07fa      	CPC  R31,R26
009287 f451      	BRNE _0x2C019D
009288 940e d46a 	CALL SUBOPT_0x2C5
00928a 30a2      	CPI  R26,LOW(0x2)
00928b f01c      	BRLT _0x2C019E
00928c e0e0      	LDI  R30,LOW(0)
00928d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
00928f 940e d7ea 	CALL SUBOPT_0x329
009291 c03b      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
009292 30e3      	CPI  R30,LOW(0x3)
009293 e0a0      	LDI  R26,HIGH(0x3)
009294 07fa      	CPC  R31,R26
009295 f449      	BRNE _0x2C019F
009296 940e d456 	CALL SUBOPT_0x2C3
009298 f41c      	BRGE _0x2C01A0
009299 e0e1      	LDI  R30,LOW(1)
00929a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
00929c 940e d7ea 	CALL SUBOPT_0x329
00929e c02e      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
00929f 30e4      	CPI  R30,LOW(0x4)
0092a0 e0a0      	LDI  R26,HIGH(0x4)
0092a1 07fa      	CPC  R31,R26
0092a2 f551      	BRNE _0x2C019B
0092a3 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0092a5 30e0      	CPI  R30,0
0092a6 f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
0092a7 91a0 1a6a 	LDS  R26,_prb2_S0160000000
0092a9 5faf      	SUBI R26,-LOW(1)
0092aa 93a0 1a6a 	STS  _prb2_S0160000000,R26
0092ac 30a5      	CPI  R26,LOW(0x5)
0092ad f018      	BRLO _0x2C01A3
0092ae e0e0      	LDI  R30,LOW(0)
0092af 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
0092b1 940e d7f6 	CALL SUBOPT_0x32B
0092b3 940e d7fd 	CALL SUBOPT_0x32C
0092b5 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
0092b7 c015      	RJMP _0x2C01A4
                 _0x2C01A2:
0092b8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092ba 30a1      	CPI  R26,LOW(0x1)
0092bb f451      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
0092bc e1e9      	LDI  R30,LOW(25)
0092bd 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
0092bf 940e d802 	CALL SUBOPT_0x32D
0092c1 940e d7fd 	CALL SUBOPT_0x32C
0092c3 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
0092c5 c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
0092c6 e0e0      	LDI  R30,LOW(0)
0092c7 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
0092c9 940e d4b9 	CALL SUBOPT_0x2CD
0092cb 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359     else if ( currentPage == P_CAL1_CONFIRM )
0092cd c4c6      	RJMP _0x2C01A7
                 _0x2C0198:
0092ce 91a0 14df 	LDS  R26,_currentPage
0092d0 31a9      	CPI  R26,LOW(0x19)
0092d1 f599      	BRNE _0x2C01A8
                 ; 0016 035A     {
                 ; 0016 035B         switch(key){
0092d2 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 035C         case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
0092d4 f451      	BRNE _0x2C01AC
0092d5 e1e8      	LDI  R30,LOW(24)
0092d6 940e d483 	CALL SUBOPT_0x2C7
0092d8 940e d7ce 	CALL SUBOPT_0x324
0092da 940e d7fd 	CALL SUBOPT_0x32C
0092dc 940e d29c 	CALL SUBOPT_0x28A
0092de c025      	RJMP _0x2C01AB
                 ; 0016 035D         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01AC:
0092df 30e2      	CPI  R30,LOW(0x2)
0092e0 e0a0      	LDI  R26,HIGH(0x2)
0092e1 07fa      	CPC  R31,R26
0092e2 f109      	BREQ _0x2C01AB
                 ; 0016 035E         case KEY_DOWN   :   /* no operation */                                                                  break;
0092e3 30e3      	CPI  R30,LOW(0x3)
0092e4 e0a0      	LDI  R26,HIGH(0x3)
0092e5 07fa      	CPC  R31,R26
0092e6 f0e9      	BREQ _0x2C01AB
                 ; 0016 035F         case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
0092e7 30e4      	CPI  R30,LOW(0x4)
0092e8 e0a0      	LDI  R26,HIGH(0x4)
0092e9 07fa      	CPC  R31,R26
0092ea f4c9      	BRNE _0x2C01AB
0092eb 940e d809 	CALL SUBOPT_0x32E
0092ed 91a0 1a6a 	LDS  R26,_prb2_S0160000000
0092ef 27bb      	CLR  R27
0092f0 940e 6f68 	CALL _sensorCalibrate1
0092f2 01af      	MOVW R20,R30
                 ; 0016 0360                             if(res < 0){
0092f3 2355      	TST  R21
0092f4 f432      	BRPL _0x2C01B0
                 ; 0016 0361                                 currentPage = P_FAILED;
0092f5 e2e5      	LDI  R30,LOW(37)
0092f6 940e d80f 	CALL SUBOPT_0x32F
                 ; 0016 0362                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364                                 cursor      = 0;
                 ; 0016 0365                                 printOLED("FL");
0092f8 940e d6c8 	CALL SUBOPT_0x2FF
0092fa c005      	RJMP _0x2C02C8
                 ; 0016 0366                             }
                 ; 0016 0367                             else{
                 _0x2C01B0:
                 ; 0016 0368                                 currentPage = P_FINISH;
0092fb e2e4      	LDI  R30,LOW(36)
0092fc 940e d80f 	CALL SUBOPT_0x32F
                 ; 0016 0369                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B                                 cursor      = 0;
                 ; 0016 036C                                 printOLED("FI");
0092fe 940e d6cd 	CALL SUBOPT_0x300
                 _0x2C02C8:
009300 940e e324 	CALL __PUTPARD1
009302 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 036D                             }
                 ; 0016 036E                             break;
                 ; 0016 036F         }
                 _0x2C01AB:
                 ; 0016 0370     }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
009304 c48f      	RJMP _0x2C01B2
                 _0x2C01A8:
009305 91a0 14df 	LDS  R26,_currentPage
009307 31aa      	CPI  R26,LOW(0x1A)
009308 f011      	BREQ PC+3
009309 940c 9356 	JMP _0x2C01B3
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
00930b 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
00930d f431      	BRNE _0x2C01B7
00930e e1e5      	LDI  R30,LOW(21)
00930f 940e d675 	CALL SUBOPT_0x2F2
009311 940e d7da 	CALL SUBOPT_0x326
009313 c041      	RJMP _0x2C01B6
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B7:
009314 30e2      	CPI  R30,LOW(0x2)
009315 e0a0      	LDI  R26,HIGH(0x2)
009316 07fa      	CPC  R31,R26
009317 f451      	BRNE _0x2C01B8
009318 940e d46a 	CALL SUBOPT_0x2C5
00931a 30a2      	CPI  R26,LOW(0x2)
00931b f01c      	BRLT _0x2C01B9
00931c e0e0      	LDI  R30,LOW(0)
00931d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01B9:
00931f 940e d7ea 	CALL SUBOPT_0x329
009321 c033      	RJMP _0x2C01B6
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B8:
009322 30e3      	CPI  R30,LOW(0x3)
009323 e0a0      	LDI  R26,HIGH(0x3)
009324 07fa      	CPC  R31,R26
009325 f449      	BRNE _0x2C01BA
009326 940e d456 	CALL SUBOPT_0x2C3
009328 f41c      	BRGE _0x2C01BB
009329 e0e1      	LDI  R30,LOW(1)
00932a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01BB:
00932c 940e d7ea 	CALL SUBOPT_0x329
00932e c026      	RJMP _0x2C01B6
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01BA:
00932f 30e4      	CPI  R30,LOW(0x4)
009330 e0a0      	LDI  R26,HIGH(0x4)
009331 07fa      	CPC  R31,R26
009332 f511      	BRNE _0x2C01B6
009333 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009335 30e0      	CPI  R30,0
009336 f469      	BRNE _0x2C01BD
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
009337 940e d7ef 	CALL SUBOPT_0x32A
009339 f018      	BRLO _0x2C01BE
00933a e0e0      	LDI  R30,LOW(0)
00933b 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01BE:
00933d 940e d7f6 	CALL SUBOPT_0x32B
00933f 940e d7d5 	CALL SUBOPT_0x325
009341 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
009343 c011      	RJMP _0x2C01BF
                 _0x2C01BD:
009344 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009346 30a1      	CPI  R26,LOW(0x1)
009347 f431      	BRNE _0x2C01C0
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
009348 e1eb      	LDI  R30,LOW(27)
009349 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
00934b 940e d816 	CALL SUBOPT_0x330
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
00934d c007      	RJMP _0x2C01C1
                 _0x2C01C0:
                 ; 0016 0381                                 currentPage = P_MONITOR;
00934e e0e0      	LDI  R30,LOW(0)
00934f 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
009351 940e d4b9 	CALL SUBOPT_0x2CD
009353 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0384                             }
                 _0x2C01C1:
                 _0x2C01BF:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01B6:
                 ; 0016 0387     }
                 ; 0016 0388     else if ( currentPage == P_CAL2_MENU )
009355 c43e      	RJMP _0x2C01C2
                 _0x2C01B3:
009356 91a0 14df 	LDS  R26,_currentPage
009358 31ab      	CPI  R26,LOW(0x1B)
009359 f011      	BREQ PC+3
00935a 940c 940a 	JMP _0x2C01C3
                 ; 0016 0389     {
                 ; 0016 038A         switch(key){
00935c 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 038B         case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
00935e f451      	BRNE _0x2C01C7
00935f e1ea      	LDI  R30,LOW(26)
009360 940e d483 	CALL SUBOPT_0x2C7
009362 940e d7ce 	CALL SUBOPT_0x324
009364 940e d7d5 	CALL SUBOPT_0x325
009366 940e d29c 	CALL SUBOPT_0x28A
009368 c0a0      	RJMP _0x2C01C6
                 ; 0016 038C         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C7:
009369 30e2      	CPI  R30,LOW(0x2)
00936a e0a0      	LDI  R26,HIGH(0x2)
00936b 07fa      	CPC  R31,R26
00936c f449      	BRNE _0x2C01C8
00936d 940e d456 	CALL SUBOPT_0x2C3
00936f f41c      	BRGE _0x2C01C9
009370 e0e3      	LDI  R30,LOW(3)
009371 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01C9:
009373 940e d45d 	CALL SUBOPT_0x2C4
009375 c093      	RJMP _0x2C01C6
                 ; 0016 038D         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C8:
009376 30e3      	CPI  R30,LOW(0x3)
009377 e0a0      	LDI  R26,HIGH(0x3)
009378 07fa      	CPC  R31,R26
009379 f451      	BRNE _0x2C01CA
00937a 940e d46a 	CALL SUBOPT_0x2C5
00937c 30a4      	CPI  R26,LOW(0x4)
00937d f01c      	BRLT _0x2C01CB
00937e e0e0      	LDI  R30,LOW(0)
00937f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01CB:
009381 940e d45d 	CALL SUBOPT_0x2C4
009383 c085      	RJMP _0x2C01C6
                 ; 0016 038E         case KEY_OK     :   if(cursor < 3){
                 _0x2C01CA:
009384 30e4      	CPI  R30,LOW(0x4)
009385 e0a0      	LDI  R26,HIGH(0x4)
009386 07fa      	CPC  R31,R26
009387 f011      	BREQ PC+3
009388 940c 9409 	JMP _0x2C01C6
00938a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00938c 30a3      	CPI  R26,LOW(0x3)
00938d f014      	BRLT PC+3
00938e 940c 93f4 	JMP _0x2C01CD
                 ; 0016 038F                                 if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
009390 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009392 30e0      	CPI  R30,0
009393 f411      	BRNE _0x2C01CE
009394 e1ec      	LDI  R30,LOW(28)
009395 c00b      	RJMP _0x2C02C9
                 ; 0016 0390                                 else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 _0x2C01CE:
009396 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009398 30a1      	CPI  R26,LOW(0x1)
009399 f411      	BRNE _0x2C01D0
00939a e1ed      	LDI  R30,LOW(29)
00939b c005      	RJMP _0x2C02C9
                 ; 0016 0391                                 else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 _0x2C01D0:
00939c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00939e 30a2      	CPI  R26,LOW(0x2)
00939f f419      	BRNE _0x2C01D2
0093a0 e1ee      	LDI  R30,LOW(30)
                 _0x2C02C9:
0093a1 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0392 
                 ; 0016 0393                                 printOLED("CP%1d%1d",cursor+1,prb1+1);
                 _0x2C01D2:
                +
0093a3 eceb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
0093a4 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
0093a5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
0093a6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
0093a7 940e e324 	CALL __PUTPARD1
0093a9 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0093ab e0f0      	LDI  R31,0
0093ac fde7      	SBRC R30,7
0093ad efff      	SER  R31
0093ae 940e ce99 	CALL SUBOPT_0x201
0093b0 940e d7d5 	CALL SUBOPT_0x325
0093b2 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0394 
                 ; 0016 0395                                 res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
0093b4 940e d809 	CALL SUBOPT_0x32E
0093b6 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0093b8 e0f0      	LDI  R31,0
0093b9 fde7      	SBRC R30,7
0093ba efff      	SER  R31
0093bb 59eb      	SUBI R30,LOW(-101)
0093bc 4fff      	SBCI R31,HIGH(-101)
0093bd 940e d81b 	CALL SUBOPT_0x331
0093bf 940e 71b5 	CALL _sensorGetCurrentSetPoint
0093c1 01af      	MOVW R20,R30
                 ; 0016 0396                                 if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
0093c2 2355      	TST  R21
0093c3 f442      	BRPL _0x2C01D3
0093c4 e6eb      	LDI  R30,LOW(_calPnt_S0160000000)
0093c5 e1fa      	LDI  R31,HIGH(_calPnt_S0160000000)
0093c6 940e c843 	CALL SUBOPT_0xF6
0093c8 e0a6      	LDI  R26,LOW(6)
0093c9 e0b0      	LDI  R27,0
0093ca 940e a752 	CALL _memset
                 ; 0016 0397                                 for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 _0x2C01D3:
                +
0093cc e000     +LDI R16 , LOW ( 0 )
0093cd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01D5:
                +
0093ce 3006     +CPI R16 , LOW ( 6 )
0093cf e0e0     +LDI R30 , HIGH ( 6 )
0093d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
0093d1 f4f4      	BRGE _0x2C01D6
0093d2 940e d820 	CALL SUBOPT_0x332
0093d4 01f8      	MOVW R30,R16
0093d5 940e d134 	CALL SUBOPT_0x254
0093d7 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
0093d8 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
0093d9 940e d69c 	CALL SUBOPT_0x2F8
0093db 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0398                                                     printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                +
0093dd eded     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 959 ) )
0093de e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 959 ) )
0093df e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 959 ) )
0093e0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 959 ) )
                 	__POINTD1FN _0x2C0000,959
0093e1 940e e324 	CALL __PUTPARD1
0093e3 01f8      	MOVW R30,R16
0093e4 940e d134 	CALL SUBOPT_0x254
0093e6 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
0093e7 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
0093e8 0fa0      	ADD  R26,R16
0093e9 1fb1      	ADC  R27,R17
0093ea 91ec      	LD   R30,X
0093eb 940e d035 	CALL SUBOPT_0x231
                +
0093ed 5f0f     +SUBI R16 , LOW ( - 1 )
0093ee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0093ef cfde      	RJMP _0x2C01D5
                 _0x2C01D6:
                 ; 0016 0399                                 cursor      = 0;
0093f0 e0e0      	LDI  R30,LOW(0)
0093f1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 039A                             }
                 ; 0016 039B                             else if(cursor == 3){       // -- Calculate
0093f3 c015      	RJMP _0x2C01D7
                 _0x2C01CD:
0093f4 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0093f6 30a3      	CPI  R26,LOW(0x3)
0093f7 f451      	BRNE _0x2C01D8
                 ; 0016 039C                                 currentPage = P_CAL2_CONFIRM;
0093f8 e1ef      	LDI  R30,LOW(31)
0093f9 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 039D                                 cursor      = 0;
                 ; 0016 039E                                 printOLED("CC%1d",prb1+1);
0093fb 940e d802 	CALL SUBOPT_0x32D
0093fd 940e d7d5 	CALL SUBOPT_0x325
0093ff 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 039F                             }
                 ; 0016 03A0                             else{                       // -- Exit -- should not occur
009401 c007      	RJMP _0x2C01D9
                 _0x2C01D8:
                 ; 0016 03A1                                 currentPage = P_MONITOR;
009402 e0e0      	LDI  R30,LOW(0)
009403 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 03A2                                 cursor      = 0;
                 ; 0016 03A3                                 printOLED("M0");
009405 940e d4b9 	CALL SUBOPT_0x2CD
009407 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 03A4                             }
                 _0x2C01D9:
                 _0x2C01D7:
                 ; 0016 03A5             break;
                 ; 0016 03A6         }
                 _0x2C01C6:
                 ; 0016 03A7     }
                 ; 0016 03A8     else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
009409 c38a      	RJMP _0x2C01DA
                 _0x2C01C3:
00940a 91a0 14df 	LDS  R26,_currentPage
00940c 31ac      	CPI  R26,LOW(0x1C)
00940d f029      	BREQ _0x2C01DC
00940e 31ad      	CPI  R26,LOW(0x1D)
00940f f019      	BREQ _0x2C01DC
009410 31ae      	CPI  R26,LOW(0x1E)
009411 f009      	BREQ _0x2C01DC
009412 c0c7      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 03A9     {
                 ; 0016 03AA         switch(key){
009413 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 03AB         case KEY_MODE   :   currentPage = P_CAL2_MENU;
009415 f4c9      	BRNE _0x2C01E1
009416 e1eb      	LDI  R30,LOW(27)
009417 93e0 14df 	STS  _currentPage,R30
                 ; 0016 03AC                             if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
009419 91a0 14df 	LDS  R26,_currentPage
00941b 31ac      	CPI  R26,LOW(0x1C)
00941c f411      	BRNE _0x2C01E2
00941d e0e0      	LDI  R30,LOW(0)
00941e c00b      	RJMP _0x2C02CA
                 ; 0016 03AD                             else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 _0x2C01E2:
00941f 91a0 14df 	LDS  R26,_currentPage
009421 31ad      	CPI  R26,LOW(0x1D)
009422 f411      	BRNE _0x2C01E4
009423 e0e1      	LDI  R30,LOW(1)
009424 c005      	RJMP _0x2C02CA
                 ; 0016 03AE                             else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 _0x2C01E4:
009425 91a0 14df 	LDS  R26,_currentPage
009427 31ae      	CPI  R26,LOW(0x1E)
009428 f419      	BRNE _0x2C01E6
009429 e0e2      	LDI  R30,LOW(2)
                 _0x2C02CA:
00942a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 03AF                             printOLED("M8%1d",cursor);                                                                      break;
                 _0x2C01E6:
00942c 940e d816 	CALL SUBOPT_0x330
00942e c0aa      	RJMP _0x2C01E0
                 ; 0016 03B0         case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E1:
00942f 30e2      	CPI  R30,LOW(0x2)
009430 e0a0      	LDI  R26,HIGH(0x2)
009431 07fa      	CPC  R31,R26
009432 f451      	BRNE _0x2C01E7
009433 940e d46a 	CALL SUBOPT_0x2C5
009435 30a7      	CPI  R26,LOW(0x7)
009436 f01c      	BRLT _0x2C01E8
009437 e0e0      	LDI  R30,LOW(0)
009438 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01E8:
00943a 940e d827 	CALL SUBOPT_0x333
00943c c09c      	RJMP _0x2C01E0
                 ; 0016 03B1         case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E7:
00943d 30e3      	CPI  R30,LOW(0x3)
00943e e0a0      	LDI  R26,HIGH(0x3)
00943f 07fa      	CPC  R31,R26
009440 f449      	BRNE _0x2C01E9
009441 940e d456 	CALL SUBOPT_0x2C3
009443 f41c      	BRGE _0x2C01EA
009444 e0e6      	LDI  R30,LOW(6)
009445 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
009447 940e d827 	CALL SUBOPT_0x333
009449 c08f      	RJMP _0x2C01E0
                 ; 0016 03B2         case KEY_OK     :   if(cursor == 6){
                 _0x2C01E9:
00944a 30e4      	CPI  R30,LOW(0x4)
00944b e0a0      	LDI  R26,HIGH(0x4)
00944c 07fa      	CPC  R31,R26
00944d f011      	BREQ PC+3
00944e 940c 94d9 	JMP _0x2C01E0
009450 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009452 30a6      	CPI  R26,LOW(0x6)
009453 f011      	BREQ PC+3
009454 940c 949a 	JMP _0x2C01EC
                 ; 0016 03B3 
                 ; 0016 03B4                                 if(currentPage == P_CAL2_SPT1){
009456 91a0 14df 	LDS  R26,_currentPage
009458 31ac      	CPI  R26,LOW(0x1C)
009459 f451      	BRNE _0x2C01ED
                 ; 0016 03B5                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
00945a 940e d809 	CALL SUBOPT_0x32E
00945c e6e5      	LDI  R30,LOW(101)
00945d e0f0      	LDI  R31,HIGH(101)
00945e 940e d81b 	CALL SUBOPT_0x331
009460 940e 7335 	CALL _sensorSetCurrentSetPoint
009462 01af      	MOVW R20,R30
                 ; 0016 03B6                                 }
                 ; 0016 03B7                                 else if(currentPage == P_CAL2_SPT2){
009463 c01e      	RJMP _0x2C01EE
                 _0x2C01ED:
009464 91a0 14df 	LDS  R26,_currentPage
009466 31ad      	CPI  R26,LOW(0x1D)
009467 f451      	BRNE _0x2C01EF
                 ; 0016 03B8                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
009468 940e d809 	CALL SUBOPT_0x32E
00946a e6e6      	LDI  R30,LOW(102)
00946b e0f0      	LDI  R31,HIGH(102)
00946c 940e d81b 	CALL SUBOPT_0x331
00946e 940e 7335 	CALL _sensorSetCurrentSetPoint
009470 01af      	MOVW R20,R30
                 ; 0016 03B9                                 }
                 ; 0016 03BA                                 else if(currentPage == P_CAL2_SPT3){
009471 c010      	RJMP _0x2C01F0
                 _0x2C01EF:
009472 91a0 14df 	LDS  R26,_currentPage
009474 31ae      	CPI  R26,LOW(0x1E)
009475 f451      	BRNE _0x2C01F1
                 ; 0016 03BB                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
009476 940e d809 	CALL SUBOPT_0x32E
009478 e6e7      	LDI  R30,LOW(103)
009479 e0f0      	LDI  R31,HIGH(103)
00947a 940e d81b 	CALL SUBOPT_0x331
00947c 940e 7335 	CALL _sensorSetCurrentSetPoint
00947e 01af      	MOVW R20,R30
                 ; 0016 03BC                                 }
                 ; 0016 03BD                                 else{
00947f c002      	RJMP _0x2C01F2
                 _0x2C01F1:
                 ; 0016 03BE                                     // -- should not occur -- //
                 ; 0016 03BF                                     res = -1;
                +
009480 ef4f     +LDI R20 , LOW ( - 1 )
009481 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 ; 0016 03C0                                 }
                 _0x2C01F2:
                 _0x2C01F0:
                 _0x2C01EE:
                 ; 0016 03C1 
                 ; 0016 03C2                                 if(res < 0){
009482 2355      	TST  R21
009483 f44a      	BRPL _0x2C01F3
                 ; 0016 03C3                                     currentPage = P_FAILED;
009484 940e d82c 	CALL SUBOPT_0x334
                 ; 0016 03C4                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5                                     tmpPrevPage = currentPage;
009486 91e0 14df 	LDS  R30,_currentPage
009488 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 03C6                                     cursor      = 0;
                 ; 0016 03C7                                     printOLED("FL");
00948a 940e d6c8 	CALL SUBOPT_0x2FF
00948c c008      	RJMP _0x2C02CB
                 ; 0016 03C8                                 }
                 ; 0016 03C9                                 else{
                 _0x2C01F3:
                 ; 0016 03CA                                     currentPage = P_FINISH;
00948d 940e d833 	CALL SUBOPT_0x335
                 ; 0016 03CB                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC                                     tmpPrevPage = currentPage;
00948f 91e0 14df 	LDS  R30,_currentPage
009491 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 03CD                                     cursor      = 0;
                 ; 0016 03CE                                     printOLED("FI");
009493 940e d6cd 	CALL SUBOPT_0x300
                 _0x2C02CB:
009495 940e e324 	CALL __PUTPARD1
009497 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 03CF                                 }
                 ; 0016 03D0                             }
                 ; 0016 03D1                             else if(cursor == 0){   // toggle '+' & '-'
009499 c03f      	RJMP _0x2C01F5
                 _0x2C01EC:
00949a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00949c 30e0      	CPI  R30,0
00949d f4c9      	BRNE _0x2C01F6
                 ; 0016 03D2                                 if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
00949e 940e d748 	CALL SUBOPT_0x30F
0094a0 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
0094a1 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
0094a2 91ec      	LD   R30,X
0094a3 5fef      	SUBI R30,-LOW(1)
0094a4 93ec      	ST   X,R30
0094a5 30e2      	CPI  R30,LOW(0x2)
0094a6 f020      	BRLO _0x2C01F7
0094a7 940e d83a 	CALL SUBOPT_0x336
0094a9 e0a0      	LDI  R26,LOW(0)
0094aa 83a0      	STD  Z+0,R26
                 ; 0016 03D3                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01F7:
0094ab 940e d820 	CALL SUBOPT_0x332
0094ad 940e d75b 	CALL SUBOPT_0x312
0094af 940e d83a 	CALL SUBOPT_0x336
0094b1 81e0      	LD   R30,Z
0094b2 940e c4a6 	CALL SUBOPT_0x65
0094b4 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 03D4                             }
                 ; 0016 03D5                             else if(cursor < 6){
0094b6 c022      	RJMP _0x2C01F8
                 _0x2C01F6:
0094b7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0094b9 30a6      	CPI  R26,LOW(0x6)
0094ba f4bc      	BRGE _0x2C01F9
                 ; 0016 03D6                                 if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
0094bb 940e d748 	CALL SUBOPT_0x30F
0094bd 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
0094be 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
0094bf 940e d787 	CALL SUBOPT_0x319
0094c1 f020      	BRLO _0x2C01FA
0094c2 940e d83a 	CALL SUBOPT_0x336
0094c4 e0a0      	LDI  R26,LOW(0)
0094c5 83a0      	STD  Z+0,R26
                 ; 0016 03D7                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01FA:
0094c6 940e d820 	CALL SUBOPT_0x332
0094c8 940e d75b 	CALL SUBOPT_0x312
0094ca 940e d83a 	CALL SUBOPT_0x336
0094cc 81e0      	LD   R30,Z
0094cd 940e c4a6 	CALL SUBOPT_0x65
0094cf 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 03D8                             }
                 ; 0016 03D9                             else{                       // -- Exit -- should not occur
0094d1 c007      	RJMP _0x2C01FB
                 _0x2C01F9:
                 ; 0016 03DA                                 currentPage = P_MONITOR;
0094d2 e0e0      	LDI  R30,LOW(0)
0094d3 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 03DB                                 cursor      = 0;
                 ; 0016 03DC                                 printOLED("M0");
0094d5 940e d4b9 	CALL SUBOPT_0x2CD
0094d7 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 03DD                             }
                 _0x2C01FB:
                 _0x2C01F8:
                 _0x2C01F5:
                 ; 0016 03DE             break;
                 ; 0016 03DF         }
                 _0x2C01E0:
                 ; 0016 03E0     }
                 ; 0016 03E1     else if ( currentPage == P_CAL2_CONFIRM )
0094d9 c2ba      	RJMP _0x2C01FC
                 _0x2C01DB:
0094da 91a0 14df 	LDS  R26,_currentPage
0094dc 31af      	CPI  R26,LOW(0x1F)
0094dd f589      	BRNE _0x2C01FD
                 ; 0016 03E2     {
                 ; 0016 03E3         switch(key){
0094de 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 03E4         case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
0094e0 f431      	BRNE _0x2C0201
0094e1 e1eb      	LDI  R30,LOW(27)
0094e2 940e d66f 	CALL SUBOPT_0x2F1
0094e4 940e d816 	CALL SUBOPT_0x330
0094e6 c027      	RJMP _0x2C0200
                 ; 0016 03E5         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C0201:
0094e7 30e2      	CPI  R30,LOW(0x2)
0094e8 e0a0      	LDI  R26,HIGH(0x2)
0094e9 07fa      	CPC  R31,R26
0094ea f119      	BREQ _0x2C0200
                 ; 0016 03E6         case KEY_DOWN   :   /* no operation */                                                                  break;
0094eb 30e3      	CPI  R30,LOW(0x3)
0094ec e0a0      	LDI  R26,HIGH(0x3)
0094ed 07fa      	CPC  R31,R26
0094ee f0f9      	BREQ _0x2C0200
                 ; 0016 03E7         case KEY_OK     :   res = sensorCalibrate2(prb1);
0094ef 30e4      	CPI  R30,LOW(0x4)
0094f0 e0a0      	LDI  R26,HIGH(0x4)
0094f1 07fa      	CPC  R31,R26
0094f2 f4d9      	BRNE _0x2C0200
0094f3 91a0 1a69 	LDS  R26,_prb1_S0160000000
0094f5 27bb      	CLR  R27
0094f6 940e 7036 	CALL _sensorCalibrate2
0094f8 01af      	MOVW R20,R30
                 ; 0016 03E8                             if(res < 0){
0094f9 2355      	TST  R21
0094fa f442      	BRPL _0x2C0205
                 ; 0016 03E9                                 currentPage = P_FAILED;
0094fb 940e d82c 	CALL SUBOPT_0x334
                 ; 0016 03EA                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB                                 tmpPrevPage = P_CAL2_CONFIRM;
0094fd e1ef      	LDI  R30,LOW(31)
0094fe 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 03EC                                 cursor      = 0;
                 ; 0016 03ED                                 printOLED("FL");
009500 940e d6c8 	CALL SUBOPT_0x2FF
009502 c007      	RJMP _0x2C02CC
                 ; 0016 03EE                             }
                 ; 0016 03EF                             else{
                 _0x2C0205:
                 ; 0016 03F0                                 currentPage = P_FINISH;
009503 940e d833 	CALL SUBOPT_0x335
                 ; 0016 03F1                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2                                 tmpPrevPage = P_CAL2_CONFIRM;
009505 e1ef      	LDI  R30,LOW(31)
009506 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 03F3                                 cursor      = 0;
                 ; 0016 03F4                                 printOLED("FI");
009508 940e d6cd 	CALL SUBOPT_0x300
                 _0x2C02CC:
00950a 940e e324 	CALL __PUTPARD1
00950c 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 03F5                             }
                 ; 0016 03F6                             break;
                 ; 0016 03F7         }
                 _0x2C0200:
                 ; 0016 03F8     }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
00950e c285      	RJMP _0x2C0207
                 _0x2C01FD:
00950f 91a0 14df 	LDS  R26,_currentPage
009511 32a0      	CPI  R26,LOW(0x20)
009512 f591      	BRNE _0x2C0208
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
009513 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
009515 f449      	BRNE _0x2C020C
009516 e1e5      	LDI  R30,LOW(21)
009517 93e0 14df 	STS  _currentPage,R30
009519 e0e3      	LDI  R30,LOW(3)
00951a 93e0 1a1f 	STS  _cursor_S0160000000,R30
00951c 940e d7da 	CALL SUBOPT_0x326
00951e c025      	RJMP _0x2C020B
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C020C:
00951f 30e2      	CPI  R30,LOW(0x2)
009520 e0a0      	LDI  R26,HIGH(0x2)
009521 07fa      	CPC  R31,R26
009522 f109      	BREQ _0x2C020B
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
009523 30e3      	CPI  R30,LOW(0x3)
009524 e0a0      	LDI  R26,HIGH(0x3)
009525 07fa      	CPC  R31,R26
009526 f0e9      	BREQ _0x2C020B
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
009527 30e4      	CPI  R30,LOW(0x4)
009528 e0a0      	LDI  R26,HIGH(0x4)
009529 07fa      	CPC  R31,R26
00952a f4c9      	BRNE _0x2C020B
00952b e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00952c e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00952d 940e c843 	CALL SUBOPT_0xF6
00952f 940e c525 	CALL SUBOPT_0x77
009531 940e a752 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
009533 940e d7a6 	CALL SUBOPT_0x31F
009535 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
009536 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
009537 940e d333 	CALL SUBOPT_0x2A1
009539 d605      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
00953a e2e4      	LDI  R30,LOW(36)
00953b 940e d4a3 	CALL SUBOPT_0x2CA
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
00953d e2e0      	LDI  R30,LOW(32)
00953e 940e d736 	CALL SUBOPT_0x30C
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
009540 940e d6cd 	CALL SUBOPT_0x300
009542 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C020B:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
009544 c24f      	RJMP _0x2C0210
                 _0x2C0208:
009545 91a0 14df 	LDS  R26,_currentPage
009547 32a1      	CPI  R26,LOW(0x21)
009548 f011      	BREQ PC+3
009549 940c 9626 	JMP _0x2C0211
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
00954b 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
00954d f569      	BRNE _0x2C0215
00954e 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
009550 e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
009551 30e2      	CPI  R30,LOW(0x2)
009552 e0a0      	LDI  R26,HIGH(0x2)
009553 07fa      	CPC  R31,R26
009554 f431      	BRNE _0x2C0219
009555 e0e2      	LDI  R30,LOW(2)
009556 940e d66f 	CALL SUBOPT_0x2F1
009558 940e d67b 	CALL SUBOPT_0x2F3
00955a c013      	RJMP _0x2C02CD
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0219:
00955b 30ee      	CPI  R30,LOW(0xE)
00955c e0a0      	LDI  R26,HIGH(0xE)
00955d 07fa      	CPC  R31,R26
00955e f431      	BRNE _0x2C021A
00955f e0ee      	LDI  R30,LOW(14)
009560 940e d66f 	CALL SUBOPT_0x2F1
009562 940e d840 	CALL SUBOPT_0x337
009564 c009      	RJMP _0x2C02CD
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C021A:
009565 31e1      	CPI  R30,LOW(0x11)
009566 e0a0      	LDI  R26,HIGH(0x11)
009567 07fa      	CPC  R31,R26
009568 f459      	BRNE _0x2C0218
009569 e1e1      	LDI  R30,LOW(17)
00956a 940e d66f 	CALL SUBOPT_0x2F1
00956c 940e d845 	CALL SUBOPT_0x338
                 _0x2C02CD:
00956e 940e e324 	CALL __PUTPARD1
009570 940e d75b 	CALL SUBOPT_0x312
009572 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0410                             }
                 _0x2C0218:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
009574 940e d84a 	CALL SUBOPT_0x339
009576 940e d7a2 	CALL SUBOPT_0x31E
009578 940e a752 	CALL _memset
00957a c0aa      	RJMP _0x2C0214
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0215:
00957b 30e2      	CPI  R30,LOW(0x2)
00957c e0a0      	LDI  R26,HIGH(0x2)
00957d 07fa      	CPC  R31,R26
00957e f481      	BRNE _0x2C021C
00957f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009581 30a4      	CPI  R26,LOW(0x4)
009582 f414      	BRGE _0x2C021D
009583 940e d775 	CALL SUBOPT_0x316
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C021D:
009585 940e d46a 	CALL SUBOPT_0x2C5
009587 30a5      	CPI  R26,LOW(0x5)
009588 f01c      	BRLT _0x2C021E
009589 e0e0      	LDI  R30,LOW(0)
00958a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C021E:
00958c 940e d77a 	CALL SUBOPT_0x317
00958e c096      	RJMP _0x2C0214
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C021C:
00958f 30e3      	CPI  R30,LOW(0x3)
009590 e0a0      	LDI  R26,HIGH(0x3)
009591 07fa      	CPC  R31,R26
009592 f479      	BRNE _0x2C021F
009593 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009595 30a4      	CPI  R26,LOW(0x4)
009596 f414      	BRGE _0x2C0220
009597 940e d775 	CALL SUBOPT_0x316
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C0220:
009599 940e d456 	CALL SUBOPT_0x2C3
00959b f41c      	BRGE _0x2C0221
00959c e0e4      	LDI  R30,LOW(4)
00959d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0221:
00959f 940e d77a 	CALL SUBOPT_0x317
0095a1 c083      	RJMP _0x2C0214
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C021F:
0095a2 30e4      	CPI  R30,LOW(0x4)
0095a3 e0a0      	LDI  R26,HIGH(0x4)
0095a4 07fa      	CPC  R31,R26
0095a5 f011      	BREQ PC+3
0095a6 940c 9625 	JMP _0x2C0214
0095a8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095aa 30a4      	CPI  R26,LOW(0x4)
0095ab f011      	BREQ PC+3
0095ac 940c 9610 	JMP _0x2C0223
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
0095ae 940e d84a 	CALL SUBOPT_0x339
0095b0 940e d524 	CALL SUBOPT_0x2DC
0095b2 940e d333 	CALL SUBOPT_0x2A1
0095b4 d59d      	RCALL _recmp
0095b5 9730      	SBIW R30,0
0095b6 f061      	BREQ _0x2C0224
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
0095b7 e2e3      	LDI  R30,LOW(35)
0095b8 940e d483 	CALL SUBOPT_0x2C7
0095ba 940e d84f 	CALL SUBOPT_0x33A
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
0095bc 940e d84a 	CALL SUBOPT_0x339
0095be 940e d7a2 	CALL SUBOPT_0x31E
0095c0 940e a752 	CALL _memset
                 ; 0016 041D                                     break;
0095c2 c062      	RJMP _0x2C0214
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C0224:
0095c3 940e d854 	CALL SUBOPT_0x33B
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
0095c5 f431      	BRNE _0x2C0228
0095c6 e0e7      	LDI  R30,LOW(7)
0095c7 940e d483 	CALL SUBOPT_0x2C7
0095c9 940e d6a1 	CALL SUBOPT_0x2F9
0095cb c043      	RJMP _0x2C0227
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C0228:
0095cc 31e0      	CPI  R30,LOW(0x10)
0095cd e0a0      	LDI  R26,HIGH(0x10)
0095ce 07fa      	CPC  R31,R26
0095cf f521      	BRNE _0x2C0229
0095d0 e1e0      	LDI  R30,LOW(16)
0095d1 940e d483 	CALL SUBOPT_0x2C7
                +
0095d3 efea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 988 ) )
0095d4 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 988 ) )
0095d5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 988 ) )
0095d6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 988 ) )
                 	__POINTD1FN _0x2C0000,988
0095d7 940e d663 	CALL SUBOPT_0x2EF
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0095d9 e000     +LDI R16 , LOW ( 0 )
0095da e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C022B:
                +
0095db 3005     +CPI R16 , LOW ( 5 )
0095dc e0e0     +LDI R30 , HIGH ( 5 )
0095dd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0095de f4a4      	BRGE _0x2C022C
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
0095df 01d8      	MOVW R26,R16
0095e0 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
0095e1 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
0095e2 940e d50a 	CALL SUBOPT_0x2D8
0095e4 81e0      	LD   R30,Z
0095e5 940e d753 	CALL SUBOPT_0x311
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
0095e7 01f8      	MOVW R30,R16
0095e8 940e d134 	CALL SUBOPT_0x254
0095ea e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
0095eb e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
0095ec 940e d69c 	CALL SUBOPT_0x2F8
0095ee 940e d28a 	CALL SUBOPT_0x286
                 ; 0016 0427                                                       }
                +
0095f0 5f0f     +SUBI R16 , LOW ( - 1 )
0095f1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0095f2 cfe8      	RJMP _0x2C022B
                 _0x2C022C:
                 ; 0016 0428                                                       break;
0095f3 c01b      	RJMP _0x2C0227
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C0229:
0095f4 31e3      	CPI  R30,LOW(0x13)
0095f5 e0a0      	LDI  R26,HIGH(0x13)
0095f6 07fa      	CPC  R31,R26
0095f7 f471      	BRNE _0x2C022E
0095f8 e1e3      	LDI  R30,LOW(19)
0095f9 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
0095fb 940e d79d 	CALL SUBOPT_0x31D
0095fd 940e d7a2 	CALL SUBOPT_0x31E
0095ff 940e d4b3 	CALL SUBOPT_0x2CC
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
009601 efed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
009602 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
009603 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
009604 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
009605 c005      	RJMP _0x2C02CE
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C022E:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
009606 e0e0      	LDI  R30,LOW(0)
009607 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
009609 940e d4b9 	CALL SUBOPT_0x2CD
                 _0x2C02CE:
00960b 940e e324 	CALL __PUTPARD1
00960d 940e d2c5 	CALL SUBOPT_0x28F
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C0227:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
00960f c015      	RJMP _0x2C022F
                 _0x2C0223:
009610 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009612 30a4      	CPI  R26,LOW(0x4)
009613 f48c      	BRGE _0x2C0230
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
009614 940e d748 	CALL SUBOPT_0x30F
009616 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
009617 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
009618 940e d787 	CALL SUBOPT_0x319
00961a f024      	BRLT _0x2C0231
00961b 940e d85b 	CALL SUBOPT_0x33C
00961d e0a0      	LDI  R26,LOW(0)
00961e 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0231:
00961f 940e d792 	CALL SUBOPT_0x31B
009621 940e d85b 	CALL SUBOPT_0x33C
009623 940e d799 	CALL SUBOPT_0x31C
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C0230:
                 _0x2C022F:
                 ; 0016 043A         }
                 _0x2C0214:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
009625 c16e      	RJMP _0x2C0232
                 _0x2C0211:
009626 91a0 14df 	LDS  R26,_currentPage
009628 32a2      	CPI  R26,LOW(0x22)
009629 f011      	BREQ PC+3
00962a 940c 96a1 	JMP _0x2C0233
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
00962c 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
00962e f419      	BRNE _0x2C0237
00962f 940e d7b5 	CALL SUBOPT_0x321
009631 c06e      	RJMP _0x2C0236
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0237:
009632 30e2      	CPI  R30,LOW(0x2)
009633 e0a0      	LDI  R26,HIGH(0x2)
009634 07fa      	CPC  R31,R26
009635 f481      	BRNE _0x2C0238
009636 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009638 30a4      	CPI  R26,LOW(0x4)
009639 f414      	BRGE _0x2C0239
00963a 940e d775 	CALL SUBOPT_0x316
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C0239:
00963c 940e d46a 	CALL SUBOPT_0x2C5
00963e 30a5      	CPI  R26,LOW(0x5)
00963f f01c      	BRLT _0x2C023A
009640 e0e0      	LDI  R30,LOW(0)
009641 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023A:
009643 940e d77a 	CALL SUBOPT_0x317
009645 c05a      	RJMP _0x2C0236
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0238:
009646 30e3      	CPI  R30,LOW(0x3)
009647 e0a0      	LDI  R26,HIGH(0x3)
009648 07fa      	CPC  R31,R26
009649 f479      	BRNE _0x2C023B
00964a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00964c 30a4      	CPI  R26,LOW(0x4)
00964d f414      	BRGE _0x2C023C
00964e 940e d775 	CALL SUBOPT_0x316
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C023C:
009650 940e d456 	CALL SUBOPT_0x2C3
009652 f41c      	BRGE _0x2C023D
009653 e0e4      	LDI  R30,LOW(4)
009654 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023D:
009656 940e d77a 	CALL SUBOPT_0x317
009658 c047      	RJMP _0x2C0236
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C023B:
009659 30e4      	CPI  R30,LOW(0x4)
00965a e0a0      	LDI  R26,HIGH(0x4)
00965b 07fa      	CPC  R31,R26
00965c f011      	BREQ PC+3
00965d 940c 96a0 	JMP _0x2C0236
00965f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009661 30a4      	CPI  R26,LOW(0x4)
009662 f541      	BRNE _0x2C023F
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
009663 940e d84a 	CALL SUBOPT_0x339
                +
009665 01fe     +MOVW R30 , R28
009666 5be0     +SUBI R30 , LOW ( - 80 )
009667 4fff     +SBCI R31 , HIGH ( - 80 )
009668 9001     +LD R0 , Z +
009669 81f0     +LD R31 , Z
00966a 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00966b 940e d333 	CALL SUBOPT_0x2A1
00966d d4e4      	RCALL _recmp
00966e 9730      	SBIW R30,0
00966f f079      	BREQ _0x2C0240
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
009670 e0e1      	LDI  R30,LOW(1)
009671 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
009673 e2e3      	LDI  R30,LOW(35)
009674 940e d483 	CALL SUBOPT_0x2C7
009676 940e d84f 	CALL SUBOPT_0x33A
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
009678 940e d84a 	CALL SUBOPT_0x339
00967a 940e d7a2 	CALL SUBOPT_0x31E
00967c 940e a752 	CALL _memset
                 ; 0016 044B                                     break;
00967e c021      	RJMP _0x2C0236
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C0240:
00967f e1e5      	LDI  R30,LOW(21)
009680 940e d483 	CALL SUBOPT_0x2C7
009682 940e d7da 	CALL SUBOPT_0x326
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
009684 940e d84a 	CALL SUBOPT_0x339
009686 940e d7a2 	CALL SUBOPT_0x31E
009688 940e a752 	CALL _memset
                 ; 0016 0451                                 break;
00968a c015      	RJMP _0x2C0236
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C023F:
00968b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00968d 30a4      	CPI  R26,LOW(0x4)
00968e f48c      	BRGE _0x2C0242
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
00968f 940e d748 	CALL SUBOPT_0x30F
009691 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
009692 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
009693 940e d787 	CALL SUBOPT_0x319
009695 f024      	BRLT _0x2C0243
009696 940e d85b 	CALL SUBOPT_0x33C
009698 e0a0      	LDI  R26,LOW(0)
009699 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0243:
00969a 940e d792 	CALL SUBOPT_0x31B
00969c 940e d85b 	CALL SUBOPT_0x33C
00969e 940e d799 	CALL SUBOPT_0x31C
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C0242:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C0236:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
0096a0 c0f3      	RJMP _0x2C0244
                 _0x2C0233:
0096a1 91a0 14df 	LDS  R26,_currentPage
0096a3 32a3      	CPI  R26,LOW(0x23)
0096a4 f011      	BREQ PC+3
0096a5 940c 96eb 	JMP _0x2C0245
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
0096a7 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
0096a9 f409      	BRNE _0x2C0249
0096aa c03f      	RJMP _0x2C0248
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C0249:
0096ab 30e2      	CPI  R30,LOW(0x2)
0096ac e0a0      	LDI  R26,HIGH(0x2)
0096ad 07fa      	CPC  R31,R26
0096ae f1d9      	BREQ _0x2C0248
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
0096af 30e3      	CPI  R30,LOW(0x3)
0096b0 e0a0      	LDI  R26,HIGH(0x3)
0096b1 07fa      	CPC  R31,R26
0096b2 f1b9      	BREQ _0x2C0248
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
0096b3 30e4      	CPI  R30,LOW(0x4)
0096b4 e0a0      	LDI  R26,HIGH(0x4)
0096b5 07fa      	CPC  R31,R26
0096b6 f599      	BRNE _0x2C0248
0096b7 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
0096b9 940e cf33 	CALL SUBOPT_0x214
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
0096bb f459      	BRNE _0x2C0250
0096bc e0e1      	LDI  R30,LOW(1)
0096bd 93e0 14df 	STS  _currentPage,R30
0096bf e0e3      	LDI  R30,LOW(3)
0096c0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
0096c2 e1ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
0096c3 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
0096c4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
0096c5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
0096c6 c01d      	RJMP _0x2C02CF
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0250:
0096c7 30e2      	CPI  R30,LOW(0x2)
0096c8 e0a0      	LDI  R26,HIGH(0x2)
0096c9 07fa      	CPC  R31,R26
0096ca f431      	BRNE _0x2C0251
0096cb e0e2      	LDI  R30,LOW(2)
0096cc 940e d66f 	CALL SUBOPT_0x2F1
0096ce 940e d67b 	CALL SUBOPT_0x2F3
0096d0 c013      	RJMP _0x2C02CF
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0251:
0096d1 30ee      	CPI  R30,LOW(0xE)
0096d2 e0a0      	LDI  R26,HIGH(0xE)
0096d3 07fa      	CPC  R31,R26
0096d4 f431      	BRNE _0x2C0252
0096d5 e0ee      	LDI  R30,LOW(14)
0096d6 940e d66f 	CALL SUBOPT_0x2F1
0096d8 940e d840 	CALL SUBOPT_0x337
0096da c009      	RJMP _0x2C02CF
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0252:
0096db 31e1      	CPI  R30,LOW(0x11)
0096dc e0a0      	LDI  R26,HIGH(0x11)
0096dd 07fa      	CPC  R31,R26
0096de f459      	BRNE _0x2C024F
0096df e1e1      	LDI  R30,LOW(17)
0096e0 940e d66f 	CALL SUBOPT_0x2F1
0096e2 940e d845 	CALL SUBOPT_0x338
                 _0x2C02CF:
0096e4 940e e324 	CALL __PUTPARD1
0096e6 940e d75b 	CALL SUBOPT_0x312
0096e8 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 0469                             }
                 _0x2C024F:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C0248:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
0096ea c0a9      	RJMP _0x2C0254
                 _0x2C0245:
0096eb 91a0 14df 	LDS  R26,_currentPage
0096ed 32a4      	CPI  R26,LOW(0x24)
0096ee f019      	BREQ _0x2C0256
0096ef 32a5      	CPI  R26,LOW(0x25)
0096f0 f009      	BREQ _0x2C0256
0096f1 c0a2      	RJMP _0x2C0255
                 _0x2C0256:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
0096f2 940e d451 	CALL SUBOPT_0x2C2
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
0096f4 f409      	BRNE _0x2C025B
0096f5 c09e      	RJMP _0x2C025A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C025B:
0096f6 30e2      	CPI  R30,LOW(0x2)
0096f7 e0a0      	LDI  R26,HIGH(0x2)
0096f8 07fa      	CPC  R31,R26
0096f9 f409      	BRNE _0x2C025C
0096fa c099      	RJMP _0x2C025A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C025C:
0096fb 30e3      	CPI  R30,LOW(0x3)
0096fc e0a0      	LDI  R26,HIGH(0x3)
0096fd 07fa      	CPC  R31,R26
0096fe f409      	BRNE _0x2C025D
0096ff c094      	RJMP _0x2C025A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C025D:
009700 30e4      	CPI  R30,LOW(0x4)
009701 e0a0      	LDI  R26,HIGH(0x4)
009702 07fa      	CPC  R31,R26
009703 f011      	BREQ PC+3
009704 940c 9794 	JMP _0x2C025A
009706 940e d854 	CALL SUBOPT_0x33B
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
009708 f499      	BRNE _0x2C0262
009709 e0e7      	LDI  R30,LOW(7)
00970a 940e d861 	CALL SUBOPT_0x33D
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
00970c 30a8      	CPI  R26,LOW(0x8)
00970d f411      	BRNE _0x2C0263
00970e e0e0      	LDI  R30,LOW(0)
00970f c005      	RJMP _0x2C02D0
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0263:
009710 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009712 30ad      	CPI  R26,LOW(0xD)
009713 f419      	BRNE _0x2C0265
009714 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D0:
009715 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0265:
                +
009717 e4ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
009718 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
009719 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00971a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00971b c06e      	RJMP _0x2C02D1
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0262:
00971c 30ee      	CPI  R30,LOW(0xE)
00971d e0a0      	LDI  R26,HIGH(0xE)
00971e 07fa      	CPC  R31,R26
00971f f431      	BRNE _0x2C0266
009720 e0ee      	LDI  R30,LOW(14)
009721 940e d66f 	CALL SUBOPT_0x2F1
009723 940e d840 	CALL SUBOPT_0x337
009725 c064      	RJMP _0x2C02D1
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0266:
009726 31e1      	CPI  R30,LOW(0x11)
009727 e0a0      	LDI  R26,HIGH(0x11)
009728 07fa      	CPC  R31,R26
009729 f489      	BRNE _0x2C0267
00972a e1e1      	LDI  R30,LOW(17)
00972b 940e d861 	CALL SUBOPT_0x33D
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
00972d 31a2      	CPI  R26,LOW(0x12)
00972e f411      	BRNE _0x2C0268
00972f e0e0      	LDI  R30,LOW(0)
009730 c005      	RJMP _0x2C02D2
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0268:
009731 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009733 31a4      	CPI  R26,LOW(0x14)
009734 f419      	BRNE _0x2C026A
009735 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D2:
009736 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C026A:
009738 940e d845 	CALL SUBOPT_0x338
00973a c04f      	RJMP _0x2C02D1
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0267:
00973b 31e5      	CPI  R30,LOW(0x15)
00973c e0a0      	LDI  R26,HIGH(0x15)
00973d 07fa      	CPC  R31,R26
00973e f4c9      	BRNE _0x2C026B
00973f e1e5      	LDI  R30,LOW(21)
009740 940e d861 	CALL SUBOPT_0x33D
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
009742 31a6      	CPI  R26,LOW(0x16)
009743 f411      	BRNE _0x2C026C
009744 e0e0      	LDI  R30,LOW(0)
009745 c00b      	RJMP _0x2C02D3
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C026C:
009746 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009748 31ab      	CPI  R26,LOW(0x1B)
009749 f411      	BRNE _0x2C026E
00974a e0e2      	LDI  R30,LOW(2)
00974b c005      	RJMP _0x2C02D3
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C026E:
00974c 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00974e 32a0      	CPI  R26,LOW(0x20)
00974f f419      	BRNE _0x2C0270
009750 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D3:
009751 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0270:
                +
009753 eae7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
009754 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
009755 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
009756 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
009757 c032      	RJMP _0x2C02D1
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C026B:
009758 31e8      	CPI  R30,LOW(0x18)
009759 e0a0      	LDI  R26,HIGH(0x18)
00975a 07fa      	CPC  R31,R26
00975b f461      	BRNE _0x2C0271
00975c e1e8      	LDI  R30,LOW(24)
00975d 940e d483 	CALL SUBOPT_0x2C7
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
00975f 940e d7ce 	CALL SUBOPT_0x324
009761 91e0 1a6a 	LDS  R30,_prb2_S0160000000
009763 e0f0      	LDI  R31,0
009764 9631      	ADIW R30,1
009765 940e e201 	CALL __CWD1
009767 c028      	RJMP _0x2C02D4
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0271:
009768 31eb      	CPI  R30,LOW(0x1B)
009769 e0a0      	LDI  R26,HIGH(0x1B)
00976a 07fa      	CPC  R31,R26
00976b f541      	BRNE _0x2C0261
00976c e1eb      	LDI  R30,LOW(27)
00976d 940e d861 	CALL SUBOPT_0x33D
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
00976f 31ac      	CPI  R26,LOW(0x1C)
009770 f411      	BRNE _0x2C0273
009771 e0e0      	LDI  R30,LOW(0)
009772 c011      	RJMP _0x2C02D5
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0273:
009773 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009775 31ad      	CPI  R26,LOW(0x1D)
009776 f411      	BRNE _0x2C0275
009777 e0e1      	LDI  R30,LOW(1)
009778 c00b      	RJMP _0x2C02D5
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0275:
009779 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00977b 31ae      	CPI  R26,LOW(0x1E)
00977c f411      	BRNE _0x2C0277
00977d e0e2      	LDI  R30,LOW(2)
00977e c005      	RJMP _0x2C02D5
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0277:
00977f 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009781 31af      	CPI  R26,LOW(0x1F)
009782 f419      	BRNE _0x2C0279
009783 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D5:
009784 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0279:
                +
009786 ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
009787 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
009788 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
009789 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C02D1:
00978a 940e e324 	CALL __PUTPARD1
00978c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00978e 940e e1fb 	CALL __CBD1
                 _0x2C02D4:
009790 940e e324 	CALL __PUTPARD1
009792 940e d29c 	CALL SUBOPT_0x28A
                 ; 0016 048D                             }
                 _0x2C0261:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C025A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0255:
                 _0x2C0254:
                 _0x2C0244:
                 _0x2C0232:
                 _0x2C0210:
                 _0x2C0207:
                 _0x2C01FC:
                 _0x2C01DA:
                 _0x2C01C2:
                 _0x2C01B2:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
009794 940e e3a0 	CALL __LOADLOCR6
009796 96ef      	ADIW R28,63
009797 9668      	ADIW R28,24
009798 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
009799 940e d0f8 	CALL SUBOPT_0x24D
00979b e0ea      	LDI  R30,LOW(_0x2C027A*2)
00979c e5fe      	LDI  R31,HIGH(_0x2C027A*2)
00979d e060      	LDI  R22,BYTE3(_0x2C027A*2)
00979e 940e e3a7 	CALL __INITLOCB
0097a0 940e d22e 	CALL SUBOPT_0x277
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
0097a2 e020     +LDI R18 , LOW ( 0 )
0097a3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0097a4 8da8      	LDD  R26,Y+24
0097a5 8db9      	LDD  R27,Y+24+1
0097a6 e1ed      	LDI  R30,LOW(29)
0097a7 940e e242 	CALL __MULB1W2U
0097a9 54e2      	SUBI R30,LOW(-_sensor_config)
0097aa 4efe      	SBCI R31,HIGH(-_sensor_config)
0097ab 01df      	MOVW R26,R30
0097ac 940e d866 	CALL SUBOPT_0x33E
0097ae 01de      	MOVW R26,R28
0097af 9656      	ADIW R26,22
0097b0 d0ae      	RCALL _get_current_sampling
0097b1 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
0097b2 2311      	TST  R17
0097b3 f42a      	BRPL _0x2C027B
                 ; 0016 04A8         val[0] = 0;
0097b4 e0e0      	LDI  R30,LOW(0)
0097b5 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
0097b6 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
0097b7 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
0097b8 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C027B:
                +
0097b9 e020     +LDI R18 , LOW ( 0 )
0097ba e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
0097bb 89ac      	LDD  R26,Y+20
0097bc e6e4      	LDI  R30,LOW(100)
0097bd 02ea      	MULS R30,R26
0097be 01f0      	MOVW R30,R0
                +
0097bf 0f2e     +ADD R18 , R30
0097c0 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
0097c1 89ad      	LDD  R26,Y+21
0097c2 e0ea      	LDI  R30,LOW(10)
0097c3 02ea      	MULS R30,R26
0097c4 01f0      	MOVW R30,R0
                +
0097c5 0f2e     +ADD R18 , R30
0097c6 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
0097c7 89ee      	LDD  R30,Y+22
0097c8 e0f0      	LDI  R31,0
0097c9 fde7      	SBRC R30,7
0097ca efff      	SER  R31
                +
0097cb 0f2e     +ADD R18 , R30
0097cc 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
0097cd 940e c462 	CALL SUBOPT_0x5A
0097cf e0e0      	LDI  R30,LOW(0)
0097d0 93ea      	ST   -Y,R30
0097d1 940e cdd2 	CALL SUBOPT_0x1E0
0097d3 940e a752 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
0097d5 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
0097d6 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
0097d7 8da8      	LDD  R26,Y+24
0097d8 8db9      	LDD  R27,Y+24+1
0097d9 940e d029 	CALL SUBOPT_0x22F
0097db f439      	BRNE _0x2C027C
0097dc 940e c462 	CALL SUBOPT_0x5A
                +
0097de e0e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 994 ) )
0097df e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 994 ) )
0097e0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 994 ) )
0097e1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 994 ) )
                 	__POINTD1FN _0x2C0000,994
0097e2 c006      	RJMP _0x2C02D6
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C027C:
0097e3 940e c462 	CALL SUBOPT_0x5A
                +
0097e5 e0e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 998 ) )
0097e6 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 998 ) )
0097e7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 998 ) )
0097e8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 998 ) )
                 	__POINTD1FN _0x2C0000,998
                 _0x2C02D6:
0097e9 940e e324 	CALL __PUTPARD1
0097eb 940e d4fc 	CALL SUBOPT_0x2D6
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
0097ed 01fe      	MOVW R30,R28
0097ee 9634      	ADIW R30,4
0097ef 940e c843 	CALL SUBOPT_0xF6
0097f1 940e cdd2 	CALL SUBOPT_0x1E0
0097f3 940e a752 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
0097f5 8da8      	LDD  R26,Y+24
0097f6 8db9      	LDD  R27,Y+24+1
0097f7 e1ed      	LDI  R30,LOW(29)
0097f8 940e e242 	CALL __MULB1W2U
                +
0097fa 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
0097fb 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
0097fc 81a0      	LD   R26,Z
0097fd 30a1      	CPI  R26,LOW(0x1)
0097fe f449      	BRNE _0x2C027E
0097ff 01fe      	MOVW R30,R28
009800 9634      	ADIW R30,4
009801 93fa      	ST   -Y,R31
009802 93ea      	ST   -Y,R30
                +
009803 e0e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1002 ) )
009804 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1002 ) )
009805 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1002 ) )
009806 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1002 ) )
                 	__POINTD1FN _0x2C0000,1002
009807 c008      	RJMP _0x2C02D7
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C027E:
009808 01fe      	MOVW R30,R28
009809 9634      	ADIW R30,4
00980a 93fa      	ST   -Y,R31
00980b 93ea      	ST   -Y,R30
                +
00980c e0ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1009 ) )
00980d e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1009 ) )
00980e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1009 ) )
00980f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1009 ) )
                 	__POINTD1FN _0x2C0000,1009
                 _0x2C02D7:
009810 940e e324 	CALL __PUTPARD1
009812 940e d4fc 	CALL SUBOPT_0x2D6
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
009814 e1e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1017 ) )
009815 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1017 ) )
009816 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1017 ) )
009817 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1017 ) )
                 	__POINTD1FN _0x2C0000,1017
009818 940e c823 	CALL SUBOPT_0xF1
00981a 940e d134 	CALL SUBOPT_0x254
00981c 940e d86b 	CALL SUBOPT_0x33F
00981e 01fe      	MOVW R30,R28
00981f 967c      	ADIW R30,28
009820 940e c357 	CALL SUBOPT_0x34
009822 01fe      	MOVW R30,R28
009823 9678      	ADIW R30,24
009824 940e c357 	CALL SUBOPT_0x34
009826 940e d870 	CALL SUBOPT_0x340
009828 a9ac      	LDD  R26,Y+52
009829 a9bd      	LDD  R27,Y+52+1
00982a 940e d1e1 	CALL SUBOPT_0x26C
00982c 940e d879 	CALL SUBOPT_0x341
00982e 940e d884 	CALL SUBOPT_0x342
009830 940e d88d 	CALL SUBOPT_0x343
009832 940e d894 	CALL SUBOPT_0x344
009834 e28c      	LDI  R24,44
009835 940e 9e86 	CALL _printDebug
009837 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
009838 e2e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1035 ) )
009839 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1035 ) )
00983a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1035 ) )
00983b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1035 ) )
                 	__POINTD1FN _0x2C0000,1035
00983c 940e c823 	CALL SUBOPT_0xF1
00983e 940e d134 	CALL SUBOPT_0x254
009840 940e d86b 	CALL SUBOPT_0x33F
009842 01fe      	MOVW R30,R28
009843 967c      	ADIW R30,28
009844 940e c357 	CALL SUBOPT_0x34
009846 01fe      	MOVW R30,R28
009847 9678      	ADIW R30,24
009848 940e c357 	CALL SUBOPT_0x34
00984a 940e d870 	CALL SUBOPT_0x340
00984c a9ac      	LDD  R26,Y+52
00984d a9bd      	LDD  R27,Y+52+1
00984e 940e d1e1 	CALL SUBOPT_0x26C
009850 940e d879 	CALL SUBOPT_0x341
009852 940e d884 	CALL SUBOPT_0x342
009854 940e d88d 	CALL SUBOPT_0x343
009856 940e d894 	CALL SUBOPT_0x344
009858 e28c      	LDI  R24,44
009859 940e 8007 	CALL _printOLED
00985b 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
00985c 940e e3a2 	CALL __LOADLOCR4
00985e c157      	RJMP _0x20E0035
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
00985f 940e d8a3 	CALL SUBOPT_0x345
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
009861 e5e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1078 ) )
009862 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1078 ) )
009863 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1078 ) )
009864 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1078 ) )
                 	__POINTD1FN _0x2C0000,1078
009865 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
009867 85aa      	LDD  R26,Y+10
009868 85bb      	LDD  R27,Y+10+1
009869 e1e0      	LDI  R30,LOW(3600)
00986a e0fe      	LDI  R31,HIGH(3600)
00986b 940e e260 	CALL __DIVW21U
00986d 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
00986e 85aa      	LDD  R26,Y+10
00986f 85bb      	LDD  R27,Y+10+1
009870 e1e0      	LDI  R30,LOW(3600)
009871 e0fe      	LDI  R31,HIGH(3600)
009872 940e e2ae 	CALL __MODW21U
009874 83ee      	STD  Y+6,R30
009875 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
009876 2400      	CLR  R0
009877 1604      	CP   R0,R20
009878 0605      	CPC  R0,R21
009879 f440      	BRSH _0x2C0281
                +
00987a 3e48     +CPI R20 , LOW ( 1000 )
00987b e0e3     +LDI R30 , HIGH ( 1000 )
00987c 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
00987d f420      	BRSH _0x2C0281
00987e 81ae      	LDD  R26,Y+6
00987f 81bf      	LDD  R27,Y+6+1
009880 9710      	SBIW R26,0
009881 f009      	BREQ _0x2C0282
                 _0x2C0281:
009882 c00b      	RJMP _0x2C0280
                 _0x2C0282:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
009883 e8e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1126 ) )
009884 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1126 ) )
009885 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1126 ) )
009886 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1126 ) )
                 	__POINTD1FN _0x2C0000,1126
009887 940e d8a9 	CALL SUBOPT_0x346
009889 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
00988b 940e d8ae 	CALL SUBOPT_0x347
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
00988d c0b8      	RJMP _0x20E0036
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0280:
00988e 85aa      	LDD  R26,Y+10
00988f 85bb      	LDD  R27,Y+10+1
009890 e3ec      	LDI  R30,LOW(60)
009891 e0f0      	LDI  R31,HIGH(60)
009892 940e e260 	CALL __DIVW21U
009894 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
009895 85aa      	LDD  R26,Y+10
009896 85bb      	LDD  R27,Y+10+1
009897 e3ec      	LDI  R30,LOW(60)
009898 e0f0      	LDI  R31,HIGH(60)
009899 940e e2ae 	CALL __MODW21U
00989b 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
00989c 2400      	CLR  R0
00989d 1600      	CP   R0,R16
00989e 0601      	CPC  R0,R17
00989f f440      	BRSH _0x2C0284
                +
0098a0 3e08     +CPI R16 , LOW ( 1000 )
0098a1 e0e3     +LDI R30 , HIGH ( 1000 )
0098a2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
0098a3 f420      	BRSH _0x2C0284
0098a4 2400      	CLR  R0
0098a5 1602      	CP   R0,R18
0098a6 0603      	CPC  R0,R19
0098a7 f009      	BREQ _0x2C0285
                 _0x2C0284:
0098a8 c00b      	RJMP _0x2C0283
                 _0x2C0285:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
0098a9 eae4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1158 ) )
0098aa e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1158 ) )
0098ab e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1158 ) )
0098ac e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1158 ) )
                 	__POINTD1FN _0x2C0000,1158
0098ad 940e d8da 	CALL SUBOPT_0x348
0098af 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
0098b1 940e d8df 	CALL SUBOPT_0x349
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
0098b3 c092      	RJMP _0x20E0036
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0283:
0098b4 85aa      	LDD  R26,Y+10
0098b5 85bb      	LDD  R27,Y+10+1
0098b6 3ea8      	CPI  R26,LOW(0x3E8)
0098b7 e0e3      	LDI  R30,HIGH(0x3E8)
0098b8 07be      	CPC  R27,R30
0098b9 f5a8      	BRSH _0x2C0286
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
0098ba ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1191 ) )
0098bb e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1191 ) )
0098bc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1191 ) )
0098bd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1191 ) )
                 	__POINTD1FN _0x2C0000,1191
0098be 940e e324 	CALL __PUTPARD1
0098c0 85ee      	LDD  R30,Y+14
0098c1 85ff      	LDD  R31,Y+14+1
0098c2 940e c357 	CALL SUBOPT_0x34
0098c4 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
0098c6 940e d90b 	CALL SUBOPT_0x34A
0098c8 940e e260 	CALL __DIVW21U
0098ca 85a8      	LDD  R26,Y+8
0098cb 85b9      	LDD  R27,Y+8+1
0098cc 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
0098cd 940e d90b 	CALL SUBOPT_0x34A
0098cf 940e e2ae 	CALL __MODW21U
0098d1 01df      	MOVW R26,R30
0098d2 e0ea      	LDI  R30,LOW(10)
0098d3 e0f0      	LDI  R31,HIGH(10)
0098d4 940e e260 	CALL __DIVW21U
                +
0098d6 85a8     +LDD R26 , Y + 8
0098d7 85b9     +LDD R27 , Y + 8 + 1
0098d8 9611     +ADIW R26 , 1
0098d9 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
0098da 940e d90b 	CALL SUBOPT_0x34A
0098dc 940e e2ae 	CALL __MODW21U
0098de 01df      	MOVW R26,R30
0098df e0ea      	LDI  R30,LOW(10)
0098e0 e0f0      	LDI  R31,HIGH(10)
0098e1 940e e2ae 	CALL __MODW21U
                +
0098e3 85a8     +LDD R26 , Y + 8
0098e4 85b9     +LDD R27 , Y + 8 + 1
0098e5 9612     +ADIW R26 , 2
0098e6 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
0098e7 85a8      	LDD  R26,Y+8
0098e8 85b9      	LDD  R27,Y+8+1
0098e9 9613      	ADIW R26,3
0098ea e0e0      	LDI  R30,LOW(0)
0098eb 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
0098ec e0e0      	LDI  R30,LOW(0)
0098ed e0f0      	LDI  R31,HIGH(0)
0098ee c057      	RJMP _0x20E0036
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0286:
                +
0098ef 3e08     +CPI R16 , LOW ( 1000 )
0098f0 e0e3     +LDI R30 , HIGH ( 1000 )
0098f1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
0098f2 f4d0      	BRSH _0x2C0287
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
0098f3 eee6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1224 ) )
0098f4 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1224 ) )
0098f5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1224 ) )
0098f6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1224 ) )
                 	__POINTD1FN _0x2C0000,1224
0098f7 940e d8da 	CALL SUBOPT_0x348
0098f9 01f9      	MOVW R30,R18
0098fa 940e c9d8 	CALL SUBOPT_0x13E
                 ; 0016 04FC         if(min_c > 30){
                +
0098fc 312f     +CPI R18 , LOW ( 31 )
0098fd e0e0     +LDI R30 , HIGH ( 31 )
0098fe 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
0098ff f010      	BRLO _0x2C0288
                 ; 0016 04FD             min++;
                +
009900 5f0f     +SUBI R16 , LOW ( - 1 )
009901 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0288:
                +
009902 e0ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1264 ) )
009903 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1264 ) )
009904 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1264 ) )
009905 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1264 ) )
                 	__POINTD1FN _0x2C0000,1264
009906 940e d8da 	CALL SUBOPT_0x348
009908 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
00990a 940e d8df 	CALL SUBOPT_0x349
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
00990c c039      	RJMP _0x20E0036
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0287:
                +
00990d 3e48     +CPI R20 , LOW ( 1000 )
00990e e0e3     +LDI R30 , HIGH ( 1000 )
00990f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
009910 f568      	BRSH _0x2C0289
                 ; 0016 0508         min   = hr_c / 60;
009911 81ae      	LDD  R26,Y+6
009912 81bf      	LDD  R27,Y+6+1
009913 e3ec      	LDI  R30,LOW(60)
009914 e0f0      	LDI  R31,HIGH(60)
009915 940e e260 	CALL __DIVW21U
009917 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
009918 81ae      	LDD  R26,Y+6
009919 81bf      	LDD  R27,Y+6+1
00991a e3ec      	LDI  R30,LOW(60)
00991b e0f0      	LDI  R31,HIGH(60)
00991c 940e e2ae 	CALL __MODW21U
00991e 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
00991f e1ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1278 ) )
009920 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1278 ) )
009921 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1278 ) )
009922 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1278 ) )
                 	__POINTD1FN _0x2C0000,1278
009923 940e d8a9 	CALL SUBOPT_0x346
009925 01f8      	MOVW R30,R16
009926 940e c357 	CALL SUBOPT_0x34
009928 01f9      	MOVW R30,R18
009929 940e c357 	CALL SUBOPT_0x34
00992b 940e c4ac 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
00992d 310f     +CPI R16 , LOW ( 31 )
00992e e0e0     +LDI R30 , HIGH ( 31 )
00992f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
009930 f010      	BRLO _0x2C028A
                 ; 0016 050C             hr++;
                +
009931 5f4f     +SUBI R20 , LOW ( - 1 )
009932 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C028A:
                +
009933 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1325 ) )
009934 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1325 ) )
009935 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1325 ) )
009936 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1325 ) )
                 	__POINTD1FN _0x2C0000,1325
009937 940e d8a9 	CALL SUBOPT_0x346
009939 940e c26b 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
00993b 940e d8ae 	CALL SUBOPT_0x347
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
00993d c008      	RJMP _0x20E0036
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0289:
                +
00993e e5e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1338 ) )
00993f e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1338 ) )
009940 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1338 ) )
009941 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1338 ) )
                 	__POINTD1FN _0x2C0000,1338
009942 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
009944 efef      	LDI  R30,LOW(65535)
009945 efff      	LDI  R31,HIGH(65535)
                 _0x20E0036:
009946 940e e3a0 	CALL __LOADLOCR6
009948 962c      	ADIW R28,12
009949 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
00994a 93ba      	ST   -Y,R27
00994b 93aa      	ST   -Y,R26
00994c 9762      	SBIW R28,18
00994d 940e e399 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
00994f 940e d910 	CALL SUBOPT_0x34B
009951 940e d915 	CALL SUBOPT_0x34C
009953 940e e158 	CALL __CMPF12
009955 f009      	BREQ PC+2
009956 f410      	BRCC PC+3
009957 940c 995c 	JMP  _0x2C028B
                 ; 0016 0526         return -1;
009959 efef      	LDI  R30,LOW(65535)
00995a efff      	LDI  R31,HIGH(65535)
00995b c058      	RJMP _0x20E0034
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C028B:
00995c 940e d910 	CALL SUBOPT_0x34B
00995e 940e d140 	CALL SUBOPT_0x256
                 ; 0016 052A     ftoa(vref,2,valTmp);
009960 940e d919 	CALL SUBOPT_0x34D
009962 e0e2      	LDI  R30,LOW(2)
009963 93ea      	ST   -Y,R30
009964 01de      	MOVW R26,R28
009965 9653      	ADIW R26,19
009966 940e a46d 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
009968 01de      	MOVW R26,R28
009969 961e      	ADIW R26,14
00996a 940e a799 	CALL _strlen
00996c 30e4      	CPI  R30,LOW(0x4)
00996d e0a0      	LDI  R26,HIGH(0x4)
00996e 07fa      	CPC  R31,R26
00996f f019      	BREQ _0x2C028C
009970 efef      	LDI  R30,LOW(65535)
009971 efff      	LDI  R31,HIGH(65535)
009972 c041      	RJMP _0x20E0034
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C028C:
                +
009973 e7ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1375 ) )
009974 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1375 ) )
009975 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1375 ) )
009976 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1375 ) )
                 	__POINTD1FN _0x2C0000,1375
009977 940e e324 	CALL __PUTPARD1
009979 940e d910 	CALL SUBOPT_0x34B
00997b 940e e324 	CALL __PUTPARD1
00997d 01fe      	MOVW R30,R28
00997e 9676      	ADIW R30,22
00997f 940e c9d8 	CALL SUBOPT_0x13E
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
009981 85ee      	LDD  R30,Y+14
009982 53e0      	SUBI R30,LOW(48)
009983 8da8      	LDD  R26,Y+24
009984 8db9      	LDD  R27,Y+24+1
009985 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
009986 89e8      	LDD  R30,Y+16
009987 53e0      	SUBI R30,LOW(48)
                +
009988 8da8     +LDD R26 , Y + 24
009989 8db9     +LDD R27 , Y + 24 + 1
00998a 9611     +ADIW R26 , 1
00998b 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
00998c 89e9      	LDD  R30,Y+17
00998d 53e0      	SUBI R30,LOW(48)
                +
00998e 8da8     +LDD R26 , Y + 24
00998f 8db9     +LDD R27 , Y + 24 + 1
009990 9612     +ADIW R26 , 2
009991 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
009992 eae7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1417 ) )
009993 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1417 ) )
009994 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1417 ) )
009995 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1417 ) )
                 	__POINTD1FN _0x2C0000,1417
009996 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
009998 e000     +LDI R16 , LOW ( 0 )
009999 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C028E:
                +
00999a 3003     +CPI R16 , LOW ( 3 )
00999b e0e0     +LDI R30 , HIGH ( 3 )
00999c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
00999d f474      	BRGE _0x2C028F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
00999e ece2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1444 ) )
00999f e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1444 ) )
0099a0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1444 ) )
0099a1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1444 ) )
                 	__POINTD1FN _0x2C0000,1444
0099a2 940e e324 	CALL __PUTPARD1
0099a4 01f8      	MOVW R30,R16
0099a5 8dac      	LDD  R26,Y+28
0099a6 8dbd      	LDD  R27,Y+28+1
0099a7 940e cba1 	CALL SUBOPT_0x183
                 ; 0016 0542     }
                +
0099a9 5f0f     +SUBI R16 , LOW ( - 1 )
0099aa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0099ab cfee      	RJMP _0x2C028E
                 _0x2C028F:
                 ; 0016 0543     printDebug("\r\n");
                +
0099ac eee1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
0099ad e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
0099ae e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
0099af e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
0099b0 940e c1f5 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
0099b2 e0e0      	LDI  R30,LOW(0)
0099b3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0034:
0099b4 940e e3a0 	CALL __LOADLOCR6
                 _0x20E0035:
0099b6 966a      	ADIW R28,26
0099b7 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
0099b8 93ba      ; 0016 0551     offset = 7;
0099b9 93aa      	ST   -Y,R27
0099ba 9760      	ST   -Y,R26
0099bb 940e e39b 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
0099bd e027     +LDI R18 , LOW ( 7 )
0099be e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
0099bf 0189      	MOVW R16,R18
                 _0x2C0291:
0099c0 940e d91e 	CALL SUBOPT_0x34E
0099c2 f554      	BRGE _0x2C0292
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0099c3 940e d923 	CALL SUBOPT_0x34F
0099c5 0fea      	ADD  R30,R26
0099c6 1ffb      	ADC  R31,R27
0099c7 93ff      	PUSH R31
0099c8 93ef      	PUSH R30
0099c9 940e d929 	CALL SUBOPT_0x350
0099cb 93ef      	PUSH R30
0099cc 940e d937 	CALL SUBOPT_0x351
0099ce 91af      	POP  R26
0099cf 0fea      	ADD  R30,R26
0099d0 91af      	POP  R26
0099d1 91bf      	POP  R27
0099d2 940e d942 	CALL SUBOPT_0x352
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
0099d4 940e d94b 	CALL SUBOPT_0x353
0099d6 940e d951 	CALL SUBOPT_0x354
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
0099d8 9631      	ADIW R30,1
0099d9 940e d94b 	CALL SUBOPT_0x353
0099db 940e d95c 	CALL SUBOPT_0x355
0099dd 940e ce89 	CALL SUBOPT_0x1FE
0099df 940e d961 	CALL SUBOPT_0x356
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
0099e1 9632      	ADIW R30,2
0099e2 940e d94b 	CALL SUBOPT_0x353
0099e4 940e d95c 	CALL SUBOPT_0x355
0099e6 940e d19b 	CALL SUBOPT_0x262
0099e8 01db      	MOVW R26,R22
0099e9 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
0099ea 5f0f     +SUBI R16 , LOW ( - 1 )
0099eb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0099ec cfd3      	RJMP _0x2C0291
                 _0x2C0292:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
0099ed e02b     +LDI R18 , LOW ( 11 )
0099ee e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
0099ef 0189      	MOVW R16,R18
                 _0x2C0294:
0099f0 940e d91e 	CALL SUBOPT_0x34E
0099f2 f554      	BRGE _0x2C0295
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0099f3 940e d968 	CALL SUBOPT_0x357
0099f5 0fea      	ADD  R30,R26
0099f6 1ffb      	ADC  R31,R27
0099f7 93ff      	PUSH R31
0099f8 93ef      	PUSH R30
0099f9 940e d929 	CALL SUBOPT_0x350
0099fb 93ef      	PUSH R30
0099fc 940e d937 	CALL SUBOPT_0x351
0099fe 91af      	POP  R26
0099ff 0fea      	ADD  R30,R26
009a00 91af      	POP  R26
009a01 91bf      	POP  R27
009a02 940e d942 	CALL SUBOPT_0x352
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
009a04 940e d96e 	CALL SUBOPT_0x358
009a06 940e d951 	CALL SUBOPT_0x354
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
009a08 9631      	ADIW R30,1
009a09 940e d96e 	CALL SUBOPT_0x358
009a0b 940e d95c 	CALL SUBOPT_0x355
009a0d 940e ce89 	CALL SUBOPT_0x1FE
009a0f 940e d961 	CALL SUBOPT_0x356
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
009a11 9632      	ADIW R30,2
009a12 940e d96e 	CALL SUBOPT_0x358
009a14 940e d95c 	CALL SUBOPT_0x355
009a16 940e d19b 	CALL SUBOPT_0x262
009a18 01db      	MOVW R26,R22
009a19 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
009a1a 5f0f     +SUBI R16 , LOW ( - 1 )
009a1b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a1c cfd3      	RJMP _0x2C0294
                 _0x2C0295:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
009a1d e02f     +LDI R18 , LOW ( 15 )
009a1e e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
009a1f 0189      	MOVW R16,R18
                 _0x2C0297:
009a20 940e d91e 	CALL SUBOPT_0x34E
009a22 f554      	BRGE _0x2C0298
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009a23 940e d974 	CALL SUBOPT_0x359
009a25 0fea      	ADD  R30,R26
009a26 1ffb      	ADC  R31,R27
009a27 93ff      	PUSH R31
009a28 93ef      	PUSH R30
009a29 940e d929 	CALL SUBOPT_0x350
009a2b 93ef      	PUSH R30
009a2c 940e d937 	CALL SUBOPT_0x351
009a2e 91af      	POP  R26
009a2f 0fea      	ADD  R30,R26
009a30 91af      	POP  R26
009a31 91bf      	POP  R27
009a32 940e d942 	CALL SUBOPT_0x352
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
009a34 940e d97a 	CALL SUBOPT_0x35A
009a36 940e d951 	CALL SUBOPT_0x354
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
009a38 9631      	ADIW R30,1
009a39 940e d97a 	CALL SUBOPT_0x35A
009a3b 940e d95c 	CALL SUBOPT_0x355
009a3d 940e ce89 	CALL SUBOPT_0x1FE
009a3f 940e d961 	CALL SUBOPT_0x356
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
009a41 9632      	ADIW R30,2
009a42 940e d97a 	CALL SUBOPT_0x35A
009a44 940e d95c 	CALL SUBOPT_0x355
009a46 940e d19b 	CALL SUBOPT_0x262
009a48 01db      	MOVW R26,R22
009a49 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
009a4a 5f0f     +SUBI R16 , LOW ( - 1 )
009a4b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a4c cfd3      	RJMP _0x2C0297
                 _0x2C0298:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
009a4d e125     +LDI R18 , LOW ( 21 )
009a4e e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
009a4f 0189      	MOVW R16,R18
                 _0x2C029A:
009a50 940e d91e 	CALL SUBOPT_0x34E
009a52 f5ac      	BRGE _0x2C029B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009a53 01f8      	MOVW R30,R16
009a54 1be2      	SUB  R30,R18
009a55 0bf3      	SBC  R31,R19
009a56 01de      	MOVW R26,R28
009a57 9614      	ADIW R26,4
009a58 0fea      	ADD  R30,R26
009a59 1ffb      	ADC  R31,R27
009a5a 93ff      	PUSH R31
009a5b 93ef      	PUSH R30
009a5c 940e d929 	CALL SUBOPT_0x350
009a5e 93ef      	PUSH R30
009a5f 940e d937 	CALL SUBOPT_0x351
009a61 91af      	POP  R26
009a62 0fea      	ADD  R30,R26
009a63 91af      	POP  R26
009a64 91bf      	POP  R27
009a65 940e d942 	CALL SUBOPT_0x352
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
009a67 940e d980 	CALL SUBOPT_0x35B
009a69 940e d98a 	CALL SUBOPT_0x35C
009a6b 01df      	MOVW R26,R30
009a6c e6e4      	LDI  R30,LOW(100)
009a6d e0f0      	LDI  R31,HIGH(100)
009a6e 940e e273 	CALL __DIVW21
009a70 01db      	MOVW R26,R22
009a71 940e d942 	CALL SUBOPT_0x352
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
009a73 9631      	ADIW R30,1
009a74 940e d980 	CALL SUBOPT_0x35B
009a76 91ac      	LD   R26,X
009a77 27bb      	CLR  R27
009a78 940e ce89 	CALL SUBOPT_0x1FE
009a7a 940e d961 	CALL SUBOPT_0x356
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
009a7c 9632      	ADIW R30,2
009a7d 940e d980 	CALL SUBOPT_0x35B
009a7f 91ac      	LD   R26,X
009a80 27bb      	CLR  R27
009a81 940e d19b 	CALL SUBOPT_0x262
009a83 01db      	MOVW R26,R22
009a84 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
009a85 5f0f     +SUBI R16 , LOW ( - 1 )
009a86 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a87 cfc8      	RJMP _0x2C029A
                 _0x2C029B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
009a88 ece7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1449 ) )
009a89 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1449 ) )
009a8a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1449 ) )
009a8b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1449 ) )
                 	__POINTD1FN _0x2C0000,1449
009a8c 940e e324 	CALL __PUTPARD1
009a8e 89ec      	LDD  R30,Y+20
009a8f 940e c4a6 	CALL SUBOPT_0x65
009a91 8de9      	LDD  R30,Y+25
009a92 940e c4a6 	CALL SUBOPT_0x65
009a94 8dee      	LDD  R30,Y+30
009a95 940e c4a6 	CALL SUBOPT_0x65
009a97 a1eb      	LDD  R30,Y+35
009a98 940e c4a6 	CALL SUBOPT_0x65
009a9a 940e cab6 	CALL SUBOPT_0x160
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
009a9c eeec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1486 ) )
009a9d e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1486 ) )
009a9e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1486 ) )
009a9f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1486 ) )
                 	__POINTD1FN _0x2C0000,1486
009aa0 940e e324 	CALL __PUTPARD1
009aa2 89e8      	LDD  R30,Y+16
009aa3 940e c4a6 	CALL SUBOPT_0x65
009aa5 89ed      	LDD  R30,Y+21
009aa6 940e c4a6 	CALL SUBOPT_0x65
009aa8 8dea      	LDD  R30,Y+26
009aa9 940e c4a6 	CALL SUBOPT_0x65
009aab 8def      	LDD  R30,Y+31
009aac 940e c4a6 	CALL SUBOPT_0x65
009aae 940e cab6 	CALL SUBOPT_0x160
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
009ab0 e1e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1523 ) )
009ab1 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1523 ) )
009ab2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1523 ) )
009ab3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1523 ) )
                 	__POINTD1FN _0x2C0000,1523
009ab4 940e ce46 	CALL SUBOPT_0x1F7
009ab6 89e9      	LDD  R30,Y+17
009ab7 940e c4a6 	CALL SUBOPT_0x65
009ab9 89ee      	LDD  R30,Y+22
009aba 940e c4a6 	CALL SUBOPT_0x65
009abc 8deb      	LDD  R30,Y+27
009abd 940e c4a6 	CALL SUBOPT_0x65
009abf 940e cab6 	CALL SUBOPT_0x160
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
009ac1 e3e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1560 ) )
009ac2 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1560 ) )
009ac3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1560 ) )
009ac4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1560 ) )
                 	__POINTD1FN _0x2C0000,1560
009ac5 940e e324 	CALL __PUTPARD1
009ac7 85e8      	LDD  R30,Y+8
009ac8 940e c4a6 	CALL SUBOPT_0x65
009aca 85ed      	LDD  R30,Y+13
009acb 940e c4a6 	CALL SUBOPT_0x65
009acd 89ea      	LDD  R30,Y+18
009ace 940e c4a6 	CALL SUBOPT_0x65
009ad0 89ef      	LDD  R30,Y+23
009ad1 940e c4a6 	CALL SUBOPT_0x65
009ad3 940e cab6 	CALL SUBOPT_0x160
                 ; 0016 0575 
                 ; 0016 0576     return 0;
009ad5 940e ca33 	CALL SUBOPT_0x14E
009ad7 966e      	ADIW R28,30
009ad8 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
009ad9 940e c81a ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
009adb 930a      	CALL SUBOPT_0xEE
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
009adc 81ae      ;	tmpf -> Y+2
009add 81bf      	LDD  R26,Y+6
009ade 940e cca9 	LDD  R27,Y+6+1
009ae0 81ee      	CALL SUBOPT_0x1B2
009ae1 81ff      	LDD  R30,Y+6
009ae2 940e ccae 	LDD  R31,Y+6+1
009ae4 81ee      	CALL SUBOPT_0x1B3
009ae5 81ff      	LDD  R30,Y+6
009ae6 940e d300 	LDD  R31,Y+6+1
009ae8 0fea      	CALL SUBOPT_0x297
009ae9 1ffb      	ADD  R30,R26
009aea 018f      	ADC  R31,R27
                 	MOVW R16,R30
009aeb 940e ceb5 ; 0016 05D9     tmpf = (float) (tmp / 100.0);
009aed 01df      	CALL SUBOPT_0x204
009aee 01cb      	MOVW R26,R30
                +
009aef e0e0     +LDI R30 , LOW ( 0x42C80000 )
009af0 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
009af1 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
009af2 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
009af3 940e e113 	CALL __DIVF21
009af5 940e c6a7 	CALL SUBOPT_0xB2
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
009af7 e5eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1597 ) )
009af8 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1597 ) )
009af9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1597 ) )
009afa e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1597 ) )
                 	__POINTD1FN _0x2C0000,1597
009afb 940e c965 	CALL SUBOPT_0x127
009afd 91ec      	LD   R30,X
009afe 940e c4a6 	CALL SUBOPT_0x65
009b00 85ee      	LDD  R30,Y+14
009b01 85ff      	LDD  R31,Y+14+1
009b02 81e1      	LDD  R30,Z+1
009b03 940e c4a6 	CALL SUBOPT_0x65
009b05 89ea      	LDD  R30,Y+18
009b06 89fb      	LDD  R31,Y+18+1
009b07 81e2      	LDD  R30,Z+2
009b08 940e c4a6 	CALL SUBOPT_0x65
009b0a 01f8      	MOVW R30,R16
009b0b 940e d134 	CALL SUBOPT_0x254
009b0d 940e c6fd 	CALL SUBOPT_0xC2
009b0f 940e e324 	CALL __PUTPARD1
009b11 e184      	LDI  R24,20
009b12 940e 9e86 	CALL _printDebug
009b14 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
009b15 940e c6ac 	CALL SUBOPT_0xB3
009b17 e8a9      	LDI  R26,LOW(_eep_vref_val)
009b18 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009b19 940e e35c 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
009b1b c07a      	RJMP _0x20E0033
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
009b1c 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
009b1d 81a8      	LD   R26,Y
009b1e 34a1      	CPI  R26,LOW(0x41)
009b1f f010      	BRLO _0x2C029D
009b20 34a7      	CPI  R26,LOW(0x47)
009b21 f008      	BRLO _0x2C029E
                 _0x2C029D:
009b22 c004      	RJMP _0x2C029C
                 _0x2C029E:
009b23 940e d98d 	CALL SUBOPT_0x35D
009b25 97f7      	SBIW R30,55
009b26 c20e      	RJMP _0x20E0030
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C029C:
009b27 81a8      	LD   R26,Y
009b28 36a1      	CPI  R26,LOW(0x61)
009b29 f010      	BRLO _0x2C02A1
009b2a 36a7      	CPI  R26,LOW(0x67)
009b2b f008      	BRLO _0x2C02A2
                 _0x2C02A1:
009b2c c005      	RJMP _0x2C02A0
                 _0x2C02A2:
009b2d 940e d98d 	CALL SUBOPT_0x35D
009b2f 55e7      	SUBI R30,LOW(87)
009b30 40f0      	SBCI R31,HIGH(87)
009b31 c203      	RJMP _0x20E0030
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C02A0:
009b32 81a8      	LD   R26,Y
009b33 33a0      	CPI  R26,LOW(0x30)
009b34 f010      	BRLO _0x2C02A5
009b35 33aa      	CPI  R26,LOW(0x3A)
009b36 f008      	BRLO _0x2C02A6
                 _0x2C02A5:
009b37 c004      	RJMP _0x2C02A4
                 _0x2C02A6:
009b38 940e d98d 	CALL SUBOPT_0x35D
009b3a 97f0      	SBIW R30,48
009b3b c1f9      	RJMP _0x20E0030
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C02A4:
009b3c e0e0      	LDI  R30,LOW(0)
009b3d e0f0      	LDI  R31,HIGH(0)
009b3e c1f6      	RJMP _0x20E0030
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
009b3f 940e c566 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009b41 e000     +LDI R16 , LOW ( 0 )
009b42 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AB:
009b43 940e c56b 	CALL SUBOPT_0x82
009b45 f45c      	BRGE _0x2C02AC
                 ; 0016 05FE         dest[i] = src[i];
009b46 01f8      	MOVW R30,R16
009b47 940e cc59 	CALL SUBOPT_0x1A5
009b49 010f      	MOVW R0,R30
009b4a 940e c570 	CALL SUBOPT_0x83
009b4c 940e c99e 	CALL SUBOPT_0x132
                 ; 0016 05FF     }
                +
009b4e 5f0f     +SUBI R16 , LOW ( - 1 )
009b4f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b50 cff2      	RJMP _0x2C02AB
                 _0x2C02AC:
                 ; 0016 0600     return 0;
009b51 c044      	RJMP _0x20E0033
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
009b52 940e c566 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009b54 e000     +LDI R16 , LOW ( 0 )
009b55 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AE:
009b56 940e c56b 	CALL SUBOPT_0x82
009b58 f544      	BRGE _0x2C02AF
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
009b59 e8e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1635 ) )
009b5a e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1635 ) )
009b5b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1635 ) )
009b5c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1635 ) )
                 	__POINTD1FN _0x2C0000,1635
009b5d 940e e324 	CALL __PUTPARD1
009b5f 01f8      	MOVW R30,R16
009b60 85aa      	LDD  R26,Y+10
009b61 85bb      	LDD  R27,Y+10+1
009b62 0fae      	ADD  R26,R30
009b63 1fbf      	ADC  R27,R31
009b64 91ec      	LD   R30,X
009b65 940e c4a6 	CALL SUBOPT_0x65
009b67 01f8      	MOVW R30,R16
009b68 85ac      	LDD  R26,Y+12
009b69 85bd      	LDD  R27,Y+12+1
009b6a 0fae      	ADD  R26,R30
009b6b 1fbf      	ADC  R27,R31
009b6c 940e e350 	CALL __EEPROMRDB
009b6e 940e c4a6 	CALL SUBOPT_0x65
009b70 e8ad      	LDI  R26,LOW(_userPwd)
009b71 e0b5      	LDI  R27,HIGH(_userPwd)
009b72 940e c84b 	CALL SUBOPT_0xF8
009b74 940e c4a6 	CALL SUBOPT_0x65
009b76 e9a1      	LDI  R26,LOW(_servicePwd)
009b77 e0b5      	LDI  R27,HIGH(_servicePwd)
009b78 940e c84b 	CALL SUBOPT_0xF8
009b7a 940e c4a6 	CALL SUBOPT_0x65
009b7c 940e cab6 	CALL SUBOPT_0x160
                 ; 0016 0609     }
                +
009b7e 5f0f     +SUBI R16 , LOW ( - 1 )
009b7f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b80 cfd5      	RJMP _0x2C02AE
                 _0x2C02AF:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
009b81 e000     +LDI R16 , LOW ( 0 )
009b82 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02B1:
009b83 940e c56b 	CALL SUBOPT_0x82
009b85 f484      	BRGE _0x2C02B2
                 ; 0016 060C         if(src1[i] != src2[i]){
009b86 01f8      	MOVW R30,R16
009b87 940e d024 	CALL SUBOPT_0x22E
009b89 900c      	LD   R0,X
009b8a 940e c570 	CALL SUBOPT_0x83
009b8c 940e e350 	CALL __EEPROMRDB
009b8e 15e0      	CP   R30,R0
009b8f f019      	BREQ _0x2C02B3
                 ; 0016 060D             return -1;
009b90 efef      	LDI  R30,LOW(65535)
009b91 efff      	LDI  R31,HIGH(65535)
009b92 c005      	RJMP _0x20E0032
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C02B3:
                +
009b93 5f0f     +SUBI R16 , LOW ( - 1 )
009b94 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b95 cfed      	RJMP _0x2C02B1
                 _0x2C02B2:
                 ; 0016 0610     return 0;
                 _0x20E0033:
009b96 e0e0      	LDI  R30,LOW(0)
009b97 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0032:
009b98 8119      	LDD  R17,Y+1
009b99 8108      	LDD  R16,Y+0
009b9a 9628      	ADIW R28,8
009b9b 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;#include "sensor.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;flash unsigned char cmdGetADCSensor[]       = "$CMDGAS";         // -- Get ADC sensor value -- //   ,chID(1)
                 ;
                 ;//flash unsigned char cmdSetSensorType[]   = "$CMDSST";        // -- Set Type Sensor -- //   $CMDSST,01#     //01=TMEC,02=PT100,03=K (AD595)
                 ;
                 ;
                 ;
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void iGetSensorValue(){
                 ; 0017 0027 void iGetSensorValue(){
                 
                 	.CSEG
                 _iGetSensorValue:
                 ; 0017 0028     printDebug("[Get ADC of sensor]\r\n");
                +
009b9c ebec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
009b9d e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
009b9e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
009b9f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
009ba0 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 0029     iSensorGetADCValue();
009ba2 940e 6abf 	CALL _iSensorGetADCValue
                 ; 0017 002A }
009ba4 9508      	RET
                 ;int debugSetSensorType(){
                 ; 0017 002B int debugSetSensorType(){
                 ; 0017 002C     unsigned char i=0;
                 ; 0017 002D     unsigned char buffer[4];
                 ; 0017 002E     unsigned int sensorType;
                 ; 0017 002F     unsigned int pointID;
                 ; 0017 0030     float pointValue;         //std value
                 ; 0017 0031 
                 ; 0017 0032 
                 ; 0017 0033     printDebug("\r\n<Debug>SetCal: \r\n");
                 ;	i -> R17
                 ;	buffer -> Y+10
                 ;	sensorType -> R18,R19
                 ;	pointID -> R20,R21
                 ;	pointValue -> Y+6
                 ; 0017 0034     memset(buffer,0,sizeof(buffer));
                 ; 0017 0035     for(i=0;i<2;i++){
                 ; 0017 0036        buffer[i] = rxPackage3[i+8];
                 ; 0017 0037     }
                 ; 0017 0038     sensorType = atoi(buffer);
                 ; 0017 0039     printDebug("Sensor Type:%d \r\n",sensorType);
                 ; 0017 003A 
                 ; 0017 003B 
                 ; 0017 003C     return 0;
                 ; 0017 003D }
                 ;
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0040 {
                 _DEBUG_setDateTime:
                 ; 0017 0041     unsigned char   i;
                 ; 0017 0042     unsigned char   buffer[32];
                 ; 0017 0043     int             tz;
                 ; 0017 0044 
                 ; 0017 0045     struct rtc_structure rtcSet;
                 ; 0017 0046 
                 ; 0017 0047     for(i=0;i<4;i++)
009ba5 97ea      	SBIW R28,58
009ba6 940e e39b 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
009ba8 e010      	LDI  R17,LOW(0)
                 _0x2E0008:
009ba9 3014      	CPI  R17,4
009baa f450      	BRSH _0x2E0009
                 ; 0017 0048     {
                 ; 0017 0049         buffer[i] = rxPackage3[i+8];
009bab 940e c68a 	CALL SUBOPT_0xAC
009bad 940e d990 	CALL SUBOPT_0x35E
                +
009baf 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009bb0 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009bb1 81e0      	LD   R30,Z
009bb2 93ec      	ST   X,R30
                 ; 0017 004A     }
009bb3 5f1f      	SUBI R17,-1
009bb4 cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 004B     buffer[4] = 0;
009bb5 940e d995 	CALL SUBOPT_0x35F
                 ; 0017 004C 
                 ; 0017 004D     rtcSet.year = atol(buffer);
009bb7 940e c673 	CALL SUBOPT_0xA8
                 ; 0017 004E 
                 ; 0017 004F     printDebug("get year = %d\r\n",rtcSet.year);
                +
009bb9 efe8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 60 ) )
009bba e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 60 ) )
009bbb e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 60 ) )
009bbc e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 60 ) )
                 	__POINTD1FN _0x2E0000,60
009bbd 940e ce2b 	CALL SUBOPT_0x1F1
009bbf 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0017 0050 
                 ; 0017 0051     for(i=0;i<2;i++)
009bc1 e010      	LDI  R17,LOW(0)
                 _0x2E000B:
009bc2 3012      	CPI  R17,2
009bc3 f450      	BRSH _0x2E000C
                 ; 0017 0052     {
                 ; 0017 0053         buffer[i] = rxPackage3[i+13];
009bc4 940e c68a 	CALL SUBOPT_0xAC
009bc6 940e d990 	CALL SUBOPT_0x35E
                +
009bc8 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
009bc9 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
009bca 81e0      	LD   R30,Z
009bcb 93ec      	ST   X,R30
                 ; 0017 0054     }
009bcc 5f1f      	SUBI R17,-1
009bcd cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0055     buffer[2] = 0;
009bce 940e d99b 	CALL SUBOPT_0x360
                 ; 0017 0056 
                 ; 0017 0057     rtcSet.month = atol(buffer);
009bd0 940e d9a1 	CALL SUBOPT_0x361
                 ; 0017 0058 
                 ; 0017 0059     printDebug("get month = %d\r\n",rtcSet.month);
                +
009bd2 e0e8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 76 ) )
009bd3 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 76 ) )
009bd4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 76 ) )
009bd5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 76 ) )
                 	__POINTD1FN _0x2E0000,76
009bd6 940e c5ae 	CALL SUBOPT_0x8D
009bd8 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0017 005A 
                 ; 0017 005B     for(i=0;i<2;i++)
009bda e010      	LDI  R17,LOW(0)
                 _0x2E000E:
009bdb 3012      	CPI  R17,2
009bdc f450      	BRSH _0x2E000F
                 ; 0017 005C     {
                 ; 0017 005D         buffer[i] = rxPackage3[i+16];
009bdd 940e c68a 	CALL SUBOPT_0xAC
009bdf 940e d990 	CALL SUBOPT_0x35E
                +
009be1 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
009be2 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
009be3 81e0      	LD   R30,Z
009be4 93ec      	ST   X,R30
                 ; 0017 005E     }
009be5 5f1f      	SUBI R17,-1
009be6 cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 005F     buffer[2] = 0;
009be7 940e d99b 	CALL SUBOPT_0x360
                 ; 0017 0060 
                 ; 0017 0061     rtcSet.date = atol(buffer);
009be9 940e c805 	CALL SUBOPT_0xEA
                 ; 0017 0062 
                 ; 0017 0063     printDebug("get date = %d\r\n",rtcSet.date);
                +
009beb e1e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 93 ) )
009bec e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 93 ) )
009bed e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 93 ) )
009bee e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 93 ) )
                 	__POINTD1FN _0x2E0000,93
009bef 940e c467 	CALL SUBOPT_0x5B
009bf1 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 0064 
                 ; 0017 0065     for(i=0;i<2;i++)
009bf3 e010      	LDI  R17,LOW(0)
                 _0x2E0011:
009bf4 3012      	CPI  R17,2
009bf5 f450      	BRSH _0x2E0012
                 ; 0017 0066     {
                 ; 0017 0067         buffer[i] = rxPackage3[i+19];
009bf6 940e c68a 	CALL SUBOPT_0xAC
009bf8 940e d990 	CALL SUBOPT_0x35E
                +
009bfa 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
009bfb 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
009bfc 81e0      	LD   R30,Z
009bfd 93ec      	ST   X,R30
                 ; 0017 0068     }
009bfe 5f1f      	SUBI R17,-1
009bff cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0069     buffer[2] = 0;
009c00 940e d99b 	CALL SUBOPT_0x360
                 ; 0017 006A 
                 ; 0017 006B     rtcSet.hour = atol(buffer);
009c02 940e d9a6 	CALL SUBOPT_0x362
                 ; 0017 006C 
                 ; 0017 006D     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
009c04 e2e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 109 ) )
009c05 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 109 ) )
009c06 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 109 ) )
009c07 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 109 ) )
                 	__POINTD1FN _0x2E0000,109
009c08 940e cf8a 	CALL SUBOPT_0x21B
009c0a 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0017 006E 
                 ; 0017 006F     for(i=0;i<2;i++)
009c0c e010      	LDI  R17,LOW(0)
                 _0x2E0014:
009c0d 3012      	CPI  R17,2
009c0e f450      	BRSH _0x2E0015
                 ; 0017 0070     {
                 ; 0017 0071         buffer[i] = rxPackage3[i+22];
009c0f 940e c68a 	CALL SUBOPT_0xAC
009c11 940e d990 	CALL SUBOPT_0x35E
                +
009c13 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
009c14 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
009c15 81e0      	LD   R30,Z
009c16 93ec      	ST   X,R30
                 ; 0017 0072     }
009c17 5f1f      	SUBI R17,-1
009c18 cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 0073     buffer[2] = 0;
009c19 940e d99b 	CALL SUBOPT_0x360
                 ; 0017 0074 
                 ; 0017 0075     rtcSet.min = atol(buffer);
009c1b 940e d9ab 	CALL SUBOPT_0x363
                 ; 0017 0076 
                 ; 0017 0077     printDebug("get min = %d\r\n",rtcSet.min);
                +
009c1d e3e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 125 ) )
009c1e e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 125 ) )
009c1f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 125 ) )
009c20 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 125 ) )
                 	__POINTD1FN _0x2E0000,125
009c21 940e e324 	CALL __PUTPARD1
009c23 940e c828 	CALL SUBOPT_0xF2
009c25 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 0078 
                 ; 0017 0079     for(i=0;i<2;i++)
009c27 e010      	LDI  R17,LOW(0)
                 _0x2E0017:
009c28 3012      	CPI  R17,2
009c29 f450      	BRSH _0x2E0018
                 ; 0017 007A     {
                 ; 0017 007B         buffer[i] = rxPackage3[i+25];
009c2a 940e c68a 	CALL SUBOPT_0xAC
009c2c 940e d990 	CALL SUBOPT_0x35E
                +
009c2e 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
009c2f 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
009c30 81e0      	LD   R30,Z
009c31 93ec      	ST   X,R30
                 ; 0017 007C     }
009c32 5f1f      	SUBI R17,-1
009c33 cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 007D     buffer[2] = 0;
009c34 940e d99b 	CALL SUBOPT_0x360
                 ; 0017 007E 
                 ; 0017 007F     rtcSet.sec = atol(buffer);
                +
009c36 8fe8     +STD Y + 24 , R30
009c37 8ff9     +STD Y + 24 + 1 , R31
009c38 8f6a     +STD Y + 24 + 2 , R22
009c39 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0017 0080 
                 ; 0017 0081     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
009c3a e4e8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 140 ) )
009c3b e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 140 ) )
009c3c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 140 ) )
009c3d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 140 ) )
                 	__POINTD1FN _0x2E0000,140
009c3e 940e d9b0 	CALL SUBOPT_0x364
009c40 940e cbcf 	CALL SUBOPT_0x18A
                 ; 0017 0082 
                 ; 0017 0083     for(i=0;i<3;i++)
009c42 e010      	LDI  R17,LOW(0)
                 _0x2E001A:
009c43 3013      	CPI  R17,3
009c44 f450      	BRSH _0x2E001B
                 ; 0017 0084     {
                 ; 0017 0085         buffer[i] = rxPackage3[i+28];
009c45 940e c68a 	CALL SUBOPT_0xAC
009c47 940e d990 	CALL SUBOPT_0x35E
                +
009c49 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
009c4a 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
009c4b 81e0      	LD   R30,Z
009c4c 93ec      	ST   X,R30
                 ; 0017 0086     }
009c4d 5f1f      	SUBI R17,-1
009c4e cff4      	RJMP _0x2E001A
                 _0x2E001B:
                 ; 0017 0087     buffer[4] = 0;
009c4f 940e d995 	CALL SUBOPT_0x35F
                 ; 0017 0088 
                 ; 0017 0089     tz = atol(buffer);
009c51 019f      	MOVW R18,R30
                 ; 0017 008A 
                 ; 0017 008B     printDebug("get timezone = %+d\r\n",tz);
                +
009c52 e5e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 155 ) )
009c53 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 155 ) )
009c54 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 155 ) )
009c55 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 155 ) )
                 	__POINTD1FN _0x2E0000,155
009c56 940e c263 	CALL SUBOPT_0x11
009c58 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 008C 
                 ; 0017 008D     RTC_setDateTime(rtcSet,tz);
009c5a 01fe      	MOVW R30,R28
009c5b 9634      	ADIW R30,4
009c5c e1aa      	LDI  R26,26
009c5d 940e e32e 	CALL __PUTPARL
009c5f 01d9      	MOVW R26,R18
009c60 940e 4805 	CALL _RTC_setDateTime
                 ; 0017 008E 
                 ; 0017 008F     return 0;
009c62 940e ca33 	CALL SUBOPT_0x14E
009c64 96ee      	ADIW R28,62
009c65 9508      	RET
                 ; 0017 0090 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0093 {
                 _DEBUG_resetAlarm:
                 ; 0017 0094     resetAlarm();
009c66 940e 7dd0 	CALL _resetAlarm
                 ; 0017 0095 
                 ; 0017 0096     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
009c68 e6ec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 176 ) )
009c69 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 176 ) )
009c6a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 176 ) )
009c6b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 176 ) )
                 	__POINTD1FN _0x2E0000,176
009c6c 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 0097 }
009c6e 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 009A {
                 _DEBUG_ClearLogFile:
                 ; 0017 009B     int         res;
                 ; 0017 009C 
                 ; 0017 009D     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
009c6f 931a      	ST   -Y,R17
009c70 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
009c71 e8ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 211 ) )
009c72 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 211 ) )
009c73 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 211 ) )
009c74 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 211 ) )
                 	__POINTD1FN _0x2E0000,211
009c75 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 009E 
                 ; 0017 009F     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
009c77 940e d378 	CALL SUBOPT_0x2AB
                 ; 0017 00A0     if(res < 0)
009c79 f432      	BRPL _0x2E001C
                 ; 0017 00A1     {
                 ; 0017 00A2         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
009c7a 940e d9b7 	CALL SUBOPT_0x365
009c7c 940e c47f 	CALL SUBOPT_0x5F
009c7e 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 00A3     }
                 ; 0017 00A4 
                 ; 0017 00A5     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E001C:
009c80 940e d3a4 	CALL SUBOPT_0x2B1
                 ; 0017 00A6     if(res < 0)
009c82 f432      	BRPL _0x2E001D
                 ; 0017 00A7     {
                 ; 0017 00A8         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
009c83 940e d9b7 	CALL SUBOPT_0x365
009c85 940e c4c6 	CALL SUBOPT_0x6A
009c87 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 00A9     }
                 ; 0017 00AA 
                 ; 0017 00AB     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001D:
009c89 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
009c8a e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
009c8b 93fa      	ST   -Y,R31
009c8c 93ea      	ST   -Y,R30
009c8d e0e1      	LDI  R30,LOW(1)
009c8e 93ea      	ST   -Y,R30
009c8f 940e cc02 	CALL SUBOPT_0x195
009c91 940e 8591 	CALL _LOG_createFile
009c93 018f      	MOVW R16,R30
                 ; 0017 00AC     if(res < 0)
009c94 2311      	TST  R17
009c95 f432      	BRPL _0x2E001E
                 ; 0017 00AD     {
                 ; 0017 00AE         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
009c96 940e d9b7 	CALL SUBOPT_0x365
009c98 940e d3f2 	CALL SUBOPT_0x2B9
009c9a 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 00AF     }
                 ; 0017 00B0 
                 ; 0017 00B1     return;
                 _0x2E001E:
009c9c 9109      	LD   R16,Y+
009c9d 9119      	LD   R17,Y+
009c9e 9508      	RET
                 ; 0017 00B2 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 00B5 {
                 _DEBUG_setRealVref:
                 ; 0017 00B6     unsigned char i;
                 ; 0017 00B7     unsigned char rxStrSetVREF[6];
                 ; 0017 00B8 
                 ; 0017 00B9     for(i=0;i<=5;i++)
009c9f 9726      	SBIW R28,6
009ca0 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
009ca1 e010      	LDI  R17,LOW(0)
                 _0x2E0020:
009ca2 3016      	CPI  R17,6
009ca3 f450      	BRSH _0x2E0021
                 ; 0017 00BA     {
                 ; 0017 00BB         rxStrSetVREF[i] = rxPackage3[i+8];
009ca4 940e c68a 	CALL SUBOPT_0xAC
009ca6 940e d9bc 	CALL SUBOPT_0x366
                +
009ca8 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009ca9 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009caa 81e0      	LD   R30,Z
009cab 93ec      	ST   X,R30
                 ; 0017 00BC     }
009cac 5f1f      	SUBI R17,-1
009cad cff4      	RJMP _0x2E0020
                 _0x2E0021:
                 ; 0017 00BD     rxStrSetVREF[5] = '\0';
009cae e0e0      	LDI  R30,LOW(0)
009caf 83ee      	STD  Y+6,R30
                 ; 0017 00BE     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009cb0 eeec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 304 ) )
009cb1 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 304 ) )
009cb2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 304 ) )
009cb3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 304 ) )
                 	__POINTD1FN _0x2E0000,304
009cb4 940e e324 	CALL __PUTPARD1
009cb6 01fe      	MOVW R30,R28
009cb7 9635      	ADIW R30,5
009cb8 940e c357 	CALL SUBOPT_0x34
009cba 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 00BF     eep_vref_val = (atof(rxStrSetVREF));
009cbc 01de      	MOVW R26,R28
009cbd 9611      	ADIW R26,1
009cbe 940e a52a 	CALL _atof
009cc0 e8a9      	LDI  R26,LOW(_eep_vref_val)
009cc1 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009cc2 940e e35c 	CALL __EEPROMWRD
                 ; 0017 00C0     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
009cc4 e1ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 350 ) )
009cc5 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 350 ) )
009cc6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 350 ) )
009cc7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 350 ) )
                 	__POINTD1FN _0x2E0000,350
009cc8 940e e324 	CALL __PUTPARD1
009cca e8a9      	LDI  R26,LOW(_eep_vref_val)
009ccb e0b5      	LDI  R27,HIGH(_eep_vref_val)
009ccc 940e ca23 	CALL SUBOPT_0x14B
                 ; 0017 00C1 }
009cce 8118      	LDD  R17,Y+0
009ccf 9627      	ADIW R28,7
009cd0 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00C4 {
                 _DEBUG_sensorSelect:
                 ; 0017 00C5     unsigned char ch[2];
                 ; 0017 00C6 
                 ; 0017 00C7     if(TEMP_SEL != TEMP_TYPE_K){
009cd1 9722      	SBIW R28,2
                 ;	ch -> Y+0
009cd2 940e c325 	CALL SUBOPT_0x2E
009cd4 f039      	BREQ _0x2E0022
                 ; 0017 00C8         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
009cd5 e4e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 391 ) )
009cd6 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 391 ) )
009cd7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 391 ) )
009cd8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 391 ) )
                 	__POINTD1FN _0x2E0000,391
009cd9 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 00C9         return;
009cdb c044      	RJMP _0x20E0031
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     if(rxPackage3[8] == 'N'){
                 _0x2E0022:
                +
009cdc 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009cde 34ae      	CPI  R26,LOW(0x4E)
009cdf f449      	BRNE _0x2E0023
                 ; 0017 00CD         hwCalId     = 9;
009ce0 940e d9c1 	CALL SUBOPT_0x367
                 ; 0017 00CE         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
009ce2 e7e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 442 ) )
009ce3 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 442 ) )
009ce4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 442 ) )
009ce5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 442 ) )
                 	__POINTD1FN _0x2E0000,442
009ce6 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 00CF     }
                 ; 0017 00D0     else if(isdigit(rxPackage3[8])){
009ce8 c037      	RJMP _0x2E0024
                 _0x2E0023:
                +
009ce9 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009ceb 940e c165 	CALL _isdigit
009ced 30e0      	CPI  R30,0
009cee f109      	BREQ _0x2E0025
                 ; 0017 00D1         ch[0]       = rxPackage3[8];
                +
009cef 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009cf1 83e8      	ST   Y,R30
                 ; 0017 00D2         ch[1]       = '\0';
009cf2 e0e0      	LDI  R30,LOW(0)
009cf3 83e9      	STD  Y+1,R30
                 ; 0017 00D3         hwCalId     = atoi(ch);
009cf4 01de      	MOVW R26,R28
009cf5 940e a3f0 	CALL _atoi
009cf7 93e0 10f4 	STS  _hwCalId,R30
009cf9 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00D4 
                 ; 0017 00D5         SENSOR_SELECT(hwCalId);
009cfb 940e c64d 	CALL SUBOPT_0xA2
009cfd 91e0 10f4 	LDS  R30,_hwCalId
009cff 0fee      	LSL  R30
009d00 2bea      	OR   R30,R26
009d01 2da0      	MOV  R26,R0
009d02 93ec      	ST   X,R30
                 ; 0017 00D6         delay_ms(50);           // -- for multiplex stable -- //
009d03 940e c531 	CALL SUBOPT_0x7A
                 ; 0017 00D7 
                 ; 0017 00D8         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
009d05 e9ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 483 ) )
009d06 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 483 ) )
009d07 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 483 ) )
009d08 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 483 ) )
                 	__POINTD1FN _0x2E0000,483
009d09 940e c337 	CALL SUBOPT_0x30
009d0b 940e c357 	CALL SUBOPT_0x34
009d0d 940e c26b 	CALL SUBOPT_0x12
                 ; 0017 00D9     }
                 ; 0017 00DA     else{
009d0f c010      	RJMP _0x2E0026
                 _0x2E0025:
                 ; 0017 00DB         hwCalId     = 9;
009d10 940e d9c1 	CALL SUBOPT_0x367
                 ; 0017 00DC         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
009d12 eceb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 527 ) )
009d13 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 527 ) )
009d14 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 527 ) )
009d15 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 527 ) )
                 	__POINTD1FN _0x2E0000,527
009d16 940e e324 	CALL __PUTPARD1
                +
009d18 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009d1a 940e c4a6 	CALL SUBOPT_0x65
                +
009d1c 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009d1e 940e d035 	CALL SUBOPT_0x231
                 ; 0017 00DD     }
                 _0x2E0026:
                 _0x2E0024:
                 ; 0017 00DE 
                 ; 0017 00DF     return;
                 _0x20E0031:
009d20 9622      	ADIW R28,2
009d21 9508      	RET
                 ; 0017 00E0 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00E3 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00E4     if(flag){
009d22 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
009d23 81e8      	LD   R30,Y
009d24 30e0      	CPI  R30,0
009d25 f021      	BREQ _0x2E0027
                 ; 0017 00E5         config_oper.deviceEnable        =   0x01;
                +
009d26 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009d27 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009d28 e0e1      	LDI  R30,LOW(1)
009d29 c003      	RJMP _0x2E0068
                 ; 0017 00E6     }
                 ; 0017 00E7     else{
                 _0x2E0027:
                 ; 0017 00E8         config_oper.deviceEnable        =   0x00;
                +
009d2a eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009d2b e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009d2c e0e0      	LDI  R30,LOW(0)
                 _0x2E0068:
009d2d 940e e36c 	CALL __EEPROMWRB
                 ; 0017 00E9     }
                 ; 0017 00EA 
                 ; 0017 00EB     config_oper_flag                    =   0x01;
009d2f e4a3      	LDI  R26,LOW(_config_oper_flag)
009d30 e0b5      	LDI  R27,HIGH(_config_oper_flag)
009d31 940e c9a3 	CALL SUBOPT_0x133
                 ; 0017 00EC     is_operating_config_update          =   1;
009d33 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00ED 
                 ; 0017 00EE     return;
                 _0x20E0030:
009d35 9621      	ADIW R28,1
009d36 9508      	RET
                 ; 0017 00EF }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00F2 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00F3     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00F4     unsigned char i;
                 ; 0017 00F5     unsigned char set_str[24];
                 ; 0017 00F6 
                 ; 0017 00F7     for(i=0;i<24;i++){
009d37 9768      	SBIW R28,24
009d38 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
009d39 e010      	LDI  R17,LOW(0)
                 _0x2E002A:
009d3a 3118      	CPI  R17,24
009d3b f598      	BRSH _0x2E002B
                 ; 0017 00F8         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
009d3c 940e c68a 	CALL SUBOPT_0xAC
                +
009d3e 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009d3f 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009d40 81a0      	LD   R26,Z
009d41 32ac      	CPI  R26,LOW(0x2C)
009d42 f021      	BREQ _0x2E002D
009d43 940e c182 	CALL _isxdigit
009d45 30e0      	CPI  R30,0
009d46 f009      	BREQ _0x2E002E
                 _0x2E002D:
009d47 c013      	RJMP _0x2E002C
                 _0x2E002E:
                 ; 0017 00F9             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
009d48 e0ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 590 ) )
009d49 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 590 ) )
009d4a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 590 ) )
009d4b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 590 ) )
                 	__POINTD1FN _0x2E0000,590
009d4c 940e d9c8 	CALL SUBOPT_0x368
                +
009d4e 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009d4f 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009d50 81e0      	LD   R30,Z
009d51 940e c4a6 	CALL SUBOPT_0x65
009d53 940e c68a 	CALL SUBOPT_0xAC
                +
009d55 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009d56 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009d57 81e0      	LD   R30,Z
009d58 940e d035 	CALL SUBOPT_0x231
                 ; 0017 00FA             return;
009d5a c09d      	RJMP _0x20E002F
                 ; 0017 00FB         }
                 ; 0017 00FC         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E002C:
009d5b 940e c68a 	CALL SUBOPT_0xAC
009d5d 010f      	MOVW R0,R30
009d5e 01de      	MOVW R26,R28
009d5f 9611      	ADIW R26,1
009d60 0fea      	ADD  R30,R26
009d61 1ffb      	ADC  R31,R27
009d62 93ff      	PUSH R31
009d63 93ef      	PUSH R30
009d64 01f0      	MOVW R30,R0
                +
009d65 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009d66 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009d67 81a0      	LD   R26,Z
009d68 940e c191 	CALL _tolower
009d6a 91af      	POP  R26
009d6b 91bf      	POP  R27
009d6c 93ec      	ST   X,R30
                 ; 0017 00FD     }
009d6d 5f1f      	SUBI R17,-1
009d6e cfcb      	RJMP _0x2E002A
                 _0x2E002B:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
009d6f e4e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 651 ) )
009d70 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 651 ) )
009d71 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 651 ) )
009d72 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 651 ) )
                 	__POINTD1FN _0x2E0000,651
009d73 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 0100 
                 ; 0017 0101     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
009d75 e7eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 703 ) )
009d76 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 703 ) )
009d77 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 703 ) )
009d78 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 703 ) )
                 	__POINTD1FN _0x2E0000,703
009d79 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 0102     for(i=0;i<24;i++){
009d7b e010      	LDI  R17,LOW(0)
                 _0x2E0030:
009d7c 3118      	CPI  R17,24
009d7d f010      	BRLO PC+3
009d7e 940c 9de9 	JMP _0x2E0031
                 ; 0017 0103         if((i%3) == 0)      {   continue;                       }
009d80 940e d9cc 	CALL SUBOPT_0x369
009d82 9730      	SBIW R30,0
009d83 f409      	BRNE _0x2E0032
009d84 c062      	RJMP _0x2E002F
                 ; 0017 0104         else if((i%3) == 1) {
                 _0x2E0032:
009d85 940e d9cc 	CALL SUBOPT_0x369
009d87 30e1      	CPI  R30,LOW(0x1)
009d88 e0a0      	LDI  R26,HIGH(0x1)
009d89 07fa      	CPC  R31,R26
009d8a f581      	BRNE _0x2E0034
                 ; 0017 0105 
                 ; 0017 0106             printDebug("[%c",set_str[i]);
                +
009d8b eae3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 743 ) )
009d8c e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 743 ) )
009d8d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 743 ) )
009d8e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 743 ) )
                 	__POINTD1FN _0x2E0000,743
009d8f 940e d9c8 	CALL SUBOPT_0x368
009d91 01de      	MOVW R26,R28
009d92 9615      	ADIW R26,5
009d93 940e cba1 	CALL SUBOPT_0x183
                 ; 0017 0107 
                 ; 0017 0108             DEVICE_SERIAL[i/3]      = 0x00;
009d95 940e d9d3 	CALL SUBOPT_0x36A
009d97 01df      	MOVW R26,R30
009d98 e0e0      	LDI  R30,LOW(0)
009d99 940e e36c 	CALL __EEPROMWRB
                 ; 0017 0109 
                 ; 0017 010A             if(isdigit(set_str[i])){
009d9b 940e c68a 	CALL SUBOPT_0xAC
009d9d 940e d9bc 	CALL SUBOPT_0x366
009d9f 940e d9dc 	CALL SUBOPT_0x36B
009da1 f051      	BREQ _0x2E0035
                 ; 0017 010B                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
009da2 940e d9d3 	CALL SUBOPT_0x36A
009da4 010f      	MOVW R0,R30
009da5 940e c68a 	CALL SUBOPT_0xAC
009da7 940e d9bc 	CALL SUBOPT_0x366
009da9 91ec      	LD   R30,X
009daa 53e0      	SUBI R30,LOW(48)
009dab c009      	RJMP _0x2E0069
                 ; 0017 010C             }
                 ; 0017 010D             else{
                 _0x2E0035:
                 ; 0017 010E                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009dac 940e d9d3 	CALL SUBOPT_0x36A
009dae 010f      	MOVW R0,R30
009daf 940e c68a 	CALL SUBOPT_0xAC
009db1 940e d9bc 	CALL SUBOPT_0x366
009db3 91ec      	LD   R30,X
009db4 55e7      	SUBI R30,LOW(87)
                 _0x2E0069:
009db5 95e2      	SWAP R30
009db6 7fe0      	ANDI R30,0xF0
009db7 01d0      	MOVW R26,R0
009db8 940e e36c 	CALL __EEPROMWRB
                 ; 0017 010F             }
                 ; 0017 0110         }
                 ; 0017 0111         else if((i%3) == 2) {
009dba c02c      	RJMP _0x2E0037
                 _0x2E0034:
009dbb 940e d9cc 	CALL SUBOPT_0x369
009dbd 30e2      	CPI  R30,LOW(0x2)
009dbe e0a0      	LDI  R26,HIGH(0x2)
009dbf 07fa      	CPC  R31,R26
009dc0 f531      	BRNE _0x2E0038
                 ; 0017 0112 
                 ; 0017 0113             printDebug("%c]",set_str[i]);
                +
009dc1 eae7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 747 ) )
009dc2 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 747 ) )
009dc3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 747 ) )
009dc4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 747 ) )
                 	__POINTD1FN _0x2E0000,747
009dc5 940e d9c8 	CALL SUBOPT_0x368
009dc7 01de      	MOVW R26,R28
009dc8 9615      	ADIW R26,5
009dc9 940e cba1 	CALL SUBOPT_0x183
                 ; 0017 0114 
                 ; 0017 0115             if(isdigit(set_str[i])){
009dcb 940e c68a 	CALL SUBOPT_0xAC
009dcd 940e d9bc 	CALL SUBOPT_0x366
009dcf 940e d9dc 	CALL SUBOPT_0x36B
009dd1 f049      	BREQ _0x2E0039
                 ; 0017 0116                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
009dd2 940e d9d3 	CALL SUBOPT_0x36A
009dd4 940e d9e1 	CALL SUBOPT_0x36C
009dd6 940e d9bc 	CALL SUBOPT_0x366
009dd8 91ec      	LD   R30,X
009dd9 53e0      	SUBI R30,LOW(48)
009dda c008      	RJMP _0x2E006A
                 ; 0017 0117             }
                 ; 0017 0118             else{
                 _0x2E0039:
                 ; 0017 0119                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
009ddb 940e d9d3 	CALL SUBOPT_0x36A
009ddd 940e d9e1 	CALL SUBOPT_0x36C
009ddf 940e d9bc 	CALL SUBOPT_0x366
009de1 91ec      	LD   R30,X
009de2 55e7      	SUBI R30,LOW(87)
                 _0x2E006A:
009de3 29e0      	OR   R30,R0
009de4 01db      	MOVW R26,R22
009de5 940e e36c 	CALL __EEPROMWRB
                 ; 0017 011A             }
                 ; 0017 011B         }
                 ; 0017 011C     }
                 _0x2E0038:
                 _0x2E0037:
                 _0x2E002F:
009de7 5f1f      	SUBI R17,-1
009de8 cf93      	RJMP _0x2E0030
                 _0x2E0031:
                 ; 0017 011D 
                 ; 0017 011E     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
009de9 eaeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 751 ) )
009dea e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 751 ) )
009deb e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 751 ) )
009dec e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 751 ) )
                 	__POINTD1FN _0x2E0000,751
009ded 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 011F     for(i=0;i<8;i++){
009def e010      	LDI  R17,LOW(0)
                 _0x2E003C:
009df0 3018      	CPI  R17,8
009df1 f420      	BRSH _0x2E003D
                 ; 0017 0120         printDebug("[%02X]",DEVICE_SERIAL[i]);
009df2 940e d9e8 	CALL SUBOPT_0x36D
                 ; 0017 0121     }
009df4 5f1f      	SUBI R17,-1
009df5 cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0122     printDebug("\r\n");
009df6 940e d9f4 	CALL SUBOPT_0x36E
                 ; 0017 0123 
                 ; 0017 0124     return;
                 _0x20E002F:
009df8 8118      	LDD  R17,Y+0
009df9 9669      	ADIW R28,25
009dfa 9508      	RET
                 ; 0017 0125 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0128 {
                 _DEBUG_readSerialNumber:
                 ; 0017 0129     unsigned char i;
                 ; 0017 012A 
                 ; 0017 012B     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
009dfb 931a      	ST   -Y,R17
                 ;	i -> R17
                +
009dfc eee4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 808 ) )
009dfd e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 808 ) )
009dfe e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 808 ) )
009dff e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 808 ) )
                 	__POINTD1FN _0x2E0000,808
009e00 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 012C     for(i=0;i<8;i++){
009e02 e010      	LDI  R17,LOW(0)
                 _0x2E003F:
009e03 3018      	CPI  R17,8
009e04 f420      	BRSH _0x2E0040
                 ; 0017 012D         printDebug("[%02X]",DEVICE_SERIAL[i]);
009e05 940e d9e8 	CALL SUBOPT_0x36D
                 ; 0017 012E     }
009e07 5f1f      	SUBI R17,-1
009e08 cffa      	RJMP _0x2E003F
                 _0x2E0040:
                 ; 0017 012F     printDebug("\r\n");
009e09 940e d9f4 	CALL SUBOPT_0x36E
                 ; 0017 0130 
                 ; 0017 0131     return;
009e0b 9119      	LD   R17,Y+
009e0c 9508      	RET
                 ; 0017 0132 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 013A {
                 _debug_req:
                 ; 0017 013B     flag_PackageTerminate3 = 0;
009e0d e0e0      	LDI  R30,LOW(0)
009e0e 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 013C 
                 ; 0017 013D     printDebug("Get Debug Req.:");
                +
009e10 e0ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 849 ) )
009e11 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 849 ) )
009e12 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 849 ) )
009e13 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 849 ) )
                 	__POINTD1FN _0x2E0000,849
009e14 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 013E 
                 ; 0017 013F 
                 ; 0017 0140     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
009e16 940e d9fa 	CALL SUBOPT_0x36F
                +
009e18 eaea     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009e19 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009e1a e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009e1b e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
009e1c 940e d9ff 	CALL SUBOPT_0x370
009e1e f411      	BRNE _0x2E0041
                 ; 0017 0141         DEBUG_setDateTime();
009e1f dd85      	RCALL _DEBUG_setDateTime
                 ; 0017 0142     }
                 ; 0017 0143     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
009e20 c064      	RJMP _0x2E0042
                 _0x2E0041:
009e21 940e d9fa 	CALL SUBOPT_0x36F
                +
009e23 ebe2     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009e24 e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009e25 e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009e26 e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
009e27 940e d9ff 	CALL SUBOPT_0x370
009e29 f411      	BRNE _0x2E0043
                 ; 0017 0144         DEBUG_resetAlarm();
009e2a de3b      	RCALL _DEBUG_resetAlarm
                 ; 0017 0145     }
                 ; 0017 0146     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
009e2b c059      	RJMP _0x2E0044
                 _0x2E0043:
009e2c 940e d9fa 	CALL SUBOPT_0x36F
                +
009e2e ebea     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
009e2f e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
009e30 e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
009e31 e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
009e32 940e d9ff 	CALL SUBOPT_0x370
009e34 f411      	BRNE _0x2E0045
                 ; 0017 0147         DEBUG_ClearLogFile();
009e35 de39      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0148     }
                 ; 0017 0149     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009e36 c04e      	RJMP _0x2E0046
                 _0x2E0045:
009e37 940e d9fa 	CALL SUBOPT_0x36F
                +
009e39 ece2     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009e3a e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009e3b e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009e3c e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009e3d 940e d9ff 	CALL SUBOPT_0x370
009e3f f411      	BRNE _0x2E0047
                 ; 0017 014A         DEBUG_setRealVref();
009e40 de5e      	RCALL _DEBUG_setRealVref
                 ; 0017 014B     }
                 ; 0017 014C     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
009e41 c043      	RJMP _0x2E0048
                 _0x2E0047:
009e42 940e d9fa 	CALL SUBOPT_0x36F
                +
009e44 ecea     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
009e45 e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009e46 e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009e47 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009e48 940e d9ff 	CALL SUBOPT_0x370
009e4a f411      	BRNE _0x2E0049
                 ; 0017 014D         DEBUG_sensorSelect();
009e4b de85      	RCALL _DEBUG_sensorSelect
                 ; 0017 014E     }
                 ; 0017 014F     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009e4c c038      	RJMP _0x2E004A
                 _0x2E0049:
009e4d 940e d9fa 	CALL SUBOPT_0x36F
                +
009e4f ede2     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
009e50 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
009e51 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
009e52 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
009e53 940e d9ff 	CALL SUBOPT_0x370
009e55 f419      	BRNE _0x2E004B
                 ; 0017 0150         DEBUG_setDeviceEnable(1);
009e56 e0a1      	LDI  R26,LOW(1)
009e57 deca      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0151     }
                 ; 0017 0152     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009e58 c02c      	RJMP _0x2E004C
                 _0x2E004B:
009e59 940e d9fa 	CALL SUBOPT_0x36F
                +
009e5b edea     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009e5c e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009e5d e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009e5e e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009e5f 940e d9ff 	CALL SUBOPT_0x370
009e61 f419      	BRNE _0x2E004D
                 ; 0017 0153         DEBUG_setDeviceEnable(0);
009e62 e0a0      	LDI  R26,LOW(0)
009e63 debe      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0154     }
                 ; 0017 0155     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
009e64 c020      	RJMP _0x2E004E
                 _0x2E004D:
009e65 940e d9fa 	CALL SUBOPT_0x36F
                +
009e67 eee2     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009e68 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009e69 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009e6a e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009e6b 940e d9ff 	CALL SUBOPT_0x370
009e6d f411      	BRNE _0x2E004F
                 ; 0017 0156         DEBUG_setSerialNumber();
009e6e dec8      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0157     }
                 ; 0017 0158     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009e6f c015      	RJMP _0x2E0050
                 _0x2E004F:
009e70 940e d9fa 	CALL SUBOPT_0x36F
                +
009e72 eeea     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
009e73 e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
009e74 e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
009e75 e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009e76 940e d9ff 	CALL SUBOPT_0x370
009e78 f411      	BRNE _0x2E0051
                 ; 0017 0159         DEBUG_readSerialNumber();
009e79 df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 015A     }
                 ; 0017 015B     else if(!strncmpf(rxPackage3,cmdGetADCSensor,7)){
009e7a c00a      	RJMP _0x2E0052
                 _0x2E0051:
009e7b 940e d9fa 	CALL SUBOPT_0x36F
                +
009e7d efe2     +LDI R30 , LOW ( 2 * _cmdGetADCSensor + ( 0 ) )
009e7e e0f1     +LDI R31 , HIGH ( 2 * _cmdGetADCSensor + ( 0 ) )
009e7f e060     +LDI R22 , BYTE3 ( 2 * _cmdGetADCSensor + ( 0 ) )
009e80 e070     +LDI R23 , BYTE4 ( 2 * _cmdGetADCSensor + ( 0 ) )
                 	__POINTD1FN _cmdGetADCSensor,0
009e81 940e d9ff 	CALL SUBOPT_0x370
009e83 f409      	BRNE _0x2E0053
                 ; 0017 015C         iGetSensorValue();
009e84 dd17      	RCALL _iGetSensorValue
                 ; 0017 015D     }
                 ; 0017 015E 
                 ; 0017 015F     return;
                 _0x2E0053:
                 _0x2E0052:
                 _0x2E0050:
                 _0x2E004E:
                 _0x2E004C:
                 _0x2E004A:
                 _0x2E0048:
                 _0x2E0046:
                 _0x2E0044:
                 _0x2E0042:
009e85 9508      	RET
                 ; 0017 0160 }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0163 {
                 _printDebug:
009e86 92ff      	PUSH R15
009e87 2ef8      	MOV  R15,R24
                 ; 0017 0164     char textBuffer[256];
                 ; 0017 0165     va_list argptr;
                 ; 0017 0166 
                 ; 0017 0167     va_start(argptr, fmtstr);
009e88 50d1      	SUBI R29,1
009e89 931a      	ST   -Y,R17
009e8a 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
009e8b 01de      	MOVW R26,R28
009e8c 50a2      	SUBI R26,LOW(-(254))
009e8d 4fbf      	SBCI R27,HIGH(-(254))
009e8e 940e e178 	CALL __ADDW2R15
009e90 018d      	MOVW R16,R26
                 ; 0017 0168     vsprintf(textBuffer,fmtstr,argptr);
009e91 940e ce2f 	CALL SUBOPT_0x1F2
009e93 01de      	MOVW R26,R28
009e94 5fac      	SUBI R26,LOW(-(260))
009e95 4fbe      	SBCI R27,HIGH(-(260))
009e96 940e d2cf 	CALL SUBOPT_0x291
                 ; 0017 0169     send_uart(3,textBuffer);
009e98 e0e3      	LDI  R30,LOW(3)
009e99 93ea      	ST   -Y,R30
009e9a 01de      	MOVW R26,R28
009e9b 9613      	ADIW R26,3
009e9c 940e 4144 	CALL _send_uart
                 ; 0017 016A     va_end(argptr);
                 ; 0017 016B 
                 ; 0017 016C     return;
009e9e 8119      	LDD  R17,Y+1
009e9f 8108      	LDD  R16,Y+0
009ea0 9622      	ADIW R28,2
009ea1 5fdf      	SUBI R29,-1
009ea2 90ff      	POP  R15
009ea3 9508      	RET
                 ; 0017 016D }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 0170 {
                 _print_hex_ascii_line:
                 ; 0017 0171 
                 ; 0017 0172     int i;
                 ; 0017 0173     int gap;
                 ; 0017 0174     const unsigned char *ch;
                 ; 0017 0175 
                 ; 0017 0176     // offset //
                 ; 0017 0177     printDebug("%05d   ", offset);
009ea4 940e cc63 	CALL SUBOPT_0x1A7
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009ea6 e1ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 865 ) )
009ea7 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 865 ) )
009ea8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 865 ) )
009ea9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 865 ) )
                 	__POINTD1FN _0x2E0000,865
009eaa 940e c96a 	CALL SUBOPT_0x128
009eac 940e c800 	CALL SUBOPT_0xE9
                 ; 0017 0178 
                 ; 0017 0179 
                 ; 0017 017A     // hex //
                 ; 0017 017B     ch = payload;
                +
009eae 854a     +LDD R20 , Y + 10
009eaf 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 017C     for(i = 0; i < len; i++) {
                +
009eb0 e000     +LDI R16 , LOW ( 0 )
009eb1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0055:
009eb2 85e8      	LDD  R30,Y+8
009eb3 85f9      	LDD  R31,Y+8+1
009eb4 170e      	CP   R16,R30
009eb5 071f      	CPC  R17,R31
009eb6 f494      	BRGE _0x2E0056
                 ; 0017 017D         printDebug("%02x ", *ch);
                +
009eb7 e2e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 873 ) )
009eb8 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 873 ) )
009eb9 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 873 ) )
009eba e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 873 ) )
                 	__POINTD1FN _0x2E0000,873
009ebb 940e da06 	CALL SUBOPT_0x371
                 ; 0017 017E 
                 ; 0017 017F         ch++;
                +
009ebd 5f4f     +SUBI R20 , LOW ( - 1 )
009ebe 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0180         // print extra space after 8th byte for visual aid //
                 ; 0017 0181         if (i == 7){
009ebf e0e7      	LDI  R30,LOW(7)
009ec0 e0f0      	LDI  R31,HIGH(7)
009ec1 17e0      	CP   R30,R16
009ec2 07f1      	CPC  R31,R17
009ec3 f411      	BRNE _0x2E0057
                 ; 0017 0182             printDebug(" ");
009ec4 940e da0c 	CALL SUBOPT_0x372
                 ; 0017 0183 
                 ; 0017 0184         }
                 ; 0017 0185     }
                 _0x2E0057:
                +
009ec6 5f0f     +SUBI R16 , LOW ( - 1 )
009ec7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009ec8 cfe9      	RJMP _0x2E0055
                 _0x2E0056:
                 ; 0017 0186     // print space to handle line less than 8 bytes //
                 ; 0017 0187     if (len < 8){
009ec9 85a8      	LDD  R26,Y+8
009eca 85b9      	LDD  R27,Y+8+1
009ecb 9718      	SBIW R26,8
009ecc f414      	BRGE _0x2E0058
                 ; 0017 0188         printDebug(" ");
009ecd 940e da0c 	CALL SUBOPT_0x372
                 ; 0017 0189 
                 ; 0017 018A     }
                 ; 0017 018B 
                 ; 0017 018C     // fill hex gap with spaces if not full line //
                 ; 0017 018D     if (len < 16) {
                 _0x2E0058:
009ecf 85a8      	LDD  R26,Y+8
009ed0 85b9      	LDD  R27,Y+8+1
009ed1 9750      	SBIW R26,16
009ed2 f48c      	BRGE _0x2E0059
                 ; 0017 018E         gap = 16 - len;
009ed3 85a8      	LDD  R26,Y+8
009ed4 85b9      	LDD  R27,Y+8+1
009ed5 e1e0      	LDI  R30,LOW(16)
009ed6 e0f0      	LDI  R31,HIGH(16)
009ed7 1bea      	SUB  R30,R26
009ed8 0bfb      	SBC  R31,R27
009ed9 019f      	MOVW R18,R30
                 ; 0017 018F         for (i = 0; i < gap; i++) {
                +
009eda e000     +LDI R16 , LOW ( 0 )
009edb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005B:
                +
009edc 1702     +CP R16 , R18
009edd 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
009ede f42c      	BRGE _0x2E005C
                 ; 0017 0190             printDebug("   ");
009edf 940e da12 	CALL SUBOPT_0x373
                 ; 0017 0191 
                 ; 0017 0192         }
                +
009ee1 5f0f     +SUBI R16 , LOW ( - 1 )
009ee2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009ee3 cff8      	RJMP _0x2E005B
                 _0x2E005C:
                 ; 0017 0193     }
                 ; 0017 0194     printDebug("   ");
                 _0x2E0059:
009ee4 940e da12 	CALL SUBOPT_0x373
                 ; 0017 0195 
                 ; 0017 0196 
                 ; 0017 0197     // ascii (if printable) //
                 ; 0017 0198     ch = payload;
                +
009ee6 854a     +LDD R20 , Y + 10
009ee7 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0199     for(i = 0; i < len; i++) {
                +
009ee8 e000     +LDI R16 , LOW ( 0 )
009ee9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005E:
009eea 85e8      	LDD  R30,Y+8
009eeb 85f9      	LDD  R31,Y+8+1
009eec 170e      	CP   R16,R30
009eed 071f      	CPC  R17,R31
009eee f4c4      	BRGE _0x2E005F
                 ; 0017 019A         if (isprint(*ch)){
009eef 01da      	MOVW R26,R20
009ef0 91ac      	LD   R26,X
009ef1 940e c16e 	CALL _isprint
009ef3 30e0      	CPI  R30,0
009ef4 f039      	BREQ _0x2E0060
                 ; 0017 019B             printDebug("%c", *ch);
                +
009ef5 eae4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 744 ) )
009ef6 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 744 ) )
009ef7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 744 ) )
009ef8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 744 ) )
                 	__POINTD1FN _0x2E0000,744
009ef9 940e da06 	CALL SUBOPT_0x371
                 ; 0017 019C 
                 ; 0017 019D         }
                 ; 0017 019E         else{
009efb c006      	RJMP _0x2E0061
                 _0x2E0060:
                 ; 0017 019F             printDebug(".");
                +
009efc e2eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 879 ) )
009efd e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 879 ) )
009efe e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 879 ) )
009eff e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 879 ) )
                 	__POINTD1FN _0x2E0000,879
009f00 940e c1f5 	CALL SUBOPT_0x3
                 ; 0017 01A0 
                 ; 0017 01A1         }
                 _0x2E0061:
                 ; 0017 01A2         ch++;
                +
009f02 5f4f     +SUBI R20 , LOW ( - 1 )
009f03 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 01A3     }
                +
009f04 5f0f     +SUBI R16 , LOW ( - 1 )
009f05 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f06 cfe3      	RJMP _0x2E005E
                 _0x2E005F:
                 ; 0017 01A4 
                 ; 0017 01A5     printDebug("\r\n");
009f07 940e d9f4 	CALL SUBOPT_0x36E
                 ; 0017 01A6 
                 ; 0017 01A7 
                 ; 0017 01A8 return;
009f09 c0ee      	RJMP _0x20E002D
                 ; 0017 01A9 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 01AC {
                 _print_payload:
                 ; 0017 01AD 
                 ; 0017 01AE     int len_rem = len;
                 ; 0017 01AF     int line_width = 16;            // number of bytes per line //
                 ; 0017 01B0     int line_len;
                 ; 0017 01B1     int offset = 0;                    // zero-based offset counter //
                 ; 0017 01B2     const unsigned char *ch = payload;
                 ; 0017 01B3 
                 ; 0017 01B4     if (len <= 0)
009f0a 93ba      	ST   -Y,R27
009f0b 93aa      	ST   -Y,R26
009f0c 9724      	SBIW R28,4
009f0d e0e0      	LDI  R30,LOW(0)
009f0e 83ea      	STD  Y+2,R30
009f0f 83eb      	STD  Y+3,R30
009f10 940e e399 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
009f12 850a     +LDD R16 , Y + 10
009f13 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009f14 e120     +LDI R18 , LOW ( 16 )
009f15 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
009f16 85ec      	LDD  R30,Y+12
009f17 85fd      	LDD  R31,Y+12+1
009f18 83ee      	STD  Y+6,R30
009f19 83ff      	STD  Y+6+1,R31
009f1a 85aa      	LDD  R26,Y+10
009f1b 85bb      	LDD  R27,Y+10+1
009f1c 940e e381 	CALL __CPW02
009f1e f574      	BRGE _0x20E002E
                 ; 0017 01B5         return;
                 ; 0017 01B6 
                 ; 0017 01B7     // data fits on one line //
                 ; 0017 01B8     if (len <= line_width) {
009f1f 172a      	CP   R18,R26
009f20 073b      	CPC  R19,R27
009f21 f03c      	BRLT _0x2E0063
                 ; 0017 01B9         print_hex_ascii_line(ch, len, offset);
009f22 940e ca9b 	CALL SUBOPT_0x15B
009f24 940e cc8e 	CALL SUBOPT_0x1AE
009f26 940e da18 	CALL SUBOPT_0x374
                 ; 0017 01BA         return;
009f28 c024      	RJMP _0x20E002E
                 ; 0017 01BB     }
                 ; 0017 01BC     // data spans multiple lines //
                 ; 0017 01BD     for ( ;; ) {
                 _0x2E0063:
                 _0x2E0065:
                 ; 0017 01BE         // compute current line length //
                 ; 0017 01BF         line_len = line_width % len_rem;
009f29 01f8      	MOVW R30,R16
009f2a 01d9      	MOVW R26,R18
009f2b 940e e2b1 	CALL __MODW21
009f2d 01af      	MOVW R20,R30
                 ; 0017 01C0         // print line //
                 ; 0017 01C1         print_hex_ascii_line(ch, line_len, offset);
009f2e 940e ca9b 	CALL SUBOPT_0x15B
009f30 935a      	ST   -Y,R21
009f31 934a      	ST   -Y,R20
009f32 940e da18 	CALL SUBOPT_0x374
                 ; 0017 01C2         // compute total remaining //
                 ; 0017 01C3         len_rem = len_rem - line_len;
                +
009f34 1b04     +SUB R16 , R20
009f35 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01C4         // shift pointer to remaining bytes to print //
                 ; 0017 01C5         ch = ch + line_len;
009f36 01fa      	MOVW R30,R20
009f37 940e cc59 	CALL SUBOPT_0x1A5
009f39 83ee      	STD  Y+6,R30
009f3a 83ff      	STD  Y+6+1,R31
                 ; 0017 01C6         // add offset //
                 ; 0017 01C7         offset = offset + line_width;
009f3b 01f9      	MOVW R30,R18
009f3c 85a8      	LDD  R26,Y+8
009f3d 85b9      	LDD  R27,Y+8+1
009f3e 0fea      	ADD  R30,R26
009f3f 1ffb      	ADC  R31,R27
009f40 87e8      	STD  Y+8,R30
009f41 87f9      	STD  Y+8+1,R31
                 ; 0017 01C8         // check if we have line width chars or less //
                 ; 0017 01C9         if (len_rem <= line_width) {
                +
009f42 1720     +CP R18 , R16
009f43 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009f44 f03c      	BRLT _0x2E0067
                 ; 0017 01CA             // print last line and get out //
                 ; 0017 01CB             print_hex_ascii_line(ch, len_rem, offset);
009f45 940e ca9b 	CALL SUBOPT_0x15B
009f47 931a      	ST   -Y,R17
009f48 930a      	ST   -Y,R16
009f49 940e da18 	CALL SUBOPT_0x374
                 ; 0017 01CC             break;
009f4b c001      	RJMP _0x2E0066
                 ; 0017 01CD         }
                 ; 0017 01CE     }
                 _0x2E0067:
009f4c cfdc      	RJMP _0x2E0065
                 _0x2E0066:
                 ; 0017 01CF 
                 ; 0017 01D0     return;
                 _0x20E002E:
009f4d 940e e3a0 	CALL __LOADLOCR6
009f4f 962e      	ADIW R28,14
009f50 9508      	RET
                 ; 0017 01D1 }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
009f51 9726      	SBIW R28,6
009f52 940e c3de 	CALL SUBOPT_0x46
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
009f54 940e da1c 	CALL SUBOPT_0x375
009f56 170e      	CP   R16,R30
009f57 071f      	CPC  R17,R31
009f58 f014      	BRLT PC+3
009f59 940c 9ff8 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
009f5b 870a     +STD Y + 10 , R16
009f5c 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
009f5d 01f8      	MOVW R30,R16
009f5e 9631      	ADIW R30,1
009f5f 019f      	MOVW R18,R30
                 _0x300008:
009f60 940e da1c 	CALL SUBOPT_0x375
009f62 172e      	CP   R18,R30
009f63 073f      	CPC  R19,R31
009f64 f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
009f65 940e da21 	CALL SUBOPT_0x376
009f67 940e da27 	CALL SUBOPT_0x377
009f69 937f      	PUSH R23
009f6a 936f      	PUSH R22
009f6b 93ff      	PUSH R31
009f6c 93ef      	PUSH R30
009f6d 940e da2b 	CALL SUBOPT_0x378
009f6f 940e da27 	CALL SUBOPT_0x377
009f71 91af      	POP  R26
009f72 91bf      	POP  R27
009f73 918f      	POP  R24
009f74 919f      	POP  R25
009f75 940e e158 	CALL __CMPF12
009f77 f009      	BREQ PC+2
009f78 f410      	BRCC PC+3
009f79 940c 9f7d 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
009f7b 872a     +STD Y + 10 , R18
009f7c 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
009f7d 5f2f     +SUBI R18 , LOW ( - 1 )
009f7e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009f7f cfe0      	RJMP _0x300008
                 _0x300009:
                +
009f80 e020     +LDI R18 , LOW ( 0 )
009f81 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
009f82 940e da1c 	CALL SUBOPT_0x375
009f84 9631      	ADIW R30,1
009f85 172e      	CP   R18,R30
009f86 073f      	CPC  R19,R31
009f87 f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
009f88 940e da2b 	CALL SUBOPT_0x378
009f8a 940e da32 	CALL SUBOPT_0x379
009f8c 940e c6bb 	CALL SUBOPT_0xB6
                 ; 0018 0016             a[max][j] = a[i][j];
009f8e 940e da2b 	CALL SUBOPT_0x378
009f90 940e da36 	CALL SUBOPT_0x37A
009f92 010f      	MOVW R0,R30
009f93 940e da3d 	CALL SUBOPT_0x37B
009f95 940e da32 	CALL SUBOPT_0x379
009f97 01d0      	MOVW R26,R0
009f98 940e e2ff 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
009f9a 940e da3d 	CALL SUBOPT_0x37B
009f9c 940e da36 	CALL SUBOPT_0x37A
009f9e 940e d193 	CALL SUBOPT_0x260
                 ; 0018 0018         }
                +
009fa0 5f2f     +SUBI R18 , LOW ( - 1 )
009fa1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009fa2 cfdf      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
009fa3 9120 1a71+LDS R18 , 0 + ( _n )
009fa5 9130 1a72+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
009fa7 1720     +CP R18 , R16
009fa8 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009fa9 f414      	BRGE PC+3
009faa 940c 9ff5 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
009fac 01f8      	MOVW R30,R16
009fad 9631      	ADIW R30,1
009fae 01af      	MOVW R20,R30
                 _0x300012:
009faf 940e da1c 	CALL SUBOPT_0x375
009fb1 174e      	CP   R20,R30
009fb2 075f      	CPC  R21,R31
009fb3 f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
009fb4 01fa      	MOVW R30,R20
009fb5 940e e1c7 	CALL __LSLW4
009fb7 58ed      	SUBI R30,LOW(-_a)
009fb8 4ef5      	SBCI R31,HIGH(-_a)
009fb9 010f      	MOVW R0,R30
009fba 940e da36 	CALL SUBOPT_0x37A
009fbc 93ff      	PUSH R31
009fbd 93ef      	PUSH R30
009fbe 01df      	MOVW R26,R30
009fbf 940e e2f4 	CALL __GETD1P
009fc1 937f      	PUSH R23
009fc2 936f      	PUSH R22
009fc3 93ff      	PUSH R31
009fc4 93ef      	PUSH R30
009fc5 01d0      	MOVW R26,R0
009fc6 01f8      	MOVW R30,R16
009fc7 940e d200 	CALL SUBOPT_0x271
009fc9 937f      	PUSH R23
009fca 936f      	PUSH R22
009fcb 93ff      	PUSH R31
009fcc 93ef      	PUSH R30
009fcd 940e da3d 	CALL SUBOPT_0x37B
009fcf 940e da27 	CALL SUBOPT_0x377
009fd1 91af      	POP  R26
009fd2 91bf      	POP  R27
009fd3 918f      	POP  R24
009fd4 919f      	POP  R25
009fd5 940e e113 	CALL __DIVF21
009fd7 937f      	PUSH R23
009fd8 936f      	PUSH R22
009fd9 93ff      	PUSH R31
009fda 93ef      	PUSH R30
009fdb 940e da3d 	CALL SUBOPT_0x37B
009fdd 940e da32 	CALL SUBOPT_0x379
009fdf 91af      	POP  R26
009fe0 91bf      	POP  R27
009fe1 918f      	POP  R24
009fe2 919f      	POP  R25
009fe3 940e e0c5 	CALL __MULF12
009fe5 91af      	POP  R26
009fe6 91bf      	POP  R27
009fe7 918f      	POP  R24
009fe8 919f      	POP  R25
009fe9 940e cf85 	CALL SUBOPT_0x21A
009feb 91af      	POP  R26
009fec 91bf      	POP  R27
009fed 940e e2ff 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
009fef 5f4f     +SUBI R20 , LOW ( - 1 )
009ff0 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
009ff1 cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
009ff2 5021     +SUBI R18 , LOW ( 1 )
009ff3 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009ff4 cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
009ff5 5f0f     +SUBI R16 , LOW ( - 1 )
009ff6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009ff7 cf5c      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
                 _0x20E002D:
009ff8 940e e3a0 	CALL __LOADLOCR6
009ffa 962c      	ADIW R28,12
009ffb 9508      	RET
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
009ffc 940e e399 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
009ffe 940e da1c 	CALL SUBOPT_0x375
00a000 9731      	SBIW R30,1
00a001 018f      	MOVW R16,R30
                 _0x300015:
00a002 2311      	TST  R17
00a003 f412      	BRPL PC+3
00a004 940c a06f 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
00a006 940e da3d 	CALL SUBOPT_0x37B
00a008 940e da43 	CALL SUBOPT_0x37C
00a00a 93ff      	PUSH R31
00a00b 93ef      	PUSH R30
00a00c 940e da3d 	CALL SUBOPT_0x37B
00a00e 01df      	MOVW R26,R30
00a00f 940e da1c 	CALL SUBOPT_0x375
00a011 940e d200 	CALL SUBOPT_0x271
00a013 937f      	PUSH R23
00a014 936f      	PUSH R22
00a015 93ff      	PUSH R31
00a016 93ef      	PUSH R30
00a017 940e da3d 	CALL SUBOPT_0x37B
00a019 940e da27 	CALL SUBOPT_0x377
00a01b 91af      	POP  R26
00a01c 91bf      	POP  R27
00a01d 918f      	POP  R24
00a01e 919f      	POP  R25
00a01f 940e e113 	CALL __DIVF21
00a021 91af      	POP  R26
00a022 91bf      	POP  R27
00a023 940e e2ff 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
00a025 940e da3d 	CALL SUBOPT_0x37B
00a027 01df      	MOVW R26,R30
00a028 01f8      	MOVW R30,R16
00a029 940e d0ad 	CALL SUBOPT_0x242
00a02b 940e da4a 	CALL SUBOPT_0x37D
00a02d 940e e2ff 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
00a02f 01f8      	MOVW R30,R16
00a030 9731      	SBIW R30,1
00a031 019f      	MOVW R18,R30
                 _0x300018:
00a032 2333      	TST  R19
00a033 f1c2      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
00a034 940e da21 	CALL SUBOPT_0x376
00a036 010f      	MOVW R0,R30
00a037 940e da43 	CALL SUBOPT_0x37C
00a039 93ff      	PUSH R31
00a03a 93ef      	PUSH R30
00a03b 01df      	MOVW R26,R30
00a03c 940e e2f4 	CALL __GETD1P
00a03e 937f      	PUSH R23
00a03f 936f      	PUSH R22
00a040 93ff      	PUSH R31
00a041 93ef      	PUSH R30
00a042 01d0      	MOVW R26,R0
00a043 01f8      	MOVW R30,R16
00a044 940e d200 	CALL SUBOPT_0x271
00a046 937f      	PUSH R23
00a047 936f      	PUSH R22
00a048 93ff      	PUSH R31
00a049 93ef      	PUSH R30
00a04a 940e da3d 	CALL SUBOPT_0x37B
00a04c 01df      	MOVW R26,R30
00a04d 940e da1c 	CALL SUBOPT_0x375
00a04f 940e d200 	CALL SUBOPT_0x271
00a051 91af      	POP  R26
00a052 91bf      	POP  R27
00a053 918f      	POP  R24
00a054 919f      	POP  R25
00a055 940e e0c5 	CALL __MULF12
00a057 91af      	POP  R26
00a058 91bf      	POP  R27
00a059 918f      	POP  R24
00a05a 919f      	POP  R25
00a05b 940e cf85 	CALL SUBOPT_0x21A
00a05d 91af      	POP  R26
00a05e 91bf      	POP  R27
00a05f 940e e2ff 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
00a061 940e da21 	CALL SUBOPT_0x376
00a063 01df      	MOVW R26,R30
00a064 01f8      	MOVW R30,R16
00a065 940e d0ad 	CALL SUBOPT_0x242
00a067 940e c5b8 	CALL SUBOPT_0x8F
                 ; 0018 0045         }
                +
00a069 5021     +SUBI R18 , LOW ( 1 )
00a06a 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
00a06b cfc6      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
00a06c 5001     +SUBI R16 , LOW ( 1 )
00a06d 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00a06e cf93      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
00a06f 940e e3a0 	CALL __LOADLOCR6
00a071 9626      	ADIW R28,6
00a072 9508      	RET
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
00a073 940e c55a 	CALL SUBOPT_0x7F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
00a075 940e da4a 	CALL SUBOPT_0x37D
00a077 93e0 1a73 	STS  _a,R30
00a079 93f0 1a74 	STS  _a+1,R31
00a07b 9360 1a75 	STS  _a+2,R22
00a07d 9370 1a76 	STS  _a+3,R23
00a07f 940e c6d8 	CALL SUBOPT_0xBB
                +
00a081 93e0 1a77+STS _a + ( 4 ) , R30
00a083 93f0 1a78+STS _a + ( 4 ) + 1 , R31
00a085 9360 1a79+STS _a + ( 4 ) + 2 , R22
00a087 9370 1a7a+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
00a089 940e c6d8 	CALL SUBOPT_0xBB
00a08b 940e c6e2 	CALL SUBOPT_0xBD
00a08d 940e e0c5 	CALL __MULF12
                +
00a08f 93e0 1a7b+STS _a + ( 8 ) , R30
00a091 93f0 1a7c+STS _a + ( 8 ) + 1 , R31
00a093 9360 1a7d+STS _a + ( 8 ) + 2 , R22
00a095 9370 1a7e+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
00a097 940e c77e 	CALL SUBOPT_0xD4
                +
00a099 93e0 1a7f+STS _a + ( 12 ) , R30
00a09b 93f0 1a80+STS _a + ( 12 ) + 1 , R31
00a09d 9360 1a81+STS _a + ( 12 ) + 2 , R22
00a09f 9370 1a82+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
00a0a1 e8e3     +LDI R30 , LOW ( _a + ( 16 ) )
00a0a2 e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
00a0a3 940e da4f 	CALL SUBOPT_0x37E
00a0a5 940e c76f 	CALL SUBOPT_0xD1
                +
00a0a7 93e0 1a87+STS _a + ( 20 ) , R30
00a0a9 93f0 1a88+STS _a + ( 20 ) + 1 , R31
00a0ab 9360 1a89+STS _a + ( 20 ) + 2 , R22
00a0ad 9370 1a8a+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
00a0af 940e c76f 	CALL SUBOPT_0xD1
00a0b1 940e c6cb 	CALL SUBOPT_0xB9
00a0b3 940e e0c5 	CALL __MULF12
                +
00a0b5 93e0 1a8b+STS _a + ( 24 ) , R30
00a0b7 93f0 1a8c+STS _a + ( 24 ) + 1 , R31
00a0b9 9360 1a8d+STS _a + ( 24 ) + 2 , R22
00a0bb 9370 1a8e+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
00a0bd 940e c484 	CALL SUBOPT_0x60
                +
00a0bf 93e0 1a8f+STS _a + ( 28 ) , R30
00a0c1 93f0 1a90+STS _a + ( 28 ) + 1 , R31
00a0c3 9360 1a91+STS _a + ( 28 ) + 2 , R22
00a0c5 9370 1a92+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
00a0c7 e9e3     +LDI R30 , LOW ( _a + ( 32 ) )
00a0c8 e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
00a0c9 940e da4f 	CALL SUBOPT_0x37E
00a0cb 940e c6fd 	CALL SUBOPT_0xC2
                +
00a0cd 93e0 1a97+STS _a + ( 36 ) , R30
00a0cf 93f0 1a98+STS _a + ( 36 ) + 1 , R31
00a0d1 9360 1a99+STS _a + ( 36 ) + 2 , R22
00a0d3 9370 1a9a+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
00a0d5 940e c6fd 	CALL SUBOPT_0xC2
00a0d7 940e c774 	CALL SUBOPT_0xD2
00a0d9 940e e0c5 	CALL __MULF12
                +
00a0db 93e0 1a9b+STS _a + ( 40 ) , R30
00a0dd 93f0 1a9c+STS _a + ( 40 ) + 1 , R31
00a0df 9360 1a9d+STS _a + ( 40 ) + 2 , R22
00a0e1 9370 1a9e+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
00a0e3 940e c783 	CALL SUBOPT_0xD5
                +
00a0e5 93e0 1a9f+STS _a + ( 44 ) , R30
00a0e7 93f0 1aa0+STS _a + ( 44 ) + 1 , R31
00a0e9 9360 1aa1+STS _a + ( 44 ) + 2 , R22
00a0eb 9370 1aa2+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D /*  bongkot printDebug disable
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                 ; 0018 0060         printDebug("\t\t");
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
                 ; 0018 0063         printDebug("\r\n");
                 ; 0018 0064     }
                 ; 0018 0065 */
                 ; 0018 0066     forwardSubstitution();
00a0ed de63      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
00a0ee df0d      	RCALL _reverseElimination
                 ; 0018 0068 /*  bongkot printDebug disable
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                 ; 0018 006B         printDebug("\t\t");
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
                 ; 0018 006E         printDebug("\r\n");
                 ; 0018 006F     }
                 ; 0018 0070 */
                 ; 0018 0071     *resA = a[2][3];
                +
00a0ef 91e0 1a9f+LDS R30 , _a + ( 44 )
00a0f1 91f0 1aa0+LDS R31 , _a + ( 44 ) + 1
00a0f3 9160 1aa1+LDS R22 , _a + ( 44 ) + 2
00a0f5 9170 1aa2+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
00a0f7 85a8      	LDD  R26,Y+8
00a0f8 85b9      	LDD  R27,Y+8+1
00a0f9 940e e2ff 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
00a0fb 91e0 1a8f+LDS R30 , _a + ( 28 )
00a0fd 91f0 1a90+LDS R31 , _a + ( 28 ) + 1
00a0ff 9160 1a91+LDS R22 , _a + ( 28 ) + 2
00a101 9170 1a92+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
00a103 81ae      	LDD  R26,Y+6
00a104 81bf      	LDD  R27,Y+6+1
00a105 940e e2ff 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
00a107 91e0 1a7f+LDS R30 , _a + ( 12 )
00a109 91f0 1a80+LDS R31 , _a + ( 12 ) + 1
00a10b 9160 1a81+LDS R22 , _a + ( 12 ) + 2
00a10d 9170 1a82+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
00a10f 81ac      	LDD  R26,Y+4
00a110 81bd      	LDD  R27,Y+4+1
00a111 940e e2ff 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075 /*  bongkot printDebug disable  */
                 ; 0018 0076 //    printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                 ; 0018 0077 
                 ; 0018 0078     return;
00a113 940e e3a2 	CALL __LOADLOCR4
00a115 96a2      	ADIW R28,34
00a116 9508      	RET
                 ; 0018 0079 }
                 ;#include "smoothFilter.h"
                 ;
                 ;int indexWrite = 0;
                 ;int gItemSize = 0;
                 ;unsigned int * smoothBuffer;
                 ;iSmoothData_t iSmoothData;
                 ;
                 ;pviSmoothHandle_t pviSmoothSensorHandle;
                 ;
                 ;iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 ; 0019 000A iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 
                 	.CSEG
                 ; 0019 000B     int * ptrSmoothBuffer;
                 ; 0019 000C     iSmoothData_t iSmoothData;
                 ; 0019 000D     iSmoothData.status = 0;
                 ;	*pviSmoothHandle_p -> Y+12
                 ;	adcValue_p -> Y+10
                 ;	*ptrSmoothBuffer -> R16,R17
                 ;	iSmoothData -> Y+2
                 ; 0019 000E     if(indexWrite<gItemSize){
                 ; 0019 000F         iSmoothData.status = 0;
                 ; 0019 0010         ptrSmoothBuffer = pviSmoothHandle_p;
                 ; 0019 0011         *ptrSmoothBuffer = adcValue_p;
                 ; 0019 0012         indexWrite++;
                 ; 0019 0013     }else if(indexWrite==gItemSize){
                 ; 0019 0014        iSmoothData.status = 1;
                 ; 0019 0015        indexWrite = 0;
                 ; 0019 0016        gItemSize = 0;
                 ; 0019 0017        free(smoothBuffer);
                 ; 0019 0018     }
                 ; 0019 0019 
                 ; 0019 001A 
                 ; 0019 001B     return iSmoothData;
                 ; 0019 001C }
                 ;
                 ;pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001E pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001F    pviSmoothHandle_t  pviSmoothHandle;
                 ; 0019 0020    smoothBuffer = (int *)malloc(itemSize);
                 ;	itemSize -> Y+2
                 ;	*pviSmoothHandle -> R16,R17
                 ; 0019 0021    if(smoothBuffer!=NULL){
                 ; 0019 0022      pviSmoothHandle = smoothBuffer;
                 ; 0019 0023      gItemSize = itemSize;
                 ; 0019 0024    }else{
                 ; 0019 0025      return   pviSmoothHandle = (int *)0;
                 ; 0019 0026    }
                 ; 0019 0027    return  pviSmoothHandle;
                 ; 0019 0028 }
                 ;#include "ad595.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;
                 ;float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 ; 001A 0005 float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 
                 	.CSEG
                 _iAD595ADCToTemp:
                 ; 001A 0006      int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 0007      float  viADCToVolt = 0.0;
                 ; 001A 0008      //const float  viZeroSet   = 1.68;
                 ; 001A 0009      const float  viZeroSet   = 1.667;
                 ; 001A 000A      float viVoltUpLevel = 0.0;
                 ; 001A 000B      float ivTempValue = 0.0;
                 ; 001A 000C      float factorA = 0.0;
                 ; 001A 000D      float factorB = 0.0;
                 ; 001A 000E      float factorC = 0.0;
                 ; 001A 000F 
                 ; 001A 0010      /////////range 1 Temp C(-10 to -100)
                 ; 001A 0011      float viVoltPoint1_1 = -0.094;
                 ; 001A 0012      float viVoltPoint2_1 = -0.552;
                 ; 001A 0013      float viVoltPoint3_1 = -0.876;
                 ; 001A 0014      float viTempOutPoint1_1 = -10.0;
                 ; 001A 0015      float viTempOutPoint2_1 = -60.0;
                 ; 001A 0016      float viTempOutPoint3_1 = -100.0;
                 ; 001A 0017 
                 ; 001A 0018      /////////range 2 Temp C(-100 to -200)
                 ; 001A 0019      float viVoltPoint1_2 = -0.876;
                 ; 001A 001A      float viVoltPoint2_2 = -1.269;
                 ; 001A 001B      float viVoltPoint3_2 = -1.454;
                 ; 001A 001C      float viTempOutPoint1_2 = -100.0;
                 ; 001A 001D      float viTempOutPoint2_2 = -160.0;
                 ; 001A 001E      float viTempOutPoint3_2 = -200.0;
                 ; 001A 001F 
                 ; 001A 0020      const float viVoltPointTable[5][3]  = {
                 ; 001A 0021             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 0022             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 0023             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 0024             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 0025             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 0026      };
                 ; 001A 0027 
                 ; 001A 0028      const float viTempOutPointTable[5][3]  = {
                 ; 001A 0029             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 002A             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 002B             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 002C             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 002D             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 002E      };
                 ; 001A 002F 
                 ; 001A 0030      viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
00a117 93ba      	ST   -Y,R27
00a118 93aa      	ST   -Y,R26
00a119 940e da55 	CALL SUBOPT_0x37F
00a11b e3e0      	LDI  R30,LOW(_0x340003*2)
00a11c e6f8      	LDI  R31,HIGH(_0x340003*2)
00a11d e060      	LDI  R22,BYTE3(_0x340003*2)
00a11e 940e e3a7 	CALL __INITLOCB
00a120 931a      	ST   -Y,R17
00a121 930a      	ST   -Y,R16
                 ;	viADC_p -> Y+200
                 ;	viADCLoop_p -> Y+198
                 ;	viADCSmooth -> R16,R17
                 ;	viADCToVolt -> Y+194
                 ;	viZeroSet -> Y+190
                 ;	viVoltUpLevel -> Y+186
                 ;	ivTempValue -> Y+182
                 ;	factorA -> Y+178
                 ;	factorB -> Y+174
                 ;	factorC -> Y+170
                 ;	viVoltPoint1_1 -> Y+166
                 ;	viVoltPoint2_1 -> Y+162
                 ;	viVoltPoint3_1 -> Y+158
                 ;	viTempOutPoint1_1 -> Y+154
                 ;	viTempOutPoint2_1 -> Y+150
                 ;	viTempOutPoint3_1 -> Y+146
                 ;	viVoltPoint1_2 -> Y+142
                 ;	viVoltPoint2_2 -> Y+138
                 ;	viVoltPoint3_2 -> Y+134
                 ;	viTempOutPoint1_2 -> Y+130
                 ;	viTempOutPoint2_2 -> Y+126
                 ;	viTempOutPoint3_2 -> Y+122
                 ;	viVoltPointTable -> Y+62
                 ;	viTempOutPointTable -> Y+2
                +
00a122 01fe     +MOVW R30 , R28
00a123 53ea     +SUBI R30 , LOW ( - 198 )
00a124 4fff     +SBCI R31 , HIGH ( - 198 )
00a125 9001     +LD R0 , Z +
00a126 81f0     +LD R31 , Z
00a127 2de0     +MOV R30 , R0
                 	__GETW1SX 198
                +
00a128 01de     +MOVW R26 , R28
00a129 53a8     +SUBI R26 , LOW ( - 200 )
00a12a 4fbf     +SBCI R27 , HIGH ( - 200 )
00a12b 900d     +LD R0 , X +
00a12c 901d     +LD R1 , X +
00a12d 918d     +LD R24 , X +
00a12e 919c     +LD R25 , X
00a12f 01d0     +MOVW R26 , R0
                 	__GETD2SX 200
00a130 940e e201 	CALL __CWD1
00a132 940e e29d 	CALL __DIVD21
00a134 018f      	MOVW R16,R30
00a135 940e ceb5 	CALL SUBOPT_0x204
00a137 01df      	MOVW R26,R30
00a138 01cb      	MOVW R24,R22
00a139 940e da5d 	CALL SUBOPT_0x380
                +
00a13b 01de     +MOVW R26 , R28
00a13c 53ae     +SUBI R26 , LOW ( - 194 )
00a13d 4fbf     +SBCI R27 , HIGH ( - 194 )
00a13e 93ed     +ST X + , R30
00a13f 93fd     +ST X + , R31
00a140 936d     +ST X + , R22
00a141 937c     +ST X , R23
                 	__PUTD1SX 194
                 ; 001A 0031      viVoltUpLevel = viADCToVolt - viZeroSet;
00a142 940e d139 	CALL SUBOPT_0x255
                +
00a144 01de     +MOVW R26 , R28
00a145 54a6     +SUBI R26 , LOW ( - 186 )
00a146 4fbf     +SBCI R27 , HIGH ( - 186 )
00a147 93ed     +ST X + , R30
00a148 93fd     +ST X + , R31
00a149 936d     +ST X + , R22
00a14a 937c     +ST X , R23
                 	__PUTD1SX 186
                 ; 001A 0032 
                 ; 001A 0033 
                 ; 001A 0034 //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 0035 //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0036 //          printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0037 //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.876)) ){
                 ; 001A 0038 //
                 ; 001A 0039 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 003A //        gaussian(viVoltPoint1_1,  viVoltPoint2_1,  viVoltPoint3_1, viTempOutPoint1_1, viTempOutPoint2_1, viTempOutPoint3_1, &factorA, &factorB, &factorC);
                 ; 001A 003B //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 003C //
                 ; 001A 003D //         printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 003E //     }else if((viVoltUpLevel < (-0.876)) && (viVoltUpLevel >= (-1.454)) ){
                 ; 001A 003F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0040 //        gaussian(viVoltPoint1_2,  viVoltPoint2_2,  viVoltPoint3_2, viTempOutPoint1_2, viTempOutPoint2_2, viTempOutPoint3_2, &factorA, &factorB, &factorC);
                 ; 001A 0041 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0042 //
                 ; 001A 0043 //         printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0044 //     }else if(viVoltUpLevel < ((-1.454)+10.0)){
                 ; 001A 0045 //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0046 //         printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0047 //     }
                 ; 001A 0048 
                 ; 001A 0049 
                 ; 001A 004A //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 004B //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 004C //        //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 004D //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 ; 001A 004E //
                 ; 001A 004F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0050 //        gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
                 ; 001A 0051 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0052 //
                 ; 001A 0053 //        // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0054 //     }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 ; 001A 0055 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0056 //        gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                 ; 001A 0057 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0058 //
                 ; 001A 0059 //        // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 005A //     }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 ; 001A 005B //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 005C //        gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                 ; 001A 005D //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 005E //
                 ; 001A 005F //        // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0060 //     }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 ; 001A 0061 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0062 //        gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                 ; 001A 0063 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0064 //
                 ; 001A 0065 //        // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0066 //     }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.464)) ){        //-1.454 + 20.0   | 20 = +compencess
                 ; 001A 0067 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0068 //        gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                 ; 001A 0069 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 006A //
                 ; 001A 006B //         //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 006C //     }
                 ; 001A 006D //     else if(viVoltUpLevel < (-1.464)){
                 ; 001A 006E //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 006F //         //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0070 //     }
                 ; 001A 0071 //     //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0072 
                 ; 001A 0073 
                 ; 001A 0074      if(viVoltUpLevel >= (-0.094)){
00a14b 940e da6a 	CALL SUBOPT_0x381
00a14d f008      	BRLO _0x340004
                 ; 001A 0075           ivTempValue = (viVoltUpLevel*1000) / 10.0;
00a14e c118      	RJMP _0x340035
                 ; 001A 0076         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0077      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 _0x340004:
00a14f 940e da6a 	CALL SUBOPT_0x381
00a151 f428      	BRSH _0x340007
00a152 940e da79 	CALL SUBOPT_0x382
00a154 940e da82 	CALL SUBOPT_0x383
00a156 f408      	BRSH _0x340008
                 _0x340007:
00a157 c02d      	RJMP _0x340006
                 _0x340008:
                 ; 001A 0078 
                 ; 001A 0079         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 007A         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
00a158 940e da89 	CALL SUBOPT_0x384
                +
00a15a 01fe     +MOVW R30 , R28
00a15b 5bea     +SUBI R30 , LOW ( - 70 )
00a15c 4fff     +SBCI R31 , HIGH ( - 70 )
00a15d 9001     +LD R0 , Z +
00a15e 9011     +LD R1 , Z +
00a15f 9161     +LD R22 , Z +
00a160 8170     +LD R23 , Z
00a161 01f0     +MOVW R30 , R0
                 	__GETD1SX 70
00a162 940e e324 	CALL __PUTPARD1
                +
00a164 01fe     +MOVW R30 , R28
00a165 5be2     +SUBI R30 , LOW ( - 78 )
00a166 4fff     +SBCI R31 , HIGH ( - 78 )
00a167 9001     +LD R0 , Z +
00a168 9011     +LD R1 , Z +
00a169 9161     +LD R22 , Z +
00a16a 8170     +LD R23 , Z
00a16b 01f0     +MOVW R30 , R0
                 	__GETD1SX 78
00a16c 940e c417 	CALL SUBOPT_0x50
00a16e 940e c6fd 	CALL SUBOPT_0xC2
00a170 940e e324 	CALL __PUTPARD1
00a172 940e c6d8 	CALL SUBOPT_0xBB
00a174 940e da94 	CALL SUBOPT_0x385
                 ; 001A 007B         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a176 937f      	PUSH R23
00a177 936f      	PUSH R22
00a178 93ff      	PUSH R31
00a179 93ef      	PUSH R30
00a17a 940e dabb 	CALL SUBOPT_0x386
00a17c 940e dac4 	CALL SUBOPT_0x387
00a17e 91af      	POP  R26
00a17f 91bf      	POP  R27
00a180 918f      	POP  R24
00a181 919f      	POP  R25
00a182 940e dacf 	CALL SUBOPT_0x388
00a184 c0ee      	RJMP _0x340036
                 ; 001A 007C 
                 ; 001A 007D         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 007E      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 _0x340006:
00a185 940e da79 	CALL SUBOPT_0x382
00a187 940e da82 	CALL SUBOPT_0x383
00a189 f418      	BRSH _0x34000B
00a18a 940e dadc 	CALL SUBOPT_0x389
00a18c f408      	BRSH _0x34000C
                 _0x34000B:
00a18d c02c      	RJMP _0x34000A
                 _0x34000C:
                 ; 001A 007F         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0080         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                +
00a18e 01fe     +MOVW R30 , R28
00a18f 5be6     +SUBI R30 , LOW ( - 74 )
00a190 4fff     +SBCI R31 , HIGH ( - 74 )
00a191 9001     +LD R0 , Z +
00a192 9011     +LD R1 , Z +
00a193 9161     +LD R22 , Z +
00a194 8170     +LD R23 , Z
00a195 01f0     +MOVW R30 , R0
                 	__GETD1SX 74
00a196 940e dae4 	CALL SUBOPT_0x38A
00a198 9670      	ADIW R30,16
00a199 940e c528 	CALL SUBOPT_0x78
00a19b 01fe      	MOVW R30,R28
00a19c 5bea      	SUBI R30,LOW(-(70))
00a19d 4fff      	SBCI R31,HIGH(-(70))
00a19e 9674      	ADIW R30,20
00a19f 940e c528 	CALL SUBOPT_0x78
00a1a1 940e c76f 	CALL SUBOPT_0xD1
00a1a3 940e e324 	CALL __PUTPARD1
00a1a5 940e c702 	CALL SUBOPT_0xC3
00a1a7 940e e324 	CALL __PUTPARD1
00a1a9 940e cad0 	CALL SUBOPT_0x164
00a1ab 940e daea 	CALL SUBOPT_0x38B
                 ; 001A 0081         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a1ad 937f      	PUSH R23
00a1ae 936f      	PUSH R22
00a1af 93ff      	PUSH R31
00a1b0 93ef      	PUSH R30
00a1b1 940e db08 	CALL SUBOPT_0x38C
00a1b3 91af      	POP  R26
00a1b4 91bf      	POP  R27
00a1b5 918f      	POP  R24
00a1b6 919f      	POP  R25
00a1b7 940e dacf 	CALL SUBOPT_0x388
00a1b9 c0b9      	RJMP _0x340036
                 ; 001A 0082 
                 ; 001A 0083         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0084      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 _0x34000A:
00a1ba 940e dadc 	CALL SUBOPT_0x389
00a1bc f418      	BRSH _0x34000F
00a1bd 940e db0a 	CALL SUBOPT_0x38D
00a1bf f408      	BRSH _0x340010
                 _0x34000F:
00a1c0 c030      	RJMP _0x34000E
                 _0x340010:
                 ; 001A 0085         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0086         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                +
00a1c1 01fe     +MOVW R30 , R28
00a1c2 5aea     +SUBI R30 , LOW ( - 86 )
00a1c3 4fff     +SBCI R31 , HIGH ( - 86 )
00a1c4 9001     +LD R0 , Z +
00a1c5 9011     +LD R1 , Z +
00a1c6 9161     +LD R22 , Z +
00a1c7 8170     +LD R23 , Z
00a1c8 01f0     +MOVW R30 , R0
                 	__GETD1SX 86
00a1c9 940e dae4 	CALL SUBOPT_0x38A
00a1cb 967c      	ADIW R30,28
00a1cc 940e c528 	CALL SUBOPT_0x78
00a1ce 01fe      	MOVW R30,R28
00a1cf 5bea      	SUBI R30,LOW(-(70))
00a1d0 4fff      	SBCI R31,HIGH(-(70))
00a1d1 96b0      	ADIW R30,32
00a1d2 940e c528 	CALL SUBOPT_0x78
00a1d4 940e c6e7 	CALL SUBOPT_0xBE
00a1d6 940e e324 	CALL __PUTPARD1
                +
00a1d8 a5ee     +LDD R30 , Y + 46
00a1d9 a5ff     +LDD R31 , Y + 46 + 1
00a1da a968     +LDD R22 , Y + 46 + 2
00a1db a979     +LDD R23 , Y + 46 + 3
                 	__GETD1S 46
00a1dc 940e e324 	CALL __PUTPARD1
                +
00a1de a9ee     +LDD R30 , Y + 54
00a1df a9ff     +LDD R31 , Y + 54 + 1
00a1e0 ad68     +LDD R22 , Y + 54 + 2
00a1e1 ad79     +LDD R23 , Y + 54 + 3
                 	__GETD1S 54
00a1e2 940e da94 	CALL SUBOPT_0x385
                 ; 001A 0087         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a1e4 937f      	PUSH R23
00a1e5 936f      	PUSH R22
00a1e6 93ff      	PUSH R31
00a1e7 93ef      	PUSH R30
00a1e8 940e db08 	CALL SUBOPT_0x38C
00a1ea 91af      	POP  R26
00a1eb 91bf      	POP  R27
00a1ec 918f      	POP  R24
00a1ed 919f      	POP  R25
00a1ee 940e dacf 	CALL SUBOPT_0x388
00a1f0 c082      	RJMP _0x340036
                 ; 001A 0088 
                 ; 001A 0089         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 008A      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 _0x34000E:
00a1f1 940e db0a 	CALL SUBOPT_0x38D
00a1f3 f418      	BRSH _0x340013
00a1f4 940e db12 	CALL SUBOPT_0x38E
00a1f6 f408      	BRSH _0x340014
                 _0x340013:
00a1f7 c033      	RJMP _0x340012
                 _0x340014:
                 ; 001A 008B         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 008C         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                +
00a1f8 01fe     +MOVW R30 , R28
00a1f9 59ee     +SUBI R30 , LOW ( - 98 )
00a1fa 4fff     +SBCI R31 , HIGH ( - 98 )
00a1fb 9001     +LD R0 , Z +
00a1fc 9011     +LD R1 , Z +
00a1fd 9161     +LD R22 , Z +
00a1fe 8170     +LD R23 , Z
00a1ff 01f0     +MOVW R30 , R0
                 	__GETD1SX 98
00a200 940e dae4 	CALL SUBOPT_0x38A
00a202 96b8      	ADIW R30,40
00a203 940e c528 	CALL SUBOPT_0x78
00a205 01fe      	MOVW R30,R28
00a206 5bea      	SUBI R30,LOW(-(70))
00a207 4fff      	SBCI R31,HIGH(-(70))
00a208 96bc      	ADIW R30,44
00a209 940e c528 	CALL SUBOPT_0x78
                +
00a20b a9ea     +LDD R30 , Y + 50
00a20c a9fb     +LDD R31 , Y + 50 + 1
00a20d a96c     +LDD R22 , Y + 50 + 2
00a20e a97d     +LDD R23 , Y + 50 + 3
                 	__GETD1S 50
00a20f 940e e324 	CALL __PUTPARD1
                +
00a211 adea     +LDD R30 , Y + 58
00a212 adfb     +LDD R31 , Y + 58 + 1
00a213 ad6c     +LDD R22 , Y + 58 + 2
00a214 ad7d     +LDD R23 , Y + 58 + 3
                 	__GETD1S 58
00a215 940e e324 	CALL __PUTPARD1
00a217 01fe      	MOVW R30,R28
00a218 96fa      	ADIW R30,58
00a219 9638      	ADIW R30,8
00a21a 940e c528 	CALL SUBOPT_0x78
00a21c 940e daea 	CALL SUBOPT_0x38B
                 ; 001A 008D         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a21e 937f      	PUSH R23
00a21f 936f      	PUSH R22
00a220 93ff      	PUSH R31
00a221 93ef      	PUSH R30
00a222 940e db08 	CALL SUBOPT_0x38C
00a224 91af      	POP  R26
00a225 91bf      	POP  R27
00a226 918f      	POP  R24
00a227 919f      	POP  R25
00a228 940e dacf 	CALL SUBOPT_0x388
00a22a c048      	RJMP _0x340036
                 ; 001A 008E 
                 ; 001A 008F         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0090      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 _0x340012:
00a22b 940e db12 	CALL SUBOPT_0x38E
00a22d f428      	BRSH _0x340017
00a22e 940e da79 	CALL SUBOPT_0x382
00a230 940e cef1 	CALL SUBOPT_0x20B
00a232 f408      	BRSH _0x340018
                 _0x340017:
00a233 c02e      	RJMP _0x340016
                 _0x340018:
                 ; 001A 0091         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0092         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                +
00a234 01fe     +MOVW R30 , R28
00a235 59e2     +SUBI R30 , LOW ( - 110 )
00a236 4fff     +SBCI R31 , HIGH ( - 110 )
00a237 9001     +LD R0 , Z +
00a238 9011     +LD R1 , Z +
00a239 9161     +LD R22 , Z +
00a23a 8170     +LD R23 , Z
00a23b 01f0     +MOVW R30 , R0
                 	__GETD1SX 110
00a23c 940e dae4 	CALL SUBOPT_0x38A
00a23e 96f4      	ADIW R30,52
00a23f 940e c528 	CALL SUBOPT_0x78
00a241 01fe      	MOVW R30,R28
00a242 5bea      	SUBI R30,LOW(-(70))
00a243 4fff      	SBCI R31,HIGH(-(70))
00a244 96f8      	ADIW R30,56
00a245 940e c528 	CALL SUBOPT_0x78
00a247 940e da89 	CALL SUBOPT_0x384
00a249 01fe      	MOVW R30,R28
00a24a 9672      	ADIW R30,18
00a24b 96f4      	ADIW R30,52
00a24c 940e c528 	CALL SUBOPT_0x78
00a24e 01fe      	MOVW R30,R28
00a24f 9676      	ADIW R30,22
00a250 96f8      	ADIW R30,56
00a251 940e c528 	CALL SUBOPT_0x78
00a253 940e daea 	CALL SUBOPT_0x38B
                 ; 001A 0093         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a255 937f      	PUSH R23
00a256 936f      	PUSH R22
00a257 93ff      	PUSH R31
00a258 93ef      	PUSH R30
00a259 940e db08 	CALL SUBOPT_0x38C
00a25b 91af      	POP  R26
00a25c 91bf      	POP  R27
00a25d 918f      	POP  R24
00a25e 919f      	POP  R25
00a25f 940e dacf 	CALL SUBOPT_0x388
00a261 c011      	RJMP _0x340036
                 ; 001A 0094 
                 ; 001A 0095          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0096      }
                 ; 001A 0097      else if(viVoltUpLevel < (-1.504)){
                 _0x340016:
00a262 940e da79 	CALL SUBOPT_0x382
00a264 940e cef1 	CALL SUBOPT_0x20B
00a266 f498      	BRSH _0x34001A
                 ; 001A 0098         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 _0x340035:
                +
00a267 01de     +MOVW R26 , R28
00a268 54a6     +SUBI R26 , LOW ( - 186 )
00a269 4fbf     +SBCI R27 , HIGH ( - 186 )
00a26a 900d     +LD R0 , X +
00a26b 901d     +LD R1 , X +
00a26c 918d     +LD R24 , X +
00a26d 919c     +LD R25 , X
00a26e 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
00a26f 940e db1a 	CALL SUBOPT_0x38F
00a271 940e e113 	CALL __DIVF21
                 _0x340036:
                +
00a273 01de     +MOVW R26 , R28
00a274 54aa     +SUBI R26 , LOW ( - 182 )
00a275 4fbf     +SBCI R27 , HIGH ( - 182 )
00a276 93ed     +ST X + , R30
00a277 93fd     +ST X + , R31
00a278 936d     +ST X + , R22
00a279 937c     +ST X , R23
                 	__PUTD1SX 182
                 ; 001A 0099          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 009A      }
                 ; 001A 009B      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 009C      return ivTempValue;
                 _0x34001A:
                +
00a27a 01fe     +MOVW R30 , R28
00a27b 54ea     +SUBI R30 , LOW ( - 182 )
00a27c 4fff     +SBCI R31 , HIGH ( - 182 )
00a27d 9001     +LD R0 , Z +
00a27e 9011     +LD R1 , Z +
00a27f 9161     +LD R22 , Z +
00a280 8170     +LD R23 , Z
00a281 01f0     +MOVW R30 , R0
                 	__GETD1SX 182
00a282 8119      	LDD  R17,Y+1
00a283 8108      	LDD  R16,Y+0
00a284 96ef      	ADIW R28,63
00a285 96ef      	ADIW R28,63
00a286 96ef      	ADIW R28,63
00a287 962f      	ADIW R28,15
00a288 9508      	RET
                 ; 001A 009D }
                 ;
                 ;float iAD595ADCToVolt(unsigned long viADC_p,float viADCLoop_p){            //Volt Uplevel
                 ; 001A 009F float iAD595ADCToVolt(unsigned long viADC_p,float viADCLoop_p){
                 _iAD595ADCToVolt:
                 ; 001A 00A0      float    viADCSmooth =  (float)(viADC_p/viADCLoop_p);           //(float)(viADCbuffer/30.0);
                 ; 001A 00A1      float  viADCToVolt = 0.0;
                 ; 001A 00A2      //const float  viZeroSet   = 1.68;
                 ; 001A 00A3      const float  viZeroSet   = 1.667;
                 ; 001A 00A4      float viVoltUpLevel = 0.0;
                 ; 001A 00A5      float ivVoltValue = 0.0;
                 ; 001A 00A6 
                 ; 001A 00A7      viADCToVolt = (float)((viADCSmooth/1024.0)*3.30);      //    - 0  +
00a289 940e e329 	CALL __PUTPARD2
00a28b 9764      	SBIW R28,20
00a28c e180      	LDI  R24,16
00a28d e0a0      	LDI  R26,LOW(0)
00a28e e0b0      	LDI  R27,HIGH(0)
00a28f efe4      	LDI  R30,LOW(_0x34001B*2)
00a290 e6f8      	LDI  R31,HIGH(_0x34001B*2)
00a291 e060      	LDI  R22,BYTE3(_0x34001B*2)
00a292 940e e3a7 	CALL __INITLOCB
                 ;	viADC_p -> Y+24
                 ;	viADCLoop_p -> Y+20
                 ;	viADCSmooth -> Y+16
                 ;	viADCToVolt -> Y+12
                 ;	viZeroSet -> Y+8
                 ;	viVoltUpLevel -> Y+4
                 ;	ivVoltValue -> Y+0
00a294 940e c7a6 	CALL SUBOPT_0xDC
00a296 940e d013 	CALL SUBOPT_0x22B
00a298 940e e336 	CALL __CDF2U
00a29a 940e e113 	CALL __DIVF21
00a29c 940e db21 	CALL SUBOPT_0x390
00a29e 940e da5d 	CALL SUBOPT_0x380
00a2a0 940e c80f 	CALL SUBOPT_0xEC
                 ; 001A 00A8      viVoltUpLevel = viADCToVolt;
00a2a2 940e c692 	CALL SUBOPT_0xAE
                 ; 001A 00A9      //viVoltUpLevel = viADCToVolt - viZeroSet;
                 ; 001A 00AA 
                 ; 001A 00AB 
                 ; 001A 00AC      return viVoltUpLevel;
00a2a4 966c      	ADIW R28,28
00a2a5 9508      	RET
                 ; 001A 00AD }
                 ;
                 ;float iAD595ADCToVoltage(float viADC_arg){
                 ; 001A 00AF float iAD595ADCToVoltage(float viADC_arg){
                 ; 001A 00B0      float    viADCSmooth =  viADC_arg;
                 ; 001A 00B1      float  viADCToVolt = 0.0;
                 ; 001A 00B2      const float  viZeroSet = 1.667;
                 ; 001A 00B3      const float  viOffset = 0.213;
                 ; 001A 00B4      float viVoltUpLevel = 0.0;
                 ; 001A 00B5      float ivVoltValue = 0.0;
                 ; 001A 00B6 
                 ; 001A 00B7      viADCToVolt = (float)((viADCSmooth/1024.0)*3.30);    //      - 0  +
                 ;	viADC_arg -> Y+24
                 ;	viADCSmooth -> Y+20
                 ;	viADCToVolt -> Y+16
                 ;	viZeroSet -> Y+12
                 ;	viOffset -> Y+8
                 ;	viVoltUpLevel -> Y+4
                 ;	ivVoltValue -> Y+0
                 ; 001A 00B8      viVoltUpLevel = (viADCToVolt+viOffset) - viZeroSet;
                 ; 001A 00B9 
                 ; 001A 00BA      return viVoltUpLevel;
                 ; 001A 00BB }
                 ;
                 ;float iAD595VoltToTemp(float viVolt_arg){
                 ; 001A 00BD float iAD595VoltToTemp(float viVolt_arg){
                 _iAD595VoltToTemp:
                 ; 001A 00BE      //int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 00BF      float  viADCToVolt = 0.0;
                 ; 001A 00C0      //const float  viZeroSet   = 1.68;
                 ; 001A 00C1      const float  viZeroSet   = 1.667;
                 ; 001A 00C2      float viVoltUpLevel = 0.0;
                 ; 001A 00C3      float ivTempValue = 0.0;
                 ; 001A 00C4      float factorA = 0.0;
                 ; 001A 00C5      float factorB = 0.0;
                 ; 001A 00C6      float factorC = 0.0;
                 ; 001A 00C7 
                 ; 001A 00C8      /////////range 1 Temp C(-10 to -100)
                 ; 001A 00C9      float viVoltPoint1_1 = -0.094;
                 ; 001A 00CA      float viVoltPoint2_1 = -0.552;
                 ; 001A 00CB      float viVoltPoint3_1 = -0.876;
                 ; 001A 00CC      float viTempOutPoint1_1 = -10.0;
                 ; 001A 00CD      float viTempOutPoint2_1 = -60.0;
                 ; 001A 00CE      float viTempOutPoint3_1 = -100.0;
                 ; 001A 00CF 
                 ; 001A 00D0      /////////range 2 Temp C(-100 to -200)
                 ; 001A 00D1      float viVoltPoint1_2 = -0.876;
                 ; 001A 00D2      float viVoltPoint2_2 = -1.269;
                 ; 001A 00D3      float viVoltPoint3_2 = -1.454;
                 ; 001A 00D4      float viTempOutPoint1_2 = -100.0;
                 ; 001A 00D5      float viTempOutPoint2_2 = -160.0;
                 ; 001A 00D6      float viTempOutPoint3_2 = -200.0;
                 ; 001A 00D7 
                 ; 001A 00D8      const float viVoltPointTable[5][3]  = {
                 ; 001A 00D9             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 00DA             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 00DB             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 00DC             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 00DD             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 00DE      };
                 ; 001A 00DF 
                 ; 001A 00E0      const float viTempOutPointTable[5][3]  = {
                 ; 001A 00E1             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 00E2             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 00E3             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 00E4             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 00E5             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 00E6      };
                 ; 001A 00E7 
                 ; 001A 00E8      //viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
                 ; 001A 00E9      viVoltUpLevel = viVolt_arg;
00a2a6 940e e329 	CALL __PUTPARD2
00a2a8 940e da55 	CALL SUBOPT_0x37F
00a2aa e1e8      	LDI  R30,LOW(_0x34001D*2)
00a2ab e6f9      	LDI  R31,HIGH(_0x34001D*2)
00a2ac e060      	LDI  R22,BYTE3(_0x34001D*2)
00a2ad 940e e3a7 	CALL __INITLOCB
                 ;	viVolt_arg -> Y+196
                 ;	viADCToVolt -> Y+192
                 ;	viZeroSet -> Y+188
                 ;	viVoltUpLevel -> Y+184
                 ;	ivTempValue -> Y+180
                 ;	factorA -> Y+176
                 ;	factorB -> Y+172
                 ;	factorC -> Y+168
                 ;	viVoltPoint1_1 -> Y+164
                 ;	viVoltPoint2_1 -> Y+160
                 ;	viVoltPoint3_1 -> Y+156
                 ;	viTempOutPoint1_1 -> Y+152
                 ;	viTempOutPoint2_1 -> Y+148
                 ;	viTempOutPoint3_1 -> Y+144
                 ;	viVoltPoint1_2 -> Y+140
                 ;	viVoltPoint2_2 -> Y+136
                 ;	viVoltPoint3_2 -> Y+132
                 ;	viTempOutPoint1_2 -> Y+128
                 ;	viTempOutPoint2_2 -> Y+124
                 ;	viTempOutPoint3_2 -> Y+120
                 ;	viVoltPointTable -> Y+60
                 ;	viTempOutPointTable -> Y+0
                +
00a2af 01fe     +MOVW R30 , R28
00a2b0 53ec     +SUBI R30 , LOW ( - 196 )
00a2b1 4fff     +SBCI R31 , HIGH ( - 196 )
00a2b2 9001     +LD R0 , Z +
00a2b3 9011     +LD R1 , Z +
00a2b4 9161     +LD R22 , Z +
00a2b5 8170     +LD R23 , Z
00a2b6 01f0     +MOVW R30 , R0
                 	__GETD1SX 196
                +
00a2b7 01de     +MOVW R26 , R28
00a2b8 54a8     +SUBI R26 , LOW ( - 184 )
00a2b9 4fbf     +SBCI R27 , HIGH ( - 184 )
00a2ba 93ed     +ST X + , R30
00a2bb 93fd     +ST X + , R31
00a2bc 936d     +ST X + , R22
00a2bd 937c     +ST X , R23
                 	__PUTD1SX 184
                 ; 001A 00EA 
                 ; 001A 00EB 
                 ; 001A 00EC      if(viVoltUpLevel >= (-0.094)){
00a2be 940e db24 	CALL SUBOPT_0x391
00a2c0 f008      	BRLO _0x34001E
                 ; 001A 00ED           ivTempValue = (viVoltUpLevel*1000) / 10.0;
00a2c1 c106      	RJMP _0x340037
                 ; 001A 00EE         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00EF      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 _0x34001E:
00a2c2 940e db24 	CALL SUBOPT_0x391
00a2c4 f428      	BRSH _0x340021
00a2c5 940e db33 	CALL SUBOPT_0x392
00a2c7 940e da82 	CALL SUBOPT_0x383
00a2c9 f408      	BRSH _0x340022
                 _0x340021:
00a2ca c023      	RJMP _0x340020
                 _0x340022:
                 ; 001A 00F0 
                 ; 001A 00F1         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00F2         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
00a2cb 940e d00c 	CALL SUBOPT_0x22A
                +
00a2cd 01fe     +MOVW R30 , R28
00a2ce 5bec     +SUBI R30 , LOW ( - 68 )
00a2cf 4fff     +SBCI R31 , HIGH ( - 68 )
00a2d0 9001     +LD R0 , Z +
00a2d1 9011     +LD R1 , Z +
00a2d2 9161     +LD R22 , Z +
00a2d3 8170     +LD R23 , Z
00a2d4 01f0     +MOVW R30 , R0
                 	__GETD1SX 68
00a2d5 940e cf97 	CALL SUBOPT_0x21D
00a2d7 940e c5ae 	CALL SUBOPT_0x8D
00a2d9 940e cf8a 	CALL SUBOPT_0x21B
00a2db 940e d9b0 	CALL SUBOPT_0x364
00a2dd 940e db3c 	CALL SUBOPT_0x393
                 ; 001A 00F3         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a2df 937f      	PUSH R23
00a2e0 936f      	PUSH R22
00a2e1 93ff      	PUSH R31
00a2e2 93ef      	PUSH R30
00a2e3 940e db63 	CALL SUBOPT_0x394
00a2e5 940e db6c 	CALL SUBOPT_0x395
00a2e7 91af      	POP  R26
00a2e8 91bf      	POP  R27
00a2e9 918f      	POP  R24
00a2ea 919f      	POP  R25
00a2eb 940e db77 	CALL SUBOPT_0x396
00a2ed c0e6      	RJMP _0x340038
                 ; 001A 00F4 
                 ; 001A 00F5         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00F6      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 _0x340020:
00a2ee 940e db33 	CALL SUBOPT_0x392
00a2f0 940e da82 	CALL SUBOPT_0x383
00a2f2 f418      	BRSH _0x340025
00a2f3 940e db84 	CALL SUBOPT_0x397
00a2f5 f408      	BRSH _0x340026
                 _0x340025:
00a2f6 c026      	RJMP _0x340024
                 _0x340026:
                 ; 001A 00F7         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00F8         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                +
00a2f7 01fe     +MOVW R30 , R28
00a2f8 5be8     +SUBI R30 , LOW ( - 72 )
00a2f9 4fff     +SBCI R31 , HIGH ( - 72 )
00a2fa 9001     +LD R0 , Z +
00a2fb 9011     +LD R1 , Z +
00a2fc 9161     +LD R22 , Z +
00a2fd 8170     +LD R23 , Z
00a2fe 01f0     +MOVW R30 , R0
                 	__GETD1SX 72
00a2ff 940e db8c 	CALL SUBOPT_0x398
00a301 9670      	ADIW R30,16
00a302 940e c528 	CALL SUBOPT_0x78
00a304 01fe      	MOVW R30,R28
00a305 5bec      	SUBI R30,LOW(-(68))
00a306 4fff      	SBCI R31,HIGH(-(68))
00a307 9674      	ADIW R30,20
00a308 940e c528 	CALL SUBOPT_0x78
00a30a 940e c828 	CALL SUBOPT_0xF2
00a30c 940e c82c 	CALL SUBOPT_0xF3
00a30e 940e db92 	CALL SUBOPT_0x399
                 ; 001A 00F9         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a310 937f      	PUSH R23
00a311 936f      	PUSH R22
00a312 93ff      	PUSH R31
00a313 93ef      	PUSH R30
00a314 940e dbb0 	CALL SUBOPT_0x39A
00a316 91af      	POP  R26
00a317 91bf      	POP  R27
00a318 918f      	POP  R24
00a319 919f      	POP  R25
00a31a 940e db77 	CALL SUBOPT_0x396
00a31c c0b7      	RJMP _0x340038
                 ; 001A 00FA 
                 ; 001A 00FB         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00FC      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 _0x340024:
00a31d 940e db84 	CALL SUBOPT_0x397
00a31f f418      	BRSH _0x340029
00a320 940e dbb2 	CALL SUBOPT_0x39B
00a322 f408      	BRSH _0x34002A
                 _0x340029:
00a323 c032      	RJMP _0x340028
                 _0x34002A:
                 ; 001A 00FD         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00FE         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                +
00a324 01fe     +MOVW R30 , R28
00a325 5aec     +SUBI R30 , LOW ( - 84 )
00a326 4fff     +SBCI R31 , HIGH ( - 84 )
00a327 9001     +LD R0 , Z +
00a328 9011     +LD R1 , Z +
00a329 9161     +LD R22 , Z +
00a32a 8170     +LD R23 , Z
00a32b 01f0     +MOVW R30 , R0
                 	__GETD1SX 84
00a32c 940e db8c 	CALL SUBOPT_0x398
00a32e 967c      	ADIW R30,28
00a32f 940e c528 	CALL SUBOPT_0x78
00a331 01fe      	MOVW R30,R28
00a332 5bec      	SUBI R30,LOW(-(68))
00a333 4fff      	SBCI R31,HIGH(-(68))
00a334 96b0      	ADIW R30,32
00a335 940e c528 	CALL SUBOPT_0x78
                +
00a337 a1ec     +LDD R30 , Y + 36
00a338 a1fd     +LDD R31 , Y + 36 + 1
00a339 a16e     +LDD R22 , Y + 36 + 2
00a33a a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
00a33b 940e e324 	CALL __PUTPARD1
                +
00a33d a5ec     +LDD R30 , Y + 44
00a33e a5fd     +LDD R31 , Y + 44 + 1
00a33f a56e     +LDD R22 , Y + 44 + 2
00a340 a57f     +LDD R23 , Y + 44 + 3
                 	__GETD1S 44
00a341 940e e324 	CALL __PUTPARD1
                +
00a343 a9ec     +LDD R30 , Y + 52
00a344 a9fd     +LDD R31 , Y + 52 + 1
00a345 a96e     +LDD R22 , Y + 52 + 2
00a346 a97f     +LDD R23 , Y + 52 + 3
                 	__GETD1S 52
00a347 940e db3c 	CALL SUBOPT_0x393
                 ; 001A 00FF         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a349 937f      	PUSH R23
00a34a 936f      	PUSH R22
00a34b 93ff      	PUSH R31
00a34c 93ef      	PUSH R30
00a34d 940e dbb0 	CALL SUBOPT_0x39A
00a34f 91af      	POP  R26
00a350 91bf      	POP  R27
00a351 918f      	POP  R24
00a352 919f      	POP  R25
00a353 940e db77 	CALL SUBOPT_0x396
00a355 c07e      	RJMP _0x340038
                 ; 001A 0100 
                 ; 001A 0101         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0102      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 _0x340028:
00a356 940e dbb2 	CALL SUBOPT_0x39B
00a358 f418      	BRSH _0x34002D
00a359 940e dbba 	CALL SUBOPT_0x39C
00a35b f408      	BRSH _0x34002E
                 _0x34002D:
00a35c c02f      	RJMP _0x34002C
                 _0x34002E:
                 ; 001A 0103         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0104         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                +
00a35d 01fe     +MOVW R30 , R28
00a35e 5ae0     +SUBI R30 , LOW ( - 96 )
00a35f 4fff     +SBCI R31 , HIGH ( - 96 )
00a360 9001     +LD R0 , Z +
00a361 9011     +LD R1 , Z +
00a362 9161     +LD R22 , Z +
00a363 8170     +LD R23 , Z
00a364 01f0     +MOVW R30 , R0
                 	__GETD1SX 96
00a365 940e db8c 	CALL SUBOPT_0x398
00a367 96b8      	ADIW R30,40
00a368 940e c528 	CALL SUBOPT_0x78
00a36a 01fe      	MOVW R30,R28
00a36b 5bec      	SUBI R30,LOW(-(68))
00a36c 4fff      	SBCI R31,HIGH(-(68))
00a36d 96bc      	ADIW R30,44
00a36e 940e c528 	CALL SUBOPT_0x78
00a370 940e c839 	CALL SUBOPT_0xF4
                +
00a372 ade8     +LDD R30 , Y + 56
00a373 adf9     +LDD R31 , Y + 56 + 1
00a374 ad6a     +LDD R22 , Y + 56 + 2
00a375 ad7b     +LDD R23 , Y + 56 + 3
                 	__GETD1S 56
00a376 940e e324 	CALL __PUTPARD1
00a378 01fe      	MOVW R30,R28
00a379 96f8      	ADIW R30,56
00a37a 9638      	ADIW R30,8
00a37b 940e c528 	CALL SUBOPT_0x78
00a37d 940e db92 	CALL SUBOPT_0x399
                 ; 001A 0105         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a37f 937f      	PUSH R23
00a380 936f      	PUSH R22
00a381 93ff      	PUSH R31
00a382 93ef      	PUSH R30
00a383 940e dbb0 	CALL SUBOPT_0x39A
00a385 91af      	POP  R26
00a386 91bf      	POP  R27
00a387 918f      	POP  R24
00a388 919f      	POP  R25
00a389 940e db77 	CALL SUBOPT_0x396
00a38b c048      	RJMP _0x340038
                 ; 001A 0106 
                 ; 001A 0107         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0108      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 _0x34002C:
00a38c 940e dbba 	CALL SUBOPT_0x39C
00a38e f428      	BRSH _0x340031
00a38f 940e db33 	CALL SUBOPT_0x392
00a391 940e cef1 	CALL SUBOPT_0x20B
00a393 f408      	BRSH _0x340032
                 _0x340031:
00a394 c02e      	RJMP _0x340030
                 _0x340032:
                 ; 001A 0109         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 010A         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                +
00a395 01fe     +MOVW R30 , R28
00a396 59e4     +SUBI R30 , LOW ( - 108 )
00a397 4fff     +SBCI R31 , HIGH ( - 108 )
00a398 9001     +LD R0 , Z +
00a399 9011     +LD R1 , Z +
00a39a 9161     +LD R22 , Z +
00a39b 8170     +LD R23 , Z
00a39c 01f0     +MOVW R30 , R0
                 	__GETD1SX 108
00a39d 940e db8c 	CALL SUBOPT_0x398
00a39f 96f4      	ADIW R30,52
00a3a0 940e c528 	CALL SUBOPT_0x78
00a3a2 01fe      	MOVW R30,R28
00a3a3 5bec      	SUBI R30,LOW(-(68))
00a3a4 4fff      	SBCI R31,HIGH(-(68))
00a3a5 96f8      	ADIW R30,56
00a3a6 940e c528 	CALL SUBOPT_0x78
00a3a8 940e d00c 	CALL SUBOPT_0x22A
00a3aa 01fe      	MOVW R30,R28
00a3ab 9670      	ADIW R30,16
00a3ac 96f4      	ADIW R30,52
00a3ad 940e c528 	CALL SUBOPT_0x78
00a3af 01fe      	MOVW R30,R28
00a3b0 9674      	ADIW R30,20
00a3b1 96f8      	ADIW R30,56
00a3b2 940e c528 	CALL SUBOPT_0x78
00a3b4 940e db92 	CALL SUBOPT_0x399
                 ; 001A 010B         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a3b6 937f      	PUSH R23
00a3b7 936f      	PUSH R22
00a3b8 93ff      	PUSH R31
00a3b9 93ef      	PUSH R30
00a3ba 940e dbb0 	CALL SUBOPT_0x39A
00a3bc 91af      	POP  R26
00a3bd 91bf      	POP  R27
00a3be 918f      	POP  R24
00a3bf 919f      	POP  R25
00a3c0 940e db77 	CALL SUBOPT_0x396
00a3c2 c011      	RJMP _0x340038
                 ; 001A 010C 
                 ; 001A 010D          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 010E      }
                 ; 001A 010F      else if(viVoltUpLevel < (-1.504)){
                 _0x340030:
00a3c3 940e db33 	CALL SUBOPT_0x392
00a3c5 940e cef1 	CALL SUBOPT_0x20B
00a3c7 f498      	BRSH _0x340034
                 ; 001A 0110         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 _0x340037:
                +
00a3c8 01de     +MOVW R26 , R28
00a3c9 54a8     +SUBI R26 , LOW ( - 184 )
00a3ca 4fbf     +SBCI R27 , HIGH ( - 184 )
00a3cb 900d     +LD R0 , X +
00a3cc 901d     +LD R1 , X +
00a3cd 918d     +LD R24 , X +
00a3ce 919c     +LD R25 , X
00a3cf 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
00a3d0 940e db1a 	CALL SUBOPT_0x38F
00a3d2 940e e113 	CALL __DIVF21
                 _0x340038:
                +
00a3d4 01de     +MOVW R26 , R28
00a3d5 54ac     +SUBI R26 , LOW ( - 180 )
00a3d6 4fbf     +SBCI R27 , HIGH ( - 180 )
00a3d7 93ed     +ST X + , R30
00a3d8 93fd     +ST X + , R31
00a3d9 936d     +ST X + , R22
00a3da 937c     +ST X , R23
                 	__PUTD1SX 180
                 ; 001A 0111          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0112      }
                 ; 001A 0113      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0114      return ivTempValue;
                 _0x340034:
                +
00a3db 01fe     +MOVW R30 , R28
00a3dc 54ec     +SUBI R30 , LOW ( - 180 )
00a3dd 4fff     +SBCI R31 , HIGH ( - 180 )
00a3de 9001     +LD R0 , Z +
00a3df 9011     +LD R1 , Z +
00a3e0 9161     +LD R22 , Z +
00a3e1 8170     +LD R23 , Z
00a3e2 01f0     +MOVW R30 , R0
                 	__GETD1SX 180
00a3e3 96ef      	ADIW R28,63
00a3e4 96ef      	ADIW R28,63
00a3e5 96ef      	ADIW R28,63
00a3e6 962b      	ADIW R28,11
00a3e7 9508      	RET
                 ; 001A 0115 }
                 ;#include <stdlib.h>
                 ;#include "gaussianAD595.h"
                 ;#include "debug.h"
                 ;
                 
                 	.CSEG
                 _fabs:
00a3e8 940e e329 	CALL __PUTPARD2
00a3ea 91e9          ld   r30,y+
00a3eb 91f9          ld   r31,y+
00a3ec 9169          ld   r22,y+
00a3ed 9179          ld   r23,y+
00a3ee 777f          cbr  r23,0x80
00a3ef 9508          ret
                 _atoi:
00a3f0 93ba      	ST   -Y,R27
00a3f1 93aa      	ST   -Y,R26
00a3f2 81b9         	ldd  r27,y+1
00a3f3 81a8         	ld   r26,y
                 __atoi0:
00a3f4 91ec         	ld   r30,x
00a3f5 2f8a              mov  r24,r26
00a3f6 2fae      	MOV  R26,R30
00a3f7 940e c177 	CALL _isspace
00a3f9 2fa8              mov  r26,r24
00a3fa 23ee         	tst  r30
00a3fb f011         	breq __atoi1
00a3fc 9611         	adiw r26,1
00a3fd cff6         	rjmp __atoi0
                 __atoi1:
00a3fe 94e8         	clt
00a3ff 91ec         	ld   r30,x
00a400 32ed         	cpi  r30,'-'
00a401 f411         	brne __atoi2
00a402 9468         	set
00a403 c002         	rjmp __atoi3
                 __atoi2:
00a404 32eb         	cpi  r30,'+'
00a405 f409         	brne __atoi4
                 __atoi3:
00a406 9611         	adiw r26,1
                 __atoi4:
00a407 2766         	clr  r22
00a408 2777         	clr  r23
                 __atoi5:
00a409 91ec         	ld   r30,x
00a40a 2f8a              mov  r24,r26
00a40b 2fae      	MOV  R26,R30
00a40c 940e c165 	CALL _isdigit
00a40e 2fa8              mov  r26,r24
00a40f 23ee         	tst  r30
00a410 f079         	breq __atoi6
00a411 01fb         	movw r30,r22
00a412 0f66         	lsl  r22
00a413 1f77         	rol  r23
00a414 0f66         	lsl  r22
00a415 1f77         	rol  r23
00a416 0f6e         	add  r22,r30
00a417 1f7f         	adc  r23,r31
00a418 0f66         	lsl  r22
00a419 1f77         	rol  r23
00a41a 91ed         	ld   r30,x+
00a41b 27ff         	clr  r31
00a41c 53e0         	subi r30,'0'
00a41d 0f6e         	add  r22,r30
00a41e 1f7f         	adc  r23,r31
00a41f cfe9         	rjmp __atoi5
                 __atoi6:
00a420 01fb         	movw r30,r22
00a421 f41e         	brtc __atoi7
00a422 95e0         	com  r30
00a423 95f0         	com  r31
00a424 9631         	adiw r30,1
                 __atoi7:
00a425 9622         	adiw r28,2
00a426 9508         	ret
                 _atol:
00a427 93ba      	ST   -Y,R27
00a428 93aa      	ST   -Y,R26
00a429 81b9          ldd  r27,y+1
00a42a 81a8          ld   r26,y
                 __atol0:
00a42b 91ec          ld   r30,x
00a42c 93af          push r26
00a42d 2fae      	MOV  R26,R30
00a42e 940e c177 	CALL _isspace
00a430 91af          pop  r26
00a431 23ee          tst  r30
00a432 f011          breq __atol1
00a433 9611          adiw r26,1
00a434 cff6          rjmp __atol0
                 __atol1:
00a435 94e8          clt
00a436 91ec          ld   r30,x
00a437 32ed          cpi  r30,'-'
00a438 f411          brne __atol2
00a439 9468          set
00a43a c002          rjmp __atol3
                 __atol2:
00a43b 32eb          cpi  r30,'+'
00a43c f409          brne __atol4
                 __atol3:
00a43d 9611          adiw r26,1
                 __atol4:
00a43e 2400          clr  r0
00a43f 2411          clr  r1
00a440 2788          clr  r24
00a441 2799          clr  r25
                 __atol5:
00a442 91ec          ld   r30,x
00a443 93af          push r26
00a444 2fae      	MOV  R26,R30
00a445 940e c165 	CALL _isdigit
00a447 91af          pop  r26
00a448 23ee          tst  r30
00a449 f089          breq __atol6
00a44a 01f0          movw r30,r0
00a44b 01bc          movw r22,r24
00a44c d01b          rcall __atol8
00a44d d01a          rcall __atol8
00a44e 0e0e          add  r0,r30
00a44f 1e1f          adc  r1,r31
00a450 1f86          adc  r24,r22
00a451 1f97          adc  r25,r23
00a452 d015          rcall __atol8
00a453 91ed          ld   r30,x+
00a454 27ff          clr  r31
00a455 53e0          subi r30,'0'
00a456 0e0e          add  r0,r30
00a457 1e1f          adc  r1,r31
00a458 1f8f          adc  r24,r31
00a459 1f9f          adc  r25,r31
00a45a cfe7          rjmp __atol5
                 __atol6:
00a45b 01f0          movw r30,r0
00a45c 01bc          movw r22,r24
00a45d f446          brtc __atol7
00a45e 95e0          com  r30
00a45f 95f0          com  r31
00a460 9560          com  r22
00a461 9570          com  r23
00a462 2788          clr  r24
00a463 9631          adiw r30,1
00a464 1f68          adc  r22,r24
00a465 1f78          adc  r23,r24
                 __atol7:
00a466 9622          adiw r28,2
00a467 9508          ret
                 
                 __atol8:
00a468 0c00          lsl  r0
00a469 1c11          rol  r1
00a46a 1f88          rol  r24
00a46b 1f99          rol  r25
00a46c 9508          ret
                 _ftoa:
00a46d 93ba      	ST   -Y,R27
00a46e 93aa      	ST   -Y,R26
00a46f 9724      	SBIW R28,4
00a470 940e cec7 	CALL SUBOPT_0x207
00a472 e3ef      	LDI  R30,LOW(63)
00a473 83eb      	STD  Y+3,R30
00a474 931a      	ST   -Y,R17
00a475 930a      	ST   -Y,R16
00a476 85eb      	LDD  R30,Y+11
00a477 85fc      	LDD  R31,Y+11+1
00a478 3fef      	CPI  R30,LOW(0xFFFF)
00a479 efaf      	LDI  R26,HIGH(0xFFFF)
00a47a 07fa      	CPC  R31,R26
00a47b f449      	BRNE _0x200000D
00a47c 940e ca9b 	CALL SUBOPT_0x15B
                +
00a47e edae     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00a47f e6b9     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
00a480 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
00a481 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
00a482 940e a773 	CALL _strcpyf
00a484 c0a1      	RJMP _0x20E002C
                 _0x200000D:
00a485 3fef      	CPI  R30,LOW(0x7FFF)
00a486 e7af      	LDI  R26,HIGH(0x7FFF)
00a487 07fa      	CPC  R31,R26
00a488 f449      	BRNE _0x200000C
00a489 940e ca9b 	CALL SUBOPT_0x15B
                +
00a48b edaf     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00a48c e6b9     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
00a48d e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
00a48e e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
00a48f 940e a773 	CALL _strcpyf
00a491 c094      	RJMP _0x20E002C
                 _0x200000C:
00a492 85ac      	LDD  R26,Y+12
00a493 23aa      	TST  R26
00a494 f452      	BRPL _0x200000F
00a495 940e c4cb 	CALL SUBOPT_0x6B
00a497 940e dfcf 	CALL __ANEGF1
00a499 940e dbc2 	CALL SUBOPT_0x39D
00a49b 940e dbc7 	CALL SUBOPT_0x39E
00a49d e2ed      	LDI  R30,LOW(45)
00a49e 93ec      	ST   X,R30
                 _0x200000F:
00a49f 85a8      	LDD  R26,Y+8
00a4a0 30a7      	CPI  R26,LOW(0x7)
00a4a1 f010      	BRLO _0x2000010
00a4a2 e0e6      	LDI  R30,LOW(6)
00a4a3 87e8      	STD  Y+8,R30
                 _0x2000010:
00a4a4 8518      	LDD  R17,Y+8
                 _0x2000011:
00a4a5 2fe1      	MOV  R30,R17
00a4a6 5011      	SUBI R17,1
00a4a7 30e0      	CPI  R30,0
00a4a8 f029      	BREQ _0x2000013
00a4a9 940e dbce 	CALL SUBOPT_0x39F
00a4ab 940e c6a7 	CALL SUBOPT_0xB2
00a4ad cff7      	RJMP _0x2000011
                 _0x2000013:
00a4ae 940e dbd7 	CALL SUBOPT_0x3A0
00a4b0 940e e075 	CALL __ADDF12
00a4b2 940e dbc2 	CALL SUBOPT_0x39D
00a4b4 e010      	LDI  R17,LOW(0)
00a4b5 940e da4a 	CALL SUBOPT_0x37D
00a4b7 940e c6a7 	CALL SUBOPT_0xB2
                 _0x2000014:
00a4b9 940e dbd7 	CALL SUBOPT_0x3A0
00a4bb 940e e158 	CALL __CMPF12
00a4bd f098      	BRLO _0x2000016
00a4be 940e c6b1 	CALL SUBOPT_0xB4
00a4c0 940e dbde 	CALL SUBOPT_0x3A1
00a4c2 940e c6a7 	CALL SUBOPT_0xB2
00a4c4 5f1f      	SUBI R17,-LOW(1)
00a4c5 3217      	CPI  R17,39
00a4c6 f048      	BRLO _0x2000017
00a4c7 940e ca9b 	CALL SUBOPT_0x15B
                +
00a4c9 eea3     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
00a4ca e6b9     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
00a4cb e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
00a4cc e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
00a4cd 940e a773 	CALL _strcpyf
00a4cf c056      	RJMP _0x20E002C
                 _0x2000017:
00a4d0 cfe8      	RJMP _0x2000014
                 _0x2000016:
00a4d1 3010      	CPI  R17,0
00a4d2 f429      	BRNE _0x2000018
00a4d3 940e dbc7 	CALL SUBOPT_0x39E
00a4d5 e3e0      	LDI  R30,LOW(48)
00a4d6 93ec      	ST   X,R30
00a4d7 c026      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
00a4d8 2fe1      	MOV  R30,R17
00a4d9 5011      	SUBI R17,1
00a4da 30e0      	CPI  R30,0
00a4db f111      	BREQ _0x200001C
00a4dc 940e dbce 	CALL SUBOPT_0x39F
00a4de 940e dbe3 	CALL SUBOPT_0x3A2
00a4e0 01df      	MOVW R26,R30
00a4e1 01cb      	MOVW R24,R22
00a4e2 940e c1ca 	CALL _floor
00a4e4 940e c821 	CALL SUBOPT_0xF0
00a4e6 940e dbe8 	CALL SUBOPT_0x3A3
00a4e8 940e e113 	CALL __DIVF21
00a4ea 940e e002 	CALL __CFD1U
00a4ec 2f0e      	MOV  R16,R30
00a4ed 940e dbc7 	CALL SUBOPT_0x39E
00a4ef 940e dbed 	CALL SUBOPT_0x3A4
00a4f1 940e c6b1 	CALL SUBOPT_0xB4
00a4f3 940e dbf3 	CALL SUBOPT_0x3A5
00a4f5 940e e0c5 	CALL __MULF12
00a4f7 940e dbe8 	CALL SUBOPT_0x3A3
00a4f9 940e cf85 	CALL SUBOPT_0x21A
00a4fb 940e dbc2 	CALL SUBOPT_0x39D
00a4fd cfda      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00a4fe 85e8      	LDD  R30,Y+8
00a4ff 30e0      	CPI  R30,0
00a500 f109      	BREQ _0x20E002B
00a501 940e dbc7 	CALL SUBOPT_0x39E
00a503 e2ee      	LDI  R30,LOW(46)
00a504 93ec      	ST   X,R30
                 _0x200001E:
00a505 85e8      	LDD  R30,Y+8
00a506 50e1      	SUBI R30,LOW(1)
00a507 87e8      	STD  Y+8,R30
00a508 5fef      	SUBI R30,-LOW(1)
00a509 f0c1      	BREQ _0x2000020
00a50a 940e dbe8 	CALL SUBOPT_0x3A3
00a50c 940e dbde 	CALL SUBOPT_0x3A1
00a50e 940e dbc2 	CALL SUBOPT_0x39D
00a510 940e c4cb 	CALL SUBOPT_0x6B
00a512 940e e002 	CALL __CFD1U
00a514 2f0e      	MOV  R16,R30
00a515 940e dbc7 	CALL SUBOPT_0x39E
00a517 940e dbed 	CALL SUBOPT_0x3A4
00a519 940e dbe8 	CALL SUBOPT_0x3A3
00a51b 940e dbf3 	CALL SUBOPT_0x3A5
00a51d 940e cf85 	CALL SUBOPT_0x21A
00a51f 940e dbc2 	CALL SUBOPT_0x39D
00a521 cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002B:
00a522 81ae      	LDD  R26,Y+6
00a523 81bf      	LDD  R27,Y+6+1
00a524 e0e0      	LDI  R30,LOW(0)
00a525 93ec      	ST   X,R30
                 _0x20E002C:
00a526 8119      	LDD  R17,Y+1
00a527 8108      	LDD  R16,Y+0
00a528 962d      	ADIW R28,13
00a529 9508      	RET
                 _atof:
00a52a 93ba      	ST   -Y,R27
00a52b 93aa      	ST   -Y,R26
00a52c 972a      	SBIW R28,10
00a52d 940e e399 	CALL __SAVELOCR6
00a52f e0e0      	LDI  R30,LOW(0)
                +
00a530 87e8     +STD Y + 8 , R30
00a531 87e9     +STD Y + 8 + 1 , R30
00a532 87ea     +STD Y + 8 + 2 , R30
00a533 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
00a534 89a8      	LDD  R26,Y+16
00a535 89b9      	LDD  R27,Y+16+1
00a536 91ec      	LD   R30,X
00a537 2f5e      	MOV  R21,R30
00a538 2fae      	MOV  R26,R30
00a539 940e c177 	CALL _isspace
00a53b 30e0      	CPI  R30,0
00a53c f019      	BREQ _0x200003E
00a53d 940e dbf8 	CALL SUBOPT_0x3A6
00a53f cff4      	RJMP _0x200003C
                 _0x200003E:
00a540 e0e0      	LDI  R30,LOW(0)
00a541 83ef      	STD  Y+7,R30
00a542 325b      	CPI  R21,43
00a543 f021      	BREQ _0x2000073
00a544 325d      	CPI  R21,45
00a545 f439      	BRNE _0x2000041
00a546 e0e1      	LDI  R30,LOW(1)
00a547 83ef      	STD  Y+7,R30
                 _0x2000073:
00a548 89e8      	LDD  R30,Y+16
00a549 89f9      	LDD  R31,Y+16+1
00a54a 9631      	ADIW R30,1
00a54b 8be8      	STD  Y+16,R30
00a54c 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
00a54d e0e0      	LDI  R30,LOW(0)
00a54e 2f4e      	MOV  R20,R30
00a54f 2f5e      	MOV  R21,R30
                +
00a550 8908     +LDD R16 , Y + 16
00a551 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
00a552 89a8      	LDD  R26,Y+16
00a553 89b9      	LDD  R27,Y+16+1
00a554 940e d9dc 	CALL SUBOPT_0x36B
00a556 f449      	BRNE _0x2000045
00a557 89a8      	LDD  R26,Y+16
00a558 89b9      	LDD  R27,Y+16+1
00a559 91ac      	LD   R26,X
00a55a e2ee      	LDI  R30,LOW(46)
00a55b 940e e20b 	CALL __EQB12
00a55d 2f5e      	MOV  R21,R30
00a55e 30e0      	CPI  R30,0
00a55f f021      	BREQ _0x2000044
                 _0x2000045:
00a560 2b45      	OR   R20,R21
00a561 940e dbf8 	CALL SUBOPT_0x3A6
00a563 cfee      	RJMP _0x2000042
                 _0x2000044:
                +
00a564 8928     +LDD R18 , Y + 16
00a565 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
00a566 3040      	CPI  R20,0
00a567 f0e9      	BREQ _0x2000047
00a568 89e8      	LDD  R30,Y+16
00a569 89f9      	LDD  R31,Y+16+1
00a56a 9731      	SBIW R30,1
00a56b 8be8      	STD  Y+16,R30
00a56c 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
00a56d 89a8      	LDD  R26,Y+16
00a56e 89b9      	LDD  R27,Y+16+1
00a56f 91ac      	LD   R26,X
00a570 32ae      	CPI  R26,LOW(0x2E)
00a571 f099      	BREQ _0x200004A
00a572 89a8      	LDD  R26,Y+16
00a573 89b9      	LDD  R27,Y+16+1
00a574 940e d98a 	CALL SUBOPT_0x35C
00a576 97f0      	SBIW R30,48
00a577 940e c78f 	CALL SUBOPT_0xD8
00a579 940e dbf3 	CALL SUBOPT_0x3A5
00a57b 940e c63f 	CALL SUBOPT_0xA0
00a57d 940e d9a1 	CALL SUBOPT_0x361
00a57f 89e8      	LDD  R30,Y+16
00a580 89f9      	LDD  R31,Y+16+1
00a581 9731      	SBIW R30,1
00a582 8be8      	STD  Y+16,R30
00a583 8bf9      	STD  Y+16+1,R31
00a584 cfe8      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00a585 940e da4a 	CALL SUBOPT_0x37D
00a587 940e c805 	CALL SUBOPT_0xEA
                 _0x200004B:
00a589 89a8      	LDD  R26,Y+16
00a58a 89b9      	LDD  R27,Y+16+1
00a58b 9711      	SBIW R26,1
00a58c 8ba8      	STD  Y+16,R26
00a58d 8bb9      	STD  Y+16+1,R27
00a58e 17a0      	CP   R26,R16
00a58f 07b1      	CPC  R27,R17
00a590 f0a0      	BRLO _0x200004D
00a591 940e d98a 	CALL SUBOPT_0x35C
00a593 97f0      	SBIW R30,48
00a594 940e c23b 	CALL SUBOPT_0xB
00a596 940e dbf3 	CALL SUBOPT_0x3A5
00a598 940e e0c5 	CALL __MULF12
00a59a 940e c78f 	CALL SUBOPT_0xD8
00a59c 940e e075 	CALL __ADDF12
00a59e 940e d9a1 	CALL SUBOPT_0x361
00a5a0 940e dbfe 	CALL SUBOPT_0x3A7
00a5a2 940e c805 	CALL SUBOPT_0xEA
00a5a4 cfe4      	RJMP _0x200004B
                 _0x200004D:
00a5a5 01d9      	MOVW R26,R18
                +
00a5a6 5f2f     +SUBI R18 , LOW ( - 1 )
00a5a7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a5a8 915c      	LD   R21,X
00a5a9 3655      	CPI  R21,101
00a5aa f019      	BREQ _0x200004F
00a5ab 3455      	CPI  R21,69
00a5ac f009      	BREQ _0x200004F
00a5ad c057      	RJMP _0x200004E
                 _0x200004F:
00a5ae e0e0      	LDI  R30,LOW(0)
00a5af 2f4e      	MOV  R20,R30
00a5b0 83ee      	STD  Y+6,R30
00a5b1 01d9      	MOVW R26,R18
00a5b2 915c      	LD   R21,X
00a5b3 325b      	CPI  R21,43
00a5b4 f021      	BREQ _0x2000074
00a5b5 325d      	CPI  R21,45
00a5b6 f421      	BRNE _0x2000053
00a5b7 e0e1      	LDI  R30,LOW(1)
00a5b8 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
00a5b9 5f2f     +SUBI R18 , LOW ( - 1 )
00a5ba 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
00a5bb 01d9      	MOVW R26,R18
                +
00a5bc 5f2f     +SUBI R18 , LOW ( - 1 )
00a5bd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a5be 91ec      	LD   R30,X
00a5bf 2f5e      	MOV  R21,R30
00a5c0 2fae      	MOV  R26,R30
00a5c1 940e c165 	CALL _isdigit
00a5c3 30e0      	CPI  R30,0
00a5c4 f039      	BREQ _0x2000056
00a5c5 e0aa      	LDI  R26,LOW(10)
00a5c6 024a      	MULS R20,R26
00a5c7 01f0      	MOVW R30,R0
00a5c8 0fe5      	ADD  R30,R21
00a5c9 53e0      	SUBI R30,LOW(48)
00a5ca 2f4e      	MOV  R20,R30
00a5cb cfef      	RJMP _0x2000054
                 _0x2000056:
00a5cc 3247      	CPI  R20,39
00a5cd f068      	BRLO _0x2000057
00a5ce 81ef      	LDD  R30,Y+7
00a5cf 30e0      	CPI  R30,0
00a5d0 f029      	BREQ _0x2000058
                +
00a5d1 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00a5d2 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
00a5d3 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
00a5d4 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
00a5d5 c03a      	RJMP _0x20E002A
                 _0x2000058:
                +
00a5d6 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
00a5d7 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
00a5d8 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
00a5d9 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
00a5da c035      	RJMP _0x20E002A
                 _0x2000057:
00a5db e250      	LDI  R21,LOW(32)
00a5dc 940e da4a 	CALL SUBOPT_0x37D
00a5de 940e c805 	CALL SUBOPT_0xEA
                 _0x2000059:
00a5e0 3050      	CPI  R21,0
00a5e1 f079      	BREQ _0x200005B
00a5e2 940e c794 	CALL SUBOPT_0xD9
00a5e4 940e c23b 	CALL SUBOPT_0xB
00a5e6 940e dc01 	CALL SUBOPT_0x3A8
00a5e8 2fe4      	MOV  R30,R20
00a5e9 23e5      	AND  R30,R21
00a5ea f021      	BREQ _0x200005C
00a5eb 940e dbfe 	CALL SUBOPT_0x3A7
00a5ed 940e c805 	CALL SUBOPT_0xEA
                 _0x200005C:
00a5ef 9556      	LSR  R21
00a5f0 cfef      	RJMP _0x2000059
                 _0x200005B:
00a5f1 81ee      	LDD  R30,Y+6
00a5f2 30e0      	CPI  R30,0
00a5f3 f039      	BREQ _0x200005D
00a5f4 940e c794 	CALL SUBOPT_0xD9
00a5f6 940e c78f 	CALL SUBOPT_0xD8
00a5f8 940e e113 	CALL __DIVF21
00a5fa c006      	RJMP _0x2000075
                 _0x200005D:
00a5fb 940e c794 	CALL SUBOPT_0xD9
00a5fd 940e c78f 	CALL SUBOPT_0xD8
00a5ff 940e e0c5 	CALL __MULF12
                 _0x2000075:
                +
00a601 87e8     +STD Y + 8 , R30
00a602 87f9     +STD Y + 8 + 1 , R31
00a603 876a     +STD Y + 8 + 2 , R22
00a604 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
00a605 81ef      	LDD  R30,Y+7
00a606 30e0      	CPI  R30,0
00a607 f031      	BREQ _0x200005F
00a608 940e c412 	CALL SUBOPT_0x4F
00a60a 940e dfcf 	CALL __ANEGF1
00a60c 940e d9a1 	CALL SUBOPT_0x361
                 _0x200005F:
00a60e 940e c412 	CALL SUBOPT_0x4F
                 _0x20E002A:
00a610 940e e3a0 	CALL __LOADLOCR6
00a612 9662      	ADIW R28,18
00a613 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
00a614 940e c5ef 	CALL SUBOPT_0x95
00a616 940e e201 	CALL __CWD1
00a618 940e dc05 	CALL SUBOPT_0x3A9
00a61a c0d7      	RJMP _0x20E0027
                 _rand:
00a61b 91e0 1aa9 	LDS  R30,__seed_G100
00a61d 91f0 1aaa 	LDS  R31,__seed_G100+1
00a61f 9160 1aab 	LDS  R22,__seed_G100+2
00a621 9170 1aac 	LDS  R23,__seed_G100+3
                +
00a623 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00a624 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
00a625 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
00a626 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
00a627 940e e222 	CALL __MULD12U
                +
00a629 59ee     +SUBI R30 , LOW ( - 30562 )
00a62a 48f8     +SBCI R31 , HIGH ( - 30562 )
00a62b 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
00a62c 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
00a62d 940e dc05 	CALL SUBOPT_0x3A9
00a62f 01fb      	movw r30,r22
00a630 77ff      	andi r31,0x7F
00a631 9508      	RET
                 _allocate_block_G100:
00a632 940e d8a3 	CALL SUBOPT_0x345
                +
00a634 e80a     +LDI R16 , LOW ( 7562 )
00a635 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
00a636 01d8      	MOVW R26,R16
00a637 940e c8ed 	CALL SUBOPT_0x113
                 _0x2000061:
00a639 2e00      	MOV  R0,R16
00a63a 2a01      	OR   R0,R17
00a63b f199      	BREQ _0x2000063
00a63c 01d8      	MOVW R26,R16
00a63d 940e e2f0 	CALL __GETW1P
00a63f 0fe0      	ADD  R30,R16
00a640 1ff1      	ADC  R31,R17
00a641 9634      	ADIW R30,4
00a642 01af      	MOVW R20,R30
00a643 9612      	ADIW R26,2
00a644 940e e2f0 	CALL __GETW1P
00a646 019f      	MOVW R18,R30
00a647 9730      	SBIW R30,0
00a648 f019      	BREQ _0x2000064
                +
00a649 832e     +STD Y + 6 , R18
00a64a 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
00a64b c004      	RJMP _0x2000065
                 _0x2000064:
00a64c e0e0      	LDI  R30,LOW(8704)
00a64d e2f2      	LDI  R31,HIGH(8704)
00a64e 83ee      	STD  Y+6,R30
00a64f 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00a650 81ae      	LDD  R26,Y+6
00a651 81bf      	LDD  R27,Y+6+1
00a652 1ba4      	SUB  R26,R20
00a653 0bb5      	SBC  R27,R21
00a654 85e8      	LDD  R30,Y+8
00a655 85f9      	LDD  R31,Y+8+1
00a656 9634      	ADIW R30,4
00a657 17ae      	CP   R26,R30
00a658 07bf      	CPC  R27,R31
00a659 f098      	BRLO _0x2000066
00a65a 01fa      	MOVW R30,R20
                +
00a65b 01d8     +MOVW R26 , R16
00a65c 9612     +ADIW R26 , 2
00a65d 93ed     +ST X + , R30
00a65e 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00a65f 01f9      	MOVW R30,R18
                +
00a660 01da     +MOVW R26 , R20
00a661 9612     +ADIW R26 , 2
00a662 93ed     +ST X + , R30
00a663 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
00a664 85e8      	LDD  R30,Y+8
00a665 85f9      	LDD  R31,Y+8+1
00a666 01da      	MOVW R26,R20
00a667 93ed      	ST   X+,R30
00a668 93fc      	ST   X,R31
                +
00a669 5f4c     +SUBI R20 , LOW ( - 4 )
00a66a 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
00a66b 01fa      	MOVW R30,R20
00a66c c004      	RJMP _0x20E0029
                 _0x2000066:
00a66d 0189      	MOVW R16,R18
00a66e cfca      	RJMP _0x2000061
                 _0x2000063:
00a66f e0e0      	LDI  R30,LOW(0)
00a670 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0029:
00a671 940e e3a0 	CALL __LOADLOCR6
00a673 962a      	ADIW R28,10
00a674 9508      	RET
                 _find_prev_block_G100:
00a675 940e c55a 	CALL SUBOPT_0x7F
                +
00a677 e80a     +LDI R16 , LOW ( 7562 )
00a678 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
00a679 2e00      	MOV  R0,R16
00a67a 2a01      	OR   R0,R17
00a67b f079      	BREQ _0x2000069
00a67c 01d8      	MOVW R26,R16
00a67d 9612      	ADIW R26,2
00a67e 940e e2f0 	CALL __GETW1P
00a680 019f      	MOVW R18,R30
00a681 01df      	MOVW R26,R30
00a682 81ec      	LDD  R30,Y+4
00a683 81fd      	LDD  R31,Y+4+1
00a684 17ea      	CP   R30,R26
00a685 07fb      	CPC  R31,R27
00a686 f411      	BRNE _0x200006A
00a687 01f8      	MOVW R30,R16
00a688 c004      	RJMP _0x20E0028
                 _0x200006A:
00a689 0189      	MOVW R16,R18
00a68a cfee      	RJMP _0x2000067
                 _0x2000069:
00a68b e0e0      	LDI  R30,LOW(0)
00a68c e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00a68d 940e e3a2 	CALL __LOADLOCR4
00a68f 9626      	ADIW R28,6
00a690 9508      	RET
                 _realloc:
00a691 940e d8a3 	CALL SUBOPT_0x345
00a693 85ea      	LDD  R30,Y+10
00a694 85fb      	LDD  R31,Y+10+1
00a695 9730      	SBIW R30,0
00a696 f1a9      	BREQ _0x200006B
00a697 9734      	SBIW R30,4
00a698 018f      	MOVW R16,R30
00a699 01d8      	MOVW R26,R16
00a69a dfda      	RCALL _find_prev_block_G100
00a69b 019f      	MOVW R18,R30
00a69c 9730      	SBIW R30,0
00a69d f171      	BREQ _0x200006C
00a69e 01d8      	MOVW R26,R16
00a69f 9612      	ADIW R26,2
00a6a0 940e e2f0 	CALL __GETW1P
                +
00a6a2 01d9     +MOVW R26 , R18
00a6a3 9612     +ADIW R26 , 2
00a6a4 93ed     +ST X + , R30
00a6a5 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
00a6a6 85e8      	LDD  R30,Y+8
00a6a7 85f9      	LDD  R31,Y+8+1
00a6a8 9730      	SBIW R30,0
00a6a9 f111      	BREQ _0x200006D
00a6aa 85a8      	LDD  R26,Y+8
00a6ab 85b9      	LDD  R27,Y+8+1
00a6ac df85      	RCALL _allocate_block_G100
00a6ad 01af      	MOVW R20,R30
00a6ae 9730      	SBIW R30,0
00a6af f0b9      	BREQ _0x200006E
00a6b0 01d8      	MOVW R26,R16
00a6b1 940e dc0e 	CALL SUBOPT_0x3AA
00a6b3 01df      	MOVW R26,R30
00a6b4 85e8      	LDD  R30,Y+8
00a6b5 85f9      	LDD  R31,Y+8+1
00a6b6 17ae      	CP   R26,R30
00a6b7 07bf      	CPC  R27,R31
00a6b8 f420      	BRSH _0x200006F
00a6b9 81ee      	LDD  R30,Y+6
00a6ba 81ff      	LDD  R31,Y+6+1
00a6bb 87e8      	STD  Y+8,R30
00a6bc 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00a6bd 935a      	ST   -Y,R21
00a6be 934a      	ST   -Y,R20
00a6bf 940e cc8e 	CALL SUBOPT_0x1AE
00a6c1 85ac      	LDD  R26,Y+12
00a6c2 85bd      	LDD  R27,Y+12+1
00a6c3 940e a733 	CALL _memmove
00a6c5 940c ad6b 	JMP  _0x20E001F
                 _0x200006E:
00a6c7 01f8      	MOVW R30,R16
                +
00a6c8 01d9     +MOVW R26 , R18
00a6c9 9612     +ADIW R26 , 2
00a6ca 93ed     +ST X + , R30
00a6cb 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
00a6cc e0e0      	LDI  R30,LOW(0)
00a6cd e0f0      	LDI  R31,HIGH(0)
00a6ce 940c ad6c 	JMP  _0x20E001E
                 _malloc:
00a6d0 940e c566 	CALL SUBOPT_0x81
                +
00a6d2 e000     +LDI R16 , LOW ( 0 )
00a6d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a6d4 81ea      	LDD  R30,Y+2
00a6d5 81fb      	LDD  R31,Y+2+1
00a6d6 9730      	SBIW R30,0
00a6d7 f071      	BREQ _0x2000070
00a6d8 81aa      	LDD  R26,Y+2
00a6d9 81bb      	LDD  R27,Y+2+1
00a6da df57      	RCALL _allocate_block_G100
00a6db 018f      	MOVW R16,R30
00a6dc 9730      	SBIW R30,0
00a6dd f041      	BREQ _0x2000071
00a6de 931a      	ST   -Y,R17
00a6df 930a      	ST   -Y,R16
00a6e0 e0e0      	LDI  R30,LOW(0)
00a6e1 93ea      	ST   -Y,R30
00a6e2 81ad      	LDD  R26,Y+5
00a6e3 81be      	LDD  R27,Y+5+1
00a6e4 940e a752 	CALL _memset
                 _0x2000071:
                 _0x2000070:
00a6e6 01f8      	MOVW R30,R16
00a6e7 8119      	LDD  R17,Y+1
00a6e8 8108      	LDD  R16,Y+0
00a6e9 940c a797 	JMP  _0x20E0026
                 _free:
00a6eb 940e c5ef 	CALL SUBOPT_0x95
00a6ed 93fa      	ST   -Y,R31
00a6ee 93ea      	ST   -Y,R30
00a6ef 940e c840 	CALL SUBOPT_0xF5
00a6f1 df9f      	RCALL _realloc
                 _0x20E0027:
00a6f2 9622      	ADIW R28,2
00a6f3 9508      	RET
                 
                 	.CSEG
                 _memcmp:
00a6f4 93ba      	ST   -Y,R27
00a6f5 93aa      	ST   -Y,R26
00a6f6 2766          clr  r22
00a6f7 2777          clr  r23
00a6f8 9189          ld   r24,y+
00a6f9 9199          ld   r25,y+
00a6fa 91e9          ld   r30,y+
00a6fb 91f9          ld   r31,y+
00a6fc 91a9          ld   r26,y+
00a6fd 91b9          ld   r27,y+
                 memcmp0:
00a6fe 9600          adiw r24,0
00a6ff f029          breq memcmp1
00a700 9701          sbiw r24,1
00a701 916d          ld   r22,x+
00a702 9171          ld   r23,z+
00a703 1767          cp   r22,r23
00a704 f3c9          breq memcmp0
                 memcmp1:
00a705 1b67          sub  r22,r23
00a706 f410          brcc memcmp2
00a707 efef          ldi  r30,-1
00a708 9508          ret
                 memcmp2:
00a709 e0e0          ldi  r30,0
00a70a f009          breq memcmp3
00a70b 95e3          inc  r30
                 memcmp3:
00a70c 9508          ret
                 _memcpy:
00a70d 93ba      	ST   -Y,R27
00a70e 93aa      	ST   -Y,R26
00a70f 8199          ldd  r25,y+1
00a710 8188          ld   r24,y
00a711 9600          adiw r24,0
00a712 f041          breq memcpy1
00a713 81bd          ldd  r27,y+5
00a714 81ac          ldd  r26,y+4
00a715 81fb          ldd  r31,y+3
00a716 81ea          ldd  r30,y+2
                 memcpy0:
00a717 9161          ld   r22,z+
00a718 936d          st   x+,r22
00a719 9701          sbiw r24,1
00a71a f7e1          brne memcpy0
                 memcpy1:
00a71b 81fd          ldd  r31,y+5
00a71c 81ec          ldd  r30,y+4
00a71d 940c ad8d 	JMP  _0x20E001D
                 _memcpyf:
00a71f 93ba      	ST   -Y,R27
00a720 93aa      	ST   -Y,R26
00a721 8199          ldd  r25,y+1
00a722 8188          ld   r24,y
00a723 9600          adiw r24,0
00a724 f051          breq memcpyf1
00a725 81bf          ldd  r27,y+7
00a726 81ae          ldd  r26,y+6
00a727 816c          ldd  r22,y+4
00a728 81fb          ldd  r31,y+3
00a729 81ea          ldd  r30,y+2
00a72a bf6b          out  rampz,r22
                 memcpyf0:
00a72b 9007          elpm r0,z+
00a72c 920d          st   x+,r0
00a72d 9701          sbiw r24,1
00a72e f7e1          brne memcpyf0
                 memcpyf1:
00a72f 81ff          ldd  r31,y+7
00a730 81ee          ldd  r30,y+6
00a731 940c ad48 	JMP  _0x20E0020
                 _memmove:
00a733 93ba      	ST   -Y,R27
00a734 93aa      	ST   -Y,R26
00a735 8199          ldd  r25,y+1
00a736 8188          ld   r24,y
00a737 9600          adiw r24,0
00a738 f0a9          breq memmove3
00a739 81bd          ldd  r27,y+5
00a73a 81ac          ldd  r26,y+4
00a73b 81fb          ldd  r31,y+3
00a73c 81ea          ldd  r30,y+2
00a73d 17ea          cp   r30,r26
00a73e 07fb          cpc  r31,r27
00a73f f071          breq memmove3
00a740 f02c          brlt memmove1
                 memmove0:
00a741 9161          ld   r22,z+
00a742 936d          st   x+,r22
00a743 9701          sbiw r24,1
00a744 f7e1          brne memmove0
00a745 c008          rjmp memmove3
                 memmove1:
00a746 0fa8          add  r26,r24
00a747 1fb9          adc  r27,r25
00a748 0fe8          add  r30,r24
00a749 1ff9          adc  r31,r25
                 memmove2:
00a74a 9162          ld   r22,-z
00a74b 936e          st   -x,r22
00a74c 9701          sbiw r24,1
00a74d f7e1          brne memmove2
                 memmove3:
00a74e 81fd          ldd  r31,y+5
00a74f 81ec          ldd  r30,y+4
00a750 940c ad8d 	JMP  _0x20E001D
                 _memset:
00a752 93ba      	ST   -Y,R27
00a753 93aa      	ST   -Y,R26
00a754 81b9          ldd  r27,y+1
00a755 81a8          ld   r26,y
00a756 9610          adiw r26,0
00a757 f031          breq memset1
00a758 81fc          ldd  r31,y+4
00a759 81eb          ldd  r30,y+3
00a75a 816a          ldd  r22,y+2
                 memset0:
00a75b 9361          st   z+,r22
00a75c 9711          sbiw r26,1
00a75d f7e9          brne memset0
                 memset1:
00a75e 81eb          ldd  r30,y+3
00a75f 81fc          ldd  r31,y+4
00a760 9625      	ADIW R28,5
00a761 9508      	RET
                 _strcat:
00a762 93ba      	ST   -Y,R27
00a763 93aa      	ST   -Y,R26
00a764 91e9          ld   r30,y+
00a765 91f9          ld   r31,y+
00a766 91a9          ld   r26,y+
00a767 91b9          ld   r27,y+
00a768 01cd          movw r24,r26
                 strcat0:
00a769 916d          ld   r22,x+
00a76a 2366          tst  r22
00a76b f7e9          brne strcat0
00a76c 9711          sbiw r26,1
                 strcat1:
00a76d 9161          ld   r22,z+
00a76e 936d          st   x+,r22
00a76f 2366          tst  r22
00a770 f7e1          brne strcat1
00a771 01fc          movw r30,r24
00a772 9508          ret
                 _strcpyf:
00a773 940e e329 	CALL __PUTPARD2
00a775 91e9          ld   r30,y+
00a776 91f9          ld   r31,y+
00a777 9169          ld   r22,y+
00a778 9179          ld   r23,y+
00a779 91a9          ld   r26,y+
00a77a 91b9          ld   r27,y+
00a77b 01cd          movw r24,r26
00a77c bf6b          out  rampz,r22
                 strcpyf0:
00a77d 9007          elpm r0,z+
00a77e 920d          st   x+,r0
00a77f 2000          tst  r0
00a780 f7e1          brne strcpyf0
00a781 01fc          movw r30,r24
00a782 9508          ret
                 _strcspn:
00a783 93ba      	ST   -Y,R27
00a784 93aa      	ST   -Y,R26
00a785 81bb          ldd  r27,y+3
00a786 81aa          ldd  r26,y+2
00a787 2788          clr  r24
00a788 2799          clr  r25
                 strcspn0:
00a789 916d          ld   r22,x+
00a78a 2366          tst  r22
00a78b f051          breq strcspn2
00a78c 81f9          ldd  r31,y+1
00a78d 81e8          ld   r30,y
                 strcspn1:
00a78e 9171          ld   r23,z+
00a78f 2377          tst  r23
00a790 f019          breq strcspn3
00a791 1767          cp   r22,r23
00a792 f019          breq strcspn2
00a793 cffa          rjmp strcspn1
                 strcspn3:
00a794 9601          adiw r24,1
00a795 cff3          rjmp strcspn0
                 strcspn2:
00a796 01fc          movw r30,r24
                 _0x20E0026:
00a797 9624      	ADIW R28,4
00a798 9508      	RET
                 _strlen:
00a799 93ba      	ST   -Y,R27
00a79a 93aa      	ST   -Y,R26
00a79b 91a9          ld   r26,y+
00a79c 91b9          ld   r27,y+
00a79d 27ee          clr  r30
00a79e 27ff          clr  r31
                 strlen0:
00a79f 916d          ld   r22,x+
00a7a0 2366          tst  r22
00a7a1 f011          breq strlen1
00a7a2 9631          adiw r30,1
00a7a3 cffb          rjmp strlen0
                 strlen1:
00a7a4 9508          ret
                 _strlenf:
00a7a5 940e e329 	CALL __PUTPARD2
00a7a7 27aa          clr  r26
00a7a8 27bb          clr  r27
00a7a9 91e9          ld   r30,y+
00a7aa 91f9          ld   r31,y+
00a7ab 9169          ld   r22,y+
00a7ac 9179          ld   r23,y+
00a7ad bf6b          out  rampz,r22
                 strlenf0:
00a7ae 9007          elpm r0,z+
00a7af 2000          tst  r0
00a7b0 f011          breq strlenf1
00a7b1 9611          adiw r26,1
00a7b2 cffb          rjmp strlenf0
                 strlenf1:
00a7b3 01fd          movw r30,r26
00a7b4 9508          ret
                 _strncmpf:
00a7b5 93aa      	ST   -Y,R26
00a7b6 9179          ld   r23,y+
00a7b7 91e9          ld   r30,y+
00a7b8 91f9          ld   r31,y+
00a7b9 9169          ld   r22,y+
00a7ba 9009          ld   r0,y+
00a7bb 91a9          ld   r26,y+
00a7bc 91b9          ld   r27,y+
00a7bd 2400          clr  r0
00a7be 2411          clr  r1
00a7bf bf6b          out  rampz,r22
                 strncmpf0:
00a7c0 2377          tst  r23
00a7c1 f049          breq strncmpf1
00a7c2 957a          dec  r23
00a7c3 901d          ld   r1,x+
00a7c4 9007          elpm r0,z+
00a7c5 1401          cp   r0,r1
00a7c6 f421          brne strncmpf1
00a7c7 2000          tst  r0
00a7c8 f7b9          brne strncmpf0
                 strncmpf3:
00a7c9 27ee          clr  r30
00a7ca c005          rjmp strncmpf2
                 strncmpf1:
00a7cb 1810          sub  r1,r0
00a7cc f3e1          breq strncmpf3
00a7cd e0e1          ldi  r30,1
00a7ce f408          brcc strncmpf2
00a7cf 50e2          subi r30,2
                 strncmpf2:
00a7d0 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
00a7d1 931a      	ST   -Y,R17
00a7d2 e3e2      	LDI  R30,LOW(50)
00a7d3 93e0 1aaf 	STS  _timer2_G102,R30
00a7d5 efef      	LDI  R30,LOW(255)
00a7d6 bdee      	OUT  0x2E,R30
                 _0x2040004:
00a7d7 b5ed      	IN   R30,0x2D
00a7d8 ffe7      	SBRS R30,7
00a7d9 cffd      	RJMP _0x2040004
                 _0x2040008:
00a7da efef      	LDI  R30,LOW(255)
00a7db bdee      	OUT  0x2E,R30
                 _0x204000A:
00a7dc b5ed      	IN   R30,0x2D
00a7dd ffe7      	SBRS R30,7
00a7de cffd      	RJMP _0x204000A
00a7df b51e      	IN   R17,46
00a7e0 3f1f      	CPI  R17,255
00a7e1 f021      	BREQ _0x204000D
00a7e2 91e0 1aaf 	LDS  R30,_timer2_G102
00a7e4 30e0      	CPI  R30,0
00a7e5 f409      	BRNE _0x204000E
                 _0x204000D:
00a7e6 c001      	RJMP _0x2040009
                 _0x204000E:
00a7e7 cff2      	RJMP _0x2040008
                 _0x2040009:
00a7e8 2fe1      	MOV  R30,R17
00a7e9 9119      	LD   R17,Y+
00a7ea 9508      	RET
                 _release_spi_G102:
00a7eb 9a28      	SBI  0x5,0
00a7ec efef      	LDI  R30,LOW(255)
00a7ed bdee      	OUT  0x2E,R30
                 _0x204000F:
00a7ee b5ed      	IN   R30,0x2D
00a7ef ffe7      	SBRS R30,7
00a7f0 cffd      	RJMP _0x204000F
00a7f1 9508      	RET
                 _rx_datablock_G102:
00a7f2 93ba      	ST   -Y,R27
00a7f3 93aa      	ST   -Y,R26
00a7f4 940e e39b 	CALL __SAVELOCR4
00a7f6 e0ea      	LDI  R30,LOW(10)
00a7f7 93e0 1aae 	STS  _timer1_G102,R30
                 _0x2040013:
00a7f9 efef      	LDI  R30,LOW(255)
00a7fa bdee      	OUT  0x2E,R30
                 _0x2040015:
00a7fb b5ed      	IN   R30,0x2D
00a7fc ffe7      	SBRS R30,7
00a7fd cffd      	RJMP _0x2040015
00a7fe b51e      	IN   R17,46
00a7ff 3f1f      	CPI  R17,255
00a800 f421      	BRNE _0x2040018
00a801 91e0 1aae 	LDS  R30,_timer1_G102
00a803 30e0      	CPI  R30,0
00a804 f409      	BRNE _0x2040019
                 _0x2040018:
00a805 c001      	RJMP _0x2040014
                 _0x2040019:
00a806 cff2      	RJMP _0x2040013
                 _0x2040014:
00a807 3f1e      	CPI  R17,254
00a808 f021      	BREQ _0x204001A
00a809 e0e0      	LDI  R30,LOW(0)
00a80a 940e e3a2 	CALL __LOADLOCR4
00a80c c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00a80d 812e     +LDD R18 , Y + 6
00a80e 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00a80f efef      	LDI  R30,LOW(255)
00a810 bdee      	OUT  0x2E,R30
                 _0x204001E:
00a811 b5ed      	IN   R30,0x2D
00a812 ffe7      	SBRS R30,7
00a813 cffd      	RJMP _0x204001E
00a814 933f      	PUSH R19
00a815 932f      	PUSH R18
                +
00a816 5f2f     +SUBI R18 , LOW ( - 1 )
00a817 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a818 b5ee      	IN   R30,0x2E
00a819 91af      	POP  R26
00a81a 91bf      	POP  R27
00a81b 93ec      	ST   X,R30
00a81c efef      	LDI  R30,LOW(255)
00a81d bdee      	OUT  0x2E,R30
                 _0x2040021:
00a81e b5ed      	IN   R30,0x2D
00a81f ffe7      	SBRS R30,7
00a820 cffd      	RJMP _0x2040021
00a821 933f      	PUSH R19
00a822 932f      	PUSH R18
                +
00a823 5f2f     +SUBI R18 , LOW ( - 1 )
00a824 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a825 b5ee      	IN   R30,0x2E
00a826 91af      	POP  R26
00a827 91bf      	POP  R27
00a828 93ec      	ST   X,R30
00a829 efef      	LDI  R30,LOW(255)
00a82a bdee      	OUT  0x2E,R30
                 _0x2040024:
00a82b b5ed      	IN   R30,0x2D
00a82c ffe7      	SBRS R30,7
00a82d cffd      	RJMP _0x2040024
00a82e 933f      	PUSH R19
00a82f 932f      	PUSH R18
                +
00a830 5f2f     +SUBI R18 , LOW ( - 1 )
00a831 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a832 b5ee      	IN   R30,0x2E
00a833 91af      	POP  R26
00a834 91bf      	POP  R27
00a835 93ec      	ST   X,R30
00a836 efef      	LDI  R30,LOW(255)
00a837 bdee      	OUT  0x2E,R30
                 _0x2040027:
00a838 b5ed      	IN   R30,0x2D
00a839 ffe7      	SBRS R30,7
00a83a cffd      	RJMP _0x2040027
00a83b 933f      	PUSH R19
00a83c 932f      	PUSH R18
                +
00a83d 5f2f     +SUBI R18 , LOW ( - 1 )
00a83e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a83f b5ee      	IN   R30,0x2E
00a840 91af      	POP  R26
00a841 91bf      	POP  R27
00a842 93ec      	ST   X,R30
00a843 81ec      	LDD  R30,Y+4
00a844 81fd      	LDD  R31,Y+4+1
00a845 9734      	SBIW R30,4
00a846 83ec      	STD  Y+4,R30
00a847 83fd      	STD  Y+4+1,R31
00a848 f631      	BRNE _0x204001C
00a849 efef      	LDI  R30,LOW(255)
00a84a bdee      	OUT  0x2E,R30
                 _0x204002A:
00a84b b5ed      	IN   R30,0x2D
00a84c ffe7      	SBRS R30,7
00a84d cffd      	RJMP _0x204002A
00a84e efef      	LDI  R30,LOW(255)
00a84f bdee      	OUT  0x2E,R30
                 _0x204002D:
00a850 b5ed      	IN   R30,0x2D
00a851 ffe7      	SBRS R30,7
00a852 cffd      	RJMP _0x204002D
00a853 e0e1      	LDI  R30,LOW(1)
00a854 940e e3a2 	CALL __LOADLOCR4
00a856 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
00a857 93aa      	ST   -Y,R26
00a858 940e e39b 	CALL __SAVELOCR4
00a85a df76      	RCALL _wait_ready_G102
00a85b 3fef      	CPI  R30,LOW(0xFF)
00a85c f021      	BREQ _0x2040030
00a85d e0e0      	LDI  R30,LOW(0)
00a85e 940e e3a2 	CALL __LOADLOCR4
00a860 c4b3      	RJMP _0x20E0021
                 _0x2040030:
00a861 81ec      	LDD  R30,Y+4
00a862 bdee      	OUT  0x2E,R30
                 _0x2040031:
00a863 b5ed      	IN   R30,0x2D
00a864 ffe7      	SBRS R30,7
00a865 cffd      	RJMP _0x2040031
00a866 81ac      	LDD  R26,Y+4
00a867 3fad      	CPI  R26,LOW(0xFD)
00a868 f171      	BREQ _0x2040034
00a869 e000      	LDI  R16,LOW(0)
                +
00a86a 812d     +LDD R18 , Y + 5
00a86b 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
00a86c 01d9      	MOVW R26,R18
                +
00a86d 5f2f     +SUBI R18 , LOW ( - 1 )
00a86e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a86f 91ec      	LD   R30,X
00a870 bdee      	OUT  0x2E,R30
                 _0x2040038:
00a871 b5ed      	IN   R30,0x2D
00a872 ffe7      	SBRS R30,7
00a873 cffd      	RJMP _0x2040038
00a874 01d9      	MOVW R26,R18
                +
00a875 5f2f     +SUBI R18 , LOW ( - 1 )
00a876 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a877 91ec      	LD   R30,X
00a878 bdee      	OUT  0x2E,R30
                 _0x204003B:
00a879 b5ed      	IN   R30,0x2D
00a87a ffe7      	SBRS R30,7
00a87b cffd      	RJMP _0x204003B
00a87c 5001      	SUBI R16,LOW(1)
00a87d 3000      	CPI  R16,0
00a87e f769      	BRNE _0x2040036
00a87f efef      	LDI  R30,LOW(255)
00a880 bdee      	OUT  0x2E,R30
                 _0x204003E:
00a881 b5ed      	IN   R30,0x2D
00a882 ffe7      	SBRS R30,7
00a883 cffd      	RJMP _0x204003E
00a884 efef      	LDI  R30,LOW(255)
00a885 bdee      	OUT  0x2E,R30
                 _0x2040041:
00a886 b5ed      	IN   R30,0x2D
00a887 ffe7      	SBRS R30,7
00a888 cffd      	RJMP _0x2040041
00a889 efef      	LDI  R30,LOW(255)
00a88a bdee      	OUT  0x2E,R30
                 _0x2040044:
00a88b b5ed      	IN   R30,0x2D
00a88c ffe7      	SBRS R30,7
00a88d cffd      	RJMP _0x2040044
00a88e b51e      	IN   R17,46
00a88f 2fe1      	MOV  R30,R17
00a890 71ef      	ANDI R30,LOW(0x1F)
00a891 30e5      	CPI  R30,LOW(0x5)
00a892 f021      	BREQ _0x2040047
00a893 e0e0      	LDI  R30,LOW(0)
00a894 940e e3a2 	CALL __LOADLOCR4
00a896 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
00a897 e0e1      	LDI  R30,LOW(1)
00a898 940e e3a2 	CALL __LOADLOCR4
00a89a c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00a89b 940e e329 	CALL __PUTPARD2
00a89d 931a      	ST   -Y,R17
00a89e 930a      	ST   -Y,R16
00a89f 81ee      	LDD  R30,Y+6
00a8a0 78e0      	ANDI R30,LOW(0x80)
00a8a1 f089      	BREQ _0x2040048
00a8a2 81ee      	LDD  R30,Y+6
00a8a3 77ef      	ANDI R30,0x7F
00a8a4 83ee      	STD  Y+6,R30
00a8a5 e7e7      	LDI  R30,LOW(119)
00a8a6 93ea      	ST   -Y,R30
                +
00a8a7 e0a0     +LDI R26 , LOW ( 0x0 )
00a8a8 e0b0     +LDI R27 , HIGH ( 0x0 )
00a8a9 e080     +LDI R24 , BYTE3 ( 0x0 )
00a8aa e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a8ab dfef      	RCALL _send_cmd_G102
00a8ac 2f0e      	MOV  R16,R30
00a8ad 3002      	CPI  R16,2
00a8ae f020      	BRLO _0x2040049
00a8af 2fe0      	MOV  R30,R16
00a8b0 8119      	LDD  R17,Y+1
00a8b1 8108      	LDD  R16,Y+0
00a8b2 c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
00a8b3 9a28      	SBI  0x5,0
00a8b4 9828      	CBI  0x5,0
00a8b5 df1b      	RCALL _wait_ready_G102
00a8b6 3fef      	CPI  R30,LOW(0xFF)
00a8b7 f021      	BREQ _0x204004A
00a8b8 efef      	LDI  R30,LOW(255)
00a8b9 8119      	LDD  R17,Y+1
00a8ba 8108      	LDD  R16,Y+0
00a8bb c458      	RJMP _0x20E0021
                 _0x204004A:
00a8bc 81ee      	LDD  R30,Y+6
00a8bd bdee      	OUT  0x2E,R30
                 _0x204004B:
00a8be b5ed      	IN   R30,0x2D
00a8bf ffe7      	SBRS R30,7
00a8c0 cffd      	RJMP _0x204004B
00a8c1 81ed      	LDD  R30,Y+5
00a8c2 bdee      	OUT  0x2E,R30
                 _0x204004E:
00a8c3 b5ed      	IN   R30,0x2D
00a8c4 ffe7      	SBRS R30,7
00a8c5 cffd      	RJMP _0x204004E
00a8c6 81ec      	LDD  R30,Y+4
00a8c7 bdee      	OUT  0x2E,R30
                 _0x2040051:
00a8c8 b5ed      	IN   R30,0x2D
00a8c9 ffe7      	SBRS R30,7
00a8ca cffd      	RJMP _0x2040051
00a8cb 81eb      	LDD  R30,Y+3
00a8cc bdee      	OUT  0x2E,R30
                 _0x2040054:
00a8cd b5ed      	IN   R30,0x2D
00a8ce ffe7      	SBRS R30,7
00a8cf cffd      	RJMP _0x2040054
00a8d0 81ea      	LDD  R30,Y+2
00a8d1 bdee      	OUT  0x2E,R30
                 _0x2040057:
00a8d2 b5ed      	IN   R30,0x2D
00a8d3 ffe7      	SBRS R30,7
00a8d4 cffd      	RJMP _0x2040057
00a8d5 e011      	LDI  R17,LOW(1)
00a8d6 81ae      	LDD  R26,Y+6
00a8d7 34a0      	CPI  R26,LOW(0x40)
00a8d8 f411      	BRNE _0x204005A
00a8d9 e915      	LDI  R17,LOW(149)
00a8da c004      	RJMP _0x204005B
                 _0x204005A:
00a8db 81ae      	LDD  R26,Y+6
00a8dc 34a8      	CPI  R26,LOW(0x48)
00a8dd f409      	BRNE _0x204005C
00a8de e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00a8df bd1e      	OUT  0x2E,R17
                 _0x204005D:
00a8e0 b5ed      	IN   R30,0x2D
00a8e1 ffe7      	SBRS R30,7
00a8e2 cffd      	RJMP _0x204005D
00a8e3 81ae      	LDD  R26,Y+6
00a8e4 34ac      	CPI  R26,LOW(0x4C)
00a8e5 f429      	BRNE _0x2040060
00a8e6 efef      	LDI  R30,LOW(255)
00a8e7 bdee      	OUT  0x2E,R30
                 _0x2040061:
00a8e8 b5ed      	IN   R30,0x2D
00a8e9 ffe7      	SBRS R30,7
00a8ea cffd      	RJMP _0x2040061
                 _0x2040060:
00a8eb ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00a8ec efef      	LDI  R30,LOW(255)
00a8ed bdee      	OUT  0x2E,R30
                 _0x2040067:
00a8ee b5ed      	IN   R30,0x2D
00a8ef ffe7      	SBRS R30,7
00a8f0 cffd      	RJMP _0x2040067
00a8f1 b50e      	IN   R16,46
00a8f2 ff07      	SBRS R16,7
00a8f3 c003      	RJMP _0x204006A
00a8f4 5011      	SUBI R17,LOW(1)
00a8f5 3010      	CPI  R17,0
00a8f6 f409      	BRNE _0x204006B
                 _0x204006A:
00a8f7 c001      	RJMP _0x2040066
                 _0x204006B:
00a8f8 cff3      	RJMP _0x2040065
                 _0x2040066:
00a8f9 2fe0      	MOV  R30,R16
00a8fa 8119      	LDD  R17,Y+1
00a8fb 8108      	LDD  R16,Y+0
00a8fc c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00a8fd 93ba      	ST   -Y,R27
00a8fe 93aa      	ST   -Y,R26
00a8ff 931a      	ST   -Y,R17
00a900 e014      	LDI  R17,4
                 _0x204006D:
00a901 efef      	LDI  R30,LOW(255)
00a902 bdee      	OUT  0x2E,R30
                 _0x204006F:
00a903 b5ed      	IN   R30,0x2D
00a904 ffe7      	SBRS R30,7
00a905 cffd      	RJMP _0x204006F
00a906 81a9      	LDD  R26,Y+1
00a907 81ba      	LDD  R27,Y+1+1
00a908 9611      	ADIW R26,1
00a909 83a9      	STD  Y+1,R26
00a90a 83ba      	STD  Y+1+1,R27
00a90b 9711      	SBIW R26,1
00a90c b5ee      	IN   R30,0x2E
00a90d 93ec      	ST   X,R30
00a90e 5011      	SUBI R17,LOW(1)
00a90f 3010      	CPI  R17,0
00a910 f781      	BRNE _0x204006D
00a911 c554      	RJMP _0x20E001B
                 _disk_initialize:
00a912 93aa      	ST   -Y,R26
00a913 9724      	SBIW R28,4
00a914 940e e39b 	CALL __SAVELOCR4
00a916 85e8      	LDD  R30,Y+8
00a917 30e0      	CPI  R30,0
00a918 f011      	BREQ _0x2040072
00a919 e0e1      	LDI  R30,LOW(1)
00a91a c0c4      	RJMP _0x20E0025
                 _0x2040072:
00a91b 9808      	CBI  0x1,0
00a91c 9809      	CBI  0x1,1
00a91d e0ea      	LDI  R30,LOW(10)
00a91e 93e0 1aae 	STS  _timer1_G102,R30
                 _0x2040073:
00a920 91e0 1aae 	LDS  R30,_timer1_G102
00a922 30e0      	CPI  R30,0
00a923 f7e1      	BRNE _0x2040073
00a924 91e0 1aad 	LDS  R30,_status_G102
00a926 70e2      	ANDI R30,LOW(0x2)
00a927 f009      	BREQ _0x2040076
00a928 c0b4      	RJMP _0x20E0024
                 _0x2040076:
00a929 9a20      	SBI  0x4,0
00a92a 9a28      	SBI  0x5,0
00a92b b1e5      	IN   R30,0x5
00a92c 7fe9      	ANDI R30,LOW(0xF9)
00a92d b9e5      	OUT  0x5,R30
00a92e 9a2b      	SBI  0x5,3
00a92f 9823      	CBI  0x4,3
00a930 b1e4      	IN   R30,0x4
00a931 60e7      	ORI  R30,LOW(0x7)
00a932 b9e4      	OUT  0x4,R30
00a933 e5e2      	LDI  R30,LOW(82)
00a934 bdec      	OUT  0x2C,R30
00a935 e0e0      	LDI  R30,LOW(0)
00a936 bded      	OUT  0x2D,R30
00a937 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
00a938 e01a      	LDI  R17,LOW(10)
                 _0x204007B:
00a939 efef      	LDI  R30,LOW(255)
00a93a bdee      	OUT  0x2E,R30
                 _0x204007D:
00a93b b5ed      	IN   R30,0x2D
00a93c ffe7      	SBRS R30,7
00a93d cffd      	RJMP _0x204007D
00a93e 5011      	SUBI R17,LOW(1)
00a93f 3010      	CPI  R17,0
00a940 f7c1      	BRNE _0x204007B
00a941 e4e0      	LDI  R30,LOW(64)
00a942 93ea      	ST   -Y,R30
                +
00a943 e0a0     +LDI R26 , LOW ( 0x0 )
00a944 e0b0     +LDI R27 , HIGH ( 0x0 )
00a945 e080     +LDI R24 , BYTE3 ( 0x0 )
00a946 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a947 df53      	RCALL _send_cmd_G102
00a948 2f0e      	MOV  R16,R30
00a949 5031      	SUBI R19,LOW(1)
00a94a 3001      	CPI  R16,1
00a94b f011      	BREQ _0x2040080
00a94c 3030      	CPI  R19,0
00a94d f409      	BRNE _0x2040081
                 _0x2040080:
00a94e c001      	RJMP _0x2040079
                 _0x2040081:
00a94f cfe8      	RJMP _0x2040078
                 _0x2040079:
00a950 e030      	LDI  R19,LOW(0)
00a951 3001      	CPI  R16,1
00a952 f011      	BREQ PC+3
00a953 940c a9bd 	JMP _0x2040082
00a955 e6e4      	LDI  R30,LOW(100)
00a956 93e0 1aae 	STS  _timer1_G102,R30
00a958 e4e8      	LDI  R30,LOW(72)
00a959 93ea      	ST   -Y,R30
                +
00a95a eaaa     +LDI R26 , LOW ( 0x1AA )
00a95b e0b1     +LDI R27 , HIGH ( 0x1AA )
00a95c e080     +LDI R24 , BYTE3 ( 0x1AA )
00a95d e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00a95e df3c      	RCALL _send_cmd_G102
00a95f 30e1      	CPI  R30,LOW(0x1)
00a960 f591      	BRNE _0x2040083
00a961 01de      	MOVW R26,R28
00a962 9614      	ADIW R26,4
00a963 df99      	RCALL _rx_spi4_G102
00a964 81ae      	LDD  R26,Y+6
00a965 30a1      	CPI  R26,LOW(0x1)
00a966 f419      	BRNE _0x2040085
00a967 81af      	LDD  R26,Y+7
00a968 3aaa      	CPI  R26,LOW(0xAA)
00a969 f009      	BREQ _0x2040086
                 _0x2040085:
00a96a c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
00a96b 91e0 1aae 	LDS  R30,_timer1_G102
00a96d 30e0      	CPI  R30,0
00a96e f049      	BREQ _0x204008A
00a96f eee9      	LDI  R30,LOW(233)
00a970 93ea      	ST   -Y,R30
                +
00a971 e0a0     +LDI R26 , LOW ( 0x40000000 )
00a972 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00a973 e080     +LDI R24 , BYTE3 ( 0x40000000 )
00a974 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00a975 df25      	RCALL _send_cmd_G102
00a976 30e0      	CPI  R30,0
00a977 f409      	BRNE _0x204008B
                 _0x204008A:
00a978 c001      	RJMP _0x2040089
                 _0x204008B:
00a979 cff1      	RJMP _0x2040087
                 _0x2040089:
00a97a 91e0 1aae 	LDS  R30,_timer1_G102
00a97c 30e0      	CPI  R30,0
00a97d f049      	BREQ _0x204008D
00a97e e7ea      	LDI  R30,LOW(122)
00a97f 93ea      	ST   -Y,R30
                +
00a980 e0a0     +LDI R26 , LOW ( 0x0 )
00a981 e0b0     +LDI R27 , HIGH ( 0x0 )
00a982 e080     +LDI R24 , BYTE3 ( 0x0 )
00a983 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a984 df16      	RCALL _send_cmd_G102
00a985 30e0      	CPI  R30,0
00a986 f009      	BREQ _0x204008E
                 _0x204008D:
00a987 c00a      	RJMP _0x204008C
                 _0x204008E:
00a988 01de      	MOVW R26,R28
00a989 9614      	ADIW R26,4
00a98a df72      	RCALL _rx_spi4_G102
00a98b 81ec      	LDD  R30,Y+4
00a98c 74e0      	ANDI R30,LOW(0x40)
00a98d f011      	BREQ _0x204008F
00a98e e0ec      	LDI  R30,LOW(12)
00a98f c001      	RJMP _0x2040090
                 _0x204008F:
00a990 e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
00a991 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
00a992 c02a      	RJMP _0x2040092
                 _0x2040083:
00a993 eee9      	LDI  R30,LOW(233)
00a994 93ea      	ST   -Y,R30
                +
00a995 e0a0     +LDI R26 , LOW ( 0x0 )
00a996 e0b0     +LDI R27 , HIGH ( 0x0 )
00a997 e080     +LDI R24 , BYTE3 ( 0x0 )
00a998 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a999 df01      	RCALL _send_cmd_G102
00a99a 30e2      	CPI  R30,LOW(0x2)
00a99b f418      	BRSH _0x2040093
00a99c e032      	LDI  R19,LOW(2)
00a99d ee09      	LDI  R16,LOW(233)
00a99e c002      	RJMP _0x2040094
                 _0x2040093:
00a99f e031      	LDI  R19,LOW(1)
00a9a0 e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
00a9a1 91e0 1aae 	LDS  R30,_timer1_G102
00a9a3 30e0      	CPI  R30,0
00a9a4 f041      	BREQ _0x2040098
00a9a5 930a      	ST   -Y,R16
                +
00a9a6 e0a0     +LDI R26 , LOW ( 0x0 )
00a9a7 e0b0     +LDI R27 , HIGH ( 0x0 )
00a9a8 e080     +LDI R24 , BYTE3 ( 0x0 )
00a9a9 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a9aa def0      	RCALL _send_cmd_G102
00a9ab 30e0      	CPI  R30,0
00a9ac f409      	BRNE _0x2040099
                 _0x2040098:
00a9ad c001      	RJMP _0x2040097
                 _0x2040099:
00a9ae cff2      	RJMP _0x2040095
                 _0x2040097:
00a9af 91e0 1aae 	LDS  R30,_timer1_G102
00a9b1 30e0      	CPI  R30,0
00a9b2 f049      	BREQ _0x204009B
00a9b3 e5e0      	LDI  R30,LOW(80)
00a9b4 93ea      	ST   -Y,R30
                +
00a9b5 e0a0     +LDI R26 , LOW ( 0x200 )
00a9b6 e0b2     +LDI R27 , HIGH ( 0x200 )
00a9b7 e080     +LDI R24 , BYTE3 ( 0x200 )
00a9b8 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a9b9 dee1      	RCALL _send_cmd_G102
00a9ba 30e0      	CPI  R30,0
00a9bb f009      	BREQ _0x204009A
                 _0x204009B:
00a9bc e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00a9bd 9330 1ab0 	STS  _card_type_G102,R19
00a9bf de2b      	RCALL _release_spi_G102
00a9c0 3030      	CPI  R19,0
00a9c1 f051      	BREQ _0x204009D
00a9c2 91e0 1aad 	LDS  R30,_status_G102
00a9c4 7fee      	ANDI R30,0xFE
00a9c5 93e0 1aad 	STS  _status_G102,R30
00a9c7 e5e0      	LDI  R30,LOW(80)
00a9c8 bdec      	OUT  0x2C,R30
00a9c9 e0e1      	LDI  R30,LOW(1)
00a9ca bded      	OUT  0x2D,R30
00a9cb c011      	RJMP _0x204009E
                 _0x204009D:
00a9cc 9828      	CBI  0x5,0
00a9cd de03      	RCALL _wait_ready_G102
00a9ce de1c      	RCALL _release_spi_G102
00a9cf e0e0      	LDI  R30,LOW(0)
00a9d0 bdec      	OUT  0x2C,R30
00a9d1 b1e4      	IN   R30,0x4
00a9d2 7fe0      	ANDI R30,LOW(0xF0)
00a9d3 b9e4      	OUT  0x4,R30
00a9d4 b1e5      	IN   R30,0x5
00a9d5 7fe0      	ANDI R30,LOW(0xF0)
00a9d6 b9e5      	OUT  0x5,R30
00a9d7 9820      	CBI  0x4,0
00a9d8 91e0 1aad 	LDS  R30,_status_G102
00a9da 60e1      	ORI  R30,1
00a9db 93e0 1aad 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00a9dd 91e0 1aad 	LDS  R30,_status_G102
                 _0x20E0025:
00a9df 940e e3a2 	CALL __LOADLOCR4
00a9e1 9629      	ADIW R28,9
00a9e2 9508      	RET
                 _disk_status:
00a9e3 93aa      	ST   -Y,R26
00a9e4 81e8      	LD   R30,Y
00a9e5 30e0      	CPI  R30,0
00a9e6 f011      	BREQ _0x204009F
00a9e7 e0e1      	LDI  R30,LOW(1)
00a9e8 c002      	RJMP _0x20E0023
                 _0x204009F:
00a9e9 91e0 1aad 	LDS  R30,_status_G102
                 _0x20E0023:
00a9eb 9621      	ADIW R28,1
00a9ec 9508      	RET
                 _disk_read:
00a9ed 93aa      	ST   -Y,R26
00a9ee 81ef      	LDD  R30,Y+7
00a9ef 30e0      	CPI  R30,0
00a9f0 f419      	BRNE _0x20400A1
00a9f1 81e8      	LD   R30,Y
00a9f2 30e0      	CPI  R30,0
00a9f3 f411      	BRNE _0x20400A0
                 _0x20400A1:
00a9f4 e0e4      	LDI  R30,LOW(4)
00a9f5 c352      	RJMP _0x20E0020
                 _0x20400A0:
00a9f6 91e0 1aad 	LDS  R30,_status_G102
00a9f8 70e1      	ANDI R30,LOW(0x1)
00a9f9 f011      	BREQ _0x20400A3
00a9fa e0e3      	LDI  R30,LOW(3)
00a9fb c34c      	RJMP _0x20E0020
                 _0x20400A3:
00a9fc 91e0 1ab0 	LDS  R30,_card_type_G102
00a9fe 70e8      	ANDI R30,LOW(0x8)
00a9ff f471      	BRNE _0x20400A4
                +
00aa00 81e9     +LDD R30 , Y + 1
00aa01 81fa     +LDD R31 , Y + 1 + 1
00aa02 816b     +LDD R22 , Y + 1 + 2
00aa03 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00aa04 e0a0     +LDI R26 , LOW ( 0x200 )
00aa05 e0b2     +LDI R27 , HIGH ( 0x200 )
00aa06 e080     +LDI R24 , BYTE3 ( 0x200 )
00aa07 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00aa08 940e e222 	CALL __MULD12U
                +
00aa0a 83e9     +STD Y + 1 , R30
00aa0b 83fa     +STD Y + 1 + 1 , R31
00aa0c 836b     +STD Y + 1 + 2 , R22
00aa0d 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00aa0e 81a8      	LD   R26,Y
00aa0f 30a1      	CPI  R26,LOW(0x1)
00aa10 f4b1      	BRNE _0x20400A5
00aa11 e5e1      	LDI  R30,LOW(81)
00aa12 93ea      	ST   -Y,R30
                +
00aa13 81aa     +LDD R26 , Y + 2
00aa14 81bb     +LDD R27 , Y + 2 + 1
00aa15 818c     +LDD R24 , Y + 2 + 2
00aa16 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00aa17 de83      	RCALL _send_cmd_G102
00aa18 30e0      	CPI  R30,0
00aa19 f449      	BRNE _0x20400A7
00aa1a 81ed      	LDD  R30,Y+5
00aa1b 81fe      	LDD  R31,Y+5+1
00aa1c 93fa      	ST   -Y,R31
00aa1d 93ea      	ST   -Y,R30
00aa1e e0a0      	LDI  R26,LOW(512)
00aa1f e0b2      	LDI  R27,HIGH(512)
00aa20 ddd1      	RCALL _rx_datablock_G102
00aa21 30e0      	CPI  R30,0
00aa22 f409      	BRNE _0x20400A8
                 _0x20400A7:
00aa23 c002      	RJMP _0x20400A6
                 _0x20400A8:
00aa24 e0e0      	LDI  R30,LOW(0)
00aa25 83e8      	ST   Y,R30
                 _0x20400A6:
00aa26 c023      	RJMP _0x20400A9
                 _0x20400A5:
00aa27 e5e2      	LDI  R30,LOW(82)
00aa28 93ea      	ST   -Y,R30
                +
00aa29 81aa     +LDD R26 , Y + 2
00aa2a 81bb     +LDD R27 , Y + 2 + 1
00aa2b 818c     +LDD R24 , Y + 2 + 2
00aa2c 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00aa2d de6d      	RCALL _send_cmd_G102
00aa2e 30e0      	CPI  R30,0
00aa2f f4d1      	BRNE _0x20400AA
                 _0x20400AC:
00aa30 81ed      	LDD  R30,Y+5
00aa31 81fe      	LDD  R31,Y+5+1
00aa32 93fa      	ST   -Y,R31
00aa33 93ea      	ST   -Y,R30
00aa34 e0a0      	LDI  R26,LOW(512)
00aa35 e0b2      	LDI  R27,HIGH(512)
00aa36 ddbb      	RCALL _rx_datablock_G102
00aa37 30e0      	CPI  R30,0
00aa38 f051      	BREQ _0x20400AD
00aa39 81ed      	LDD  R30,Y+5
00aa3a 81fe      	LDD  R31,Y+5+1
00aa3b 50e0      	SUBI R30,LOW(-512)
00aa3c 4ffe      	SBCI R31,HIGH(-512)
00aa3d 83ed      	STD  Y+5,R30
00aa3e 83fe      	STD  Y+5+1,R31
00aa3f 81e8      	LD   R30,Y
00aa40 50e1      	SUBI R30,LOW(1)
00aa41 83e8      	ST   Y,R30
00aa42 f769      	BRNE _0x20400AC
                 _0x20400AD:
00aa43 e4ec      	LDI  R30,LOW(76)
00aa44 93ea      	ST   -Y,R30
                +
00aa45 e0a0     +LDI R26 , LOW ( 0x0 )
00aa46 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa47 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa48 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa49 de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
00aa4a dda0      	RCALL _release_spi_G102
00aa4b 81e8      	LD   R30,Y
00aa4c 30e0      	CPI  R30,0
00aa4d f011      	BREQ _0x20400AF
00aa4e e0e1      	LDI  R30,LOW(1)
00aa4f c001      	RJMP _0x20400B0
                 _0x20400AF:
00aa50 e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
00aa51 c2f6      	RJMP _0x20E0020
                 _disk_write:
00aa52 93aa      	ST   -Y,R26
00aa53 81ef      	LDD  R30,Y+7
00aa54 30e0      	CPI  R30,0
00aa55 f419      	BRNE _0x20400B3
00aa56 81e8      	LD   R30,Y
00aa57 30e0      	CPI  R30,0
00aa58 f411      	BRNE _0x20400B2
                 _0x20400B3:
00aa59 e0e4      	LDI  R30,LOW(4)
00aa5a c2ed      	RJMP _0x20E0020
                 _0x20400B2:
00aa5b 91e0 1aad 	LDS  R30,_status_G102
00aa5d 70e1      	ANDI R30,LOW(0x1)
00aa5e f011      	BREQ _0x20400B5
00aa5f e0e3      	LDI  R30,LOW(3)
00aa60 c2e7      	RJMP _0x20E0020
                 _0x20400B5:
00aa61 91e0 1aad 	LDS  R30,_status_G102
00aa63 70e4      	ANDI R30,LOW(0x4)
00aa64 f011      	BREQ _0x20400B6
00aa65 e0e2      	LDI  R30,LOW(2)
00aa66 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
00aa67 91e0 1ab0 	LDS  R30,_card_type_G102
00aa69 70e8      	ANDI R30,LOW(0x8)
00aa6a f471      	BRNE _0x20400B7
                +
00aa6b 81e9     +LDD R30 , Y + 1
00aa6c 81fa     +LDD R31 , Y + 1 + 1
00aa6d 816b     +LDD R22 , Y + 1 + 2
00aa6e 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00aa6f e0a0     +LDI R26 , LOW ( 0x200 )
00aa70 e0b2     +LDI R27 , HIGH ( 0x200 )
00aa71 e080     +LDI R24 , BYTE3 ( 0x200 )
00aa72 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00aa73 940e e222 	CALL __MULD12U
                +
00aa75 83e9     +STD Y + 1 , R30
00aa76 83fa     +STD Y + 1 + 1 , R31
00aa77 836b     +STD Y + 1 + 2 , R22
00aa78 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
00aa79 81a8      	LD   R26,Y
00aa7a 30a1      	CPI  R26,LOW(0x1)
00aa7b f4a9      	BRNE _0x20400B8
00aa7c e5e8      	LDI  R30,LOW(88)
00aa7d 93ea      	ST   -Y,R30
                +
00aa7e 81aa     +LDD R26 , Y + 2
00aa7f 81bb     +LDD R27 , Y + 2 + 1
00aa80 818c     +LDD R24 , Y + 2 + 2
00aa81 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00aa82 de18      	RCALL _send_cmd_G102
00aa83 30e0      	CPI  R30,0
00aa84 f441      	BRNE _0x20400BA
00aa85 81ed      	LDD  R30,Y+5
00aa86 81fe      	LDD  R31,Y+5+1
00aa87 93fa      	ST   -Y,R31
00aa88 93ea      	ST   -Y,R30
00aa89 efae      	LDI  R26,LOW(254)
00aa8a ddcc      	RCALL _tx_datablock_G102
00aa8b 30e0      	CPI  R30,0
00aa8c f409      	BRNE _0x20400BB
                 _0x20400BA:
00aa8d c002      	RJMP _0x20400B9
                 _0x20400BB:
00aa8e e0e0      	LDI  R30,LOW(0)
00aa8f 83e8      	ST   Y,R30
                 _0x20400B9:
00aa90 c030      	RJMP _0x20400BC
                 _0x20400B8:
00aa91 91e0 1ab0 	LDS  R30,_card_type_G102
00aa93 70e6      	ANDI R30,LOW(0x6)
00aa94 f039      	BREQ _0x20400BD
00aa95 ede7      	LDI  R30,LOW(215)
00aa96 93ea      	ST   -Y,R30
00aa97 81a9      	LDD  R26,Y+1
00aa98 27bb      	CLR  R27
00aa99 2788      	CLR  R24
00aa9a 2799      	CLR  R25
00aa9b ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00aa9c e5e9      	LDI  R30,LOW(89)
00aa9d 93ea      	ST   -Y,R30
                +
00aa9e 81aa     +LDD R26 , Y + 2
00aa9f 81bb     +LDD R27 , Y + 2 + 1
00aaa0 818c     +LDD R24 , Y + 2 + 2
00aaa1 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00aaa2 ddf8      	RCALL _send_cmd_G102
00aaa3 30e0      	CPI  R30,0
00aaa4 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
00aaa5 81ed      	LDD  R30,Y+5
00aaa6 81fe      	LDD  R31,Y+5+1
00aaa7 93fa      	ST   -Y,R31
00aaa8 93ea      	ST   -Y,R30
00aaa9 efac      	LDI  R26,LOW(252)
00aaaa ddac      	RCALL _tx_datablock_G102
00aaab 30e0      	CPI  R30,0
00aaac f051      	BREQ _0x20400C1
00aaad 81ed      	LDD  R30,Y+5
00aaae 81fe      	LDD  R31,Y+5+1
00aaaf 50e0      	SUBI R30,LOW(-512)
00aab0 4ffe      	SBCI R31,HIGH(-512)
00aab1 83ed      	STD  Y+5,R30
00aab2 83fe      	STD  Y+5+1,R31
00aab3 81e8      	LD   R30,Y
00aab4 50e1      	SUBI R30,LOW(1)
00aab5 83e8      	ST   Y,R30
00aab6 f771      	BRNE _0x20400C0
                 _0x20400C1:
00aab7 e0e0      	LDI  R30,LOW(0)
00aab8 e0f0      	LDI  R31,HIGH(0)
00aab9 93fa      	ST   -Y,R31
00aaba 93ea      	ST   -Y,R30
00aabb efad      	LDI  R26,LOW(253)
00aabc dd9a      	RCALL _tx_datablock_G102
00aabd 30e0      	CPI  R30,0
00aabe f411      	BRNE _0x20400C3
00aabf e0e1      	LDI  R30,LOW(1)
00aac0 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
00aac1 dd29      	RCALL _release_spi_G102
00aac2 81e8      	LD   R30,Y
00aac3 30e0      	CPI  R30,0
00aac4 f011      	BREQ _0x20400C4
00aac5 e0e1      	LDI  R30,LOW(1)
00aac6 c001      	RJMP _0x20400C5
                 _0x20400C4:
00aac7 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
00aac8 c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00aac9 93ba      	ST   -Y,R27
00aaca 93aa      	ST   -Y,R26
00aacb 9760      	SBIW R28,16
00aacc 940e e399 	CALL __SAVELOCR6
00aace 8de9      	LDD  R30,Y+25
00aacf 30e0      	CPI  R30,0
00aad0 f011      	BREQ _0x20400C7
00aad1 e0e4      	LDI  R30,LOW(4)
00aad2 c182      	RJMP _0x20E0022
                 _0x20400C7:
00aad3 e011      	LDI  R17,LOW(1)
00aad4 91e0 1aad 	LDS  R30,_status_G102
00aad6 70e1      	ANDI R30,LOW(0x1)
00aad7 f011      	BREQ _0x20400C8
00aad8 e0e3      	LDI  R30,LOW(3)
00aad9 c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00aada 894e     +LDD R20 , Y + 22
00aadb 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00aadc 8de8      	LDD  R30,Y+24
00aadd 30e0      	CPI  R30,0
00aade f431      	BRNE _0x20400CC
00aadf 9828      	CBI  0x5,0
00aae0 dcf0      	RCALL _wait_ready_G102
00aae1 3fef      	CPI  R30,LOW(0xFF)
00aae2 f409      	BRNE _0x20400CD
00aae3 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
00aae4 c16e      	RJMP _0x20400CB
                 _0x20400CC:
00aae5 30e1      	CPI  R30,LOW(0x1)
00aae6 f011      	BREQ PC+3
00aae7 940c ab43 	JMP _0x20400CE
00aae9 e4e9      	LDI  R30,LOW(73)
00aaea 93ea      	ST   -Y,R30
                +
00aaeb e0a0     +LDI R26 , LOW ( 0x0 )
00aaec e0b0     +LDI R27 , HIGH ( 0x0 )
00aaed e080     +LDI R24 , BYTE3 ( 0x0 )
00aaee e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aaef ddab      	RCALL _send_cmd_G102
00aaf0 30e0      	CPI  R30,0
00aaf1 f449      	BRNE _0x20400D0
00aaf2 01fe      	MOVW R30,R28
00aaf3 9636      	ADIW R30,6
00aaf4 93fa      	ST   -Y,R31
00aaf5 93ea      	ST   -Y,R30
00aaf6 e1a0      	LDI  R26,LOW(16)
00aaf7 e0b0      	LDI  R27,0
00aaf8 dcf9      	RCALL _rx_datablock_G102
00aaf9 30e0      	CPI  R30,0
00aafa f409      	BRNE _0x20400D1
                 _0x20400D0:
00aafb c046      	RJMP _0x20400CF
                 _0x20400D1:
00aafc 81ee      	LDD  R30,Y+6
00aafd 95e2      	SWAP R30
00aafe 70ef      	ANDI R30,0xF
00aaff 95e6      	LSR  R30
00ab00 95e6      	LSR  R30
00ab01 30e1      	CPI  R30,LOW(0x1)
00ab02 f469      	BRNE _0x20400D2
00ab03 e0e0      	LDI  R30,0
00ab04 85fe      	LDD  R31,Y+14
00ab05 85af      	LDD  R26,Y+15
00ab06 e0b0      	LDI  R27,0
00ab07 0fea      	ADD  R30,R26
00ab08 1ffb      	ADC  R31,R27
00ab09 9631      	ADIW R30,1
00ab0a 019f      	MOVW R18,R30
00ab0b 01d9      	MOVW R26,R18
00ab0c 2788      	CLR  R24
00ab0d 2799      	CLR  R25
00ab0e e0ea      	LDI  R30,LOW(10)
00ab0f c02c      	RJMP _0x2040101
                 _0x20400D2:
00ab10 85eb      	LDD  R30,Y+11
00ab11 70ef      	ANDI R30,LOW(0xF)
00ab12 2fae      	MOV  R26,R30
00ab13 89e8      	LDD  R30,Y+16
00ab14 78e0      	ANDI R30,LOW(0x80)
00ab15 1fee      	ROL  R30
00ab16 e0e0      	LDI  R30,0
00ab17 1fee      	ROL  R30
00ab18 0fae      	ADD  R26,R30
00ab19 85ef      	LDD  R30,Y+15
00ab1a 70e3      	ANDI R30,LOW(0x3)
00ab1b 0fee      	LSL  R30
00ab1c 0fea      	ADD  R30,R26
00ab1d 5fee      	SUBI R30,-LOW(2)
00ab1e 2f0e      	MOV  R16,R30
00ab1f 85ee      	LDD  R30,Y+14
00ab20 95e2      	SWAP R30
00ab21 70ef      	ANDI R30,0xF
00ab22 95e6      	LSR  R30
00ab23 95e6      	LSR  R30
00ab24 2fae      	MOV  R26,R30
00ab25 85ed      	LDD  R30,Y+13
00ab26 e0f0      	LDI  R31,0
00ab27 940e e1cb 	CALL __LSLW2
00ab29 e0b0      	LDI  R27,0
00ab2a 0fae      	ADD  R26,R30
00ab2b 1fbf      	ADC  R27,R31
00ab2c 85ec      	LDD  R30,Y+12
00ab2d 70e3      	ANDI R30,LOW(0x3)
00ab2e e0f0      	LDI  R31,0
00ab2f 940e e1cb 	CALL __LSLW2
00ab31 2ffe      	MOV  R31,R30
00ab32 e0e0      	LDI  R30,0
00ab33 0fea      	ADD  R30,R26
00ab34 1ffb      	ADC  R31,R27
00ab35 9631      	ADIW R30,1
00ab36 019f      	MOVW R18,R30
00ab37 01d9      	MOVW R26,R18
00ab38 2788      	CLR  R24
00ab39 2799      	CLR  R25
00ab3a 2fe0      	MOV  R30,R16
00ab3b 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
00ab3c 940e e1af 	CALL __LSLD12
00ab3e 01da      	MOVW R26,R20
00ab3f 940e e2ff 	CALL __PUTDP1
00ab41 e010      	LDI  R17,LOW(0)
                 _0x20400CF:
00ab42 c110      	RJMP _0x20400CB
                 _0x20400CE:
00ab43 30e2      	CPI  R30,LOW(0x2)
00ab44 f439      	BRNE _0x20400D4
00ab45 01da      	MOVW R26,R20
00ab46 e0e0      	LDI  R30,LOW(512)
00ab47 e0f2      	LDI  R31,HIGH(512)
00ab48 93ed      	ST   X+,R30
00ab49 93fc      	ST   X,R31
00ab4a e010      	LDI  R17,LOW(0)
00ab4b c107      	RJMP _0x20400CB
                 _0x20400D4:
00ab4c 30e3      	CPI  R30,LOW(0x3)
00ab4d f011      	BREQ PC+3
00ab4e 940c abf8 	JMP _0x20400D5
00ab50 91e0 1ab0 	LDS  R30,_card_type_G102
00ab52 70e4      	ANDI R30,LOW(0x4)
00ab53 f179      	BREQ _0x20400D6
00ab54 eced      	LDI  R30,LOW(205)
00ab55 93ea      	ST   -Y,R30
                +
00ab56 e0a0     +LDI R26 , LOW ( 0x0 )
00ab57 e0b0     +LDI R27 , HIGH ( 0x0 )
00ab58 e080     +LDI R24 , BYTE3 ( 0x0 )
00ab59 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ab5a dd40      	RCALL _send_cmd_G102
00ab5b 30e0      	CPI  R30,0
00ab5c f529      	BRNE _0x20400D7
00ab5d efef      	LDI  R30,LOW(255)
00ab5e bdee      	OUT  0x2E,R30
                 _0x20400D8:
00ab5f b5ed      	IN   R30,0x2D
00ab60 ffe7      	SBRS R30,7
00ab61 cffd      	RJMP _0x20400D8
00ab62 01fe      	MOVW R30,R28
00ab63 9636      	ADIW R30,6
00ab64 93fa      	ST   -Y,R31
00ab65 93ea      	ST   -Y,R30
00ab66 e1a0      	LDI  R26,LOW(16)
00ab67 e0b0      	LDI  R27,0
00ab68 dc89      	RCALL _rx_datablock_G102
00ab69 30e0      	CPI  R30,0
00ab6a f0b9      	BREQ _0x20400DB
00ab6b e300      	LDI  R16,LOW(48)
                 _0x20400DD:
00ab6c 3000      	CPI  R16,0
00ab6d f039      	BREQ _0x20400DE
00ab6e efef      	LDI  R30,LOW(255)
00ab6f bdee      	OUT  0x2E,R30
                 _0x20400DF:
00ab70 b5ed      	IN   R30,0x2D
00ab71 ffe7      	SBRS R30,7
00ab72 cffd      	RJMP _0x20400DF
00ab73 5001      	SUBI R16,1
00ab74 cff7      	RJMP _0x20400DD
                 _0x20400DE:
00ab75 89e8      	LDD  R30,Y+16
00ab76 95e2      	SWAP R30
00ab77 70ef      	ANDI R30,0xF
                +
00ab78 e1a0     +LDI R26 , LOW ( 0x10 )
00ab79 e0b0     +LDI R27 , HIGH ( 0x10 )
00ab7a e080     +LDI R24 , BYTE3 ( 0x10 )
00ab7b e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00ab7c 940e e1af 	CALL __LSLD12
00ab7e 01da      	MOVW R26,R20
00ab7f 940e e2ff 	CALL __PUTDP1
00ab81 e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
00ab82 c074      	RJMP _0x20400E2
                 _0x20400D6:
00ab83 e4e9      	LDI  R30,LOW(73)
00ab84 93ea      	ST   -Y,R30
                +
00ab85 e0a0     +LDI R26 , LOW ( 0x0 )
00ab86 e0b0     +LDI R27 , HIGH ( 0x0 )
00ab87 e080     +LDI R24 , BYTE3 ( 0x0 )
00ab88 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ab89 dd11      	RCALL _send_cmd_G102
00ab8a 30e0      	CPI  R30,0
00ab8b f449      	BRNE _0x20400E4
00ab8c 01fe      	MOVW R30,R28
00ab8d 9636      	ADIW R30,6
00ab8e 93fa      	ST   -Y,R31
00ab8f 93ea      	ST   -Y,R30
00ab90 e1a0      	LDI  R26,LOW(16)
00ab91 e0b0      	LDI  R27,0
00ab92 dc5f      	RCALL _rx_datablock_G102
00ab93 30e0      	CPI  R30,0
00ab94 f409      	BRNE _0x20400E5
                 _0x20400E4:
00ab95 c061      	RJMP _0x20400E3
                 _0x20400E5:
00ab96 91e0 1ab0 	LDS  R30,_card_type_G102
00ab98 70e2      	ANDI R30,LOW(0x2)
00ab99 f151      	BREQ _0x20400E6
00ab9a 89e8      	LDD  R30,Y+16
00ab9b 73ef      	ANDI R30,LOW(0x3F)
00ab9c 27ff      	CLR  R31
00ab9d 2766      	CLR  R22
00ab9e 2777      	CLR  R23
00ab9f 940e e1e7 	CALL __LSLD1
00aba1 937f      	PUSH R23
00aba2 936f      	PUSH R22
00aba3 93ff      	PUSH R31
00aba4 93ef      	PUSH R30
00aba5 89e9      	LDD  R30,Y+17
00aba6 78e0      	ANDI R30,LOW(0x80)
00aba7 27ff      	CLR  R31
00aba8 2766      	CLR  R22
00aba9 2777      	CLR  R23
00abaa 01df      	MOVW R26,R30
00abab 01cb      	MOVW R24,R22
00abac e0e7      	LDI  R30,LOW(7)
00abad 940e e1bb 	CALL __LSRD12
00abaf 91af      	POP  R26
00abb0 91bf      	POP  R27
00abb1 918f      	POP  R24
00abb2 919f      	POP  R25
00abb3 940e e17c 	CALL __ADDD12
                +
00abb5 5fef     +SUBI R30 , LOW ( - 1 )
00abb6 4fff     +SBCI R31 , HIGH ( - 1 )
00abb7 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00abb8 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00abb9 01df      	MOVW R26,R30
00abba 01cb      	MOVW R24,R22
00abbb 89eb      	LDD  R30,Y+19
00abbc 95e2      	SWAP R30
00abbd 70ef      	ANDI R30,0xF
00abbe 95e6      	LSR  R30
00abbf 95e6      	LSR  R30
00abc0 50e1      	SUBI R30,LOW(1)
00abc1 940e e1af 	CALL __LSLD12
00abc3 c02f      	RJMP _0x2040102
                 _0x20400E6:
00abc4 89e8      	LDD  R30,Y+16
00abc5 77ec      	ANDI R30,LOW(0x7C)
00abc6 95e6      	LSR  R30
00abc7 95e6      	LSR  R30
00abc8 27ff      	CLR  R31
00abc9 2766      	CLR  R22
00abca 2777      	CLR  R23
                +
00abcb 5fef     +SUBI R30 , LOW ( - 1 )
00abcc 4fff     +SBCI R31 , HIGH ( - 1 )
00abcd 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00abce 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00abcf 937f      	PUSH R23
00abd0 936f      	PUSH R22
00abd1 93ff      	PUSH R31
00abd2 93ef      	PUSH R30
00abd3 89e9      	LDD  R30,Y+17
00abd4 70e3      	ANDI R30,LOW(0x3)
00abd5 27ff      	CLR  R31
00abd6 2766      	CLR  R22
00abd7 2777      	CLR  R23
00abd8 01df      	MOVW R26,R30
00abd9 01cb      	MOVW R24,R22
00abda e0e3      	LDI  R30,LOW(3)
00abdb 940e e1af 	CALL __LSLD12
00abdd 01df      	MOVW R26,R30
00abde 01cb      	MOVW R24,R22
00abdf 89e9      	LDD  R30,Y+17
00abe0 7ee0      	ANDI R30,LOW(0xE0)
00abe1 95e2      	SWAP R30
00abe2 70ef      	ANDI R30,0xF
00abe3 95e6      	LSR  R30
00abe4 27ff      	CLR  R31
00abe5 2766      	CLR  R22
00abe6 2777      	CLR  R23
00abe7 940e e17c 	CALL __ADDD12
                +
00abe9 5fef     +SUBI R30 , LOW ( - 1 )
00abea 4fff     +SBCI R31 , HIGH ( - 1 )
00abeb 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00abec 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00abed 91af      	POP  R26
00abee 91bf      	POP  R27
00abef 918f      	POP  R24
00abf0 919f      	POP  R25
00abf1 940e e222 	CALL __MULD12U
                 _0x2040102:
00abf3 01da      	MOVW R26,R20
00abf4 940e e2ff 	CALL __PUTDP1
00abf6 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
00abf7 c05b      	RJMP _0x20400CB
                 _0x20400D5:
00abf8 30ea      	CPI  R30,LOW(0xA)
00abf9 f431      	BRNE _0x20400E8
00abfa 91e0 1ab0 	LDS  R30,_card_type_G102
00abfc 01da      	MOVW R26,R20
00abfd 93ec      	ST   X,R30
00abfe e010      	LDI  R17,LOW(0)
00abff c053      	RJMP _0x20400CB
                 _0x20400E8:
00ac00 30eb      	CPI  R30,LOW(0xB)
00ac01 f499      	BRNE _0x20400E9
00ac02 e4e9      	LDI  R30,LOW(73)
00ac03 93ea      	ST   -Y,R30
                +
00ac04 e0a0     +LDI R26 , LOW ( 0x0 )
00ac05 e0b0     +LDI R27 , HIGH ( 0x0 )
00ac06 e080     +LDI R24 , BYTE3 ( 0x0 )
00ac07 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ac08 dc92      	RCALL _send_cmd_G102
00ac09 30e0      	CPI  R30,0
00ac0a f439      	BRNE _0x20400EB
00ac0b 935a      	ST   -Y,R21
00ac0c 934a      	ST   -Y,R20
00ac0d e1a0      	LDI  R26,LOW(16)
00ac0e e0b0      	LDI  R27,0
00ac0f dbe2      	RCALL _rx_datablock_G102
00ac10 30e0      	CPI  R30,0
00ac11 f409      	BRNE _0x20400EC
                 _0x20400EB:
00ac12 c001      	RJMP _0x20400EA
                 _0x20400EC:
00ac13 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
00ac14 c03e      	RJMP _0x20400CB
                 _0x20400E9:
00ac15 30ec      	CPI  R30,LOW(0xC)
00ac16 f499      	BRNE _0x20400ED
00ac17 e4ea      	LDI  R30,LOW(74)
00ac18 93ea      	ST   -Y,R30
                +
00ac19 e0a0     +LDI R26 , LOW ( 0x0 )
00ac1a e0b0     +LDI R27 , HIGH ( 0x0 )
00ac1b e080     +LDI R24 , BYTE3 ( 0x0 )
00ac1c e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ac1d dc7d      	RCALL _send_cmd_G102
00ac1e 30e0      	CPI  R30,0
00ac1f f439      	BRNE _0x20400EF
00ac20 935a      	ST   -Y,R21
00ac21 934a      	ST   -Y,R20
00ac22 e1a0      	LDI  R26,LOW(16)
00ac23 e0b0      	LDI  R27,0
00ac24 dbcd      	RCALL _rx_datablock_G102
00ac25 30e0      	CPI  R30,0
00ac26 f409      	BRNE _0x20400F0
                 _0x20400EF:
00ac27 c001      	RJMP _0x20400EE
                 _0x20400F0:
00ac28 e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00ac29 c029      	RJMP _0x20400CB
                 _0x20400ED:
00ac2a 30ed      	CPI  R30,LOW(0xD)
00ac2b f469      	BRNE _0x20400F1
00ac2c e7ea      	LDI  R30,LOW(122)
00ac2d 93ea      	ST   -Y,R30
                +
00ac2e e0a0     +LDI R26 , LOW ( 0x0 )
00ac2f e0b0     +LDI R27 , HIGH ( 0x0 )
00ac30 e080     +LDI R24 , BYTE3 ( 0x0 )
00ac31 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ac32 dc68      	RCALL _send_cmd_G102
00ac33 30e0      	CPI  R30,0
00ac34 f419      	BRNE _0x20400F2
00ac35 01da      	MOVW R26,R20
00ac36 dcc6      	RCALL _rx_spi4_G102
00ac37 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
00ac38 c01a      	RJMP _0x20400CB
                 _0x20400F1:
00ac39 30ee      	CPI  R30,LOW(0xE)
00ac3a f4b9      	BRNE _0x20400F9
00ac3b eced      	LDI  R30,LOW(205)
00ac3c 93ea      	ST   -Y,R30
                +
00ac3d e0a0     +LDI R26 , LOW ( 0x0 )
00ac3e e0b0     +LDI R27 , HIGH ( 0x0 )
00ac3f e080     +LDI R24 , BYTE3 ( 0x0 )
00ac40 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ac41 dc59      	RCALL _send_cmd_G102
00ac42 30e0      	CPI  R30,0
00ac43 f469      	BRNE _0x20400F4
00ac44 efef      	LDI  R30,LOW(255)
00ac45 bdee      	OUT  0x2E,R30
                 _0x20400F5:
00ac46 b5ed      	IN   R30,0x2D
00ac47 ffe7      	SBRS R30,7
00ac48 cffd      	RJMP _0x20400F5
00ac49 935a      	ST   -Y,R21
00ac4a 934a      	ST   -Y,R20
00ac4b e4a0      	LDI  R26,LOW(64)
00ac4c e0b0      	LDI  R27,0
00ac4d dba4      	RCALL _rx_datablock_G102
00ac4e 30e0      	CPI  R30,0
00ac4f f009      	BREQ _0x20400F8
00ac50 e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
00ac51 c001      	RJMP _0x20400CB
                 _0x20400F9:
00ac52 e014      	LDI  R17,LOW(4)
                 _0x20400CB:
00ac53 db97      	RCALL _release_spi_G102
00ac54 2fe1      	MOV  R30,R17
                 _0x20E0022:
00ac55 940e e3a0 	CALL __LOADLOCR6
00ac57 966a      	ADIW R28,26
00ac58 9508      	RET
                 _disk_timerproc:
00ac59 931a      	ST   -Y,R17
00ac5a 930a      	ST   -Y,R16
00ac5b 9110 1aae 	LDS  R17,_timer1_G102
00ac5d 3010      	CPI  R17,0
00ac5e f019      	BREQ _0x20400FA
00ac5f 5011      	SUBI R17,LOW(1)
00ac60 9310 1aae 	STS  _timer1_G102,R17
                 _0x20400FA:
00ac62 9110 1aaf 	LDS  R17,_timer2_G102
00ac64 3010      	CPI  R17,0
00ac65 f019      	BREQ _0x20400FB
00ac66 5011      	SUBI R17,LOW(1)
00ac67 9310 1aaf 	STS  _timer2_G102,R17
                 _0x20400FB:
00ac69 9110 1ab1 	LDS  R17,_pv_S102000B000
00ac6b b1e0      	IN   R30,0x0
00ac6c 70e2      	ANDI R30,LOW(0x2)
00ac6d 2fae      	MOV  R26,R30
00ac6e b1e0      	IN   R30,0x0
00ac6f 70e1      	ANDI R30,LOW(0x1)
00ac70 2bea      	OR   R30,R26
00ac71 93e0 1ab1 	STS  _pv_S102000B000,R30
00ac73 17e1      	CP   R30,R17
00ac74 f481      	BRNE _0x20400FC
00ac75 9100 1aad 	LDS  R16,_status_G102
00ac77 70e2      	ANDI R30,LOW(0x2)
00ac78 f011      	BREQ _0x20400FD
00ac79 6004      	ORI  R16,LOW(4)
00ac7a c001      	RJMP _0x20400FE
                 _0x20400FD:
00ac7b 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
00ac7c 91e0 1ab1 	LDS  R30,_pv_S102000B000
00ac7e 70e1      	ANDI R30,LOW(0x1)
00ac7f f011      	BREQ _0x20400FF
00ac80 6003      	ORI  R16,LOW(3)
00ac81 c001      	RJMP _0x2040100
                 _0x20400FF:
00ac82 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
00ac83 9300 1aad 	STS  _status_G102,R16
                 _0x20400FC:
00ac85 9109      	LD   R16,Y+
00ac86 9119      	LD   R17,Y+
00ac87 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
00ac88 9727      	SBIW R28,7
00ac89 91a0 1463 	LDS  R26,_prtc_get_time
00ac8b 91b0 1464 	LDS  R27,_prtc_get_time+1
00ac8d 9180 1465 	LDS  R24,_prtc_get_time+2
00ac8f 9190 1466 	LDS  R25,_prtc_get_time+3
00ac91 940e e389 	CALL __CPD02
00ac93 f059      	BREQ _0x2060004
00ac94 91a0 1467 	LDS  R26,_prtc_get_date
00ac96 91b0 1468 	LDS  R27,_prtc_get_date+1
00ac98 9180 1469 	LDS  R24,_prtc_get_date+2
00ac9a 9190 146a 	LDS  R25,_prtc_get_date+3
00ac9c 940e e389 	CALL __CPD02
00ac9e f429      	BRNE _0x2060003
                 _0x2060004:
                +
00ac9f e0e0     +LDI R30 , LOW ( 0x3A210000 )
00aca0 e0f0     +LDI R31 , HIGH ( 0x3A210000 )
00aca1 e261     +LDI R22 , BYTE3 ( 0x3A210000 )
00aca2 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
00aca3 c070      	RJMP _0x20E0021
                 _0x2060003:
00aca4 940e c440 	CALL SUBOPT_0x56
00aca6 940e c49a 	CALL SUBOPT_0x63
00aca8 01de      	MOVW R26,R28
00aca9 9618      	ADIW R26,8
                +
00acaa 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
00acac 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
00acae 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
00acb0 bf6c     +OUT EIND , R22
00acb1 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
00acb2 01fe      	MOVW R30,R28
00acb3 9633      	ADIW R30,3
00acb4 940e d312 	CALL SUBOPT_0x29B
00acb6 01de      	MOVW R26,R28
00acb7 9614      	ADIW R26,4
                +
00acb8 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
00acba 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
00acbc 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
00acbe bf6c     +OUT EIND , R22
00acbf 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
00acc0 81e8      	LD   R30,Y
00acc1 81f9      	LDD  R31,Y+1
00acc2 5bec      	SUBI R30,LOW(1980)
00acc3 40f7      	SBCI R31,HIGH(1980)
00acc4 2766      	CLR  R22
00acc5 2777      	CLR  R23
00acc6 01df      	MOVW R26,R30
00acc7 01cb      	MOVW R24,R22
00acc8 e1e9      	LDI  R30,LOW(25)
00acc9 940e e1af 	CALL __LSLD12
00accb 937f      	PUSH R23
00accc 936f      	PUSH R22
00accd 93ff      	PUSH R31
00acce 93ef      	PUSH R30
00accf 81ea      	LDD  R30,Y+2
00acd0 940e dc13 	CALL SUBOPT_0x3AB
00acd2 01df      	MOVW R26,R30
00acd3 01cb      	MOVW R24,R22
00acd4 e1e5      	LDI  R30,LOW(21)
00acd5 940e e1af 	CALL __LSLD12
00acd7 91af      	POP  R26
00acd8 91bf      	POP  R27
00acd9 918f      	POP  R24
00acda 919f      	POP  R25
00acdb 940e e195 	CALL __ORD12
00acdd 01df      	MOVW R26,R30
00acde 01cb      	MOVW R24,R22
00acdf 81eb      	LDD  R30,Y+3
00ace0 940e dc13 	CALL SUBOPT_0x3AB
00ace2 940e e1f6 	CALL __LSLD16
00ace4 940e e195 	CALL __ORD12
00ace6 937f      	PUSH R23
00ace7 936f      	PUSH R22
00ace8 93ff      	PUSH R31
00ace9 93ef      	PUSH R30
00acea 81ee      	LDD  R30,Y+6
00aceb 940e dc13 	CALL SUBOPT_0x3AB
00aced 01df      	MOVW R26,R30
00acee 01cb      	MOVW R24,R22
00acef e0eb      	LDI  R30,LOW(11)
00acf0 940e e1af 	CALL __LSLD12
00acf2 91af      	POP  R26
00acf3 91bf      	POP  R27
00acf4 918f      	POP  R24
00acf5 919f      	POP  R25
00acf6 940e e195 	CALL __ORD12
00acf8 937f      	PUSH R23
00acf9 936f      	PUSH R22
00acfa 93ff      	PUSH R31
00acfb 93ef      	PUSH R30
00acfc 81ed      	LDD  R30,Y+5
00acfd 940e dc13 	CALL SUBOPT_0x3AB
00acff 01df      	MOVW R26,R30
00ad00 01cb      	MOVW R24,R22
00ad01 e0e5      	LDI  R30,LOW(5)
00ad02 940e e1af 	CALL __LSLD12
00ad04 91af      	POP  R26
00ad05 91bf      	POP  R27
00ad06 918f      	POP  R24
00ad07 919f      	POP  R25
00ad08 940e e195 	CALL __ORD12
00ad0a 01df      	MOVW R26,R30
00ad0b 01cb      	MOVW R24,R22
00ad0c 81ec      	LDD  R30,Y+4
00ad0d e0f0      	LDI  R31,0
00ad0e 95f5      	ASR  R31
00ad0f 95e7      	ROR  R30
00ad10 940e e201 	CALL __CWD1
00ad12 940e e195 	CALL __ORD12
                 _0x20E0021:
00ad14 9627      	ADIW R28,7
00ad15 9508      	RET
                 _mem_cpy_G103:
00ad16 940e c55a 	CALL SUBOPT_0x7F
                +
00ad18 8508     +LDD R16 , Y + 8
00ad19 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00ad1a 812e     +LDD R18 , Y + 6
00ad1b 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
00ad1c 81ec      	LDD  R30,Y+4
00ad1d 81fd      	LDD  R31,Y+4+1
00ad1e 9731      	SBIW R30,1
00ad1f 83ec      	STD  Y+4,R30
00ad20 83fd      	STD  Y+4+1,R31
00ad21 9631      	ADIW R30,1
00ad22 f061      	BREQ _0x2060008
00ad23 931f      	PUSH R17
00ad24 930f      	PUSH R16
                +
00ad25 5f0f     +SUBI R16 , LOW ( - 1 )
00ad26 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ad27 01d9      	MOVW R26,R18
                +
00ad28 5f2f     +SUBI R18 , LOW ( - 1 )
00ad29 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ad2a 91ec      	LD   R30,X
00ad2b 91af      	POP  R26
00ad2c 91bf      	POP  R27
00ad2d 93ec      	ST   X,R30
00ad2e cfed      	RJMP _0x2060006
                 _0x2060008:
00ad2f 940e e3a2 	CALL __LOADLOCR4
00ad31 c433      	RJMP _0x20E0018
                 _mem_set_G103:
00ad32 940e c566 	CALL SUBOPT_0x81
                +
00ad34 810e     +LDD R16 , Y + 6
00ad35 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
00ad36 81ea      	LDD  R30,Y+2
00ad37 81fb      	LDD  R31,Y+2+1
00ad38 9731      	SBIW R30,1
00ad39 83ea      	STD  Y+2,R30
00ad3a 83fb      	STD  Y+2+1,R31
00ad3b 9631      	ADIW R30,1
00ad3c f049      	BREQ _0x206000E
00ad3d 931f      	PUSH R17
00ad3e 930f      	PUSH R16
                +
00ad3f 5f0f     +SUBI R16 , LOW ( - 1 )
00ad40 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ad41 81ec      	LDD  R30,Y+4
00ad42 91af      	POP  R26
00ad43 91bf      	POP  R27
00ad44 93ec      	ST   X,R30
00ad45 cff0      	RJMP _0x206000C
                 _0x206000E:
00ad46 8119      	LDD  R17,Y+1
00ad47 8108      	LDD  R16,Y+0
                 _0x20E0020:
00ad48 9628      	ADIW R28,8
00ad49 9508      	RET
                 _mem_cmp_G103:
00ad4a 940e cc63 	CALL SUBOPT_0x1A7
                +
00ad4c 850a     +LDD R16 , Y + 10
00ad4d 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
00ad4e 8528     +LDD R18 , Y + 8
00ad4f 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
00ad50 e040     +LDI R20 , LOW ( 0 )
00ad51 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
00ad52 81ee      	LDD  R30,Y+6
00ad53 81ff      	LDD  R31,Y+6+1
00ad54 9731      	SBIW R30,1
00ad55 83ee      	STD  Y+6,R30
00ad56 83ff      	STD  Y+6+1,R31
00ad57 9631      	ADIW R30,1
00ad58 f081      	BREQ _0x2060012
00ad59 01d8      	MOVW R26,R16
                +
00ad5a 5f0f     +SUBI R16 , LOW ( - 1 )
00ad5b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ad5c 900c      	LD   R0,X
00ad5d 2411      	CLR  R1
00ad5e 01d9      	MOVW R26,R18
                +
00ad5f 5f2f     +SUBI R18 , LOW ( - 1 )
00ad60 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ad61 91ac      	LD   R26,X
00ad62 27bb      	CLR  R27
00ad63 01f0      	MOVW R30,R0
00ad64 1bea      	SUB  R30,R26
00ad65 0bfb      	SBC  R31,R27
00ad66 01af      	MOVW R20,R30
00ad67 9730      	SBIW R30,0
00ad68 f009      	BREQ _0x2060013
                 _0x2060012:
00ad69 c001      	RJMP _0x2060011
                 _0x2060013:
00ad6a cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
00ad6b 01fa      	MOVW R30,R20
                 _0x20E001E:
00ad6c 940e e3a0 	CALL __LOADLOCR6
00ad6e 962c      	ADIW R28,12
00ad6f 9508      	RET
                 _chk_chrf_G103:
00ad70 93ba      	ST   -Y,R27
00ad71 93aa      	ST   -Y,R26
                 _0x2060014:
00ad72 940e c6ac 	CALL SUBOPT_0xB3
                +
00ad74 bf6b     +OUT RAMPZ , R22
00ad75 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00ad76 30e0      	CPI  R30,0
00ad77 f051      	BREQ _0x2060017
00ad78 940e c6ac 	CALL SUBOPT_0xB3
                +
00ad7a bf6b     +OUT RAMPZ , R22
00ad7b 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00ad7c 81e8      	LD   R30,Y
00ad7d 81f9      	LDD  R31,Y+1
00ad7e e0b0      	LDI  R27,0
00ad7f 17ea      	CP   R30,R26
00ad80 07fb      	CPC  R31,R27
00ad81 f409      	BRNE _0x2060018
                 _0x2060017:
00ad82 c005      	RJMP _0x2060016
                 _0x2060018:
00ad83 01de      	MOVW R26,R28
00ad84 9612      	ADIW R26,2
00ad85 940e dc17 	CALL SUBOPT_0x3AC
00ad87 cfea      	RJMP _0x2060014
                 _0x2060016:
00ad88 940e c6ac 	CALL SUBOPT_0xB3
                +
00ad8a bf6b     +OUT RAMPZ , R22
00ad8b 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00ad8c e0f0      	LDI  R31,0
                 _0x20E001D:
00ad8d 9626      	ADIW R28,6
00ad8e 9508      	RET
                 _move_window_G103:
00ad8f 940e e329 	CALL __PUTPARD2
00ad91 9724      	SBIW R28,4
00ad92 931a      	ST   -Y,R17
00ad93 85a9      	LDD  R26,Y+9
00ad94 85ba      	LDD  R27,Y+9+1
00ad95 969e      	ADIW R26,46
00ad96 940e dc1f 	CALL SUBOPT_0x3AD
00ad98 940e dc26 	CALL SUBOPT_0x3AE
00ad9a 940e d303 	CALL SUBOPT_0x298
00ad9c 940e e38f 	CALL __CPD12
00ad9e f411      	BRNE PC+3
00ad9f 940c adf1 	JMP _0x2060019
00ada1 85e9      	LDD  R30,Y+9
00ada2 85fa      	LDD  R31,Y+9+1
00ada3 81e4      	LDD  R30,Z+4
00ada4 30e0      	CPI  R30,0
00ada5 f199      	BREQ _0x206001A
00ada6 940e dc2b 	CALL SUBOPT_0x3AF
00ada8 30e0      	CPI  R30,0
00ada9 f011      	BREQ _0x206001B
00adaa e0e1      	LDI  R30,LOW(1)
00adab c046      	RJMP _0x20E001C
                 _0x206001B:
00adac 85a9      	LDD  R26,Y+9
00adad 85ba      	LDD  R27,Y+9+1
00adae 9614      	ADIW R26,4
00adaf e0e0      	LDI  R30,LOW(0)
00adb0 93ec      	ST   X,R30
00adb1 85e9      	LDD  R30,Y+9
00adb2 85fa      	LDD  R31,Y+9+1
00adb3 940e dc3b 	CALL SUBOPT_0x3B0
00adb5 010d      	MOVW R0,R26
00adb6 85a9      	LDD  R26,Y+9
00adb7 85ba      	LDD  R27,Y+9+1
00adb8 965a      	ADIW R26,26
00adb9 940e e2f4 	CALL __GETD1P
00adbb 01d0      	MOVW R26,R0
00adbc 940e e17c 	CALL __ADDD12
00adbe 940e d303 	CALL SUBOPT_0x298
00adc0 940e e394 	CALL __CPD21
00adc2 f4b0      	BRSH _0x206001C
00adc3 85e9      	LDD  R30,Y+9
00adc4 85fa      	LDD  R31,Y+9+1
00adc5 8113      	LDD  R17,Z+3
                 _0x206001E:
00adc6 3012      	CPI  R17,2
00adc7 f088      	BRLO _0x206001F
00adc8 85a9      	LDD  R26,Y+9
00adc9 85ba      	LDD  R27,Y+9+1
00adca 965a      	ADIW R26,26
00adcb 940e e2f4 	CALL __GETD1P
00adcd 940e d303 	CALL SUBOPT_0x298
00adcf 940e e17c 	CALL __ADDD12
                +
00add1 83e9     +STD Y + 1 , R30
00add2 83fa     +STD Y + 1 + 1 , R31
00add3 836b     +STD Y + 1 + 2 , R22
00add4 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00add5 940e dc2b 	CALL SUBOPT_0x3AF
00add7 5011      	SUBI R17,1
00add8 cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
00add9 940e dc26 	CALL SUBOPT_0x3AE
00addb 940e e37d 	CALL __CPD10
00addd f099      	BREQ _0x2060020
00adde 85e9      	LDD  R30,Y+9
00addf 85fa      	LDD  R31,Y+9+1
00ade0 81a1      	LDD  R26,Z+1
00ade1 93aa      	ST   -Y,R26
00ade2 85ea      	LDD  R30,Y+10
00ade3 85fb      	LDD  R31,Y+10+1
00ade4 96f2      	ADIW R30,50
00ade5 940e dc40 	CALL SUBOPT_0x3B1
00ade7 f011      	BREQ _0x2060021
00ade8 e0e1      	LDI  R30,LOW(1)
00ade9 c008      	RJMP _0x20E001C
                 _0x2060021:
00adea 940e dc26 	CALL SUBOPT_0x3AE
                +
00adec 85a9     +LDD R26 , Y + 9
00aded 85ba     +LDD R27 , Y + 9 + 1
00adee 969e     +ADIW R26 , 46
00adef 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
00adf1 e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
00adf2 8118      	LDD  R17,Y+0
00adf3 962b      	ADIW R28,11
00adf4 9508      	RET
                 _sync_G103:
00adf5 93ba      	ST   -Y,R27
00adf6 93aa      	ST   -Y,R26
00adf7 931a      	ST   -Y,R17
00adf8 81e9      	LDD  R30,Y+1
00adf9 81fa      	LDD  R31,Y+1+1
00adfa 93fa      	ST   -Y,R31
00adfb 93ea      	ST   -Y,R30
00adfc 940e dc4b 	CALL SUBOPT_0x3B2
00adfe 2f1e      	MOV  R17,R30
00adff 3010      	CPI  R17,0
00ae00 f011      	BREQ PC+3
00ae01 940c ae65 	JMP _0x2060022
00ae03 81a9      	LDD  R26,Y+1
00ae04 81ba      	LDD  R27,Y+1+1
00ae05 91ac      	LD   R26,X
00ae06 30a3      	CPI  R26,LOW(0x3)
00ae07 f429      	BRNE _0x2060024
00ae08 81e9      	LDD  R30,Y+1
00ae09 81fa      	LDD  R31,Y+1+1
00ae0a 81e5      	LDD  R30,Z+5
00ae0b 30e0      	CPI  R30,0
00ae0c f409      	BRNE _0x2060025
                 _0x2060024:
00ae0d c04b      	RJMP _0x2060023
                 _0x2060025:
00ae0e 81a9      	LDD  R26,Y+1
00ae0f 81ba      	LDD  R27,Y+1+1
00ae10 969e      	ADIW R26,46
00ae11 940e c5b8 	CALL SUBOPT_0x8F
00ae13 81e9      	LDD  R30,Y+1
00ae14 81fa      	LDD  R31,Y+1+1
00ae15 940e dc4f 	CALL SUBOPT_0x3B3
00ae17 81e9      	LDD  R30,Y+1
00ae18 81fa      	LDD  R31,Y+1+1
00ae19 96f2      	ADIW R30,50
00ae1a 50e2      	SUBI R30,LOW(-510)
00ae1b 4ffe      	SBCI R31,HIGH(-510)
00ae1c e5a5      	LDI  R26,LOW(43605)
00ae1d eaba      	LDI  R27,HIGH(43605)
00ae1e 83a0      	STD  Z+0,R26
00ae1f 83b1      	STD  Z+1,R27
00ae20 81e9      	LDD  R30,Y+1
00ae21 81fa      	LDD  R31,Y+1+1
00ae22 96f2      	ADIW R30,50
                +
00ae23 e5a2     +LDI R26 , LOW ( 0x41615252 )
00ae24 e5b2     +LDI R27 , HIGH ( 0x41615252 )
00ae25 e681     +LDI R24 , BYTE3 ( 0x41615252 )
00ae26 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
00ae27 940e d198 	CALL SUBOPT_0x261
00ae29 81e9      	LDD  R30,Y+1
00ae2a 81fa      	LDD  R31,Y+1+1
00ae2b 96f2      	ADIW R30,50
00ae2c 51ec      	SUBI R30,LOW(-484)
00ae2d 4ffe      	SBCI R31,HIGH(-484)
                +
00ae2e e7a2     +LDI R26 , LOW ( 0x61417272 )
00ae2f e7b2     +LDI R27 , HIGH ( 0x61417272 )
00ae30 e481     +LDI R24 , BYTE3 ( 0x61417272 )
00ae31 e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00ae32 940e d198 	CALL SUBOPT_0x261
00ae34 81e9      	LDD  R30,Y+1
00ae35 81fa      	LDD  R31,Y+1+1
00ae36 96f2      	ADIW R30,50
00ae37 51e8      	SUBI R30,LOW(-488)
00ae38 4ffe      	SBCI R31,HIGH(-488)
00ae39 010f      	MOVW R0,R30
00ae3a 81a9      	LDD  R26,Y+1
00ae3b 81ba      	LDD  R27,Y+1+1
00ae3c 961e      	ADIW R26,14
00ae3d 940e dc5a 	CALL SUBOPT_0x3B4
00ae3f 96f2      	ADIW R30,50
00ae40 51e4      	SUBI R30,LOW(-492)
00ae41 4ffe      	SBCI R31,HIGH(-492)
00ae42 010f      	MOVW R0,R30
00ae43 81a9      	LDD  R26,Y+1
00ae44 81ba      	LDD  R27,Y+1+1
00ae45 961a      	ADIW R26,10
00ae46 940e dc5a 	CALL SUBOPT_0x3B4
00ae48 81a1      	LDD  R26,Z+1
00ae49 93aa      	ST   -Y,R26
00ae4a 81ea      	LDD  R30,Y+2
00ae4b 81fb      	LDD  R31,Y+2+1
00ae4c 96f2      	ADIW R30,50
00ae4d 93fa      	ST   -Y,R31
00ae4e 93ea      	ST   -Y,R30
00ae4f 81ec      	LDD  R30,Y+4
00ae50 81fd      	LDD  R31,Y+4+1
00ae51 940e dc62 	CALL SUBOPT_0x3B5
00ae53 dbfe      	RCALL _disk_write
00ae54 81a9      	LDD  R26,Y+1
00ae55 81ba      	LDD  R27,Y+1+1
00ae56 9615      	ADIW R26,5
00ae57 e0e0      	LDI  R30,LOW(0)
00ae58 93ec      	ST   X,R30
                 _0x2060023:
00ae59 81e9      	LDD  R30,Y+1
00ae5a 81fa      	LDD  R31,Y+1+1
00ae5b 81a1      	LDD  R26,Z+1
00ae5c 93aa      	ST   -Y,R26
00ae5d e0e0      	LDI  R30,LOW(0)
00ae5e 93ea      	ST   -Y,R30
00ae5f e0a0      	LDI  R26,LOW(0)
00ae60 e0b0      	LDI  R27,HIGH(0)
00ae61 dc67      	RCALL _disk_ioctl
00ae62 30e0      	CPI  R30,0
00ae63 f009      	BREQ _0x2060026
00ae64 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
00ae65 2fe1      	MOV  R30,R17
                 _0x20E001B:
00ae66 8118      	LDD  R17,Y+0
00ae67 9623      	ADIW R28,3
00ae68 9508      	RET
                 _get_fat:
00ae69 940e e329 	CALL __PUTPARD2
00ae6b 9724      	SBIW R28,4
00ae6c 940e e39b 	CALL __SAVELOCR4
00ae6e 940e c78f 	CALL SUBOPT_0xD8
00ae70 940e dc6a 	CALL SUBOPT_0x3B6
00ae72 f050      	BRLO _0x2060028
00ae73 85ac      	LDD  R26,Y+12
00ae74 85bd      	LDD  R27,Y+12+1
00ae75 965e      	ADIW R26,30
00ae76 940e e2f4 	CALL __GETD1P
00ae78 940e c78f 	CALL SUBOPT_0xD8
00ae7a 940e e394 	CALL __CPD21
00ae7c f018      	BRLO _0x2060027
                 _0x2060028:
00ae7d 940e dc72 	CALL SUBOPT_0x3B7
00ae7f c071      	RJMP _0x20E001A
                 _0x2060027:
00ae80 85ac      	LDD  R26,Y+12
00ae81 85bd      	LDD  R27,Y+12+1
00ae82 9692      	ADIW R26,34
00ae83 940e dc77 	CALL SUBOPT_0x3B8
00ae85 85ac      	LDD  R26,Y+12
00ae86 85bd      	LDD  R27,Y+12+1
00ae87 91ec      	LD   R30,X
00ae88 940e cf33 	CALL SUBOPT_0x214
00ae8a f581      	BRNE _0x206002D
                +
00ae8b 8528     +LDD R18 , Y + 8
00ae8c 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
00ae8d 01f9      	MOVW R30,R18
00ae8e 95f6      	LSR  R31
00ae8f 95e7      	ROR  R30
                +
00ae90 0f2e     +ADD R18 , R30
00ae91 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
00ae92 940e cc8e 	CALL SUBOPT_0x1AE
00ae94 940e dc7b 	CALL SUBOPT_0x3B9
00ae96 940e dc82 	CALL SUBOPT_0x3BA
00ae98 f009      	BREQ _0x206002E
00ae99 c055      	RJMP _0x206002C
                 _0x206002E:
00ae9a 940e dc88 	CALL SUBOPT_0x3BB
00ae9c 910c      	LD   R16,X
00ae9d 2711      	CLR  R17
                +
00ae9e 5f2f     +SUBI R18 , LOW ( - 1 )
00ae9f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00aea0 940e cc8e 	CALL SUBOPT_0x1AE
00aea2 940e dc7b 	CALL SUBOPT_0x3B9
00aea4 940e dc82 	CALL SUBOPT_0x3BA
00aea6 f009      	BREQ _0x206002F
00aea7 c047      	RJMP _0x206002C
                 _0x206002F:
00aea8 940e dc88 	CALL SUBOPT_0x3BB
00aeaa 91ec      	LD   R30,X
00aeab 2ffe      	MOV  R31,R30
00aeac e0e0      	LDI  R30,0
                +
00aead 2b0e     +OR R16 , R30
00aeae 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
00aeaf 85e8      	LDD  R30,Y+8
00aeb0 70e1      	ANDI R30,LOW(0x1)
00aeb1 f021      	BREQ _0x2060030
00aeb2 01f8      	MOVW R30,R16
00aeb3 940e e1d9 	CALL __LSRW4
00aeb5 c002      	RJMP _0x206022B
                 _0x2060030:
00aeb6 01f8      	MOVW R30,R16
00aeb7 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
00aeb8 2766      	CLR  R22
00aeb9 2777      	CLR  R23
00aeba c036      	RJMP _0x20E001A
                 _0x206002D:
00aebb 30e2      	CPI  R30,LOW(0x2)
00aebc e0a0      	LDI  R26,HIGH(0x2)
00aebd 07fa      	CPC  R31,R26
00aebe f4a9      	BRNE _0x2060033
00aebf 940e cc8e 	CALL SUBOPT_0x1AE
00aec1 940e c42b 	CALL SUBOPT_0x52
00aec3 940e dc90 	CALL SUBOPT_0x3BC
00aec5 940e c45d 	CALL SUBOPT_0x59
00aec7 940e dc82 	CALL SUBOPT_0x3BA
00aec9 f529      	BRNE _0x206002C
00aeca 85a8      	LDD  R26,Y+8
00aecb 85b9      	LDD  R27,Y+8+1
00aecc e0e2      	LDI  R30,LOW(2)
00aecd 940e dc97 	CALL SUBOPT_0x3BD
00aecf 0fae      	ADD  R26,R30
00aed0 1fbf      	ADC  R27,R31
00aed1 940e c2bf 	CALL SUBOPT_0x1E
00aed3 c01d      	RJMP _0x20E001A
                 _0x2060033:
00aed4 30e3      	CPI  R30,LOW(0x3)
00aed5 e0a0      	LDI  R26,HIGH(0x3)
00aed6 07fa      	CPC  R31,R26
00aed7 f4b9      	BRNE _0x206002C
00aed8 940e cc8e 	CALL SUBOPT_0x1AE
00aeda 940e c42b 	CALL SUBOPT_0x52
00aedc 940e dc9e 	CALL SUBOPT_0x3BE
00aede 940e c45d 	CALL SUBOPT_0x59
00aee0 940e dc82 	CALL SUBOPT_0x3BA
00aee2 f461      	BRNE _0x206002C
00aee3 85a8      	LDD  R26,Y+8
00aee4 85b9      	LDD  R27,Y+8+1
00aee5 e0e4      	LDI  R30,LOW(4)
00aee6 940e dc97 	CALL SUBOPT_0x3BD
00aee8 940e c2af 	CALL SUBOPT_0x1B
                +
00aeea 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00aeeb 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00aeec 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00aeed 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00aeee c002      	RJMP _0x20E001A
                 _0x206002C:
00aeef 940e c2ea 	CALL SUBOPT_0x25
                 _0x20E001A:
00aef1 940e e3a2 	CALL __LOADLOCR4
00aef3 962e      	ADIW R28,14
00aef4 9508      	RET
                 _put_fat:
00aef5 940e e329 	CALL __PUTPARD2
00aef7 9724      	SBIW R28,4
00aef8 940e e399 	CALL __SAVELOCR6
00aefa 940e dca5 	CALL SUBOPT_0x3BF
00aefc 940e dc6a 	CALL SUBOPT_0x3B6
00aefe f050      	BRLO _0x2060038
00aeff 89aa      	LDD  R26,Y+18
00af00 89bb      	LDD  R27,Y+18+1
00af01 965e      	ADIW R26,30
00af02 940e e2f4 	CALL __GETD1P
00af04 940e dca5 	CALL SUBOPT_0x3BF
00af06 940e e394 	CALL __CPD21
00af08 f010      	BRLO _0x2060037
                 _0x2060038:
00af09 e052      	LDI  R21,LOW(2)
00af0a c08a      	RJMP _0x206003A
                 _0x2060037:
00af0b 89aa      	LDD  R26,Y+18
00af0c 89bb      	LDD  R27,Y+18+1
00af0d 9692      	ADIW R26,34
00af0e 940e e2f4 	CALL __GETD1P
00af10 940e c6bb 	CALL SUBOPT_0xB6
00af12 89aa      	LDD  R26,Y+18
00af13 89bb      	LDD  R27,Y+18+1
00af14 91ec      	LD   R30,X
00af15 940e cf33 	CALL SUBOPT_0x214
00af17 f011      	BREQ PC+3
00af18 940c af61 	JMP _0x206003E
                +
00af1a 850e     +LDD R16 , Y + 14
00af1b 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
00af1c 01f8      	MOVW R30,R16
00af1d 95f6      	LSR  R31
00af1e 95e7      	ROR  R30
                +
00af1f 0f0e     +ADD R16 , R30
00af20 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00af21 940e d38e 	CALL SUBOPT_0x2AD
00af23 940e dcaa 	CALL SUBOPT_0x3C0
00af25 f009      	BREQ _0x206003F
00af26 c069      	RJMP _0x206003D
                 _0x206003F:
00af27 940e dcba 	CALL SUBOPT_0x3C1
00af29 f051      	BREQ _0x2060040
00af2a 01d9      	MOVW R26,R18
00af2b 91ec      	LD   R30,X
00af2c 70ef      	ANDI R30,LOW(0xF)
00af2d 2fae      	MOV  R26,R30
00af2e 85ea      	LDD  R30,Y+10
00af2f e0f0      	LDI  R31,0
00af30 940e e1c7 	CALL __LSLW4
00af32 2bea      	OR   R30,R26
00af33 c001      	RJMP _0x2060041
                 _0x2060040:
00af34 85ea      	LDD  R30,Y+10
                 _0x2060041:
00af35 01d9      	MOVW R26,R18
00af36 93ec      	ST   X,R30
                +
00af37 5f0f     +SUBI R16 , LOW ( - 1 )
00af38 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00af39 89aa      	LDD  R26,Y+18
00af3a 89bb      	LDD  R27,Y+18+1
00af3b 9614      	ADIW R26,4
00af3c e0e1      	LDI  R30,LOW(1)
00af3d 93ec      	ST   X,R30
00af3e 940e d38e 	CALL SUBOPT_0x2AD
00af40 940e dcaa 	CALL SUBOPT_0x3C0
00af42 f009      	BREQ _0x2060043
00af43 c04c      	RJMP _0x206003D
                 _0x2060043:
00af44 940e dcba 	CALL SUBOPT_0x3C1
00af46 f049      	BREQ _0x2060044
00af47 940e c42b 	CALL SUBOPT_0x52
00af49 e0e4      	LDI  R30,LOW(4)
00af4a 940e e1bb 	CALL __LSRD12
00af4c 27ff      	CLR  R31
00af4d 2766      	CLR  R22
00af4e 2777      	CLR  R23
00af4f c00e      	RJMP _0x2060045
                 _0x2060044:
00af50 01d9      	MOVW R26,R18
00af51 91ec      	LD   R30,X
00af52 7fe0      	ANDI R30,LOW(0xF0)
00af53 2e1e      	MOV  R1,R30
00af54 940e c42b 	CALL SUBOPT_0x52
00af56 e0e8      	LDI  R30,LOW(8)
00af57 940e e1bb 	CALL __LSRD12
00af59 27ff      	CLR  R31
00af5a 2766      	CLR  R22
00af5b 2777      	CLR  R23
00af5c 70ef      	ANDI R30,LOW(0xF)
00af5d 29e1      	OR   R30,R1
                 _0x2060045:
00af5e 01d9      	MOVW R26,R18
00af5f 93ec      	ST   X,R30
00af60 c02f      	RJMP _0x206003D
                 _0x206003E:
00af61 30e2      	CPI  R30,LOW(0x2)
00af62 e0a0      	LDI  R26,HIGH(0x2)
00af63 07fa      	CPC  R31,R26
00af64 f499      	BRNE _0x2060047
00af65 940e d38e 	CALL SUBOPT_0x2AD
00af67 940e cfa2 	CALL SUBOPT_0x21E
00af69 940e dc90 	CALL SUBOPT_0x3BC
00af6b 940e dcc5 	CALL SUBOPT_0x3C2
00af6d f511      	BRNE _0x206003D
00af6e 85ae      	LDD  R26,Y+14
00af6f 85bf      	LDD  R27,Y+14+1
00af70 e0e2      	LDI  R30,LOW(2)
00af71 940e dcce 	CALL SUBOPT_0x3C3
00af73 85aa      	LDD  R26,Y+10
00af74 85bb      	LDD  R27,Y+10+1
00af75 83a0      	STD  Z+0,R26
00af76 83b1      	STD  Z+1,R27
00af77 c018      	RJMP _0x206003D
                 _0x2060047:
00af78 30e3      	CPI  R30,LOW(0x3)
00af79 e0a0      	LDI  R26,HIGH(0x3)
00af7a 07fa      	CPC  R31,R26
00af7b f499      	BRNE _0x206004B
00af7c 940e d38e 	CALL SUBOPT_0x2AD
00af7e 940e cfa2 	CALL SUBOPT_0x21E
00af80 940e dc9e 	CALL SUBOPT_0x3BE
00af82 940e dcc5 	CALL SUBOPT_0x3C2
00af84 f459      	BRNE _0x206003D
00af85 85ae      	LDD  R26,Y+14
00af86 85bf      	LDD  R27,Y+14+1
00af87 e0e4      	LDI  R30,LOW(4)
00af88 940e dcce 	CALL SUBOPT_0x3C3
00af8a 940e c42b 	CALL SUBOPT_0x52
00af8c 940e d198 	CALL SUBOPT_0x261
00af8e c001      	RJMP _0x206003D
                 _0x206004B:
00af8f e052      	LDI  R21,LOW(2)
                 _0x206003D:
00af90 89aa      	LDD  R26,Y+18
00af91 89bb      	LDD  R27,Y+18+1
00af92 9614      	ADIW R26,4
00af93 e0e1      	LDI  R30,LOW(1)
00af94 93ec      	ST   X,R30
                 _0x206003A:
00af95 2fe5      	MOV  R30,R21
00af96 940e e3a0 	CALL __LOADLOCR6
00af98 9664      	ADIW R28,20
00af99 9508      	RET
                 _remove_chain_G103:
00af9a 940e e329 	CALL __PUTPARD2
00af9c 9724      	SBIW R28,4
00af9d 931a      	ST   -Y,R17
00af9e 940e dcd7 	CALL SUBOPT_0x3C4
00afa0 940e dc6a 	CALL SUBOPT_0x3B6
00afa2 f018      	BRLO _0x206004D
00afa3 940e dcdc 	CALL SUBOPT_0x3C5
00afa5 f010      	BRLO _0x206004C
                 _0x206004D:
00afa6 e012      	LDI  R17,LOW(2)
00afa7 c03e      	RJMP _0x206004F
                 _0x206004C:
00afa8 e010      	LDI  R17,LOW(0)
                 _0x2060050:
00afa9 940e dcdc 	CALL SUBOPT_0x3C5
00afab f5d0      	BRSH _0x2060052
00afac 940e cbfd 	CALL SUBOPT_0x194
00afae 940e c4b1 	CALL SUBOPT_0x67
00afb0 deb8      	RCALL _get_fat
                +
00afb1 83e9     +STD Y + 1 , R30
00afb2 83fa     +STD Y + 1 + 1 , R31
00afb3 836b     +STD Y + 1 + 2 , R22
00afb4 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00afb5 940e dce5 	CALL SUBOPT_0x3C6
00afb7 940e e37d 	CALL __CPD10
00afb9 f161      	BREQ _0x2060052
00afba 940e d303 	CALL SUBOPT_0x298
00afbc 940e dcea 	CALL SUBOPT_0x3C7
00afbe f411      	BRNE _0x2060054
00afbf e012      	LDI  R17,LOW(2)
00afc0 c025      	RJMP _0x2060052
                 _0x2060054:
00afc1 940e d303 	CALL SUBOPT_0x298
00afc3 940e c37d 	CALL SUBOPT_0x3A
00afc5 f411      	BRNE _0x2060055
00afc6 e011      	LDI  R17,LOW(1)
00afc7 c01e      	RJMP _0x2060052
                 _0x2060055:
00afc8 940e cbfd 	CALL SUBOPT_0x194
00afca 940e c3b1 	CALL SUBOPT_0x3F
00afcc 940e c317 	CALL SUBOPT_0x2C
00afce df26      	RCALL _put_fat
00afcf 2f1e      	MOV  R17,R30
00afd0 3010      	CPI  R17,0
00afd1 f4a1      	BRNE _0x2060052
00afd2 85e9      	LDD  R30,Y+9
00afd3 85fa      	LDD  R31,Y+9+1
00afd4 940e dcf2 	CALL SUBOPT_0x3C8
00afd6 f051      	BREQ _0x2060057
00afd7 85a9      	LDD  R26,Y+9
00afd8 85ba      	LDD  R27,Y+9+1
00afd9 961e      	ADIW R26,14
00afda 940e c5df 	CALL SUBOPT_0x93
00afdc 85a9      	LDD  R26,Y+9
00afdd 85ba      	LDD  R27,Y+9+1
00afde 9615      	ADIW R26,5
00afdf e0e1      	LDI  R30,LOW(1)
00afe0 93ec      	ST   X,R30
                 _0x2060057:
00afe1 940e dce5 	CALL SUBOPT_0x3C6
00afe3 940e dcf8 	CALL SUBOPT_0x3C9
00afe5 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00afe6 2fe1      	MOV  R30,R17
00afe7 8118      	LDD  R17,Y+0
00afe8 c26f      	RJMP _0x20E0016
                 _create_chain_G103:
00afe9 940e e329 	CALL __PUTPARD2
00afeb 9760      	SBIW R28,16
00afec 89ac      	LDD  R26,Y+20
00afed 89bd      	LDD  R27,Y+20+1
00afee 965e      	ADIW R26,30
00afef 940e e2f4 	CALL __GETD1P
00aff1 940e c64a 	CALL SUBOPT_0xA1
00aff3 940e c240 	CALL SUBOPT_0xC
00aff5 940e e37d 	CALL __CPD10
00aff7 f4b1      	BRNE _0x2060058
00aff8 89ac      	LDD  R26,Y+20
00aff9 89bd      	LDD  R27,Y+20+1
00affa 961a      	ADIW R26,10
00affb 940e dc77 	CALL SUBOPT_0x3B8
00affd 940e c678 	CALL SUBOPT_0xA9
00afff 940e e389 	CALL __CPD02
00b001 f039      	BREQ _0x206005A
00b002 940e c58c 	CALL SUBOPT_0x87
00b004 940e c678 	CALL SUBOPT_0xA9
00b006 940e e394 	CALL __CPD21
00b008 f020      	BRLO _0x2060059
                 _0x206005A:
00b009 940e dc72 	CALL SUBOPT_0x3B7
00b00b 940e c673 	CALL SUBOPT_0xA8
                 _0x2060059:
00b00d c01d      	RJMP _0x206005C
                 _0x2060058:
00b00e 940e dcfd 	CALL SUBOPT_0x3CA
00b010 940e d12a 	CALL SUBOPT_0x252
00b012 de56      	RCALL _get_fat
00b013 940e c805 	CALL SUBOPT_0xEA
00b015 940e c23b 	CALL SUBOPT_0xB
00b017 940e dc6a 	CALL SUBOPT_0x3B6
00b019 f418      	BRSH _0x206005D
00b01a 940e dc72 	CALL SUBOPT_0x3B7
00b01c c083      	RJMP _0x20E0019
                 _0x206005D:
00b01d 940e c58c 	CALL SUBOPT_0x87
00b01f 940e c23b 	CALL SUBOPT_0xB
00b021 940e e394 	CALL __CPD21
00b023 f418      	BRSH _0x206005E
00b024 940e c794 	CALL SUBOPT_0xD9
00b026 c079      	RJMP _0x20E0019
                 _0x206005E:
00b027 940e c240 	CALL SUBOPT_0xC
00b029 940e c673 	CALL SUBOPT_0xA8
                 _0x206005C:
00b02b 940e c598 	CALL SUBOPT_0x89
00b02d 940e d9a1 	CALL SUBOPT_0x361
                 _0x2060060:
00b02f 940e c412 	CALL SUBOPT_0x4F
00b031 940e c6dd 	CALL SUBOPT_0xBC
00b033 940e d9a1 	CALL SUBOPT_0x361
00b035 940e c58c 	CALL SUBOPT_0x87
00b037 940e c78f 	CALL SUBOPT_0xD8
00b039 940e e394 	CALL __CPD21
00b03b f050      	BRLO _0x2060062
00b03c 940e dd02 	CALL SUBOPT_0x3CB
00b03e 940e d9a1 	CALL SUBOPT_0x361
00b040 940e dd07 	CALL SUBOPT_0x3CC
00b042 f418      	BRSH _0x2060063
00b043 940e dd0e 	CALL SUBOPT_0x3CD
00b045 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00b046 940e dcfd 	CALL SUBOPT_0x3CA
00b048 940e c42b 	CALL SUBOPT_0x52
00b04a de1e      	RCALL _get_fat
00b04b 940e c80f 	CALL SUBOPT_0xEC
00b04d 940e e37d 	CALL __CPD10
00b04f f091      	BREQ _0x2060061
00b050 940e c46d 	CALL SUBOPT_0x5C
00b052 f029      	BREQ _0x2060066
00b053 940e c23b 	CALL SUBOPT_0xB
00b055 940e dcea 	CALL SUBOPT_0x3C7
00b057 f419      	BRNE _0x2060065
                 _0x2060066:
00b058 940e c794 	CALL SUBOPT_0xD9
00b05a c045      	RJMP _0x20E0019
                 _0x2060065:
00b05b 940e dd07 	CALL SUBOPT_0x3CC
00b05d f419      	BRNE _0x2060068
00b05e 940e dd0e 	CALL SUBOPT_0x3CD
00b060 c03f      	RJMP _0x20E0019
                 _0x2060068:
00b061 cfcd      	RJMP _0x2060060
                 _0x2060061:
00b062 940e dcfd 	CALL SUBOPT_0x3CA
00b064 940e d919 	CALL SUBOPT_0x34D
                +
00b066 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00b067 efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00b068 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00b069 e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00b06a de8a      	RCALL _put_fat
00b06b 30e0      	CPI  R30,0
00b06c f019      	BREQ _0x2060069
00b06d 940e c2ea 	CALL SUBOPT_0x25
00b06f c030      	RJMP _0x20E0019
                 _0x2060069:
00b070 940e c240 	CALL SUBOPT_0xC
00b072 940e e37d 	CALL __CPD10
00b074 f071      	BREQ _0x206006A
00b075 940e dcfd 	CALL SUBOPT_0x3CA
00b077 940e c77e 	CALL SUBOPT_0xD4
00b079 940e e324 	CALL __PUTPARD1
00b07b 940e dca5 	CALL SUBOPT_0x3BF
00b07d de77      	RCALL _put_fat
00b07e 30e0      	CPI  R30,0
00b07f f019      	BREQ _0x206006B
00b080 940e c2ea 	CALL SUBOPT_0x25
00b082 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00b083 940e c412 	CALL SUBOPT_0x4F
                +
00b085 89ac     +LDD R26 , Y + 20
00b086 89bd     +LDD R27 , Y + 20 + 1
00b087 961a     +ADIW R26 , 10
00b088 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00b08a 89ec      	LDD  R30,Y+20
00b08b 89fd      	LDD  R31,Y+20+1
00b08c 940e dcf2 	CALL SUBOPT_0x3C8
00b08e f079      	BREQ _0x206006C
00b08f 89ac      	LDD  R26,Y+20
00b090 89bd      	LDD  R27,Y+20+1
00b091 961e      	ADIW R26,14
00b092 940e e2fa 	CALL __GETD1P_INC
00b094 9731      	SBIW R30,1
00b095 4060      	SBCI R22,0
00b096 4070      	SBCI R23,0
00b097 940e e304 	CALL __PUTDP1_DEC
00b099 89ac      	LDD  R26,Y+20
00b09a 89bd      	LDD  R27,Y+20+1
00b09b 9615      	ADIW R26,5
00b09c e0e1      	LDI  R30,LOW(1)
00b09d 93ec      	ST   X,R30
                 _0x206006C:
00b09e 940e c412 	CALL SUBOPT_0x4F
                 _0x20E0019:
00b0a0 9666      	ADIW R28,22
00b0a1 9508      	RET
                 _clust2sect:
00b0a2 940e e329 	CALL __PUTPARD2
00b0a4 940e c58c 	CALL SUBOPT_0x87
                +
00b0a6 50e2     +SUBI R30 , LOW ( 2 )
00b0a7 40f0     +SBCI R31 , HIGH ( 2 )
00b0a8 4060     +SBCI R22 , BYTE3 ( 2 )
00b0a9 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00b0aa 940e c64a 	CALL SUBOPT_0xA1
00b0ac 81ec      	LDD  R30,Y+4
00b0ad 81fd      	LDD  R31,Y+4+1
                +
00b0ae 8da6     +LDD R26 , Z + 30
00b0af 8db7     +LDD R27 , Z + 30 + 1
00b0b0 a180     +LDD R24 , Z + 30 + 2
00b0b1 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00b0b2 940e dd02 	CALL SUBOPT_0x3CB
00b0b4 940e c6f3 	CALL SUBOPT_0xC0
00b0b6 940e c5ab 	CALL SUBOPT_0x8C
00b0b8 940e e394 	CALL __CPD21
00b0ba f018      	BRLO _0x206006D
00b0bb 940e dd0e 	CALL SUBOPT_0x3CD
00b0bd c38f      	RJMP _0x20E0012
                 _0x206006D:
00b0be 81ec      	LDD  R30,Y+4
00b0bf 81fd      	LDD  R31,Y+4+1
00b0c0 940e d300 	CALL SUBOPT_0x297
00b0c2 940e c5ab 	CALL SUBOPT_0x8C
00b0c4 940e d308 	CALL SUBOPT_0x299
00b0c6 937f      	PUSH R23
00b0c7 936f      	PUSH R22
00b0c8 93ff      	PUSH R31
00b0c9 93ef      	PUSH R30
00b0ca 81ac      	LDD  R26,Y+4
00b0cb 81bd      	LDD  R27,Y+4+1
00b0cc 969a      	ADIW R26,42
00b0cd 940e e2f4 	CALL __GETD1P
00b0cf 91af      	POP  R26
00b0d0 91bf      	POP  R27
00b0d1 918f      	POP  R24
00b0d2 919f      	POP  R25
00b0d3 940e e17c 	CALL __ADDD12
00b0d5 c377      	RJMP _0x20E0012
                 _dir_seek_G103:
00b0d6 940e c81a 	CALL SUBOPT_0xEE
00b0d8 930a      	ST   -Y,R16
00b0d9 81ee      	LDD  R30,Y+6
00b0da 81ff      	LDD  R31,Y+6+1
                +
00b0db 85a8     +LDD R26 , Y + 8
00b0dc 85b9     +LDD R27 , Y + 8 + 1
00b0dd 9614     +ADIW R26 , 4
00b0de 93ed     +ST X + , R30
00b0df 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00b0e0 85a8      	LDD  R26,Y+8
00b0e1 85b9      	LDD  R27,Y+8+1
00b0e2 9616      	ADIW R26,6
00b0e3 940e e2f4 	CALL __GETD1P
00b0e5 940e c81f 	CALL SUBOPT_0xEF
00b0e7 940e dcea 	CALL SUBOPT_0x3C7
00b0e9 f029      	BREQ _0x206006F
00b0ea 940e dd13 	CALL SUBOPT_0x3CE
00b0ec 940e dd18 	CALL SUBOPT_0x3CF
00b0ee f010      	BRLO _0x206006E
                 _0x206006F:
00b0ef e0e2      	LDI  R30,LOW(2)
00b0f0 c072      	RJMP _0x20E0017
                 _0x206006E:
00b0f1 940e ce34 	CALL SUBOPT_0x1F3
00b0f3 f429      	BRNE _0x2060072
00b0f4 940e dd13 	CALL SUBOPT_0x3CE
00b0f6 81a0      	LD   R26,Z
00b0f7 30a3      	CPI  R26,LOW(0x3)
00b0f8 f009      	BREQ _0x2060073
                 _0x2060072:
00b0f9 c008      	RJMP _0x2060071
                 _0x2060073:
00b0fa 940e dd13 	CALL SUBOPT_0x3CE
00b0fc 96b6      	ADIW R30,38
00b0fd 01df      	MOVW R26,R30
00b0fe 940e e2f4 	CALL __GETD1P
00b100 940e c6a7 	CALL SUBOPT_0xB2
                 _0x2060071:
00b102 940e ce34 	CALL SUBOPT_0x1F3
00b104 f491      	BRNE _0x2060074
00b105 940e dd21 	CALL SUBOPT_0x3D0
00b107 940e dd13 	CALL SUBOPT_0x3CE
00b109 9638      	ADIW R30,8
00b10a 01df      	MOVW R26,R30
00b10b 940e cb9a 	CALL SUBOPT_0x182
00b10d f010      	BRLO _0x2060075
00b10e e0e2      	LDI  R30,LOW(2)
00b10f c053      	RJMP _0x20E0017
                 _0x2060075:
00b110 940e dd13 	CALL SUBOPT_0x3CE
00b112 96b6      	ADIW R30,38
00b113 01df      	MOVW R26,R30
00b114 940e e2f4 	CALL __GETD1P
00b116 c031      	RJMP _0x206022C
                 _0x2060074:
00b117 940e dd13 	CALL SUBOPT_0x3CE
00b119 81e2      	LDD  R30,Z+2
00b11a e1a0      	LDI  R26,LOW(16)
00b11b 9fea      	MUL  R30,R26
00b11c 0180      	MOVW R16,R0
                 _0x2060077:
00b11d 81ae      	LDD  R26,Y+6
00b11e 81bf      	LDD  R27,Y+6+1
00b11f 17a0      	CP   R26,R16
00b120 07b1      	CPC  R27,R17
00b121 f0f8      	BRLO _0x2060079
00b122 940e dd29 	CALL SUBOPT_0x3D1
00b124 940e c678 	CALL SUBOPT_0xA9
00b126 dd42      	RCALL _get_fat
00b127 940e c81f 	CALL SUBOPT_0xEF
00b129 940e c37d 	CALL SUBOPT_0x3A
00b12b f411      	BRNE _0x206007A
00b12c e0e1      	LDI  R30,LOW(1)
00b12d c035      	RJMP _0x20E0017
                 _0x206007A:
00b12e 940e c6b1 	CALL SUBOPT_0xB4
00b130 940e dc6a 	CALL SUBOPT_0x3B6
00b132 f028      	BRLO _0x206007C
00b133 940e dd13 	CALL SUBOPT_0x3CE
00b135 940e dd18 	CALL SUBOPT_0x3CF
00b137 f010      	BRLO _0x206007B
                 _0x206007C:
00b138 e0e2      	LDI  R30,LOW(2)
00b139 c029      	RJMP _0x20E0017
                 _0x206007B:
00b13a 81ee      	LDD  R30,Y+6
00b13b 81ff      	LDD  R31,Y+6+1
00b13c 1be0      	SUB  R30,R16
00b13d 0bf1      	SBC  R31,R17
00b13e 83ee      	STD  Y+6,R30
00b13f 83ff      	STD  Y+6+1,R31
00b140 cfdc      	RJMP _0x2060077
                 _0x2060079:
00b141 940e dd21 	CALL SUBOPT_0x3D0
00b143 940e dd29 	CALL SUBOPT_0x3D1
00b145 940e c678 	CALL SUBOPT_0xA9
00b147 df5a      	RCALL _clust2sect
                 _0x206022C:
00b148 01df      	MOVW R26,R30
00b149 01cb      	MOVW R24,R22
00b14a 81ee      	LDD  R30,Y+6
00b14b 81ff      	LDD  R31,Y+6+1
00b14c 940e e1d9 	CALL __LSRW4
00b14e 940e dd2c 	CALL SUBOPT_0x3D2
                +
00b150 85a8     +LDD R26 , Y + 8
00b151 85b9     +LDD R27 , Y + 8 + 1
00b152 961e     +ADIW R26 , 14
00b153 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00b155 940e dd13 	CALL SUBOPT_0x3CE
00b157 96f2      	ADIW R30,50
00b158 01df      	MOVW R26,R30
00b159 81ee      	LDD  R30,Y+6
00b15a 81ff      	LDD  R31,Y+6+1
00b15b 940e dd31 	CALL SUBOPT_0x3D3
                +
00b15d 85a8     +LDD R26 , Y + 8
00b15e 85b9     +LDD R27 , Y + 8 + 1
00b15f 9652     +ADIW R26 , 18
00b160 93ed     +ST X + , R30
00b161 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00b162 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00b163 8119      	LDD  R17,Y+1
00b164 8108      	LDD  R16,Y+0
                 _0x20E0018:
00b165 962a      	ADIW R28,10
00b166 9508      	RET
                 _dir_next_G103:
00b167 93aa      	ST   -Y,R26
00b168 9724      	SBIW R28,4
00b169 940e e39b 	CALL __SAVELOCR4
00b16b 85a9      	LDD  R26,Y+9
00b16c 85ba      	LDD  R27,Y+9+1
00b16d 9614      	ADIW R26,4
00b16e 940e e2f0 	CALL __GETW1P
00b170 9631      	ADIW R30,1
00b171 018f      	MOVW R16,R30
00b172 2e00      	MOV  R0,R16
00b173 2a01      	OR   R0,R17
00b174 f031      	BREQ _0x206007F
00b175 85a9      	LDD  R26,Y+9
00b176 85ba      	LDD  R27,Y+9+1
00b177 961e      	ADIW R26,14
00b178 940e dd39 	CALL SUBOPT_0x3D4
00b17a f411      	BRNE _0x206007E
                 _0x206007F:
00b17b e0e4      	LDI  R30,LOW(4)
00b17c c0d9      	RJMP _0x20E0015
                 _0x206007E:
00b17d 01f8      	MOVW R30,R16
00b17e 70ef      	ANDI R30,LOW(0xF)
00b17f f011      	BREQ PC+3
00b180 940c b243 	JMP _0x2060081
00b182 85a9      	LDD  R26,Y+9
00b183 85ba      	LDD  R27,Y+9+1
00b184 961e      	ADIW R26,14
00b185 940e c5df 	CALL SUBOPT_0x93
00b187 85a9      	LDD  R26,Y+9
00b188 85ba      	LDD  R27,Y+9+1
00b189 961a      	ADIW R26,10
00b18a 940e dd39 	CALL SUBOPT_0x3D4
00b18c f451      	BRNE _0x2060082
00b18d 940e dd3e 	CALL SUBOPT_0x3D5
00b18f 9638      	ADIW R30,8
00b190 01df      	MOVW R26,R30
00b191 940e cd83 	CALL SUBOPT_0x1D2
00b193 f010      	BRLO _0x2060083
00b194 e0e4      	LDI  R30,LOW(4)
00b195 c0c0      	RJMP _0x20E0015
                 _0x2060083:
00b196 c0ac      	RJMP _0x2060084
                 _0x2060082:
00b197 01f8      	MOVW R30,R16
00b198 940e e1d9 	CALL __LSRW4
00b19a 010f      	MOVW R0,R30
00b19b 940e dd3e 	CALL SUBOPT_0x3D5
00b19d 940e d300 	CALL SUBOPT_0x297
00b19f 9731      	SBIW R30,1
00b1a0 21e0      	AND  R30,R0
00b1a1 21f1      	AND  R31,R1
00b1a2 9730      	SBIW R30,0
00b1a3 f011      	BREQ PC+3
00b1a4 940c b243 	JMP _0x2060085
00b1a6 940e dd43 	CALL SUBOPT_0x3D6
00b1a8 940e dd46 	CALL SUBOPT_0x3D7
00b1aa dcbe      	RCALL _get_fat
00b1ab 940e c673 	CALL SUBOPT_0xA8
00b1ad 940e c678 	CALL SUBOPT_0xA9
00b1af 940e dc6a 	CALL SUBOPT_0x3B6
00b1b1 f410      	BRSH _0x2060086
00b1b2 e0e2      	LDI  R30,LOW(2)
00b1b3 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00b1b4 940e c678 	CALL SUBOPT_0xA9
00b1b6 940e c37d 	CALL SUBOPT_0x3A
00b1b8 f411      	BRNE _0x2060087
00b1b9 e0e1      	LDI  R30,LOW(1)
00b1ba c09b      	RJMP _0x20E0015
                 _0x2060087:
00b1bb 940e dd3e 	CALL SUBOPT_0x3D5
00b1bd 940e dd4d 	CALL SUBOPT_0x3D8
00b1bf 940e c678 	CALL SUBOPT_0xA9
00b1c1 940e e394 	CALL __CPD21
00b1c3 f410      	BRSH PC+3
00b1c4 940c b232 	JMP _0x2060088
00b1c6 85e8      	LDD  R30,Y+8
00b1c7 30e0      	CPI  R30,0
00b1c8 f411      	BRNE _0x2060089
00b1c9 e0e4      	LDI  R30,LOW(4)
00b1ca c08b      	RJMP _0x20E0015
                 _0x2060089:
00b1cb 940e dd43 	CALL SUBOPT_0x3D6
00b1cd 940e dd46 	CALL SUBOPT_0x3D7
00b1cf de19      	RCALL _create_chain_G103
00b1d0 940e c692 	CALL SUBOPT_0xAE
00b1d2 940e e37d 	CALL __CPD10
00b1d4 f411      	BRNE _0x206008A
00b1d5 e0e7      	LDI  R30,LOW(7)
00b1d6 c07f      	RJMP _0x20E0015
                 _0x206008A:
00b1d7 940e c678 	CALL SUBOPT_0xA9
00b1d9 940e dcea 	CALL SUBOPT_0x3C7
00b1db f411      	BRNE _0x206008B
00b1dc e0e2      	LDI  R30,LOW(2)
00b1dd c078      	RJMP _0x20E0015
                 _0x206008B:
00b1de 940e c678 	CALL SUBOPT_0xA9
00b1e0 940e c37d 	CALL SUBOPT_0x3A
00b1e2 f411      	BRNE _0x206008C
00b1e3 e0e1      	LDI  R30,LOW(1)
00b1e4 c071      	RJMP _0x20E0015
                 _0x206008C:
00b1e5 940e dd43 	CALL SUBOPT_0x3D6
00b1e7 940e dc4b 	CALL SUBOPT_0x3B2
00b1e9 30e0      	CPI  R30,0
00b1ea f011      	BREQ _0x206008D
00b1eb e0e1      	LDI  R30,LOW(1)
00b1ec c069      	RJMP _0x20E0015
                 _0x206008D:
00b1ed 940e dd3e 	CALL SUBOPT_0x3D5
00b1ef 940e dc4f 	CALL SUBOPT_0x3B3
00b1f1 940e dd3e 	CALL SUBOPT_0x3D5
00b1f3 01df      	MOVW R26,R30
00b1f4 96be      	ADIW R30,46
00b1f5 93ff      	PUSH R31
00b1f6 93ef      	PUSH R30
00b1f7 01fd      	MOVW R30,R26
00b1f8 93fa      	ST   -Y,R31
00b1f9 93ea      	ST   -Y,R30
00b1fa 940e c45d 	CALL SUBOPT_0x59
00b1fc dea5      	RCALL _clust2sect
00b1fd 91af      	POP  R26
00b1fe 91bf      	POP  R27
00b1ff 940e e2ff 	CALL __PUTDP1
00b201 e030      	LDI  R19,LOW(0)
                 _0x206008F:
00b202 940e dd3e 	CALL SUBOPT_0x3D5
00b204 81e2      	LDD  R30,Z+2
00b205 173e      	CP   R19,R30
00b206 f4c0      	BRSH _0x2060090
00b207 940e dd3e 	CALL SUBOPT_0x3D5
00b209 9634      	ADIW R30,4
00b20a e0a1      	LDI  R26,LOW(1)
00b20b 83a0      	STD  Z+0,R26
00b20c 940e dd43 	CALL SUBOPT_0x3D6
00b20e 940e dc4b 	CALL SUBOPT_0x3B2
00b210 30e0      	CPI  R30,0
00b211 f011      	BREQ _0x2060091
00b212 e0e1      	LDI  R30,LOW(1)
00b213 c042      	RJMP _0x20E0015
                 _0x2060091:
00b214 940e dd3e 	CALL SUBOPT_0x3D5
00b216 96be      	ADIW R30,46
00b217 01df      	MOVW R26,R30
00b218 940e c5df 	CALL SUBOPT_0x93
00b21a 9731      	SBIW R30,1
00b21b 4060      	SBCI R22,0
00b21c 4070      	SBCI R23,0
00b21d 5f3f      	SUBI R19,-1
00b21e cfe3      	RJMP _0x206008F
                 _0x2060090:
00b21f 940e dd3e 	CALL SUBOPT_0x3D5
00b221 96be      	ADIW R30,46
00b222 93ff      	PUSH R31
00b223 93ef      	PUSH R30
00b224 01df      	MOVW R26,R30
00b225 940e e2f4 	CALL __GETD1P
00b227 01df      	MOVW R26,R30
00b228 01cb      	MOVW R24,R22
00b229 2fe3      	MOV  R30,R19
00b22a 940e dc13 	CALL SUBOPT_0x3AB
00b22c 940e c6f3 	CALL SUBOPT_0xC0
00b22e 91af      	POP  R26
00b22f 91bf      	POP  R27
00b230 940e e2ff 	CALL __PUTDP1
                 _0x2060088:
00b232 940e c598 	CALL SUBOPT_0x89
                +
00b234 85a9     +LDD R26 , Y + 9
00b235 85ba     +LDD R27 , Y + 9 + 1
00b236 961a     +ADIW R26 , 10
00b237 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00b239 940e dd43 	CALL SUBOPT_0x3D6
00b23b 940e c45d 	CALL SUBOPT_0x59
00b23d de64      	RCALL _clust2sect
                +
00b23e 85a9     +LDD R26 , Y + 9
00b23f 85ba     +LDD R27 , Y + 9 + 1
00b240 961e     +ADIW R26 , 14
00b241 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00b243 01f8      	MOVW R30,R16
                +
00b244 85a9     +LDD R26 , Y + 9
00b245 85ba     +LDD R27 , Y + 9 + 1
00b246 9614     +ADIW R26 , 4
00b247 93ed     +ST X + , R30
00b248 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00b249 940e dd3e 	CALL SUBOPT_0x3D5
00b24b 96f2      	ADIW R30,50
00b24c 01df      	MOVW R26,R30
00b24d 01f8      	MOVW R30,R16
00b24e 940e dd31 	CALL SUBOPT_0x3D3
                +
00b250 85a9     +LDD R26 , Y + 9
00b251 85ba     +LDD R27 , Y + 9 + 1
00b252 9652     +ADIW R26 , 18
00b253 93ed     +ST X + , R30
00b254 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00b255 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00b256 940e e3a2 	CALL __LOADLOCR4
                 _0x20E0016:
00b258 962b      	ADIW R28,11
00b259 9508      	RET
                 _dir_find_G103:
00b25a 940e c55a 	CALL SUBOPT_0x7F
00b25c 940e d3b5 	CALL SUBOPT_0x2B2
00b25e 940e c840 	CALL SUBOPT_0xF5
00b260 de75      	RCALL _dir_seek_G103
00b261 2f1e      	MOV  R17,R30
00b262 3010      	CPI  R17,0
00b263 f021      	BREQ _0x2060092
00b264 2fe1      	MOV  R30,R17
00b265 940e e3a2 	CALL __LOADLOCR4
00b267 c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00b268 940e dd52 	CALL SUBOPT_0x3D9
00b26a 940e dd55 	CALL SUBOPT_0x3DA
00b26c f4e9      	BRNE _0x2060095
00b26d 81ac      	LDD  R26,Y+4
00b26e 81bd      	LDD  R27,Y+4+1
00b26f 9652      	ADIW R26,18
00b270 912d      	LD   R18,X+
00b271 913c      	LD   R19,X
00b272 01d9      	MOVW R26,R18
00b273 910c      	LD   R16,X
00b274 3000      	CPI  R16,0
00b275 f411      	BRNE _0x2060097
00b276 e014      	LDI  R17,LOW(4)
00b277 c012      	RJMP _0x2060095
                 _0x2060097:
00b278 01f9      	MOVW R30,R18
00b279 85e3      	LDD  R30,Z+11
00b27a 70e8      	ANDI R30,LOW(0x8)
00b27b f429      	BRNE _0x2060099
00b27c 940e dd60 	CALL SUBOPT_0x3DB
00b27e dacb      	RCALL _mem_cmp_G103
00b27f 9730      	SBIW R30,0
00b280 f009      	BREQ _0x206009A
                 _0x2060099:
00b281 c001      	RJMP _0x2060098
                 _0x206009A:
00b282 c007      	RJMP _0x2060095
                 _0x2060098:
00b283 940e d3b5 	CALL SUBOPT_0x2B2
00b285 e0a0      	LDI  R26,LOW(0)
00b286 dee0      	RCALL _dir_next_G103
00b287 2f1e      	MOV  R17,R30
00b288 3010      	CPI  R17,0
00b289 f2f1      	BREQ _0x2060094
                 _0x2060095:
00b28a 2fe1      	MOV  R30,R17
00b28b 940e e3a2 	CALL __LOADLOCR4
00b28d c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00b28e 940e c55a 	CALL SUBOPT_0x7F
00b290 940e d3b5 	CALL SUBOPT_0x2B2
00b292 940e c840 	CALL SUBOPT_0xF5
00b294 de41      	RCALL _dir_seek_G103
00b295 2f1e      	MOV  R17,R30
00b296 3010      	CPI  R17,0
00b297 f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00b298 940e dd52 	CALL SUBOPT_0x3D9
00b29a 940e dd55 	CALL SUBOPT_0x3DA
00b29c f489      	BRNE _0x20600AA
00b29d 81ec      	LDD  R30,Y+4
00b29e 81fd      	LDD  R31,Y+4+1
00b29f 89a2      	LDD  R26,Z+18
00b2a0 89b3      	LDD  R27,Z+19
00b2a1 910c      	LD   R16,X
00b2a2 3e05      	CPI  R16,229
00b2a3 f011      	BREQ _0x20600AD
00b2a4 3000      	CPI  R16,0
00b2a5 f409      	BRNE _0x20600AC
                 _0x20600AD:
00b2a6 c007      	RJMP _0x20600AA
                 _0x20600AC:
00b2a7 940e d3b5 	CALL SUBOPT_0x2B2
00b2a9 e0a1      	LDI  R26,LOW(1)
00b2aa debc      	RCALL _dir_next_G103
00b2ab 2f1e      	MOV  R17,R30
00b2ac 3010      	CPI  R17,0
00b2ad f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00b2ae 3010      	CPI  R17,0
00b2af f539      	BRNE _0x20600AF
00b2b0 940e dd52 	CALL SUBOPT_0x3D9
00b2b2 940e dd55 	CALL SUBOPT_0x3DA
00b2b4 f511      	BRNE _0x20600B0
00b2b5 81ac      	LDD  R26,Y+4
00b2b6 81bd      	LDD  R27,Y+4+1
00b2b7 9652      	ADIW R26,18
00b2b8 912d      	LD   R18,X+
00b2b9 913c      	LD   R19,X
00b2ba 933a      	ST   -Y,R19
00b2bb 932a      	ST   -Y,R18
00b2bc e0e0      	LDI  R30,LOW(0)
00b2bd e0f0      	LDI  R31,HIGH(0)
00b2be 93fa      	ST   -Y,R31
00b2bf 93ea      	ST   -Y,R30
00b2c0 e2a0      	LDI  R26,LOW(32)
00b2c1 e0b0      	LDI  R27,0
00b2c2 da6f      	RCALL _mem_set_G103
00b2c3 940e dd60 	CALL SUBOPT_0x3DB
00b2c5 da50      	RCALL _mem_cpy_G103
00b2c6 81ac      	LDD  R26,Y+4
00b2c7 81bd      	LDD  R27,Y+4+1
00b2c8 9654      	ADIW R26,20
00b2c9 940e e2f0 	CALL __GETW1P
00b2cb 85e3      	LDD  R30,Z+11
00b2cc 71e8      	ANDI R30,LOW(0x18)
                +
00b2cd 01d9     +MOVW R26 , R18
00b2ce 961c     +ADIW R26 , 12
00b2cf 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00b2d0 81ac      	LDD  R26,Y+4
00b2d1 81bd      	LDD  R27,Y+4+1
00b2d2 940e e2f0 	CALL __GETW1P
00b2d4 9634      	ADIW R30,4
00b2d5 e0a1      	LDI  R26,LOW(1)
00b2d6 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00b2d7 2fe1      	MOV  R30,R17
00b2d8 940e e3a2 	CALL __LOADLOCR4
00b2da c172      	RJMP _0x20E0012
                 _create_name_G103:
00b2db 93ba      	ST   -Y,R27
00b2dc 93aa      	ST   -Y,R26
00b2dd 9725      	SBIW R28,5
00b2de 940e e399 	CALL __SAVELOCR6
00b2e0 85ad      	LDD  R26,Y+13
00b2e1 85be      	LDD  R27,Y+13+1
00b2e2 9654      	ADIW R26,20
00b2e3 914d      	LD   R20,X+
00b2e4 915c      	LD   R21,X
00b2e5 935a      	ST   -Y,R21
00b2e6 934a      	ST   -Y,R20
00b2e7 e2e0      	LDI  R30,LOW(32)
00b2e8 e0f0      	LDI  R31,HIGH(32)
00b2e9 93fa      	ST   -Y,R31
00b2ea 93ea      	ST   -Y,R30
00b2eb 940e c3e8 	CALL SUBOPT_0x48
00b2ed da44      	RCALL _mem_set_G103
00b2ee e0e0      	LDI  R30,LOW(0)
00b2ef 87e8      	STD  Y+8,R30
00b2f0 87e9      	STD  Y+8+1,R30
00b2f1 2f1e      	MOV  R17,R30
00b2f2 2f2e      	MOV  R18,R30
00b2f3 e0e8      	LDI  R30,LOW(8)
00b2f4 87ea      	STD  Y+10,R30
00b2f5 85ab      	LDD  R26,Y+11
00b2f6 85bc      	LDD  R27,Y+11+1
00b2f7 940e dc0e 	CALL SUBOPT_0x3AA
00b2f9 85e8      	LDD  R30,Y+8
00b2fa 85f9      	LDD  R31,Y+8+1
00b2fb 940e d024 	CALL SUBOPT_0x22E
00b2fd 91ac      	LD   R26,X
00b2fe 32ae      	CPI  R26,LOW(0x2E)
00b2ff f549      	BRNE _0x20600B3
                 _0x20600B5:
00b300 940e c55f 	CALL SUBOPT_0x80
00b302 940e d024 	CALL SUBOPT_0x22E
00b304 910c      	LD   R16,X
00b305 320e      	CPI  R16,46
00b306 f421      	BRNE _0x20600B8
00b307 85a8      	LDD  R26,Y+8
00b308 85b9      	LDD  R27,Y+8+1
00b309 9713      	SBIW R26,3
00b30a f00c      	BRLT _0x20600B7
                 _0x20600B8:
00b30b c003      	RJMP _0x20600B6
                 _0x20600B7:
00b30c 940e dd6a 	CALL SUBOPT_0x3DC
00b30e cff1      	RJMP _0x20600B5
                 _0x20600B6:
00b30f 320f      	CPI  R16,47
00b310 f021      	BREQ _0x20600BB
00b311 350c      	CPI  R16,92
00b312 f011      	BREQ _0x20600BB
00b313 3201      	CPI  R16,33
00b314 f408      	BRSH _0x20600BC
                 _0x20600BB:
00b315 c002      	RJMP _0x20600BA
                 _0x20600BC:
00b316 e0e6      	LDI  R30,LOW(6)
00b317 c07d      	RJMP _0x20E0013
                 _0x20600BA:
00b318 85e8      	LDD  R30,Y+8
00b319 85f9      	LDD  R31,Y+8+1
00b31a 940e cc59 	CALL SUBOPT_0x1A5
00b31c 85ab      	LDD  R26,Y+11
00b31d 85bc      	LDD  R27,Y+11+1
00b31e 93ed      	ST   X+,R30
00b31f 93fc      	ST   X,R31
00b320 3201      	CPI  R16,33
00b321 f410      	BRSH _0x20600BD
00b322 e2e4      	LDI  R30,LOW(36)
00b323 c001      	RJMP _0x20600BE
                 _0x20600BD:
00b324 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00b325 01da     +MOVW R26 , R20
00b326 961b     +ADIW R26 , 11
00b327 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00b328 c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00b329 940e c55f 	CALL SUBOPT_0x80
00b32b 940e d024 	CALL SUBOPT_0x22E
00b32d 910c      	LD   R16,X
00b32e 3201      	CPI  R16,33
00b32f f020      	BRLO _0x20600C4
00b330 320f      	CPI  R16,47
00b331 f011      	BREQ _0x20600C4
00b332 350c      	CPI  R16,92
00b333 f409      	BRNE _0x20600C3
                 _0x20600C4:
00b334 c035      	RJMP _0x20600C2
                 _0x20600C3:
00b335 320e      	CPI  R16,46
00b336 f019      	BREQ _0x20600C7
00b337 85ea      	LDD  R30,Y+10
00b338 172e      	CP   R18,R30
00b339 f068      	BRLO _0x20600C6
                 _0x20600C7:
00b33a 85aa      	LDD  R26,Y+10
00b33b 30a8      	CPI  R26,LOW(0x8)
00b33c f411      	BRNE _0x20600CA
00b33d 320e      	CPI  R16,46
00b33e f011      	BREQ _0x20600C9
                 _0x20600CA:
00b33f e0e6      	LDI  R30,LOW(6)
00b340 c054      	RJMP _0x20E0013
                 _0x20600C9:
00b341 e028      	LDI  R18,LOW(8)
00b342 e0eb      	LDI  R30,LOW(11)
00b343 87ea      	STD  Y+10,R30
00b344 0f11      	LSL  R17
00b345 0f11      	LSL  R17
00b346 c022      	RJMP _0x20600C0
                 _0x20600C6:
00b347 3800      	CPI  R16,128
00b348 f018      	BRLO _0x20600CC
00b349 6013      	ORI  R17,LOW(3)
00b34a e0e6      	LDI  R30,LOW(6)
00b34b c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00b34c efea     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00b34d e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00b34e e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00b34f e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00b350 940e e324 	CALL __PUTPARD1
00b352 2fa0      	MOV  R26,R16
00b353 27bb      	CLR  R27
00b354 da1b      	RCALL _chk_chrf_G103
00b355 9730      	SBIW R30,0
00b356 f011      	BREQ _0x20600D2
00b357 e0e6      	LDI  R30,LOW(6)
00b358 c03c      	RJMP _0x20E0013
                 _0x20600D2:
00b359 3401      	CPI  R16,65
00b35a f010      	BRLO _0x20600D4
00b35b 350b      	CPI  R16,91
00b35c f008      	BRLO _0x20600D5
                 _0x20600D4:
00b35d c002      	RJMP _0x20600D3
                 _0x20600D5:
00b35e 6012      	ORI  R17,LOW(2)
00b35f c007      	RJMP _0x20600D6
                 _0x20600D3:
00b360 3601      	CPI  R16,97
00b361 f010      	BRLO _0x20600D8
00b362 370b      	CPI  R16,123
00b363 f008      	BRLO _0x20600D9
                 _0x20600D8:
00b364 c002      	RJMP _0x20600D7
                 _0x20600D9:
00b365 6011      	ORI  R17,LOW(1)
00b366 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00b367 940e dd6a 	CALL SUBOPT_0x3DC
                 _0x20600C0:
00b369 cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00b36a 85e8      	LDD  R30,Y+8
00b36b 85f9      	LDD  R31,Y+8+1
00b36c 940e cc59 	CALL SUBOPT_0x1A5
00b36e 85ab      	LDD  R26,Y+11
00b36f 85bc      	LDD  R27,Y+11+1
00b370 93ed      	ST   X+,R30
00b371 93fc      	ST   X,R31
00b372 3201      	CPI  R16,33
00b373 f410      	BRSH _0x20600DA
00b374 e0e4      	LDI  R30,LOW(4)
00b375 c001      	RJMP _0x20600DB
                 _0x20600DA:
00b376 e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00b377 2f0e      	MOV  R16,R30
00b378 3020      	CPI  R18,0
00b379 f411      	BRNE _0x20600DD
00b37a e0e6      	LDI  R30,LOW(6)
00b37b c019      	RJMP _0x20E0013
                 _0x20600DD:
00b37c 01da      	MOVW R26,R20
00b37d 91ac      	LD   R26,X
00b37e 3ea5      	CPI  R26,LOW(0xE5)
00b37f f419      	BRNE _0x20600DE
00b380 01da      	MOVW R26,R20
00b381 e0e5      	LDI  R30,LOW(5)
00b382 93ec      	ST   X,R30
                 _0x20600DE:
00b383 85aa      	LDD  R26,Y+10
00b384 30a8      	CPI  R26,LOW(0x8)
00b385 f411      	BRNE _0x20600DF
00b386 0f11      	LSL  R17
00b387 0f11      	LSL  R17
                 _0x20600DF:
00b388 2fe1      	MOV  R30,R17
00b389 70e3      	ANDI R30,LOW(0x3)
00b38a 30e1      	CPI  R30,LOW(0x1)
00b38b f409      	BRNE _0x20600E0
00b38c 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00b38d 2fe1      	MOV  R30,R17
00b38e 70ec      	ANDI R30,LOW(0xC)
00b38f 30e4      	CPI  R30,LOW(0x4)
00b390 f409      	BRNE _0x20600E1
00b391 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00b392 01fa      	MOVW R30,R20
                +
00b393 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00b394 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00b395 940e e3a0 	CALL __LOADLOCR6
00b397 962f      	ADIW R28,15
00b398 9508      	RET
                 _follow_path_G103:
00b399 940e c55a 	CALL SUBOPT_0x7F
                 _0x20600F7:
00b39b e0e1      	LDI  R30,LOW(1)
00b39c 30e0      	CPI  R30,0
00b39d f029      	BREQ _0x20600FA
00b39e 81ac      	LDD  R26,Y+4
00b39f 81bd      	LDD  R27,Y+4+1
00b3a0 91ac      	LD   R26,X
00b3a1 32a0      	CPI  R26,LOW(0x20)
00b3a2 f009      	BREQ _0x20600FB
                 _0x20600FA:
00b3a3 c006      	RJMP _0x20600F9
                 _0x20600FB:
00b3a4 81ec      	LDD  R30,Y+4
00b3a5 81fd      	LDD  R31,Y+4+1
00b3a6 9631      	ADIW R30,1
00b3a7 83ec      	STD  Y+4,R30
00b3a8 83fd      	STD  Y+4+1,R31
00b3a9 cff1      	RJMP _0x20600F7
                 _0x20600F9:
00b3aa 81ac      	LDD  R26,Y+4
00b3ab 81bd      	LDD  R27,Y+4+1
00b3ac 91ac      	LD   R26,X
00b3ad 32af      	CPI  R26,LOW(0x2F)
00b3ae f029      	BREQ _0x20600FD
00b3af 81ac      	LDD  R26,Y+4
00b3b0 81bd      	LDD  R27,Y+4+1
00b3b1 91ac      	LD   R26,X
00b3b2 35ac      	CPI  R26,LOW(0x5C)
00b3b3 f459      	BRNE _0x20600FC
                 _0x20600FD:
00b3b4 81ec      	LDD  R30,Y+4
00b3b5 81fd      	LDD  R31,Y+4+1
00b3b6 9631      	ADIW R30,1
00b3b7 83ec      	STD  Y+4,R30
00b3b8 83fd      	STD  Y+4+1,R31
00b3b9 81ae      	LDD  R26,Y+6
00b3ba 81bf      	LDD  R27,Y+6+1
00b3bb 9616      	ADIW R26,6
00b3bc 940e c5b8 	CALL SUBOPT_0x8F
00b3be c00a      	RJMP _0x20600FF
                 _0x20600FC:
00b3bf 81ae      	LDD  R26,Y+6
00b3c0 81bf      	LDD  R27,Y+6+1
00b3c1 940e e2f0 	CALL __GETW1P
00b3c3 9676      	ADIW R30,22
00b3c4 01df      	MOVW R26,R30
00b3c5 940e e2f4 	CALL __GETD1P
00b3c7 940e dd75 	CALL SUBOPT_0x3DE
                 _0x20600FF:
00b3c9 81ac      	LDD  R26,Y+4
00b3ca 81bd      	LDD  R27,Y+4+1
00b3cb 91ac      	LD   R26,X
00b3cc 27bb      	CLR  R27
00b3cd 9790      	SBIW R26,32
00b3ce f460      	BRSH _0x2060100
00b3cf 940e ca9b 	CALL SUBOPT_0x15B
00b3d1 940e c840 	CALL SUBOPT_0xF5
00b3d3 dd02      	RCALL _dir_seek_G103
00b3d4 2f1e      	MOV  R17,R30
00b3d5 81ae      	LDD  R26,Y+6
00b3d6 81bf      	LDD  R27,Y+6+1
00b3d7 9652      	ADIW R26,18
00b3d8 940e c8ed 	CALL SUBOPT_0x113
00b3da c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00b3db 940e ca9b 	CALL SUBOPT_0x15B
00b3dd 01de      	MOVW R26,R28
00b3de 9616      	ADIW R26,6
00b3df defb      	RCALL _create_name_G103
00b3e0 2f1e      	MOV  R17,R30
00b3e1 3010      	CPI  R17,0
00b3e2 f5a9      	BRNE _0x2060104
00b3e3 81ae      	LDD  R26,Y+6
00b3e4 81bf      	LDD  R27,Y+6+1
00b3e5 de74      	RCALL _dir_find_G103
00b3e6 2f1e      	MOV  R17,R30
00b3e7 81ae      	LDD  R26,Y+6
00b3e8 81bf      	LDD  R27,Y+6+1
00b3e9 9654      	ADIW R26,20
00b3ea 940e e2f0 	CALL __GETW1P
00b3ec 85e3      	LDD  R30,Z+11
00b3ed 70e4      	ANDI R30,LOW(0x4)
00b3ee 2f0e      	MOV  R16,R30
00b3ef 3010      	CPI  R17,0
00b3f0 f039      	BREQ _0x2060106
00b3f1 3014      	CPI  R17,4
00b3f2 f411      	BRNE _0x2060108
00b3f3 3000      	CPI  R16,0
00b3f4 f009      	BREQ _0x2060109
                 _0x2060108:
00b3f5 c001      	RJMP _0x2060107
                 _0x2060109:
00b3f6 e015      	LDI  R17,LOW(5)
                 _0x2060107:
00b3f7 c020      	RJMP _0x2060104
                 _0x2060106:
00b3f8 3000      	CPI  R16,0
00b3f9 f4f1      	BRNE _0x2060104
00b3fa 81ae      	LDD  R26,Y+6
00b3fb 81bf      	LDD  R27,Y+6+1
00b3fc 9652      	ADIW R26,18
00b3fd 912d      	LD   R18,X+
00b3fe 913c      	LD   R19,X
00b3ff 01f9      	MOVW R30,R18
00b400 85e3      	LDD  R30,Z+11
00b401 71e0      	ANDI R30,LOW(0x10)
00b402 f411      	BRNE _0x206010B
00b403 e015      	LDI  R17,LOW(5)
00b404 c013      	RJMP _0x2060104
                 _0x206010B:
00b405 940e dd7b 	CALL SUBOPT_0x3DF
00b407 940e e1f6 	CALL __LSLD16
00b409 937f      	PUSH R23
00b40a 936f      	PUSH R22
00b40b 93ff      	PUSH R31
00b40c 93ef      	PUSH R30
00b40d 940e dd7f 	CALL SUBOPT_0x3E0
00b40f 91af      	POP  R26
00b410 91bf      	POP  R27
00b411 918f      	POP  R24
00b412 919f      	POP  R25
00b413 940e dd84 	CALL SUBOPT_0x3E1
00b415 940e dd75 	CALL SUBOPT_0x3DE
00b417 cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00b418 2fe1      	MOV  R30,R17
00b419 940e e3a2 	CALL __LOADLOCR4
00b41b 9628      	ADIW R28,8
00b41c 9508      	RET
                 _check_fs_G103:
00b41d 940e e329 	CALL __PUTPARD2
00b41f 81ec      	LDD  R30,Y+4
00b420 81fd      	LDD  R31,Y+4+1
00b421 81a1      	LDD  R26,Z+1
00b422 93aa      	ST   -Y,R26
00b423 81ed      	LDD  R30,Y+5
00b424 81fe      	LDD  R31,Y+5+1
00b425 96f2      	ADIW R30,50
00b426 93fa      	ST   -Y,R31
00b427 93ea      	ST   -Y,R30
                +
00b428 81eb     +LDD R30 , Y + 3
00b429 81fc     +LDD R31 , Y + 3 + 1
00b42a 816d     +LDD R22 , Y + 3 + 2
00b42b 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00b42c 940e dd89 	CALL SUBOPT_0x3E2
00b42e f011      	BREQ _0x206010C
00b42f e0e3      	LDI  R30,LOW(3)
00b430 c01c      	RJMP _0x20E0012
                 _0x206010C:
00b431 81ec      	LDD  R30,Y+4
00b432 81fd      	LDD  R31,Y+4+1
00b433 940e dd90 	CALL SUBOPT_0x3E3
00b435 f011      	BREQ _0x206010D
00b436 e0e2      	LDI  R30,LOW(2)
00b437 c015      	RJMP _0x20E0012
                 _0x206010D:
00b438 81ac      	LDD  R26,Y+4
00b439 81bd      	LDD  R27,Y+4+1
00b43a 59a8      	SUBI R26,LOW(-104)
00b43b 4fbf      	SBCI R27,HIGH(-104)
00b43c 940e dd9a 	CALL SUBOPT_0x3E4
00b43e f411      	BRNE _0x206010E
00b43f e0e0      	LDI  R30,LOW(0)
00b440 c00c      	RJMP _0x20E0012
                 _0x206010E:
00b441 81ec      	LDD  R30,Y+4
00b442 81fd      	LDD  R31,Y+4+1
00b443 96f2      	ADIW R30,50
00b444 5aee      	SUBI R30,LOW(-82)
00b445 4fff      	SBCI R31,HIGH(-82)
00b446 01df      	MOVW R26,R30
00b447 940e dd9a 	CALL SUBOPT_0x3E4
00b449 f411      	BRNE _0x206010F
00b44a e0e0      	LDI  R30,LOW(0)
00b44b c001      	RJMP _0x20E0012
                 _0x206010F:
00b44c e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00b44d 9626      	ADIW R28,6
00b44e 9508      	RET
                 _chk_mounted:
00b44f 93aa      	ST   -Y,R26
00b450 9764      	SBIW R28,20
00b451 940e e399 	CALL __SAVELOCR6
00b453 8dad      	LDD  R26,Y+29
00b454 8dbe      	LDD  R27,Y+29+1
00b455 940e e2f0 	CALL __GETW1P
00b457 87e8      	STD  Y+8,R30
00b458 87f9      	STD  Y+8+1,R31
00b459 85a8      	LDD  R26,Y+8
00b45a 85b9      	LDD  R27,Y+8+1
00b45b 91ec      	LD   R30,X
00b45c 53e0      	SUBI R30,LOW(48)
00b45d 2f0e      	MOV  R16,R30
00b45e 300a      	CPI  R16,10
00b45f f420      	BRSH _0x2060111
00b460 9611      	ADIW R26,1
00b461 91ac      	LD   R26,X
00b462 33aa      	CPI  R26,LOW(0x3A)
00b463 f009      	BREQ _0x2060112
                 _0x2060111:
00b464 c00a      	RJMP _0x2060110
                 _0x2060112:
00b465 85e8      	LDD  R30,Y+8
00b466 85f9      	LDD  R31,Y+8+1
00b467 9632      	ADIW R30,2
00b468 940e cbf5 	CALL SUBOPT_0x192
00b46a 8dad      	LDD  R26,Y+29
00b46b 8dbe      	LDD  R27,Y+29+1
00b46c 93ed      	ST   X+,R30
00b46d 93fc      	ST   X,R31
00b46e c002      	RJMP _0x2060113
                 _0x2060110:
00b46f 9100 1ab6 	LDS  R16,_Drive_G103
                 _0x2060113:
00b471 3001      	CPI  R16,1
00b472 f010      	BRLO _0x2060114
00b473 e0eb      	LDI  R30,LOW(11)
00b474 c1c3      	RJMP _0x20E0010
                 _0x2060114:
00b475 2fe0      	MOV  R30,R16
00b476 940e dda8 	CALL SUBOPT_0x3E5
00b478 940e dc0e 	CALL SUBOPT_0x3AA
00b47a 8dab      	LDD  R26,Y+27
00b47b 8dbc      	LDD  R27,Y+27+1
00b47c 93ed      	ST   X+,R30
00b47d 93fc      	ST   X,R31
00b47e 81ee      	LDD  R30,Y+6
00b47f 81ff      	LDD  R31,Y+6+1
00b480 9730      	SBIW R30,0
00b481 f411      	BRNE _0x2060115
00b482 e0ec      	LDI  R30,LOW(12)
00b483 c1b4      	RJMP _0x20E0010
                 _0x2060115:
00b484 81ae      	LDD  R26,Y+6
00b485 81bf      	LDD  R27,Y+6+1
00b486 91ec      	LD   R30,X
00b487 30e0      	CPI  R30,0
00b488 f089      	BREQ _0x2060116
00b489 81ee      	LDD  R30,Y+6
00b48a 81ff      	LDD  R31,Y+6+1
00b48b 81a1      	LDD  R26,Z+1
00b48c 940e a9e3 	CALL _disk_status
00b48e 2f5e      	MOV  R21,R30
00b48f fd50      	SBRC R21,0
00b490 c009      	RJMP _0x2060117
00b491 8dea      	LDD  R30,Y+26
00b492 30e0      	CPI  R30,0
00b493 f011      	BREQ _0x2060119
00b494 fd52      	SBRC R21,2
00b495 c001      	RJMP _0x206011A
                 _0x2060119:
00b496 c002      	RJMP _0x2060118
                 _0x206011A:
00b497 e0ea      	LDI  R30,LOW(10)
00b498 c19f      	RJMP _0x20E0010
                 _0x2060118:
00b499 c19d      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00b49a 81ae      	LDD  R26,Y+6
00b49b 81bf      	LDD  R27,Y+6+1
00b49c e0e0      	LDI  R30,LOW(0)
00b49d 93ec      	ST   X,R30
00b49e 2fe0      	MOV  R30,R16
                +
00b49f 81ae     +LDD R26 , Y + 6
00b4a0 81bf     +LDD R27 , Y + 6 + 1
00b4a1 9611     +ADIW R26 , 1
00b4a2 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00b4a3 81ee      	LDD  R30,Y+6
00b4a4 81ff      	LDD  R31,Y+6+1
00b4a5 81a1      	LDD  R26,Z+1
00b4a6 940e a912 	CALL _disk_initialize
00b4a8 2f5e      	MOV  R21,R30
00b4a9 ff50      	SBRS R21,0
00b4aa c002      	RJMP _0x206011B
00b4ab e0e3      	LDI  R30,LOW(3)
00b4ac c18b      	RJMP _0x20E0010
                 _0x206011B:
00b4ad 8dea      	LDD  R30,Y+26
00b4ae 30e0      	CPI  R30,0
00b4af f011      	BREQ _0x206011D
00b4b0 fd52      	SBRC R21,2
00b4b1 c001      	RJMP _0x206011E
                 _0x206011D:
00b4b2 c002      	RJMP _0x206011C
                 _0x206011E:
00b4b3 e0ea      	LDI  R30,LOW(10)
00b4b4 c183      	RJMP _0x20E0010
                 _0x206011C:
00b4b5 940e ca9b 	CALL SUBOPT_0x15B
00b4b7 940e dd0e 	CALL SUBOPT_0x3CD
                +
00b4b9 8fe8     +STD Y + 24 , R30
00b4ba 8ff9     +STD Y + 24 + 1 , R31
00b4bb 8f6a     +STD Y + 24 + 2 , R22
00b4bc 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00b4bd 01df      	MOVW R26,R30
00b4be 01cb      	MOVW R24,R22
00b4bf df5d      	RCALL _check_fs_G103
00b4c0 2f1e      	MOV  R17,R30
00b4c1 3011      	CPI  R17,1
00b4c2 f4b1      	BRNE _0x206011F
00b4c3 81ee      	LDD  R30,Y+6
00b4c4 81ff      	LDD  R31,Y+6+1
00b4c5 96f2      	ADIW R30,50
00b4c6 54e2      	SUBI R30,LOW(-446)
00b4c7 4ffe      	SBCI R31,HIGH(-446)
00b4c8 019f      	MOVW R18,R30
00b4c9 01f9      	MOVW R30,R18
00b4ca 81e4      	LDD  R30,Z+4
00b4cb 30e0      	CPI  R30,0
00b4cc f061      	BREQ _0x2060120
00b4cd 01d9      	MOVW R26,R18
00b4ce 9618      	ADIW R26,8
00b4cf 940e e2f4 	CALL __GETD1P
00b4d1 940e c6f8 	CALL SUBOPT_0xC1
00b4d3 940e ca9b 	CALL SUBOPT_0x15B
00b4d5 940e d013 	CALL SUBOPT_0x22B
00b4d7 df45      	RCALL _check_fs_G103
00b4d8 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00b4d9 3013      	CPI  R17,3
00b4da f411      	BRNE _0x2060121
00b4db e0e1      	LDI  R30,LOW(1)
00b4dc c15b      	RJMP _0x20E0010
                 _0x2060121:
00b4dd 3010      	CPI  R17,0
00b4de f449      	BRNE _0x2060123
00b4df 81ae      	LDD  R26,Y+6
00b4e0 81bf      	LDD  R27,Y+6+1
00b4e1 96dd      	ADIW R26,61
00b4e2 940e e2f0 	CALL __GETW1P
00b4e4 30e0      	CPI  R30,LOW(0x200)
00b4e5 e0a2      	LDI  R26,HIGH(0x200)
00b4e6 07fa      	CPC  R31,R26
00b4e7 f011      	BREQ _0x2060122
                 _0x2060123:
00b4e8 e0ed      	LDI  R30,LOW(13)
00b4e9 c14e      	RJMP _0x20E0010
                 _0x2060122:
00b4ea 81ae      	LDD  R26,Y+6
00b4eb 81bf      	LDD  R27,Y+6+1
00b4ec 5ba8      	SUBI R26,LOW(-72)
00b4ed 4fbf      	SBCI R27,HIGH(-72)
00b4ee 940e c2bf 	CALL SUBOPT_0x1E
00b4f0 940e d12f 	CALL SUBOPT_0x253
00b4f2 940e c77e 	CALL SUBOPT_0xD4
00b4f4 940e e37d 	CALL __CPD10
00b4f6 f441      	BRNE _0x2060125
00b4f7 81ae      	LDD  R26,Y+6
00b4f8 81bf      	LDD  R27,Y+6+1
00b4f9 5aaa      	SUBI R26,LOW(-86)
00b4fa 4fbf      	SBCI R27,HIGH(-86)
00b4fb 940e e2f4 	CALL __GETD1P
00b4fd 940e d12f 	CALL SUBOPT_0x253
                 _0x2060125:
00b4ff 940e c77e 	CALL SUBOPT_0xD4
                +
00b501 81ae     +LDD R26 , Y + 6
00b502 81bf     +LDD R27 , Y + 6 + 1
00b503 965a     +ADIW R26 , 26
00b504 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00b506 81ee      	LDD  R30,Y+6
00b507 81ff      	LDD  R31,Y+6+1
00b508 5bee      	SUBI R30,LOW(-66)
00b509 4fff      	SBCI R31,HIGH(-66)
00b50a 81e0      	LD   R30,Z
                +
00b50b 81ae     +LDD R26 , Y + 6
00b50c 81bf     +LDD R27 , Y + 6 + 1
00b50d 9613     +ADIW R26 , 3
00b50e 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00b50f 81ee      	LDD  R30,Y+6
00b510 81ff      	LDD  R31,Y+6+1
00b511 81e3      	LDD  R30,Z+3
00b512 e0f0      	LDI  R31,0
00b513 940e d12a 	CALL SUBOPT_0x252
00b515 940e d308 	CALL SUBOPT_0x299
00b517 940e d12f 	CALL SUBOPT_0x253
00b519 940e ddb0 	CALL SUBOPT_0x3E6
00b51b 940e c774 	CALL SUBOPT_0xD2
00b51d 940e dd2c 	CALL SUBOPT_0x3D2
                +
00b51f 81ae     +LDD R26 , Y + 6
00b520 81bf     +LDD R27 , Y + 6 + 1
00b521 9692     +ADIW R26 , 34
00b522 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00b524 81ee      	LDD  R30,Y+6
00b525 81ff      	LDD  R31,Y+6+1
00b526 ade7      	LDD  R30,Z+63
                +
00b527 81ae     +LDD R26 , Y + 6
00b528 81bf     +LDD R27 , Y + 6 + 1
00b529 9612     +ADIW R26 , 2
00b52a 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00b52b 81ae      	LDD  R26,Y+6
00b52c 81bf      	LDD  R27,Y+6+1
00b52d 5bad      	SUBI R26,LOW(-67)
00b52e 4fbf      	SBCI R27,HIGH(-67)
00b52f 940e e2f0 	CALL __GETW1P
                +
00b531 81ae     +LDD R26 , Y + 6
00b532 81bf     +LDD R27 , Y + 6 + 1
00b533 9618     +ADIW R26 , 8
00b534 93ed     +ST X + , R30
00b535 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00b536 81ae      	LDD  R26,Y+6
00b537 81bf      	LDD  R27,Y+6+1
00b538 5bab      	SUBI R26,LOW(-69)
00b539 4fbf      	SBCI R27,HIGH(-69)
00b53a 940e c2bf 	CALL SUBOPT_0x1E
00b53c 940e ddb7 	CALL SUBOPT_0x3E7
00b53e 940e c484 	CALL SUBOPT_0x60
00b540 940e e37d 	CALL __CPD10
00b542 f441      	BRNE _0x2060126
00b543 81ae      	LDD  R26,Y+6
00b544 81bf      	LDD  R27,Y+6+1
00b545 5aae      	SUBI R26,LOW(-82)
00b546 4fbf      	SBCI R27,HIGH(-82)
00b547 940e e2f4 	CALL __GETD1P
00b549 940e ddb7 	CALL SUBOPT_0x3E7
                 _0x2060126:
00b54b 940e ddb0 	CALL SUBOPT_0x3E6
00b54d 940e dca5 	CALL SUBOPT_0x3BF
00b54f 2766      	CLR  R22
00b550 2777      	CLR  R23
00b551 940e c6f3 	CALL SUBOPT_0xC0
00b553 940e d12a 	CALL SUBOPT_0x252
00b555 940e e186 	CALL __SUBD12
00b557 937f      	PUSH R23
00b558 936f      	PUSH R22
00b559 93ff      	PUSH R31
00b55a 93ef      	PUSH R30
00b55b 940e ddbc 	CALL SUBOPT_0x3E8
00b55d 91af      	POP  R26
00b55e 91bf      	POP  R27
00b55f 918f      	POP  R24
00b560 919f      	POP  R25
00b561 2766      	CLR  R22
00b562 2777      	CLR  R23
00b563 940e e18b 	CALL __SUBD21
00b565 81ee      	LDD  R30,Y+6
00b566 81ff      	LDD  R31,Y+6+1
00b567 940e d300 	CALL SUBOPT_0x297
00b569 940e e201 	CALL __CWD1
00b56b 940e e278 	CALL __DIVD21U
                +
00b56d 5fee     +SUBI R30 , LOW ( - 2 )
00b56e 4fff     +SBCI R31 , HIGH ( - 2 )
00b56f 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00b570 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00b571 940e d140 	CALL SUBOPT_0x256
                +
00b573 81ae     +LDD R26 , Y + 6
00b574 81bf     +LDD R27 , Y + 6 + 1
00b575 965e     +ADIW R26 , 30
00b576 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00b578 e011      	LDI  R17,LOW(1)
00b579 940e c42b 	CALL SUBOPT_0x52
                +
00b57b 3fa7     +CPI R26 , LOW ( 0xFF7 )
00b57c e0ef     +LDI R30 , HIGH ( 0xFF7 )
00b57d 07be     +CPC R27 , R30
00b57e e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00b57f 078e     +CPC R24 , R30
00b580 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00b581 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00b582 f008      	BRLO _0x2060127
00b583 e012      	LDI  R17,LOW(2)
                 _0x2060127:
00b584 940e c42b 	CALL SUBOPT_0x52
                +
00b586 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00b587 efef     +LDI R30 , HIGH ( 0xFFF7 )
00b588 07be     +CPC R27 , R30
00b589 e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00b58a 078e     +CPC R24 , R30
00b58b e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00b58c 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00b58d f008      	BRLO _0x2060128
00b58e e013      	LDI  R17,LOW(3)
                 _0x2060128:
00b58f 3013      	CPI  R17,3
00b590 f439      	BRNE _0x2060129
00b591 81ae      	LDD  R26,Y+6
00b592 81bf      	LDD  R27,Y+6+1
00b593 5aa2      	SUBI R26,LOW(-94)
00b594 4fbf      	SBCI R27,HIGH(-94)
00b595 940e e2f4 	CALL __GETD1P
00b597 c002      	RJMP _0x206022D
                 _0x2060129:
00b598 940e ddc4 	CALL SUBOPT_0x3E9
                 _0x206022D:
                +
00b59a 81ae     +LDD R26 , Y + 6
00b59b 81bf     +LDD R27 , Y + 6 + 1
00b59c 9696     +ADIW R26 , 38
00b59d 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00b59f 940e ddc4 	CALL SUBOPT_0x3E9
00b5a1 937f      	PUSH R23
00b5a2 936f      	PUSH R22
00b5a3 93ff      	PUSH R31
00b5a4 93ef      	PUSH R30
00b5a5 940e ddbc 	CALL SUBOPT_0x3E8
00b5a7 91af      	POP  R26
00b5a8 91bf      	POP  R27
00b5a9 918f      	POP  R24
00b5aa 919f      	POP  R25
00b5ab 940e dd2c 	CALL SUBOPT_0x3D2
                +
00b5ad 81ae     +LDD R26 , Y + 6
00b5ae 81bf     +LDD R27 , Y + 6 + 1
00b5af 969a     +ADIW R26 , 42
00b5b0 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00b5b2 81ae      	LDD  R26,Y+6
00b5b3 81bf      	LDD  R27,Y+6+1
00b5b4 961e      	ADIW R26,14
00b5b5 940e c2ea 	CALL SUBOPT_0x25
00b5b7 940e e2ff 	CALL __PUTDP1
00b5b9 81ae      	LDD  R26,Y+6
00b5ba 81bf      	LDD  R27,Y+6+1
00b5bb 9614      	ADIW R26,4
00b5bc e0e0      	LDI  R30,LOW(0)
00b5bd 93ec      	ST   X,R30
00b5be 3013      	CPI  R17,3
00b5bf f011      	BREQ PC+3
00b5c0 940c b623 	JMP _0x206012B
00b5c2 81ae      	LDD  R26,Y+6
00b5c3 81bf      	LDD  R27,Y+6+1
00b5c4 9615      	ADIW R26,5
00b5c5 93ec      	ST   X,R30
00b5c6 81ae      	LDD  R26,Y+6
00b5c7 81bf      	LDD  R27,Y+6+1
00b5c8 59ae      	SUBI R26,LOW(-98)
00b5c9 4fbf      	SBCI R27,HIGH(-98)
00b5ca 940e e2f0 	CALL __GETW1P
00b5cc 940e c774 	CALL SUBOPT_0xD2
00b5ce 940e dd2c 	CALL SUBOPT_0x3D2
                +
00b5d0 81ae     +LDD R26 , Y + 6
00b5d1 81bf     +LDD R27 , Y + 6 + 1
00b5d2 9652     +ADIW R26 , 18
00b5d3 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00b5d5 81ee      	LDD  R30,Y+6
00b5d6 81ff      	LDD  R31,Y+6+1
00b5d7 81a1      	LDD  R26,Z+1
00b5d8 93aa      	ST   -Y,R26
00b5d9 81ef      	LDD  R30,Y+7
00b5da 85f8      	LDD  R31,Y+7+1
00b5db 96f2      	ADIW R30,50
00b5dc 93fa      	ST   -Y,R31
00b5dd 93ea      	ST   -Y,R30
00b5de 85e9      	LDD  R30,Y+9
00b5df 85fa      	LDD  R31,Y+9+1
00b5e0 940e dc62 	CALL SUBOPT_0x3B5
00b5e2 940e a9ed 	CALL _disk_read
00b5e4 30e0      	CPI  R30,0
00b5e5 f511      	BRNE _0x206012D
00b5e6 81ee      	LDD  R30,Y+6
00b5e7 81ff      	LDD  R31,Y+6+1
00b5e8 940e dd90 	CALL SUBOPT_0x3E3
00b5ea f4e9      	BRNE _0x206012D
00b5eb 81ae      	LDD  R26,Y+6
00b5ec 81bf      	LDD  R27,Y+6+1
00b5ed 96d2      	ADIW R26,50
00b5ee 940e e2f4 	CALL __GETD1P
                +
00b5f0 35e2     +CPI R30 , LOW ( 0x41615252 )
00b5f1 e5a2     +LDI R26 , HIGH ( 0x41615252 )
00b5f2 07fa     +CPC R31 , R26
00b5f3 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00b5f4 076a     +CPC R22 , R26
00b5f5 e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00b5f6 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00b5f7 f481      	BRNE _0x206012D
00b5f8 81ee      	LDD  R30,Y+6
00b5f9 81ff      	LDD  R31,Y+6+1
00b5fa 96f2      	ADIW R30,50
00b5fb 51ec      	SUBI R30,LOW(-484)
00b5fc 4ffe      	SBCI R31,HIGH(-484)
00b5fd 01df      	MOVW R26,R30
00b5fe 940e e2f4 	CALL __GETD1P
                +
00b600 37e2     +CPI R30 , LOW ( 0x61417272 )
00b601 e7a2     +LDI R26 , HIGH ( 0x61417272 )
00b602 07fa     +CPC R31 , R26
00b603 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00b604 076a     +CPC R22 , R26
00b605 e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00b606 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00b607 f009      	BREQ _0x206012E
                 _0x206012D:
00b608 c01a      	RJMP _0x206012C
                 _0x206012E:
00b609 81ee      	LDD  R30,Y+6
00b60a 81ff      	LDD  R31,Y+6+1
00b60b 96f2      	ADIW R30,50
00b60c 51e4      	SUBI R30,LOW(-492)
00b60d 4ffe      	SBCI R31,HIGH(-492)
00b60e 01df      	MOVW R26,R30
00b60f 940e e2f4 	CALL __GETD1P
                +
00b611 81ae     +LDD R26 , Y + 6
00b612 81bf     +LDD R27 , Y + 6 + 1
00b613 961a     +ADIW R26 , 10
00b614 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00b616 81ee      	LDD  R30,Y+6
00b617 81ff      	LDD  R31,Y+6+1
00b618 96f2      	ADIW R30,50
00b619 51e8      	SUBI R30,LOW(-488)
00b61a 4ffe      	SBCI R31,HIGH(-488)
00b61b 01df      	MOVW R26,R30
00b61c 940e e2f4 	CALL __GETD1P
                +
00b61e 81ae     +LDD R26 , Y + 6
00b61f 81bf     +LDD R27 , Y + 6 + 1
00b620 961e     +ADIW R26 , 14
00b621 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00b623 81ae      	LDD  R26,Y+6
00b624 81bf      	LDD  R27,Y+6+1
00b625 931c      	ST   X,R17
00b626 969e      	ADIW R26,46
00b627 940e c5b8 	CALL SUBOPT_0x8F
00b629 81ae      	LDD  R26,Y+6
00b62a 81bf      	LDD  R27,Y+6+1
00b62b 9656      	ADIW R26,22
00b62c 940e c5b8 	CALL SUBOPT_0x8F
00b62e eba4      	LDI  R26,LOW(_Fsid_G103)
00b62f e1ba      	LDI  R27,HIGH(_Fsid_G103)
00b630 940e c549 	CALL SUBOPT_0x7C
                +
00b632 81ae     +LDD R26 , Y + 6
00b633 81bf     +LDD R27 , Y + 6 + 1
00b634 9616     +ADIW R26 , 6
00b635 93ed     +ST X + , R30
00b636 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00b637 e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00b638 940e e3a0 	CALL __LOADLOCR6
00b63a 966f      	ADIW R28,31
00b63b 9508      	RET
                 _validate_G103:
00b63c 940e d271 	CALL SUBOPT_0x281
00b63e 9730      	SBIW R30,0
00b63f f071      	BREQ _0x2060130
00b640 81aa      	LDD  R26,Y+2
00b641 81bb      	LDD  R27,Y+2+1
00b642 91ec      	LD   R30,X
00b643 30e0      	CPI  R30,0
00b644 f049      	BREQ _0x2060130
00b645 81ea      	LDD  R30,Y+2
00b646 81fb      	LDD  R31,Y+2+1
00b647 81a6      	LDD  R26,Z+6
00b648 81b7      	LDD  R27,Z+7
00b649 81e8      	LD   R30,Y
00b64a 81f9      	LDD  R31,Y+1
00b64b 17ea      	CP   R30,R26
00b64c 07fb      	CPC  R31,R27
00b64d f011      	BREQ _0x206012F
                 _0x2060130:
00b64e e0e9      	LDI  R30,LOW(9)
00b64f c00a      	RJMP _0x20E000F
                 _0x206012F:
00b650 81ea      	LDD  R30,Y+2
00b651 81fb      	LDD  R31,Y+2+1
00b652 81a1      	LDD  R26,Z+1
00b653 940e a9e3 	CALL _disk_status
00b655 70e1      	ANDI R30,LOW(0x1)
00b656 f011      	BREQ _0x2060132
00b657 e0e3      	LDI  R30,LOW(3)
00b658 c001      	RJMP _0x20E000F
                 _0x2060132:
00b659 e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00b65a 9624      	ADIW R28,4
00b65b 9508      	RET
                 _f_mount:
00b65c 940e c566 	CALL SUBOPT_0x81
00b65e 81ac      	LDD  R26,Y+4
00b65f 30a1      	CPI  R26,LOW(0x1)
00b660 f010      	BRLO _0x2060133
00b661 e0eb      	LDI  R30,LOW(11)
00b662 c020      	RJMP _0x20E000E
                 _0x2060133:
00b663 81ec      	LDD  R30,Y+4
00b664 940e dda8 	CALL SUBOPT_0x3E5
00b666 910d      	LD   R16,X+
00b667 911c      	LD   R17,X
00b668 2e00      	MOV  R0,R16
00b669 2a01      	OR   R0,R17
00b66a f019      	BREQ _0x2060134
00b66b 01d8      	MOVW R26,R16
00b66c e0e0      	LDI  R30,LOW(0)
00b66d 93ec      	ST   X,R30
                 _0x2060134:
00b66e 81ea      	LDD  R30,Y+2
00b66f 81fb      	LDD  R31,Y+2+1
00b670 9730      	SBIW R30,0
00b671 f021      	BREQ _0x2060135
00b672 81aa      	LDD  R26,Y+2
00b673 81bb      	LDD  R27,Y+2+1
00b674 e0e0      	LDI  R30,LOW(0)
00b675 93ec      	ST   X,R30
                 _0x2060135:
00b676 81ec      	LDD  R30,Y+4
00b677 eba2      	LDI  R26,LOW(_FatFs_G103)
00b678 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b679 e0f0      	LDI  R31,0
00b67a 0fee      	LSL  R30
00b67b 1fff      	ROL  R31
00b67c 0fea      	ADD  R30,R26
00b67d 1ffb      	ADC  R31,R27
00b67e 81aa      	LDD  R26,Y+2
00b67f 81bb      	LDD  R27,Y+2+1
00b680 83a0      	STD  Z+0,R26
00b681 83b1      	STD  Z+1,R27
00b682 e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00b683 8119      	LDD  R17,Y+1
00b684 8108      	LDD  R16,Y+0
00b685 9625      	ADIW R28,5
00b686 9508      	RET
                 _f_open:
00b687 93aa      	ST   -Y,R26
00b688 97a2      	SBIW R28,34
00b689 940e e39b 	CALL __SAVELOCR4
00b68b a5a9      	LDD  R26,Y+41
00b68c a5ba      	LDD  R27,Y+41+1
00b68d 940e c8ed 	CALL SUBOPT_0x113
00b68f a1ee      	LDD  R30,Y+38
00b690 71ef      	ANDI R30,LOW(0x1F)
00b691 a3ee      	STD  Y+38,R30
00b692 01fe      	MOVW R30,R28
00b693 96b7      	ADIW R30,39
00b694 93fa      	ST   -Y,R31
00b695 93ea      	ST   -Y,R30
00b696 940e c4d0 	CALL SUBOPT_0x6C
00b698 a5ea      	LDD  R30,Y+42
00b699 71ee      	ANDI R30,LOW(0x1E)
00b69a 2fae      	MOV  R26,R30
00b69b ddb3      	RCALL _chk_mounted
00b69c 2f1e      	MOV  R17,R30
00b69d 3010      	CPI  R17,0
00b69e f011      	BREQ _0x2060136
00b69f 2fe1      	MOV  R30,R17
00b6a0 c10f      	RJMP _0x20E000D
                 _0x2060136:
00b6a1 01fe      	MOVW R30,R28
00b6a2 9634      	ADIW R30,4
00b6a3 a3ec      	STD  Y+36,R30
00b6a4 a3fd      	STD  Y+36+1,R31
00b6a5 940e c46f 	CALL SUBOPT_0x5D
00b6a7 a5a9      	LDD  R26,Y+41
00b6a8 a5ba      	LDD  R27,Y+41+1
00b6a9 dcef      	RCALL _follow_path_G103
00b6aa 2f1e      	MOV  R17,R30
00b6ab a1ee      	LDD  R30,Y+38
00b6ac 71ec      	ANDI R30,LOW(0x1C)
00b6ad f411      	BRNE PC+3
00b6ae 940c b743 	JMP _0x2060137
00b6b0 9728      	SBIW R28,8
00b6b1 3010      	CPI  R17,0
00b6b2 f089      	BREQ _0x2060138
00b6b3 3014      	CPI  R17,4
00b6b4 f421      	BRNE _0x2060139
00b6b5 01de      	MOVW R26,R28
00b6b6 9658      	ADIW R26,24
00b6b7 dbd6      	RCALL _dir_register_G103
00b6b8 2f1e      	MOV  R17,R30
                 _0x2060139:
00b6b9 3010      	CPI  R17,0
00b6ba f019      	BREQ _0x206013A
00b6bb 2fe1      	MOV  R30,R17
00b6bc 9628      	ADIW R28,8
00b6bd c0f2      	RJMP _0x20E000D
                 _0x206013A:
00b6be a5ee      	LDD  R30,Y+46
00b6bf 60e8      	ORI  R30,8
00b6c0 a7ee      	STD  Y+46,R30
                +
00b6c1 a52a     +LDD R18 , Y + 42
00b6c2 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b6c3 c066      	RJMP _0x206013B
                 _0x2060138:
00b6c4 a5ee      	LDD  R30,Y+46
00b6c5 70e4      	ANDI R30,LOW(0x4)
00b6c6 f019      	BREQ _0x206013C
00b6c7 e0e8      	LDI  R30,LOW(8)
00b6c8 9628      	ADIW R28,8
00b6c9 c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
00b6ca a52a     +LDD R18 , Y + 42
00b6cb a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b6cc 2e02      	MOV  R0,R18
00b6cd 2a03      	OR   R0,R19
00b6ce f021      	BREQ _0x206013E
00b6cf 01f9      	MOVW R30,R18
00b6d0 85e3      	LDD  R30,Z+11
00b6d1 71e1      	ANDI R30,LOW(0x11)
00b6d2 f019      	BREQ _0x206013D
                 _0x206013E:
00b6d3 e0e7      	LDI  R30,LOW(7)
00b6d4 9628      	ADIW R28,8
00b6d5 c0da      	RJMP _0x20E000D
                 _0x206013D:
00b6d6 a5ee      	LDD  R30,Y+46
00b6d7 70e8      	ANDI R30,LOW(0x8)
00b6d8 f411      	BRNE PC+3
00b6d9 940c b72a 	JMP _0x2060140
00b6db 940e dd7b 	CALL SUBOPT_0x3DF
00b6dd 940e e1f6 	CALL __LSLD16
00b6df 937f      	PUSH R23
00b6e0 936f      	PUSH R22
00b6e1 93ff      	PUSH R31
00b6e2 93ef      	PUSH R30
00b6e3 940e dd7f 	CALL SUBOPT_0x3E0
00b6e5 91af      	POP  R26
00b6e6 91bf      	POP  R27
00b6e7 918f      	POP  R24
00b6e8 919f      	POP  R25
00b6e9 940e dd84 	CALL SUBOPT_0x3E1
00b6eb 940e c64a 	CALL SUBOPT_0xA1
00b6ed 01f9      	MOVW R30,R18
00b6ee 9674      	ADIW R30,20
00b6ef e0a0      	LDI  R26,LOW(0)
00b6f0 e0b0      	LDI  R27,HIGH(0)
00b6f1 83a0      	STD  Z+0,R26
00b6f2 83b1      	STD  Z+1,R27
00b6f3 01f9      	MOVW R30,R18
00b6f4 967a      	ADIW R30,26
00b6f5 83a0      	STD  Z+0,R26
00b6f6 83b1      	STD  Z+1,R27
00b6f7 01f9      	MOVW R30,R18
00b6f8 967c      	ADIW R30,28
00b6f9 940e c317 	CALL SUBOPT_0x2C
00b6fb 940e d198 	CALL SUBOPT_0x261
00b6fd 8da8      	LDD  R26,Y+24
00b6fe 8db9      	LDD  R27,Y+24+1
00b6ff 9614      	ADIW R26,4
00b700 e0e1      	LDI  R30,LOW(1)
00b701 93ec      	ST   X,R30
00b702 8da8      	LDD  R26,Y+24
00b703 8db9      	LDD  R27,Y+24+1
00b704 969e      	ADIW R26,46
00b705 940e dc77 	CALL SUBOPT_0x3B8
00b707 940e c58c 	CALL SUBOPT_0x87
00b709 940e e37d 	CALL __CPD10
00b70b f0a1      	BREQ _0x2060141
00b70c 940e d358 	CALL SUBOPT_0x2A6
00b70e 940e c6b1 	CALL SUBOPT_0xB4
00b710 d889      	RCALL _remove_chain_G103
00b711 2f1e      	MOV  R17,R30
00b712 3010      	CPI  R17,0
00b713 f019      	BREQ _0x2060142
00b714 2fe1      	MOV  R30,R17
00b715 9628      	ADIW R28,8
00b716 c099      	RJMP _0x20E000D
                 _0x2060142:
00b717 940e c58c 	CALL SUBOPT_0x87
00b719 940e c799 	CALL SUBOPT_0xDA
                +
00b71b 8da8     +LDD R26 , Y + 24
00b71c 8db9     +LDD R27 , Y + 24 + 1
00b71d 961a     +ADIW R26 , 10
00b71e 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00b720 940e d358 	CALL SUBOPT_0x2A6
00b722 940e c45d 	CALL SUBOPT_0x59
00b724 940e ddcc 	CALL SUBOPT_0x3EA
00b726 f019      	BREQ _0x2060143
00b727 2fe1      	MOV  R30,R17
00b728 9628      	ADIW R28,8
00b729 c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00b72a a5ee      	LDD  R30,Y+46
00b72b 70e8      	ANDI R30,LOW(0x8)
00b72c f0a1      	BREQ _0x2060144
00b72d 01f9      	MOVW R30,R18
00b72e 963b      	ADIW R30,11
00b72f e0a0      	LDI  R26,LOW(0)
00b730 83a0      	STD  Z+0,R26
00b731 940e ac88 	CALL _get_fattime
00b733 940e c692 	CALL SUBOPT_0xAE
                +
00b735 01d9     +MOVW R26 , R18
00b736 961e     +ADIW R26 , 14
00b737 940e e2ff+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00b739 8da8      	LDD  R26,Y+24
00b73a 8db9      	LDD  R27,Y+24+1
00b73b 9614      	ADIW R26,4
00b73c e0e1      	LDI  R30,LOW(1)
00b73d 93ec      	ST   X,R30
00b73e a5ee      	LDD  R30,Y+46
00b73f 62e0      	ORI  R30,0x20
00b740 a7ee      	STD  Y+46,R30
                 _0x2060144:
00b741 9628      	ADIW R28,8
00b742 c019      	RJMP _0x2060145
                 _0x2060137:
00b743 3010      	CPI  R17,0
00b744 f011      	BREQ _0x2060146
00b745 2fe1      	MOV  R30,R17
00b746 c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00b747 a12a     +LDD R18 , Y + 34
00b748 a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00b749 2e02      	MOV  R0,R18
00b74a 2a03      	OR   R0,R19
00b74b f021      	BREQ _0x2060148
00b74c 01f9      	MOVW R30,R18
00b74d 85e3      	LDD  R30,Z+11
00b74e 71e0      	ANDI R30,LOW(0x10)
00b74f f011      	BREQ _0x2060147
                 _0x2060148:
00b750 e0e4      	LDI  R30,LOW(4)
00b751 c05e      	RJMP _0x20E000D
                 _0x2060147:
00b752 a1ee      	LDD  R30,Y+38
00b753 70e2      	ANDI R30,LOW(0x2)
00b754 f021      	BREQ _0x206014B
00b755 01f9      	MOVW R30,R18
00b756 85e3      	LDD  R30,Z+11
00b757 70e1      	ANDI R30,LOW(0x1)
00b758 f409      	BRNE _0x206014C
                 _0x206014B:
00b759 c002      	RJMP _0x206014A
                 _0x206014C:
00b75a e0e7      	LDI  R30,LOW(7)
00b75b c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00b75c 89a8      	LDD  R26,Y+16
00b75d 89b9      	LDD  R27,Y+16+1
00b75e 969e      	ADIW R26,46
00b75f 940e e2f4 	CALL __GETD1P
                +
00b761 a5a9     +LDD R26 , Y + 41
00b762 a5ba     +LDD R27 , Y + 41 + 1
00b763 965a     +ADIW R26 , 26
00b764 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00b766 a1ea      	LDD  R30,Y+34
00b767 a1fb      	LDD  R31,Y+34+1
                +
00b768 a5a9     +LDD R26 , Y + 41
00b769 a5ba     +LDD R27 , Y + 41 + 1
00b76a 965e     +ADIW R26 , 30
00b76b 93ed     +ST X + , R30
00b76c 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00b76d a1ee      	LDD  R30,Y+38
                +
00b76e a5a9     +LDD R26 , Y + 41
00b76f a5ba     +LDD R27 , Y + 41 + 1
00b770 9614     +ADIW R26 , 4
00b771 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00b772 940e dd7b 	CALL SUBOPT_0x3DF
00b774 940e e1f6 	CALL __LSLD16
00b776 937f      	PUSH R23
00b777 936f      	PUSH R22
00b778 93ff      	PUSH R31
00b779 93ef      	PUSH R30
00b77a 940e dd7f 	CALL SUBOPT_0x3E0
00b77c 91af      	POP  R26
00b77d 91bf      	POP  R27
00b77e 918f      	POP  R24
00b77f 919f      	POP  R25
00b780 940e dd84 	CALL SUBOPT_0x3E1
                +
00b782 a5a9     +LDD R26 , Y + 41
00b783 a5ba     +LDD R27 , Y + 41 + 1
00b784 961e     +ADIW R26 , 14
00b785 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00b787 01d9      	MOVW R26,R18
00b788 965c      	ADIW R26,28
00b789 940e e2f4 	CALL __GETD1P
                +
00b78b a5a9     +LDD R26 , Y + 41
00b78c a5ba     +LDD R27 , Y + 41 + 1
00b78d 961a     +ADIW R26 , 10
00b78e 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00b790 a5a9      	LDD  R26,Y+41
00b791 a5ba      	LDD  R27,Y+41+1
00b792 9616      	ADIW R26,6
00b793 940e c5b8 	CALL SUBOPT_0x8F
00b795 a5a9      	LDD  R26,Y+41
00b796 a5ba      	LDD  R27,Y+41+1
00b797 9615      	ADIW R26,5
00b798 efef      	LDI  R30,LOW(255)
00b799 93ec      	ST   X,R30
00b79a a5a9      	LDD  R26,Y+41
00b79b a5ba      	LDD  R27,Y+41+1
00b79c 9656      	ADIW R26,22
00b79d 940e c5b8 	CALL SUBOPT_0x8F
00b79f 89e8      	LDD  R30,Y+16
00b7a0 89f9      	LDD  R31,Y+16+1
00b7a1 a5a9      	LDD  R26,Y+41
00b7a2 a5ba      	LDD  R27,Y+41+1
00b7a3 93ed      	ST   X+,R30
00b7a4 93fc      	ST   X,R31
00b7a5 89a8      	LDD  R26,Y+16
00b7a6 89b9      	LDD  R27,Y+16+1
00b7a7 9616      	ADIW R26,6
00b7a8 940e e2f0 	CALL __GETW1P
                +
00b7aa a5a9     +LDD R26 , Y + 41
00b7ab a5ba     +LDD R27 , Y + 41 + 1
00b7ac 9612     +ADIW R26 , 2
00b7ad 93ed     +ST X + , R30
00b7ae 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00b7af e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00b7b0 940e e3a2 	CALL __LOADLOCR4
00b7b2 96ab      	ADIW R28,43
00b7b3 9508      	RET
                 _f_read:
00b7b4 93ba      	ST   -Y,R27
00b7b5 93aa      	ST   -Y,R26
00b7b6 972e      	SBIW R28,14
00b7b7 940e e399 	CALL __SAVELOCR6
00b7b9 8de8      	LDD  R30,Y+24
00b7ba 8df9      	LDD  R31,Y+24+1
00b7bb 83ee      	STD  Y+6,R30
00b7bc 83ff      	STD  Y+6+1,R31
00b7bd 89ac      	LDD  R26,Y+20
00b7be 89bd      	LDD  R27,Y+20+1
00b7bf 940e c8ed 	CALL SUBOPT_0x113
00b7c1 940e ddd1 	CALL SUBOPT_0x3EB
00b7c3 8dec      	LDD  R30,Y+28
00b7c4 8dfd      	LDD  R31,Y+28+1
00b7c5 940e ddd4 	CALL SUBOPT_0x3EC
00b7c7 f011      	BREQ _0x206014D
00b7c8 2fe1      	MOV  R30,R17
00b7c9 c149      	RJMP _0x20E000C
                 _0x206014D:
00b7ca 8dea      	LDD  R30,Y+26
00b7cb 8dfb      	LDD  R31,Y+26+1
00b7cc 81a4      	LDD  R26,Z+4
00b7cd 78a0      	ANDI R26,LOW(0x80)
00b7ce f011      	BREQ _0x206014E
00b7cf e0e2      	LDI  R30,LOW(2)
00b7d0 c142      	RJMP _0x20E000C
                 _0x206014E:
00b7d1 8dea      	LDD  R30,Y+26
00b7d2 8dfb      	LDD  R31,Y+26+1
00b7d3 81a4      	LDD  R26,Z+4
00b7d4 70a1      	ANDI R26,LOW(0x1)
00b7d5 f411      	BRNE _0x206014F
00b7d6 e0e7      	LDI  R30,LOW(7)
00b7d7 c13b      	RJMP _0x20E000C
                 _0x206014F:
00b7d8 8dea      	LDD  R30,Y+26
00b7d9 8dfb      	LDD  R31,Y+26+1
                +
00b7da 85a2     +LDD R26 , Z + 10
00b7db 85b3     +LDD R27 , Z + 10 + 1
00b7dc 8584     +LDD R24 , Z + 10 + 2
00b7dd 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b7de 939f      	PUSH R25
00b7df 938f      	PUSH R24
00b7e0 93bf      	PUSH R27
00b7e1 93af      	PUSH R26
00b7e2 940e dddb 	CALL SUBOPT_0x3ED
00b7e4 91ef      	POP  R30
00b7e5 91ff      	POP  R31
00b7e6 916f      	POP  R22
00b7e7 917f      	POP  R23
00b7e8 940e e186 	CALL __SUBD12
00b7ea 940e d9a1 	CALL SUBOPT_0x361
00b7ec 940e c412 	CALL SUBOPT_0x4F
00b7ee 89ae      	LDD  R26,Y+22
00b7ef 89bf      	LDD  R27,Y+22+1
00b7f0 2788      	CLR  R24
00b7f1 2799      	CLR  R25
00b7f2 940e e38f 	CALL __CPD12
00b7f4 f420      	BRSH _0x2060150
00b7f5 85e8      	LDD  R30,Y+8
00b7f6 85f9      	LDD  R31,Y+8+1
00b7f7 8bee      	STD  Y+22,R30
00b7f8 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00b7f9 89ee      	LDD  R30,Y+22
00b7fa 89ff      	LDD  R31,Y+22+1
00b7fb 9730      	SBIW R30,0
00b7fc f411      	BRNE PC+3
00b7fd 940c b912 	JMP _0x2060153
00b7ff 940e dddb 	CALL SUBOPT_0x3ED
00b801 940e dde2 	CALL SUBOPT_0x3EE
00b803 f011      	BREQ PC+3
00b804 940c b8dd 	JMP _0x2060154
00b806 8dea      	LDD  R30,Y+26
00b807 8dfb      	LDD  R31,Y+26+1
00b808 8005      	LDD  R0,Z+5
00b809 8daa      	LDD  R26,Y+26
00b80a 8dbb      	LDD  R27,Y+26+1
00b80b 940e e2f0 	CALL __GETW1P
00b80d 81e2      	LDD  R30,Z+2
00b80e 160e      	CP   R0,R30
00b80f f178      	BRLO _0x2060155
00b810 940e dddb 	CALL SUBOPT_0x3ED
00b812 940e e389 	CALL __CPD02
00b814 f431      	BRNE _0x2060156
00b815 8daa      	LDD  R26,Y+26
00b816 8dbb      	LDD  R27,Y+26+1
00b817 961e      	ADIW R26,14
00b818 940e e2f4 	CALL __GETD1P
00b81a c006      	RJMP _0x2060157
                 _0x2060156:
00b81b 940e ddd1 	CALL SUBOPT_0x3EB
00b81d 940e dde7 	CALL SUBOPT_0x3EF
00b81f 940e ae69 	CALL _get_fat
                 _0x2060157:
00b821 940e db21 	CALL SUBOPT_0x390
00b823 940e dc6a 	CALL SUBOPT_0x3B6
00b825 f420      	BRSH _0x2060159
00b826 940e ddee 	CALL SUBOPT_0x3F0
00b828 e0e2      	LDI  R30,LOW(2)
00b829 c0e9      	RJMP _0x20E000C
                 _0x2060159:
00b82a 940e cfa2 	CALL SUBOPT_0x21E
00b82c 940e c37d 	CALL SUBOPT_0x3A
00b82e f421      	BRNE _0x206015A
00b82f 940e ddee 	CALL SUBOPT_0x3F0
00b831 e0e1      	LDI  R30,LOW(1)
00b832 c0e0      	RJMP _0x20E000C
                 _0x206015A:
00b833 940e c240 	CALL SUBOPT_0xC
                +
00b835 8daa     +LDD R26 , Y + 26
00b836 8dbb     +LDD R27 , Y + 26 + 1
00b837 9652     +ADIW R26 , 18
00b838 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00b83a 8daa      	LDD  R26,Y+26
00b83b 8dbb      	LDD  R27,Y+26+1
00b83c 9615      	ADIW R26,5
00b83d e0e0      	LDI  R30,LOW(0)
00b83e 93ec      	ST   X,R30
                 _0x2060155:
00b83f 940e ddd1 	CALL SUBOPT_0x3EB
00b841 940e dde7 	CALL SUBOPT_0x3EF
00b843 d85e      	RCALL _clust2sect
00b844 940e c80f 	CALL SUBOPT_0xEC
00b846 940e e37d 	CALL __CPD10
00b848 f421      	BRNE _0x206015B
00b849 940e ddee 	CALL SUBOPT_0x3F0
00b84b e0e2      	LDI  R30,LOW(2)
00b84c c0c6      	RJMP _0x20E000C
                 _0x206015B:
00b84d 940e ddf5 	CALL SUBOPT_0x3F1
00b84f 940e c23b 	CALL SUBOPT_0xB
00b851 940e c68d 	CALL SUBOPT_0xAD
00b853 940e c805 	CALL SUBOPT_0xEA
00b855 89ae      	LDD  R26,Y+22
00b856 89bf      	LDD  R27,Y+22+1
00b857 940e ddfa 	CALL SUBOPT_0x3F2
00b859 f411      	BRNE PC+3
00b85a 940c b8a8 	JMP _0x206015C
00b85c 8dea      	LDD  R30,Y+26
00b85d 8dfb      	LDD  R31,Y+26+1
00b85e 81e5      	LDD  R30,Z+5
00b85f 940e dd71 	CALL SUBOPT_0x3DD
00b861 010f      	MOVW R0,R30
00b862 940e de02 	CALL SUBOPT_0x3F3
00b864 81e2      	LDD  R30,Z+2
00b865 940e cc5e 	CALL SUBOPT_0x1A6
00b867 f450      	BRSH _0x206015D
00b868 940e de02 	CALL SUBOPT_0x3F3
00b86a 940e d300 	CALL SUBOPT_0x297
00b86c 01df      	MOVW R26,R30
00b86d 940e ddf5 	CALL SUBOPT_0x3F1
00b86f 1bae      	SUB  R26,R30
00b870 0bbf      	SBC  R27,R31
00b871 01ad      	MOVW R20,R26
                 _0x206015D:
00b872 940e de02 	CALL SUBOPT_0x3F3
00b874 940e de07 	CALL SUBOPT_0x3F4
                +
00b876 85ef     +LDD R30 , Y + 15
00b877 89f8     +LDD R31 , Y + 15 + 1
00b878 8969     +LDD R22 , Y + 15 + 2
00b879 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b87a 940e e324 	CALL __PUTPARD1
00b87c 2fa4      	MOV  R26,R20
00b87d 940e a9ed 	CALL _disk_read
00b87f 30e0      	CPI  R30,0
00b880 f021      	BREQ _0x206015E
00b881 940e ddee 	CALL SUBOPT_0x3F0
00b883 e0e1      	LDI  R30,LOW(1)
00b884 c08e      	RJMP _0x20E000C
                 _0x206015E:
00b885 8dea      	LDD  R30,Y+26
00b886 8dfb      	LDD  R31,Y+26+1
00b887 81a4      	LDD  R26,Z+4
00b888 74a0      	ANDI R26,LOW(0x40)
00b889 f029      	BREQ _0x2060160
00b88a 940e de0e 	CALL SUBOPT_0x3F5
00b88c 940e de16 	CALL SUBOPT_0x3F6
00b88e f008      	BRLO _0x2060161
                 _0x2060160:
00b88f c013      	RJMP _0x206015F
                 _0x2060161:
00b890 940e de0e 	CALL SUBOPT_0x3F5
00b892 940e de1e 	CALL SUBOPT_0x3F7
00b894 81ae      	LDD  R26,Y+6
00b895 81bf      	LDD  R27,Y+6+1
00b896 2788      	CLR  R24
00b897 2799      	CLR  R25
00b898 940e c2ba 	CALL SUBOPT_0x1D
00b89a 8dec      	LDD  R30,Y+28
00b89b 8dfd      	LDD  R31,Y+28+1
00b89c 96b0      	ADIW R30,32
00b89d 93fa      	ST   -Y,R31
00b89e 93ea      	ST   -Y,R30
00b89f e0a0      	LDI  R26,LOW(512)
00b8a0 e0b2      	LDI  R27,HIGH(512)
00b8a1 940e ad16 	CALL _mem_cpy_G103
                 _0x206015F:
00b8a3 8daa      	LDD  R26,Y+26
00b8a4 8dbb      	LDD  R27,Y+26+1
00b8a5 940e de27 	CALL SUBOPT_0x3F8
00b8a7 c053      	RJMP _0x2060151
                 _0x206015C:
00b8a8 8dea      	LDD  R30,Y+26
00b8a9 8dfb      	LDD  R31,Y+26+1
00b8aa 81a4      	LDD  R26,Z+4
00b8ab 74a0      	ANDI R26,LOW(0x40)
00b8ac f089      	BREQ _0x2060162
00b8ad 940e de02 	CALL SUBOPT_0x3F3
00b8af 940e de32 	CALL SUBOPT_0x3F9
00b8b1 8ded      	LDD  R30,Y+29
00b8b2 8dfe      	LDD  R31,Y+29+1
00b8b3 940e de3a 	CALL SUBOPT_0x3FA
00b8b5 f021      	BREQ _0x2060163
00b8b6 940e ddee 	CALL SUBOPT_0x3F0
00b8b8 e0e1      	LDI  R30,LOW(1)
00b8b9 c059      	RJMP _0x20E000C
                 _0x2060163:
00b8ba 8daa      	LDD  R26,Y+26
00b8bb 8dbb      	LDD  R27,Y+26+1
00b8bc 940e de45 	CALL SUBOPT_0x3FB
                 _0x2060162:
00b8be 940e de0e 	CALL SUBOPT_0x3F5
00b8c0 940e e38f 	CALL __CPD12
00b8c2 f079      	BREQ _0x2060164
00b8c3 940e de02 	CALL SUBOPT_0x3F3
00b8c5 940e de32 	CALL SUBOPT_0x3F9
                +
00b8c7 85ef     +LDD R30 , Y + 15
00b8c8 89f8     +LDD R31 , Y + 15 + 1
00b8c9 8969     +LDD R22 , Y + 15 + 2
00b8ca 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b8cb 940e dd89 	CALL SUBOPT_0x3E2
00b8cd f021      	BREQ _0x2060165
00b8ce 940e ddee 	CALL SUBOPT_0x3F0
00b8d0 e0e1      	LDI  R30,LOW(1)
00b8d1 c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00b8d2 940e c794 	CALL SUBOPT_0xD9
                +
00b8d4 8daa     +LDD R26 , Y + 26
00b8d5 8dbb     +LDD R27 , Y + 26 + 1
00b8d6 9656     +ADIW R26 , 22
00b8d7 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00b8d9 8daa      	LDD  R26,Y+26
00b8da 8dbb      	LDD  R27,Y+26+1
00b8db 940e de4a 	CALL SUBOPT_0x3FC
                 _0x2060154:
00b8dd 8daa      	LDD  R26,Y+26
00b8de 8dbb      	LDD  R27,Y+26+1
00b8df 940e de4f 	CALL SUBOPT_0x3FD
00b8e1 e0a0      	LDI  R26,LOW(512)
00b8e2 e0b2      	LDI  R27,HIGH(512)
00b8e3 1bae      	SUB  R26,R30
00b8e4 0bbf      	SBC  R27,R31
00b8e5 019d      	MOVW R18,R26
00b8e6 89ee      	LDD  R30,Y+22
00b8e7 89ff      	LDD  R31,Y+22+1
00b8e8 17e2      	CP   R30,R18
00b8e9 07f3      	CPC  R31,R19
00b8ea f410      	BRSH _0x2060166
                +
00b8eb 892e     +LDD R18 , Y + 22
00b8ec 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00b8ed 940e ca9b 	CALL SUBOPT_0x15B
00b8ef 8dac      	LDD  R26,Y+28
00b8f0 8dbd      	LDD  R27,Y+28+1
00b8f1 940e de4f 	CALL SUBOPT_0x3FD
00b8f3 8dac      	LDD  R26,Y+28
00b8f4 8dbd      	LDD  R27,Y+28+1
00b8f5 9690      	ADIW R26,32
00b8f6 940e c2ba 	CALL SUBOPT_0x1D
00b8f8 01d9      	MOVW R26,R18
00b8f9 940e ad16 	CALL _mem_cpy_G103
                 _0x2060151:
00b8fb 01f9      	MOVW R30,R18
00b8fc 940e cc59 	CALL SUBOPT_0x1A5
00b8fe 83ee      	STD  Y+6,R30
00b8ff 83ff      	STD  Y+6+1,R31
00b900 8dea      	LDD  R30,Y+26
00b901 8dfb      	LDD  R31,Y+26+1
00b902 940e de54 	CALL SUBOPT_0x3FE
00b904 01d0      	MOVW R26,R0
00b905 940e e2ff 	CALL __PUTDP1
00b907 89ac      	LDD  R26,Y+20
00b908 89bd      	LDD  R27,Y+20+1
00b909 940e de5d 	CALL SUBOPT_0x3FF
00b90b 89ee      	LDD  R30,Y+22
00b90c 89ff      	LDD  R31,Y+22+1
00b90d 1be2      	SUB  R30,R18
00b90e 0bf3      	SBC  R31,R19
00b90f 8bee      	STD  Y+22,R30
00b910 8bff      	STD  Y+22+1,R31
00b911 cee7      	RJMP _0x2060152
                 _0x2060153:
00b912 e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00b913 940e e3a0 	CALL __LOADLOCR6
00b915 966c      	ADIW R28,28
00b916 9508      	RET
                 _f_write:
00b917 93ba      	ST   -Y,R27
00b918 93aa      	ST   -Y,R26
00b919 972a      	SBIW R28,10
00b91a 940e e399 	CALL __SAVELOCR6
00b91c 89ec      	LDD  R30,Y+20
00b91d 89fd      	LDD  R31,Y+20+1
00b91e 83ee      	STD  Y+6,R30
00b91f 83ff      	STD  Y+6+1,R31
00b920 89a8      	LDD  R26,Y+16
00b921 89b9      	LDD  R27,Y+16+1
00b922 940e c8ed 	CALL SUBOPT_0x113
00b924 940e de64 	CALL SUBOPT_0x400
00b926 8de8      	LDD  R30,Y+24
00b927 8df9      	LDD  R31,Y+24+1
00b928 940e ddd4 	CALL SUBOPT_0x3EC
00b92a f011      	BREQ _0x2060167
00b92b 2fe1      	MOV  R30,R17
00b92c c182      	RJMP _0x20E000B
                 _0x2060167:
00b92d 89ee      	LDD  R30,Y+22
00b92e 89ff      	LDD  R31,Y+22+1
00b92f 81a4      	LDD  R26,Z+4
00b930 78a0      	ANDI R26,LOW(0x80)
00b931 f011      	BREQ _0x2060168
00b932 e0e2      	LDI  R30,LOW(2)
00b933 c17b      	RJMP _0x20E000B
                 _0x2060168:
00b934 89ee      	LDD  R30,Y+22
00b935 89ff      	LDD  R31,Y+22+1
00b936 81a4      	LDD  R26,Z+4
00b937 70a2      	ANDI R26,LOW(0x2)
00b938 f411      	BRNE _0x2060169
00b939 e0e7      	LDI  R30,LOW(7)
00b93a c174      	RJMP _0x20E000B
                 _0x2060169:
00b93b 89ee      	LDD  R30,Y+22
00b93c 89ff      	LDD  R31,Y+22+1
                +
00b93d 85a2     +LDD R26 , Z + 10
00b93e 85b3     +LDD R27 , Z + 10 + 1
00b93f 8584     +LDD R24 , Z + 10 + 2
00b940 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b941 89ea      	LDD  R30,Y+18
00b942 89fb      	LDD  R31,Y+18+1
00b943 940e dd2c 	CALL SUBOPT_0x3D2
00b945 937f      	PUSH R23
00b946 936f      	PUSH R22
00b947 93ff      	PUSH R31
00b948 93ef      	PUSH R30
00b949 940e de67 	CALL SUBOPT_0x401
00b94b 91af      	POP  R26
00b94c 91bf      	POP  R27
00b94d 918f      	POP  R24
00b94e 919f      	POP  R25
00b94f 940e e394 	CALL __CPD21
00b951 f418      	BRSH _0x206016A
00b952 e0e0      	LDI  R30,LOW(0)
00b953 8bea      	STD  Y+18,R30
00b954 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00b955 89ea      	LDD  R30,Y+18
00b956 89fb      	LDD  R31,Y+18+1
00b957 9730      	SBIW R30,0
00b958 f411      	BRNE PC+3
00b959 940c ba95 	JMP _0x206016D
00b95b 940e de6d 	CALL SUBOPT_0x402
00b95d 940e dde2 	CALL SUBOPT_0x3EE
00b95f f011      	BREQ PC+3
00b960 940c ba5a 	JMP _0x206016E
00b962 89ee      	LDD  R30,Y+22
00b963 89ff      	LDD  R31,Y+22+1
00b964 8005      	LDD  R0,Z+5
00b965 940e de74 	CALL SUBOPT_0x403
00b967 81e2      	LDD  R30,Z+2
00b968 160e      	CP   R0,R30
00b969 f410      	BRSH PC+3
00b96a 940c b9b4 	JMP _0x206016F
00b96c 89ae      	LDD  R26,Y+22
00b96d 89bf      	LDD  R27,Y+22+1
00b96e 9616      	ADIW R26,6
00b96f 940e dd39 	CALL SUBOPT_0x3D4
00b971 f4c1      	BRNE _0x2060170
00b972 89ae      	LDD  R26,Y+22
00b973 89bf      	LDD  R27,Y+22+1
00b974 961e      	ADIW R26,14
00b975 940e e2f4 	CALL __GETD1P
00b977 940e c80f 	CALL SUBOPT_0xEC
00b979 940e e37d 	CALL __CPD10
00b97b f469      	BRNE _0x2060171
00b97c 940e de64 	CALL SUBOPT_0x400
00b97e 940e c317 	CALL SUBOPT_0x2C
00b980 940e afe9 	CALL _create_chain_G103
00b982 940e c805 	CALL SUBOPT_0xEA
                +
00b984 89ae     +LDD R26 , Y + 22
00b985 89bf     +LDD R27 , Y + 22 + 1
00b986 961e     +ADIW R26 , 14
00b987 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00b989 c008      	RJMP _0x2060172
                 _0x2060170:
00b98a 940e de64 	CALL SUBOPT_0x400
00b98c 940e de79 	CALL SUBOPT_0x404
00b98e 940e afe9 	CALL _create_chain_G103
00b990 940e c805 	CALL SUBOPT_0xEA
                 _0x2060172:
00b992 940e c794 	CALL SUBOPT_0xD9
00b994 940e e37d 	CALL __CPD10
00b996 f409      	BRNE _0x2060173
00b997 c0fd      	RJMP _0x206016D
                 _0x2060173:
00b998 940e c23b 	CALL SUBOPT_0xB
00b99a 940e dcea 	CALL SUBOPT_0x3C7
00b99c f421      	BRNE _0x2060174
00b99d 940e de80 	CALL SUBOPT_0x405
00b99f e0e2      	LDI  R30,LOW(2)
00b9a0 c10e      	RJMP _0x20E000B
                 _0x2060174:
00b9a1 940e c46d 	CALL SUBOPT_0x5C
00b9a3 f421      	BRNE _0x2060175
00b9a4 940e de80 	CALL SUBOPT_0x405
00b9a6 e0e1      	LDI  R30,LOW(1)
00b9a7 c107      	RJMP _0x20E000B
                 _0x2060175:
00b9a8 940e c794 	CALL SUBOPT_0xD9
                +
00b9aa 89ae     +LDD R26 , Y + 22
00b9ab 89bf     +LDD R27 , Y + 22 + 1
00b9ac 9652     +ADIW R26 , 18
00b9ad 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00b9af 89ae      	LDD  R26,Y+22
00b9b0 89bf      	LDD  R27,Y+22+1
00b9b1 9615      	ADIW R26,5
00b9b2 e0e0      	LDI  R30,LOW(0)
00b9b3 93ec      	ST   X,R30
                 _0x206016F:
00b9b4 89ee      	LDD  R30,Y+22
00b9b5 89ff      	LDD  R31,Y+22+1
00b9b6 81a4      	LDD  R26,Z+4
00b9b7 74a0      	ANDI R26,LOW(0x40)
00b9b8 f089      	BREQ _0x2060176
00b9b9 940e de74 	CALL SUBOPT_0x403
00b9bb 940e de87 	CALL SUBOPT_0x406
00b9bd 8de9      	LDD  R30,Y+25
00b9be 8dfa      	LDD  R31,Y+25+1
00b9bf 940e de3a 	CALL SUBOPT_0x3FA
00b9c1 f021      	BREQ _0x2060177
00b9c2 940e de80 	CALL SUBOPT_0x405
00b9c4 e0e1      	LDI  R30,LOW(1)
00b9c5 c0e9      	RJMP _0x20E000B
                 _0x2060177:
00b9c6 89ae      	LDD  R26,Y+22
00b9c7 89bf      	LDD  R27,Y+22+1
00b9c8 940e de45 	CALL SUBOPT_0x3FB
                 _0x2060176:
00b9ca 940e de64 	CALL SUBOPT_0x400
00b9cc 940e de79 	CALL SUBOPT_0x404
00b9ce 940e b0a2 	CALL _clust2sect
00b9d0 940e d9a1 	CALL SUBOPT_0x361
00b9d2 940e c412 	CALL SUBOPT_0x4F
00b9d4 940e e37d 	CALL __CPD10
00b9d6 f421      	BRNE _0x2060178
00b9d7 940e de80 	CALL SUBOPT_0x405
00b9d9 e0e2      	LDI  R30,LOW(2)
00b9da c0d4      	RJMP _0x20E000B
                 _0x2060178:
00b9db 940e de8f 	CALL SUBOPT_0x407
00b9dd 940e c78f 	CALL SUBOPT_0xD8
00b9df 940e c68d 	CALL SUBOPT_0xAD
00b9e1 940e d9a1 	CALL SUBOPT_0x361
00b9e3 89aa      	LDD  R26,Y+18
00b9e4 89bb      	LDD  R27,Y+18+1
00b9e5 940e ddfa 	CALL SUBOPT_0x3F2
00b9e7 f411      	BRNE PC+3
00b9e8 940c ba31 	JMP _0x2060179
00b9ea 89ee      	LDD  R30,Y+22
00b9eb 89ff      	LDD  R31,Y+22+1
00b9ec 81e5      	LDD  R30,Z+5
00b9ed 940e dd71 	CALL SUBOPT_0x3DD
00b9ef 010f      	MOVW R0,R30
00b9f0 940e de74 	CALL SUBOPT_0x403
00b9f2 81e2      	LDD  R30,Z+2
00b9f3 940e cc5e 	CALL SUBOPT_0x1A6
00b9f5 f450      	BRSH _0x206017A
00b9f6 940e de74 	CALL SUBOPT_0x403
00b9f8 940e d300 	CALL SUBOPT_0x297
00b9fa 01df      	MOVW R26,R30
00b9fb 940e de8f 	CALL SUBOPT_0x407
00b9fd 1bae      	SUB  R26,R30
00b9fe 0bbf      	SBC  R27,R31
00b9ff 01ad      	MOVW R20,R26
                 _0x206017A:
00ba00 940e de74 	CALL SUBOPT_0x403
00ba02 940e de07 	CALL SUBOPT_0x3F4
00ba04 940e c49f 	CALL SUBOPT_0x64
00ba06 2fa4      	MOV  R26,R20
00ba07 940e aa52 	CALL _disk_write
00ba09 30e0      	CPI  R30,0
00ba0a f021      	BREQ _0x206017B
00ba0b 940e de80 	CALL SUBOPT_0x405
00ba0d e0e1      	LDI  R30,LOW(1)
00ba0e c0a0      	RJMP _0x20E000B
                 _0x206017B:
00ba0f 940e de94 	CALL SUBOPT_0x408
00ba11 940e de16 	CALL SUBOPT_0x3F6
00ba13 f4c0      	BRSH _0x206017C
00ba14 940e de9c 	CALL SUBOPT_0x409
                +
00ba16 89a6     +LDD R26 , Z + 22
00ba17 89b7     +LDD R27 , Z + 22 + 1
00ba18 8d80     +LDD R24 , Z + 22 + 2
00ba19 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00ba1a 940e c783 	CALL SUBOPT_0xD5
00ba1c 940e de1e 	CALL SUBOPT_0x3F7
00ba1e 85a8      	LDD  R26,Y+8
00ba1f 85b9      	LDD  R27,Y+8+1
00ba20 2788      	CLR  R24
00ba21 2799      	CLR  R25
00ba22 940e c2ba 	CALL SUBOPT_0x1D
00ba24 e0a0      	LDI  R26,LOW(512)
00ba25 e0b2      	LDI  R27,HIGH(512)
00ba26 940e ad16 	CALL _mem_cpy_G103
00ba28 89ae      	LDD  R26,Y+22
00ba29 89bf      	LDD  R27,Y+22+1
00ba2a 940e de45 	CALL SUBOPT_0x3FB
                 _0x206017C:
00ba2c 89ae      	LDD  R26,Y+22
00ba2d 89bf      	LDD  R27,Y+22+1
00ba2e 940e de27 	CALL SUBOPT_0x3F8
00ba30 c04d      	RJMP _0x206016B
                 _0x2060179:
00ba31 940e de94 	CALL SUBOPT_0x408
00ba33 940e e38f 	CALL __CPD12
00ba35 f0c9      	BREQ _0x206017D
00ba36 940e de6d 	CALL SUBOPT_0x402
00ba38 010d      	MOVW R0,R26
00ba39 940e de67 	CALL SUBOPT_0x401
00ba3b 01d0      	MOVW R26,R0
00ba3c 940e e394 	CALL __CPD21
00ba3e f458      	BRSH _0x206017F
00ba3f 940e de74 	CALL SUBOPT_0x403
00ba41 940e de87 	CALL SUBOPT_0x406
00ba43 940e c49f 	CALL SUBOPT_0x64
00ba45 e0a1      	LDI  R26,LOW(1)
00ba46 940e a9ed 	CALL _disk_read
00ba48 30e0      	CPI  R30,0
00ba49 f409      	BRNE _0x2060180
                 _0x206017F:
00ba4a c004      	RJMP _0x206017E
                 _0x2060180:
00ba4b 940e de80 	CALL SUBOPT_0x405
00ba4d e0e1      	LDI  R30,LOW(1)
00ba4e c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00ba4f 940e c412 	CALL SUBOPT_0x4F
                +
00ba51 89ae     +LDD R26 , Y + 22
00ba52 89bf     +LDD R27 , Y + 22 + 1
00ba53 9656     +ADIW R26 , 22
00ba54 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00ba56 89ae      	LDD  R26,Y+22
00ba57 89bf      	LDD  R27,Y+22+1
00ba58 940e de4a 	CALL SUBOPT_0x3FC
                 _0x206016E:
00ba5a 89ae      	LDD  R26,Y+22
00ba5b 89bf      	LDD  R27,Y+22+1
00ba5c 940e de4f 	CALL SUBOPT_0x3FD
00ba5e e0a0      	LDI  R26,LOW(512)
00ba5f e0b2      	LDI  R27,HIGH(512)
00ba60 1bae      	SUB  R26,R30
00ba61 0bbf      	SBC  R27,R31
00ba62 019d      	MOVW R18,R26
00ba63 89ea      	LDD  R30,Y+18
00ba64 89fb      	LDD  R31,Y+18+1
00ba65 17e2      	CP   R30,R18
00ba66 07f3      	CPC  R31,R19
00ba67 f410      	BRSH _0x2060181
                +
00ba68 892a     +LDD R18 , Y + 18
00ba69 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00ba6a 89ae      	LDD  R26,Y+22
00ba6b 89bf      	LDD  R27,Y+22+1
00ba6c 940e de4f 	CALL SUBOPT_0x3FD
00ba6e 89ae      	LDD  R26,Y+22
00ba6f 89bf      	LDD  R27,Y+22+1
00ba70 9690      	ADIW R26,32
00ba71 940e c2ba 	CALL SUBOPT_0x1D
00ba73 940e cbf8 	CALL SUBOPT_0x193
00ba75 01d9      	MOVW R26,R18
00ba76 940e ad16 	CALL _mem_cpy_G103
00ba78 89ae      	LDD  R26,Y+22
00ba79 89bf      	LDD  R27,Y+22+1
00ba7a 9614      	ADIW R26,4
00ba7b 91ec      	LD   R30,X
00ba7c 64e0      	ORI  R30,0x40
00ba7d 93ec      	ST   X,R30
                 _0x206016B:
00ba7e 01f9      	MOVW R30,R18
00ba7f 940e cc59 	CALL SUBOPT_0x1A5
00ba81 83ee      	STD  Y+6,R30
00ba82 83ff      	STD  Y+6+1,R31
00ba83 89ee      	LDD  R30,Y+22
00ba84 89ff      	LDD  R31,Y+22+1
00ba85 940e de54 	CALL SUBOPT_0x3FE
00ba87 01d0      	MOVW R26,R0
00ba88 940e e2ff 	CALL __PUTDP1
00ba8a 89a8      	LDD  R26,Y+16
00ba8b 89b9      	LDD  R27,Y+16+1
00ba8c 940e de5d 	CALL SUBOPT_0x3FF
00ba8e 89ea      	LDD  R30,Y+18
00ba8f 89fb      	LDD  R31,Y+18+1
00ba90 1be2      	SUB  R30,R18
00ba91 0bf3      	SBC  R31,R19
00ba92 8bea      	STD  Y+18,R30
00ba93 8bfb      	STD  Y+18+1,R31
00ba94 cec0      	RJMP _0x206016C
                 _0x206016D:
00ba95 940e de6d 	CALL SUBOPT_0x402
00ba97 010d      	MOVW R0,R26
00ba98 940e de67 	CALL SUBOPT_0x401
00ba9a 01d0      	MOVW R26,R0
00ba9b 940e e38f 	CALL __CPD12
00ba9d f450      	BRSH _0x2060182
00ba9e 89ae      	LDD  R26,Y+22
00ba9f 89bf      	LDD  R27,Y+22+1
00baa0 9616      	ADIW R26,6
00baa1 940e e2f4 	CALL __GETD1P
                +
00baa3 89ae     +LDD R26 , Y + 22
00baa4 89bf     +LDD R27 , Y + 22 + 1
00baa5 961a     +ADIW R26 , 10
00baa6 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00baa8 89ae      	LDD  R26,Y+22
00baa9 89bf      	LDD  R27,Y+22+1
00baaa 9614      	ADIW R26,4
00baab 91ec      	LD   R30,X
00baac 62e0      	ORI  R30,0x20
00baad 93ec      	ST   X,R30
00baae e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00baaf 940e e3a0 	CALL __LOADLOCR6
00bab1 9668      	ADIW R28,24
00bab2 9508      	RET
                 _f_sync:
00bab3 93ba      	ST   -Y,R27
00bab4 93aa      	ST   -Y,R26
00bab5 9724      	SBIW R28,4
00bab6 940e e39b 	CALL __SAVELOCR4
00bab8 940e dd29 	CALL SUBOPT_0x3D1
00baba 85ea      	LDD  R30,Y+10
00babb 85fb      	LDD  R31,Y+10+1
00babc 940e ddd4 	CALL SUBOPT_0x3EC
00babe f011      	BREQ PC+3
00babf 940c bb2f 	JMP _0x2060183
00bac1 85e8      	LDD  R30,Y+8
00bac2 85f9      	LDD  R31,Y+8+1
00bac3 81a4      	LDD  R26,Z+4
00bac4 72a0      	ANDI R26,LOW(0x20)
00bac5 f411      	BRNE PC+3
00bac6 940c bb2f 	JMP _0x2060184
00bac8 81a4      	LDD  R26,Z+4
00bac9 74a0      	ANDI R26,LOW(0x40)
00baca f0a1      	BREQ _0x2060185
00bacb 940e dd13 	CALL SUBOPT_0x3CE
00bacd 81e1      	LDD  R30,Z+1
00bace 93ea      	ST   -Y,R30
00bacf 85e9      	LDD  R30,Y+9
00bad0 85fa      	LDD  R31,Y+9+1
00bad1 96b0      	ADIW R30,32
00bad2 93fa      	ST   -Y,R31
00bad3 93ea      	ST   -Y,R30
00bad4 85eb      	LDD  R30,Y+11
00bad5 85fc      	LDD  R31,Y+11+1
00bad6 940e de3a 	CALL SUBOPT_0x3FA
00bad8 f011      	BREQ _0x2060186
00bad9 e0e1      	LDI  R30,LOW(1)
00bada c055      	RJMP _0x20E000A
                 _0x2060186:
00badb 85a8      	LDD  R26,Y+8
00badc 85b9      	LDD  R27,Y+8+1
00badd 940e de45 	CALL SUBOPT_0x3FB
                 _0x2060185:
00badf 940e dd29 	CALL SUBOPT_0x3D1
00bae1 85ea      	LDD  R30,Y+10
00bae2 85fb      	LDD  R31,Y+10+1
                +
00bae3 8da2     +LDD R26 , Z + 26
00bae4 8db3     +LDD R27 , Z + 26 + 1
00bae5 8d84     +LDD R24 , Z + 26 + 2
00bae6 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00bae7 940e ddcc 	CALL SUBOPT_0x3EA
00bae9 f011      	BREQ PC+3
00baea 940c bb2f 	JMP _0x2060187
00baec 85a8      	LDD  R26,Y+8
00baed 85b9      	LDD  R27,Y+8+1
00baee 965e      	ADIW R26,30
00baef 912d      	LD   R18,X+
00baf0 913c      	LD   R19,X
00baf1 01d9      	MOVW R26,R18
00baf2 961b      	ADIW R26,11
00baf3 91ec      	LD   R30,X
00baf4 62e0      	ORI  R30,0x20
00baf5 93ec      	ST   X,R30
00baf6 85a8      	LDD  R26,Y+8
00baf7 85b9      	LDD  R27,Y+8+1
00baf8 961a      	ADIW R26,10
00baf9 940e e2f4 	CALL __GETD1P
                +
00bafb 01d9     +MOVW R26 , R18
00bafc 965c     +ADIW R26 , 28
00bafd 940e e2ff+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00baff 85a8      	LDD  R26,Y+8
00bb00 85b9      	LDD  R27,Y+8+1
00bb01 961e      	ADIW R26,14
00bb02 940e e2f0 	CALL __GETW1P
                +
00bb04 01d9     +MOVW R26 , R18
00bb05 965a     +ADIW R26 , 26
00bb06 93ed     +ST X + , R30
00bb07 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00bb08 85e8      	LDD  R30,Y+8
00bb09 85f9      	LDD  R31,Y+8+1
                +
00bb0a 85a6     +LDD R26 , Z + 14
00bb0b 85b7     +LDD R27 , Z + 14 + 1
00bb0c 8980     +LDD R24 , Z + 14 + 2
00bb0d 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00bb0e 01fd      	MOVW R30,R26
00bb0f 01bc      	MOVW R22,R24
00bb10 940e e1f1 	CALL __LSRD16
                +
00bb12 01d9     +MOVW R26 , R18
00bb13 9654     +ADIW R26 , 20
00bb14 93ed     +ST X + , R30
00bb15 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00bb16 940e ac88 	CALL _get_fattime
00bb18 940e c692 	CALL SUBOPT_0xAE
                +
00bb1a 01d9     +MOVW R26 , R18
00bb1b 9656     +ADIW R26 , 22
00bb1c 940e e2ff+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00bb1e 85a8      	LDD  R26,Y+8
00bb1f 85b9      	LDD  R27,Y+8+1
00bb20 9614      	ADIW R26,4
00bb21 91ec      	LD   R30,X
00bb22 7def      	ANDI R30,0xDF
00bb23 93ec      	ST   X,R30
00bb24 940e dd13 	CALL SUBOPT_0x3CE
00bb26 9634      	ADIW R30,4
00bb27 e0a1      	LDI  R26,LOW(1)
00bb28 83a0      	STD  Z+0,R26
00bb29 940e dd13 	CALL SUBOPT_0x3CE
00bb2b 01df      	MOVW R26,R30
00bb2c 940e adf5 	CALL _sync_G103
00bb2e 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00bb2f 2fe1      	MOV  R30,R17
                 _0x20E000A:
00bb30 940e e3a2 	CALL __LOADLOCR4
00bb32 962a      	ADIW R28,10
00bb33 9508      	RET
                 _f_close:
00bb34 93ba      	ST   -Y,R27
00bb35 93aa      	ST   -Y,R26
00bb36 931a      	ST   -Y,R17
00bb37 81a9      	LDD  R26,Y+1
00bb38 81ba      	LDD  R27,Y+1+1
00bb39 df79      	RCALL _f_sync
00bb3a 2f1e      	MOV  R17,R30
00bb3b 3010      	CPI  R17,0
00bb3c f421      	BRNE _0x2060188
00bb3d 81a9      	LDD  R26,Y+1
00bb3e 81ba      	LDD  R27,Y+1+1
00bb3f 940e c8ed 	CALL SUBOPT_0x113
                 _0x2060188:
00bb41 2fe1      	MOV  R30,R17
00bb42 c296      	RJMP _0x20E0005
                 _f_lseek:
00bb43 940e e329 	CALL __PUTPARD2
00bb45 9760      	SBIW R28,16
00bb46 931a      	ST   -Y,R17
00bb47 940e dea4 	CALL SUBOPT_0x40A
00bb49 89ef      	LDD  R30,Y+23
00bb4a 8df8      	LDD  R31,Y+23+1
00bb4b 940e ddd4 	CALL SUBOPT_0x3EC
00bb4d f009      	BREQ _0x2060191
00bb4e c18c      	RJMP _0x20E0009
                 _0x2060191:
00bb4f 89ed      	LDD  R30,Y+21
00bb50 89fe      	LDD  R31,Y+21+1
00bb51 81a4      	LDD  R26,Z+4
00bb52 78a0      	ANDI R26,LOW(0x80)
00bb53 f011      	BREQ _0x2060192
00bb54 e0e2      	LDI  R30,LOW(2)
00bb55 c186      	RJMP _0x20E0008
                 _0x2060192:
00bb56 940e dea7 	CALL SUBOPT_0x40B
00bb58 940e dead 	CALL SUBOPT_0x40C
00bb5a 940e e38f 	CALL __CPD12
00bb5c f428      	BRSH _0x2060194
00bb5d 89ed      	LDD  R30,Y+21
00bb5e 89fe      	LDD  R31,Y+21+1
00bb5f 81a4      	LDD  R26,Z+4
00bb60 70a2      	ANDI R26,LOW(0x2)
00bb61 f009      	BREQ _0x2060195
                 _0x2060194:
00bb62 c004      	RJMP _0x2060193
                 _0x2060195:
00bb63 940e dea7 	CALL SUBOPT_0x40B
00bb65 940e deb2 	CALL SUBOPT_0x40D
                 _0x2060193:
00bb67 89ad      	LDD  R26,Y+21
00bb68 89be      	LDD  R27,Y+21+1
00bb69 9616      	ADIW R26,6
00bb6a 940e dc1f 	CALL SUBOPT_0x3AD
00bb6c 940e dd0e 	CALL SUBOPT_0x3CD
00bb6e 940e dcf8 	CALL SUBOPT_0x3C9
00bb70 940e deb7 	CALL SUBOPT_0x40E
00bb72 9615      	ADIW R26,5
00bb73 efef      	LDI  R30,LOW(255)
00bb74 93ec      	ST   X,R30
00bb75 940e dead 	CALL SUBOPT_0x40C
00bb77 940e e389 	CALL __CPD02
00bb79 f010      	BRLO PC+3
00bb7a 940c bc87 	JMP _0x2060196
00bb7c 940e debf 	CALL SUBOPT_0x40F
00bb7e 940e d300 	CALL SUBOPT_0x297
00bb80 940e e201 	CALL __CWD1
                +
00bb82 e0a0     +LDI R26 , LOW ( 0x200 )
00bb83 e0b2     +LDI R27 , HIGH ( 0x200 )
00bb84 e080     +LDI R24 , BYTE3 ( 0x200 )
00bb85 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00bb86 940e e222 	CALL __MULD12U
00bb88 940e dbc2 	CALL SUBOPT_0x39D
00bb8a 940e d303 	CALL SUBOPT_0x298
00bb8c 940e e389 	CALL __CPD02
00bb8e f498      	BRSH _0x2060198
00bb8f 940e dec4 	CALL SUBOPT_0x410
00bb91 940e dec9 	CALL SUBOPT_0x411
00bb93 937f      	PUSH R23
00bb94 936f      	PUSH R22
00bb95 93ff      	PUSH R31
00bb96 93ef      	PUSH R30
00bb97 940e dce5 	CALL SUBOPT_0x3C6
00bb99 940e dec9 	CALL SUBOPT_0x411
00bb9b 91af      	POP  R26
00bb9c 91bf      	POP  R27
00bb9d 918f      	POP  R24
00bb9e 919f      	POP  R25
00bb9f 940e e394 	CALL __CPD21
00bba1 f408      	BRSH _0x2060199
                 _0x2060198:
00bba2 c021      	RJMP _0x2060197
                 _0x2060199:
00bba3 940e dce5 	CALL SUBOPT_0x3C6
00bba5 940e c799 	CALL SUBOPT_0xDA
00bba7 01df      	MOVW R26,R30
00bba8 01cb      	MOVW R24,R22
00bba9 940e c4cb 	CALL SUBOPT_0x6B
00bbab 940e c799 	CALL SUBOPT_0xDA
00bbad 940e e206 	CALL __COMD1
00bbaf 940e e190 	CALL __ANDD12
00bbb1 940e deb7 	CALL SUBOPT_0x40E
00bbb3 9616      	ADIW R26,6
00bbb4 940e e2f4 	CALL __GETD1P
00bbb6 940e dead 	CALL SUBOPT_0x40C
00bbb8 940e e18b 	CALL __SUBD21
                +
00bbba 8ba9     +STD Y + 17 , R26
00bbbb 8bba     +STD Y + 17 + 1 , R27
00bbbc 8b8b     +STD Y + 17 + 2 , R24
00bbbd 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00bbbe 89ad      	LDD  R26,Y+21
00bbbf 89be      	LDD  R27,Y+21+1
00bbc0 9652      	ADIW R26,18
00bbc1 940e ded2 	CALL SUBOPT_0x412
00bbc3 c02b      	RJMP _0x206019A
                 _0x2060197:
00bbc4 89ad      	LDD  R26,Y+21
00bbc5 89be      	LDD  R27,Y+21+1
00bbc6 961e      	ADIW R26,14
00bbc7 940e ded2 	CALL SUBOPT_0x412
00bbc9 940e ded9 	CALL SUBOPT_0x413
00bbcb 940e e37d 	CALL __CPD10
00bbcd f4f9      	BRNE _0x206019B
00bbce 940e dea4 	CALL SUBOPT_0x40A
00bbd0 940e c317 	CALL SUBOPT_0x2C
00bbd2 940e dede 	CALL SUBOPT_0x414
00bbd4 940e dee5 	CALL SUBOPT_0x415
00bbd6 940e dcea 	CALL SUBOPT_0x3C7
00bbd8 f421      	BRNE _0x206019C
00bbd9 940e deea 	CALL SUBOPT_0x416
00bbdb e0e2      	LDI  R30,LOW(2)
00bbdc c0ff      	RJMP _0x20E0008
                 _0x206019C:
00bbdd 940e dee5 	CALL SUBOPT_0x415
00bbdf 940e c37d 	CALL SUBOPT_0x3A
00bbe1 f421      	BRNE _0x206019D
00bbe2 940e deea 	CALL SUBOPT_0x416
00bbe4 e0e1      	LDI  R30,LOW(1)
00bbe5 c0f6      	RJMP _0x20E0008
                 _0x206019D:
00bbe6 940e ded9 	CALL SUBOPT_0x413
                +
00bbe8 89ad     +LDD R26 , Y + 21
00bbe9 89be     +LDD R27 , Y + 21 + 1
00bbea 961e     +ADIW R26 , 14
00bbeb 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00bbed 940e def1 	CALL SUBOPT_0x417
                 _0x206019A:
00bbef 940e ded9 	CALL SUBOPT_0x413
00bbf1 940e e37d 	CALL __CPD10
00bbf3 f411      	BRNE PC+3
00bbf4 940c bc87 	JMP _0x206019E
                 _0x206019F:
00bbf6 940e c4cb 	CALL SUBOPT_0x6B
00bbf8 940e dead 	CALL SUBOPT_0x40C
00bbfa 940e e38f 	CALL __CPD12
00bbfc f010      	BRLO PC+3
00bbfd 940c bc4e 	JMP _0x20601A1
00bbff 89ed      	LDD  R30,Y+21
00bc00 89fe      	LDD  R31,Y+21+1
00bc01 81a4      	LDD  R26,Z+4
00bc02 70a2      	ANDI R26,LOW(0x2)
00bc03 f089      	BREQ _0x20601A2
00bc04 940e dea4 	CALL SUBOPT_0x40A
00bc06 940e def8 	CALL SUBOPT_0x418
00bc08 940e dede 	CALL SUBOPT_0x414
00bc0a 940e ded9 	CALL SUBOPT_0x413
00bc0c 940e e37d 	CALL __CPD10
00bc0e f429      	BRNE _0x20601A3
00bc0f 940e c4cb 	CALL SUBOPT_0x6B
00bc11 940e deb2 	CALL SUBOPT_0x40D
00bc13 c03a      	RJMP _0x20601A1
                 _0x20601A3:
00bc14 c00a      	RJMP _0x20601A4
                 _0x20601A2:
00bc15 940e dea4 	CALL SUBOPT_0x40A
00bc17 940e def8 	CALL SUBOPT_0x418
00bc19 940e ae69 	CALL _get_fat
                +
00bc1b 87ed     +STD Y + 13 , R30
00bc1c 87fe     +STD Y + 13 + 1 , R31
00bc1d 876f     +STD Y + 13 + 2 , R22
00bc1e 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00bc1f 940e dee5 	CALL SUBOPT_0x415
00bc21 940e c37d 	CALL SUBOPT_0x3A
00bc23 f421      	BRNE _0x20601A5
00bc24 940e deea 	CALL SUBOPT_0x416
00bc26 e0e1      	LDI  R30,LOW(1)
00bc27 c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00bc28 940e dee5 	CALL SUBOPT_0x415
00bc2a 940e dc6a 	CALL SUBOPT_0x3B6
00bc2c f048      	BRLO _0x20601A7
00bc2d 940e debf 	CALL SUBOPT_0x40F
00bc2f 940e dd4d 	CALL SUBOPT_0x3D8
00bc31 940e dee5 	CALL SUBOPT_0x415
00bc33 940e e394 	CALL __CPD21
00bc35 f020      	BRLO _0x20601A6
                 _0x20601A7:
00bc36 940e deea 	CALL SUBOPT_0x416
00bc38 e0e2      	LDI  R30,LOW(2)
00bc39 c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00bc3a 940e def1 	CALL SUBOPT_0x417
00bc3c 940e defd 	CALL SUBOPT_0x419
00bc3e 940e dbe8 	CALL SUBOPT_0x3A3
00bc40 940e e17c 	CALL __ADDD12
00bc42 01d0      	MOVW R26,R0
00bc43 940e e2ff 	CALL __PUTDP1
00bc45 940e dbe8 	CALL SUBOPT_0x3A3
00bc47 940e dec4 	CALL SUBOPT_0x410
00bc49 940e e186 	CALL __SUBD12
00bc4b 940e deb2 	CALL SUBOPT_0x40D
00bc4d cfa8      	RJMP _0x206019F
                 _0x20601A1:
00bc4e 940e defd 	CALL SUBOPT_0x419
00bc50 940e dead 	CALL SUBOPT_0x40C
00bc52 940e e17c 	CALL __ADDD12
00bc54 01d0      	MOVW R26,R0
00bc55 940e e2ff 	CALL __PUTDP1
00bc57 940e dead 	CALL SUBOPT_0x40C
                +
00bc59 e0e0     +LDI R30 , LOW ( 0x200 )
00bc5a e0f2     +LDI R31 , HIGH ( 0x200 )
00bc5b e060     +LDI R22 , BYTE3 ( 0x200 )
00bc5c e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00bc5d 940e e278 	CALL __DIVD21U
                +
00bc5f 89ad     +LDD R26 , Y + 21
00bc60 89be     +LDD R27 , Y + 21 + 1
00bc61 9615     +ADIW R26 , 5
00bc62 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00bc63 940e dec4 	CALL SUBOPT_0x410
00bc65 70f1      	ANDI R31,HIGH(0x1FF)
00bc66 9730      	SBIW R30,0
00bc67 f0f9      	BREQ _0x20601A9
00bc68 940e dea4 	CALL SUBOPT_0x40A
00bc6a 940e def8 	CALL SUBOPT_0x418
00bc6c 940e b0a2 	CALL _clust2sect
00bc6e 940e dcf8 	CALL SUBOPT_0x3C9
00bc70 940e dc26 	CALL SUBOPT_0x3AE
00bc72 940e e37d 	CALL __CPD10
00bc74 f421      	BRNE _0x20601AA
00bc75 940e deea 	CALL SUBOPT_0x416
00bc77 e0e2      	LDI  R30,LOW(2)
00bc78 c063      	RJMP _0x20E0008
                 _0x20601AA:
00bc79 89ed      	LDD  R30,Y+21
00bc7a 89fe      	LDD  R31,Y+21+1
00bc7b 81e5      	LDD  R30,Z+5
00bc7c e0f0      	LDI  R31,0
00bc7d 940e dcd7 	CALL SUBOPT_0x3C4
00bc7f 940e c68d 	CALL SUBOPT_0xAD
00bc81 940e dcf8 	CALL SUBOPT_0x3C9
00bc83 89ad      	LDD  R26,Y+21
00bc84 89be      	LDD  R27,Y+21+1
00bc85 940e de4a 	CALL SUBOPT_0x3FC
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00bc87 940e df05 	CALL SUBOPT_0x41A
00bc89 940e dde2 	CALL SUBOPT_0x3EE
00bc8b f051      	BREQ _0x20601AC
00bc8c 89ad      	LDD  R26,Y+21
00bc8d 89be      	LDD  R27,Y+21+1
00bc8e 9656      	ADIW R26,22
00bc8f 940e e2f4 	CALL __GETD1P
00bc91 940e dcd7 	CALL SUBOPT_0x3C4
00bc93 940e e38f 	CALL __CPD12
00bc95 f409      	BRNE _0x20601AD
                 _0x20601AC:
00bc96 c02b      	RJMP _0x20601AB
                 _0x20601AD:
00bc97 89ed      	LDD  R30,Y+21
00bc98 89fe      	LDD  R31,Y+21+1
00bc99 81a4      	LDD  R26,Z+4
00bc9a 74a0      	ANDI R26,LOW(0x40)
00bc9b f089      	BREQ _0x20601AE
00bc9c 940e debf 	CALL SUBOPT_0x40F
00bc9e 81e1      	LDD  R30,Z+1
00bc9f 93ea      	ST   -Y,R30
00bca0 940e de9c 	CALL SUBOPT_0x409
00bca2 940e de3a 	CALL SUBOPT_0x3FA
00bca4 f021      	BREQ _0x20601AF
00bca5 940e deea 	CALL SUBOPT_0x416
00bca7 e0e1      	LDI  R30,LOW(1)
00bca8 c033      	RJMP _0x20E0008
                 _0x20601AF:
00bca9 89ad      	LDD  R26,Y+21
00bcaa 89be      	LDD  R27,Y+21+1
00bcab 940e de45 	CALL SUBOPT_0x3FB
                 _0x20601AE:
00bcad 940e debf 	CALL SUBOPT_0x40F
00bcaf 81e1      	LDD  R30,Z+1
00bcb0 93ea      	ST   -Y,R30
00bcb1 89ee      	LDD  R30,Y+22
00bcb2 89ff      	LDD  R31,Y+22+1
00bcb3 96b0      	ADIW R30,32
00bcb4 940e dc40 	CALL SUBOPT_0x3B1
00bcb6 f021      	BREQ _0x20601B0
00bcb7 940e deea 	CALL SUBOPT_0x416
00bcb9 e0e1      	LDI  R30,LOW(1)
00bcba c021      	RJMP _0x20E0008
                 _0x20601B0:
00bcbb 940e dc26 	CALL SUBOPT_0x3AE
                +
00bcbd 89ad     +LDD R26 , Y + 21
00bcbe 89be     +LDD R27 , Y + 21 + 1
00bcbf 9656     +ADIW R26 , 22
00bcc0 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00bcc2 940e df05 	CALL SUBOPT_0x41A
00bcc4 010d      	MOVW R0,R26
00bcc5 940e dea7 	CALL SUBOPT_0x40B
00bcc7 01d0      	MOVW R26,R0
00bcc8 940e e38f 	CALL __CPD12
00bcca f480      	BRSH _0x20601B1
00bccb 89ad      	LDD  R26,Y+21
00bccc 89be      	LDD  R27,Y+21+1
00bccd 9616      	ADIW R26,6
00bcce 940e e2f4 	CALL __GETD1P
                +
00bcd0 89ad     +LDD R26 , Y + 21
00bcd1 89be     +LDD R27 , Y + 21 + 1
00bcd2 961a     +ADIW R26 , 10
00bcd3 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00bcd5 89ad      	LDD  R26,Y+21
00bcd6 89be      	LDD  R27,Y+21+1
00bcd7 9614      	ADIW R26,4
00bcd8 91ec      	LD   R30,X
00bcd9 62e0      	ORI  R30,0x20
00bcda 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00bcdb 2fe1      	MOV  R30,R17
                 _0x20E0008:
00bcdc 8118      	LDD  R17,Y+0
00bcdd 9667      	ADIW R28,23
00bcde 9508      	RET
                 _f_getfree:
00bcdf 93ba      	ST   -Y,R27
00bce0 93aa      	ST   -Y,R26
00bce1 9760      	SBIW R28,16
00bce2 940e e399 	CALL __SAVELOCR6
00bce4 01fe      	MOVW R30,R28
00bce5 967a      	ADIW R30,26
00bce6 93fa      	ST   -Y,R31
00bce7 93ea      	ST   -Y,R30
00bce8 940e d358 	CALL SUBOPT_0x2A6
00bcea e0a0      	LDI  R26,LOW(0)
00bceb 940e b44f 	CALL _chk_mounted
00bced 2f1e      	MOV  R17,R30
00bcee 3010      	CPI  R17,0
00bcef f011      	BREQ _0x20601C3
00bcf0 2fe1      	MOV  R30,R17
00bcf1 c0c9      	RJMP _0x20E0006
                 _0x20601C3:
00bcf2 940e de74 	CALL SUBOPT_0x403
00bcf4 010f      	MOVW R0,R30
00bcf5 963e      	ADIW R30,14
00bcf6 01df      	MOVW R26,R30
00bcf7 940e e2f4 	CALL __GETD1P
00bcf9 937f      	PUSH R23
00bcfa 936f      	PUSH R22
00bcfb 93ff      	PUSH R31
00bcfc 93ef      	PUSH R30
00bcfd 01d0      	MOVW R26,R0
00bcfe 965e      	ADIW R26,30
00bcff 940e e2f4 	CALL __GETD1P
                +
00bd01 50e2     +SUBI R30 , LOW ( 2 )
00bd02 40f0     +SBCI R31 , HIGH ( 2 )
00bd03 4060     +SBCI R22 , BYTE3 ( 2 )
00bd04 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00bd05 91af      	POP  R26
00bd06 91bf      	POP  R27
00bd07 918f      	POP  R24
00bd08 919f      	POP  R25
00bd09 940e e38f 	CALL __CPD12
00bd0b f038      	BRLO _0x20601C4
00bd0c 940e de74 	CALL SUBOPT_0x403
00bd0e 963e      	ADIW R30,14
00bd0f 01df      	MOVW R26,R30
00bd10 940e e2f4 	CALL __GETD1P
00bd12 c0a3      	RJMP _0x20E0007
                 _0x20601C4:
00bd13 940e de74 	CALL SUBOPT_0x403
00bd15 8100      	LD   R16,Z
00bd16 e0e0      	LDI  R30,LOW(0)
                +
00bd17 8bea     +STD Y + 18 , R30
00bd18 8beb     +STD Y + 18 + 1 , R30
00bd19 8bec     +STD Y + 18 + 2 , R30
00bd1a 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00bd1b 3001      	CPI  R16,1
00bd1c f5b9      	BRNE _0x20601C5
00bd1d 940e dd02 	CALL SUBOPT_0x3CB
00bd1f 940e ddb7 	CALL SUBOPT_0x3E7
                 _0x20601C7:
00bd21 940e de64 	CALL SUBOPT_0x400
00bd23 940e cfa2 	CALL SUBOPT_0x21E
00bd25 940e ae69 	CALL _get_fat
00bd27 940e c6bb 	CALL SUBOPT_0xB6
00bd29 940e c45d 	CALL SUBOPT_0x59
00bd2b 940e c37d 	CALL SUBOPT_0x3A
00bd2d f411      	BRNE _0x20601C9
00bd2e e0e1      	LDI  R30,LOW(1)
00bd2f c08b      	RJMP _0x20E0006
                 _0x20601C9:
00bd30 940e c45d 	CALL SUBOPT_0x59
00bd32 940e dcea 	CALL SUBOPT_0x3C7
00bd34 f411      	BRNE _0x20601CA
00bd35 e0e2      	LDI  R30,LOW(2)
00bd36 c084      	RJMP _0x20E0006
                 _0x20601CA:
00bd37 940e c6b6 	CALL SUBOPT_0xB5
00bd39 940e e37d 	CALL __CPD10
00bd3b f411      	BRNE _0x20601CB
00bd3c 940e df0c 	CALL SUBOPT_0x41B
                 _0x20601CB:
00bd3e 940e c484 	CALL SUBOPT_0x60
00bd40 940e c6dd 	CALL SUBOPT_0xBC
00bd42 940e ddb7 	CALL SUBOPT_0x3E7
00bd44 937f      	PUSH R23
00bd45 936f      	PUSH R22
00bd46 93ff      	PUSH R31
00bd47 93ef      	PUSH R30
00bd48 940e de74 	CALL SUBOPT_0x403
00bd4a 940e dd4d 	CALL SUBOPT_0x3D8
00bd4c 91af      	POP  R26
00bd4d 91bf      	POP  R27
00bd4e 918f      	POP  R24
00bd4f 919f      	POP  R25
00bd50 940e e394 	CALL __CPD21
00bd52 f270      	BRLO _0x20601C7
00bd53 c052      	RJMP _0x20601CC
                 _0x20601C5:
00bd54 940e de74 	CALL SUBOPT_0x403
00bd56 940e dd4d 	CALL SUBOPT_0x3D8
00bd58 940e ddb7 	CALL SUBOPT_0x3E7
00bd5a 940e de74 	CALL SUBOPT_0x403
00bd5c 96b2      	ADIW R30,34
00bd5d 01df      	MOVW R26,R30
00bd5e 940e e2f4 	CALL __GETD1P
00bd60 940e d140 	CALL SUBOPT_0x256
00bd62 940e c1e1 	CALL SUBOPT_0x0
                 _0x20601CE:
00bd64 2e02      	MOV  R0,R18
00bd65 2a03      	OR   R0,R19
00bd66 f4c1      	BRNE _0x20601D0
00bd67 940e de64 	CALL SUBOPT_0x400
00bd69 940e c794 	CALL SUBOPT_0xD9
00bd6b 940e c6dd 	CALL SUBOPT_0xBC
00bd6d 940e c805 	CALL SUBOPT_0xEA
00bd6f 9731      	SBIW R30,1
00bd70 4060      	SBCI R22,0
00bd71 4070      	SBCI R23,0
00bd72 01df      	MOVW R26,R30
00bd73 01cb      	MOVW R24,R22
00bd74 940e ddcc 	CALL SUBOPT_0x3EA
00bd76 f011      	BREQ _0x20601D1
00bd77 2fe1      	MOV  R30,R17
00bd78 c042      	RJMP _0x20E0006
                 _0x20601D1:
00bd79 940e de74 	CALL SUBOPT_0x403
00bd7b 96f2      	ADIW R30,50
00bd7c 01af      	MOVW R20,R30
                +
00bd7d e020     +LDI R18 , LOW ( 512 )
00bd7e e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00bd7f 3002      	CPI  R16,2
00bd80 f461      	BRNE _0x20601D2
00bd81 01da      	MOVW R26,R20
00bd82 940e e2f0 	CALL __GETW1P
00bd84 9730      	SBIW R30,0
00bd85 f411      	BRNE _0x20601D3
00bd86 940e df0c 	CALL SUBOPT_0x41B
                 _0x20601D3:
                +
00bd88 5f4e     +SUBI R20 , LOW ( - 2 )
00bd89 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00bd8a 5022     +SUBI R18 , LOW ( 2 )
00bd8b 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00bd8c c010      	RJMP _0x20601D4
                 _0x20601D2:
00bd8d 01da      	MOVW R26,R20
00bd8e 940e e2f4 	CALL __GETD1P
                +
00bd90 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00bd91 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00bd92 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00bd93 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00bd94 940e e37d 	CALL __CPD10
00bd96 f411      	BRNE _0x20601D5
00bd97 940e df0c 	CALL SUBOPT_0x41B
                 _0x20601D5:
                +
00bd99 5f4c     +SUBI R20 , LOW ( - 4 )
00bd9a 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00bd9b 5024     +SUBI R18 , LOW ( 4 )
00bd9c 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00bd9d 940e c484 	CALL SUBOPT_0x60
00bd9f 9731      	SBIW R30,1
00bda0 4060      	SBCI R22,0
00bda1 4070      	SBCI R23,0
00bda2 940e ddb7 	CALL SUBOPT_0x3E7
00bda4 f009      	BREQ _0x20601CF
00bda5 cfbe      	RJMP _0x20601CE
                 _0x20601CF:
                 _0x20601CC:
00bda6 940e de74 	CALL SUBOPT_0x403
00bda8 963e      	ADIW R30,14
00bda9 940e d12a 	CALL SUBOPT_0x252
00bdab 940e d198 	CALL SUBOPT_0x261
00bdad 3003      	CPI  R16,3
00bdae f429      	BRNE _0x20601D6
00bdaf 940e de74 	CALL SUBOPT_0x403
00bdb1 9635      	ADIW R30,5
00bdb2 e0a1      	LDI  R26,LOW(1)
00bdb3 83a0      	STD  Z+0,R26
                 _0x20601D6:
00bdb4 940e c77e 	CALL SUBOPT_0xD4
                 _0x20E0007:
00bdb6 8da8      	LDD  R26,Y+24
00bdb7 8db9      	LDD  R27,Y+24+1
00bdb8 940e e2ff 	CALL __PUTDP1
00bdba e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00bdbb 940e e3a0 	CALL __LOADLOCR6
00bdbd 966c      	ADIW R28,28
00bdbe 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00bdbf 93aa      	ST   -Y,R26
                 _0x2080003:
00bdc0 91e0 00c0 	LDS  R30,192
00bdc2 72e0      	ANDI R30,LOW(0x20)
00bdc3 f3e1      	BREQ _0x2080003
00bdc4 81e8      	LD   R30,Y
00bdc5 93e0 00c6 	STS  198,R30
00bdc7 9621      	ADIW R28,1
00bdc8 9508      	RET
                 _puts:
00bdc9 93ba      	ST   -Y,R27
00bdca 93aa      	ST   -Y,R26
00bdcb 931a      	ST   -Y,R17
                 _0x2080006:
00bdcc 81a9      	LDD  R26,Y+1
00bdcd 81ba      	LDD  R27,Y+1+1
00bdce 91ed      	LD   R30,X+
00bdcf 83a9      	STD  Y+1,R26
00bdd0 83ba      	STD  Y+1+1,R27
00bdd1 2f1e      	MOV  R17,R30
00bdd2 30e0      	CPI  R30,0
00bdd3 f019      	BREQ _0x2080008
00bdd4 2fa1      	MOV  R26,R17
00bdd5 dfe9      	RCALL _putchar
00bdd6 cff5      	RJMP _0x2080006
                 _0x2080008:
00bdd7 e0aa      	LDI  R26,LOW(10)
00bdd8 dfe6      	RCALL _putchar
                 _0x20E0005:
00bdd9 8118      	LDD  R17,Y+0
00bdda 9623      	ADIW R28,3
00bddb 9508      	RET
                 _put_buff_G104:
00bddc 940e c566 	CALL SUBOPT_0x81
00bdde 81aa      	LDD  R26,Y+2
00bddf 81bb      	LDD  R27,Y+2+1
00bde0 9612      	ADIW R26,2
00bde1 940e e2f0 	CALL __GETW1P
00bde3 9730      	SBIW R30,0
00bde4 f129      	BREQ _0x208002A
00bde5 81aa      	LDD  R26,Y+2
00bde6 81bb      	LDD  R27,Y+2+1
00bde7 9614      	ADIW R26,4
00bde8 940e e2f0 	CALL __GETW1P
00bdea 018f      	MOVW R16,R30
00bdeb 9730      	SBIW R30,0
00bdec f061      	BREQ _0x208002C
                +
00bded 3002     +CPI R16 , LOW ( 2 )
00bdee e0e0     +LDI R30 , HIGH ( 2 )
00bdef 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00bdf0 f0c0      	BRLO _0x208002D
00bdf1 01f8      	MOVW R30,R16
00bdf2 9731      	SBIW R30,1
00bdf3 018f      	MOVW R16,R30
                +
00bdf4 81aa     +LDD R26 , Y + 2
00bdf5 81bb     +LDD R27 , Y + 2 + 1
00bdf6 9614     +ADIW R26 , 4
00bdf7 93ed     +ST X + , R30
00bdf8 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00bdf9 81aa      	LDD  R26,Y+2
00bdfa 81bb      	LDD  R27,Y+2+1
00bdfb 9612      	ADIW R26,2
00bdfc 940e c549 	CALL SUBOPT_0x7C
00bdfe 9731      	SBIW R30,1
00bdff 81ac      	LDD  R26,Y+4
00be00 83a0      	STD  Z+0,R26
00be01 81aa      	LDD  R26,Y+2
00be02 81bb      	LDD  R27,Y+2+1
00be03 940e e2f0 	CALL __GETW1P
00be05 23ff      	TST  R31
00be06 f012      	BRMI _0x208002E
00be07 940e c549 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00be09 c006      	RJMP _0x208002F
                 _0x208002A:
00be0a 81aa      	LDD  R26,Y+2
00be0b 81bb      	LDD  R27,Y+2+1
00be0c efef      	LDI  R30,LOW(65535)
00be0d efff      	LDI  R31,HIGH(65535)
00be0e 93ed      	ST   X+,R30
00be0f 93fc      	ST   X,R31
                 _0x208002F:
00be10 8119      	LDD  R17,Y+1
00be11 8108      	LDD  R16,Y+0
00be12 9625      	ADIW R28,5
00be13 9508      	RET
                 __ftoe_G104:
00be14 93ba      	ST   -Y,R27
00be15 93aa      	ST   -Y,R26
00be16 9724      	SBIW R28,4
00be17 e0e0      	LDI  R30,LOW(0)
00be18 83e8      	ST   Y,R30
00be19 83e9      	STD  Y+1,R30
00be1a e8e0      	LDI  R30,LOW(128)
00be1b 83ea      	STD  Y+2,R30
00be1c e3ef      	LDI  R30,LOW(63)
00be1d 83eb      	STD  Y+3,R30
00be1e 940e e39b 	CALL __SAVELOCR4
00be20 85ee      	LDD  R30,Y+14
00be21 85ff      	LDD  R31,Y+14+1
00be22 3fef      	CPI  R30,LOW(0xFFFF)
00be23 efaf      	LDI  R26,HIGH(0xFFFF)
00be24 07fa      	CPC  R31,R26
00be25 f459      	BRNE _0x2080037
00be26 940e cbf8 	CALL SUBOPT_0x193
                +
00be28 eeaa     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00be29 e6b9     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00be2a e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00be2b e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00be2c 940e a773 	CALL _strcpyf
00be2e 940e e3a2 	CALL __LOADLOCR4
00be30 c332      	RJMP _0x20E0003
                 _0x2080037:
00be31 3fef      	CPI  R30,LOW(0x7FFF)
00be32 e7af      	LDI  R26,HIGH(0x7FFF)
00be33 07fa      	CPC  R31,R26
00be34 f459      	BRNE _0x2080036
00be35 940e cbf8 	CALL SUBOPT_0x193
                +
00be37 eeab     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00be38 e6b9     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00be39 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00be3a e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00be3b 940e a773 	CALL _strcpyf
00be3d 940e e3a2 	CALL __LOADLOCR4
00be3f c323      	RJMP _0x20E0003
                 _0x2080036:
00be40 85ab      	LDD  R26,Y+11
00be41 30a7      	CPI  R26,LOW(0x7)
00be42 f010      	BRLO _0x2080039
00be43 e0e6      	LDI  R30,LOW(6)
00be44 87eb      	STD  Y+11,R30
                 _0x2080039:
00be45 851b      	LDD  R17,Y+11
                 _0x208003A:
00be46 2fe1      	MOV  R30,R17
00be47 5011      	SUBI R17,1
00be48 30e0      	CPI  R30,0
00be49 f029      	BREQ _0x208003C
00be4a 940e df12 	CALL SUBOPT_0x41C
00be4c 940e c673 	CALL SUBOPT_0xA8
00be4e cff7      	RJMP _0x208003A
                 _0x208003C:
00be4f 940e c794 	CALL SUBOPT_0xD9
00be51 940e e37d 	CALL __CPD10
00be53 f431      	BRNE _0x208003D
00be54 e030      	LDI  R19,LOW(0)
00be55 940e df12 	CALL SUBOPT_0x41C
00be57 940e c673 	CALL SUBOPT_0xA8
00be59 c02c      	RJMP _0x208003E
                 _0x208003D:
00be5a 853b      	LDD  R19,Y+11
00be5b 940e df15 	CALL SUBOPT_0x41D
00be5d f009      	BREQ PC+2
00be5e f410      	BRCC PC+3
00be5f 940c be6d 	JMP  _0x208003F
00be61 940e df12 	CALL SUBOPT_0x41C
00be63 940e c673 	CALL SUBOPT_0xA8
                 _0x2080040:
00be65 940e df15 	CALL SUBOPT_0x41D
00be67 f020      	BRLO _0x2080042
00be68 940e df1c 	CALL SUBOPT_0x41E
00be6a 5f3f      	SUBI R19,-LOW(1)
00be6b cff9      	RJMP _0x2080040
                 _0x2080042:
00be6c c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00be6d 940e df15 	CALL SUBOPT_0x41D
00be6f f430      	BRSH _0x2080046
00be70 940e dbfe 	CALL SUBOPT_0x3A7
00be72 940e c805 	CALL SUBOPT_0xEA
00be74 5031      	SUBI R19,LOW(1)
00be75 cff7      	RJMP _0x2080044
                 _0x2080046:
00be76 940e df12 	CALL SUBOPT_0x41C
00be78 940e c673 	CALL SUBOPT_0xA8
                 _0x2080043:
00be7a 940e c794 	CALL SUBOPT_0xD9
00be7c 940e dbe3 	CALL SUBOPT_0x3A2
00be7e 940e c805 	CALL SUBOPT_0xEA
00be80 940e df15 	CALL SUBOPT_0x41D
00be82 f018      	BRLO _0x2080047
00be83 940e df1c 	CALL SUBOPT_0x41E
00be85 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00be86 e010      	LDI  R17,LOW(0)
                 _0x2080048:
00be87 85eb      	LDD  R30,Y+11
00be88 17e1      	CP   R30,R17
00be89 f1a8      	BRLO _0x208004A
00be8a 940e c678 	CALL SUBOPT_0xA9
                +
00be8c eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00be8d ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00be8e ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00be8f e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00be90 940e e0c5 	CALL __MULF12
00be92 940e dbe3 	CALL SUBOPT_0x3A2
00be94 01df      	MOVW R26,R30
00be95 01cb      	MOVW R24,R22
00be96 940e c1ca 	CALL _floor
00be98 940e c692 	CALL SUBOPT_0xAE
00be9a 940e c23b 	CALL SUBOPT_0xB
00be9c 940e e113 	CALL __DIVF21
00be9e 940e e002 	CALL __CFD1U
00bea0 2f0e      	MOV  R16,R30
00bea1 940e df23 	CALL SUBOPT_0x41F
00bea3 2fe0      	MOV  R30,R16
00bea4 5de0      	SUBI R30,-LOW(48)
00bea5 93ec      	ST   X,R30
00bea6 2fe0      	MOV  R30,R16
00bea7 27ff      	CLR  R31
00bea8 2766      	CLR  R22
00bea9 2777      	CLR  R23
00beaa 940e e03b 	CALL __CDF1
00beac 940e c678 	CALL SUBOPT_0xA9
00beae 940e e0c5 	CALL __MULF12
00beb0 940e c23b 	CALL SUBOPT_0xB
00beb2 940e cf85 	CALL SUBOPT_0x21A
00beb4 940e c805 	CALL SUBOPT_0xEA
00beb6 2fe1      	MOV  R30,R17
00beb7 5f1f      	SUBI R17,-1
00beb8 30e0      	CPI  R30,0
00beb9 f669      	BRNE _0x2080048
00beba 940e df23 	CALL SUBOPT_0x41F
00bebc e2ee      	LDI  R30,LOW(46)
00bebd 93ec      	ST   X,R30
00bebe cfc8      	RJMP _0x2080048
                 _0x208004A:
00bebf 940e c55f 	CALL SUBOPT_0x80
00bec1 85aa      	LDD  R26,Y+10
00bec2 83a0      	STD  Z+0,R26
00bec3 3030      	CPI  R19,0
00bec4 f42c      	BRGE _0x208004C
00bec5 9531      	NEG  R19
00bec6 85a8      	LDD  R26,Y+8
00bec7 85b9      	LDD  R27,Y+8+1
00bec8 e2ed      	LDI  R30,LOW(45)
00bec9 c003      	RJMP _0x2080137
                 _0x208004C:
00beca 85a8      	LDD  R26,Y+8
00becb 85b9      	LDD  R27,Y+8+1
00becc e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00becd 93ec      	ST   X,R30
00bece 85e8      	LDD  R30,Y+8
00becf 85f9      	LDD  R31,Y+8+1
00bed0 9631      	ADIW R30,1
00bed1 940e cbf5 	CALL SUBOPT_0x192
00bed3 9631      	ADIW R30,1
00bed4 87e8      	STD  Y+8,R30
00bed5 87f9      	STD  Y+8+1,R31
00bed6 9731      	SBIW R30,1
00bed7 01bf      	MOVW R22,R30
00bed8 2fa3      	MOV  R26,R19
00bed9 e0ea      	LDI  R30,LOW(10)
00beda 940e e25b 	CALL __DIVB21
00bedc 5de0      	SUBI R30,-LOW(48)
00bedd 01db      	MOVW R26,R22
00bede 93ec      	ST   X,R30
00bedf 940e c55f 	CALL SUBOPT_0x80
00bee1 01bf      	MOVW R22,R30
00bee2 2fa3      	MOV  R26,R19
00bee3 e0ea      	LDI  R30,LOW(10)
00bee4 940e e2a2 	CALL __MODB21
00bee6 5de0      	SUBI R30,-LOW(48)
00bee7 01db      	MOVW R26,R22
00bee8 93ec      	ST   X,R30
00bee9 85a8      	LDD  R26,Y+8
00beea 85b9      	LDD  R27,Y+8+1
00beeb e0e0      	LDI  R30,LOW(0)
00beec 93ec      	ST   X,R30
00beed 940e e3a2 	CALL __LOADLOCR4
00beef c273      	RJMP _0x20E0003
                 __print_G104:
00bef0 93ba      	ST   -Y,R27
00bef1 93aa      	ST   -Y,R26
00bef2 97ef      	SBIW R28,63
00bef3 9765      	SBIW R28,21
00bef4 940e e399 	CALL __SAVELOCR6
00bef6 e010      	LDI  R17,0
                +
00bef7 01fe     +MOVW R30 , R28
00bef8 5ae4     +SUBI R30 , LOW ( - 92 )
00bef9 4fff     +SBCI R31 , HIGH ( - 92 )
00befa 9001     +LD R0 , Z +
00befb 9011     +LD R1 , Z +
00befc 9161     +LD R22 , Z +
00befd 8170     +LD R23 , Z
00befe 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00beff 940e d9a1 	CALL SUBOPT_0x361
                +
00bf01 01fe     +MOVW R30 , R28
00bf02 5ae6     +SUBI R30 , LOW ( - 90 )
00bf03 4fff     +SBCI R31 , HIGH ( - 90 )
00bf04 9001     +LD R0 , Z +
00bf05 81f0     +LD R31 , Z
00bf06 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00bf07 83ee      	STD  Y+6,R30
00bf08 83ff      	STD  Y+6+1,R31
00bf09 81ae      	LDD  R26,Y+6
00bf0a 81bf      	LDD  R27,Y+6+1
00bf0b 940e c8ed 	CALL SUBOPT_0x113
                 _0x208004E:
00bf0d 01de      	MOVW R26,R28
00bf0e 59ae      	SUBI R26,LOW(-(98))
00bf0f 4fbf      	SBCI R27,HIGH(-(98))
00bf10 940e dc17 	CALL SUBOPT_0x3AC
                +
00bf12 bf6b     +OUT RAMPZ , R22
00bf13 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00bf14 2f2e      	MOV  R18,R30
00bf15 30e0      	CPI  R30,0
00bf16 f411      	BRNE PC+3
00bf17 940c c0fe 	JMP _0x2080050
00bf19 2fe1      	MOV  R30,R17
00bf1a 30e0      	CPI  R30,0
00bf1b f439      	BRNE _0x2080054
00bf1c 3225      	CPI  R18,37
00bf1d f411      	BRNE _0x2080055
00bf1e e011      	LDI  R17,LOW(1)
00bf1f c002      	RJMP _0x2080056
                 _0x2080055:
00bf20 940e df2a 	CALL SUBOPT_0x420
                 _0x2080056:
00bf22 c1da      	RJMP _0x2080053
                 _0x2080054:
00bf23 30e1      	CPI  R30,LOW(0x1)
00bf24 f4c1      	BRNE _0x2080057
00bf25 3225      	CPI  R18,37
00bf26 f419      	BRNE _0x2080058
00bf27 940e df2a 	CALL SUBOPT_0x420
00bf29 c1d2      	RJMP _0x2080138
                 _0x2080058:
00bf2a e012      	LDI  R17,LOW(2)
00bf2b e0e0      	LDI  R30,LOW(0)
00bf2c 8fe9      	STD  Y+25,R30
00bf2d e000      	LDI  R16,LOW(0)
00bf2e 322d      	CPI  R18,45
00bf2f f411      	BRNE _0x2080059
00bf30 e001      	LDI  R16,LOW(1)
00bf31 c1cb      	RJMP _0x2080053
                 _0x2080059:
00bf32 322b      	CPI  R18,43
00bf33 f419      	BRNE _0x208005A
00bf34 e2eb      	LDI  R30,LOW(43)
00bf35 8fe9      	STD  Y+25,R30
00bf36 c1c6      	RJMP _0x2080053
                 _0x208005A:
00bf37 3220      	CPI  R18,32
00bf38 f419      	BRNE _0x208005B
00bf39 e2e0      	LDI  R30,LOW(32)
00bf3a 8fe9      	STD  Y+25,R30
00bf3b c1c1      	RJMP _0x2080053
                 _0x208005B:
00bf3c c002      	RJMP _0x208005C
                 _0x2080057:
00bf3d 30e2      	CPI  R30,LOW(0x2)
00bf3e f439      	BRNE _0x208005D
                 _0x208005C:
00bf3f e050      	LDI  R21,LOW(0)
00bf40 e013      	LDI  R17,LOW(3)
00bf41 3320      	CPI  R18,48
00bf42 f411      	BRNE _0x208005E
00bf43 6800      	ORI  R16,LOW(128)
00bf44 c1b8      	RJMP _0x2080053
                 _0x208005E:
00bf45 c002      	RJMP _0x208005F
                 _0x208005D:
00bf46 30e3      	CPI  R30,LOW(0x3)
00bf47 f491      	BRNE _0x2080060
                 _0x208005F:
00bf48 3320      	CPI  R18,48
00bf49 f010      	BRLO _0x2080062
00bf4a 332a      	CPI  R18,58
00bf4b f008      	BRLO _0x2080063
                 _0x2080062:
00bf4c c007      	RJMP _0x2080061
                 _0x2080063:
00bf4d e0aa      	LDI  R26,LOW(10)
00bf4e 9f5a      	MUL  R21,R26
00bf4f 2d50      	MOV  R21,R0
00bf50 2fe2      	MOV  R30,R18
00bf51 53e0      	SUBI R30,LOW(48)
00bf52 0f5e      	ADD  R21,R30
00bf53 c1a9      	RJMP _0x2080053
                 _0x2080061:
00bf54 e040      	LDI  R20,LOW(0)
00bf55 322e      	CPI  R18,46
00bf56 f411      	BRNE _0x2080064
00bf57 e014      	LDI  R17,LOW(4)
00bf58 c1a4      	RJMP _0x2080053
                 _0x2080064:
00bf59 c00f      	RJMP _0x2080065
                 _0x2080060:
00bf5a 30e4      	CPI  R30,LOW(0x4)
00bf5b f499      	BRNE _0x2080067
00bf5c 3320      	CPI  R18,48
00bf5d f010      	BRLO _0x2080069
00bf5e 332a      	CPI  R18,58
00bf5f f008      	BRLO _0x208006A
                 _0x2080069:
00bf60 c008      	RJMP _0x2080068
                 _0x208006A:
00bf61 6200      	ORI  R16,LOW(32)
00bf62 e0aa      	LDI  R26,LOW(10)
00bf63 9f4a      	MUL  R20,R26
00bf64 2d40      	MOV  R20,R0
00bf65 2fe2      	MOV  R30,R18
00bf66 53e0      	SUBI R30,LOW(48)
00bf67 0f4e      	ADD  R20,R30
00bf68 c194      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00bf69 362c      	CPI  R18,108
00bf6a f419      	BRNE _0x208006B
00bf6b 6002      	ORI  R16,LOW(2)
00bf6c e015      	LDI  R17,LOW(5)
00bf6d c18f      	RJMP _0x2080053
                 _0x208006B:
00bf6e c004      	RJMP _0x208006C
                 _0x2080067:
00bf6f 30e5      	CPI  R30,LOW(0x5)
00bf70 f011      	BREQ PC+3
00bf71 940c c0fd 	JMP _0x2080053
                 _0x208006C:
00bf73 2fe2      	MOV  R30,R18
00bf74 36e3      	CPI  R30,LOW(0x63)
00bf75 f459      	BRNE _0x2080071
00bf76 940e df32 	CALL SUBOPT_0x421
00bf78 940e df39 	CALL SUBOPT_0x422
00bf7a 940e df32 	CALL SUBOPT_0x421
00bf7c 81a4      	LDD  R26,Z+4
00bf7d 93aa      	ST   -Y,R26
00bf7e 940e df40 	CALL SUBOPT_0x423
00bf80 c17b      	RJMP _0x2080072
                 _0x2080071:
00bf81 34e5      	CPI  R30,LOW(0x45)
00bf82 f011      	BREQ _0x2080075
00bf83 36e5      	CPI  R30,LOW(0x65)
00bf84 f409      	BRNE _0x2080076
                 _0x2080075:
00bf85 c004      	RJMP _0x2080077
                 _0x2080076:
00bf86 36e6      	CPI  R30,LOW(0x66)
00bf87 f011      	BREQ PC+3
00bf88 940c bfc9 	JMP _0x2080078
                 _0x2080077:
00bf8a 01fe      	MOVW R30,R28
00bf8b 967a      	ADIW R30,26
00bf8c 8be8      	STD  Y+16,R30
00bf8d 8bf9      	STD  Y+16+1,R31
00bf8e 940e df47 	CALL SUBOPT_0x424
00bf90 940e e2f4 	CALL __GETD1P
00bf92 940e c805 	CALL SUBOPT_0xEA
00bf94 940e df4e 	CALL SUBOPT_0x425
00bf96 85af      	LDD  R26,Y+15
00bf97 23aa      	TST  R26
00bf98 f022      	BRMI _0x2080079
00bf99 8da9      	LDD  R26,Y+25
00bf9a 32ab      	CPI  R26,LOW(0x2B)
00bf9b f049      	BREQ _0x208007B
00bf9c c014      	RJMP _0x208007C
                 _0x2080079:
00bf9d 940e c794 	CALL SUBOPT_0xD9
00bf9f 940e dfcf 	CALL __ANEGF1
00bfa1 940e c805 	CALL SUBOPT_0xEA
00bfa3 e2ed      	LDI  R30,LOW(45)
00bfa4 8fe9      	STD  Y+25,R30
                 _0x208007B:
00bfa5 ff07      	SBRS R16,7
00bfa6 c005      	RJMP _0x208007D
00bfa7 8de9      	LDD  R30,Y+25
00bfa8 93ea      	ST   -Y,R30
00bfa9 940e df40 	CALL SUBOPT_0x423
00bfab c005      	RJMP _0x208007E
                 _0x208007D:
00bfac 940e dbf8 	CALL SUBOPT_0x3A6
00bfae 9731      	SBIW R30,1
00bfaf 8da9      	LDD  R26,Y+25
00bfb0 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00bfb1 ff05      	SBRS R16,5
00bfb2 e046      	LDI  R20,LOW(6)
00bfb3 3626      	CPI  R18,102
00bfb4 f441      	BRNE _0x2080080
00bfb5 940e caed 	CALL SUBOPT_0x16A
00bfb7 934a      	ST   -Y,R20
00bfb8 89ad      	LDD  R26,Y+21
00bfb9 89be      	LDD  R27,Y+21+1
00bfba 940e a46d 	CALL _ftoa
00bfbc c007      	RJMP _0x2080081
                 _0x2080080:
00bfbd 940e caed 	CALL SUBOPT_0x16A
00bfbf 934a      	ST   -Y,R20
00bfc0 932a      	ST   -Y,R18
00bfc1 89ae      	LDD  R26,Y+22
00bfc2 89bf      	LDD  R27,Y+22+1
00bfc3 de50      	RCALL __ftoe_G104
                 _0x2080081:
00bfc4 01fe      	MOVW R30,R28
00bfc5 967a      	ADIW R30,26
00bfc6 940e df50 	CALL SUBOPT_0x426
00bfc8 c022      	RJMP _0x2080082
                 _0x2080078:
00bfc9 37e3      	CPI  R30,LOW(0x73)
00bfca f451      	BRNE _0x2080084
00bfcb 940e df4e 	CALL SUBOPT_0x425
00bfcd 940e df47 	CALL SUBOPT_0x424
00bfcf 9614      	ADIW R26,4
00bfd0 940e e2f0 	CALL __GETW1P
00bfd2 940e df50 	CALL SUBOPT_0x426
00bfd4 c00f      	RJMP _0x2080085
                 _0x2080084:
00bfd5 37e0      	CPI  R30,LOW(0x70)
00bfd6 f4c9      	BRNE _0x2080087
00bfd7 940e df4e 	CALL SUBOPT_0x425
00bfd9 940e df47 	CALL SUBOPT_0x424
00bfdb 9614      	ADIW R26,4
00bfdc 940e e2f4 	CALL __GETD1P
00bfde 940e db21 	CALL SUBOPT_0x390
00bfe0 940e a7a5 	CALL _strlenf
00bfe2 2f1e      	MOV  R17,R30
00bfe3 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00bfe4 770f      	ANDI R16,LOW(127)
00bfe5 3040      	CPI  R20,0
00bfe6 f011      	BREQ _0x2080089
00bfe7 1741      	CP   R20,R17
00bfe8 f008      	BRLO _0x208008A
                 _0x2080089:
00bfe9 c001      	RJMP _0x2080088
                 _0x208008A:
00bfea 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00bfeb e040      	LDI  R20,LOW(0)
00bfec e0e0      	LDI  R30,LOW(0)
00bfed 8fe8      	STD  Y+24,R30
00bfee e030      	LDI  R19,LOW(0)
00bfef c072      	RJMP _0x208008B
                 _0x2080087:
00bff0 36e4      	CPI  R30,LOW(0x64)
00bff1 f011      	BREQ _0x208008E
00bff2 36e9      	CPI  R30,LOW(0x69)
00bff3 f411      	BRNE _0x208008F
                 _0x208008E:
00bff4 6004      	ORI  R16,LOW(4)
00bff5 c002      	RJMP _0x2080090
                 _0x208008F:
00bff6 37e5      	CPI  R30,LOW(0x75)
00bff7 f4a1      	BRNE _0x2080091
                 _0x2080090:
00bff8 e0ea      	LDI  R30,LOW(10)
00bff9 8fe8      	STD  Y+24,R30
00bffa ff01      	SBRS R16,1
00bffb c008      	RJMP _0x2080092
                +
00bffc e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00bffd ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00bffe e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00bfff e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00c000 940e d9ab 	CALL SUBOPT_0x363
00c002 e01a      	LDI  R17,LOW(10)
00c003 c023      	RJMP _0x2080093
                 _0x2080092:
                +
00c004 e1e0     +LDI R30 , LOW ( 0x2710 )
00c005 e2f7     +LDI R31 , HIGH ( 0x2710 )
00c006 e060     +LDI R22 , BYTE3 ( 0x2710 )
00c007 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00c008 940e d9ab 	CALL SUBOPT_0x363
00c00a e015      	LDI  R17,LOW(5)
00c00b c01b      	RJMP _0x2080093
                 _0x2080091:
00c00c 35e8      	CPI  R30,LOW(0x58)
00c00d f411      	BRNE _0x2080095
00c00e 6008      	ORI  R16,LOW(8)
00c00f c004      	RJMP _0x2080096
                 _0x2080095:
00c010 37e8      	CPI  R30,LOW(0x78)
00c011 f011      	BREQ PC+3
00c012 940c c0fc 	JMP _0x20800D4
                 _0x2080096:
00c014 e1e0      	LDI  R30,LOW(16)
00c015 8fe8      	STD  Y+24,R30
00c016 ff01      	SBRS R16,1
00c017 c008      	RJMP _0x2080098
                +
00c018 e0e0     +LDI R30 , LOW ( 0x10000000 )
00c019 e0f0     +LDI R31 , HIGH ( 0x10000000 )
00c01a e060     +LDI R22 , BYTE3 ( 0x10000000 )
00c01b e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00c01c 940e d9ab 	CALL SUBOPT_0x363
00c01e e018      	LDI  R17,LOW(8)
00c01f c007      	RJMP _0x2080093
                 _0x2080098:
                +
00c020 e0e0     +LDI R30 , LOW ( 0x1000 )
00c021 e1f0     +LDI R31 , HIGH ( 0x1000 )
00c022 e060     +LDI R22 , BYTE3 ( 0x1000 )
00c023 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00c024 940e d9ab 	CALL SUBOPT_0x363
00c026 e014      	LDI  R17,LOW(4)
                 _0x2080093:
00c027 3040      	CPI  R20,0
00c028 f011      	BREQ _0x2080099
00c029 770f      	ANDI R16,LOW(127)
00c02a c001      	RJMP _0x208009A
                 _0x2080099:
00c02b e041      	LDI  R20,LOW(1)
                 _0x208009A:
00c02c ff01      	SBRS R16,1
00c02d c008      	RJMP _0x208009B
00c02e 940e df4e 	CALL SUBOPT_0x425
00c030 940e df47 	CALL SUBOPT_0x424
00c032 9614      	ADIW R26,4
00c033 940e e2f4 	CALL __GETD1P
00c035 c013      	RJMP _0x2080139
                 _0x208009B:
00c036 ff02      	SBRS R16,2
00c037 c00a      	RJMP _0x208009D
00c038 940e df4e 	CALL SUBOPT_0x425
00c03a 940e df47 	CALL SUBOPT_0x424
00c03c 9614      	ADIW R26,4
00c03d 940e e2f0 	CALL __GETW1P
00c03f 940e e201 	CALL __CWD1
00c041 c007      	RJMP _0x2080139
                 _0x208009D:
00c042 940e df4e 	CALL SUBOPT_0x425
00c044 940e df47 	CALL SUBOPT_0x424
00c046 9614      	ADIW R26,4
00c047 940e c2bf 	CALL SUBOPT_0x1E
                 _0x2080139:
                +
00c049 87ec     +STD Y + 12 , R30
00c04a 87fd     +STD Y + 12 + 1 , R31
00c04b 876e     +STD Y + 12 + 2 , R22
00c04c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c04d ff02      	SBRS R16,2
00c04e c012      	RJMP _0x208009F
00c04f 85af      	LDD  R26,Y+15
00c050 23aa      	TST  R26
00c051 f442      	BRPL _0x20800A0
00c052 940e c794 	CALL SUBOPT_0xD9
00c054 940e e19e 	CALL __ANEGD1
00c056 940e c805 	CALL SUBOPT_0xEA
00c058 e2ed      	LDI  R30,LOW(45)
00c059 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00c05a 8de9      	LDD  R30,Y+25
00c05b 30e0      	CPI  R30,0
00c05c f019      	BREQ _0x20800A1
00c05d 5f1f      	SUBI R17,-LOW(1)
00c05e 5f4f      	SUBI R20,-LOW(1)
00c05f c001      	RJMP _0x20800A2
                 _0x20800A1:
00c060 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00c061 2f34      	MOV  R19,R20
                 _0x208008B:
00c062 fd00      	SBRC R16,0
00c063 c014      	RJMP _0x20800A3
                 _0x20800A4:
00c064 1715      	CP   R17,R21
00c065 f410      	BRSH _0x20800A7
00c066 1735      	CP   R19,R21
00c067 f008      	BRLO _0x20800A8
                 _0x20800A7:
00c068 c00f      	RJMP _0x20800A6
                 _0x20800A8:
00c069 ff07      	SBRS R16,7
00c06a c008      	RJMP _0x20800A9
00c06b ff02      	SBRS R16,2
00c06c c004      	RJMP _0x20800AA
00c06d 7f0b      	ANDI R16,LOW(251)
00c06e 8d29      	LDD  R18,Y+25
00c06f 5011      	SUBI R17,LOW(1)
00c070 c001      	RJMP _0x20800AB
                 _0x20800AA:
00c071 e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00c072 c001      	RJMP _0x20800AC
                 _0x20800A9:
00c073 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00c074 940e df2a 	CALL SUBOPT_0x420
00c076 5051      	SUBI R21,LOW(1)
00c077 cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00c078 1714      	CP   R17,R20
00c079 f490      	BRSH _0x20800AF
00c07a 6100      	ORI  R16,LOW(16)
00c07b ff02      	SBRS R16,2
00c07c c006      	RJMP _0x20800B0
00c07d 940e df58 	CALL SUBOPT_0x427
00c07f f009      	BREQ _0x20800B1
00c080 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00c081 5011      	SUBI R17,LOW(1)
00c082 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00c083 e3e0      	LDI  R30,LOW(48)
00c084 93ea      	ST   -Y,R30
00c085 940e df40 	CALL SUBOPT_0x423
00c087 3050      	CPI  R21,0
00c088 f009      	BREQ _0x20800B2
00c089 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00c08a 5041      	SUBI R20,LOW(1)
00c08b cfec      	RJMP _0x20800AD
                 _0x20800AF:
00c08c 2f31      	MOV  R19,R17
00c08d 8de8      	LDD  R30,Y+24
00c08e 30e0      	CPI  R30,0
00c08f f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00c090 3030      	CPI  R19,0
00c091 f0a9      	BREQ _0x20800B6
00c092 ff03      	SBRS R16,3
00c093 c007      	RJMP _0x20800B7
00c094 01de      	MOVW R26,R28
00c095 9650      	ADIW R26,16
00c096 940e dc17 	CALL SUBOPT_0x3AC
                +
00c098 bf6b     +OUT RAMPZ , R22
00c099 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00c09a c005      	RJMP _0x20800B8
                 _0x20800B7:
00c09b 89a8      	LDD  R26,Y+16
00c09c 89b9      	LDD  R27,Y+16+1
00c09d 912d      	LD   R18,X+
00c09e 8ba8      	STD  Y+16,R26
00c09f 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00c0a0 940e df2a 	CALL SUBOPT_0x420
00c0a2 3050      	CPI  R21,0
00c0a3 f009      	BREQ _0x20800B9
00c0a4 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00c0a5 5031      	SUBI R19,LOW(1)
00c0a6 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00c0a7 c04a      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00c0a8 940e c7a6 	CALL SUBOPT_0xDC
00c0aa 940e c23b 	CALL SUBOPT_0xB
00c0ac 940e e278 	CALL __DIVD21U
00c0ae 2f2e      	MOV  R18,R30
00c0af 302a      	CPI  R18,10
00c0b0 f030      	BRLO _0x20800BE
00c0b1 ff03      	SBRS R16,3
00c0b2 c002      	RJMP _0x20800BF
00c0b3 5c29      	SUBI R18,-LOW(55)
00c0b4 c001      	RJMP _0x20800C0
                 _0x20800BF:
00c0b5 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00c0b6 c001      	RJMP _0x20800C1
                 _0x20800BE:
00c0b7 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00c0b8 fd04      	SBRC R16,4
00c0b9 c01a      	RJMP _0x20800C3
00c0ba 3321      	CPI  R18,49
00c0bb f428      	BRSH _0x20800C5
00c0bc 940e d018 	CALL SUBOPT_0x22C
00c0be 940e dcea 	CALL SUBOPT_0x3C7
00c0c0 f409      	BRNE _0x20800C4
                 _0x20800C5:
00c0c1 c00b      	RJMP _0x20800C7
                 _0x20800C4:
00c0c2 1743      	CP   R20,R19
00c0c3 f440      	BRSH _0x208013A
00c0c4 1753      	CP   R21,R19
00c0c5 f010      	BRLO _0x20800CA
00c0c6 ff00      	SBRS R16,0
00c0c7 c001      	RJMP _0x20800CB
                 _0x20800CA:
00c0c8 c010      	RJMP _0x20800C9
                 _0x20800CB:
00c0c9 e220      	LDI  R18,LOW(32)
00c0ca ff07      	SBRS R16,7
00c0cb c008      	RJMP _0x20800CC
                 _0x208013A:
00c0cc e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00c0cd 6100      	ORI  R16,LOW(16)
00c0ce ff02      	SBRS R16,2
00c0cf c004      	RJMP _0x20800CD
00c0d0 940e df58 	CALL SUBOPT_0x427
00c0d2 f009      	BREQ _0x20800CE
00c0d3 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00c0d4 940e df2a 	CALL SUBOPT_0x420
00c0d6 3050      	CPI  R21,0
00c0d7 f009      	BREQ _0x20800CF
00c0d8 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00c0d9 5031      	SUBI R19,LOW(1)
00c0da 940e c7a6 	CALL SUBOPT_0xDC
00c0dc 940e c23b 	CALL SUBOPT_0xB
00c0de 940e e2bf 	CALL __MODD21U
00c0e0 940e c805 	CALL SUBOPT_0xEA
00c0e2 8de8      	LDD  R30,Y+24
00c0e3 940e d018 	CALL SUBOPT_0x22C
00c0e5 27ff      	CLR  R31
00c0e6 2766      	CLR  R22
00c0e7 2777      	CLR  R23
00c0e8 940e e278 	CALL __DIVD21U
00c0ea 940e d9ab 	CALL SUBOPT_0x363
00c0ec 940e c7a6 	CALL SUBOPT_0xDC
00c0ee 940e e37d 	CALL __CPD10
00c0f0 f009      	BREQ _0x20800BD
00c0f1 cfb6      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00c0f2 ff00      	SBRS R16,0
00c0f3 c008      	RJMP _0x20800D0
                 _0x20800D1:
00c0f4 3050      	CPI  R21,0
00c0f5 f031      	BREQ _0x20800D3
00c0f6 5051      	SUBI R21,LOW(1)
00c0f7 e2e0      	LDI  R30,LOW(32)
00c0f8 93ea      	ST   -Y,R30
00c0f9 940e df40 	CALL SUBOPT_0x423
00c0fb cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00c0fc e010      	LDI  R17,LOW(0)
                 _0x2080053:
00c0fd ce0f      	RJMP _0x208004E
                 _0x2080050:
00c0fe 81ae      	LDD  R26,Y+6
00c0ff 81bf      	LDD  R27,Y+6+1
00c100 940e e2f0 	CALL __GETW1P
00c102 940e e3a0 	CALL __LOADLOCR6
00c104 96ef      	ADIW R28,63
00c105 96a7      	ADIW R28,39
00c106 9508      	RET
                 _sprintf:
00c107 92ff      	PUSH R15
00c108 2ef8      	MOV  R15,R24
00c109 9726      	SBIW R28,6
00c10a 940e e39b 	CALL __SAVELOCR4
00c10c 01de      	MOVW R26,R28
00c10d 961e      	ADIW R26,14
00c10e 940e e178 	CALL __ADDW2R15
00c110 940e e2f0 	CALL __GETW1P
00c112 9730      	SBIW R30,0
00c113 f419      	BRNE _0x20800D5
00c114 efef      	LDI  R30,LOW(65535)
00c115 efff      	LDI  R31,HIGH(65535)
00c116 c023      	RJMP _0x20E0004
                 _0x20800D5:
00c117 01de      	MOVW R26,R28
00c118 9616      	ADIW R26,6
00c119 940e e178 	CALL __ADDW2R15
00c11b 018d      	MOVW R16,R26
00c11c 01de      	MOVW R26,R28
00c11d 961e      	ADIW R26,14
00c11e 940e e178 	CALL __ADDW2R15
00c120 940e dc0e 	CALL SUBOPT_0x3AA
00c122 e0e0      	LDI  R30,LOW(0)
00c123 87e8      	STD  Y+8,R30
00c124 87e9      	STD  Y+8+1,R30
00c125 01de      	MOVW R26,R28
00c126 961a      	ADIW R26,10
00c127 940e e178 	CALL __ADDW2R15
00c129 940e e2f4 	CALL __GETD1P
00c12b 940e e324 	CALL __PUTPARD1
00c12d 931a      	ST   -Y,R17
00c12e 930a      	ST   -Y,R16
00c12f 940e df6d 	CALL SUBOPT_0x428
00c131 01de      	MOVW R26,R28
00c132 961e      	ADIW R26,14
00c133 ddbc      	RCALL __print_G104
00c134 019f      	MOVW R18,R30
00c135 81ae      	LDD  R26,Y+6
00c136 81bf      	LDD  R27,Y+6+1
00c137 e0e0      	LDI  R30,LOW(0)
00c138 93ec      	ST   X,R30
00c139 01f9      	MOVW R30,R18
                 _0x20E0004:
00c13a 940e e3a2 	CALL __LOADLOCR4
00c13c 962a      	ADIW R28,10
00c13d 90ff      	POP  R15
00c13e 9508      	RET
                 _vsprintf:
00c13f 93ba      	ST   -Y,R27
00c140 93aa      	ST   -Y,R26
00c141 9726      	SBIW R28,6
00c142 931a      	ST   -Y,R17
00c143 930a      	ST   -Y,R16
00c144 85ee      	LDD  R30,Y+14
00c145 85ff      	LDD  R31,Y+14+1
00c146 9730      	SBIW R30,0
00c147 f419      	BRNE _0x20800D8
00c148 efef      	LDI  R30,LOW(65535)
00c149 efff      	LDI  R31,HIGH(65535)
00c14a c016      	RJMP _0x20E0002
                 _0x20800D8:
00c14b 85ee      	LDD  R30,Y+14
00c14c 85ff      	LDD  R31,Y+14+1
00c14d 83ec      	STD  Y+4,R30
00c14e 83fd      	STD  Y+4+1,R31
00c14f e0e0      	LDI  R30,LOW(0)
00c150 83ee      	STD  Y+6,R30
00c151 83ef      	STD  Y+6+1,R30
00c152 940e d919 	CALL SUBOPT_0x34D
00c154 940e cc8e 	CALL SUBOPT_0x1AE
00c156 940e df6d 	CALL SUBOPT_0x428
00c158 01de      	MOVW R26,R28
00c159 961c      	ADIW R26,12
00c15a dd95      	RCALL __print_G104
00c15b 018f      	MOVW R16,R30
00c15c 81ac      	LDD  R26,Y+4
00c15d 81bd      	LDD  R27,Y+4+1
00c15e e0e0      	LDI  R30,LOW(0)
00c15f 93ec      	ST   X,R30
00c160 01f8      	MOVW R30,R16
                 _0x20E0002:
00c161 8119      	LDD  R17,Y+1
00c162 8108      	LDD  R16,Y+0
                 _0x20E0003:
00c163 9660      	ADIW R28,16
00c164 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00c165 93aa      	ST   -Y,R26
00c166 e0e1          ldi  r30,1
00c167 91f9          ld   r31,y+
00c168 33f0          cpi  r31,'0'
00c169 f010          brlo isdigit0
00c16a 33fa          cpi  r31,'9'+1
00c16b f008          brlo isdigit1
                 isdigit0:
00c16c 27ee          clr  r30
                 isdigit1:
00c16d 9508          ret
                 _isprint:
00c16e 93aa      	ST   -Y,R26
00c16f e0e1          ldi  r30,1
00c170 91f9          ld   r31,y+
00c171 32f0          cpi  r31,32
00c172 f010          brlo isprint0
00c173 38f0          cpi  r31,128
00c174 f008          brlo isprint1
                 isprint0:
00c175 27ee          clr  r30
                 isprint1:
00c176 9508          ret
                 _isspace:
00c177 93aa      	ST   -Y,R26
00c178 e0e1          ldi  r30,1
00c179 91f9          ld   r31,y+
00c17a 32f0          cpi  r31,' '
00c17b f029          breq isspace1
00c17c 30f9          cpi  r31,9
00c17d f010          brlo isspace0
00c17e 30fe          cpi  r31,13+1
00c17f f008          brlo isspace1
                 isspace0:
00c180 27ee          clr  r30
                 isspace1:
00c181 9508          ret
                 _isxdigit:
00c182 93aa      	ST   -Y,R26
00c183 e0e1          ldi  r30,1
00c184 91f9          ld   r31,y+
00c185 53f0          subi r31,0x30
00c186 f040          brcs isxdigit0
00c187 30fa          cpi  r31,10
00c188 f038          brcs isxdigit1
00c189 75ff          andi r31,0x5f
00c18a 50f7          subi r31,7
00c18b 30fa          cpi  r31,10
00c18c f010          brcs isxdigit0
00c18d 31f0          cpi  r31,16
00c18e f008          brcs isxdigit1
                 isxdigit0:
00c18f 27ee          clr  r30
                 isxdigit1:
00c190 9508          ret
                 _tolower:
00c191 93aa      	ST   -Y,R26
00c192 91e9          ld   r30,y+
00c193 34e1          cpi  r30,'A'
00c194 f018          brlo tolower1
00c195 35eb          cpi  r30,'Z'+1
00c196 f408          brcc tolower1
00c197 5ee0          subi r30,-32
                 tolower1:
00c198 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00c199 940e e329 	CALL __PUTPARD2
00c19b 817b         ldd  r23,y+3
00c19c 816a         ldd  r22,y+2
00c19d 81f9         ldd  r31,y+1
00c19e 81e8         ld   r30,y
00c19f fb77         bst  r23,7
00c1a0 0f77         lsl  r23
00c1a1 fd67         sbrc r22,7
00c1a2 6071         sbr  r23,1
00c1a3 2f97         mov  r25,r23
00c1a4 579e         subi r25,0x7e
00c1a5 f081         breq __ftrunc0
00c1a6 f078         brcs __ftrunc0
00c1a7 3198         cpi  r25,24
00c1a8 f490         brsh __ftrunc1
00c1a9 27aa         clr  r26
00c1aa 27bb         clr  r27
00c1ab 2788         clr  r24
                 __ftrunc2:
00c1ac 9408         sec
00c1ad 9587         ror  r24
00c1ae 95b7         ror  r27
00c1af 95a7         ror  r26
00c1b0 959a         dec  r25
00c1b1 f7d1         brne __ftrunc2
00c1b2 23ea         and  r30,r26
00c1b3 23fb         and  r31,r27
00c1b4 2368         and  r22,r24
00c1b5 c005         rjmp __ftrunc1
                 __ftrunc0:
00c1b6 94e8         clt
00c1b7 2777         clr  r23
00c1b8 27ee         clr  r30
00c1b9 27ff         clr  r31
00c1ba 2766         clr  r22
                 __ftrunc1:
00c1bb 776f         cbr  r22,0x80
00c1bc 9576         lsr  r23
00c1bd f408         brcc __ftrunc3
00c1be 6860         sbr  r22,0x80
                 __ftrunc3:
00c1bf f977         bld  r23,7
00c1c0 91a9         ld   r26,y+
00c1c1 91b9         ld   r27,y+
00c1c2 9189         ld   r24,y+
00c1c3 9199         ld   r25,y+
00c1c4 17ea         cp   r30,r26
00c1c5 07fb         cpc  r31,r27
00c1c6 0768         cpc  r22,r24
00c1c7 0779         cpc  r23,r25
00c1c8 fb97         bst  r25,7
00c1c9 9508         ret
                 _floor:
00c1ca 940e e329 	CALL __PUTPARD2
00c1cc 940e c5ab 	CALL SUBOPT_0x8C
00c1ce 940e c199 	CALL _ftrunc
00c1d0 940e c64a 	CALL SUBOPT_0xA1
00c1d2 f419          brne __floor1
                 __floor0:
00c1d3 940e c58c 	CALL SUBOPT_0x87
00c1d5 c009      	RJMP _0x20E0001
                 __floor1:
00c1d6 f7e6          brtc __floor0
00c1d7 940e c58c 	CALL SUBOPT_0x87
                +
00c1d9 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00c1da e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00c1db e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00c1dc e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00c1dd 940e e06e 	CALL __SUBF12
                 _0x20E0001:
00c1df 9624      	ADIW R28,4
00c1e0 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 
                 	.ESEG
                 _epFactor_A:
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_B:
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_C:
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet1:
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00        	.DB  0x0
                 _epADCRef1:
0005d6 00
0005d7 00
0005d8 00
0005d9 00        	.DB  0x0,0x0,0x0,0x0
0005da 00
0005db 00
0005dc 00
0005dd 00        	.DB  0x0,0x0,0x0,0x0
0005de 00
0005df 00
0005e0 00
0005e1 00        	.DB  0x0,0x0,0x0,0x0
0005e2 00
0005e3 00
0005e4 00
0005e5 00        	.DB  0x0,0x0,0x0,0x0
0005e6 00
0005e7 00
0005e8 00
0005e9 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef1:
0005ea 00
0005eb 00
0005ec 00
0005ed 00        	.DB  0x0,0x0,0x0,0x0
0005ee 00
0005ef 00
0005f0 00
0005f1 00        	.DB  0x0,0x0,0x0,0x0
0005f2 00
0005f3 00
0005f4 00
0005f5 00        	.DB  0x0,0x0,0x0,0x0
0005f6 00
0005f7 00
0005f8 00
0005f9 00        	.DB  0x0,0x0,0x0,0x0
0005fa 00
0005fb 00
0005fc 00
0005fd 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet2:
0005fe 00
0005ff 00
000600 00
000601 00        	.DB  0x0,0x0,0x0,0x0
000602 00        	.DB  0x0
                 _epADCRef2:
000603 00
000604 00
000605 00
000606 00        	.DB  0x0,0x0,0x0,0x0
000607 00
000608 00
000609 00
00060a 00        	.DB  0x0,0x0,0x0,0x0
00060b 00
00060c 00
00060d 00
00060e 00        	.DB  0x0,0x0,0x0,0x0
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
000613 00
000614 00
000615 00
000616 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef2:
000617 00
000618 00
000619 00
00061a 00        	.DB  0x0,0x0,0x0,0x0
00061b 00
00061c 00
00061d 00
00061e 00        	.DB  0x0,0x0,0x0,0x0
00061f 00
000620 00
000621 00
000622 00        	.DB  0x0,0x0,0x0,0x0
000623 00
000624 00
000625 00
000626 00        	.DB  0x0,0x0,0x0,0x0
000627 00
000628 00
000629 00
00062a 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet3:
00062b 00
00062c 00
00062d 00
00062e 00        	.DB  0x0,0x0,0x0,0x0
00062f 00        	.DB  0x0
                 _epADCRef3:
000630 00
000631 00
000632 00
000633 00        	.DB  0x0,0x0,0x0,0x0
000634 00
000635 00
000636 00
000637 00        	.DB  0x0,0x0,0x0,0x0
000638 00
000639 00
00063a 00
00063b 00        	.DB  0x0,0x0,0x0,0x0
00063c 00
00063d 00
00063e 00
00063f 00        	.DB  0x0,0x0,0x0,0x0
000640 00
000641 00
000642 00
000643 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef3:
000644 00
000645 00
000646 00
000647 00        	.DB  0x0,0x0,0x0,0x0
000648 00
000649 00
00064a 00
00064b 00        	.DB  0x0,0x0,0x0,0x0
00064c 00
00064d 00
00064e 00
00064f 00        	.DB  0x0,0x0,0x0,0x0
000650 00
000651 00
000652 00
000653 00        	.DB  0x0,0x0,0x0,0x0
000654 00
000655 00
000656 00
000657 00        	.DB  0x0,0x0,0x0,0x0
                 _epCalType:
000658 00
000659 00
00065a 00
00065b 00        	.DB  0x0,0x0,0x0,0x0
00065c 00        	.DB  0x0
                 
                 	.DSEG
                 _t_S00D0004000:
001550           	.BYTE 0x14
                 _lastCheck_S00D0004000:
001564           	.BYTE 0x5
                 _steadyState_S00D0004000:
001569           	.BYTE 0x5
                 _dataQ:
00156e           	.BYTE 0x64
                 _dataQ_len:
0015d2           	.BYTE 0x2
                 _t_S00F0001000:
0015d4           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015d8           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015d9           	.BYTE 0x1
                 _t_S00F0005000:
0015da           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015ee           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015f3           	.BYTE 0x5
                 _t_S00F0006000:
0015f8           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
001600           	.BYTE 0x2
                 _steadyState_S00F0006000:
001602           	.BYTE 0x2
                 _eventQ:
001604           	.BYTE 0x78
                 _last_wr_eventQ:
00167c           	.BYTE 0x2
                 _last_rd_eventQ:
00167e           	.BYTE 0x2
                 _eventQ_len:
001680           	.BYTE 0x2
                 _ainAlarm:
001682           	.BYTE 0x10
                 _mtncAlarm:
001692           	.BYTE 0x1
                 _powerSrcAlarm:
001693           	.BYTE 0x1
                 _communicationAlarm:
001694           	.BYTE 0x1
                 _gsmAlarm:
001695           	.BYTE 0x1
                 _gsmBalanceAlarm:
001696           	.BYTE 0x1
                 _t_S0110003000:
001697           	.BYTE 0x4
                 _t_flag_S0110003000:
00169b           	.BYTE 0x1
                 _lastCheck_S0110003000:
00169c           	.BYTE 0x1
                 _t_S0110004000:
00169d           	.BYTE 0x4
                 _t_flag_S0110004000:
0016a1           	.BYTE 0x1
                 _lastCheck_S0110004000:
0016a2           	.BYTE 0x1
                 _t_S0110005000:
0016a3           	.BYTE 0x4
                 _t_flag_S0110005000:
0016a7           	.BYTE 0x1
                 _t_S0110006000:
0016a8           	.BYTE 0x8
                 _t_flag_S0110006000:
0016b0           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016b2           	.BYTE 0x2
                 _t_S0110007000:
0016b4           	.BYTE 0x14
                 _t_flag_S0110007000:
0016c8           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016cd           	.BYTE 0x5
                 _t_S0110008000:
0016d2           	.BYTE 0x14
                 _t_flag_S0110008000:
0016e6           	.BYTE 0x5
                 _fat:
0016eb           	.BYTE 0x232
                 _pfat:
00191d           	.BYTE 0x2
                 _root_path:
00191f           	.BYTE 0x4
                 _eventLogQueue:
001923           	.BYTE 0x8C
                 _eventLogQCount:
0019af           	.BYTE 0x1
                 _dataLogQueue:
0019b0           	.BYTE 0x6E
                 _dataLogQCount:
001a1e           	.BYTE 0x1
                 _cursor_S0160000000:
001a1f           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a20           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a21           	.BYTE 0x1
                 _entPwd_S0160000000:
001a22           	.BYTE 0x4
                 _newPwd_S0160000000:
001a26           	.BYTE 0x4
                 _confPwd_S0160000000:
001a2a           	.BYTE 0x4
                 _setIp_S0160000000:
001a2e           	.BYTE 0xC
                 _setMask_S0160000000:
001a3a           	.BYTE 0xC
                 _setGw_S0160000000:
001a46           	.BYTE 0xC
                 _setServer_S0160000000:
001a52           	.BYTE 0xC
                 _devEn_S0160000000:
001a5e           	.BYTE 0x1
                 _almEn_S0160000000:
001a5f           	.BYTE 0x1
                 _prbEn_S0160000000:
001a60           	.BYTE 0x5
                 _mute_S0160000000:
001a65           	.BYTE 0x1
                 _vRef_S0160000000:
001a66           	.BYTE 0x3
                 _prb1_S0160000000:
001a69           	.BYTE 0x1
                 _prb2_S0160000000:
001a6a           	.BYTE 0x1
                 _calPnt_S0160000000:
001a6b           	.BYTE 0x6
                 _n:
001a71           	.BYTE 0x2
                 _a:
001a73           	.BYTE 0x30
                 _indexWrite:
001aa3           	.BYTE 0x2
                 _gItemSize:
001aa5           	.BYTE 0x2
                 _smoothBuffer:
001aa7           	.BYTE 0x2
                 __seed_G100:
001aa9           	.BYTE 0x4
                 _status_G102:
001aad           	.BYTE 0x1
                 _timer1_G102:
001aae           	.BYTE 0x1
                 _timer2_G102:
001aaf           	.BYTE 0x1
                 _card_type_G102:
001ab0           	.BYTE 0x1
                 _pv_S102000B000:
001ab1           	.BYTE 0x1
                 _FatFs_G103:
001ab2           	.BYTE 0x2
                 _Fsid_G103:
001ab4           	.BYTE 0x2
                 _Drive_G103:
001ab6           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
                +
00c1e1 e020     +LDI R18 , LOW ( 0 )
00c1e2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00c1e3 e040     +LDI R20 , LOW ( 0 )
00c1e4 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00c1e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00c1e6 935a      	ST   -Y,R21
00c1e7 934a      	ST   -Y,R20
                +
00c1e8 e2a6     +LDI R26 , 38
00c1e9 9fa4     +MUL R26 , R20
00c1ea 01f0     +MOVW R30 , R0
00c1eb 9fa5     +MUL R26 , R21
00c1ec 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00c1ed 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00c1ee 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00c1ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00c1f0 81e0      	LD   R30,Z
00c1f1 940e e210 	CALL __LNEGB1
00c1f3 2fae      	MOV  R26,R30
00c1f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 286 TIMES, CODE SIZE REDUCTION:1137 WORDS
                 SUBOPT_0x3:
00c1f5 940e e324 	CALL __PUTPARD1
00c1f7 e080      	LDI  R24,0
00c1f8 940e 9e86 	CALL _printDebug
00c1fa 9624      	ADIW R28,4
00c1fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00c1fc ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00c1fd e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00c1fe 0fe2      	ADD  R30,R18
00c1ff 1ff3      	ADC  R31,R19
00c200 81e0      	LD   R30,Z
00c201 30e0      	CPI  R30,0
00c202 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
00c203 01f9      	MOVW R30,R18
00c204 01de      	MOVW R26,R28
00c205 59ad      	SUBI R26,LOW(-(99))
00c206 4fbf      	SBCI R27,HIGH(-(99))
00c207 940e e1cb 	CALL __LSLW2
00c209 0fea      	ADD  R30,R26
00c20a 1ffb      	ADC  R31,R27
00c20b 93fa      	ST   -Y,R31
00c20c 93ea      	ST   -Y,R30
                +
00c20d e0a5     +LDI R26 , LOW ( 0x5 )
00c20e e0b0     +LDI R27 , HIGH ( 0x5 )
00c20f e080     +LDI R24 , BYTE3 ( 0x5 )
00c210 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00c211 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00c213 01fe      	MOVW R30,R28
00c214 5ae1      	SUBI R30,LOW(-(95))
00c215 4fff      	SBCI R31,HIGH(-(95))
00c216 93fa      	ST   -Y,R31
00c217 93ea      	ST   -Y,R30
                +
00c218 e0a7     +LDI R26 , LOW ( 0x7 )
00c219 e0b0     +LDI R27 , HIGH ( 0x7 )
00c21a e080     +LDI R24 , BYTE3 ( 0x7 )
00c21b e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00c21c 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00c21e 01fe      	MOVW R30,R28
00c21f 5ae5      	SUBI R30,LOW(-(91))
00c220 4fff      	SBCI R31,HIGH(-(91))
00c221 93fa      	ST   -Y,R31
00c222 93ea      	ST   -Y,R30
                +
00c223 e3ac     +LDI R26 , LOW ( 0x3C )
00c224 e0b0     +LDI R27 , HIGH ( 0x3C )
00c225 e080     +LDI R24 , BYTE3 ( 0x3C )
00c226 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c227 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
00c229 01fe      	MOVW R30,R28
00c22a 5ae9      	SUBI R30,LOW(-(87))
00c22b 4fff      	SBCI R31,HIGH(-(87))
00c22c 93fa      	ST   -Y,R31
00c22d 93ea      	ST   -Y,R30
                +
00c22e e2ac     +LDI R26 , LOW ( 0x12C )
00c22f e0b1     +LDI R27 , HIGH ( 0x12C )
00c230 e080     +LDI R24 , BYTE3 ( 0x12C )
00c231 e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00c232 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00c234 01fe      	MOVW R30,R28
00c235 93fa      	ST   -Y,R31
00c236 93ea      	ST   -Y,R30
00c237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00c238 e0a7      	LDI  R26,LOW(7)
00c239 e0b0      	LDI  R27,0
00c23a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:65 WORDS
                 SUBOPT_0xB:
                +
00c23b 85ac     +LDD R26 , Y + 12
00c23c 85bd     +LDD R27 , Y + 12 + 1
00c23d 858e     +LDD R24 , Y + 12 + 2
00c23e 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00c23f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xC:
                +
00c240 89e8     +LDD R30 , Y + 16
00c241 89f9     +LDD R31 , Y + 16 + 1
00c242 896a     +LDD R22 , Y + 16 + 2
00c243 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00c244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00c245 e1a5      	LDI  R26,LOW(_properties_config)
00c246 e1b1      	LDI  R27,HIGH(_properties_config)
00c247 940e 491d 	CALL _getPropertiesConfig
00c249 e0e0      	LDI  R30,LOW(0)
00c24a 93e0 10f6 	STS  _is_properties_config_update,R30
00c24c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00c24d eba6      	LDI  R26,LOW(_operating_config)
00c24e e1b1      	LDI  R27,HIGH(_operating_config)
00c24f 940e 49b2 	CALL _getOperatingConfig
00c251 e0e0      	LDI  R30,LOW(0)
00c252 93e0 10f7 	STS  _is_operating_config_update,R30
00c254 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00c255 0fa2      	ADD  R26,R18
00c256 1fb3      	ADC  R27,R19
00c257 91ec      	LD   R30,X
00c258 30e0      	CPI  R30,0
00c259 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00c25a e1ad     +LDI R26 , 29
00c25b 9fa2     +MUL R26 , R18
00c25c 01f0     +MOVW R30 , R0
00c25d 9fa3     +MUL R26 , R19
00c25e 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00c25f 54e2      	SUBI R30,LOW(-_sensor_config)
00c260 4efe      	SBCI R31,HIGH(-_sensor_config)
00c261 01df      	MOVW R26,R30
00c262 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00c263 940e e324 	CALL __PUTPARD1
00c265 01f9      	MOVW R30,R18
00c266 940e e201 	CALL __CWD1
00c268 940e e324 	CALL __PUTPARD1
00c26a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 301 TIMES, CODE SIZE REDUCTION:597 WORDS
                 SUBOPT_0x12:
00c26b e084      	LDI  R24,4
00c26c 940e 9e86 	CALL _printDebug
00c26e 9628      	ADIW R28,8
00c26f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00c270 0fa2      	ADD  R26,R18
00c271 1fb3      	ADC  R27,R19
00c272 e0e0      	LDI  R30,LOW(0)
00c273 93ec      	ST   X,R30
00c274 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00c275 e3ad      	LDI  R26,LOW(_buzz_config)
00c276 e1b3      	LDI  R27,HIGH(_buzz_config)
00c277 940e 4c98 	CALL _getBuzzerConfig
00c279 e0e0      	LDI  R30,LOW(0)
00c27a 93e0 1112 	STS  _is_buzzer_config_update,R30
00c27c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00c27d e0a3     +LDI R26 , 3
00c27e 9fa2     +MUL R26 , R18
00c27f 01f0     +MOVW R30 , R0
00c280 9fa3     +MUL R26 , R19
00c281 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00c282 5be1      	SUBI R30,LOW(-_din_config)
00c283 4efd      	SBCI R31,HIGH(-_din_config)
00c284 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00c285 58e1      	SUBI R30,LOW(-_dout_config)
00c286 4efd      	SBCI R31,HIGH(-_dout_config)
00c287 01df      	MOVW R26,R30
00c288 940e 4b3e 	CALL _getAuxDoutConfig
00c28a e0ad      	LDI  R26,LOW(_is_dout_config_update)
00c28b e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00c28c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00c28d e6a2      	LDI  R26,LOW(_status_config)
00c28e e1b3      	LDI  R27,HIGH(_status_config)
00c28f 940e 4dc2 	CALL _getStatusReportConfig
00c291 e0e0      	LDI  R30,LOW(0)
00c292 93e0 1113 	STS  _is_status_config_update,R30
00c294 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00c295 e6a5      	LDI  R26,LOW(_env_config)
00c296 e1b3      	LDI  R27,HIGH(_env_config)
00c297 940e 4d2f 	CALL _getEnvAlarmConfig
00c299 e0e0      	LDI  R30,LOW(0)
00c29a 93e0 1114 	STS  _is_env_config_update,R30
00c29c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00c29d 933a      	ST   -Y,R19
00c29e 932a      	ST   -Y,R18
                +
00c29f e0a5     +LDI R26 , 5
00c2a0 9fa2     +MUL R26 , R18
00c2a1 01f0     +MOVW R30 , R0
00c2a2 9fa3     +MUL R26 , R19
00c2a3 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00c2a4 5be6      	SUBI R30,LOW(-_sensor)
00c2a5 4efb      	SBCI R31,HIGH(-_sensor)
00c2a6 01df      	MOVW R26,R30
00c2a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00c2a8 01f9      	MOVW R30,R18
00c2a9 01de      	MOVW R26,R28
00c2aa 59ad      	SUBI R26,LOW(-(99))
00c2ab 4fbf      	SBCI R27,HIGH(-(99))
00c2ac 940e e1cb 	CALL __LSLW2
00c2ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 54 TIMES, CODE SIZE REDUCTION:103 WORDS
                 SUBOPT_0x1B:
00c2af 0fae      	ADD  R26,R30
00c2b0 1fbf      	ADC  R27,R31
00c2b1 940e e2f4 	CALL __GETD1P
00c2b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
00c2b4 01df      	MOVW R26,R30
00c2b5 01cb      	MOVW R24,R22
00c2b6 940e 41b4 	CALL _TIMER_checkTimerExceed
00c2b8 9730      	SBIW R30,0
00c2b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1D:
00c2ba 0fea      	ADD  R30,R26
00c2bb 1ffb      	ADC  R31,R27
00c2bc 93fa      	ST   -Y,R31
00c2bd 93ea      	ST   -Y,R30
00c2be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1E:
00c2bf 940e e2f0 	CALL __GETW1P
00c2c1 2766      	CLR  R22
00c2c2 2777      	CLR  R23
00c2c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
00c2c4 01df      	MOVW R26,R30
00c2c5 01cb      	MOVW R24,R22
00c2c6 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
00c2c8 5be6      	SUBI R30,LOW(-_sensor)
00c2c9 4efb      	SBCI R31,HIGH(-_sensor)
00c2ca 01df      	MOVW R26,R30
00c2cb 940e e2f4 	CALL __GETD1P
00c2cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0x21:
00c2ce 940e e324 	CALL __PUTPARD1
00c2d0 e088      	LDI  R24,8
00c2d1 940e 9e86 	CALL _printDebug
00c2d3 962c      	ADIW R28,12
00c2d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
00c2d5 940e 7880 	CALL _checkAlarm
                +
00c2d7 01de     +MOVW R26 , R28
00c2d8 58a7     +SUBI R26 , LOW ( - 121 )
00c2d9 4fbf     +SBCI R27 , HIGH ( - 121 )
00c2da 93ed     +ST X + , R30
00c2db 93fc     +ST X , R31
                 	__PUTW1SX 121
00c2dc 9730      	SBIW R30,0
00c2dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00c2de e2a6     +LDI R26 , 38
00c2df 9fa4     +MUL R26 , R20
00c2e0 01f0     +MOVW R30 , R0
00c2e1 9fa5     +MUL R26 , R21
00c2e2 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00c2e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
00c2e4 01de     +MOVW R26 , R28
00c2e5 58a7     +SUBI R26 , LOW ( - 121 )
00c2e6 4fbf     +SBCI R27 , HIGH ( - 121 )
00c2e7 93ed     +ST X + , R30
00c2e8 93fc     +ST X , R31
                 	__PUTW1SX 121
00c2e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
                +
00c2ea efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00c2eb efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00c2ec ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00c2ed ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00c2ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
00c2ef 93e0 1487 	STS  _muteAlarmExpired,R30
00c2f1 93f0 1488 	STS  _muteAlarmExpired+1,R31
00c2f3 9360 1489 	STS  _muteAlarmExpired+2,R22
00c2f5 9370 148a 	STS  _muteAlarmExpired+3,R23
00c2f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27:
00c2f8 93fa      	ST   -Y,R31
00c2f9 93ea      	ST   -Y,R30
                +
00c2fa e0aa     +LDI R26 , LOW ( 0xA )
00c2fb e0b0     +LDI R27 , HIGH ( 0xA )
00c2fc e080     +LDI R24 , BYTE3 ( 0xA )
00c2fd e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00c2fe 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
00c300 91a0 146b 	LDS  R26,_sdFreeSpace
00c302 91b0 146c 	LDS  R27,_sdFreeSpace+1
00c304 9180 146d 	LDS  R24,_sdFreeSpace+2
00c306 9190 146e 	LDS  R25,_sdFreeSpace+3
00c308 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x29:
00c309 27ff      	CLR  R31
00c30a 2766      	CLR  R22
00c30b 2777      	CLR  R23
00c30c 940e e324 	CALL __PUTPARD1
00c30e cf5c      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00c30f e7ac      	LDI  R26,LOW(_dinStatus)
00c310 e1b4      	LDI  R27,HIGH(_dinStatus)
00c311 0fa2      	ADD  R26,R18
00c312 1fb3      	ADC  R27,R19
00c313 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
00c314 e0f0      	LDI  R31,0
00c315 9730      	SBIW R30,0
00c316 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2C:
                +
00c317 e0a0     +LDI R26 , LOW ( 0x0 )
00c318 e0b0     +LDI R27 , HIGH ( 0x0 )
00c319 e080     +LDI R24 , BYTE3 ( 0x0 )
00c31a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00c31b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
00c31c 91a0 1483 	LDS  R26,_batteryVolt
00c31e 91b0 1484 	LDS  R27,_batteryVolt+1
00c320 9180 1485 	LDS  R24,_batteryVolt+2
00c322 9190 1486 	LDS  R25,_batteryVolt+3
00c324 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 52 TIMES, CODE SIZE REDUCTION:507 WORDS
                 SUBOPT_0x2E:
00c325 b1e6      	IN   R30,0x6
00c326 7ce0      	ANDI R30,LOW(0xC0)
00c327 e0f0      	LDI  R31,0
00c328 940e e1d4 	CALL __ASRW2
00c32a 940e e1d0 	CALL __ASRW4
00c32c 95e0      	COM  R30
00c32d 95f0      	COM  R31
00c32e 70e3      	ANDI R30,LOW(0x3)
00c32f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00c330 91e0 0106 	LDS  R30,262
00c332 71e0      	ANDI R30,LOW(0x10)
00c333 e0f0      	LDI  R31,0
00c334 940e e1d0 	CALL __ASRW4
00c336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00c337 940e e324 	CALL __PUTPARD1
00c339 91e0 10f4 	LDS  R30,_hwCalId
00c33b 91f0 10f5 	LDS  R31,_hwCalId+1
00c33d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x31:
00c33e e3a6      	LDI  R26,LOW(_adcData)
00c33f e1b4      	LDI  R27,HIGH(_adcData)
00c340 940e e1cb 	CALL __LSLW2
00c342 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x32:
00c343 e8a9      	LDI  R26,LOW(_eep_vref_val)
00c344 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00c345 940e e348 	CALL __EEPROMRDD
00c347 01df      	MOVW R26,R30
00c348 01cb      	MOVW R24,R22
                +
00c349 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00c34a ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00c34b e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00c34c e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00c34d 940e e113 	CALL __DIVF21
00c34f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
                +
00c350 e0a0     +LDI R26 , LOW ( 0x42C80000 )
00c351 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00c352 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
00c353 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00c354 940e e0c5 	CALL __MULF12
00c356 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 84 TIMES, CODE SIZE REDUCTION:163 WORDS
                 SUBOPT_0x34:
00c357 2766      	CLR  R22
00c358 2777      	CLR  R23
00c359 940e e324 	CALL __PUTPARD1
00c35b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
00c35c eca8      	LDI  R26,LOW(200)
00c35d e0b0      	LDI  R27,0
00c35e 940c dfc5 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00c360 e080      	LDI  R24,0
00c361 940e 9e86 	CALL _printDebug
00c363 9624      	ADIW R28,4
00c364 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x37:
00c365 940e e399 	CALL __SAVELOCR6
                +
00c367 e000     +LDI R16 , LOW ( 0 )
00c368 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c369 ce77      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00c36a e1ad     +LDI R26 , 29
00c36b 9fa2     +MUL R26 , R18
00c36c 01f0     +MOVW R30 , R0
00c36d 9fa3     +MUL R26 , R19
00c36e 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00c36f 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00c370 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00c371 81e0      	LD   R30,Z
00c372 30e0      	CPI  R30,0
00c373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00c374 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00c376 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00c378 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00c37a 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00c37c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00c37d 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00c37e efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00c37f 07be     +CPC R27 , R30
00c380 efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00c381 078e     +CPC R24 , R30
00c382 efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00c383 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00c384 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00c385 93fa      	ST   -Y,R31
00c386 93ea      	ST   -Y,R30
                +
00c387 e0af     +LDI R26 , LOW ( 0xF )
00c388 e0b0     +LDI R27 , HIGH ( 0xF )
00c389 e080     +LDI R24 , BYTE3 ( 0xF )
00c38a e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00c38b 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00c38d 940e e324 	CALL __PUTPARD1
00c38f 91a0 1377 	LDS  R26,_baseCounter
00c391 91b0 1378 	LDS  R27,_baseCounter+1
00c393 9180 1379 	LDS  R24,_baseCounter+2
00c395 9190 137a 	LDS  R25,_baseCounter+3
00c397 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00c399 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00c39b 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00c39d 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00c39f 940e e186 	CALL __SUBD12
00c3a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00c3a2 01af      	MOVW R20,R30
                +
00c3a3 2b04     +OR R16 , R20
00c3a4 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00c3a5 2e04      	MOV  R0,R20
00c3a6 2a05      	OR   R0,R21
00c3a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00c3a8 940e 453c 	CALL _DS1672_read
                +
00c3aa 83ef     +STD Y + 7 , R30
00c3ab 87f8     +STD Y + 7 + 1 , R31
00c3ac 8769     +STD Y + 7 + 2 , R22
00c3ad 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00c3ae 81ee      	LDD  R30,Y+6
00c3af 30e0      	CPI  R30,0
00c3b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00c3b1 81ef     +LDD R30 , Y + 7
00c3b2 85f8     +LDD R31 , Y + 7 + 1
00c3b3 8569     +LDD R22 , Y + 7 + 2
00c3b4 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00c3b5 940e e324 	CALL __PUTPARD1
00c3b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00c3b8 93ea      	ST   -Y,R30
00c3b9 85ab      	LDD  R26,Y+11
00c3ba 940e 7818 	CALL _addEventQueue
00c3bc 01af      	MOVW R20,R30
00c3bd 2355      	TST  R21
00c3be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00c3bf e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00c3c0 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00c3c1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00c3c2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00c3c3 ce31      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00c3c4 933a      	ST   -Y,R19
00c3c5 932a      	ST   -Y,R18
00c3c6 01de      	MOVW R26,R28
00c3c7 9618      	ADIW R26,8
00c3c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00c3c9 01f9      	MOVW R30,R18
00c3ca 9631      	ADIW R30,1
00c3cb 940e e201 	CALL __CWD1
00c3cd 940e e324 	CALL __PUTPARD1
00c3cf ce9b      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00c3d0 940e e324 	CALL __PUTPARD1
00c3d2 cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00c3d3 01f9      	MOVW R30,R18
00c3d4 9631      	ADIW R30,1
00c3d5 940e e201 	CALL __CWD1
00c3d7 940e e324 	CALL __PUTPARD1
00c3d9 e084      	LDI  R24,4
00c3da 940e 8007 	CALL _printOLED
00c3dc 9628      	ADIW R28,8
00c3dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x46:
00c3de 940e e399 	CALL __SAVELOCR6
                +
00c3e0 e000     +LDI R16 , LOW ( 0 )
00c3e1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c3e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00c3e3 e0f0      	LDI  R31,0
00c3e4 31e0      	CPI  R30,LOW(0x10)
00c3e5 e0a0      	LDI  R26,HIGH(0x10)
00c3e6 07fa      	CPC  R31,R26
00c3e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00c3e8 e0ab      	LDI  R26,LOW(11)
00c3e9 e0b0      	LDI  R27,0
00c3ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00c3eb 940e e324 	CALL __PUTPARD1
00c3ed 01fa      	MOVW R30,R20
00c3ee 940e e201 	CALL __CWD1
00c3f0 940e e324 	CALL __PUTPARD1
00c3f2 ce78      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00c3f3 940e a6eb 	CALL _free
00c3f5 efef      	LDI  R30,LOW(65535)
00c3f6 efff      	LDI  R31,HIGH(65535)
00c3f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00c3f8 01fa      	MOVW R30,R20
                +
00c3f9 5f4f     +SUBI R20 , LOW ( - 1 )
00c3fa 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c3fb 0fe2      	ADD  R30,R18
00c3fc 1ff3      	ADC  R31,R19
00c3fd 01df      	MOVW R26,R30
00c3fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00c3ff 01fa      	MOVW R30,R20
                +
00c400 5f4f     +SUBI R20 , LOW ( - 1 )
00c401 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c402 0fe2      	ADD  R30,R18
00c403 1ff3      	ADC  R31,R19
00c404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00c405 93fa      	ST   -Y,R31
00c406 93ea      	ST   -Y,R30
00c407 e0a4      	LDI  R26,LOW(4)
00c408 e0b0      	LDI  R27,0
00c409 940c a70d 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00c40b 940e 453c 	CALL _DS1672_read
                +
00c40d 87e8     +STD Y + 8 , R30
00c40e 87f9     +STD Y + 8 + 1 , R31
00c40f 876a     +STD Y + 8 + 2 , R22
00c410 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00c411 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x4F:
                +
00c412 85e8     +LDD R30 , Y + 8
00c413 85f9     +LDD R31 , Y + 8 + 1
00c414 856a     +LDD R22 , Y + 8 + 2
00c415 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00c416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x50:
00c417 940e e324 	CALL __PUTPARD1
                +
00c419 85ee     +LDD R30 , Y + 14
00c41a 85ff     +LDD R31 , Y + 14 + 1
00c41b 8968     +LDD R22 , Y + 14 + 2
00c41c 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c41d 940e e324 	CALL __PUTPARD1
00c41f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x51:
                +
00c420 89ea     +LDD R30 , Y + 18
00c421 89fb     +LDD R31 , Y + 18 + 1
00c422 896c     +LDD R22 , Y + 18 + 2
00c423 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c424 940e e324 	CALL __PUTPARD1
00c426 e08c      	LDI  R24,12
00c427 940e 9e86 	CALL _printDebug
00c429 9660      	ADIW R28,16
00c42a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x52:
                +
00c42b 85aa     +LDD R26 , Y + 10
00c42c 85bb     +LDD R27 , Y + 10 + 1
00c42d 858c     +LDD R24 , Y + 10 + 2
00c42e 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00c42f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00c430 dffa      	RCALL SUBOPT_0x52
00c431 cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00c432 93ea      	ST   -Y,R30
                +
00c433 85eb     +LDD R30 , Y + 11
00c434 85fc     +LDD R31 , Y + 11 + 1
00c435 856d     +LDD R22 , Y + 11 + 2
00c436 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c437 940e e324 	CALL __PUTPARD1
00c439 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00c43a 85ad     +LDD R26 , Y + 13
00c43b 85be     +LDD R27 , Y + 13 + 1
00c43c 858f     +LDD R24 , Y + 13 + 2
00c43d 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00c43e 940c 5585 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x56:
00c440 01fe      	MOVW R30,R28
00c441 9636      	ADIW R30,6
00c442 93fa      	ST   -Y,R31
00c443 93ea      	ST   -Y,R30
00c444 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x57:
00c445 940e e324 	CALL __PUTPARD1
                +
00c447 85ea     +LDD R30 , Y + 10
00c448 85fb     +LDD R31 , Y + 10 + 1
00c449 856c     +LDD R22 , Y + 10 + 2
00c44a 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c44b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00c44c 2fe5      	MOV  R30,R21
00c44d 27ff      	CLR  R31
00c44e 2766      	CLR  R22
00c44f 2777      	CLR  R23
00c450 940e e324 	CALL __PUTPARD1
00c452 2fe4      	MOV  R30,R20
00c453 27ff      	CLR  R31
00c454 2766      	CLR  R22
00c455 2777      	CLR  R23
00c456 940e e324 	CALL __PUTPARD1
00c458 e08c      	LDI  R24,12
00c459 940e 9e86 	CALL _printDebug
00c45b 9660      	ADIW R28,16
00c45c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x59:
                +
00c45d 81ae     +LDD R26 , Y + 6
00c45e 81bf     +LDD R27 , Y + 6 + 1
00c45f 8588     +LDD R24 , Y + 6 + 2
00c460 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00c461 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00c462 01fe      	MOVW R30,R28
00c463 963c      	ADIW R30,12
00c464 93fa      	ST   -Y,R31
00c465 93ea      	ST   -Y,R30
00c466 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x5B:
00c467 940e e324 	CALL __PUTPARD1
00c469 ddd6      	RCALL SUBOPT_0xC
00c46a 940e e324 	CALL __PUTPARD1
00c46c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00c46d ddcd      	RCALL SUBOPT_0xB
00c46e cf0e      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00c46f 01fe      	MOVW R30,R28
00c470 9670      	ADIW R30,16
00c471 93fa      	ST   -Y,R31
00c472 93ea      	ST   -Y,R30
00c473 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00c474 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00c475 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00c476 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c478 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c47a 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c47c bf6c     +OUT EIND , R22
00c47d 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c47e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00c47f 940e e324 	CALL __PUTPARD1
00c481 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00c482 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00c483 ced3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x60:
                +
00c484 85ee     +LDD R30 , Y + 14
00c485 85ff     +LDD R31 , Y + 14 + 1
00c486 8968     +LDD R22 , Y + 14 + 2
00c487 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c488 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00c489 85ae     +LDD R26 , Y + 14
00c48a 85bf     +LDD R27 , Y + 14 + 1
00c48b 8988     +LDD R24 , Y + 14 + 2
00c48c 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00c48d 940c 8297 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00c48f 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c491 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c493 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c495 bf6c     +OUT EIND , R22
00c496 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c497 01af      	MOVW R20,R30
00c498 2355      	TST  R21
00c499 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00c49a 01fe      	MOVW R30,R28
00c49b 9637      	ADIW R30,7
00c49c 93fa      	ST   -Y,R31
00c49d 93ea      	ST   -Y,R30
00c49e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00c49f 85eb     +LDD R30 , Y + 11
00c4a0 85fc     +LDD R31 , Y + 11 + 1
00c4a1 856d     +LDD R22 , Y + 11 + 2
00c4a2 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c4a3 940e e324 	CALL __PUTPARD1
00c4a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 90 TIMES, CODE SIZE REDUCTION:264 WORDS
                 SUBOPT_0x65:
00c4a6 27ff      	CLR  R31
00c4a7 2766      	CLR  R22
00c4a8 2777      	CLR  R23
00c4a9 940e e324 	CALL __PUTPARD1
00c4ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x66:
00c4ac e08c      	LDI  R24,12
00c4ad 940e 9e86 	CALL _printDebug
00c4af 9660      	ADIW R28,16
00c4b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00c4b1 81af     +LDD R26 , Y + 7
00c4b2 85b8     +LDD R27 , Y + 7 + 1
00c4b3 8589     +LDD R24 , Y + 7 + 2
00c4b4 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00c4b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00c4b6 01fe      	MOVW R30,R28
00c4b7 963b      	ADIW R30,11
00c4b8 93fa      	ST   -Y,R31
00c4b9 93ea      	ST   -Y,R30
00c4ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00c4bb eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00c4bc e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00c4bd 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c4bf 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c4c1 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c4c3 bf6c     +OUT EIND , R22
00c4c4 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c4c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00c4c6 940e e324 	CALL __PUTPARD1
00c4c8 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00c4c9 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00c4ca ce8c      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00c4cb 85e9     +LDD R30 , Y + 9
00c4cc 85fa     +LDD R31 , Y + 9 + 1
00c4cd 856b     +LDD R22 , Y + 9 + 2
00c4ce 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00c4cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00c4d0 01fe      	MOVW R30,R28
00c4d1 9672      	ADIW R30,18
00c4d2 93fa      	ST   -Y,R31
00c4d3 93ea      	ST   -Y,R30
00c4d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00c4d5 df55      	RCALL SUBOPT_0x52
00c4d6 940e e389 	CALL __CPD02
00c4d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00c4d9 e0e0      	LDI  R30,LOW(0)
00c4da 93e0 1426 	STS  _logDataWait,R30
                +
00c4dc e0e0     +LDI R30 , LOW ( 0x0 )
00c4dd e0f0     +LDI R31 , HIGH ( 0x0 )
00c4de e060     +LDI R22 , BYTE3 ( 0x0 )
00c4df e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c4e0 93e0 1427+STS _logDataWait + ( 1 ) , R30
00c4e2 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00c4e4 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00c4e6 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00c4e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00c4e9 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00c4eb 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00c4ed 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00c4ef 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00c4f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00c4f2 01de      	MOVW R26,R28
00c4f3 9652      	ADIW R26,18
                +
00c4f4 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c4f6 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c4f8 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c4fa bf6c     +OUT EIND , R22
00c4fb 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c4fc 018f      	MOVW R16,R30
00c4fd 2311      	TST  R17
00c4fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00c4ff e0e0      	LDI  R30,LOW(0)
00c500 93e0 142b 	STS  _logEventWait,R30
                +
00c502 e0e0     +LDI R30 , LOW ( 0x0 )
00c503 e0f0     +LDI R31 , HIGH ( 0x0 )
00c504 e060     +LDI R22 , BYTE3 ( 0x0 )
00c505 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c506 93e0 142c+STS _logEventWait + ( 1 ) , R30
00c508 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00c50a 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00c50c 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00c50e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00c50f 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00c511 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00c513 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00c515 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00c517 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00c518 e0a2      	LDI  R26,LOW(2)
00c519 e0b0      	LDI  R27,0
00c51a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00c51b e6a4      	LDI  R26,LOW(100)
00c51c e0b0      	LDI  R27,0
00c51d 940c dfc5 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x75:
00c51f e0a1      	LDI  R26,LOW(1)
00c520 e0b0      	LDI  R27,0
00c521 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00c522 e0a3      	LDI  R26,LOW(3)
00c523 e0b0      	LDI  R27,0
00c524 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x77:
00c525 e0a4      	LDI  R26,LOW(4)
00c526 e0b0      	LDI  R27,0
00c527 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:99 WORDS
                 SUBOPT_0x78:
00c528 01df      	MOVW R26,R30
00c529 940e e2f4 	CALL __GETD1P
00c52b 940e e324 	CALL __PUTPARD1
00c52d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00c52e 93e0 0102 	STS  258,R30
00c530 ce2b      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00c531 e3a2      	LDI  R26,LOW(50)
00c532 e0b0      	LDI  R27,0
00c533 940c dfc5 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00c535 920a      	ST   -Y,R0
00c536 921a      	ST   -Y,R1
00c537 92fa      	ST   -Y,R15
00c538 936a      	ST   -Y,R22
00c539 937a      	ST   -Y,R23
00c53a 938a      	ST   -Y,R24
00c53b 939a      	ST   -Y,R25
00c53c 93aa      	ST   -Y,R26
00c53d 93ba      	ST   -Y,R27
00c53e 93ea      	ST   -Y,R30
00c53f 93fa      	ST   -Y,R31
00c540 b7eb      	IN   R30,RAMPZ
00c541 93ea      	ST   -Y,R30
00c542 b7ec      	IN   R30,EIND
00c543 93ea      	ST   -Y,R30
00c544 b7ef      	IN   R30,SREG
00c545 93ea      	ST   -Y,R30
00c546 931a      	ST   -Y,R17
00c547 930a      	ST   -Y,R16
00c548 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00c549 91ed      	LD   R30,X+
00c54a 91fd      	LD   R31,X+
00c54b 9631      	ADIW R30,1
00c54c 93fe      	ST   -X,R31
00c54d 93ee      	ST   -X,R30
00c54e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00c54f 91a0 10ee 	LDS  R26,_configLen
00c551 91b0 10ef 	LDS  R27,_configLen+1
00c553 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00c554 e0e0      	LDI  R30,LOW(0)
00c555 93e0 10ee 	STS  _configLen,R30
00c557 93e0 10ef 	STS  _configLen+1,R30
00c559 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x7F:
00c55a 93ba      	ST   -Y,R27
00c55b 93aa      	ST   -Y,R26
00c55c 940e e39b 	CALL __SAVELOCR4
00c55e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00c55f 85e8      	LDD  R30,Y+8
00c560 85f9      	LDD  R31,Y+8+1
00c561 9631      	ADIW R30,1
00c562 87e8      	STD  Y+8,R30
00c563 87f9      	STD  Y+8+1,R31
00c564 9731      	SBIW R30,1
00c565 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x81:
00c566 93ba      	ST   -Y,R27
00c567 93aa      	ST   -Y,R26
00c568 931a      	ST   -Y,R17
00c569 930a      	ST   -Y,R16
00c56a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00c56b 81ea      	LDD  R30,Y+2
00c56c 81fb      	LDD  R31,Y+2+1
00c56d 170e      	CP   R16,R30
00c56e 071f      	CPC  R17,R31
00c56f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00c570 01f8      	MOVW R30,R16
00c571 81ac      	LDD  R26,Y+4
00c572 81bd      	LDD  R27,Y+4+1
00c573 0fae      	ADD  R26,R30
00c574 1fbf      	ADC  R27,R31
00c575 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00c576 81a9      	LDD  R26,Y+1
00c577 81ba      	LDD  R27,Y+1+1
00c578 27ee      	CLR  R30
00c579 0fa1      	ADD  R26,R17
00c57a 1fbe      	ADC  R27,R30
00c57b 91ec      	LD   R30,X
00c57c 30e0      	CPI  R30,0
00c57d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00c57e 81a9      	LDD  R26,Y+1
00c57f 81ba      	LDD  R27,Y+1+1
00c580 27ee      	CLR  R30
00c581 0fa1      	ADD  R26,R17
00c582 1fbe      	ADC  R27,R30
00c583 91ac      	LD   R26,X
00c584 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00c585 940e e329 	CALL __PUTPARD2
00c587 940e e310 	CALL __GETD1S0
00c589 940e e37d 	CALL __CPD10
00c58b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x87:
00c58c 940e e310 	CALL __GETD1S0
00c58e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00c58f 91a0 1377 	LDS  R26,_baseCounter
00c591 91b0 1378 	LDS  R27,_baseCounter+1
00c593 9180 1379 	LDS  R24,_baseCounter+2
00c595 9190 137a 	LDS  R25,_baseCounter+3
00c597 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x89:
                +
00c598 81ec     +LDD R30 , Y + 4
00c599 81fd     +LDD R31 , Y + 4 + 1
00c59a 816e     +LDD R22 , Y + 4 + 2
00c59b 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00c59c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00c59d 940e e17c 	CALL __ADDD12
00c59f 940e e31a 	CALL __PUTD1S0
00c5a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00c5a2 91e0 1377 	LDS  R30,_baseCounter
00c5a4 91f0 1378 	LDS  R31,_baseCounter+1
00c5a6 9160 1379 	LDS  R22,_baseCounter+2
00c5a8 9170 137a 	LDS  R23,_baseCounter+3
00c5aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8C:
00c5ab 940e e315 	CALL __GETD2S0
00c5ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x8D:
00c5ae 940e e324 	CALL __PUTPARD1
                +
00c5b0 85ec     +LDD R30 , Y + 12
00c5b1 85fd     +LDD R31 , Y + 12 + 1
00c5b2 856e     +LDD R22 , Y + 12 + 2
00c5b3 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c5b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8E:
00c5b5 940e e324 	CALL __PUTPARD1
00c5b7 cef4      	RJMP SUBOPT_0x66
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8F:
                +
00c5b8 e0e0     +LDI R30 , LOW ( 0x0 )
00c5b9 e0f0     +LDI R31 , HIGH ( 0x0 )
00c5ba e060     +LDI R22 , BYTE3 ( 0x0 )
00c5bb e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c5bc 940e e2ff 	CALL __PUTDP1
00c5be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x90:
00c5bf 920a      	ST   -Y,R0
00c5c0 921a      	ST   -Y,R1
00c5c1 92fa      	ST   -Y,R15
00c5c2 936a      	ST   -Y,R22
00c5c3 937a      	ST   -Y,R23
00c5c4 938a      	ST   -Y,R24
00c5c5 939a      	ST   -Y,R25
00c5c6 93aa      	ST   -Y,R26
00c5c7 93ba      	ST   -Y,R27
00c5c8 93ea      	ST   -Y,R30
00c5c9 93fa      	ST   -Y,R31
00c5ca b7eb      	IN   R30,RAMPZ
00c5cb 93ea      	ST   -Y,R30
00c5cc b7ec      	IN   R30,EIND
00c5cd 93ea      	ST   -Y,R30
00c5ce b7ef      	IN   R30,SREG
00c5cf 93ea      	ST   -Y,R30
00c5d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00c5d1 efee      	LDI  R30,LOW(254)
00c5d2 93e0 0085 	STS  133,R30
00c5d4 e7e9      	LDI  R30,LOW(121)
00c5d5 93e0 0084 	STS  132,R30
00c5d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x92:
00c5d8 e8e5      	LDI  R30,LOW(133)
00c5d9 93e0 0095 	STS  149,R30
00c5db eeed      	LDI  R30,LOW(237)
00c5dc 93e0 0094 	STS  148,R30
00c5de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x93:
00c5df 940e e2fa 	CALL __GETD1P_INC
                +
00c5e1 5fef     +SUBI R30 , LOW ( - 1 )
00c5e2 4fff     +SBCI R31 , HIGH ( - 1 )
00c5e3 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c5e4 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c5e5 940e e304 	CALL __PUTDP1_DEC
00c5e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x94:
00c5e8 e8e5      	LDI  R30,LOW(133)
00c5e9 93e0 00a5 	STS  165,R30
00c5eb eeed      	LDI  R30,LOW(237)
00c5ec 93e0 00a4 	STS  164,R30
00c5ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x95:
00c5ef 93ba      	ST   -Y,R27
00c5f0 93aa      	ST   -Y,R26
00c5f1 81e8      	LD   R30,Y
00c5f2 81f9      	LDD  R31,Y+1
00c5f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x96:
00c5f4 b1e6      	IN   R30,0x6
00c5f5 7ce0      	ANDI R30,LOW(0xC0)
00c5f6 e0f0      	LDI  R31,0
00c5f7 940e e1d4 	CALL __ASRW2
00c5f9 940e e1d0 	CALL __ASRW4
00c5fb 95e0      	COM  R30
00c5fc 95f0      	COM  R31
00c5fd 70e3      	ANDI R30,LOW(0x3)
00c5fe 70f0      	ANDI R31,HIGH(0x3)
00c5ff 9731      	SBIW R30,1
00c600 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x97:
00c601 b1e3      	IN   R30,0x3
00c602 71e0      	ANDI R30,LOW(0x10)
00c603 e0f0      	LDI  R31,0
00c604 940e e1d0 	CALL __ASRW4
00c606 9730      	SBIW R30,0
00c607 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x98:
00c608 e0a5      	LDI  R26,LOW(5)
00c609 e0b0      	LDI  R27,0
00c60a 940c dfc5 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x99:
00c60c b1e3      	IN   R30,0x3
00c60d 72e0      	ANDI R30,LOW(0x20)
00c60e e0f0      	LDI  R31,0
00c60f 95f5      	ASR  R31
00c610 95e7      	ROR  R30
00c611 940e e1d0 	CALL __ASRW4
00c613 9730      	SBIW R30,0
00c614 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
00c615 b1e3      	IN   R30,0x3
00c616 74e0      	ANDI R30,LOW(0x40)
00c617 e0f0      	LDI  R31,0
00c618 940e e1d4 	CALL __ASRW2
00c61a 940e e1d0 	CALL __ASRW4
00c61c 9730      	SBIW R30,0
00c61d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9B:
00c61e b1e3      	IN   R30,0x3
00c61f 78e0      	ANDI R30,LOW(0x80)
00c620 e0f0      	LDI  R31,0
00c621 940e e1d2 	CALL __ASRW3
00c623 940e e1d0 	CALL __ASRW4
00c625 9730      	SBIW R30,0
00c626 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9C:
00c627 e0f0      	LDI  R31,0
00c628 70f0      	ANDI R31,HIGH(0xFF)
00c629 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9D:
00c62a 91a0 14e8 	LDS  R26,_adcBatt
00c62c 91b0 14e9 	LDS  R27,_adcBatt+1
00c62e 9180 14ea 	LDS  R24,_adcBatt+2
00c630 9190 14eb 	LDS  R25,_adcBatt+3
00c632 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x9E:
00c633 2766      	CLR  R22
00c634 2777      	CLR  R23
00c635 940e e03b 	CALL __CDF1
00c637 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9F:
                +
00c638 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00c639 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00c63a ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00c63b e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00c63c 940e e0c5 	CALL __MULF12
00c63e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xA0:
00c63f 940e e075 	CALL __ADDF12
00c641 01df      	MOVW R26,R30
00c642 01cb      	MOVW R24,R22
                +
00c643 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c644 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c645 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c646 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c647 940e e113 	CALL __DIVF21
00c649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA1:
00c64a 940e e31a 	CALL __PUTD1S0
00c64c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA2:
00c64d 91e0 0108 	LDS  R30,264
00c64f 7fe1      	ANDI R30,LOW(0xF1)
00c650 93e0 0108 	STS  264,R30
00c652 e0a8      	LDI  R26,LOW(264)
00c653 e0b1      	LDI  R27,HIGH(264)
00c654 2e0a      	MOV  R0,R26
00c655 91ac      	LD   R26,X
00c656 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA3:
00c657 0fee      	LSL  R30
00c658 2bea      	OR   R30,R26
00c659 2da0      	MOV  R26,R0
00c65a 93ec      	ST   X,R30
00c65b e1a4      	LDI  R26,LOW(20)
00c65c e0b0      	LDI  R27,0
00c65d 940c dfc5 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA4:
00c65f dfd3      	RCALL SUBOPT_0x9E
00c660 940e e2ff 	CALL __PUTDP1
00c662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA5:
00c663 940e df79 	CALL _i2c_start
00c665 eda0      	LDI  R26,LOW(208)
00c666 940c dfad 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA6:
00c668 940e dfad 	CALL _i2c_write
00c66a 940c df88 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA7:
00c66c e0aa      	LDI  R26,LOW(10)
00c66d e0b0      	LDI  R27,0
00c66e 940e dfc5 	CALL _delay_ms
00c670 e0e0      	LDI  R30,LOW(0)
00c671 e0f0      	LDI  R31,HIGH(0)
00c672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 33 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xA8:
                +
00c673 83ec     +STD Y + 4 , R30
00c674 83fd     +STD Y + 4 + 1 , R31
00c675 836e     +STD Y + 4 + 2 , R22
00c676 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00c677 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0xA9:
                +
00c678 81ac     +LDD R26 , Y + 4
00c679 81bd     +LDD R27 , Y + 4 + 1
00c67a 818e     +LDD R24 , Y + 4 + 2
00c67b 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00c67c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAA:
00c67d e0e8      	LDI  R30,LOW(8)
00c67e 940e e1af 	CALL __LSLD12
00c680 cff2      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAB:
00c681 e0f0      	LDI  R31,0
00c682 dff5      	RCALL SUBOPT_0xA9
00c683 940e e201 	CALL __CWD1
00c685 940e e17c 	CALL __ADDD12
00c687 dfeb      	RCALL SUBOPT_0xA8
00c688 dfef      	RCALL SUBOPT_0xA9
00c689 cff3      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAC:
00c68a 2fe1      	MOV  R30,R17
00c68b e0f0      	LDI  R31,0
00c68c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAD:
00c68d 940e e201 	CALL __CWD1
00c68f 940e e17c 	CALL __ADDD12
00c691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAE:
00c692 dfe0      	RCALL SUBOPT_0xA8
00c693 cf04      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAF:
                +
00c694 e3ec     +LDI R30 , LOW ( 0x3C )
00c695 e0f0     +LDI R31 , HIGH ( 0x3C )
00c696 e060     +LDI R22 , BYTE3 ( 0x3C )
00c697 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00c698 940e e278 	CALL __DIVD21U
00c69a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB0:
                +
00c69b 83ee     +STD Y + 6 , R30
00c69c 83ff     +STD Y + 6 + 1 , R31
00c69d 8768     +STD Y + 6 + 2 , R22
00c69e 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c69f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB1:
                +
00c6a0 e3ac     +LDI R26 , LOW ( 0x3C )
00c6a1 e0b0     +LDI R27 , HIGH ( 0x3C )
00c6a2 e080     +LDI R24 , BYTE3 ( 0x3C )
00c6a3 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c6a4 940e e222 	CALL __MULD12U
00c6a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xB2:
                +
00c6a7 83ea     +STD Y + 2 , R30
00c6a8 83fb     +STD Y + 2 + 1 , R31
00c6a9 836c     +STD Y + 2 + 2 , R22
00c6aa 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00c6ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0xB3:
                +
00c6ac 81ea     +LDD R30 , Y + 2
00c6ad 81fb     +LDD R31 , Y + 2 + 1
00c6ae 816c     +LDD R22 , Y + 2 + 2
00c6af 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00c6b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0xB4:
                +
00c6b1 81aa     +LDD R26 , Y + 2
00c6b2 81bb     +LDD R27 , Y + 2 + 1
00c6b3 818c     +LDD R24 , Y + 2 + 2
00c6b4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00c6b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0xB5:
                +
00c6b6 81ee     +LDD R30 , Y + 6
00c6b7 81ff     +LDD R31 , Y + 6 + 1
00c6b8 8568     +LDD R22 , Y + 6 + 2
00c6b9 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00c6ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB6:
                +
00c6bb 83ee     +STD Y + 6 , R30
00c6bc 83ff     +STD Y + 6 + 1 , R31
00c6bd 8768     +STD Y + 6 + 2 , R22
00c6be 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c6bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB7:
00c6c0 dd9c      	RCALL SUBOPT_0x59
                +
00c6c1 ebe5     +LDI R30 , LOW ( 0x5B5 )
00c6c2 e0f5     +LDI R31 , HIGH ( 0x5B5 )
00c6c3 e060     +LDI R22 , BYTE3 ( 0x5B5 )
00c6c4 e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00c6c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB8:
                +
00c6c6 8fee     +STD Y + 30 , R30
00c6c7 8fff     +STD Y + 30 + 1 , R31
00c6c8 a368     +STD Y + 30 + 2 , R22
00c6c9 a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00c6ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB9:
                +
00c6cb 8daa     +LDD R26 , Y + 26
00c6cc 8dbb     +LDD R27 , Y + 26 + 1
00c6cd 8d8c     +LDD R24 , Y + 26 + 2
00c6ce 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00c6cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBA:
                +
00c6d0 33ac     +CPI R26 , LOW ( 0x3C )
00c6d1 e0e0     +LDI R30 , HIGH ( 0x3C )
00c6d2 07be     +CPC R27 , R30
00c6d3 e0e0     +LDI R30 , BYTE3 ( 0x3C )
00c6d4 078e     +CPC R24 , R30
00c6d5 e0e0     +LDI R30 , BYTE4 ( 0x3C )
00c6d6 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00c6d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xBB:
                +
00c6d8 8dee     +LDD R30 , Y + 30
00c6d9 8dff     +LDD R31 , Y + 30 + 1
00c6da a168     +LDD R22 , Y + 30 + 2
00c6db a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00c6dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBC:
                +
00c6dd 5fef     +SUBI R30 , LOW ( - 1 )
00c6de 4fff     +SBCI R31 , HIGH ( - 1 )
00c6df 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c6e0 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c6e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBD:
                +
00c6e2 8dae     +LDD R26 , Y + 30
00c6e3 8dbf     +LDD R27 , Y + 30 + 1
00c6e4 a188     +LDD R24 , Y + 30 + 2
00c6e5 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00c6e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBE:
                +
00c6e7 a1ee     +LDD R30 , Y + 38
00c6e8 a1ff     +LDD R31 , Y + 38 + 1
00c6e9 a568     +LDD R22 , Y + 38 + 2
00c6ea a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00c6eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBF:
                +
00c6ec e6ad     +LDI R26 , LOW ( 0x16D )
00c6ed e0b1     +LDI R27 , HIGH ( 0x16D )
00c6ee e080     +LDI R24 , BYTE3 ( 0x16D )
00c6ef e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00c6f0 940e e222 	CALL __MULD12U
00c6f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC0:
00c6f3 940e e33b 	CALL __SWAPD12
00c6f5 940e e186 	CALL __SUBD12
00c6f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
00c6f8 8bee     +STD Y + 22 , R30
00c6f9 8bff     +STD Y + 22 + 1 , R31
00c6fa 8f68     +STD Y + 22 + 2 , R22
00c6fb 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00c6fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC2:
                +
00c6fd 89ee     +LDD R30 , Y + 22
00c6fe 89ff     +LDD R31 , Y + 22 + 1
00c6ff 8d68     +LDD R22 , Y + 22 + 2
00c700 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00c701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC3:
                +
00c702 a1ea     +LDD R30 , Y + 34
00c703 a1fb     +LDD R31 , Y + 34 + 1
00c704 a16c     +LDD R22 , Y + 34 + 2
00c705 a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00c706 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC4:
                +
00c707 30e1     +CPI R30 , LOW ( 0x1 )
00c708 e0a0     +LDI R26 , HIGH ( 0x1 )
00c709 07fa     +CPC R31 , R26
00c70a e0a0     +LDI R26 , BYTE3 ( 0x1 )
00c70b 076a     +CPC R22 , R26
00c70c e0a0     +LDI R26 , BYTE4 ( 0x1 )
00c70d 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00c70e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC5:
                +
00c70f 30e2     +CPI R30 , LOW ( 0x2 )
00c710 e0a0     +LDI R26 , HIGH ( 0x2 )
00c711 07fa     +CPC R31 , R26
00c712 e0a0     +LDI R26 , BYTE3 ( 0x2 )
00c713 076a     +CPC R22 , R26
00c714 e0a0     +LDI R26 , BYTE4 ( 0x2 )
00c715 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00c716 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00c717 30e3     +CPI R30 , LOW ( 0x3 )
00c718 e0a0     +LDI R26 , HIGH ( 0x3 )
00c719 07fa     +CPC R31 , R26
00c71a e0a0     +LDI R26 , BYTE3 ( 0x3 )
00c71b 076a     +CPC R22 , R26
00c71c e0a0     +LDI R26 , BYTE4 ( 0x3 )
00c71d 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00c71e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00c71f 30e4     +CPI R30 , LOW ( 0x4 )
00c720 e0a0     +LDI R26 , HIGH ( 0x4 )
00c721 07fa     +CPC R31 , R26
00c722 e0a0     +LDI R26 , BYTE3 ( 0x4 )
00c723 076a     +CPC R22 , R26
00c724 e0a0     +LDI R26 , BYTE4 ( 0x4 )
00c725 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00c726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00c727 30e5     +CPI R30 , LOW ( 0x5 )
00c728 e0a0     +LDI R26 , HIGH ( 0x5 )
00c729 07fa     +CPC R31 , R26
00c72a e0a0     +LDI R26 , BYTE3 ( 0x5 )
00c72b 076a     +CPC R22 , R26
00c72c e0a0     +LDI R26 , BYTE4 ( 0x5 )
00c72d 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00c72e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00c72f 30e6     +CPI R30 , LOW ( 0x6 )
00c730 e0a0     +LDI R26 , HIGH ( 0x6 )
00c731 07fa     +CPC R31 , R26
00c732 e0a0     +LDI R26 , BYTE3 ( 0x6 )
00c733 076a     +CPC R22 , R26
00c734 e0a0     +LDI R26 , BYTE4 ( 0x6 )
00c735 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00c736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00c737 30e7     +CPI R30 , LOW ( 0x7 )
00c738 e0a0     +LDI R26 , HIGH ( 0x7 )
00c739 07fa     +CPC R31 , R26
00c73a e0a0     +LDI R26 , BYTE3 ( 0x7 )
00c73b 076a     +CPC R22 , R26
00c73c e0a0     +LDI R26 , BYTE4 ( 0x7 )
00c73d 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00c73e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00c73f 30e8     +CPI R30 , LOW ( 0x8 )
00c740 e0a0     +LDI R26 , HIGH ( 0x8 )
00c741 07fa     +CPC R31 , R26
00c742 e0a0     +LDI R26 , BYTE3 ( 0x8 )
00c743 076a     +CPC R22 , R26
00c744 e0a0     +LDI R26 , BYTE4 ( 0x8 )
00c745 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00c746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00c747 30e9     +CPI R30 , LOW ( 0x9 )
00c748 e0a0     +LDI R26 , HIGH ( 0x9 )
00c749 07fa     +CPC R31 , R26
00c74a e0a0     +LDI R26 , BYTE3 ( 0x9 )
00c74b 076a     +CPC R22 , R26
00c74c e0a0     +LDI R26 , BYTE4 ( 0x9 )
00c74d 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00c74e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00c74f 30ea     +CPI R30 , LOW ( 0xA )
00c750 e0a0     +LDI R26 , HIGH ( 0xA )
00c751 07fa     +CPC R31 , R26
00c752 e0a0     +LDI R26 , BYTE3 ( 0xA )
00c753 076a     +CPC R22 , R26
00c754 e0a0     +LDI R26 , BYTE4 ( 0xA )
00c755 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00c756 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00c757 30eb     +CPI R30 , LOW ( 0xB )
00c758 e0a0     +LDI R26 , HIGH ( 0xB )
00c759 07fa     +CPC R31 , R26
00c75a e0a0     +LDI R26 , BYTE3 ( 0xB )
00c75b 076a     +CPC R22 , R26
00c75c e0a0     +LDI R26 , BYTE4 ( 0xB )
00c75d 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00c75e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00c75f 30ec     +CPI R30 , LOW ( 0xC )
00c760 e0a0     +LDI R26 , HIGH ( 0xC )
00c761 07fa     +CPC R31 , R26
00c762 e0a0     +LDI R26 , BYTE3 ( 0xC )
00c763 076a     +CPC R22 , R26
00c764 e0a0     +LDI R26 , BYTE4 ( 0xC )
00c765 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00c766 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD0:
                +
00c767 30a3     +CPI R26 , LOW ( 0x3 )
00c768 e0e0     +LDI R30 , HIGH ( 0x3 )
00c769 07be     +CPC R27 , R30
00c76a e0e0     +LDI R30 , BYTE3 ( 0x3 )
00c76b 078e     +CPC R24 , R30
00c76c e0e0     +LDI R30 , BYTE4 ( 0x3 )
00c76d 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00c76e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD1:
                +
00c76f 8dea     +LDD R30 , Y + 26
00c770 8dfb     +LDD R31 , Y + 26 + 1
00c771 8d6c     +LDD R22 , Y + 26 + 2
00c772 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00c773 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD2:
                +
00c774 89ae     +LDD R26 , Y + 22
00c775 89bf     +LDD R27 , Y + 22 + 1
00c776 8d88     +LDD R24 , Y + 22 + 2
00c777 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00c778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD3:
                +
00c779 5fef     +SUBI R30 , LOW ( - 1 )
00c77a 4fff     +SBCI R31 , HIGH ( - 1 )
00c77b 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c77c 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00c77d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0xD4:
                +
00c77e 89ea     +LDD R30 , Y + 18
00c77f 89fb     +LDD R31 , Y + 18 + 1
00c780 896c     +LDD R22 , Y + 18 + 2
00c781 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c782 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD5:
                +
00c783 85ea     +LDD R30 , Y + 10
00c784 85fb     +LDD R31 , Y + 10 + 1
00c785 856c     +LDD R22 , Y + 10 + 2
00c786 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c787 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD6:
00c788 e0e0      	LDI  R30,LOW(0)
00c789 e0f0      	LDI  R31,HIGH(0)
00c78a 8119      	LDD  R17,Y+1
00c78b 8108      	LDD  R16,Y+0
00c78c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD7:
00c78d de1d      	RCALL SUBOPT_0x8C
00c78e ce0e      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xD8:
                +
00c78f 85a8     +LDD R26 , Y + 8
00c790 85b9     +LDD R27 , Y + 8 + 1
00c791 858a     +LDD R24 , Y + 8 + 2
00c792 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00c793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0xD9:
                +
00c794 85ec     +LDD R30 , Y + 12
00c795 85fd     +LDD R31 , Y + 12 + 1
00c796 856e     +LDD R22 , Y + 12 + 2
00c797 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c798 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDA:
                +
00c799 50e1     +SUBI R30 , LOW ( 1 )
00c79a 40f0     +SBCI R31 , HIGH ( 1 )
00c79b 4060     +SBCI R22 , BYTE3 ( 1 )
00c79c 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00c79d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDB:
00c79e daa1      	RCALL SUBOPT_0xC
                +
00c79f e0a8     +LDI R26 , LOW ( 0x708 )
00c7a0 e0b7     +LDI R27 , HIGH ( 0x708 )
00c7a1 e080     +LDI R24 , BYTE3 ( 0x708 )
00c7a2 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00c7a3 940e e222 	CALL __MULD12U
00c7a5 cfe7      	RJMP SUBOPT_0xD7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xDC:
                +
00c7a6 89ec     +LDD R30 , Y + 20
00c7a7 89fd     +LDD R31 , Y + 20 + 1
00c7a8 896e     +LDD R22 , Y + 20 + 2
00c7a9 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00c7aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDD:
                +
00c7ab 8de8     +LDD R30 , Y + 24
00c7ac 8df9     +LDD R31 , Y + 24 + 1
00c7ad 8d6a     +LDD R22 , Y + 24 + 2
00c7ae 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00c7af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDE:
00c7b0 dfe3      	RCALL SUBOPT_0xD9
00c7b1 dfdd      	RCALL SUBOPT_0xD8
00c7b2 940e e38f 	CALL __CPD12
00c7b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDF:
00c7b5 da85      	RCALL SUBOPT_0xB
00c7b6 dc5b      	RCALL SUBOPT_0x4F
00c7b7 940e e186 	CALL __SUBD12
00c7b9 ceb9      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE0:
00c7ba dc57      	RCALL SUBOPT_0x4F
00c7bb da7f      	RCALL SUBOPT_0xB
00c7bc 940e e38f 	CALL __CPD12
00c7be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE1:
00c7bf dfcf      	RCALL SUBOPT_0xD8
00c7c0 dfd3      	RCALL SUBOPT_0xD9
00c7c1 940e e186 	CALL __SUBD12
00c7c3 ceaf      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE2:
00c7c4 deb3      	RCALL SUBOPT_0xA9
                +
00c7c5 30aa     +CPI R26 , LOW ( 0xA )
00c7c6 e0e0     +LDI R30 , HIGH ( 0xA )
00c7c7 07be     +CPC R27 , R30
00c7c8 e0e0     +LDI R30 , BYTE3 ( 0xA )
00c7c9 078e     +CPC R24 , R30
00c7ca e0e0     +LDI R30 , BYTE4 ( 0xA )
00c7cb 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00c7cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE3:
                +
00c7cd e1e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00c7ce e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00c7cf e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00c7d0 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00c7d1 cddc      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE4:
00c7d2 940e e324 	CALL __PUTPARD1
00c7d4 dfd1      	RCALL SUBOPT_0xDC
00c7d5 cc91      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE5:
00c7d6 85ec      	LDD  R30,Y+12
00c7d7 2f1e      	MOV  R17,R30
00c7d8 da62      	RCALL SUBOPT_0xB
00c7d9 e0e8      	LDI  R30,LOW(8)
00c7da 940e e1bb 	CALL __LSRD12
00c7dc 2f0e      	MOV  R16,R30
00c7dd dfb6      	RCALL SUBOPT_0xD9
00c7de 940e e1f1 	CALL __LSRD16
00c7e0 2f3e      	MOV  R19,R30
00c7e1 da59      	RCALL SUBOPT_0xB
00c7e2 e1e8      	LDI  R30,LOW(24)
00c7e3 940e e1bb 	CALL __LSRD12
00c7e5 2f2e      	MOV  R18,R30
00c7e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE6:
00c7e7 e0a0      	LDI  R26,LOW(0)
00c7e8 940e dfad 	CALL _i2c_write
00c7ea 2fa1      	MOV  R26,R17
00c7eb 940e dfad 	CALL _i2c_write
00c7ed 2fa0      	MOV  R26,R16
00c7ee 940e dfad 	CALL _i2c_write
00c7f0 2fa3      	MOV  R26,R19
00c7f1 940e dfad 	CALL _i2c_write
00c7f3 2fa2      	MOV  R26,R18
00c7f4 ce73      	RJMP SUBOPT_0xA6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE7:
00c7f5 93ba      	ST   -Y,R27
00c7f6 93aa      	ST   -Y,R26
00c7f7 972c      	SBIW R28,12
00c7f8 940e e39b 	CALL __SAVELOCR4
00c7fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xE8:
00c7fb 940e e324 	CALL __PUTPARD1
00c7fd 89ec      	LDD  R30,Y+20
00c7fe 89fd      	LDD  R31,Y+20+1
00c7ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0xE9:
00c800 940e e201 	CALL __CWD1
00c802 940e e324 	CALL __PUTPARD1
00c804 ca66      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xEA:
                +
00c805 87ec     +STD Y + 12 , R30
00c806 87fd     +STD Y + 12 + 1 , R31
00c807 876e     +STD Y + 12 + 2 , R22
00c808 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c809 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEB:
00c80a e3ac      	LDI  R26,LOW(60)
00c80b e0b0      	LDI  R27,HIGH(60)
00c80c 940e e248 	CALL __MULW12
00c80e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xEC:
00c80f dff5      	RCALL SUBOPT_0xEA
00c810 cf83      	RJMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xED:
00c811 93e0 1430 	STS  _raw_rtc,R30
00c813 93f0 1431 	STS  _raw_rtc+1,R31
00c815 9360 1432 	STS  _raw_rtc+2,R22
00c817 9370 1433 	STS  _raw_rtc+3,R23
00c819 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEE:
00c81a 93ba      	ST   -Y,R27
00c81b 93aa      	ST   -Y,R26
00c81c 9724      	SBIW R28,4
00c81d 931a      	ST   -Y,R17
00c81e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEF:
00c81f de87      	RCALL SUBOPT_0xB2
00c820 ce90      	RJMP SUBOPT_0xB4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF0:
00c821 de85      	RCALL SUBOPT_0xB2
00c822 ce89      	RJMP SUBOPT_0xB3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF1:
00c823 940e e324 	CALL __PUTPARD1
00c825 8dec      	LDD  R30,Y+28
00c826 8dfd      	LDD  R31,Y+28+1
00c827 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF2:
00c828 df82      	RCALL SUBOPT_0xDD
00c829 940e e324 	CALL __PUTPARD1
00c82b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF3:
                +
00c82c a1e8     +LDD R30 , Y + 32
00c82d a1f9     +LDD R31 , Y + 32 + 1
00c82e a16a     +LDD R22 , Y + 32 + 2
00c82f a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
00c830 940e e324 	CALL __PUTPARD1
                +
00c832 a5e8     +LDD R30 , Y + 40
00c833 a5f9     +LDD R31 , Y + 40 + 1
00c834 a56a     +LDD R22 , Y + 40 + 2
00c835 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00c836 940e e324 	CALL __PUTPARD1
00c838 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF4:
                +
00c839 a9e8     +LDD R30 , Y + 48
00c83a a9f9     +LDD R31 , Y + 48 + 1
00c83b a96a     +LDD R22 , Y + 48 + 2
00c83c a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
00c83d 940e e324 	CALL __PUTPARD1
00c83f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF5:
00c840 e0a0      	LDI  R26,LOW(0)
00c841 e0b0      	LDI  R27,0
00c842 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF6:
00c843 93fa      	ST   -Y,R31
00c844 93ea      	ST   -Y,R30
00c845 e0e0      	LDI  R30,LOW(0)
00c846 93ea      	ST   -Y,R30
00c847 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF7:
00c848 eaa1      	LDI  R26,LOW(161)
00c849 e0b0      	LDI  R27,0
00c84a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF8:
00c84b 0fa0      	ADD  R26,R16
00c84c 1fb1      	ADC  R27,R17
00c84d 940e e350 	CALL __EEPROMRDB
00c84f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xF9:
00c850 0fe0      	ADD  R30,R16
00c851 1ff1      	ADC  R31,R17
00c852 01df      	MOVW R26,R30
00c853 940e e350 	CALL __EEPROMRDB
00c855 01d0      	MOVW R26,R0
00c856 93ec      	ST   X,R30
00c857 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFA:
00c858 81ea      	LDD  R30,Y+2
00c859 81fb      	LDD  R31,Y+2+1
00c85a 5be0      	SUBI R30,LOW(-80)
00c85b 4fff      	SBCI R31,HIGH(-80)
00c85c 0fe0      	ADD  R30,R16
00c85d 1ff1      	ADC  R31,R17
00c85e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFB:
00c85f 81ea      	LDD  R30,Y+2
00c860 81fb      	LDD  R31,Y+2+1
00c861 59ec      	SUBI R30,LOW(-100)
00c862 4fff      	SBCI R31,HIGH(-100)
00c863 0fe0      	ADD  R30,R16
00c864 1ff1      	ADC  R31,R17
00c865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00c866 81ea      	LDD  R30,Y+2
00c867 81fb      	LDD  R31,Y+2+1
00c868 57e4      	SUBI R30,LOW(-140)
00c869 4fff      	SBCI R31,HIGH(-140)
00c86a 0fe0      	ADD  R30,R16
00c86b 1ff1      	ADC  R31,R17
00c86c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFD:
00c86d 93ec      	ST   X,R30
00c86e 81aa      	LDD  R26,Y+2
00c86f 81bb      	LDD  R27,Y+2+1
00c870 9611      	ADIW R26,1
00c871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFE:
00c872 93ec      	ST   X,R30
00c873 81aa      	LDD  R26,Y+2
00c874 81bb      	LDD  R27,Y+2+1
00c875 9612      	ADIW R26,2
00c876 e0e0      	LDI  R30,LOW(0)
00c877 93ec      	ST   X,R30
                +
00c878 e000     +LDI R16 , LOW ( 0 )
00c879 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c87a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xFF:
00c87b 81ea      	LDD  R30,Y+2
00c87c 81fb      	LDD  R31,Y+2+1
00c87d 9633      	ADIW R30,3
00c87e 0fe0      	ADD  R30,R16
00c87f 1ff1      	ADC  R31,R17
00c880 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x100:
00c881 940e e350 	CALL __EEPROMRDB
00c883 81aa      	LDD  R26,Y+2
00c884 81bb      	LDD  R27,Y+2+1
00c885 93ec      	ST   X,R30
00c886 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x101:
00c887 940e e350 	CALL __EEPROMRDB
                +
00c889 81aa     +LDD R26 , Y + 2
00c88a 81bb     +LDD R27 , Y + 2 + 1
00c88b 9611     +ADIW R26 , 1
00c88c 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00c88d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x102:
00c88e 940e e350 	CALL __EEPROMRDB
                +
00c890 81aa     +LDD R26 , Y + 2
00c891 81bb     +LDD R27 , Y + 2 + 1
00c892 9612     +ADIW R26 , 2
00c893 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00c894 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x103:
00c895 940e e324 	CALL __PUTPARD1
00c897 81ae      	LDD  R26,Y+6
00c898 81bf      	LDD  R27,Y+6+1
00c899 91ec      	LD   R30,X
00c89a ca6e      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x104:
00c89b 940e e324 	CALL __PUTPARD1
00c89d 81ee      	LDD  R30,Y+6
00c89e 81ff      	LDD  R31,Y+6+1
00c89f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x105:
                +
00c8a0 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c8a1 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c8a2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c8a3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c8a4 cff6      	RJMP SUBOPT_0x104
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x106:
00c8a5 9633      	ADIW R30,3
00c8a6 0fe0      	ADD  R30,R16
00c8a7 1ff1      	ADC  R31,R17
00c8a8 81e0      	LD   R30,Z
00c8a9 ca5f      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x107:
                +
00c8aa e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00c8ab e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00c8ac e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00c8ad e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00c8ae c946      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x108:
00c8af 93ba      	ST   -Y,R27
00c8b0 93aa      	ST   -Y,R26
00c8b1 81ab      	LDD  R26,Y+3
00c8b2 23aa      	TST  R26
00c8b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x109:
00c8b4 93ed      	ST   X+,R30
00c8b5 93fc      	ST   X,R31
00c8b6 81a8      	LD   R26,Y
00c8b7 81b9      	LDD  R27,Y+1
00c8b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10A:
00c8b9 e0e0      	LDI  R30,LOW(0)
00c8ba 93ec      	ST   X,R30
00c8bb 81a8      	LD   R26,Y
00c8bc 81b9      	LDD  R27,Y+1
00c8bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x10B:
                +
00c8be e0e0     +LDI R30 , LOW ( 0x41200000 )
00c8bf e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c8c0 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c8c1 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c8c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x10C:
00c8c3 81aa      	LDD  R26,Y+2
00c8c4 81bb      	LDD  R27,Y+2+1
00c8c5 e1ed      	LDI  R30,LOW(29)
00c8c6 940e e242 	CALL __MULB1W2U
00c8c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10D:
                +
00c8c9 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00c8ca 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00c8cb 01df      	MOVW R26,R30
00c8cc 940e e348 	CALL __EEPROMRDD
00c8ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10E:
                +
00c8cf 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00c8d0 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00c8d1 01df      	MOVW R26,R30
00c8d2 940e e34c 	CALL __EEPROMRDW
00c8d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10F:
                +
00c8d5 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00c8d6 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00c8d7 01df      	MOVW R26,R30
00c8d8 940e e348 	CALL __EEPROMRDD
00c8da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x110:
                +
00c8db 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00c8dc 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00c8dd 01df      	MOVW R26,R30
00c8de 940e e348 	CALL __EEPROMRDD
00c8e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
00c8e1 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00c8e2 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00c8e3 01df      	MOVW R26,R30
00c8e4 940e e34c 	CALL __EEPROMRDW
00c8e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x112:
                +
00c8e7 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00c8e8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00c8e9 01df      	MOVW R26,R30
00c8ea 940e e348 	CALL __EEPROMRDD
00c8ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x113:
00c8ed e0e0      	LDI  R30,LOW(0)
00c8ee e0f0      	LDI  R31,HIGH(0)
00c8ef 93ed      	ST   X+,R30
00c8f0 93fc      	ST   X,R31
00c8f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x114:
00c8f2 81aa      	LDD  R26,Y+2
00c8f3 81bb      	LDD  R27,Y+2+1
00c8f4 e0e3      	LDI  R30,LOW(3)
00c8f5 940e e242 	CALL __MULB1W2U
00c8f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x115:
00c8f8 01df      	MOVW R26,R30
00c8f9 940e e350 	CALL __EEPROMRDB
00c8fb 81a8      	LD   R26,Y
00c8fc 81b9      	LDD  R27,Y+1
00c8fd 93ec      	ST   X,R30
00c8fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x116:
00c8ff 940e e34c 	CALL __EEPROMRDW
                +
00c901 81a8     +LDD R26 , Y + 0
00c902 81b9     +LDD R27 , Y + 0 + 1
00c903 9611     +ADIW R26 , 1
00c904 93ed     +ST X + , R30
00c905 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00c906 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x117:
00c907 940e e324 	CALL __PUTPARD1
00c909 85e8      	LDD  R30,Y+8
00c90a 85f9      	LDD  R31,Y+8+1
00c90b cef4      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x118:
00c90c 81ac      	LDD  R26,Y+4
00c90d 81bd      	LDD  R27,Y+4+1
00c90e e2e6      	LDI  R30,LOW(38)
00c90f 940e e242 	CALL __MULB1W2U
00c911 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x119:
00c912 940e e324 	CALL __PUTPARD1
00c914 85a8      	LDD  R26,Y+8
00c915 85b9      	LDD  R27,Y+8+1
00c916 e2e6      	LDI  R30,LOW(38)
00c917 940e e242 	CALL __MULB1W2U
00c919 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11A:
00c91a 59e6      	SUBI R30,LOW(-_config_dout)
00c91b 4ffe      	SBCI R31,HIGH(-_config_dout)
00c91c 01df      	MOVW R26,R30
00c91d 940e e350 	CALL __EEPROMRDB
00c91f c9e9      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11B:
                +
00c920 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00c921 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00c922 01df      	MOVW R26,R30
00c923 940e e350 	CALL __EEPROMRDB
00c925 c9e3      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11C:
                +
00c926 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00c927 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00c928 01df      	MOVW R26,R30
00c929 940e e350 	CALL __EEPROMRDB
00c92b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11D:
00c92c 01d8      	MOVW R26,R16
00c92d e0f0      	LDI  R31,0
00c92e 17ae      	CP   R26,R30
00c92f 07bf      	CPC  R27,R31
00c930 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11E:
                +
00c931 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00c932 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00c933 0fe0      	ADD  R30,R16
00c934 1ff1      	ADC  R31,R17
00c935 01df      	MOVW R26,R30
00c936 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11F:
00c937 81aa      	LDD  R26,Y+2
00c938 81bb      	LDD  R27,Y+2+1
00c939 e0e5      	LDI  R30,LOW(5)
00c93a 940e e242 	CALL __MULB1W2U
00c93c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x120:
00c93d 81ea      	LDD  R30,Y+2
00c93e 81fb      	LDD  R31,Y+2+1
00c93f 9636      	ADIW R30,6
00c940 0fe0      	ADD  R30,R16
00c941 1ff1      	ADC  R31,R17
00c942 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x121:
00c943 81ac      	LDD  R26,Y+4
00c944 81bd      	LDD  R27,Y+4+1
00c945 e2e9      	LDI  R30,LOW(41)
00c946 940e e242 	CALL __MULB1W2U
00c948 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x122:
                +
00c949 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00c94a 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00c94b 01df      	MOVW R26,R30
00c94c 940e e350 	CALL __EEPROMRDB
00c94e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x123:
                +
00c94f 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00c950 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00c951 0fe0      	ADD  R30,R16
00c952 1ff1      	ADC  R31,R17
00c953 01df      	MOVW R26,R30
00c954 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x124:
00c955 81ee      	LDD  R30,Y+6
00c956 81ff      	LDD  R31,Y+6+1
00c957 9632      	ADIW R30,2
00c958 0fe0      	ADD  R30,R16
00c959 1ff1      	ADC  R31,R17
00c95a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x125:
00c95b 01de      	MOVW R26,R28
00c95c 9612      	ADIW R26,2
00c95d 0fa0      	ADD  R26,R16
00c95e 1fb1      	ADC  R27,R17
00c95f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x126:
                +
00c960 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00c961 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00c962 940e e350 	CALL __EEPROMRDB
00c964 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x127:
00c965 940e e324 	CALL __PUTPARD1
00c967 85aa      	LDD  R26,Y+10
00c968 85bb      	LDD  R27,Y+10+1
00c969 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x128:
00c96a 940e e324 	CALL __PUTPARD1
00c96c 85ea      	LDD  R30,Y+10
00c96d 85fb      	LDD  R31,Y+10+1
00c96e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x129:
                +
00c96f e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c970 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c971 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c972 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c973 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12A:
00c974 9632      	ADIW R30,2
00c975 0fe0      	ADD  R30,R16
00c976 1ff1      	ADC  R31,R17
00c977 81e0      	LD   R30,Z
00c978 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12B:
00c979 940e e324 	CALL __PUTPARD1
00c97b 81ac      	LDD  R26,Y+4
00c97c 81bd      	LDD  R27,Y+4+1
00c97d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12C:
00c97e 940e e2f4 	CALL __GETD1P
00c980 940e e324 	CALL __PUTPARD1
00c982 c8e8      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12D:
00c983 940e e2f0 	CALL __GETW1P
00c985 ce7a      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12E:
00c986 940e e324 	CALL __PUTPARD1
00c988 81ec      	LDD  R30,Y+4
00c989 81fd      	LDD  R31,Y+4+1
00c98a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12F:
                +
00c98b 81a6     +LDD R26 , Z + 6
00c98c 81b7     +LDD R27 , Z + 6 + 1
00c98d 8580     +LDD R24 , Z + 6 + 2
00c98e 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00c98f 940e e329 	CALL __PUTPARD2
00c991 c8d9      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x130:
                +
00c992 85a2     +LDD R26 , Z + 10
00c993 85b3     +LDD R27 , Z + 10 + 1
00c994 8584     +LDD R24 , Z + 10 + 2
00c995 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00c996 940e e329 	CALL __PUTPARD2
00c998 c8d2      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x131:
00c999 0fae      	ADD  R26,R30
00c99a 1fbf      	ADC  R27,R31
00c99b 91ec      	LD   R30,X
00c99c 01d0      	MOVW R26,R0
00c99d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x132:
00c99e 91ec      	LD   R30,X
00c99f 01d0      	MOVW R26,R0
00c9a0 940e e36c 	CALL __EEPROMWRB
00c9a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x133:
00c9a3 e0e1      	LDI  R30,LOW(1)
00c9a4 940e e36c 	CALL __EEPROMWRB
00c9a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x134:
00c9a7 940e e350 	CALL __EEPROMRDB
00c9a9 c95f      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x135:
                +
00c9aa e2e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00c9ab e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00c9ac e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00c9ad e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00c9ae 940e e324 	CALL __PUTPARD1
00c9b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x136:
00c9b1 81a8      	LD   R26,Y
00c9b2 81b9      	LDD  R27,Y+1
00c9b3 940e e2f0 	CALL __GETW1P
00c9b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x137:
00c9b6 01d0      	MOVW R26,R0
00c9b7 940e e364 	CALL __EEPROMWRW
00c9b9 cf09      	RJMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x138:
00c9ba 940e e2f0 	CALL __GETW1P
00c9bc cff9      	RJMP SUBOPT_0x137
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x139:
00c9bd 940e e36c 	CALL __EEPROMWRB
00c9bf cf03      	RJMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13A:
00c9c0 940e e2f4 	CALL __GETD1P
00c9c2 01d0      	MOVW R26,R0
00c9c3 940e e35c 	CALL __EEPROMWRD
00c9c5 cefd      	RJMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13B:
00c9c6 940e e2f4 	CALL __GETD1P
00c9c8 01d0      	MOVW R26,R0
00c9c9 940e e35c 	CALL __EEPROMWRD
00c9cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x13C:
00c9cc 940e e324 	CALL __PUTPARD1
00c9ce 81ae      	LDD  R26,Y+6
00c9cf 81bf      	LDD  R27,Y+6+1
00c9d0 e1ed      	LDI  R30,LOW(29)
00c9d1 940e e242 	CALL __MULB1W2U
00c9d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13D:
00c9d4 01df      	MOVW R26,R30
00c9d5 940e e34c 	CALL __EEPROMRDW
00c9d7 c97f      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x13E:
00c9d8 2766      	CLR  R22
00c9d9 2777      	CLR  R23
00c9da c8f3      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13F:
00c9db 010f      	MOVW R0,R30
00c9dc 81a8      	LD   R26,Y
00c9dd 81b9      	LDD  R27,Y+1
00c9de 9611      	ADIW R26,1
00c9df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x140:
00c9e0 940e e2f0 	CALL __GETW1P
00c9e2 01d0      	MOVW R26,R0
00c9e3 940e e364 	CALL __EEPROMWRW
00c9e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x141:
                +
00c9e6 e3e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00c9e7 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00c9e8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00c9e9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00c9ea ceb0      	RJMP SUBOPT_0x104
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x142:
                +
00c9eb e5e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00c9ec e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00c9ed e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00c9ee e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00c9ef 940e e324 	CALL __PUTPARD1
00c9f1 81ae      	LDD  R26,Y+6
00c9f2 81bf      	LDD  R27,Y+6+1
00c9f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x143:
00c9f4 940e e324 	CALL __PUTPARD1
00c9f6 81ae      	LDD  R26,Y+6
00c9f7 81bf      	LDD  R27,Y+6+1
00c9f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x144:
00c9f9 940e e36c 	CALL __EEPROMWRB
00c9fb cf10      	RJMP SUBOPT_0x118
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x145:
00c9fc 940e e36c 	CALL __EEPROMWRB
                +
00c9fe eeea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00c9ff e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00ca00 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00ca01 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00ca02 cf04      	RJMP SUBOPT_0x117
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x146:
                +
00ca03 e4e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00ca04 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00ca05 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00ca06 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00ca07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x147:
                +
00ca08 e6e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00ca09 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00ca0a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00ca0b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00ca0c 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x148:
00ca0e 01df      	MOVW R26,R30
00ca0f 940e e348 	CALL __EEPROMRDD
00ca11 940e e324 	CALL __PUTPARD1
00ca13 940c c26b 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x149:
00ca15 940e e324 	CALL __PUTPARD1
00ca17 85a8      	LDD  R26,Y+8
00ca18 85b9      	LDD  R27,Y+8+1
00ca19 e2e9      	LDI  R30,LOW(41)
00ca1a 940e e242 	CALL __MULB1W2U
00ca1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14A:
                +
00ca1d e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00ca1e e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00ca1f 0fe0      	ADD  R30,R16
00ca20 1ff1      	ADC  R31,R17
00ca21 01df      	MOVW R26,R30
00ca22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x14B:
00ca23 940e e348 	CALL __EEPROMRDD
00ca25 940e e324 	CALL __PUTPARD1
00ca27 940c c26b 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14C:
00ca29 931a      	ST   -Y,R17
00ca2a 930a      	ST   -Y,R16
                +
00ca2b e000     +LDI R16 , LOW ( 0 )
00ca2c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00ca2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14D:
00ca2e 0fa0      	ADD  R26,R16
00ca2f 1fb1      	ADC  R27,R17
00ca30 e0e0      	LDI  R30,LOW(0)
00ca31 93ec      	ST   X,R30
00ca32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14E:
00ca33 e0e0      	LDI  R30,LOW(0)
00ca34 e0f0      	LDI  R31,HIGH(0)
00ca35 940e e3a2 	CALL __LOADLOCR4
00ca37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14F:
00ca38 972a      	SBIW R28,10
00ca39 940e e39b 	CALL __SAVELOCR4
                +
00ca3b e000     +LDI R16 , LOW ( 0 )
00ca3c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00ca3d e020     +LDI R18 , LOW ( 0 )
00ca3e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00ca3f 01f8      	MOVW R30,R16
                +
00ca40 5f0f     +SUBI R16 , LOW ( - 1 )
00ca41 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ca42 01de      	MOVW R26,R28
00ca43 9614      	ADIW R26,4
00ca44 0fae      	ADD  R26,R30
00ca45 1fbf      	ADC  R27,R31
00ca46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x150:
00ca47 01f8      	MOVW R30,R16
                +
00ca48 5f0f     +SUBI R16 , LOW ( - 1 )
00ca49 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ca4a 01de      	MOVW R26,R28
00ca4b 9614      	ADIW R26,4
00ca4c 0fea      	ADD  R30,R26
00ca4d 1ffb      	ADC  R31,R27
00ca4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x151:
00ca4f 010f      	MOVW R0,R30
00ca50 e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00ca51 e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00ca52 0fa2      	ADD  R26,R18
00ca53 1fb3      	ADC  R27,R19
00ca54 940e e350 	CALL __EEPROMRDB
00ca56 01d0      	MOVW R26,R0
00ca57 93ec      	ST   X,R30
00ca58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x152:
00ca59 01fe      	MOVW R30,R28
00ca5a 9634      	ADIW R30,4
00ca5b 93fa      	ST   -Y,R31
00ca5c 93ea      	ST   -Y,R30
00ca5d 931a      	ST   -Y,R17
00ca5e 930a      	ST   -Y,R16
00ca5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x153:
00ca60 940e 5dc2 	CALL _ETH_send
00ca62 cfd0      	RJMP SUBOPT_0x14E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x154:
00ca63 940e e39b 	CALL __SAVELOCR4
                +
00ca65 e000     +LDI R16 , LOW ( 0 )
00ca66 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00ca67 e020     +LDI R18 , LOW ( 0 )
00ca68 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00ca69 01f8      	MOVW R30,R16
                +
00ca6a 5f0f     +SUBI R16 , LOW ( - 1 )
00ca6b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ca6c 01de      	MOVW R26,R28
00ca6d 9614      	ADIW R26,4
00ca6e 0fae      	ADD  R26,R30
00ca6f 1fbf      	ADC  R27,R31
00ca70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x155:
00ca71 85e8      	LDD  R30,Y+8
00ca72 85f9      	LDD  R31,Y+8+1
00ca73 963f      	ADIW R30,15
00ca74 01af      	MOVW R20,R30
                +
00ca75 3f4b     +CPI R20 , LOW ( 251 )
00ca76 e0e0     +LDI R30 , HIGH ( 251 )
00ca77 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00ca78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x156:
00ca79 01da      	MOVW R26,R20
00ca7a 940e a6d0 	CALL _malloc
00ca7c 83ee      	STD  Y+6,R30
00ca7d 83ff      	STD  Y+6+1,R31
00ca7e 9730      	SBIW R30,0
00ca7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x157:
00ca80 01f8      	MOVW R30,R16
                +
00ca81 5f0f     +SUBI R16 , LOW ( - 1 )
00ca82 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ca83 81ae      	LDD  R26,Y+6
00ca84 81bf      	LDD  R27,Y+6+1
00ca85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x158:
00ca86 0fea      	ADD  R30,R26
00ca87 1ffb      	ADC  R31,R27
00ca88 cfc6      	RJMP SUBOPT_0x151
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x159:
00ca89 01f8      	MOVW R30,R16
00ca8a 81ae      	LDD  R26,Y+6
00ca8b 81bf      	LDD  R27,Y+6+1
00ca8c 940c c2ba 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15A:
00ca8e 85ec      	LDD  R30,Y+12
00ca8f 85fd      	LDD  R31,Y+12+1
00ca90 93fa      	ST   -Y,R31
00ca91 93ea      	ST   -Y,R30
00ca92 85ac      	LDD  R26,Y+12
00ca93 85bd      	LDD  R27,Y+12+1
00ca94 940e a70d 	CALL _memcpy
00ca96 85e8      	LDD  R30,Y+8
00ca97 85f9      	LDD  R31,Y+8+1
                +
00ca98 0f0e     +ADD R16 , R30
00ca99 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00ca9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x15B:
00ca9b 81ee      	LDD  R30,Y+6
00ca9c 81ff      	LDD  R31,Y+6+1
00ca9d 93fa      	ST   -Y,R31
00ca9e 93ea      	ST   -Y,R30
00ca9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15C:
00caa0 93ea      	ST   -Y,R30
00caa1 e0ac      	LDI  R26,LOW(12)
00caa2 e0b0      	LDI  R27,0
00caa3 940c 5dc2 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x15D:
00caa5 81ae      	LDD  R26,Y+6
00caa6 81bf      	LDD  R27,Y+6+1
00caa7 940c a6eb 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15E:
00caa9 01f8      	MOVW R30,R16
                +
00caaa 5f0f     +SUBI R16 , LOW ( - 1 )
00caab 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00caac 01de      	MOVW R26,R28
00caad 9616      	ADIW R26,6
00caae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15F:
                +
00caaf a1e9     +LDD R30 , Y + 33
00cab0 a1fa     +LDD R31 , Y + 33 + 1
00cab1 a16b     +LDD R22 , Y + 33 + 2
00cab2 a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00cab3 940e e324 	CALL __PUTPARD1
00cab5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x160:
00cab6 e180      	LDI  R24,16
00cab7 940e 9e86 	CALL _printDebug
00cab9 9664      	ADIW R28,20
00caba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x161:
00cabb 85ef      	LDD  R30,Y+15
00cabc 93ea      	ST   -Y,R30
00cabd 85ef      	LDD  R30,Y+15
00cabe 93ea      	ST   -Y,R30
00cabf 85ef      	LDD  R30,Y+15
00cac0 93ea      	ST   -Y,R30
00cac1 e0a1      	LDI  R26,LOW(1)
00cac2 940e 54f0 	CALL _ETH_sendConfigManageNack
00cac4 efef      	LDI  R30,LOW(65535)
00cac5 efff      	LDI  R31,HIGH(65535)
00cac6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x162:
00cac7 940e 9f0a 	CALL _print_payload
00cac9 cfd1      	RJMP SUBOPT_0x15B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x163:
00caca 01f8      	MOVW R30,R16
                +
00cacb 5f0f     +SUBI R16 , LOW ( - 1 )
00cacc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00cacd 01de      	MOVW R26,R28
00cace 9617      	ADIW R26,7
00cacf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x164:
                +
00cad0 a5ea     +LDD R30 , Y + 42
00cad1 a5fb     +LDD R31 , Y + 42 + 1
00cad2 a56c     +LDD R22 , Y + 42 + 2
00cad3 a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
00cad4 940e e324 	CALL __PUTPARD1
00cad6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x165:
00cad7 93aa      	ST   -Y,R26
00cad8 972b      	SBIW R28,11
00cad9 cf89      	RJMP SUBOPT_0x154
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x166:
00cada 89a8      	LDD  R26,Y+16
00cadb 83a0      	STD  Z+0,R26
00cadc cf6a      	RJMP SUBOPT_0x150
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x167:
00cadd 01de      	MOVW R26,R28
00cade 9614      	ADIW R26,4
00cadf 0fae      	ADD  R26,R30
00cae0 1fbf      	ADC  R27,R31
00cae1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x168:
                +
00cae2 01fe     +MOVW R30 , R28
00cae3 5de2     +SUBI R30 , LOW ( - 558 )
00cae4 4ffd     +SBCI R31 , HIGH ( - 558 )
00cae5 81e0     +LD R30 , Z
                 	__GETB1SX 558
00cae6 93ea      	ST   -Y,R30
00cae7 c9ce      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x169:
00cae8 01fe      	MOVW R30,R28
00cae9 963e      	ADIW R30,14
00caea 93fa      	ST   -Y,R31
00caeb 93ea      	ST   -Y,R30
00caec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16A:
00caed dca6      	RCALL SUBOPT_0xD9
00caee 940e e324 	CALL __PUTPARD1
00caf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16B:
                +
00caf1 e9e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00caf2 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00caf3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00caf4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00caf5 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16C:
00caf7 01de      	MOVW R26,R28
00caf8 961e      	ADIW R26,14
                +
00caf9 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00cafb 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00cafd 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00caff bf6c     +OUT EIND , R22
00cb00 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00cb01 018f      	MOVW R16,R30
00cb02 2311      	TST  R17
00cb03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16D:
                +
00cb04 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00cb05 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00cb06 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00cb07 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00cb08 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x16E:
                +
00cb0a e0ab     +LDI R26 , 11
00cb0b 9fa0     +MUL R26 , R16
00cb0c 01f0     +MOVW R30 , R0
00cb0d 9fa1     +MUL R26 , R17
00cb0e 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00cb0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16F:
00cb10 940e e324 	CALL __PUTPARD1
00cb12 91e0 1421 	LDS  R30,_commLostTimer
00cb14 91f0 1422 	LDS  R31,_commLostTimer+1
00cb16 9160 1423 	LDS  R22,_commLostTimer+2
00cb18 9170 1424 	LDS  R23,_commLostTimer+3
00cb1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x170:
00cb1b 91a0 1421 	LDS  R26,_commLostTimer
00cb1d 91b0 1422 	LDS  R27,_commLostTimer+1
00cb1f 9180 1423 	LDS  R24,_commLostTimer+2
00cb21 9190 1424 	LDS  R25,_commLostTimer+3
00cb23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x171:
00cb24 93fa      	ST   -Y,R31
00cb25 93ea      	ST   -Y,R30
                +
00cb26 e1ae     +LDI R26 , LOW ( 0x1E )
00cb27 e0b0     +LDI R27 , HIGH ( 0x1E )
00cb28 e080     +LDI R24 , BYTE3 ( 0x1E )
00cb29 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00cb2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x172:
00cb2b 940e e324 	CALL __PUTPARD1
00cb2d da61      	RCALL SUBOPT_0x88
00cb2e 91e0 1421 	LDS  R30,_commLostTimer
00cb30 91f0 1422 	LDS  R31,_commLostTimer+1
00cb32 9160 1423 	LDS  R22,_commLostTimer+2
00cb34 9170 1424 	LDS  R23,_commLostTimer+3
00cb36 940e e186 	CALL __SUBD12
00cb38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x173:
                +
00cb39 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00cb3a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00cb3b 93fa      	ST   -Y,R31
00cb3c 93ea      	ST   -Y,R30
00cb3d cfcc      	RJMP SUBOPT_0x16E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x174:
                +
00cb3e 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00cb3f 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00cb40 01df      	MOVW R26,R30
00cb41 940e e2f0 	CALL __GETW1P
00cb43 940e e201 	CALL __CWD1
00cb45 940c c2c4 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x175:
                +
00cb47 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00cb48 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00cb49 01df      	MOVW R26,R30
00cb4a 940e e2f0 	CALL __GETW1P
00cb4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x176:
                +
00cb4d 01de     +MOVW R26 , R28
00cb4e 5da2     +SUBI R26 , LOW ( - 558 )
00cb4f 4fbd     +SBCI R27 , HIGH ( - 558 )
00cb50 900d     +LD R0 , X +
00cb51 91bc     +LD R27 , X
00cb52 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00cb53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x177:
                +
00cb54 01de     +MOVW R26 , R28
00cb55 5da4     +SUBI R26 , LOW ( - 556 )
00cb56 4fbd     +SBCI R27 , HIGH ( - 556 )
00cb57 900d     +LD R0 , X +
00cb58 91bc     +LD R27 , X
00cb59 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00cb5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x178:
00cb5b 940e e324 	CALL __PUTPARD1
                +
00cb5d 01fe     +MOVW R30 , R28
00cb5e 5de0     +SUBI R30 , LOW ( - 560 )
00cb5f 4ffd     +SBCI R31 , HIGH ( - 560 )
00cb60 9001     +LD R0 , Z +
00cb61 81f0     +LD R31 , Z
00cb62 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00cb63 cc9c      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x179:
00cb64 930a      	ST   -Y,R16
00cb65 e1a0      	LDI  R26,LOW(16)
00cb66 940c 53bd 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17A:
00cb68 940e a6d0 	CALL _malloc
00cb6a 01af      	MOVW R20,R30
00cb6b 2e04      	MOV  R0,R20
00cb6c 2a05      	OR   R0,R21
00cb6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17B:
00cb6e 930a      	ST   -Y,R16
00cb6f e5a0      	LDI  R26,LOW(80)
00cb70 940c 53bd 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x17C:
                +
00cb72 01fe     +MOVW R30 , R28
00cb73 5de2     +SUBI R30 , LOW ( - 558 )
00cb74 4ffd     +SBCI R31 , HIGH ( - 558 )
00cb75 9001     +LD R0 , Z +
00cb76 81f0     +LD R31 , Z
00cb77 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00cb78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17D:
00cb79 9632      	ADIW R30,2
00cb7a 93fa      	ST   -Y,R31
00cb7b 93ea      	ST   -Y,R30
00cb7c dff5      	RCALL SUBOPT_0x17C
00cb7d 9732      	SBIW R30,2
00cb7e 93fa      	ST   -Y,R31
00cb7f 93ea      	ST   -Y,R30
00cb80 01da      	MOVW R26,R20
00cb81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17E:
00cb82 01da      	MOVW R26,R20
00cb83 940e a6eb 	CALL _free
00cb85 930a      	ST   -Y,R16
00cb86 e3a0      	LDI  R26,LOW(48)
00cb87 940c 53bd 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x17F:
00cb89 940e e324 	CALL __PUTPARD1
00cb8b 2fe0      	MOV  R30,R16
00cb8c 940c c309 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x180:
00cb8e 940e e324 	CALL __PUTPARD1
00cb90 01fa      	MOVW R30,R20
00cb91 85e0      	LDD  R30,Z+8
00cb92 940c c309 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x181:
00cb94 940e e324 	CALL __PUTPARD1
00cb96 01da      	MOVW R26,R20
00cb97 9619      	ADIW R26,9
00cb98 940c c2bf 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x182:
00cb9a 940e e2f0 	CALL __GETW1P
00cb9c 81ae      	LDD  R26,Y+6
00cb9d 81bf      	LDD  R27,Y+6+1
00cb9e 17ae      	CP   R26,R30
00cb9f 07bf      	CPC  R27,R31
00cba0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x183:
00cba1 0fae      	ADD  R26,R30
00cba2 1fbf      	ADC  R27,R31
00cba3 91ec      	LD   R30,X
00cba4 940c c309 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x184:
00cba6 930a      	ST   -Y,R16
00cba7 01fa      	MOVW R30,R20
00cba8 85a0      	LDD  R26,Z+8
00cba9 93aa      	ST   -Y,R26
00cbaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x185:
00cbab dbcd      	RCALL SUBOPT_0xD3
00cbac 01df      	MOVW R26,R30
00cbad 01cb      	MOVW R24,R22
00cbae 940e 8559 	CALL _LOG_setLastSend
00cbb0 019f      	MOVW R18,R30
00cbb1 2333      	TST  R19
00cbb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x186:
                +
00cbb3 e3e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00cbb4 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00cbb5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00cbb6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00cbb7 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x187:
00cbb9 01de      	MOVW R26,R28
00cbba 961c      	ADIW R26,12
                +
00cbbb 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00cbbd 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00cbbf 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00cbc1 bf6c     +OUT EIND , R22
00cbc2 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00cbc3 019f      	MOVW R18,R30
00cbc4 2333      	TST  R19
00cbc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x188:
00cbc6 e0b0      	LDI  R27,0
00cbc7 cfa0      	RJMP SUBOPT_0x17A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x189:
                +
00cbc8 e1e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00cbc9 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00cbca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00cbcb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00cbcc 940e e324 	CALL __PUTPARD1
00cbce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:83 WORDS
                 SUBOPT_0x18A:
00cbcf 940e e324 	CALL __PUTPARD1
00cbd1 940c c26b 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18B:
00cbd3 df9e      	RCALL SUBOPT_0x17C
00cbd4 cfa4      	RJMP SUBOPT_0x17D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18C:
                +
00cbd5 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00cbd6 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00cbd7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00cbd8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00cbd9 cfb4      	RJMP SUBOPT_0x180
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18D:
00cbda 940e e324 	CALL __PUTPARD1
00cbdc 01fa      	MOVW R30,R20
00cbdd 85e1      	LDD  R30,Z+9
00cbde 940c c309 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18E:
00cbe0 01fa      	MOVW R30,R20
00cbe1 85e0      	LDD  R30,Z+8
00cbe2 940c c3e3 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18F:
00cbe4 01fa      	MOVW R30,R20
00cbe5 85a1      	LDD  R26,Z+9
00cbe6 93aa      	ST   -Y,R26
00cbe7 e0a1      	LDI  R26,LOW(1)
00cbe8 940c 54f0 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x190:
00cbea 01fa      	MOVW R30,R20
00cbeb 85a1      	LDD  R26,Z+9
00cbec 93aa      	ST   -Y,R26
00cbed e0e0      	LDI  R30,LOW(0)
00cbee 93ea      	ST   -Y,R30
00cbef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x191:
00cbf0 940e 551f 	CALL _ETH_sendConfigManageAck
00cbf2 019f      	MOVW R18,R30
00cbf3 2333      	TST  R19
00cbf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x192:
00cbf5 87e8      	STD  Y+8,R30
00cbf6 87f9      	STD  Y+8+1,R31
00cbf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x193:
00cbf8 85e8      	LDD  R30,Y+8
00cbf9 85f9      	LDD  R31,Y+8+1
00cbfa 93fa      	ST   -Y,R31
00cbfb 93ea      	ST   -Y,R30
00cbfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x194:
00cbfd 85e9      	LDD  R30,Y+9
00cbfe 85fa      	LDD  R31,Y+9+1
00cbff 93fa      	ST   -Y,R31
00cc00 93ea      	ST   -Y,R30
00cc01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x195:
00cc02 e0e0      	LDI  R30,LOW(0)
00cc03 e0f0      	LDI  R31,HIGH(0)
00cc04 93fa      	ST   -Y,R31
00cc05 93ea      	ST   -Y,R30
00cc06 cc39      	RJMP SUBOPT_0xF5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x196:
                +
00cc07 eeef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00cc08 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00cc09 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00cc0a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00cc0b 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x197:
                +
00cc0d e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00cc0e e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00cc0f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00cc10 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00cc11 cf7c      	RJMP SUBOPT_0x180
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x198:
                +
00cc12 e6e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00cc13 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00cc14 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00cc15 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00cc16 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x199:
00cc18 940e e324 	CALL __PUTPARD1
00cc1a 01fa      	MOVW R30,R20
                +
00cc1b 85a1     +LDD R26 , Z + 9
00cc1c 85b2     +LDD R27 , Z + 9 + 1
00cc1d 8583     +LDD R24 , Z + 9 + 2
00cc1e 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00cc1f 940e e329 	CALL __PUTPARD2
00cc21 940c c26b 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19A:
00cc23 940e e329 	CALL __PUTPARD2
00cc25 940c c26b 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19B:
                +
00cc27 85a1     +LDD R26 , Z + 9
00cc28 85b2     +LDD R27 , Z + 9 + 1
00cc29 8583     +LDD R24 , Z + 9 + 2
00cc2a 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00cc2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19C:
                +
00cc2c e0ea     +LDI R30 , LOW ( 0xA )
00cc2d e0f0     +LDI R31 , HIGH ( 0xA )
00cc2e e060     +LDI R22 , BYTE3 ( 0xA )
00cc2f e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00cc30 cf9e      	RJMP SUBOPT_0x18A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19D:
00cc31 df40      	RCALL SUBOPT_0x17C
00cc32 9632      	ADIW R30,2
00cc33 93fa      	ST   -Y,R31
00cc34 93ea      	ST   -Y,R30
00cc35 01da      	MOVW R26,R20
00cc36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19E:
                +
00cc37 e0ed     +LDI R30 , LOW ( 0xD )
00cc38 e0f0     +LDI R31 , HIGH ( 0xD )
00cc39 e060     +LDI R22 , BYTE3 ( 0xD )
00cc3a e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00cc3b cf93      	RJMP SUBOPT_0x18A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19F:
                +
00cc3c e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00cc3d e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00cc3e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00cc3f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00cc40 cf4d      	RJMP SUBOPT_0x180
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A0:
00cc41 85a1      	LDD  R26,Z+9
00cc42 85b2      	LDD  R27,Z+10
00cc43 940e e381 	CALL __CPW02
00cc45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A1:
00cc46 930a      	ST   -Y,R16
00cc47 e3a0      	LDI  R26,LOW(48)
00cc48 940c 53bd 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A2:
00cc4a 85e0      	LDD  R30,Z+8
00cc4b e0f0      	LDI  R31,0
00cc4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1A3:
00cc4d 9724      	SBIW R28,4
00cc4e e0e0      	LDI  R30,LOW(0)
00cc4f 83e8      	ST   Y,R30
00cc50 83e9      	STD  Y+1,R30
00cc51 83ea      	STD  Y+2,R30
00cc52 83eb      	STD  Y+3,R30
00cc53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A4:
00cc54 0fe0      	ADD  R30,R16
00cc55 1ff1      	ADC  R31,R17
00cc56 93fa      	ST   -Y,R31
00cc57 93ea      	ST   -Y,R30
00cc58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A5:
00cc59 81ae      	LDD  R26,Y+6
00cc5a 81bf      	LDD  R27,Y+6+1
00cc5b 0fea      	ADD  R30,R26
00cc5c 1ffb      	ADC  R31,R27
00cc5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A6:
00cc5e 01d0      	MOVW R26,R0
00cc5f e0f0      	LDI  R31,0
00cc60 17ea      	CP   R30,R26
00cc61 07fb      	CPC  R31,R27
00cc62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A7:
00cc63 93ba      	ST   -Y,R27
00cc64 93aa      	ST   -Y,R26
00cc65 940e e399 	CALL __SAVELOCR6
00cc67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1A8:
00cc68 81ae      	LDD  R26,Y+6
00cc69 81bf      	LDD  R27,Y+6+1
00cc6a 0fae      	ADD  R26,R30
00cc6b 1fbf      	ADC  R27,R31
00cc6c 91ec      	LD   R30,X
00cc6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A9:
00cc6e eaa9      	LDI  R26,LOW(_configRd)
00cc6f e0bf      	LDI  R27,HIGH(_configRd)
00cc70 cdbd      	RJMP SUBOPT_0x14D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1AA:
00cc71 e0e0      	LDI  R30,LOW(0)
00cc72 93e0 10f0 	STS  _config_start,R30
00cc74 93e0 10f1 	STS  _config_ready,R30
00cc76 93e0 10f2 	STS  _config_end,R30
00cc78 93e0 10f3 	STS  _config_response,R30
00cc7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AB:
00cc7b 01de      	MOVW R26,R28
00cc7c 9612      	ADIW R26,2
00cc7d 940e a799 	CALL _strlen
00cc7f 170e      	CP   R16,R30
00cc80 071f      	CPC  R17,R31
00cc81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AC:
                +
00cc82 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00cc83 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00cc84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00cc85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00cc86 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AD:
                +
00cc88 e0a7     +LDI R26 , LOW ( 0x7 )
00cc89 e0b0     +LDI R27 , HIGH ( 0x7 )
00cc8a e080     +LDI R24 , BYTE3 ( 0x7 )
00cc8b e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00cc8c 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1AE:
00cc8e 85ec      	LDD  R30,Y+12
00cc8f 85fd      	LDD  R31,Y+12+1
00cc90 93fa      	ST   -Y,R31
00cc91 93ea      	ST   -Y,R30
00cc92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1AF:
00cc93 eae9      	LDI  R30,LOW(_configRd)
00cc94 e0ff      	LDI  R31,HIGH(_configRd)
00cc95 93fa      	ST   -Y,R31
00cc96 93ea      	ST   -Y,R30
00cc97 d8b7      	RCALL SUBOPT_0x7D
00cc98 940c a70d 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B0:
00cc9a 01de      	MOVW R26,R28
00cc9b 9697      	ADIW R26,39
00cc9c 940e a799 	CALL _strlen
00cc9e 170e      	CP   R16,R30
00cc9f 071f      	CPC  R17,R31
00cca0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B1:
                +
00cca1 a5ab     +LDD R26 , Y + 43
00cca2 a5bc     +LDD R27 , Y + 43 + 1
00cca3 a58d     +LDD R24 , Y + 43 + 2
00cca4 a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00cca5 940e 41b4 	CALL _TIMER_checkTimerExceed
00cca7 9730      	SBIW R30,0
00cca8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B2:
00cca9 91ec      	LD   R30,X
00ccaa e6a4      	LDI  R26,LOW(100)
00ccab 9fea      	MUL  R30,R26
00ccac 01b0      	MOVW R22,R0
00ccad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B3:
00ccae 81e1      	LDD  R30,Z+1
00ccaf e0aa      	LDI  R26,LOW(10)
00ccb0 9fea      	MUL  R30,R26
00ccb1 01f0      	MOVW R30,R0
00ccb2 01db      	MOVW R26,R22
00ccb3 0fae      	ADD  R26,R30
00ccb4 1fbf      	ADC  R27,R31
00ccb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B4:
00ccb6 81e2      	LDD  R30,Z+2
00ccb7 e0f0      	LDI  R31,0
00ccb8 0fea      	ADD  R30,R26
00ccb9 1ffb      	ADC  R31,R27
00ccba 940e e201 	CALL __CWD1
00ccbc 940e e324 	CALL __PUTPARD1
00ccbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B5:
                +
00ccbf 01fe     +MOVW R30 , R28
00ccc0 5ce1     +SUBI R30 , LOW ( - 63 )
00ccc1 4fff     +SBCI R31 , HIGH ( - 63 )
00ccc2 9001     +LD R0 , Z +
00ccc3 81f0     +LD R31 , Z
00ccc4 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00ccc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B6:
00ccc6 81e3      	LDD  R30,Z+3
00ccc7 e6a4      	LDI  R26,LOW(100)
00ccc8 9fea      	MUL  R30,R26
00ccc9 01b0      	MOVW R22,R0
00ccca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B7:
00cccb 81e4      	LDD  R30,Z+4
00cccc e0aa      	LDI  R26,LOW(10)
00cccd 9fea      	MUL  R30,R26
00ccce 01f0      	MOVW R30,R0
00cccf 01db      	MOVW R26,R22
00ccd0 0fae      	ADD  R26,R30
00ccd1 1fbf      	ADC  R27,R31
00ccd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B8:
00ccd3 81e5      	LDD  R30,Z+5
00ccd4 e0f0      	LDI  R31,0
00ccd5 0fea      	ADD  R30,R26
00ccd6 1ffb      	ADC  R31,R27
00ccd7 940e e201 	CALL __CWD1
00ccd9 940e e324 	CALL __PUTPARD1
00ccdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B9:
                +
00ccdc 01fe     +MOVW R30 , R28
00ccdd 5bed     +SUBI R30 , LOW ( - 67 )
00ccde 4fff     +SBCI R31 , HIGH ( - 67 )
00ccdf 9001     +LD R0 , Z +
00cce0 81f0     +LD R31 , Z
00cce1 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00cce2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BA:
00cce3 81e6      	LDD  R30,Z+6
00cce4 e6a4      	LDI  R26,LOW(100)
00cce5 9fea      	MUL  R30,R26
00cce6 01b0      	MOVW R22,R0
00cce7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BB:
00cce8 81e7      	LDD  R30,Z+7
00cce9 e0aa      	LDI  R26,LOW(10)
00ccea 9fea      	MUL  R30,R26
00cceb 01f0      	MOVW R30,R0
00ccec 01db      	MOVW R26,R22
00cced 0fae      	ADD  R26,R30
00ccee 1fbf      	ADC  R27,R31
00ccef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1BC:
00ccf0 0fea      	ADD  R30,R26
00ccf1 1ffb      	ADC  R31,R27
00ccf2 940e e201 	CALL __CWD1
00ccf4 940e e324 	CALL __PUTPARD1
00ccf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BD:
                +
00ccf7 01fe     +MOVW R30 , R28
00ccf8 5be9     +SUBI R30 , LOW ( - 71 )
00ccf9 4fff     +SBCI R31 , HIGH ( - 71 )
00ccfa 9001     +LD R0 , Z +
00ccfb 81f0     +LD R31 , Z
00ccfc 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00ccfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BE:
00ccfe 85e1      	LDD  R30,Z+9
00ccff e6a4      	LDI  R26,LOW(100)
00cd00 9fea      	MUL  R30,R26
00cd01 01b0      	MOVW R22,R0
00cd02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BF:
00cd03 85e2      	LDD  R30,Z+10
00cd04 e0aa      	LDI  R26,LOW(10)
00cd05 9fea      	MUL  R30,R26
00cd06 01f0      	MOVW R30,R0
00cd07 01db      	MOVW R26,R22
00cd08 0fae      	ADD  R26,R30
00cd09 1fbf      	ADC  R27,R31
00cd0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C0:
00cd0b 85e3      	LDD  R30,Z+11
00cd0c e0f0      	LDI  R31,0
00cd0d cfe2      	RJMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C1:
                +
00cd0e 01fe     +MOVW R30 , R28
00cd0f 5be7     +SUBI R30 , LOW ( - 73 )
00cd10 4fff     +SBCI R31 , HIGH ( - 73 )
00cd11 9001     +LD R0 , Z +
00cd12 81f0     +LD R31 , Z
00cd13 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00cd14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C2:
                +
00cd15 01fe     +MOVW R30 , R28
00cd16 5be3     +SUBI R30 , LOW ( - 77 )
00cd17 4fff     +SBCI R31 , HIGH ( - 77 )
00cd18 9001     +LD R0 , Z +
00cd19 81f0     +LD R31 , Z
00cd1a 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00cd1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C3:
                +
00cd1c 01fe     +MOVW R30 , R28
00cd1d 5aef     +SUBI R30 , LOW ( - 81 )
00cd1e 4fff     +SBCI R31 , HIGH ( - 81 )
00cd1f 9001     +LD R0 , Z +
00cd20 81f0     +LD R31 , Z
00cd21 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00cd22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C4:
                +
00cd23 01fe     +MOVW R30 , R28
00cd24 5aeb     +SUBI R30 , LOW ( - 85 )
00cd25 4fff     +SBCI R31 , HIGH ( - 85 )
00cd26 9001     +LD R0 , Z +
00cd27 81f0     +LD R31 , Z
00cd28 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00cd29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C5:
                +
00cd2a 01fe     +MOVW R30 , R28
00cd2b 5ae9     +SUBI R30 , LOW ( - 87 )
00cd2c 4fff     +SBCI R31 , HIGH ( - 87 )
00cd2d 9001     +LD R0 , Z +
00cd2e 81f0     +LD R31 , Z
00cd2f 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00cd30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C6:
                +
00cd31 01fe     +MOVW R30 , R28
00cd32 5ae5     +SUBI R30 , LOW ( - 91 )
00cd33 4fff     +SBCI R31 , HIGH ( - 91 )
00cd34 9001     +LD R0 , Z +
00cd35 81f0     +LD R31 , Z
00cd36 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00cd37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C7:
                +
00cd38 01fe     +MOVW R30 , R28
00cd39 5ae1     +SUBI R30 , LOW ( - 95 )
00cd3a 4fff     +SBCI R31 , HIGH ( - 95 )
00cd3b 9001     +LD R0 , Z +
00cd3c 81f0     +LD R31 , Z
00cd3d 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00cd3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C8:
                +
00cd3f 01fe     +MOVW R30 , R28
00cd40 59ed     +SUBI R30 , LOW ( - 99 )
00cd41 4fff     +SBCI R31 , HIGH ( - 99 )
00cd42 9001     +LD R0 , Z +
00cd43 81f0     +LD R31 , Z
00cd44 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00cd45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C9:
                +
00cd46 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5360 ) )
00cd47 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5360 ) )
00cd48 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5360 ) )
00cd49 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5360 ) )
                 	__POINTD1FN _0x120000,5360
00cd4a 940e e324 	CALL __PUTPARD1
00cd4c 01fe      	MOVW R30,R28
00cd4d 963a      	ADIW R30,10
00cd4e 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CA:
00cd50 93fa      	ST   -Y,R31
00cd51 93ea      	ST   -Y,R30
00cd52 01fe      	MOVW R30,R28
00cd53 9638      	ADIW R30,8
00cd54 93fa      	ST   -Y,R31
00cd55 93ea      	ST   -Y,R30
00cd56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1CB:
00cd57 e0b0      	LDI  R27,0
00cd58 940c a70d 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CC:
                +
00cd5a 01fe     +MOVW R30 , R28
00cd5b 5bef     +SUBI R30 , LOW ( - 65 )
00cd5c 4fff     +SBCI R31 , HIGH ( - 65 )
00cd5d 9001     +LD R0 , Z +
00cd5e 81f0     +LD R31 , Z
00cd5f 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00cd60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CD:
                +
00cd61 e020     +LDI R18 , LOW ( 0 )
00cd62 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00cd63 e000     +LDI R16 , LOW ( 0 )
00cd64 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00cd65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1CE:
00cd66 01f9      	MOVW R30,R18
                +
00cd67 5f2f     +SUBI R18 , LOW ( - 1 )
00cd68 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cd69 85a8      	LDD  R26,Y+8
00cd6a 85b9      	LDD  R27,Y+8+1
00cd6b 0fae      	ADD  R26,R30
00cd6c 1fbf      	ADC  R27,R31
00cd6d 91ec      	LD   R30,X
00cd6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CF:
                +
00cd6f 81ac     +LDD R26 , Y + 4
00cd70 81bd     +LDD R27 , Y + 4 + 1
00cd71 9618     +ADIW R26 , 8
00cd72 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cd73 cff2      	RJMP SUBOPT_0x1CE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D0:
                +
00cd74 81ac     +LDD R26 , Y + 4
00cd75 81bd     +LDD R27 , Y + 4 + 1
00cd76 9619     +ADIW R26 , 9
00cd77 93ed     +ST X + , R30
00cd78 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00cd79 81ec      	LDD  R30,Y+4
00cd7a 81fd      	LDD  R31,Y+4+1
00cd7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D1:
00cd7c e0e1      	LDI  R30,LOW(1)
00cd7d e0f0      	LDI  R31,HIGH(1)
00cd7e 940e e21a 	CALL __MULW12U
00cd80 01df      	MOVW R26,R30
00cd81 940c a6d0 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D2:
00cd83 940e e2f0 	CALL __GETW1P
00cd85 170e      	CP   R16,R30
00cd86 071f      	CPC  R17,R31
00cd87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D3:
00cd88 01f8      	MOVW R30,R16
00cd89 0fea      	ADD  R30,R26
00cd8a 1ffb      	ADC  R31,R27
00cd8b 010f      	MOVW R0,R30
00cd8c 01f9      	MOVW R30,R18
00cd8d 0fe0      	ADD  R30,R16
00cd8e 1ff1      	ADC  R31,R17
00cd8f 85a8      	LDD  R26,Y+8
00cd90 85b9      	LDD  R27,Y+8+1
00cd91 cc07      	RJMP SUBOPT_0x131
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D4:
                +
00cd92 81ac     +LDD R26 , Y + 4
00cd93 81bd     +LDD R27 , Y + 4 + 1
00cd94 9618     +ADIW R26 , 8
00cd95 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cd96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1D5:
00cd97 e0f0      	LDI  R31,0
00cd98 940e e201 	CALL __CWD1
                +
00cd9a 7fef     +ANDI R30 , LOW ( 0xFF )
00cd9b 70f0     +ANDI R31 , HIGH ( 0xFF )
00cd9c 7060     +ANDI R22 , BYTE3 ( 0xFF )
00cd9d 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00cd9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D6:
00cd9f 01df      	MOVW R26,R30
00cda0 01cb      	MOVW R24,R22
00cda1 e1e8      	LDI  R30,LOW(24)
00cda2 940e e1af 	CALL __LSLD12
00cda4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D7:
00cda5 01df      	MOVW R26,R30
00cda6 01cb      	MOVW R24,R22
00cda7 e0e8      	LDI  R30,LOW(8)
00cda8 940e e1af 	CALL __LSLD12
00cdaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D8:
00cdab 940e e195 	CALL __ORD12
                +
00cdad 81ac     +LDD R26 , Y + 4
00cdae 81bd     +LDD R27 , Y + 4 + 1
00cdaf 9619     +ADIW R26 , 9
00cdb0 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00cdb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D9:
00cdb3 01f9      	MOVW R30,R18
                +
00cdb4 5f2f     +SUBI R18 , LOW ( - 1 )
00cdb5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cdb6 ceb1      	RJMP SUBOPT_0x1A8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DA:
00cdb7 940e e324 	CALL __PUTPARD1
00cdb9 85e8      	LDD  R30,Y+8
00cdba 85f9      	LDD  R31,Y+8+1
00cdbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DB:
00cdbc 93ba      	ST   -Y,R27
00cdbd 93aa      	ST   -Y,R26
00cdbe ce8e      	RJMP SUBOPT_0x1A3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1DC:
00cdbf 940e a6d0 	CALL _malloc
00cdc1 83ee      	STD  Y+6,R30
00cdc2 83ff      	STD  Y+6+1,R31
00cdc3 9730      	SBIW R30,0
00cdc4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1DD:
                +
00cdc5 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00cdc6 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00cdc7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00cdc8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00cdc9 cba0      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1DE:
00cdca 85ea      	LDD  R30,Y+10
00cdcb 85fb      	LDD  R31,Y+10+1
00cdcc 93fa      	ST   -Y,R31
00cdcd 93ea      	ST   -Y,R30
00cdce ce29      	RJMP SUBOPT_0x193
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DF:
00cdcf 940e a70d 	CALL _memcpy
00cdd1 ccd3      	RJMP SUBOPT_0x15D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E0:
00cdd2 e0a8      	LDI  R26,LOW(8)
00cdd3 e0b0      	LDI  R27,0
00cdd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E1:
                +
00cdd5 e6ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00cdd6 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00cdd7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00cdd8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00cdd9 cb90      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E2:
                +
00cdda e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00cddb e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00cddc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00cddd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00cdde cb8b      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E3:
                +
00cddf e2e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00cde0 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00cde1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00cde2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00cde3 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E4:
00cde5 85ec      	LDD  R30,Y+12
00cde6 e0f0      	LDI  R31,0
00cde7 70ef      	ANDI R30,LOW(0xF)
00cde8 70f0      	ANDI R31,HIGH(0xF)
00cde9 87e8      	STD  Y+8,R30
00cdea 87f9      	STD  Y+8+1,R31
00cdeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E5:
00cdec e0b0      	LDI  R27,0
00cded cfd1      	RJMP SUBOPT_0x1DC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E6:
00cdee 940e e324 	CALL __PUTPARD1
00cdf0 85ec      	LDD  R30,Y+12
00cdf1 85fd      	LDD  R31,Y+12+1
00cdf2 ca0d      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E7:
00cdf3 940e e324 	CALL __PUTPARD1
                +
00cdf5 e0e3     +LDI R30 , LOW ( 0x3 )
00cdf6 e0f0     +LDI R31 , HIGH ( 0x3 )
00cdf7 e060     +LDI R22 , BYTE3 ( 0x3 )
00cdf8 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00cdf9 cdd5      	RJMP SUBOPT_0x18A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E8:
                +
00cdfa ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00cdfb e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00cdfc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00cdfd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00cdfe cb66      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E9:
                +
00cdff e6e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00ce00 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00ce01 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00ce02 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00ce03 cb61      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EA:
                +
00ce04 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00ce05 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00ce06 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00ce07 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00ce08 cb61      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EB:
                +
00ce09 ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00ce0a e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00ce0b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00ce0c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00ce0d 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EC:
00ce0f e2e2      	LDI  R30,LOW(34)
00ce10 e0f0      	LDI  R31,HIGH(34)
00ce11 17e0      	CP   R30,R16
00ce12 07f1      	CPC  R31,R17
00ce13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1ED:
                +
00ce14 81a1     +LDD R26 , Z + 1
00ce15 81b2     +LDD R27 , Z + 1 + 1
00ce16 8183     +LDD R24 , Z + 1 + 2
00ce17 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00ce18 ce0a      	RJMP SUBOPT_0x19A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EE:
                +
00ce19 e4ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00ce1a e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00ce1b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00ce1c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00ce1d 940e e324 	CALL __PUTPARD1
00ce1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1EF:
00ce20 85ea      	LDD  R30,Y+10
00ce21 e0f0      	LDI  R31,0
00ce22 70ef      	ANDI R30,LOW(0xF)
00ce23 70f0      	ANDI R31,HIGH(0xF)
00ce24 01af      	MOVW R20,R30
00ce25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F0:
00ce26 935a      	ST   -Y,R21
00ce27 934a      	ST   -Y,R20
00ce28 85aa      	LDD  R26,Y+10
00ce29 85bb      	LDD  R27,Y+10+1
00ce2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F1:
00ce2b 940e e324 	CALL __PUTPARD1
00ce2d 940c c412 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F2:
00ce2f 01fe      	MOVW R30,R28
00ce30 9632      	ADIW R30,2
00ce31 93fa      	ST   -Y,R31
00ce32 93ea      	ST   -Y,R30
00ce33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F3:
00ce34 d877      	RCALL SUBOPT_0xB3
00ce35 940e e37d 	CALL __CPD10
00ce37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F4:
00ce38 940e e324 	CALL __PUTPARD1
00ce3a d87b      	RCALL SUBOPT_0xB5
00ce3b cd93      	RJMP SUBOPT_0x18A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F5:
00ce3c 940e e329 	CALL __PUTPARD2
00ce3e 931a      	ST   -Y,R17
00ce3f 930a      	ST   -Y,R16
00ce40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F6:
00ce41 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00ce42 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00ce43 e0a0      	LDI  R26,LOW(0)
00ce44 83a0      	STD  Z+0,R26
00ce45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F7:
00ce46 940e e324 	CALL __PUTPARD1
00ce48 85ec      	LDD  R30,Y+12
00ce49 940c c4a6 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F8:
00ce4b e0ab      	LDI  R26,LOW(11)
00ce4c 9f1a      	MUL  R17,R26
00ce4d 01f0      	MOVW R30,R0
                +
00ce4e 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00ce4f 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00ce50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1F9:
00ce51 01df      	MOVW R26,R30
00ce52 940e a6eb 	CALL _free
00ce54 e0ab      	LDI  R26,LOW(11)
00ce55 9f1a      	MUL  R17,R26
00ce56 01f0      	MOVW R30,R0
                +
00ce57 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00ce58 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00ce59 e0a0      	LDI  R26,LOW(0)
00ce5a e0b0      	LDI  R27,HIGH(0)
00ce5b 83a0      	STD  Z+0,R26
00ce5c 83b1      	STD  Z+1,R27
00ce5d e0ab      	LDI  R26,LOW(11)
00ce5e 9f1a      	MUL  R17,R26
00ce5f 01f0      	MOVW R30,R0
                +
00ce60 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00ce61 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00ce62 e0a0      	LDI  R26,LOW(0)
00ce63 83a0      	STD  Z+0,R26
00ce64 cfe6      	RJMP SUBOPT_0x1F8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1FA:
00ce65 e0a0      	LDI  R26,LOW(0)
00ce66 83a0      	STD  Z+0,R26
00ce67 e0ab      	LDI  R26,LOW(11)
00ce68 9f1a      	MUL  R17,R26
00ce69 01f0      	MOVW R30,R0
00ce6a cfd6      	RJMP SUBOPT_0x1F6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FB:
00ce6b e0ab      	LDI  R26,LOW(11)
00ce6c 9f1a      	MUL  R17,R26
00ce6d 01f0      	MOVW R30,R0
                +
00ce6e 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00ce6f 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00ce70 e0a0      	LDI  R26,LOW(0)
00ce71 e0b0      	LDI  R27,HIGH(0)
00ce72 83a0      	STD  Z+0,R26
00ce73 83b1      	STD  Z+1,R27
00ce74 e0ab      	LDI  R26,LOW(11)
00ce75 9f1a      	MUL  R17,R26
00ce76 01f0      	MOVW R30,R0
                +
00ce77 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00ce78 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00ce79 940e c317 	CALL SUBOPT_0x2C
00ce7b 940e e31f 	CALL __PUTDZ20
00ce7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FC:
00ce7e 940e e324 	CALL __PUTPARD1
00ce80 81ed      	LDD  R30,Y+5
00ce81 940c c4a6 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FD:
00ce83 2fe1      	MOV  R30,R17
00ce84 27ff      	CLR  R31
00ce85 2766      	CLR  R22
00ce86 2777      	CLR  R23
00ce87 940c c2ce 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FE:
00ce89 e6e4      	LDI  R30,LOW(100)
00ce8a e0f0      	LDI  R31,HIGH(100)
00ce8b 940e e2b1 	CALL __MODW21
00ce8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FF:
00ce8e e0e0      	LDI  R30,LOW(0)
                +
00ce8f 83ee     +STD Y + 6 , R30
00ce90 83ef     +STD Y + 6 + 1 , R30
00ce91 87e8     +STD Y + 6 + 2 , R30
00ce92 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
00ce93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x200:
00ce94 940e c45d 	CALL SUBOPT_0x59
00ce96 2766      	CLR  R22
00ce97 2777      	CLR  R23
00ce98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:72 WORDS
                 SUBOPT_0x201:
00ce99 9631      	ADIW R30,1
00ce9a 940e e201 	CALL __CWD1
00ce9c 940e e324 	CALL __PUTPARD1
00ce9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x202:
00ce9f 81ea      	LDD  R30,Y+2
00cea0 81fb      	LDD  R31,Y+2+1
00cea1 940c c33e 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x203:
00cea3 01df      	MOVW R26,R30
00cea4 01cb      	MOVW R24,R22
00cea5 01f8      	MOVW R30,R16
00cea6 940e e201 	CALL __CWD1
00cea8 940e e03b 	CALL __CDF1
00ceaa 940e e33b 	CALL __SWAPD12
00ceac 940e e06e 	CALL __SUBF12
00ceae 01df      	MOVW R26,R30
00ceaf 01cb      	MOVW R24,R22
00ceb0 940e a3e8 	CALL _fabs
00ceb2 01df      	MOVW R26,R30
00ceb3 01cb      	MOVW R24,R22
00ceb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x204:
00ceb5 01f8      	MOVW R30,R16
00ceb6 940e e201 	CALL __CWD1
00ceb8 940e e03b 	CALL __CDF1
00ceba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x205:
                +
00cebb e0a0     +LDI R26 , LOW ( 0x3F000000 )
00cebc e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00cebd e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00cebe e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00cebf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x206:
                +
00cec0 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00cec1 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00cec2 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00cec3 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00cec4 940e e0c5 	CALL __MULF12
00cec6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x207:
00cec7 e0e0      	LDI  R30,LOW(0)
00cec8 83e8      	ST   Y,R30
00cec9 83e9      	STD  Y+1,R30
00ceca 83ea      	STD  Y+2,R30
00cecb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x208:
00cecc 940e c6b6 	CALL SUBOPT_0xB5
00cece 940e e324 	CALL __PUTPARD1
00ced0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x209:
                +
00ced1 01de     +MOVW R26 , R28
00ced2 5aa2     +SUBI R26 , LOW ( - 94 )
00ced3 4fbf     +SBCI R27 , HIGH ( - 94 )
00ced4 900d     +LD R0 , X +
00ced5 91bc     +LD R27 , X
00ced6 2da0     +MOV R26 , R0
                 	__GETW2SX 94
00ced7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x20A:
00ced8 dff8      	RCALL SUBOPT_0x209
00ced9 940e 6c0e 	CALL _iUpdateSmoothlyADC
                +
00cedb eaac     +LDI R26 , LOW ( 0x3E5A1CAC )
00cedc e1bc     +LDI R27 , HIGH ( 0x3E5A1CAC )
00cedd e58a     +LDI R24 , BYTE3 ( 0x3E5A1CAC )
00cede e39e     +LDI R25 , BYTE4 ( 0x3E5A1CAC )
                 	__GETD2N 0x3E5A1CAC
00cedf 940e e075 	CALL __ADDF12
                +
00cee1 87e8     +STD Y + 8 , R30
00cee2 87f9     +STD Y + 8 + 1 , R31
00cee3 876a     +STD Y + 8 + 2 , R22
00cee4 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00cee5 940e c412 	CALL SUBOPT_0x4F
                +
00cee7 e4a2     +LDI R26 , LOW ( 0x3FD56042 )
00cee8 e6b0     +LDI R27 , HIGH ( 0x3FD56042 )
00cee9 ed85     +LDI R24 , BYTE3 ( 0x3FD56042 )
00ceea e39f     +LDI R25 , BYTE4 ( 0x3FD56042 )
                 	__GETD2N 0x3FD56042
00ceeb 940e e06e 	CALL __SUBF12
00ceed 940e c673 	CALL SUBOPT_0xA8
00ceef 940c c678 	JMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x20B:
                +
00cef1 e1e2     +LDI R30 , LOW ( 0xBFC08312 )
00cef2 e8f3     +LDI R31 , HIGH ( 0xBFC08312 )
00cef3 ec60     +LDI R22 , BYTE3 ( 0xBFC08312 )
00cef4 eb7f     +LDI R23 , BYTE4 ( 0xBFC08312 )
                 	__GETD1N 0xBFC08312
00cef5 940e e158 	CALL __CMPF12
00cef7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20C:
00cef8 dfd8      	RCALL SUBOPT_0x209
00cef9 940e 6b13 	CALL _updateSensorADC
                +
00cefb 01fe     +MOVW R30 , R28
00cefc 5ae2     +SUBI R30 , LOW ( - 94 )
00cefd 4fff     +SBCI R31 , HIGH ( - 94 )
00cefe 9001     +LD R0 , Z +
00ceff 81f0     +LD R31 , Z
00cf00 2de0     +MOV R30 , R0
                 	__GETW1SX 94
00cf01 940c c33e 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x20D:
                +
00cf03 01fe     +MOVW R30 , R28
00cf04 5ae2     +SUBI R30 , LOW ( - 94 )
00cf05 4fff     +SBCI R31 , HIGH ( - 94 )
00cf06 9001     +LD R0 , Z +
00cf07 81f0     +LD R31 , Z
00cf08 2de0     +MOV R30 , R0
                 	__GETW1SX 94
00cf09 940c c33e 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:101 WORDS
                 SUBOPT_0x20E:
                +
00cf0b 01fe     +MOVW R30 , R28
00cf0c 5ae2     +SUBI R30 , LOW ( - 94 )
00cf0d 4fff     +SBCI R31 , HIGH ( - 94 )
00cf0e 9001     +LD R0 , Z +
00cf0f 81f0     +LD R31 , Z
00cf10 2de0     +MOV R30 , R0
                 	__GETW1SX 94
00cf11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20F:
00cf12 dff8      	RCALL SUBOPT_0x20E
00cf13 e5a0      	LDI  R26,LOW(_t_S00D0004000)
00cf14 e1b5      	LDI  R27,HIGH(_t_S00D0004000)
00cf15 940e e1cb 	CALL __LSLW2
00cf17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x210:
                +
00cf18 e0a5     +LDI R26 , LOW ( 0x5 )
00cf19 e0b0     +LDI R27 , HIGH ( 0x5 )
00cf1a e080     +LDI R24 , BYTE3 ( 0x5 )
00cf1b e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00cf1c 940c 41ca 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x211:
00cf1e dfec      	RCALL SUBOPT_0x20E
00cf1f 59e7      	SUBI R30,LOW(-_steadyState_S00D0004000)
00cf20 4efa      	SBCI R31,HIGH(-_steadyState_S00D0004000)
00cf21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x212:
                +
00cf22 01de     +MOVW R26 , R28
00cf23 5aa4     +SUBI R26 , LOW ( - 92 )
00cf24 4fbf     +SBCI R27 , HIGH ( - 92 )
00cf25 900d     +LD R0 , X +
00cf26 91bc     +LD R27 , X
00cf27 2da0     +MOV R26 , R0
                 	__GETW2SX 92
00cf28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x213:
                +
00cf29 01fe     +MOVW R30 , R28
00cf2a 5ae4     +SUBI R30 , LOW ( - 92 )
00cf2b 4fff     +SBCI R31 , HIGH ( - 92 )
00cf2c 9001     +LD R0 , Z +
00cf2d 81f0     +LD R31 , Z
00cf2e 2de0     +MOV R30 , R0
                 	__GETW1SX 92
                +
00cf2f 8314     +STD Z + 4 , R17
                 	__PUTBZR 17,4
00cf30 efee      	LDI  R30,LOW(65534)
00cf31 efff      	LDI  R31,HIGH(65534)
00cf32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:137 WORDS
                 SUBOPT_0x214:
00cf33 e0f0      	LDI  R31,0
00cf34 30e1      	CPI  R30,LOW(0x1)
00cf35 e0a0      	LDI  R26,HIGH(0x1)
00cf36 07fa      	CPC  R31,R26
00cf37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x215:
00cf38 e0e0      	LDI  R30,LOW(0)
                +
00cf39 01de     +MOVW R26 , R28
00cf3a 5bac     +SUBI R26 , LOW ( - 68 )
00cf3b 4fbf     +SBCI R27 , HIGH ( - 68 )
00cf3c 93ed     +ST X + , R30
00cf3d 93ed     +ST X + , R30
00cf3e 93ed     +ST X + , R30
00cf3f 93ec     +ST X , R30
                 	__CLRD1SX 68
                +
00cf40 e020     +LDI R18 , LOW ( 0 )
00cf41 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00cf42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x216:
                +
00cf43 01de     +MOVW R26 , R28
00cf44 5aa2     +SUBI R26 , LOW ( - 94 )
00cf45 4fbf     +SBCI R27 , HIGH ( - 94 )
00cf46 91ac     +LD R26 , X
                 	__GETB2SX 94
00cf47 5fa8      	SUBI R26,-LOW(8)
00cf48 940e 4420 	CALL _read_adc
                +
00cf4a 01de     +MOVW R26 , R28
00cf4b 5bac     +SUBI R26 , LOW ( - 68 )
00cf4c 4fbf     +SBCI R27 , HIGH ( - 68 )
00cf4d 900d     +LD R0 , X +
00cf4e 901d     +LD R1 , X +
00cf4f 918d     +LD R24 , X +
00cf50 919c     +LD R25 , X
00cf51 01d0     +MOVW R26 , R0
                 	__GETD2SX 68
00cf52 2766      	CLR  R22
00cf53 2777      	CLR  R23
00cf54 940e e17c 	CALL __ADDD12
                +
00cf56 01de     +MOVW R26 , R28
00cf57 5bac     +SUBI R26 , LOW ( - 68 )
00cf58 4fbf     +SBCI R27 , HIGH ( - 68 )
00cf59 93ed     +ST X + , R30
00cf5a 93fd     +ST X + , R31
00cf5b 936d     +ST X + , R22
00cf5c 937c     +ST X , R23
                 	__PUTD1SX 68
00cf5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x217:
                +
00cf5e 01fe     +MOVW R30 , R28
00cf5f 5bec     +SUBI R30 , LOW ( - 68 )
00cf60 4fff     +SBCI R31 , HIGH ( - 68 )
00cf61 9001     +LD R0 , Z +
00cf62 9011     +LD R1 , Z +
00cf63 9161     +LD R22 , Z +
00cf64 8170     +LD R23 , Z
00cf65 01f0     +MOVW R30 , R0
                 	__GETD1SX 68
00cf66 940e e324 	CALL __PUTPARD1
00cf68 e1ae      	LDI  R26,LOW(30)
00cf69 e0b0      	LDI  R27,0
00cf6a 940e a117 	CALL _iAD595ADCToTemp
                +
00cf6c 8be8     +STD Y + 16 , R30
00cf6d 8bf9     +STD Y + 16 + 1 , R31
00cf6e 8b6a     +STD Y + 16 + 2 , R22
00cf6f 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00cf70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x218:
00cf71 df99      	RCALL SUBOPT_0x20E
00cf72 eeaa      	LDI  R26,LOW(_epTempRef1)
00cf73 e0b5      	LDI  R27,HIGH(_epTempRef1)
00cf74 940e e1cb 	CALL __LSLW2
00cf76 0fae      	ADD  R26,R30
00cf77 1fbf      	ADC  R27,R31
00cf78 940e e348 	CALL __EEPROMRDD
00cf7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x219:
00cf7b df8f      	RCALL SUBOPT_0x20E
00cf7c eda6      	LDI  R26,LOW(_epADCRef1)
00cf7d e0b5      	LDI  R27,HIGH(_epADCRef1)
00cf7e 940e e1cb 	CALL __LSLW2
00cf80 0fae      	ADD  R26,R30
00cf81 1fbf      	ADC  R27,R31
00cf82 940e e348 	CALL __EEPROMRDD
00cf84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21A:
00cf85 940e e33b 	CALL __SWAPD12
00cf87 940e e06e 	CALL __SUBF12
00cf89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21B:
00cf8a 940e e324 	CALL __PUTPARD1
00cf8c 940c c7a6 	JMP SUBOPT_0xDC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x21C:
00cf8e eeaa      	LDI  R26,LOW(_epTempRef1)
00cf8f e0b5      	LDI  R27,HIGH(_epTempRef1)
00cf90 940e e1cb 	CALL __LSLW2
00cf92 0fae      	ADD  R26,R30
00cf93 1fbf      	ADC  R27,R31
00cf94 940e e348 	CALL __EEPROMRDD
00cf96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21D:
00cf97 940e e324 	CALL __PUTPARD1
                +
00cf99 01fe     +MOVW R30 , R28
00cf9a 5be4     +SUBI R30 , LOW ( - 76 )
00cf9b 4fff     +SBCI R31 , HIGH ( - 76 )
00cf9c 9001     +LD R0 , Z +
00cf9d 9011     +LD R1 , Z +
00cf9e 9161     +LD R22 , Z +
00cf9f 8170     +LD R23 , Z
00cfa0 01f0     +MOVW R30 , R0
                 	__GETD1SX 76
00cfa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21E:
                +
00cfa2 89a8     +LDD R26 , Y + 16
00cfa3 89b9     +LDD R27 , Y + 16 + 1
00cfa4 898a     +LDD R24 , Y + 16 + 2
00cfa5 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00cfa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21F:
                +
00cfa7 eaaf     +LDI R26 , LOW ( 0xBDE425AF )
00cfa8 e2b5     +LDI R27 , HIGH ( 0xBDE425AF )
00cfa9 ee84     +LDI R24 , BYTE3 ( 0xBDE425AF )
00cfaa eb9d     +LDI R25 , BYTE4 ( 0xBDE425AF )
                 	__GETD2N 0xBDE425AF
00cfab 940e e0c5 	CALL __MULF12
00cfad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x220:
00cfae df5c      	RCALL SUBOPT_0x20E
00cfaf ebad      	LDI  R26,LOW(_epFactor_C)
00cfb0 e0b5      	LDI  R27,HIGH(_epFactor_C)
00cfb1 940e e1cb 	CALL __LSLW2
00cfb3 0fae      	ADD  R26,R30
00cfb4 1fbf      	ADC  R27,R31
00cfb5 940e e348 	CALL __EEPROMRDD
00cfb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x221:
                +
00cfb8 eea9     +LDI R26 , LOW ( 0x3A25EFE9 )
00cfb9 eebf     +LDI R27 , HIGH ( 0x3A25EFE9 )
00cfba e285     +LDI R24 , BYTE3 ( 0x3A25EFE9 )
00cfbb e39a     +LDI R25 , BYTE4 ( 0x3A25EFE9 )
                 	__GETD2N 0x3A25EFE9
00cfbc 940e e0c5 	CALL __MULF12
00cfbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x222:
                +
00cfbf eda5     +LDI R26 , LOW ( 0x3E2603D5 )
00cfc0 e0b3     +LDI R27 , HIGH ( 0x3E2603D5 )
00cfc1 e286     +LDI R24 , BYTE3 ( 0x3E2603D5 )
00cfc2 e39e     +LDI R25 , BYTE4 ( 0x3E2603D5 )
                 	__GETD2N 0x3E2603D5
00cfc3 940e e0c5 	CALL __MULF12
00cfc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x223:
00cfc6 df5b      	RCALL SUBOPT_0x212
00cfc7 940e e2ff 	CALL __PUTDP1
00cfc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x224:
00cfca 940e e004 	CALL __CFD1
00cfcc 940e e324 	CALL __PUTPARD1
00cfce 940c c51f 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x225:
                +
00cfd0 afec     +STD Y + 60 , R30
00cfd1 affd     +STD Y + 60 + 1 , R31
00cfd2 af6e     +STD Y + 60 + 2 , R22
00cfd3 af7f     +STD Y + 60 + 3 , R23
                 	__PUTD1S 60
00cfd4 df36      	RCALL SUBOPT_0x20E
00cfd5 e0a3      	LDI  R26,LOW(_epADCRef2)
00cfd6 e0b6      	LDI  R27,HIGH(_epADCRef2)
00cfd7 940e e1cb 	CALL __LSLW2
00cfd9 0fae      	ADD  R26,R30
00cfda 1fbf      	ADC  R27,R31
00cfdb 940e e348 	CALL __EEPROMRDD
00cfdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x226:
                +
00cfde abe8     +STD Y + 48 , R30
00cfdf abf9     +STD Y + 48 + 1 , R31
00cfe0 ab6a     +STD Y + 48 + 2 , R22
00cfe1 ab7b     +STD Y + 48 + 3 , R23
                 	__PUTD1S 48
00cfe2 df28      	RCALL SUBOPT_0x20E
00cfe3 e1a7      	LDI  R26,LOW(_epTempRef2)
00cfe4 e0b6      	LDI  R27,HIGH(_epTempRef2)
00cfe5 940e e1cb 	CALL __LSLW2
00cfe7 0fae      	ADD  R26,R30
00cfe8 1fbf      	ADC  R27,R31
00cfe9 940e e348 	CALL __EEPROMRDD
                +
00cfeb a7ec     +STD Y + 44 , R30
00cfec a7fd     +STD Y + 44 + 1 , R31
00cfed a76e     +STD Y + 44 + 2 , R22
00cfee a77f     +STD Y + 44 + 3 , R23
                 	__PUTD1S 44
00cfef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x227:
00cff0 df1a      	RCALL SUBOPT_0x20E
00cff1 eaa9      	LDI  R26,LOW(_epFactor_B)
00cff2 e0b5      	LDI  R27,HIGH(_epFactor_B)
00cff3 940e e1cb 	CALL __LSLW2
00cff5 0fae      	ADD  R26,R30
00cff6 1fbf      	ADC  R27,R31
00cff7 940e e348 	CALL __EEPROMRDD
00cff9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x228:
00cffa e3a0      	LDI  R26,LOW(_epADCRef3)
00cffb e0b6      	LDI  R27,HIGH(_epADCRef3)
00cffc 940e e1cb 	CALL __LSLW2
00cffe 0fae      	ADD  R26,R30
00cfff 1fbf      	ADC  R27,R31
00d000 940e e348 	CALL __EEPROMRDD
00d002 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x229:
00d003 e4a4      	LDI  R26,LOW(_epTempRef3)
00d004 e0b6      	LDI  R27,HIGH(_epTempRef3)
00d005 940e e1cb 	CALL __LSLW2
00d007 0fae      	ADD  R26,R30
00d008 1fbf      	ADC  R27,R31
00d009 940e e348 	CALL __EEPROMRDD
00d00b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x22A:
                +
00d00c adec     +LDD R30 , Y + 60
00d00d adfd     +LDD R31 , Y + 60 + 1
00d00e ad6e     +LDD R22 , Y + 60 + 2
00d00f ad7f     +LDD R23 , Y + 60 + 3
                 	__GETD1S 60
00d010 940e e324 	CALL __PUTPARD1
00d012 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22B:
                +
00d013 8da8     +LDD R26 , Y + 24
00d014 8db9     +LDD R27 , Y + 24 + 1
00d015 8d8a     +LDD R24 , Y + 24 + 2
00d016 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00d017 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22C:
                +
00d018 89ac     +LDD R26 , Y + 20
00d019 89bd     +LDD R27 , Y + 20 + 1
00d01a 898e     +LDD R24 , Y + 20 + 2
00d01b 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00d01c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22D:
00d01d e9a5      	LDI  R26,LOW(_epFactor_A)
00d01e e0b5      	LDI  R27,HIGH(_epFactor_A)
00d01f 940e e1cb 	CALL __LSLW2
00d021 0fae      	ADD  R26,R30
00d022 1fbf      	ADC  R27,R31
00d023 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22E:
00d024 81ae      	LDD  R26,Y+6
00d025 81bf      	LDD  R27,Y+6+1
00d026 0fae      	ADD  R26,R30
00d027 1fbf      	ADC  R27,R31
00d028 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22F:
00d029 0fae      	ADD  R26,R30
00d02a 1fbf      	ADC  R27,R31
00d02b 91ac      	LD   R26,X
00d02c 30a1      	CPI  R26,LOW(0x1)
00d02d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x230:
00d02e e0e5      	LDI  R30,LOW(5)
00d02f 940e e242 	CALL __MULB1W2U
                +
00d031 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00d032 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00d033 81e0      	LD   R30,Z
00d034 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x231:
00d035 27ff      	CLR  R31
00d036 2766      	CLR  R22
00d037 2777      	CLR  R23
00d038 940c c2ce 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x232:
00d03a 81ec      	LDD  R30,Y+4
00d03b 81fd      	LDD  R31,Y+4+1
00d03c 940c c33e 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x233:
                +
00d03e e0e0     +LDI R30 , LOW ( 0x0 )
00d03f e0f0     +LDI R31 , HIGH ( 0x0 )
00d040 e060     +LDI R22 , BYTE3 ( 0x0 )
00d041 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d042 940e e35c 	CALL __EEPROMWRD
00d044 81ec      	LDD  R30,Y+4
00d045 81fd      	LDD  R31,Y+4+1
00d046 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x234:
00d047 eaa9      	LDI  R26,LOW(_epFactor_B)
00d048 e0b5      	LDI  R27,HIGH(_epFactor_B)
00d049 940e e1cb 	CALL __LSLW2
00d04b 0fae      	ADD  R26,R30
00d04c 1fbf      	ADC  R27,R31
00d04d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x235:
00d04e ebad      	LDI  R26,LOW(_epFactor_C)
00d04f e0b5      	LDI  R27,HIGH(_epFactor_C)
00d050 940e e1cb 	CALL __LSLW2
00d052 0fea      	ADD  R30,R26
00d053 1ffb      	ADC  R31,R27
00d054 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x236:
                +
00d055 e0e0     +LDI R30 , LOW ( 0x0 )
00d056 e0f0     +LDI R31 , HIGH ( 0x0 )
00d057 e060     +LDI R22 , BYTE3 ( 0x0 )
00d058 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d059 940e e35c 	CALL __EEPROMWRD
00d05b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x237:
00d05c 89e8      	LDD  R30,Y+16
00d05d 89f9      	LDD  R31,Y+16+1
00d05e eda6      	LDI  R26,LOW(_epADCRef1)
00d05f e0b5      	LDI  R27,HIGH(_epADCRef1)
00d060 940e e1cb 	CALL __LSLW2
00d062 0fae      	ADD  R26,R30
00d063 1fbf      	ADC  R27,R31
00d064 940e e348 	CALL __EEPROMRDD
00d066 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x238:
00d067 89a8      	LDD  R26,Y+16
00d068 89b9      	LDD  R27,Y+16+1
00d069 5aa8      	SUBI R26,LOW(-_epCalType)
00d06a 4fb9      	SBCI R27,HIGH(-_epCalType)
00d06b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x239:
                +
00d06c e0e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 341 ) )
00d06d e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 341 ) )
00d06e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 341 ) )
00d06f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 341 ) )
                 	__POINTD1FN _0x1A0000,341
00d070 940c c7fb 	JMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23A:
00d072 ebad      	LDI  R26,LOW(_epFactor_C)
00d073 e0b5      	LDI  R27,HIGH(_epFactor_C)
00d074 940e e1cb 	CALL __LSLW2
00d076 0fae      	ADD  R26,R30
00d077 1fbf      	ADC  R27,R31
00d078 c9aa      	RJMP SUBOPT_0x14B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23B:
00d079 89e8      	LDD  R30,Y+16
00d07a 89f9      	LDD  R31,Y+16+1
00d07b eaa9      	LDI  R26,LOW(_epFactor_B)
00d07c e0b5      	LDI  R27,HIGH(_epFactor_B)
00d07d 940e e1cb 	CALL __LSLW2
00d07f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23C:
00d080 89e8      	LDD  R30,Y+16
00d081 89f9      	LDD  R31,Y+16+1
00d082 e1a7      	LDI  R26,LOW(_epTempRef2)
00d083 e0b6      	LDI  R27,HIGH(_epTempRef2)
00d084 940e e1cb 	CALL __LSLW2
00d086 0fae      	ADD  R26,R30
00d087 1fbf      	ADC  R27,R31
00d088 940e e348 	CALL __EEPROMRDD
00d08a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23D:
00d08b 89e8      	LDD  R30,Y+16
00d08c 89f9      	LDD  R31,Y+16+1
00d08d e0a3      	LDI  R26,LOW(_epADCRef2)
00d08e e0b6      	LDI  R27,HIGH(_epADCRef2)
00d08f 940e e1cb 	CALL __LSLW2
00d091 0fae      	ADD  R26,R30
00d092 1fbf      	ADC  R27,R31
00d093 940e e348 	CALL __EEPROMRDD
00d095 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23E:
                +
00d096 e4e9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 413 ) )
00d097 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 413 ) )
00d098 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 413 ) )
00d099 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 413 ) )
                 	__POINTD1FN _0x1A0000,413
00d09a 940c c7fb 	JMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23F:
00d09c e0a3      	LDI  R26,LOW(_epADCRef2)
00d09d e0b6      	LDI  R27,HIGH(_epADCRef2)
00d09e 940e e1cb 	CALL __LSLW2
00d0a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x240:
00d0a1 0fae      	ADD  R26,R30
00d0a2 1fbf      	ADC  R27,R31
00d0a3 940e e348 	CALL __EEPROMRDD
00d0a5 940e e324 	CALL __PUTPARD1
00d0a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x241:
00d0a8 e1a7      	LDI  R26,LOW(_epTempRef2)
00d0a9 e0b6      	LDI  R27,HIGH(_epTempRef2)
00d0aa 940e e1cb 	CALL __LSLW2
00d0ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x242:
00d0ad 940e e1cb 	CALL __LSLW2
00d0af 0fae      	ADD  R26,R30
00d0b0 1fbf      	ADC  R27,R31
00d0b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x243:
00d0b2 940e e324 	CALL __PUTPARD1
00d0b4 8de8      	LDD  R30,Y+24
00d0b5 8df9      	LDD  R31,Y+24+1
00d0b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x244:
00d0b7 940e c6ac 	CALL SUBOPT_0xB3
00d0b9 940e e324 	CALL __PUTPARD1
00d0bb e0e2      	LDI  R30,LOW(2)
00d0bc 93ea      	ST   -Y,R30
00d0bd 01de      	MOVW R26,R28
00d0be 961b      	ADIW R26,11
00d0bf 940c a46d 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x245:
                +
00d0c1 e1ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 622 ) )
00d0c2 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 622 ) )
00d0c3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 622 ) )
00d0c4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 622 ) )
                 	__POINTD1FN _0x1A0000,622
00d0c5 940e e324 	CALL __PUTPARD1
00d0c7 e080      	LDI  R24,0
00d0c8 940e c107 	CALL _sprintf
00d0ca 9626      	ADIW R28,6
00d0cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x246:
00d0cc 01de      	MOVW R26,R28
00d0cd 9616      	ADIW R26,6
00d0ce 940c a799 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x247:
00d0d0 53e0      	SUBI R30,LOW(48)
                +
00d0d1 89a8     +LDD R26 , Y + 16
00d0d2 89b9     +LDD R27 , Y + 16 + 1
00d0d3 9612     +ADIW R26 , 2
00d0d4 93ec     +ST X , R30
                 	__PUTB1SNS 16,2
00d0d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x248:
00d0d6 53e0      	SUBI R30,LOW(48)
                +
00d0d7 89a8     +LDD R26 , Y + 16
00d0d8 89b9     +LDD R27 , Y + 16 + 1
00d0d9 9613     +ADIW R26 , 3
00d0da 93ec     +ST X , R30
                 	__PUTB1SNS 16,3
00d0db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x249:
00d0dc 53e0      	SUBI R30,LOW(48)
                +
00d0dd 89a8     +LDD R26 , Y + 16
00d0de 89b9     +LDD R27 , Y + 16 + 1
00d0df 9614     +ADIW R26 , 4
00d0e0 93ec     +ST X , R30
                 	__PUTB1SNS 16,4
00d0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x24A:
00d0e2 53e0      	SUBI R30,LOW(48)
                +
00d0e3 89a8     +LDD R26 , Y + 16
00d0e4 89b9     +LDD R27 , Y + 16 + 1
00d0e5 9615     +ADIW R26 , 5
00d0e6 93ec     +ST X , R30
                 	__PUTB1SNS 16,5
00d0e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24B:
00d0e8 89a8      	LDD  R26,Y+16
00d0e9 89b9      	LDD  R27,Y+16+1
00d0ea 9611      	ADIW R26,1
00d0eb e0e0      	LDI  R30,LOW(0)
00d0ec 93ec      	ST   X,R30
00d0ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24C:
                +
00d0ee e5e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 936 ) )
00d0ef e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 936 ) )
00d0f0 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 936 ) )
00d0f1 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 936 ) )
                 	__POINTD1FN _0x1A0000,936
00d0f2 940e e324 	CALL __PUTPARD1
00d0f4 01fe      	MOVW R30,R28
00d0f5 963a      	ADIW R30,10
00d0f6 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24D:
00d0f8 93ba      	ST   -Y,R27
00d0f9 93aa      	ST   -Y,R26
00d0fa 9764      	SBIW R28,20
00d0fb e184      	LDI  R24,20
00d0fc e0a0      	LDI  R26,LOW(0)
00d0fd e0b0      	LDI  R27,HIGH(0)
00d0fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24E:
00d0ff 940e e324 	CALL __PUTPARD1
00d101 8dee      	LDD  R30,Y+30
00d102 8dff      	LDD  R31,Y+30+1
00d103 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24F:
00d104 9fea      	MUL  R30,R26
00d105 01f0      	MOVW R30,R0
00d106 940e e201 	CALL __CWD1
00d108 940e e03b 	CALL __CDF1
                +
00d10a 89aa     +LDD R26 , Y + 18
00d10b 89bb     +LDD R27 , Y + 18 + 1
00d10c 898c     +LDD R24 , Y + 18 + 2
00d10d 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00d10e 940e e075 	CALL __ADDF12
                +
00d110 8bea     +STD Y + 18 , R30
00d111 8bfb     +STD Y + 18 + 1 , R31
00d112 8b6c     +STD Y + 18 + 2 , R22
00d113 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00d114 89ee      	LDD  R30,Y+22
00d115 89ff      	LDD  R31,Y+22+1
00d116 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x250:
                +
00d117 89aa     +LDD R26 , Y + 18
00d118 89bb     +LDD R27 , Y + 18 + 1
00d119 898c     +LDD R24 , Y + 18 + 2
00d11a 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00d11b 940e e075 	CALL __ADDF12
                +
00d11d 8bea     +STD Y + 18 , R30
00d11e 8bfb     +STD Y + 18 + 1 , R31
00d11f 8b6c     +STD Y + 18 + 2 , R22
00d120 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00d121 89ee      	LDD  R30,Y+22
00d122 89ff      	LDD  R31,Y+22+1
00d123 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x251:
00d124 e0f0      	LDI  R31,0
00d125 940e e201 	CALL __CWD1
00d127 940e e03b 	CALL __CDF1
00d129 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x252:
                +
00d12a 89aa     +LDD R26 , Y + 18
00d12b 89bb     +LDD R27 , Y + 18 + 1
00d12c 898c     +LDD R24 , Y + 18 + 2
00d12d 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00d12e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x253:
                +
00d12f 8bea     +STD Y + 18 , R30
00d130 8bfb     +STD Y + 18 + 1 , R31
00d131 8b6c     +STD Y + 18 + 2 , R22
00d132 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00d133 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x254:
00d134 940e e201 	CALL __CWD1
00d136 940e e324 	CALL __PUTPARD1
00d138 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x255:
                +
00d139 e4a2     +LDI R26 , LOW ( 0x3FD56042 )
00d13a e6b0     +LDI R27 , HIGH ( 0x3FD56042 )
00d13b ed85     +LDI R24 , BYTE3 ( 0x3FD56042 )
00d13c e39f     +LDI R25 , BYTE4 ( 0x3FD56042 )
                 	__GETD2N 0x3FD56042
00d13d 940e e06e 	CALL __SUBF12
00d13f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x256:
                +
00d140 87ea     +STD Y + 10 , R30
00d141 87fb     +STD Y + 10 + 1 , R31
00d142 876c     +STD Y + 10 + 2 , R22
00d143 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d144 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x257:
00d145 8dea      	LDD  R30,Y+26
00d146 8dfb      	LDD  R31,Y+26+1
00d147 eda6      	LDI  R26,LOW(_epADCRef1)
00d148 e0b5      	LDI  R27,HIGH(_epADCRef1)
00d149 940e e1cb 	CALL __LSLW2
00d14b 0fea      	ADD  R30,R26
00d14c 1ffb      	ADC  R31,R27
00d14d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x258:
00d14e 010f      	MOVW R0,R30
00d14f 8dea      	LDD  R30,Y+26
00d150 8dfb      	LDD  R31,Y+26+1
00d151 940c c33e 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x259:
00d153 940e e1cb 	CALL __LSLW2
00d155 0fae      	ADD  R26,R30
00d156 1fbf      	ADC  R27,R31
00d157 940e c77e 	CALL SUBOPT_0xD4
00d159 940e e35c 	CALL __EEPROMWRD
00d15b 8daa      	LDD  R26,Y+26
00d15c 8dbb      	LDD  R27,Y+26+1
00d15d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25A:
00d15e 940e e36c 	CALL __EEPROMWRB
00d160 8daa      	LDD  R26,Y+26
00d161 8dbb      	LDD  R27,Y+26+1
00d162 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25B:
00d163 e0e0      	LDI  R30,LOW(0)
                +
00d164 87ee     +STD Y + 14 , R30
00d165 87ef     +STD Y + 14 + 1 , R30
00d166 8be8     +STD Y + 14 + 2 , R30
00d167 8be9     +STD Y + 14 + 3 , R30
                 	__CLRD1S 14
                +
00d168 e000     +LDI R16 , LOW ( 0 )
00d169 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00d16a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x25C:
00d16b 8daa      	LDD  R26,Y+26
00d16c 5fa8      	SUBI R26,-LOW(8)
00d16d 940e 4420 	CALL _read_adc
                +
00d16f 85ae     +LDD R26 , Y + 14
00d170 85bf     +LDD R27 , Y + 14 + 1
00d171 8988     +LDD R24 , Y + 14 + 2
00d172 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00d173 2766      	CLR  R22
00d174 2777      	CLR  R23
00d175 940e e17c 	CALL __ADDD12
                +
00d177 87ee     +STD Y + 14 , R30
00d178 87ff     +STD Y + 14 + 1 , R31
00d179 8b68     +STD Y + 14 + 2 , R22
00d17a 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00d17b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25D:
00d17c 940e c484 	CALL SUBOPT_0x60
00d17e 940e e324 	CALL __PUTPARD1
00d180 e1ae      	LDI  R26,LOW(30)
00d181 e0b0      	LDI  R27,0
00d182 940c a117 	JMP  _iAD595ADCToTemp
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25E:
00d184 8dea      	LDD  R30,Y+26
00d185 8dfb      	LDD  R31,Y+26+1
00d186 e3a0      	LDI  R26,LOW(_epADCRef3)
00d187 e0b6      	LDI  R27,HIGH(_epADCRef3)
00d188 940e e1cb 	CALL __LSLW2
00d18a 0fea      	ADD  R30,R26
00d18b 1ffb      	ADC  R31,R27
00d18c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25F:
00d18d 01f5      	MOVW R30,R10
00d18e e0aa      	LDI  R26,LOW(10)
00d18f e0b0      	LDI  R27,HIGH(10)
00d190 940e e21a 	CALL __MULW12U
00d192 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x260:
00d193 940e c45d 	CALL SUBOPT_0x59
00d195 940e e31f 	CALL __PUTDZ20
00d197 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x261:
00d198 940e e31f 	CALL __PUTDZ20
00d19a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x262:
00d19b e0ea      	LDI  R30,LOW(10)
00d19c e0f0      	LDI  R31,HIGH(10)
00d19d 940e e2b1 	CALL __MODW21
00d19f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x263:
00d1a0 01f6      	MOVW R30,R12
00d1a1 e0aa      	LDI  R26,LOW(10)
00d1a2 e0b0      	LDI  R27,HIGH(10)
00d1a3 940e e21a 	CALL __MULW12U
00d1a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x264:
00d1a6 01df      	MOVW R26,R30
00d1a7 940e e2f4 	CALL __GETD1P
00d1a9 81ac      	LDD  R26,Y+4
00d1aa 81bd      	LDD  R27,Y+4+1
00d1ab 940e e2ff 	CALL __PUTDP1
00d1ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x265:
00d1ae 93e0 1483 	STS  _batteryVolt,R30
00d1b0 93f0 1484 	STS  _batteryVolt+1,R31
00d1b2 9360 1485 	STS  _batteryVolt+2,R22
00d1b4 9370 1486 	STS  _batteryVolt+3,R23
00d1b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x266:
                +
00d1b7 91e0 136b+LDS R30 , _env_config + ( 6 )
00d1b9 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00d1bb 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00d1bd 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00d1bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x267:
00d1c0 70e4      	ANDI R30,LOW(0x4)
00d1c1 e0f0      	LDI  R31,0
00d1c2 940e e1d4 	CALL __ASRW2
00d1c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x268:
00d1c5 91e0 146b 	LDS  R30,_sdFreeSpace
00d1c7 91f0 146c 	LDS  R31,_sdFreeSpace+1
00d1c9 9160 146d 	LDS  R22,_sdFreeSpace+2
00d1cb 9170 146e 	LDS  R23,_sdFreeSpace+3
00d1cd 940e e37d 	CALL __CPD10
00d1cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x269:
00d1d0 81e8      	LD   R30,Y
00d1d1 81f9      	LDD  R31,Y+1
00d1d2 59e1      	SUBI R30,LOW(-_sensorStatus)
00d1d3 4efb      	SBCI R31,HIGH(-_sensorStatus)
00d1d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26A:
00d1d5 81ea      	LDD  R30,Y+2
00d1d6 81fb      	LDD  R31,Y+2+1
00d1d7 51e2      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00d1d8 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00d1d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26B:
00d1da 81ea      	LDD  R30,Y+2
00d1db 81fb      	LDD  R31,Y+2+1
00d1dc edaa      	LDI  R26,LOW(_t_S00F0005000)
00d1dd e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00d1de 940e e1cb 	CALL __LSLW2
00d1e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26C:
00d1e1 e1ed      	LDI  R30,LOW(29)
00d1e2 940e e242 	CALL __MULB1W2U
                +
00d1e4 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00d1e5 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00d1e6 01df      	MOVW R26,R30
00d1e7 940c c2bf 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x26D:
00d1e9 81aa      	LDD  R26,Y+2
00d1ea 81bb      	LDD  R27,Y+2+1
00d1eb 58ac      	SUBI R26,LOW(-_dataStatus)
00d1ec 4ebb      	SBCI R27,HIGH(-_dataStatus)
00d1ed 91ec      	LD   R30,X
00d1ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26E:
00d1ef 81ea      	LDD  R30,Y+2
00d1f0 81fb      	LDD  R31,Y+2+1
00d1f1 50ed      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00d1f2 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00d1f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26F:
00d1f4 e1ed      	LDI  R30,LOW(29)
00d1f5 940e e242 	CALL __MULB1W2U
                +
00d1f7 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00d1f8 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00d1f9 01df      	MOVW R26,R30
00d1fa 940c c2bf 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x270:
00d1fc 940e e1cb 	CALL __LSLW2
00d1fe 940c c2ba 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x271:
00d200 940e e1cb 	CALL __LSLW2
00d202 940c c2af 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x272:
                +
00d204 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00d205 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00d206 0fe0      	ADD  R30,R16
00d207 1ff1      	ADC  R31,R17
00d208 81e0      	LD   R30,Z
00d209 30e0      	CPI  R30,0
00d20a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x273:
00d20b 81aa      	LDD  R26,Y+2
00d20c 81bb      	LDD  R27,Y+2+1
00d20d 01cd      	MOVW R24,R26
00d20e 916d      	LD   R22,X+
00d20f 917c      	LD   R23,X
00d210 e0e4      	LDI  R30,LOW(4)
00d211 e0f0      	LDI  R31,HIGH(4)
00d212 1be0      	SUB  R30,R16
00d213 0bf1      	SBC  R31,R17
00d214 e0a1      	LDI  R26,LOW(1)
00d215 e0b0      	LDI  R27,HIGH(1)
00d216 940e e1a6 	CALL __LSLW12
00d218 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x274:
00d219 91a0 167c 	LDS  R26,_last_wr_eventQ
00d21b 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00d21d e0e6      	LDI  R30,LOW(6)
00d21e 940e e242 	CALL __MULB1W2U
00d220 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x275:
00d221 91a0 167e 	LDS  R26,_last_rd_eventQ
00d223 91b0 167f 	LDS  R27,_last_rd_eventQ+1
00d225 e0e6      	LDI  R30,LOW(6)
00d226 940e e242 	CALL __MULB1W2U
00d228 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x276:
00d229 81e0      	LD   R30,Z
00d22a 81a8      	LD   R26,Y
00d22b 81b9      	LDD  R27,Y+1
00d22c 93ec      	ST   X,R30
00d22d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x277:
00d22e 940e e39b 	CALL __SAVELOCR4
                +
00d230 e000     +LDI R16 , LOW ( 0 )
00d231 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00d232 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x278:
00d233 0fa0      	ADD  R26,R16
00d234 1fb1      	ADC  R27,R17
00d235 91ec      	LD   R30,X
00d236 30e0      	CPI  R30,0
00d237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x279:
00d238 93fa      	ST   -Y,R31
00d239 93ea      	ST   -Y,R30
                +
00d23a e0a3     +LDI R26 , LOW ( 0x3 )
00d23b e0b0     +LDI R27 , HIGH ( 0x3 )
00d23c e080     +LDI R24 , BYTE3 ( 0x3 )
00d23d e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00d23e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27A:
00d23f 81a8      	LD   R26,Y
00d240 81b9      	LDD  R27,Y+1
00d241 93ec      	ST   X,R30
00d242 e0e0      	LDI  R30,LOW(0)
00d243 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27B:
                +
00d244 91a0 136b+LDS R26 , _env_config + ( 6 )
00d246 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00d248 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00d24a 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00d24c 940e e389 	CALL __CPD02
00d24e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27C:
00d24f 81a8      	LD   R26,Y
00d250 81b9      	LDD  R27,Y+1
00d251 e0e0      	LDI  R30,LOW(0)
00d252 93ec      	ST   X,R30
00d253 e0e1      	LDI  R30,LOW(1)
00d254 e0f0      	LDI  R31,HIGH(1)
00d255 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27D:
                +
00d256 91a0 1375+LDS R26 , _env_config + ( 16 )
00d258 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00d25a 940e e381 	CALL __CPW02
00d25c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27E:
00d25d 81ea      	LDD  R30,Y+2
00d25e 81fb      	LDD  R31,Y+2+1
00d25f 58e4      	SUBI R30,LOW(-_dinStatus)
00d260 4efb      	SBCI R31,HIGH(-_dinStatus)
00d261 81a0      	LD   R26,Z
00d262 81ea      	LDD  R30,Y+2
00d263 81fb      	LDD  R31,Y+2+1
00d264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27F:
00d265 81ea      	LDD  R30,Y+2
00d266 81fb      	LDD  R31,Y+2+1
00d267 55e0      	SUBI R30,LOW(-_t_flag_S0110006000)
00d268 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00d269 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x280:
00d26a 81ea      	LDD  R30,Y+2
00d26b 81fb      	LDD  R31,Y+2+1
00d26c 58e4      	SUBI R30,LOW(-_dinStatus)
00d26d 4efb      	SBCI R31,HIGH(-_dinStatus)
00d26e 81e0      	LD   R30,Z
00d26f 93ec      	ST   X,R30
00d270 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x281:
00d271 93ba      	ST   -Y,R27
00d272 93aa      	ST   -Y,R26
00d273 81ea      	LDD  R30,Y+2
00d274 81fb      	LDD  R31,Y+2+1
00d275 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x282:
00d276 81ea      	LDD  R30,Y+2
00d277 81fb      	LDD  R31,Y+2+1
00d278 59e1      	SUBI R30,LOW(-_sensorStatus)
00d279 4efb      	SBCI R31,HIGH(-_sensorStatus)
00d27a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x283:
00d27b 81ea      	LDD  R30,Y+2
00d27c 81fb      	LDD  R31,Y+2+1
00d27d 53e8      	SUBI R30,LOW(-_t_flag_S0110007000)
00d27e 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00d27f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x284:
00d280 81ea      	LDD  R30,Y+2
00d281 81fb      	LDD  R31,Y+2+1
00d282 eba4      	LDI  R26,LOW(_t_S0110007000)
00d283 e1b6      	LDI  R27,HIGH(_t_S0110007000)
00d284 cf77      	RJMP SUBOPT_0x270
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x285:
00d285 81ea      	LDD  R30,Y+2
00d286 81fb      	LDD  R31,Y+2+1
00d287 51ea      	SUBI R30,LOW(-_t_flag_S0110008000)
00d288 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00d289 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x286:
00d28a e088      	LDI  R24,8
00d28b 940e 8007 	CALL _printOLED
00d28d 962c      	ADIW R28,12
00d28e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x287:
                +
00d28f e0a5     +LDI R26 , 5
00d290 9fa0     +MUL R26 , R16
00d291 01f0     +MOVW R30 , R0
00d292 9fa1     +MUL R26 , R17
00d293 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00d294 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x288:
00d295 940e e324 	CALL __PUTPARD1
00d297 01f8      	MOVW R30,R16
00d298 cc00      	RJMP SUBOPT_0x201
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x289:
00d299 940e e324 	CALL __PUTPARD1
00d29b cfee      	RJMP SUBOPT_0x286
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 118 TIMES, CODE SIZE REDUCTION:231 WORDS
                 SUBOPT_0x28A:
00d29c e084      	LDI  R24,4
00d29d 940e 8007 	CALL _printOLED
00d29f 9628      	ADIW R28,8
00d2a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28B:
00d2a1 940e c5ab 	CALL SUBOPT_0x8C
                +
00d2a3 e0e0     +LDI R30 , LOW ( 0x40400000 )
00d2a4 e0f0     +LDI R31 , HIGH ( 0x40400000 )
00d2a5 e460     +LDI R22 , BYTE3 ( 0x40400000 )
00d2a6 e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00d2a7 940e e158 	CALL __CMPF12
00d2a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28C:
00d2aa 940e c5ab 	CALL SUBOPT_0x8C
                +
00d2ac e3e3     +LDI R30 , LOW ( 0x40533333 )
00d2ad e3f3     +LDI R31 , HIGH ( 0x40533333 )
00d2ae e563     +LDI R22 , BYTE3 ( 0x40533333 )
00d2af e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00d2b0 940e e158 	CALL __CMPF12
00d2b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28D:
00d2b3 940e c5ab 	CALL SUBOPT_0x8C
                +
00d2b5 eced     +LDI R30 , LOW ( 0x406CCCCD )
00d2b6 ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00d2b7 e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00d2b8 e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00d2b9 940e e158 	CALL __CMPF12
00d2bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28E:
00d2bc 940e c5ab 	CALL SUBOPT_0x8C
                +
00d2be e0e0     +LDI R30 , LOW ( 0x40800000 )
00d2bf e0f0     +LDI R31 , HIGH ( 0x40800000 )
00d2c0 e860     +LDI R22 , BYTE3 ( 0x40800000 )
00d2c1 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00d2c2 940e e158 	CALL __CMPF12
00d2c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x28F:
00d2c5 e080      	LDI  R24,0
00d2c6 940e 8007 	CALL _printOLED
00d2c8 9624      	ADIW R28,4
00d2c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x290:
00d2ca 940e e324 	CALL __PUTPARD1
00d2cc 81ec      	LDD  R30,Y+4
00d2cd 940c c4a6 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x291:
00d2cf 940e e178 	CALL __ADDW2R15
00d2d1 940e e2f4 	CALL __GETD1P
00d2d3 940e e324 	CALL __PUTPARD1
00d2d5 01d8      	MOVW R26,R16
00d2d6 940c c13f 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x292:
00d2d8 940e c42b 	CALL SUBOPT_0x52
00d2da 940e bb43 	CALL _f_lseek
00d2dc 2f1e      	MOV  R17,R30
00d2dd 3010      	CPI  R17,0
00d2de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x293:
00d2df 2fa1      	MOV  R26,R17
00d2e0 940e 8067 	CALL _error
00d2e2 efef      	LDI  R30,LOW(65535)
00d2e3 efff      	LDI  R31,HIGH(65535)
00d2e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x294:
00d2e5 93fa      	ST   -Y,R31
00d2e6 93ea      	ST   -Y,R30
00d2e7 01fe      	MOVW R30,R28
00d2e8 9633      	ADIW R30,3
00d2e9 93fa      	ST   -Y,R31
00d2ea 93ea      	ST   -Y,R30
00d2eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x295:
00d2ec 940e e324 	CALL __PUTPARD1
00d2ee e1ef      	LDI  R30,LOW(_root_path)
00d2ef e1f9      	LDI  R31,HIGH(_root_path)
00d2f0 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x296:
00d2f2 940e 8067 	CALL _error
00d2f4 e0e0      	LDI  R30,LOW(0)
00d2f5 93e0 146b 	STS  _sdFreeSpace,R30
00d2f7 93e0 146c 	STS  _sdFreeSpace+1,R30
00d2f9 93e0 146d 	STS  _sdFreeSpace+2,R30
00d2fb 93e0 146e 	STS  _sdFreeSpace+3,R30
00d2fd efef      	LDI  R30,LOW(65535)
00d2fe efff      	LDI  R31,HIGH(65535)
00d2ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x297:
00d300 81e2      	LDD  R30,Z+2
00d301 e0f0      	LDI  R31,0
00d302 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x298:
                +
00d303 81a9     +LDD R26 , Y + 1
00d304 81ba     +LDD R27 , Y + 1 + 1
00d305 818b     +LDD R24 , Y + 1 + 2
00d306 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00d307 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x299:
00d308 940e e201 	CALL __CWD1
00d30a 940e e222 	CALL __MULD12U
00d30c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29A:
                +
00d30d efe2     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00d30e e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00d30f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00d310 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00d311 cfda      	RJMP SUBOPT_0x295
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29B:
00d312 93fa      	ST   -Y,R31
00d313 93ea      	ST   -Y,R30
00d314 01fe      	MOVW R30,R28
00d315 9634      	ADIW R30,4
00d316 93fa      	ST   -Y,R31
00d317 93ea      	ST   -Y,R30
00d318 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29C:
00d319 89ee      	LDD  R30,Y+22
00d31a 89ff      	LDD  R31,Y+22+1
00d31b 93fa      	ST   -Y,R31
00d31c 93ea      	ST   -Y,R30
00d31d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29D:
00d31e 01de      	MOVW R26,R28
00d31f 961a      	ADIW R26,10
00d320 940e 84f7 	CALL _LOG_getLastInsert
00d322 018f      	MOVW R16,R30
00d323 2311      	TST  R17
00d324 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29E:
00d325 940e c412 	CALL SUBOPT_0x4F
00d327 940e e324 	CALL __PUTPARD1
00d329 940c c3e8 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29F:
00d32b 940e 857f 	CALL _index2Addr
00d32d 940c c673 	JMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A0:
00d32f 940e c6b6 	CALL SUBOPT_0xB5
00d331 940c c779 	JMP SUBOPT_0xD3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x2A1:
00d333 93fa      	ST   -Y,R31
00d334 93ea      	ST   -Y,R30
00d335 940c c525 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2A2:
00d337 940e 8087 	CALL _SD_writeData
00d339 018f      	MOVW R16,R30
00d33a 2311      	TST  R17
00d33b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2A3:
00d33c 940e c6b6 	CALL SUBOPT_0xB5
                +
00d33e 5feb     +SUBI R30 , LOW ( - 5 )
00d33f 4fff     +SBCI R31 , HIGH ( - 5 )
00d340 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00d341 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00d342 940e e324 	CALL __PUTPARD1
00d344 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A4:
00d345 940e c6b6 	CALL SUBOPT_0xB5
                +
00d347 5fe9     +SUBI R30 , LOW ( - 7 )
00d348 4fff     +SBCI R31 , HIGH ( - 7 )
00d349 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00d34a 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00d34b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2A5:
00d34c 940e c783 	CALL SUBOPT_0xD5
00d34e 940e c6dd 	CALL SUBOPT_0xBC
00d350 ddef      	RCALL SUBOPT_0x256
00d351 01df      	MOVW R26,R30
00d352 01cb      	MOVW R24,R22
00d353 940e 8512 	CALL _LOG_setLastInsert
00d355 018f      	MOVW R16,R30
00d356 2311      	TST  R17
00d357 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2A6:
00d358 8de8      	LDD  R30,Y+24
00d359 8df9      	LDD  R31,Y+24+1
00d35a 93fa      	ST   -Y,R31
00d35b 93ea      	ST   -Y,R30
00d35c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A7:
00d35d 01de      	MOVW R26,R28
00d35e 961e      	ADIW R26,14
00d35f 940e 84f7 	CALL _LOG_getLastInsert
00d361 018f      	MOVW R16,R30
00d362 2311      	TST  R17
00d363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A8:
00d364 01de      	MOVW R26,R28
00d365 961a      	ADIW R26,10
00d366 940e 8533 	CALL _LOG_getLastSend
00d368 018f      	MOVW R16,R30
00d369 2311      	TST  R17
00d36a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A9:
                +
00d36b e5e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00d36c e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00d36d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00d36e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00d36f 940c c5ae 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AA:
00d371 940e c794 	CALL SUBOPT_0xD9
00d373 940e c78f 	CALL SUBOPT_0xD8
00d375 940e e394 	CALL __CPD21
00d377 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2AB:
00d378 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00d379 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00d37a 93fa      	ST   -Y,R31
00d37b 93ea      	ST   -Y,R30
00d37c e0e1      	LDI  R30,LOW(1)
00d37d 93ea      	ST   -Y,R30
00d37e ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d37f e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d380 93fa      	ST   -Y,R31
00d381 93ea      	ST   -Y,R30
00d382 e1a0      	LDI  R26,LOW(16)
00d383 e0b0      	LDI  R27,0
00d384 940e 8591 	CALL _LOG_createFile
00d386 018f      	MOVW R16,R30
00d387 2311      	TST  R17
00d388 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2AC:
00d389 940e 80de 	CALL _SD_readData
00d38b 018f      	MOVW R16,R30
00d38c 2311      	TST  R17
00d38d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2AD:
00d38e 89ea      	LDD  R30,Y+18
00d38f 89fb      	LDD  R31,Y+18+1
00d390 93fa      	ST   -Y,R31
00d391 93ea      	ST   -Y,R30
00d392 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AE:
00d393 940e c412 	CALL SUBOPT_0x4F
00d395 940e e324 	CALL __PUTPARD1
00d397 940c c238 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AF:
00d399 93fa      	ST   -Y,R31
00d39a 93ea      	ST   -Y,R30
00d39b 940c c51f 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B0:
00d39d 940e c6b6 	CALL SUBOPT_0xB5
                +
00d39f 5fe6     +SUBI R30 , LOW ( - 10 )
00d3a0 4fff     +SBCI R31 , HIGH ( - 10 )
00d3a1 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00d3a2 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00d3a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B1:
00d3a4 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00d3a5 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00d3a6 93fa      	ST   -Y,R31
00d3a7 93ea      	ST   -Y,R30
00d3a8 e0e1      	LDI  R30,LOW(1)
00d3a9 93ea      	ST   -Y,R30
00d3aa ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d3ab e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d3ac 93fa      	ST   -Y,R31
00d3ad 93ea      	ST   -Y,R30
00d3ae e1a0      	LDI  R26,LOW(16)
00d3af e0b0      	LDI  R27,0
00d3b0 940e 8591 	CALL _LOG_createFile
00d3b2 018f      	MOVW R16,R30
00d3b3 2311      	TST  R17
00d3b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B2:
00d3b5 81ec      	LDD  R30,Y+4
00d3b6 81fd      	LDD  R31,Y+4+1
00d3b7 93fa      	ST   -Y,R31
00d3b8 93ea      	ST   -Y,R30
00d3b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B3:
                +
00d3ba e0e0     +LDI R30 , LOW ( 0x0 )
00d3bb e0f0     +LDI R31 , HIGH ( 0x0 )
00d3bc e060     +LDI R22 , BYTE3 ( 0x0 )
00d3bd e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d3be 940e e324 	CALL __PUTPARD1
00d3c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B4:
                +
00d3c1 e0e4     +LDI R30 , LOW ( 0x4 )
00d3c2 e0f0     +LDI R31 , HIGH ( 0x4 )
00d3c3 e060     +LDI R22 , BYTE3 ( 0x4 )
00d3c4 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00d3c5 940e e324 	CALL __PUTPARD1
00d3c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2B5:
00d3c8 940e e324 	CALL __PUTPARD1
                +
00d3ca 01fe     +MOVW R30 , R28
00d3cb 5de5     +SUBI R30 , LOW ( - 555 )
00d3cc 4ffd     +SBCI R31 , HIGH ( - 555 )
00d3cd 9001     +LD R0 , Z +
00d3ce 81f0     +LD R31 , Z
00d3cf 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00d3d0 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2B6:
                +
00d3d2 01fe     +MOVW R30 , R28
00d3d3 5dec     +SUBI R30 , LOW ( - 548 )
00d3d4 4ffd     +SBCI R31 , HIGH ( - 548 )
00d3d5 9001     +LD R0 , Z +
00d3d6 81f0     +LD R31 , Z
00d3d7 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00d3d8 93fa      	ST   -Y,R31
00d3d9 93ea      	ST   -Y,R30
                +
00d3da 01de     +MOVW R26 , R28
00d3db 5dac     +SUBI R26 , LOW ( - 548 )
00d3dc 4fbd     +SBCI R27 , HIGH ( - 548 )
00d3dd 900d     +LD R0 , X +
00d3de 91bc     +LD R27 , X
00d3df 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00d3e0 940c 9f0a 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B7:
00d3e2 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d3e3 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d3e4 93fa      	ST   -Y,R31
00d3e5 93ea      	ST   -Y,R30
00d3e6 e1a0      	LDI  R26,LOW(16)
00d3e7 e0b0      	LDI  R27,0
00d3e8 940e 8591 	CALL _LOG_createFile
00d3ea 018f      	MOVW R16,R30
00d3eb 2311      	TST  R17
00d3ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B8:
                +
00d3ed e5ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00d3ee e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00d3ef e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00d3f0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00d3f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B9:
00d3f2 940e e324 	CALL __PUTPARD1
00d3f4 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00d3f5 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00d3f6 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2BA:
00d3f8 01df      	MOVW R26,R30
00d3f9 940e e2f4 	CALL __GETD1P
00d3fb 81ae      	LDD  R26,Y+6
00d3fc 81bf      	LDD  R27,Y+6+1
00d3fd 940e e2ff 	CALL __PUTDP1
00d3ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2BB:
00d400 e0ab      	LDI  R26,LOW(11)
00d401 9f1a      	MUL  R17,R26
00d402 01f0      	MOVW R30,R0
00d403 55e0      	SUBI R30,LOW(-_dataLogQueue)
00d404 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00d405 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x2BC:
00d406 e0a0      	LDI  R26,LOW(0)
00d407 83a0      	STD  Z+0,R26
00d408 e0ab      	LDI  R26,LOW(11)
00d409 9f1a      	MUL  R17,R26
00d40a 01f0      	MOVW R30,R0
                +
00d40b 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00d40c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00d40d 940e c317 	CALL SUBOPT_0x2C
00d40f dd88      	RCALL SUBOPT_0x261
00d410 e0ab      	LDI  R26,LOW(11)
00d411 9f1a      	MUL  R17,R26
00d412 01f0      	MOVW R30,R0
                +
00d413 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00d414 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00d415 e0a0      	LDI  R26,LOW(0)
00d416 e0b0      	LDI  R27,HIGH(0)
00d417 83a0      	STD  Z+0,R26
00d418 83b1      	STD  Z+1,R27
00d419 e0ab      	LDI  R26,LOW(11)
00d41a 9f1a      	MUL  R17,R26
00d41b 01f0      	MOVW R30,R0
                +
00d41c 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00d41d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00d41e 940e c317 	CALL SUBOPT_0x2C
00d420 cd77      	RJMP SUBOPT_0x261
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2BD:
                +
00d421 e0a7     +LDI R26 , 7
00d422 9fa0     +MUL R26 , R16
00d423 01f0     +MOVW R30 , R0
00d424 9fa1     +MUL R26 , R17
00d425 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00d426 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2BE:
00d427 e0a7      	LDI  R26,LOW(7)
00d428 9f1a      	MUL  R17,R26
00d429 01f0      	MOVW R30,R0
00d42a 5ded      	SUBI R30,LOW(-_eventLogQueue)
00d42b 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00d42c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2BF:
00d42d e0a0      	LDI  R26,LOW(0)
00d42e 83a0      	STD  Z+0,R26
00d42f e0a7      	LDI  R26,LOW(7)
00d430 9f1a      	MUL  R17,R26
00d431 01f0      	MOVW R30,R0
00d432 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2C0:
                +
00d433 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00d434 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00d435 940e c317 	CALL SUBOPT_0x2C
00d437 dd60      	RCALL SUBOPT_0x261
00d438 e0a7      	LDI  R26,LOW(7)
00d439 9f1a      	MUL  R17,R26
00d43a 01f0      	MOVW R30,R0
                +
00d43b 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00d43c 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00d43d cfef      	RJMP SUBOPT_0x2BF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x2C1:
00d43e e0e1      	LDI  R30,LOW(1)
00d43f 93e0 14df 	STS  _currentPage,R30
00d441 e0e0      	LDI  R30,LOW(0)
00d442 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00d444 e1ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d445 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d446 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d447 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d448 940e e324 	CALL __PUTPARD1
00d44a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d44c 940e e1fb 	CALL __CBD1
00d44e 940e e324 	CALL __PUTPARD1
00d450 ce4b      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x2C2:
                +
00d451 01fe     +MOVW R30 , R28
00d452 5aea     +SUBI R30 , LOW ( - 86 )
00d453 4fff     +SBCI R31 , HIGH ( - 86 )
00d454 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d455 cadd      	RJMP SUBOPT_0x214
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:93 WORDS
                 SUBOPT_0x2C3:
00d456 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d458 50a1      	SUBI R26,LOW(1)
00d459 93a0 1a1f 	STS  _cursor_S0160000000,R26
00d45b 30a0      	CPI  R26,0
00d45c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:218 WORDS
                 SUBOPT_0x2C4:
                +
00d45d e2e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00d45e e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00d45f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00d460 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00d461 940e e324 	CALL __PUTPARD1
00d463 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d465 940e e1fb 	CALL __CBD1
00d467 940e e324 	CALL __PUTPARD1
00d469 ce32      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x2C5:
00d46a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d46c 5faf      	SUBI R26,-LOW(1)
00d46d 93a0 1a1f 	STS  _cursor_S0160000000,R26
00d46f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x2C6:
00d470 e0e2      	LDI  R30,LOW(2)
00d471 93e0 14df 	STS  _currentPage,R30
00d473 e0e0      	LDI  R30,LOW(0)
00d474 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00d476 e2ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d477 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d478 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d479 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d47a 940e e324 	CALL __PUTPARD1
00d47c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d47e 940e e1fb 	CALL __CBD1
00d480 940e e324 	CALL __PUTPARD1
00d482 ce19      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x2C7:
00d483 93e0 14df 	STS  _currentPage,R30
00d485 e0e0      	LDI  R30,LOW(0)
00d486 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d488 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2C8:
                +
00d489 e3e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d48a e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d48b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d48c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d48d 940e e324 	CALL __PUTPARD1
00d48f 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d491 940e e1fb 	CALL __CBD1
00d493 940e e324 	CALL __PUTPARD1
00d495 ce06      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2C9:
                +
00d496 e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d497 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d498 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d499 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d49a 940e e324 	CALL __PUTPARD1
00d49c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d49e 940e e1fb 	CALL __CBD1
00d4a0 940e e324 	CALL __PUTPARD1
00d4a2 cdf9      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2CA:
00d4a3 93e0 14df 	STS  _currentPage,R30
00d4a5 e1e5      	LDI  R30,LOW(21)
00d4a6 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d4a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2CB:
00d4a9 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d4ab e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d4ac e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d4ad 93fa      	ST   -Y,R31
00d4ae 93ea      	ST   -Y,R30
00d4af efef      	LDI  R30,LOW(255)
00d4b0 93ea      	ST   -Y,R30
00d4b1 940c c525 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2CC:
00d4b3 940e a752 	CALL _memset
00d4b5 e0e0      	LDI  R30,LOW(0)
00d4b6 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d4b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2CD:
                +
00d4b9 e2e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00d4ba e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00d4bb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00d4bc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00d4bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2CE:
                +
00d4be e4e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00d4bf e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00d4c0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00d4c1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00d4c2 940e e324 	CALL __PUTPARD1
00d4c4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4c6 940e e1fb 	CALL __CBD1
00d4c8 940e e324 	CALL __PUTPARD1
00d4ca cdd1      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2CF:
00d4cb 93e0 14df 	STS  _currentPage,R30
00d4cd e0e7      	LDI  R30,LOW(7)
00d4ce 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d4d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D0:
                +
00d4d1 e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00d4d2 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00d4d3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00d4d4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00d4d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D1:
00d4d6 940e e324 	CALL __PUTPARD1
                +
00d4d8 e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00d4d9 e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00d4da 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2D2:
00d4dc e3a2      	LDI  R26,LOW(50)
00d4dd e0b0      	LDI  R27,0
00d4de 940e a752 	CALL _memset
00d4e0 01fe      	MOVW R30,R28
00d4e1 9638      	ADIW R30,8
00d4e2 93fa      	ST   -Y,R31
00d4e3 93ea      	ST   -Y,R30
                +
00d4e4 e2e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00d4e5 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00d4e6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00d4e7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00d4e8 940e e324 	CALL __PUTPARD1
00d4ea e080      	LDI  R24,0
00d4eb 940e c107 	CALL _sprintf
00d4ed 9626      	ADIW R28,6
00d4ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D3:
00d4ef 01fe      	MOVW R30,R28
00d4f0 96fa      	ADIW R30,58
00d4f1 940c c843 	JMP SUBOPT_0xF6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D4:
00d4f3 e1a4      	LDI  R26,LOW(20)
00d4f4 e0b0      	LDI  R27,0
00d4f5 940c a752 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D5:
00d4f7 01fe      	MOVW R30,R28
00d4f8 96fa      	ADIW R30,58
00d4f9 93fa      	ST   -Y,R31
00d4fa 93ea      	ST   -Y,R30
00d4fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D6:
00d4fc e080      	LDI  R24,0
00d4fd 940e c107 	CALL _sprintf
00d4ff 9626      	ADIW R28,6
00d500 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D7:
00d501 01fe      	MOVW R30,R28
00d502 9638      	ADIW R30,8
00d503 93fa      	ST   -Y,R31
00d504 93ea      	ST   -Y,R30
00d505 01de      	MOVW R26,R28
00d506 96dc      	ADIW R26,60
00d507 940e a762 	CALL _strcat
00d509 cfe5      	RJMP SUBOPT_0x2D3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D8:
                +
00d50a ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00d50b e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00d50c 0fe0      	ADD  R30,R16
00d50d 1ff1      	ADC  R31,R17
00d50e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2D9:
00d50f 01f9      	MOVW R30,R18
                +
00d510 5f2f     +SUBI R18 , LOW ( - 1 )
00d511 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00d512 01de      	MOVW R26,R28
00d513 96da      	ADIW R26,58
00d514 0fae      	ADD  R26,R30
00d515 1fbf      	ADC  R27,R31
00d516 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DA:
00d517 940e e324 	CALL __PUTPARD1
00d519 01fe      	MOVW R30,R28
00d51a 963c      	ADIW R30,12
00d51b 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2DB:
                +
00d51d 01fe     +MOVW R30 , R28
00d51e 5aec     +SUBI R30 , LOW ( - 84 )
00d51f 4fff     +SBCI R31 , HIGH ( - 84 )
00d520 9001     +LD R0 , Z +
00d521 81f0     +LD R31 , Z
00d522 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00d523 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DC:
                +
00d524 01fe     +MOVW R30 , R28
00d525 5aee     +SUBI R30 , LOW ( - 82 )
00d526 4fff     +SBCI R31 , HIGH ( - 82 )
00d527 9001     +LD R0 , Z +
00d528 81f0     +LD R31 , Z
00d529 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00d52a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DD:
                +
00d52b 01de     +MOVW R26 , R28
00d52c 5aac     +SUBI R26 , LOW ( - 84 )
00d52d 4fbf     +SBCI R27 , HIGH ( - 84 )
00d52e 900d     +LD R0 , X +
00d52f 91bc     +LD R27 , X
00d530 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00d531 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2DE:
00d532 e2ee      	LDI  R30,LOW(_setIp_S0160000000)
00d533 e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00d534 93fa      	ST   -Y,R31
00d535 93ea      	ST   -Y,R30
00d536 e3ea      	LDI  R30,LOW(_setMask_S0160000000)
00d537 e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00d538 93fa      	ST   -Y,R31
00d539 93ea      	ST   -Y,R30
00d53a e4e6      	LDI  R30,LOW(_setGw_S0160000000)
00d53b e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00d53c 93fa      	ST   -Y,R31
00d53d 93ea      	ST   -Y,R30
00d53e e5a2      	LDI  R26,LOW(_setServer_S0160000000)
00d53f e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00d540 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2DF:
00d541 940e e324 	CALL __PUTPARD1
00d543 91a0 1a2e 	LDS  R26,_setIp_S0160000000
00d545 e6e4      	LDI  R30,LOW(100)
00d546 9fea      	MUL  R30,R26
00d547 01b0      	MOVW R22,R0
                +
00d548 91a0 1a2f+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00d54a e0ea      	LDI  R30,LOW(10)
00d54b 9fea      	MUL  R30,R26
00d54c 01f0      	MOVW R30,R0
00d54d 01db      	MOVW R26,R22
00d54e 0fae      	ADD  R26,R30
00d54f 1fbf      	ADC  R27,R31
                +
00d550 91e0 1a30+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00d552 e0f0      	LDI  R31,0
00d553 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E0:
                +
00d555 91a0 1a31+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00d557 e6e4      	LDI  R30,LOW(100)
00d558 9fea      	MUL  R30,R26
00d559 01b0      	MOVW R22,R0
                +
00d55a 91a0 1a32+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00d55c e0ea      	LDI  R30,LOW(10)
00d55d 9fea      	MUL  R30,R26
00d55e 01f0      	MOVW R30,R0
00d55f 01db      	MOVW R26,R22
00d560 0fae      	ADD  R26,R30
00d561 1fbf      	ADC  R27,R31
                +
00d562 91e0 1a33+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00d564 e0f0      	LDI  R31,0
00d565 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E1:
                +
00d567 91a0 1a34+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00d569 e6e4      	LDI  R30,LOW(100)
00d56a 9fea      	MUL  R30,R26
00d56b 01b0      	MOVW R22,R0
                +
00d56c 91a0 1a35+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00d56e e0ea      	LDI  R30,LOW(10)
00d56f 9fea      	MUL  R30,R26
00d570 01f0      	MOVW R30,R0
00d571 01db      	MOVW R26,R22
00d572 0fae      	ADD  R26,R30
00d573 1fbf      	ADC  R27,R31
                +
00d574 91e0 1a36+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00d576 e0f0      	LDI  R31,0
00d577 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E2:
                +
00d579 91a0 1a37+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00d57b e6e4      	LDI  R30,LOW(100)
00d57c 9fea      	MUL  R30,R26
00d57d 01b0      	MOVW R22,R0
                +
00d57e 91a0 1a38+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00d580 e0ea      	LDI  R30,LOW(10)
00d581 9fea      	MUL  R30,R26
00d582 01f0      	MOVW R30,R0
00d583 01db      	MOVW R26,R22
00d584 0fae      	ADD  R26,R30
00d585 1fbf      	ADC  R27,R31
                +
00d586 91e0 1a39+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00d588 e0f0      	LDI  R31,0
00d589 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E3:
00d58b 91a0 1a3a 	LDS  R26,_setMask_S0160000000
00d58d e6e4      	LDI  R30,LOW(100)
00d58e 9fea      	MUL  R30,R26
00d58f 01b0      	MOVW R22,R0
                +
00d590 91a0 1a3b+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00d592 e0ea      	LDI  R30,LOW(10)
00d593 9fea      	MUL  R30,R26
00d594 01f0      	MOVW R30,R0
00d595 01db      	MOVW R26,R22
00d596 0fae      	ADD  R26,R30
00d597 1fbf      	ADC  R27,R31
                +
00d598 91e0 1a3c+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00d59a e0f0      	LDI  R31,0
00d59b 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E4:
                +
00d59d 91a0 1a3d+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00d59f e6e4      	LDI  R30,LOW(100)
00d5a0 9fea      	MUL  R30,R26
00d5a1 01b0      	MOVW R22,R0
                +
00d5a2 91a0 1a3e+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00d5a4 e0ea      	LDI  R30,LOW(10)
00d5a5 9fea      	MUL  R30,R26
00d5a6 01f0      	MOVW R30,R0
00d5a7 01db      	MOVW R26,R22
00d5a8 0fae      	ADD  R26,R30
00d5a9 1fbf      	ADC  R27,R31
                +
00d5aa 91e0 1a3f+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00d5ac e0f0      	LDI  R31,0
00d5ad 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E5:
                +
00d5af 91a0 1a40+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00d5b1 e6e4      	LDI  R30,LOW(100)
00d5b2 9fea      	MUL  R30,R26
00d5b3 01b0      	MOVW R22,R0
                +
00d5b4 91a0 1a41+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00d5b6 e0ea      	LDI  R30,LOW(10)
00d5b7 9fea      	MUL  R30,R26
00d5b8 01f0      	MOVW R30,R0
00d5b9 01db      	MOVW R26,R22
00d5ba 0fae      	ADD  R26,R30
00d5bb 1fbf      	ADC  R27,R31
                +
00d5bc 91e0 1a42+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00d5be e0f0      	LDI  R31,0
00d5bf 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E6:
                +
00d5c1 91a0 1a43+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00d5c3 e6e4      	LDI  R30,LOW(100)
00d5c4 9fea      	MUL  R30,R26
00d5c5 01b0      	MOVW R22,R0
                +
00d5c6 91a0 1a44+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00d5c8 e0ea      	LDI  R30,LOW(10)
00d5c9 9fea      	MUL  R30,R26
00d5ca 01f0      	MOVW R30,R0
00d5cb 01db      	MOVW R26,R22
00d5cc 0fae      	ADD  R26,R30
00d5cd 1fbf      	ADC  R27,R31
                +
00d5ce 91e0 1a45+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00d5d0 e0f0      	LDI  R31,0
00d5d1 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E7:
00d5d3 91a0 1a46 	LDS  R26,_setGw_S0160000000
00d5d5 e6e4      	LDI  R30,LOW(100)
00d5d6 9fea      	MUL  R30,R26
00d5d7 01b0      	MOVW R22,R0
                +
00d5d8 91a0 1a47+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00d5da e0ea      	LDI  R30,LOW(10)
00d5db 9fea      	MUL  R30,R26
00d5dc 01f0      	MOVW R30,R0
00d5dd 01db      	MOVW R26,R22
00d5de 0fae      	ADD  R26,R30
00d5df 1fbf      	ADC  R27,R31
                +
00d5e0 91e0 1a48+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00d5e2 e0f0      	LDI  R31,0
00d5e3 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E8:
                +
00d5e5 91a0 1a49+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00d5e7 e6e4      	LDI  R30,LOW(100)
00d5e8 9fea      	MUL  R30,R26
00d5e9 01b0      	MOVW R22,R0
                +
00d5ea 91a0 1a4a+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00d5ec e0ea      	LDI  R30,LOW(10)
00d5ed 9fea      	MUL  R30,R26
00d5ee 01f0      	MOVW R30,R0
00d5ef 01db      	MOVW R26,R22
00d5f0 0fae      	ADD  R26,R30
00d5f1 1fbf      	ADC  R27,R31
                +
00d5f2 91e0 1a4b+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00d5f4 e0f0      	LDI  R31,0
00d5f5 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E9:
                +
00d5f7 91a0 1a4c+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00d5f9 e6e4      	LDI  R30,LOW(100)
00d5fa 9fea      	MUL  R30,R26
00d5fb 01b0      	MOVW R22,R0
                +
00d5fc 91a0 1a4d+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00d5fe e0ea      	LDI  R30,LOW(10)
00d5ff 9fea      	MUL  R30,R26
00d600 01f0      	MOVW R30,R0
00d601 01db      	MOVW R26,R22
00d602 0fae      	ADD  R26,R30
00d603 1fbf      	ADC  R27,R31
                +
00d604 91e0 1a4e+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00d606 e0f0      	LDI  R31,0
00d607 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EA:
                +
00d609 91a0 1a4f+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00d60b e6e4      	LDI  R30,LOW(100)
00d60c 9fea      	MUL  R30,R26
00d60d 01b0      	MOVW R22,R0
                +
00d60e 91a0 1a50+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00d610 e0ea      	LDI  R30,LOW(10)
00d611 9fea      	MUL  R30,R26
00d612 01f0      	MOVW R30,R0
00d613 01db      	MOVW R26,R22
00d614 0fae      	ADD  R26,R30
00d615 1fbf      	ADC  R27,R31
                +
00d616 91e0 1a51+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00d618 e0f0      	LDI  R31,0
00d619 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EB:
00d61b 91a0 1a52 	LDS  R26,_setServer_S0160000000
00d61d e6e4      	LDI  R30,LOW(100)
00d61e 9fea      	MUL  R30,R26
00d61f 01b0      	MOVW R22,R0
                +
00d620 91a0 1a53+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00d622 e0ea      	LDI  R30,LOW(10)
00d623 9fea      	MUL  R30,R26
00d624 01f0      	MOVW R30,R0
00d625 01db      	MOVW R26,R22
00d626 0fae      	ADD  R26,R30
00d627 1fbf      	ADC  R27,R31
                +
00d628 91e0 1a54+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00d62a e0f0      	LDI  R31,0
00d62b 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EC:
                +
00d62d 91a0 1a55+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00d62f e6e4      	LDI  R30,LOW(100)
00d630 9fea      	MUL  R30,R26
00d631 01b0      	MOVW R22,R0
                +
00d632 91a0 1a56+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00d634 e0ea      	LDI  R30,LOW(10)
00d635 9fea      	MUL  R30,R26
00d636 01f0      	MOVW R30,R0
00d637 01db      	MOVW R26,R22
00d638 0fae      	ADD  R26,R30
00d639 1fbf      	ADC  R27,R31
                +
00d63a 91e0 1a57+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00d63c e0f0      	LDI  R31,0
00d63d 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2ED:
                +
00d63f 91a0 1a58+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00d641 e6e4      	LDI  R30,LOW(100)
00d642 9fea      	MUL  R30,R26
00d643 01b0      	MOVW R22,R0
                +
00d644 91a0 1a59+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00d646 e0ea      	LDI  R30,LOW(10)
00d647 9fea      	MUL  R30,R26
00d648 01f0      	MOVW R30,R0
00d649 01db      	MOVW R26,R22
00d64a 0fae      	ADD  R26,R30
00d64b 1fbf      	ADC  R27,R31
                +
00d64c 91e0 1a5a+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00d64e e0f0      	LDI  R31,0
00d64f 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EE:
                +
00d651 91a0 1a5b+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00d653 e6e4      	LDI  R30,LOW(100)
00d654 9fea      	MUL  R30,R26
00d655 01b0      	MOVW R22,R0
                +
00d656 91a0 1a5c+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00d658 e0ea      	LDI  R30,LOW(10)
00d659 9fea      	MUL  R30,R26
00d65a 01f0      	MOVW R30,R0
00d65b 01db      	MOVW R26,R22
00d65c 0fae      	ADD  R26,R30
00d65d 1fbf      	ADC  R27,R31
                +
00d65e 91e0 1a5d+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00d660 e0f0      	LDI  R31,0
00d661 940c ccf0 	JMP SUBOPT_0x1BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2EF:
00d663 940e e324 	CALL __PUTPARD1
00d665 cc5f      	RJMP SUBOPT_0x28F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2F0:
                +
00d666 01fe     +MOVW R30 , R28
00d667 5aea     +SUBI R30 , LOW ( - 86 )
00d668 4fff     +SBCI R31 , HIGH ( - 86 )
00d669 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d66a e0f0      	LDI  R31,0
00d66b 30e2      	CPI  R30,LOW(0x2)
00d66c e0a0      	LDI  R26,HIGH(0x2)
00d66d 07fa      	CPC  R31,R26
00d66e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2F1:
00d66f 93e0 14df 	STS  _currentPage,R30
00d671 e0e1      	LDI  R30,LOW(1)
00d672 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d674 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F2:
00d675 93e0 14df 	STS  _currentPage,R30
00d677 e0e2      	LDI  R30,LOW(2)
00d678 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d67a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F3:
                +
00d67b e2ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d67c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d67d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d67e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d67f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:501 WORDS
                 SUBOPT_0x2F4:
00d680 940e e324 	CALL __PUTPARD1
00d682 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d684 940e e1fb 	CALL __CBD1
00d686 940e e324 	CALL __PUTPARD1
00d688 cc13      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F5:
00d689 940e e324 	CALL __PUTPARD1
00d68b 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00d68d 940c c4a6 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F6:
                +
00d68f e2ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00d690 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00d691 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00d692 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00d693 cfec      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2F7:
                +
00d694 e4e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d695 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d696 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d697 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d698 940e e324 	CALL __PUTPARD1
00d69a 01f8      	MOVW R30,R16
00d69b ca98      	RJMP SUBOPT_0x254
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2F8:
00d69c 0fa0      	ADD  R26,R16
00d69d 1fb1      	ADC  R27,R17
00d69e 91ec      	LD   R30,X
00d69f 940c c4a6 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F9:
                +
00d6a1 e4ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00d6a2 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00d6a3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00d6a4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00d6a5 cfda      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2FA:
00d6a6 940e e324 	CALL __PUTPARD1
00d6a8 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d6aa e0f0      	LDI  R31,0
00d6ab fde7      	SBRC R30,7
00d6ac efff      	SER  R31
00d6ad 9632      	ADIW R30,2
00d6ae ca85      	RJMP SUBOPT_0x254
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2FB:
                +
00d6af e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d6b0 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d6b1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d6b2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d6b3 cff2      	RJMP SUBOPT_0x2FA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FC:
00d6b4 eba6      	LDI  R26,LOW(_operating_config)
00d6b5 e1b1      	LDI  R27,HIGH(_operating_config)
00d6b6 940e 4e76 	CALL _setOperatingConfig
00d6b8 01af      	MOVW R20,R30
00d6b9 2355      	TST  R21
00d6ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FD:
                +
00d6bb e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00d6bc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00d6bd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00d6be e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00d6bf 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FE:
00d6c1 e0e8      	LDI  R30,LOW(8)
00d6c2 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d6c4 e0e0      	LDI  R30,LOW(0)
00d6c5 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d6c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2FF:
                +
00d6c8 ecea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00d6c9 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00d6ca e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00d6cb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00d6cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x300:
                +
00d6cd eced     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00d6ce e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00d6cf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00d6d0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00d6d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x301:
                +
00d6d2 ede0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00d6d3 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00d6d4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00d6d5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00d6d6 cfa9      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x302:
00d6d7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d6d9 e0b0      	LDI  R27,0
00d6da fda7      	SBRC R26,7
00d6db efbf      	SER  R27
00d6dc e0e3      	LDI  R30,LOW(3)
00d6dd e0f0      	LDI  R31,HIGH(3)
00d6de 940e e2b1 	CALL __MODW21
00d6e0 9730      	SBIW R30,0
00d6e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x303:
00d6e2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d6e4 e0b0      	LDI  R27,0
00d6e5 5da2      	SUBI R26,LOW(-_setIp_S0160000000)
00d6e6 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00d6e7 91ec      	LD   R30,X
00d6e8 5fef      	SUBI R30,-LOW(1)
00d6e9 93ec      	ST   X,R30
00d6ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x304:
00d6eb 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d6ed e0f0      	LDI  R31,0
00d6ee 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
00d6ef 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00d6f0 e0a0      	LDI  R26,LOW(0)
00d6f1 83a0      	STD  Z+0,R26
00d6f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x305:
                +
00d6f3 e4e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d6f4 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d6f5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d6f6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d6f7 940e e324 	CALL __PUTPARD1
00d6f9 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d6fb 940e e1fb 	CALL __CBD1
00d6fd 940e e324 	CALL __PUTPARD1
00d6ff 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d701 e0f0      	LDI  R31,0
00d702 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x306:
00d703 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d705 e0b0      	LDI  R27,0
00d706 5ca6      	SUBI R26,LOW(-_setMask_S0160000000)
00d707 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00d708 91ec      	LD   R30,X
00d709 5fef      	SUBI R30,-LOW(1)
00d70a 93ec      	ST   X,R30
00d70b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x307:
00d70c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d70e e0f0      	LDI  R31,0
00d70f 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
00d710 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00d711 e0a0      	LDI  R26,LOW(0)
00d712 83a0      	STD  Z+0,R26
00d713 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x308:
00d714 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d716 e0b0      	LDI  R27,0
00d717 5baa      	SUBI R26,LOW(-_setGw_S0160000000)
00d718 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00d719 91ec      	LD   R30,X
00d71a 5fef      	SUBI R30,-LOW(1)
00d71b 93ec      	ST   X,R30
00d71c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x309:
00d71d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d71f e0f0      	LDI  R31,0
00d720 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
00d721 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00d722 e0a0      	LDI  R26,LOW(0)
00d723 83a0      	STD  Z+0,R26
00d724 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30A:
00d725 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d727 e0b0      	LDI  R27,0
00d728 5aae      	SUBI R26,LOW(-_setServer_S0160000000)
00d729 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00d72a 91ec      	LD   R30,X
00d72b 5fef      	SUBI R30,-LOW(1)
00d72c 93ec      	ST   X,R30
00d72d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x30B:
00d72e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d730 e0f0      	LDI  R31,0
00d731 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
00d732 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00d733 e0a0      	LDI  R26,LOW(0)
00d734 83a0      	STD  Z+0,R26
00d735 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x30C:
00d736 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d738 e0e0      	LDI  R30,LOW(0)
00d739 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d73b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30D:
                +
00d73c e1ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d73d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d73e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d73f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d740 cf3f      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30E:
00d741 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d743 e0b0      	LDI  R27,0
00d744 fda7      	SBRC R26,7
00d745 efbf      	SER  R27
00d746 940c 9799 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x30F:
00d748 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d74a e0b0      	LDI  R27,0
00d74b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x310:
00d74c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d74e e0f0      	LDI  R31,0
00d74f 5ae0      	SUBI R30,LOW(-_prbEn_S0160000000)
00d750 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00d751 81e0      	LD   R30,Z
00d752 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x311:
00d753 93ec      	ST   X,R30
                +
00d754 e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d755 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d756 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d757 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d758 940e e324 	CALL __PUTPARD1
00d75a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x312:
00d75b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d75d 940e e1fb 	CALL __CBD1
00d75f 940e e324 	CALL __PUTPARD1
00d761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x313:
00d762 e2e4      	LDI  R30,LOW(36)
00d763 93e0 14df 	STS  _currentPage,R30
00d765 e0ee      	LDI  R30,LOW(14)
00d766 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d768 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x314:
                +
00d769 e3ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00d76a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00d76b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00d76c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00d76d cf12      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x315:
00d76e e2e4      	LDI  R30,LOW(36)
00d76f 93e0 14df 	STS  _currentPage,R30
00d771 e1e1      	LDI  R30,LOW(17)
00d772 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d774 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x316:
                +
00d775 e4e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00d776 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00d777 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00d778 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00d779 cf06      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x317:
                +
00d77a e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00d77b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00d77c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00d77d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00d77e cf01      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x318:
00d77f e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
00d780 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00d781 93fa      	ST   -Y,R31
00d782 93ea      	ST   -Y,R30
00d783 efef      	LDI  R30,LOW(255)
00d784 93ea      	ST   -Y,R30
00d785 940c c525 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x319:
00d787 91ec      	LD   R30,X
00d788 5fef      	SUBI R30,-LOW(1)
00d789 93ec      	ST   X,R30
00d78a 30ea      	CPI  R30,LOW(0xA)
00d78b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31A:
00d78c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d78e e0f0      	LDI  R31,0
00d78f 5dea      	SUBI R30,LOW(-_newPwd_S0160000000)
00d790 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00d791 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x31B:
                +
00d792 e5e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00d793 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00d794 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00d795 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00d796 940e e324 	CALL __PUTPARD1
00d798 cfc2      	RJMP SUBOPT_0x312
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x31C:
00d799 81e0      	LD   R30,Z
00d79a 940e e1fb 	CALL __CBD1
00d79c cafc      	RJMP SUBOPT_0x289
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31D:
00d79d e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00d79e e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00d79f 93fa      	ST   -Y,R31
00d7a0 93ea      	ST   -Y,R30
00d7a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x31E:
00d7a2 efef      	LDI  R30,LOW(255)
00d7a3 93ea      	ST   -Y,R30
00d7a4 940c c525 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31F:
                +
00d7a6 01fe     +MOVW R30 , R28
00d7a7 5be0     +SUBI R30 , LOW ( - 80 )
00d7a8 4fff     +SBCI R31 , HIGH ( - 80 )
00d7a9 9001     +LD R0 , Z +
00d7aa 81f0     +LD R31 , Z
00d7ab 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00d7ac 93fa      	ST   -Y,R31
00d7ad 93ea      	ST   -Y,R30
00d7ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x320:
00d7af 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d7b1 e0f0      	LDI  R31,0
00d7b2 5de6      	SUBI R30,LOW(-_confPwd_S0160000000)
00d7b3 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00d7b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x321:
00d7b5 e0e1      	LDI  R30,LOW(1)
00d7b6 93e0 14df 	STS  _currentPage,R30
00d7b8 e0e3      	LDI  R30,LOW(3)
00d7b9 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d7bb cf80      	RJMP SUBOPT_0x30D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x322:
                +
00d7bc e8ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00d7bd e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00d7be e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00d7bf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00d7c0 940e e324 	CALL __PUTPARD1
00d7c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x323:
                +
00d7c3 e9e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00d7c4 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00d7c5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00d7c6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00d7c7 940e e324 	CALL __PUTPARD1
00d7c9 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d7cb e0f0      	LDI  R31,0
00d7cc 940c ce99 	JMP SUBOPT_0x201
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x324:
                +
00d7ce e9ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00d7cf e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00d7d0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00d7d1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00d7d2 940e e324 	CALL __PUTPARD1
00d7d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x325:
00d7d5 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d7d7 e0f0      	LDI  R31,0
00d7d8 940c ce99 	JMP SUBOPT_0x201
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x326:
                +
00d7da eae7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00d7db e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00d7dc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00d7dd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00d7de cea1      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x327:
                +
00d7df eaed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00d7e0 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00d7e1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00d7e2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00d7e3 ce9c      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x328:
00d7e4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d7e6 e0f0      	LDI  R31,0
00d7e7 59ea      	SUBI R30,LOW(-_vRef_S0160000000)
00d7e8 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00d7e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x329:
                +
00d7ea ebe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00d7eb e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00d7ec e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00d7ed e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00d7ee ce91      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32A:
00d7ef 91a0 1a69 	LDS  R26,_prb1_S0160000000
00d7f1 5faf      	SUBI R26,-LOW(1)
00d7f2 93a0 1a69 	STS  _prb1_S0160000000,R26
00d7f4 30a5      	CPI  R26,LOW(0x5)
00d7f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32B:
                +
00d7f6 ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00d7f7 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00d7f8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00d7f9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00d7fa 940e e324 	CALL __PUTPARD1
00d7fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x32C:
00d7fd 91e0 1a6a 	LDS  R30,_prb2_S0160000000
00d7ff e0f0      	LDI  R31,0
00d800 940c ce99 	JMP SUBOPT_0x201
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32D:
                +
00d802 ebef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00d803 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00d804 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00d805 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00d806 940e e324 	CALL __PUTPARD1
00d808 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x32E:
00d809 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d80b e0f0      	LDI  R31,0
00d80c 93fa      	ST   -Y,R31
00d80d 93ea      	ST   -Y,R30
00d80e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32F:
00d80f 93e0 14df 	STS  _currentPage,R30
00d811 e1e8      	LDI  R30,LOW(24)
00d812 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d814 e1e9      	LDI  R30,LOW(25)
00d815 cf20      	RJMP SUBOPT_0x30C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x330:
                +
00d816 ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
00d817 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
00d818 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00d819 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
00d81a ce65      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x331:
00d81b 93fa      	ST   -Y,R31
00d81c 93ea      	ST   -Y,R30
00d81d e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00d81e e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00d81f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x332:
                +
00d820 ede4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
00d821 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
00d822 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
00d823 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
00d824 940e e324 	CALL __PUTPARD1
00d826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x333:
                +
00d827 efe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 979 ) )
00d828 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 979 ) )
00d829 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 979 ) )
00d82a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 979 ) )
                 	__POINTD1FN _0x2C0000,979
00d82b ce54      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x334:
00d82c e2e5      	LDI  R30,LOW(37)
00d82d 93e0 14df 	STS  _currentPage,R30
00d82f e1eb      	LDI  R30,LOW(27)
00d830 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d832 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x335:
00d833 e2e4      	LDI  R30,LOW(36)
00d834 93e0 14df 	STS  _currentPage,R30
00d836 e1eb      	LDI  R30,LOW(27)
00d837 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d839 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x336:
00d83a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d83c e0f0      	LDI  R31,0
00d83d 59e5      	SUBI R30,LOW(-_calPnt_S0160000000)
00d83e 4ef5      	SBCI R31,HIGH(-_calPnt_S0160000000)
00d83f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x337:
                +
00d840 e3e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d841 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d842 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d843 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d844 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x338:
                +
00d845 e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d846 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d847 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d848 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d849 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x339:
00d84a e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d84b e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d84c 93fa      	ST   -Y,R31
00d84d 93ea      	ST   -Y,R30
00d84e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33A:
                +
00d84f efe7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 985 ) )
00d850 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 985 ) )
00d851 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 985 ) )
00d852 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 985 ) )
                 	__POINTD1FN _0x2C0000,985
00d853 ce0f      	RJMP SUBOPT_0x2EF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33B:
00d854 91e0 1a20 	LDS  R30,_tmpNextPage_S0160000000
00d856 e0f0      	LDI  R31,0
00d857 30e7      	CPI  R30,LOW(0x7)
00d858 e0a0      	LDI  R26,HIGH(0x7)
00d859 07fa      	CPC  R31,R26
00d85a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x33C:
00d85b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d85d e0f0      	LDI  R31,0
00d85e 5dee      	SUBI R30,LOW(-_entPwd_S0160000000)
00d85f 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00d860 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33D:
00d861 93e0 14df 	STS  _currentPage,R30
00d863 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00d865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x33E:
00d866 940e e2f0 	CALL __GETW1P
00d868 93fa      	ST   -Y,R31
00d869 93ea      	ST   -Y,R30
00d86a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33F:
00d86b 8def      	LDD  R30,Y+31
00d86c 940e e1fb 	CALL __CBD1
00d86e 940c c263 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x340:
00d870 a9a8      	LDD  R26,Y+48
00d871 a9b9      	LDD  R27,Y+48+1
00d872 e1ed      	LDI  R30,LOW(29)
00d873 940e e242 	CALL __MULB1W2U
                +
00d875 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00d876 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00d877 940c c528 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x341:
00d879 940e e324 	CALL __PUTPARD1
00d87b ada8      	LDD  R26,Y+56
00d87c adb9      	LDD  R27,Y+56+1
00d87d e1ed      	LDI  R30,LOW(29)
00d87e 940e e242 	CALL __MULB1W2U
                +
00d880 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00d881 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00d882 940c c528 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x342:
00d884 adac      	LDD  R26,Y+60
00d885 adbd      	LDD  R27,Y+60+1
00d886 e1ed      	LDI  R30,LOW(29)
00d887 940e e242 	CALL __MULB1W2U
                +
00d889 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00d88a 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00d88b 940c c528 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x343:
                +
00d88d 01de     +MOVW R26 , R28
00d88e 5ca0     +SUBI R26 , LOW ( - 64 )
00d88f 4fbf     +SBCI R27 , HIGH ( - 64 )
00d890 900d     +LD R0 , X +
00d891 91bc     +LD R27 , X
00d892 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00d893 c960      	RJMP SUBOPT_0x26F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x344:
00d894 940e e324 	CALL __PUTPARD1
                +
00d896 01de     +MOVW R26 , R28
00d897 5bac     +SUBI R26 , LOW ( - 68 )
00d898 4fbf     +SBCI R27 , HIGH ( - 68 )
00d899 900d     +LD R0 , X +
00d89a 91bc     +LD R27 , X
00d89b 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00d89c e1ed      	LDI  R30,LOW(29)
00d89d 940e e242 	CALL __MULB1W2U
                +
00d89f 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00d8a0 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00d8a1 940c c528 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x345:
00d8a3 93ba      	ST   -Y,R27
00d8a4 93aa      	ST   -Y,R26
00d8a5 9722      	SBIW R28,2
00d8a6 940e e399 	CALL __SAVELOCR6
00d8a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x346:
00d8a9 940e e324 	CALL __PUTPARD1
00d8ab 01fa      	MOVW R30,R20
00d8ac 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x347:
00d8ae 01da      	MOVW R26,R20
00d8af e6e4      	LDI  R30,LOW(100)
00d8b0 e0f0      	LDI  R31,HIGH(100)
00d8b1 940e e260 	CALL __DIVW21U
00d8b3 85a8      	LDD  R26,Y+8
00d8b4 85b9      	LDD  R27,Y+8+1
00d8b5 93ec      	ST   X,R30
00d8b6 01da      	MOVW R26,R20
00d8b7 e6e4      	LDI  R30,LOW(100)
00d8b8 e0f0      	LDI  R31,HIGH(100)
00d8b9 940e e2ae 	CALL __MODW21U
00d8bb 01df      	MOVW R26,R30
00d8bc e0ea      	LDI  R30,LOW(10)
00d8bd e0f0      	LDI  R31,HIGH(10)
00d8be 940e e260 	CALL __DIVW21U
                +
00d8c0 85a8     +LDD R26 , Y + 8
00d8c1 85b9     +LDD R27 , Y + 8 + 1
00d8c2 9611     +ADIW R26 , 1
00d8c3 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d8c4 01da      	MOVW R26,R20
00d8c5 e6e4      	LDI  R30,LOW(100)
00d8c6 e0f0      	LDI  R31,HIGH(100)
00d8c7 940e e2ae 	CALL __MODW21U
00d8c9 01df      	MOVW R26,R30
00d8ca e0ea      	LDI  R30,LOW(10)
00d8cb e0f0      	LDI  R31,HIGH(10)
00d8cc 940e e2ae 	CALL __MODW21U
                +
00d8ce 85a8     +LDD R26 , Y + 8
00d8cf 85b9     +LDD R27 , Y + 8 + 1
00d8d0 9612     +ADIW R26 , 2
00d8d1 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d8d2 85a8      	LDD  R26,Y+8
00d8d3 85b9      	LDD  R27,Y+8+1
00d8d4 9613      	ADIW R26,3
00d8d5 e0e2      	LDI  R30,LOW(2)
00d8d6 93ec      	ST   X,R30
00d8d7 e0e0      	LDI  R30,LOW(0)
00d8d8 e0f0      	LDI  R31,HIGH(0)
00d8d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x348:
00d8da 940e e324 	CALL __PUTPARD1
00d8dc 01f8      	MOVW R30,R16
00d8dd 940c c357 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x349:
00d8df 01d8      	MOVW R26,R16
00d8e0 e6e4      	LDI  R30,LOW(100)
00d8e1 e0f0      	LDI  R31,HIGH(100)
00d8e2 940e e260 	CALL __DIVW21U
00d8e4 85a8      	LDD  R26,Y+8
00d8e5 85b9      	LDD  R27,Y+8+1
00d8e6 93ec      	ST   X,R30
00d8e7 01d8      	MOVW R26,R16
00d8e8 e6e4      	LDI  R30,LOW(100)
00d8e9 e0f0      	LDI  R31,HIGH(100)
00d8ea 940e e2ae 	CALL __MODW21U
00d8ec 01df      	MOVW R26,R30
00d8ed e0ea      	LDI  R30,LOW(10)
00d8ee e0f0      	LDI  R31,HIGH(10)
00d8ef 940e e260 	CALL __DIVW21U
                +
00d8f1 85a8     +LDD R26 , Y + 8
00d8f2 85b9     +LDD R27 , Y + 8 + 1
00d8f3 9611     +ADIW R26 , 1
00d8f4 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d8f5 01d8      	MOVW R26,R16
00d8f6 e6e4      	LDI  R30,LOW(100)
00d8f7 e0f0      	LDI  R31,HIGH(100)
00d8f8 940e e2ae 	CALL __MODW21U
00d8fa 01df      	MOVW R26,R30
00d8fb e0ea      	LDI  R30,LOW(10)
00d8fc e0f0      	LDI  R31,HIGH(10)
00d8fd 940e e2ae 	CALL __MODW21U
                +
00d8ff 85a8     +LDD R26 , Y + 8
00d900 85b9     +LDD R27 , Y + 8 + 1
00d901 9612     +ADIW R26 , 2
00d902 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d903 85a8      	LDD  R26,Y+8
00d904 85b9      	LDD  R27,Y+8+1
00d905 9613      	ADIW R26,3
00d906 e0e1      	LDI  R30,LOW(1)
00d907 93ec      	ST   X,R30
00d908 e0e0      	LDI  R30,LOW(0)
00d909 e0f0      	LDI  R31,HIGH(0)
00d90a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34A:
00d90b 85aa      	LDD  R26,Y+10
00d90c 85bb      	LDD  R27,Y+10+1
00d90d e6e4      	LDI  R30,LOW(100)
00d90e e0f0      	LDI  R31,HIGH(100)
00d90f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34B:
00d910 e8a9      	LDI  R26,LOW(_eep_vref_val)
00d911 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00d912 940e e348 	CALL __EEPROMRDD
00d914 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34C:
00d915 01df      	MOVW R26,R30
00d916 01cb      	MOVW R24,R22
00d917 940c c8be 	JMP SUBOPT_0x10B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34D:
00d919 940e c783 	CALL SUBOPT_0xD5
00d91b 940e e324 	CALL __PUTPARD1
00d91d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34E:
00d91e 01f9      	MOVW R30,R18
00d91f 9634      	ADIW R30,4
00d920 170e      	CP   R16,R30
00d921 071f      	CPC  R17,R31
00d922 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x34F:
00d923 01f8      	MOVW R30,R16
00d924 1be2      	SUB  R30,R18
00d925 0bf3      	SBC  R31,R19
00d926 01de      	MOVW R26,R28
00d927 9650      	ADIW R26,16
00d928 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x350:
00d929 01f8      	MOVW R30,R16
00d92a 0fee      	LSL  R30
00d92b 1fff      	ROL  R31
00d92c 8dac      	LDD  R26,Y+28
00d92d 8dbd      	LDD  R27,Y+28+1
00d92e 0fae      	ADD  R26,R30
00d92f 1fbf      	ADC  R27,R31
00d930 91ac      	LD   R26,X
00d931 940e 9b1c 	CALL _h2i
00d933 e1a0      	LDI  R26,LOW(16)
00d934 02ea      	MULS R30,R26
00d935 01f0      	MOVW R30,R0
00d936 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x351:
00d937 01f8      	MOVW R30,R16
00d938 0fee      	LSL  R30
00d939 1fff      	ROL  R31
00d93a 9631      	ADIW R30,1
00d93b 8dac      	LDD  R26,Y+28
00d93c 8dbd      	LDD  R27,Y+28+1
00d93d 0fae      	ADD  R26,R30
00d93e 1fbf      	ADC  R27,R31
00d93f 91ac      	LD   R26,X
00d940 940c 9b1c 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x352:
00d942 93ec      	ST   X,R30
00d943 01d8      	MOVW R26,R16
00d944 1ba2      	SUB  R26,R18
00d945 0bb3      	SBC  R27,R19
00d946 e0e3      	LDI  R30,LOW(3)
00d947 e0f0      	LDI  R31,HIGH(3)
00d948 940e e248 	CALL __MULW12
00d94a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x353:
00d94b 8daa      	LDD  R26,Y+26
00d94c 8dbb      	LDD  R27,Y+26+1
00d94d 0fea      	ADD  R30,R26
00d94e 1ffb      	ADC  R31,R27
00d94f 01bf      	MOVW R22,R30
00d950 cfd2      	RJMP SUBOPT_0x34F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x354:
00d951 0fae      	ADD  R26,R30
00d952 1fbf      	ADC  R27,R31
00d953 91ec      	LD   R30,X
00d954 e0f0      	LDI  R31,0
00d955 01df      	MOVW R26,R30
00d956 e6e4      	LDI  R30,LOW(100)
00d957 e0f0      	LDI  R31,HIGH(100)
00d958 940e e273 	CALL __DIVW21
00d95a 01db      	MOVW R26,R22
00d95b cfe6      	RJMP SUBOPT_0x352
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x355:
00d95c 0fae      	ADD  R26,R30
00d95d 1fbf      	ADC  R27,R31
00d95e 91ac      	LD   R26,X
00d95f 27bb      	CLR  R27
00d960 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x356:
00d961 01df      	MOVW R26,R30
00d962 e0ea      	LDI  R30,LOW(10)
00d963 e0f0      	LDI  R31,HIGH(10)
00d964 940e e273 	CALL __DIVW21
00d966 01db      	MOVW R26,R22
00d967 cfda      	RJMP SUBOPT_0x352
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x357:
00d968 01f8      	MOVW R30,R16
00d969 1be2      	SUB  R30,R18
00d96a 0bf3      	SBC  R31,R19
00d96b 01de      	MOVW R26,R28
00d96c 961c      	ADIW R26,12
00d96d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x358:
00d96e 8da8      	LDD  R26,Y+24
00d96f 8db9      	LDD  R27,Y+24+1
00d970 0fea      	ADD  R30,R26
00d971 1ffb      	ADC  R31,R27
00d972 01bf      	MOVW R22,R30
00d973 cff4      	RJMP SUBOPT_0x357
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x359:
00d974 01f8      	MOVW R30,R16
00d975 1be2      	SUB  R30,R18
00d976 0bf3      	SBC  R31,R19
00d977 01de      	MOVW R26,R28
00d978 9618      	ADIW R26,8
00d979 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x35A:
00d97a 89ae      	LDD  R26,Y+22
00d97b 89bf      	LDD  R27,Y+22+1
00d97c 0fea      	ADD  R30,R26
00d97d 1ffb      	ADC  R31,R27
00d97e 01bf      	MOVW R22,R30
00d97f cff4      	RJMP SUBOPT_0x359
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x35B:
00d980 89ac      	LDD  R26,Y+20
00d981 89bd      	LDD  R27,Y+20+1
00d982 0fea      	ADD  R30,R26
00d983 1ffb      	ADC  R31,R27
00d984 01bf      	MOVW R22,R30
00d985 01f8      	MOVW R30,R16
00d986 1be2      	SUB  R30,R18
00d987 0bf3      	SBC  R31,R19
00d988 940c cadd 	JMP SUBOPT_0x167
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35C:
00d98a 91ec      	LD   R30,X
00d98b e0f0      	LDI  R31,0
00d98c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35D:
00d98d 81e8      	LD   R30,Y
00d98e e0f0      	LDI  R31,0
00d98f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x35E:
00d990 01de      	MOVW R26,R28
00d991 965e      	ADIW R26,30
00d992 0fae      	ADD  R26,R30
00d993 1fbf      	ADC  R27,R31
00d994 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35F:
00d995 e0e0      	LDI  R30,LOW(0)
00d996 a3ea      	STD  Y+34,R30
00d997 01de      	MOVW R26,R28
00d998 965e      	ADIW R26,30
00d999 940c a427 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x360:
00d99b e0e0      	LDI  R30,LOW(0)
00d99c a3e8      	STD  Y+32,R30
00d99d 01de      	MOVW R26,R28
00d99e 965e      	ADIW R26,30
00d99f 940c a427 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x361:
                +
00d9a1 87e8     +STD Y + 8 , R30
00d9a2 87f9     +STD Y + 8 + 1 , R31
00d9a3 876a     +STD Y + 8 + 2 , R22
00d9a4 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00d9a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x362:
                +
00d9a6 8be8     +STD Y + 16 , R30
00d9a7 8bf9     +STD Y + 16 + 1 , R31
00d9a8 8b6a     +STD Y + 16 + 2 , R22
00d9a9 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00d9aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x363:
                +
00d9ab 8bec     +STD Y + 20 , R30
00d9ac 8bfd     +STD Y + 20 + 1 , R31
00d9ad 8b6e     +STD Y + 20 + 2 , R22
00d9ae 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00d9af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x364:
00d9b0 940e e324 	CALL __PUTPARD1
                +
00d9b2 8dec     +LDD R30 , Y + 28
00d9b3 8dfd     +LDD R31 , Y + 28 + 1
00d9b4 8d6e     +LDD R22 , Y + 28 + 2
00d9b5 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
00d9b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x365:
                +
00d9b7 ebeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 255 ) )
00d9b8 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 255 ) )
00d9b9 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 255 ) )
00d9ba e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 255 ) )
                 	__POINTD1FN _0x2E0000,255
00d9bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x366:
00d9bc 01de      	MOVW R26,R28
00d9bd 9611      	ADIW R26,1
00d9be 0fae      	ADD  R26,R30
00d9bf 1fbf      	ADC  R27,R31
00d9c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x367:
00d9c1 e0e9      	LDI  R30,LOW(9)
00d9c2 e0f0      	LDI  R31,HIGH(9)
00d9c3 93e0 10f4 	STS  _hwCalId,R30
00d9c5 93f0 10f5 	STS  _hwCalId+1,R31
00d9c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x368:
00d9c8 940e e324 	CALL __PUTPARD1
00d9ca 940c c68a 	JMP SUBOPT_0xAC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x369:
00d9cc 2fa1      	MOV  R26,R17
00d9cd 27bb      	CLR  R27
00d9ce e0e3      	LDI  R30,LOW(3)
00d9cf e0f0      	LDI  R31,HIGH(3)
00d9d0 940e e2b1 	CALL __MODW21
00d9d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x36A:
00d9d3 2fa1      	MOV  R26,R17
00d9d4 e0b0      	LDI  R27,0
00d9d5 e0e3      	LDI  R30,LOW(3)
00d9d6 e0f0      	LDI  R31,HIGH(3)
00d9d7 940e e273 	CALL __DIVW21
00d9d9 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00d9da 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00d9db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36B:
00d9dc 91ac      	LD   R26,X
00d9dd 940e c165 	CALL _isdigit
00d9df 30e0      	CPI  R30,0
00d9e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36C:
00d9e1 01bf      	MOVW R22,R30
00d9e2 01df      	MOVW R26,R30
00d9e3 940e e350 	CALL __EEPROMRDB
00d9e5 2e0e      	MOV  R0,R30
00d9e6 940c c68a 	JMP SUBOPT_0xAC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36D:
                +
00d9e8 eded     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 801 ) )
00d9e9 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 801 ) )
00d9ea e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 801 ) )
00d9eb e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 801 ) )
                 	__POINTD1FN _0x2E0000,801
00d9ec 940e e324 	CALL __PUTPARD1
00d9ee 2fa1      	MOV  R26,R17
00d9ef e0b0      	LDI  R27,0
00d9f0 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00d9f1 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00d9f2 940c c9a7 	JMP SUBOPT_0x134
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36E:
                +
00d9f4 ecef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 19 ) )
00d9f5 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 19 ) )
00d9f6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 19 ) )
00d9f7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 19 ) )
                 	__POINTD1FN _0x2E0000,19
00d9f8 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x36F:
00d9fa e6ef      	LDI  R30,LOW(_rxPackage3)
00d9fb e0fd      	LDI  R31,HIGH(_rxPackage3)
00d9fc 93fa      	ST   -Y,R31
00d9fd 93ea      	ST   -Y,R30
00d9fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x370:
00d9ff 940e e324 	CALL __PUTPARD1
00da01 e0a7      	LDI  R26,LOW(7)
00da02 940e a7b5 	CALL _strncmpf
00da04 30e0      	CPI  R30,0
00da05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x371:
00da06 940e e324 	CALL __PUTPARD1
00da08 01da      	MOVW R26,R20
00da09 91ec      	LD   R30,X
00da0a 940c c309 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x372:
                +
00da0c eae1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00da0d e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00da0e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00da0f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00da10 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x373:
                +
00da12 e2e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 869 ) )
00da13 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 869 ) )
00da14 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 869 ) )
00da15 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 869 ) )
                 	__POINTD1FN _0x2E0000,869
00da16 940c c1f5 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x374:
00da18 85ac      	LDD  R26,Y+12
00da19 85bd      	LDD  R27,Y+12+1
00da1a 940c 9ea4 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x375:
00da1c 91e0 1a71 	LDS  R30,_n
00da1e 91f0 1a72 	LDS  R31,_n+1
00da20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x376:
00da21 01f9      	MOVW R30,R18
00da22 940e e1c7 	CALL __LSLW4
00da24 58ed      	SUBI R30,LOW(-_a)
00da25 4ef5      	SBCI R31,HIGH(-_a)
00da26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x377:
00da27 01df      	MOVW R26,R30
00da28 01f8      	MOVW R30,R16
00da29 940c d200 	JMP SUBOPT_0x271
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x378:
00da2b 85ea      	LDD  R30,Y+10
00da2c 85fb      	LDD  R31,Y+10+1
00da2d 940e e1c7 	CALL __LSLW4
00da2f 58ed      	SUBI R30,LOW(-_a)
00da30 4ef5      	SBCI R31,HIGH(-_a)
00da31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x379:
00da32 01df      	MOVW R26,R30
00da33 01f9      	MOVW R30,R18
00da34 940c d200 	JMP SUBOPT_0x271
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37A:
00da36 01df      	MOVW R26,R30
00da37 01f9      	MOVW R30,R18
00da38 940e e1cb 	CALL __LSLW2
00da3a 0fea      	ADD  R30,R26
00da3b 1ffb      	ADC  R31,R27
00da3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37B:
00da3d 01f8      	MOVW R30,R16
00da3e 940e e1c7 	CALL __LSLW4
00da40 58ed      	SUBI R30,LOW(-_a)
00da41 4ef5      	SBCI R31,HIGH(-_a)
00da42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37C:
00da43 01df      	MOVW R26,R30
00da44 dfd7      	RCALL SUBOPT_0x375
00da45 940e e1cb 	CALL __LSLW2
00da47 0fea      	ADD  R30,R26
00da48 1ffb      	ADC  R31,R27
00da49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37D:
                +
00da4a e0e0     +LDI R30 , LOW ( 0x3F800000 )
00da4b e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00da4c e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00da4d e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00da4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37E:
                +
00da4f e0a0     +LDI R26 , LOW ( 0x3F800000 )
00da50 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00da51 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00da52 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00da53 940c d198 	JMP SUBOPT_0x261
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37F:
00da55 97ef      	SBIW R28,63
00da56 97ef      	SBIW R28,63
00da57 97ef      	SBIW R28,63
00da58 9727      	SBIW R28,7
00da59 ec84      	LDI  R24,196
00da5a e0a0      	LDI  R26,LOW(0)
00da5b e0b0      	LDI  R27,HIGH(0)
00da5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x380:
                +
00da5d e0e0     +LDI R30 , LOW ( 0x44800000 )
00da5e e0f0     +LDI R31 , HIGH ( 0x44800000 )
00da5f e860     +LDI R22 , BYTE3 ( 0x44800000 )
00da60 e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
00da61 940e e113 	CALL __DIVF21
                +
00da63 e3a3     +LDI R26 , LOW ( 0x40533333 )
00da64 e3b3     +LDI R27 , HIGH ( 0x40533333 )
00da65 e583     +LDI R24 , BYTE3 ( 0x40533333 )
00da66 e490     +LDI R25 , BYTE4 ( 0x40533333 )
                 	__GETD2N 0x40533333
00da67 940e e0c5 	CALL __MULF12
00da69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x381:
                +
00da6a 01de     +MOVW R26 , R28
00da6b 54a6     +SUBI R26 , LOW ( - 186 )
00da6c 4fbf     +SBCI R27 , HIGH ( - 186 )
00da6d 900d     +LD R0 , X +
00da6e 901d     +LD R1 , X +
00da6f 918d     +LD R24 , X +
00da70 919c     +LD R25 , X
00da71 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
                +
00da72 e1e2     +LDI R30 , LOW ( 0xBDC08312 )
00da73 e8f3     +LDI R31 , HIGH ( 0xBDC08312 )
00da74 ec60     +LDI R22 , BYTE3 ( 0xBDC08312 )
00da75 eb7d     +LDI R23 , BYTE4 ( 0xBDC08312 )
                 	__GETD1N 0xBDC08312
00da76 940e e158 	CALL __CMPF12
00da78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x382:
                +
00da79 01de     +MOVW R26 , R28
00da7a 54a6     +SUBI R26 , LOW ( - 186 )
00da7b 4fbf     +SBCI R27 , HIGH ( - 186 )
00da7c 900d     +LD R0 , X +
00da7d 901d     +LD R1 , X +
00da7e 918d     +LD R24 , X +
00da7f 919c     +LD R25 , X
00da80 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
00da81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x383:
                +
00da82 e0e0     +LDI R30 , LOW ( 0xBEC00000 )
00da83 e0f0     +LDI R31 , HIGH ( 0xBEC00000 )
00da84 ec60     +LDI R22 , BYTE3 ( 0xBEC00000 )
00da85 eb7e     +LDI R23 , BYTE4 ( 0xBEC00000 )
                 	__GETD1N 0xBEC00000
00da86 940e e158 	CALL __CMPF12
00da88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x384:
                +
00da89 01fe     +MOVW R30 , R28
00da8a 5ce2     +SUBI R30 , LOW ( - 62 )
00da8b 4fff     +SBCI R31 , HIGH ( - 62 )
00da8c 9001     +LD R0 , Z +
00da8d 9011     +LD R1 , Z +
00da8e 9161     +LD R22 , Z +
00da8f 8170     +LD R23 , Z
00da90 01f0     +MOVW R30 , R0
                 	__GETD1SX 62
00da91 940e e324 	CALL __PUTPARD1
00da93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x385:
00da94 940e e324 	CALL __PUTPARD1
00da96 01fe      	MOVW R30,R28
00da97 53e6      	SUBI R30,LOW(-(202))
00da98 4fff      	SBCI R31,HIGH(-(202))
00da99 93fa      	ST   -Y,R31
00da9a 93ea      	ST   -Y,R30
00da9b 01fe      	MOVW R30,R28
00da9c 53e8      	SUBI R30,LOW(-(200))
00da9d 4fff      	SBCI R31,HIGH(-(200))
00da9e 93fa      	ST   -Y,R31
00da9f 93ea      	ST   -Y,R30
00daa0 01de      	MOVW R26,R28
00daa1 53aa      	SUBI R26,LOW(-(198))
00daa2 4fbf      	SBCI R27,HIGH(-(198))
00daa3 940e a073 	CALL _gaussian
                +
00daa5 01fe     +MOVW R30 , R28
00daa6 54e6     +SUBI R30 , LOW ( - 186 )
00daa7 4fff     +SBCI R31 , HIGH ( - 186 )
00daa8 9001     +LD R0 , Z +
00daa9 9011     +LD R1 , Z +
00daaa 9161     +LD R22 , Z +
00daab 8170     +LD R23 , Z
00daac 01f0     +MOVW R30 , R0
                 	__GETD1SX 186
                +
00daad 01de     +MOVW R26 , R28
00daae 54ae     +SUBI R26 , LOW ( - 178 )
00daaf 4fbf     +SBCI R27 , HIGH ( - 178 )
00dab0 900d     +LD R0 , X +
00dab1 901d     +LD R1 , X +
00dab2 918d     +LD R24 , X +
00dab3 919c     +LD R25 , X
00dab4 01d0     +MOVW R26 , R0
                 	__GETD2SX 178
00dab5 940e e0c5 	CALL __MULF12
00dab7 dfc1      	RCALL SUBOPT_0x382
00dab8 940e e0c5 	CALL __MULF12
00daba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x386:
                +
00dabb 01fe     +MOVW R30 , R28
00dabc 54e6     +SUBI R30 , LOW ( - 186 )
00dabd 4fff     +SBCI R31 , HIGH ( - 186 )
00dabe 9001     +LD R0 , Z +
00dabf 9011     +LD R1 , Z +
00dac0 9161     +LD R22 , Z +
00dac1 8170     +LD R23 , Z
00dac2 01f0     +MOVW R30 , R0
                 	__GETD1SX 186
00dac3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x387:
                +
00dac4 01de     +MOVW R26 , R28
00dac5 55a2     +SUBI R26 , LOW ( - 174 )
00dac6 4fbf     +SBCI R27 , HIGH ( - 174 )
00dac7 900d     +LD R0 , X +
00dac8 901d     +LD R1 , X +
00dac9 918d     +LD R24 , X +
00daca 919c     +LD R25 , X
00dacb 01d0     +MOVW R26 , R0
                 	__GETD2SX 174
00dacc 940e e0c5 	CALL __MULF12
00dace 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x388:
00dacf 940e e075 	CALL __ADDF12
                +
00dad1 01de     +MOVW R26 , R28
00dad2 55a6     +SUBI R26 , LOW ( - 170 )
00dad3 4fbf     +SBCI R27 , HIGH ( - 170 )
00dad4 900d     +LD R0 , X +
00dad5 901d     +LD R1 , X +
00dad6 918d     +LD R24 , X +
00dad7 919c     +LD R25 , X
00dad8 01d0     +MOVW R26 , R0
                 	__GETD2SX 170
00dad9 940e e075 	CALL __ADDF12
00dadb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x389:
00dadc df9c      	RCALL SUBOPT_0x382
                +
00dadd e6e2     +LDI R30 , LOW ( 0xBF381062 )
00dade e1f0     +LDI R31 , HIGH ( 0xBF381062 )
00dadf e368     +LDI R22 , BYTE3 ( 0xBF381062 )
00dae0 eb7f     +LDI R23 , BYTE4 ( 0xBF381062 )
                 	__GETD1N 0xBF381062
00dae1 940e e158 	CALL __CMPF12
00dae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x38A:
00dae4 940e e324 	CALL __PUTPARD1
00dae6 01fe      	MOVW R30,R28
00dae7 5bee      	SUBI R30,LOW(-(66))
00dae8 4fff      	SBCI R31,HIGH(-(66))
00dae9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x38B:
00daea 01fe      	MOVW R30,R28
00daeb 53e6      	SUBI R30,LOW(-(202))
00daec 4fff      	SBCI R31,HIGH(-(202))
00daed 93fa      	ST   -Y,R31
00daee 93ea      	ST   -Y,R30
00daef 01fe      	MOVW R30,R28
00daf0 53e8      	SUBI R30,LOW(-(200))
00daf1 4fff      	SBCI R31,HIGH(-(200))
00daf2 93fa      	ST   -Y,R31
00daf3 93ea      	ST   -Y,R30
00daf4 01de      	MOVW R26,R28
00daf5 53aa      	SUBI R26,LOW(-(198))
00daf6 4fbf      	SBCI R27,HIGH(-(198))
00daf7 940e a073 	CALL _gaussian
00daf9 dfc1      	RCALL SUBOPT_0x386
                +
00dafa 01de     +MOVW R26 , R28
00dafb 54ae     +SUBI R26 , LOW ( - 178 )
00dafc 4fbf     +SBCI R27 , HIGH ( - 178 )
00dafd 900d     +LD R0 , X +
00dafe 901d     +LD R1 , X +
00daff 918d     +LD R24 , X +
00db00 919c     +LD R25 , X
00db01 01d0     +MOVW R26 , R0
                 	__GETD2SX 178
00db02 940e e0c5 	CALL __MULF12
00db04 df74      	RCALL SUBOPT_0x382
00db05 940e e0c5 	CALL __MULF12
00db07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38C:
00db08 dfb2      	RCALL SUBOPT_0x386
00db09 cfba      	RJMP SUBOPT_0x387
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38D:
00db0a df6e      	RCALL SUBOPT_0x382
                +
00db0b e2e1     +LDI R30 , LOW ( 0xBF82B021 )
00db0c ebf0     +LDI R31 , HIGH ( 0xBF82B021 )
00db0d e862     +LDI R22 , BYTE3 ( 0xBF82B021 )
00db0e eb7f     +LDI R23 , BYTE4 ( 0xBF82B021 )
                 	__GETD1N 0xBF82B021
00db0f 940e e158 	CALL __CMPF12
00db11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38E:
00db12 df66      	RCALL SUBOPT_0x382
                +
00db13 e9e8     +LDI R30 , LOW ( 0xBFA26E98 )
00db14 e6fe     +LDI R31 , HIGH ( 0xBFA26E98 )
00db15 ea62     +LDI R22 , BYTE3 ( 0xBFA26E98 )
00db16 eb7f     +LDI R23 , BYTE4 ( 0xBFA26E98 )
                 	__GETD1N 0xBFA26E98
00db17 940e e158 	CALL __CMPF12
00db19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38F:
                +
00db1a e0e0     +LDI R30 , LOW ( 0x447A0000 )
00db1b e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00db1c e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00db1d e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00db1e 940e e0c5 	CALL __MULF12
00db20 cdf4      	RJMP SUBOPT_0x34C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x390:
00db21 de84      	RCALL SUBOPT_0x362
00db22 940c cfa2 	JMP SUBOPT_0x21E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x391:
                +
00db24 01de     +MOVW R26 , R28
00db25 54a8     +SUBI R26 , LOW ( - 184 )
00db26 4fbf     +SBCI R27 , HIGH ( - 184 )
00db27 900d     +LD R0 , X +
00db28 901d     +LD R1 , X +
00db29 918d     +LD R24 , X +
00db2a 919c     +LD R25 , X
00db2b 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
                +
00db2c e1e2     +LDI R30 , LOW ( 0xBDC08312 )
00db2d e8f3     +LDI R31 , HIGH ( 0xBDC08312 )
00db2e ec60     +LDI R22 , BYTE3 ( 0xBDC08312 )
00db2f eb7d     +LDI R23 , BYTE4 ( 0xBDC08312 )
                 	__GETD1N 0xBDC08312
00db30 940e e158 	CALL __CMPF12
00db32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x392:
                +
00db33 01de     +MOVW R26 , R28
00db34 54a8     +SUBI R26 , LOW ( - 184 )
00db35 4fbf     +SBCI R27 , HIGH ( - 184 )
00db36 900d     +LD R0 , X +
00db37 901d     +LD R1 , X +
00db38 918d     +LD R24 , X +
00db39 919c     +LD R25 , X
00db3a 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
00db3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x393:
00db3c 940e e324 	CALL __PUTPARD1
00db3e 01fe      	MOVW R30,R28
00db3f 53e8      	SUBI R30,LOW(-(200))
00db40 4fff      	SBCI R31,HIGH(-(200))
00db41 93fa      	ST   -Y,R31
00db42 93ea      	ST   -Y,R30
00db43 01fe      	MOVW R30,R28
00db44 53ea      	SUBI R30,LOW(-(198))
00db45 4fff      	SBCI R31,HIGH(-(198))
00db46 93fa      	ST   -Y,R31
00db47 93ea      	ST   -Y,R30
00db48 01de      	MOVW R26,R28
00db49 53ac      	SUBI R26,LOW(-(196))
00db4a 4fbf      	SBCI R27,HIGH(-(196))
00db4b 940e a073 	CALL _gaussian
                +
00db4d 01fe     +MOVW R30 , R28
00db4e 54e8     +SUBI R30 , LOW ( - 184 )
00db4f 4fff     +SBCI R31 , HIGH ( - 184 )
00db50 9001     +LD R0 , Z +
00db51 9011     +LD R1 , Z +
00db52 9161     +LD R22 , Z +
00db53 8170     +LD R23 , Z
00db54 01f0     +MOVW R30 , R0
                 	__GETD1SX 184
                +
00db55 01de     +MOVW R26 , R28
00db56 55a0     +SUBI R26 , LOW ( - 176 )
00db57 4fbf     +SBCI R27 , HIGH ( - 176 )
00db58 900d     +LD R0 , X +
00db59 901d     +LD R1 , X +
00db5a 918d     +LD R24 , X +
00db5b 919c     +LD R25 , X
00db5c 01d0     +MOVW R26 , R0
                 	__GETD2SX 176
00db5d 940e e0c5 	CALL __MULF12
00db5f dfd3      	RCALL SUBOPT_0x392
00db60 940e e0c5 	CALL __MULF12
00db62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x394:
                +
00db63 01fe     +MOVW R30 , R28
00db64 54e8     +SUBI R30 , LOW ( - 184 )
00db65 4fff     +SBCI R31 , HIGH ( - 184 )
00db66 9001     +LD R0 , Z +
00db67 9011     +LD R1 , Z +
00db68 9161     +LD R22 , Z +
00db69 8170     +LD R23 , Z
00db6a 01f0     +MOVW R30 , R0
                 	__GETD1SX 184
00db6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x395:
                +
00db6c 01de     +MOVW R26 , R28
00db6d 55a4     +SUBI R26 , LOW ( - 172 )
00db6e 4fbf     +SBCI R27 , HIGH ( - 172 )
00db6f 900d     +LD R0 , X +
00db70 901d     +LD R1 , X +
00db71 918d     +LD R24 , X +
00db72 919c     +LD R25 , X
00db73 01d0     +MOVW R26 , R0
                 	__GETD2SX 172
00db74 940e e0c5 	CALL __MULF12
00db76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x396:
00db77 940e e075 	CALL __ADDF12
                +
00db79 01de     +MOVW R26 , R28
00db7a 55a8     +SUBI R26 , LOW ( - 168 )
00db7b 4fbf     +SBCI R27 , HIGH ( - 168 )
00db7c 900d     +LD R0 , X +
00db7d 901d     +LD R1 , X +
00db7e 918d     +LD R24 , X +
00db7f 919c     +LD R25 , X
00db80 01d0     +MOVW R26 , R0
                 	__GETD2SX 168
00db81 940e e075 	CALL __ADDF12
00db83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x397:
00db84 dfae      	RCALL SUBOPT_0x392
                +
00db85 e6e2     +LDI R30 , LOW ( 0xBF381062 )
00db86 e1f0     +LDI R31 , HIGH ( 0xBF381062 )
00db87 e368     +LDI R22 , BYTE3 ( 0xBF381062 )
00db88 eb7f     +LDI R23 , BYTE4 ( 0xBF381062 )
                 	__GETD1N 0xBF381062
00db89 940e e158 	CALL __CMPF12
00db8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x398:
00db8c 940e e324 	CALL __PUTPARD1
00db8e 01fe      	MOVW R30,R28
00db8f 5ce0      	SUBI R30,LOW(-(64))
00db90 4fff      	SBCI R31,HIGH(-(64))
00db91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x399:
00db92 01fe      	MOVW R30,R28
00db93 53e8      	SUBI R30,LOW(-(200))
00db94 4fff      	SBCI R31,HIGH(-(200))
00db95 93fa      	ST   -Y,R31
00db96 93ea      	ST   -Y,R30
00db97 01fe      	MOVW R30,R28
00db98 53ea      	SUBI R30,LOW(-(198))
00db99 4fff      	SBCI R31,HIGH(-(198))
00db9a 93fa      	ST   -Y,R31
00db9b 93ea      	ST   -Y,R30
00db9c 01de      	MOVW R26,R28
00db9d 53ac      	SUBI R26,LOW(-(196))
00db9e 4fbf      	SBCI R27,HIGH(-(196))
00db9f 940e a073 	CALL _gaussian
00dba1 dfc1      	RCALL SUBOPT_0x394
                +
00dba2 01de     +MOVW R26 , R28
00dba3 55a0     +SUBI R26 , LOW ( - 176 )
00dba4 4fbf     +SBCI R27 , HIGH ( - 176 )
00dba5 900d     +LD R0 , X +
00dba6 901d     +LD R1 , X +
00dba7 918d     +LD R24 , X +
00dba8 919c     +LD R25 , X
00dba9 01d0     +MOVW R26 , R0
                 	__GETD2SX 176
00dbaa 940e e0c5 	CALL __MULF12
00dbac df86      	RCALL SUBOPT_0x392
00dbad 940e e0c5 	CALL __MULF12
00dbaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39A:
00dbb0 dfb2      	RCALL SUBOPT_0x394
00dbb1 cfba      	RJMP SUBOPT_0x395
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39B:
00dbb2 df80      	RCALL SUBOPT_0x392
                +
00dbb3 e2e1     +LDI R30 , LOW ( 0xBF82B021 )
00dbb4 ebf0     +LDI R31 , HIGH ( 0xBF82B021 )
00dbb5 e862     +LDI R22 , BYTE3 ( 0xBF82B021 )
00dbb6 eb7f     +LDI R23 , BYTE4 ( 0xBF82B021 )
                 	__GETD1N 0xBF82B021
00dbb7 940e e158 	CALL __CMPF12
00dbb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39C:
00dbba df78      	RCALL SUBOPT_0x392
                +
00dbbb e9e8     +LDI R30 , LOW ( 0xBFA26E98 )
00dbbc e6fe     +LDI R31 , HIGH ( 0xBFA26E98 )
00dbbd ea62     +LDI R22 , BYTE3 ( 0xBFA26E98 )
00dbbe eb7f     +LDI R23 , BYTE4 ( 0xBFA26E98 )
                 	__GETD1N 0xBFA26E98
00dbbf 940e e158 	CALL __CMPF12
00dbc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x39D:
                +
00dbc2 87e9     +STD Y + 9 , R30
00dbc3 87fa     +STD Y + 9 + 1 , R31
00dbc4 876b     +STD Y + 9 + 2 , R22
00dbc5 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00dbc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x39E:
00dbc7 81ae      	LDD  R26,Y+6
00dbc8 81bf      	LDD  R27,Y+6+1
00dbc9 9611      	ADIW R26,1
00dbca 83ae      	STD  Y+6,R26
00dbcb 83bf      	STD  Y+6+1,R27
00dbcc 9711      	SBIW R26,1
00dbcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39F:
00dbce 940e c6b1 	CALL SUBOPT_0xB4
                +
00dbd0 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00dbd1 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00dbd2 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00dbd3 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00dbd4 940e e0c5 	CALL __MULF12
00dbd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A0:
00dbd7 940e c6ac 	CALL SUBOPT_0xB3
                +
00dbd9 85a9     +LDD R26 , Y + 9
00dbda 85ba     +LDD R27 , Y + 9 + 1
00dbdb 858b     +LDD R24 , Y + 9 + 2
00dbdc 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00dbdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3A1:
00dbde 940e c8be 	CALL SUBOPT_0x10B
00dbe0 940e e0c5 	CALL __MULF12
00dbe2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A2:
00dbe3 940e cebb 	CALL SUBOPT_0x205
00dbe5 940e e075 	CALL __ADDF12
00dbe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3A3:
                +
00dbe8 85a9     +LDD R26 , Y + 9
00dbe9 85ba     +LDD R27 , Y + 9 + 1
00dbea 858b     +LDD R24 , Y + 9 + 2
00dbeb 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00dbec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A4:
00dbed 2fe0      	MOV  R30,R16
00dbee 5de0      	SUBI R30,-LOW(48)
00dbef 93ec      	ST   X,R30
00dbf0 2fe0      	MOV  R30,R16
00dbf1 e0f0      	LDI  R31,0
00dbf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A5:
00dbf3 940e e201 	CALL __CWD1
00dbf5 940e e03b 	CALL __CDF1
00dbf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A6:
00dbf8 89e8      	LDD  R30,Y+16
00dbf9 89f9      	LDD  R31,Y+16+1
00dbfa 9631      	ADIW R30,1
00dbfb 8be8      	STD  Y+16,R30
00dbfc 8bf9      	STD  Y+16+1,R31
00dbfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A7:
00dbfe 940e c23b 	CALL SUBOPT_0xB
00dc00 cfdd      	RJMP SUBOPT_0x3A1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A8:
00dc01 940e e0c5 	CALL __MULF12
00dc03 940c c805 	JMP SUBOPT_0xEA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A9:
00dc05 93e0 1aa9 	STS  __seed_G100,R30
00dc07 93f0 1aaa 	STS  __seed_G100+1,R31
00dc09 9360 1aab 	STS  __seed_G100+2,R22
00dc0b 9370 1aac 	STS  __seed_G100+3,R23
00dc0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AA:
00dc0e 940e e2f0 	CALL __GETW1P
00dc10 83ee      	STD  Y+6,R30
00dc11 83ff      	STD  Y+6+1,R31
00dc12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3AB:
00dc13 e0f0      	LDI  R31,0
00dc14 940e e201 	CALL __CWD1
00dc16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3AC:
00dc17 940e e2fa 	CALL __GETD1P_INC
00dc19 940e c779 	CALL SUBOPT_0xD3
00dc1b 940e e304 	CALL __PUTDP1_DEC
00dc1d 940c c799 	JMP SUBOPT_0xDA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AD:
00dc1f 940e e2f4 	CALL __GETD1P
                +
00dc21 83e9     +STD Y + 1 , R30
00dc22 83fa     +STD Y + 1 + 1 , R31
00dc23 836b     +STD Y + 1 + 2 , R22
00dc24 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00dc25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3AE:
                +
00dc26 81ed     +LDD R30 , Y + 5
00dc27 81fe     +LDD R31 , Y + 5 + 1
00dc28 816f     +LDD R22 , Y + 5 + 2
00dc29 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00dc2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x3AF:
00dc2b 85e9      	LDD  R30,Y+9
00dc2c 85fa      	LDD  R31,Y+9+1
00dc2d 81a1      	LDD  R26,Z+1
00dc2e 93aa      	ST   -Y,R26
00dc2f 85ea      	LDD  R30,Y+10
00dc30 85fb      	LDD  R31,Y+10+1
00dc31 96f2      	ADIW R30,50
00dc32 93fa      	ST   -Y,R31
00dc33 93ea      	ST   -Y,R30
00dc34 940e c598 	CALL SUBOPT_0x89
00dc36 940e e324 	CALL __PUTPARD1
00dc38 e0a1      	LDI  R26,LOW(1)
00dc39 940c aa52 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B0:
                +
00dc3b a1a2     +LDD R26 , Z + 34
00dc3c a1b3     +LDD R27 , Z + 34 + 1
00dc3d a184     +LDD R24 , Z + 34 + 2
00dc3e a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00dc3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B1:
00dc40 93fa      	ST   -Y,R31
00dc41 93ea      	ST   -Y,R30
00dc42 940e c412 	CALL SUBOPT_0x4F
00dc44 940e e324 	CALL __PUTPARD1
00dc46 e0a1      	LDI  R26,LOW(1)
00dc47 940e a9ed 	CALL _disk_read
00dc49 30e0      	CPI  R30,0
00dc4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B2:
00dc4b 940e c317 	CALL SUBOPT_0x2C
00dc4d 940c ad8f 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3B3:
00dc4f 96f2      	ADIW R30,50
00dc50 93fa      	ST   -Y,R31
00dc51 93ea      	ST   -Y,R30
00dc52 e0e0      	LDI  R30,LOW(0)
00dc53 e0f0      	LDI  R31,HIGH(0)
00dc54 93fa      	ST   -Y,R31
00dc55 93ea      	ST   -Y,R30
00dc56 e0a0      	LDI  R26,LOW(512)
00dc57 e0b2      	LDI  R27,HIGH(512)
00dc58 940c ad32 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B4:
00dc5a 940e e2f4 	CALL __GETD1P
00dc5c 01d0      	MOVW R26,R0
00dc5d 940e e2ff 	CALL __PUTDP1
00dc5f 81e9      	LDD  R30,Y+1
00dc60 81fa      	LDD  R31,Y+1+1
00dc61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B5:
                +
00dc62 89a2     +LDD R26 , Z + 18
00dc63 89b3     +LDD R27 , Z + 18 + 1
00dc64 8984     +LDD R24 , Z + 18 + 2
00dc65 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00dc66 940e e329 	CALL __PUTPARD2
00dc68 e0a1      	LDI  R26,LOW(1)
00dc69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3B6:
                +
00dc6a 30a2     +CPI R26 , LOW ( 0x2 )
00dc6b e0e0     +LDI R30 , HIGH ( 0x2 )
00dc6c 07be     +CPC R27 , R30
00dc6d e0e0     +LDI R30 , BYTE3 ( 0x2 )
00dc6e 078e     +CPC R24 , R30
00dc6f e0e0     +LDI R30 , BYTE4 ( 0x2 )
00dc70 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00dc71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B7:
                +
00dc72 e0e1     +LDI R30 , LOW ( 0x1 )
00dc73 e0f0     +LDI R31 , HIGH ( 0x1 )
00dc74 e060     +LDI R22 , BYTE3 ( 0x1 )
00dc75 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00dc76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B8:
00dc77 940e e2f4 	CALL __GETD1P
00dc79 940c c673 	JMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B9:
00dc7b 01d9      	MOVW R26,R18
00dc7c e0e0      	LDI  R30,LOW(512)
00dc7d e0f2      	LDI  R31,HIGH(512)
00dc7e 940e e260 	CALL __DIVW21U
00dc80 940c ce94 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3BA:
00dc82 940e e181 	CALL __ADDD21
00dc84 940e ad8f 	CALL _move_window_G103
00dc86 30e0      	CPI  R30,0
00dc87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BB:
00dc88 85ac      	LDD  R26,Y+12
00dc89 85bd      	LDD  R27,Y+12+1
00dc8a 96d2      	ADIW R26,50
00dc8b 01f9      	MOVW R30,R18
00dc8c 70f1      	ANDI R31,HIGH(0x1FF)
00dc8d 0fae      	ADD  R26,R30
00dc8e 1fbf      	ADC  R27,R31
00dc8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BC:
                +
00dc90 e0e0     +LDI R30 , LOW ( 0x100 )
00dc91 e0f1     +LDI R31 , HIGH ( 0x100 )
00dc92 e060     +LDI R22 , BYTE3 ( 0x100 )
00dc93 e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00dc94 940e e278 	CALL __DIVD21U
00dc96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BD:
00dc97 940e e242 	CALL __MULB1W2U
00dc99 70f1      	ANDI R31,HIGH(0x1FF)
00dc9a 85ac      	LDD  R26,Y+12
00dc9b 85bd      	LDD  R27,Y+12+1
00dc9c 96d2      	ADIW R26,50
00dc9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BE:
                +
00dc9e e8e0     +LDI R30 , LOW ( 0x80 )
00dc9f e0f0     +LDI R31 , HIGH ( 0x80 )
00dca0 e060     +LDI R22 , BYTE3 ( 0x80 )
00dca1 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00dca2 940e e278 	CALL __DIVD21U
00dca4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BF:
                +
00dca5 85ae     +LDD R26 , Y + 14
00dca6 85bf     +LDD R27 , Y + 14 + 1
00dca7 8988     +LDD R24 , Y + 14 + 2
00dca8 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00dca9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3C0:
00dcaa 01d8      	MOVW R26,R16
00dcab e0e0      	LDI  R30,LOW(512)
00dcac e0f2      	LDI  R31,HIGH(512)
00dcad 940e e260 	CALL __DIVW21U
00dcaf 940e c78f 	CALL SUBOPT_0xD8
00dcb1 2766      	CLR  R22
00dcb2 2777      	CLR  R23
00dcb3 940e e181 	CALL __ADDD21
00dcb5 940e ad8f 	CALL _move_window_G103
00dcb7 2f5e      	MOV  R21,R30
00dcb8 3050      	CPI  R21,0
00dcb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C1:
00dcba 89aa      	LDD  R26,Y+18
00dcbb 89bb      	LDD  R27,Y+18+1
00dcbc 96d2      	ADIW R26,50
00dcbd 01f8      	MOVW R30,R16
00dcbe 70f1      	ANDI R31,HIGH(0x1FF)
00dcbf 0fea      	ADD  R30,R26
00dcc0 1ffb      	ADC  R31,R27
00dcc1 019f      	MOVW R18,R30
00dcc2 85ee      	LDD  R30,Y+14
00dcc3 70e1      	ANDI R30,LOW(0x1)
00dcc4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C2:
00dcc5 940e c78f 	CALL SUBOPT_0xD8
00dcc7 940e e181 	CALL __ADDD21
00dcc9 940e ad8f 	CALL _move_window_G103
00dccb 2f5e      	MOV  R21,R30
00dccc 3050      	CPI  R21,0
00dccd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C3:
00dcce 940e e242 	CALL __MULB1W2U
00dcd0 70f1      	ANDI R31,HIGH(0x1FF)
00dcd1 89aa      	LDD  R26,Y+18
00dcd2 89bb      	LDD  R27,Y+18+1
00dcd3 96d2      	ADIW R26,50
00dcd4 0fea      	ADD  R30,R26
00dcd5 1ffb      	ADC  R31,R27
00dcd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C4:
                +
00dcd7 81ad     +LDD R26 , Y + 5
00dcd8 81be     +LDD R27 , Y + 5 + 1
00dcd9 818f     +LDD R24 , Y + 5 + 2
00dcda 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00dcdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3C5:
00dcdc 85a9      	LDD  R26,Y+9
00dcdd 85ba      	LDD  R27,Y+9+1
00dcde 965e      	ADIW R26,30
00dcdf 940e e2f4 	CALL __GETD1P
00dce1 dff5      	RCALL SUBOPT_0x3C4
00dce2 940e e394 	CALL __CPD21
00dce4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C6:
                +
00dce5 81e9     +LDD R30 , Y + 1
00dce6 81fa     +LDD R31 , Y + 1 + 1
00dce7 816b     +LDD R22 , Y + 1 + 2
00dce8 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00dce9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3C7:
                +
00dcea 30a1     +CPI R26 , LOW ( 0x1 )
00dceb e0e0     +LDI R30 , HIGH ( 0x1 )
00dcec 07be     +CPC R27 , R30
00dced e0e0     +LDI R30 , BYTE3 ( 0x1 )
00dcee 078e     +CPC R24 , R30
00dcef e0e0     +LDI R30 , BYTE4 ( 0x1 )
00dcf0 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00dcf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C8:
                +
00dcf2 85a6     +LDD R26 , Z + 14
00dcf3 85b7     +LDD R27 , Z + 14 + 1
00dcf4 8980     +LDD R24 , Z + 14 + 2
00dcf5 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00dcf6 940c c37d 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C9:
                +
00dcf8 83ed     +STD Y + 5 , R30
00dcf9 83fe     +STD Y + 5 + 1 , R31
00dcfa 836f     +STD Y + 5 + 2 , R22
00dcfb 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00dcfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CA:
00dcfd 89ec      	LDD  R30,Y+20
00dcfe 89fd      	LDD  R31,Y+20+1
00dcff 93fa      	ST   -Y,R31
00dd00 93ea      	ST   -Y,R30
00dd01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CB:
                +
00dd02 e0e2     +LDI R30 , LOW ( 0x2 )
00dd03 e0f0     +LDI R31 , HIGH ( 0x2 )
00dd04 e060     +LDI R22 , BYTE3 ( 0x2 )
00dd05 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00dd06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CC:
00dd07 940e c598 	CALL SUBOPT_0x89
00dd09 940e c78f 	CALL SUBOPT_0xD8
00dd0b 940e e38f 	CALL __CPD12
00dd0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3CD:
                +
00dd0e e0e0     +LDI R30 , LOW ( 0x0 )
00dd0f e0f0     +LDI R31 , HIGH ( 0x0 )
00dd10 e060     +LDI R22 , BYTE3 ( 0x0 )
00dd11 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00dd12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3CE:
00dd13 85a8      	LDD  R26,Y+8
00dd14 85b9      	LDD  R27,Y+8+1
00dd15 940e e2f0 	CALL __GETW1P
00dd17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CF:
00dd18 967e      	ADIW R30,30
00dd19 01df      	MOVW R26,R30
00dd1a 940e e2f4 	CALL __GETD1P
00dd1c 940e c6b1 	CALL SUBOPT_0xB4
00dd1e 940e e394 	CALL __CPD21
00dd20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D0:
00dd21 940e c6ac 	CALL SUBOPT_0xB3
                +
00dd23 85a8     +LDD R26 , Y + 8
00dd24 85b9     +LDD R27 , Y + 8 + 1
00dd25 961a     +ADIW R26 , 10
00dd26 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00dd28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D1:
00dd29 85a8      	LDD  R26,Y+8
00dd2a 85b9      	LDD  R27,Y+8+1
00dd2b cb3a      	RJMP SUBOPT_0x33E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D2:
00dd2c 2766      	CLR  R22
00dd2d 2777      	CLR  R23
00dd2e 940e e17c 	CALL __ADDD12
00dd30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D3:
00dd31 70ef      	ANDI R30,LOW(0xF)
00dd32 70f0      	ANDI R31,HIGH(0xF)
00dd33 0fee      	LSL  R30
00dd34 940e e1c7 	CALL __LSLW4
00dd36 0fea      	ADD  R30,R26
00dd37 1ffb      	ADC  R31,R27
00dd38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D4:
00dd39 940e e2f4 	CALL __GETD1P
00dd3b 940e e37d 	CALL __CPD10
00dd3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D5:
00dd3e 85a9      	LDD  R26,Y+9
00dd3f 85ba      	LDD  R27,Y+9+1
00dd40 940e e2f0 	CALL __GETW1P
00dd42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D6:
00dd43 85a9      	LDD  R26,Y+9
00dd44 85ba      	LDD  R27,Y+9+1
00dd45 cb20      	RJMP SUBOPT_0x33E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D7:
00dd46 85eb      	LDD  R30,Y+11
00dd47 85fc      	LDD  R31,Y+11+1
                +
00dd48 85a2     +LDD R26 , Z + 10
00dd49 85b3     +LDD R27 , Z + 10 + 1
00dd4a 8584     +LDD R24 , Z + 10 + 2
00dd4b 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00dd4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D8:
00dd4d 967e      	ADIW R30,30
00dd4e 01df      	MOVW R26,R30
00dd4f 940e e2f4 	CALL __GETD1P
00dd51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D9:
00dd52 81ac      	LDD  R26,Y+4
00dd53 81bd      	LDD  R27,Y+4+1
00dd54 cb11      	RJMP SUBOPT_0x33E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3DA:
00dd55 81ee      	LDD  R30,Y+6
00dd56 81ff      	LDD  R31,Y+6+1
                +
00dd57 85a6     +LDD R26 , Z + 14
00dd58 85b7     +LDD R27 , Z + 14 + 1
00dd59 8980     +LDD R24 , Z + 14 + 2
00dd5a 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00dd5b 940e ad8f 	CALL _move_window_G103
00dd5d 2f1e      	MOV  R17,R30
00dd5e 3010      	CPI  R17,0
00dd5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3DB:
00dd60 933a      	ST   -Y,R19
00dd61 932a      	ST   -Y,R18
00dd62 81ee      	LDD  R30,Y+6
00dd63 81ff      	LDD  R31,Y+6+1
00dd64 89a4      	LDD  R26,Z+20
00dd65 89b5      	LDD  R27,Z+21
00dd66 93ba      	ST   -Y,R27
00dd67 93aa      	ST   -Y,R26
00dd68 940c c3e8 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3DC:
00dd6a 2fe2      	MOV  R30,R18
00dd6b 5f2f      	SUBI R18,-1
00dd6c e0f0      	LDI  R31,0
00dd6d 0fe4      	ADD  R30,R20
00dd6e 1ff5      	ADC  R31,R21
00dd6f 8300      	ST   Z,R16
00dd70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3DD:
00dd71 e0f0      	LDI  R31,0
00dd72 0fe4      	ADD  R30,R20
00dd73 1ff5      	ADC  R31,R21
00dd74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DE:
                +
00dd75 81ae     +LDD R26 , Y + 6
00dd76 81bf     +LDD R27 , Y + 6 + 1
00dd77 9616     +ADIW R26 , 6
00dd78 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00dd7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DF:
00dd7b 01d9      	MOVW R26,R18
00dd7c 9654      	ADIW R26,20
00dd7d 940c c2bf 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E0:
00dd7f 01d9      	MOVW R26,R18
00dd80 965a      	ADIW R26,26
00dd81 940e e2f0 	CALL __GETW1P
00dd83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E1:
00dd84 2766      	CLR  R22
00dd85 2777      	CLR  R23
00dd86 940e e195 	CALL __ORD12
00dd88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E2:
00dd89 940e e324 	CALL __PUTPARD1
00dd8b e0a1      	LDI  R26,LOW(1)
00dd8c 940e a9ed 	CALL _disk_read
00dd8e 30e0      	CPI  R30,0
00dd8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3E3:
00dd90 96f2      	ADIW R30,50
00dd91 50e2      	SUBI R30,LOW(-510)
00dd92 4ffe      	SBCI R31,HIGH(-510)
00dd93 01df      	MOVW R26,R30
00dd94 940e e2f0 	CALL __GETW1P
00dd96 35e5      	CPI  R30,LOW(0xAA55)
00dd97 eaaa      	LDI  R26,HIGH(0xAA55)
00dd98 07fa      	CPC  R31,R26
00dd99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3E4:
00dd9a 940e e2f4 	CALL __GETD1P
                +
00dd9c 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00dd9d 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00dd9e 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00dd9f 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00dda0 34e6     +CPI R30 , LOW ( 0x544146 )
00dda1 e4a1     +LDI R26 , HIGH ( 0x544146 )
00dda2 07fa     +CPC R31 , R26
00dda3 e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00dda4 076a     +CPC R22 , R26
00dda5 e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00dda6 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00dda7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3E5:
00dda8 eba2      	LDI  R26,LOW(_FatFs_G103)
00dda9 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00ddaa e0f0      	LDI  R31,0
00ddab 0fee      	LSL  R30
00ddac 1fff      	ROL  R31
00ddad 0fae      	ADD  R26,R30
00ddae 1fbf      	ADC  R27,R31
00ddaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E6:
00ddb0 81ae      	LDD  R26,Y+6
00ddb1 81bf      	LDD  R27,Y+6+1
00ddb2 5ca0      	SUBI R26,LOW(-64)
00ddb3 4fbf      	SBCI R27,HIGH(-64)
00ddb4 940e e2f0 	CALL __GETW1P
00ddb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3E7:
                +
00ddb7 87ee     +STD Y + 14 , R30
00ddb8 87ff     +STD Y + 14 + 1 , R31
00ddb9 8b68     +STD Y + 14 + 2 , R22
00ddba 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00ddbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E8:
00ddbc 81ee      	LDD  R30,Y+6
00ddbd 81ff      	LDD  R31,Y+6+1
00ddbe 85a0      	LDD  R26,Z+8
00ddbf 85b1      	LDD  R27,Z+9
00ddc0 01fd      	MOVW R30,R26
00ddc1 940e e1d9 	CALL __LSRW4
00ddc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E9:
00ddc4 81ee      	LDD  R30,Y+6
00ddc5 81ff      	LDD  R31,Y+6+1
00ddc6 de74      	RCALL SUBOPT_0x3B0
00ddc7 940e c77e 	CALL SUBOPT_0xD4
00ddc9 940e e17c 	CALL __ADDD12
00ddcb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EA:
00ddcc 940e ad8f 	CALL _move_window_G103
00ddce 2f1e      	MOV  R17,R30
00ddcf 3010      	CPI  R17,0
00ddd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EB:
00ddd1 8daa      	LDD  R26,Y+26
00ddd2 8dbb      	LDD  R27,Y+26+1
00ddd3 ca92      	RJMP SUBOPT_0x33E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3EC:
00ddd4 81a2      	LDD  R26,Z+2
00ddd5 81b3      	LDD  R27,Z+3
00ddd6 940e b63c 	CALL _validate_G103
00ddd8 2f1e      	MOV  R17,R30
00ddd9 3010      	CPI  R17,0
00ddda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3ED:
00dddb 8dea      	LDD  R30,Y+26
00dddc 8dfb      	LDD  R31,Y+26+1
                +
00dddd 81a6     +LDD R26 , Z + 6
00ddde 81b7     +LDD R27 , Z + 6 + 1
00dddf 8580     +LDD R24 , Z + 6 + 2
00dde0 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00dde1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EE:
00dde2 01fd      	MOVW R30,R26
00dde3 01bc      	MOVW R22,R24
00dde4 70f1      	ANDI R31,HIGH(0x1FF)
00dde5 9730      	SBIW R30,0
00dde6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EF:
00dde7 8dec      	LDD  R30,Y+28
00dde8 8dfd      	LDD  R31,Y+28+1
                +
00dde9 89a2     +LDD R26 , Z + 18
00ddea 89b3     +LDD R27 , Z + 18 + 1
00ddeb 8984     +LDD R24 , Z + 18 + 2
00ddec 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00dded 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3F0:
00ddee 8daa      	LDD  R26,Y+26
00ddef 8dbb      	LDD  R27,Y+26+1
00ddf0 9614      	ADIW R26,4
00ddf1 91ec      	LD   R30,X
00ddf2 68e0      	ORI  R30,0x80
00ddf3 93ec      	ST   X,R30
00ddf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F1:
00ddf5 8dea      	LDD  R30,Y+26
00ddf6 8dfb      	LDD  R31,Y+26+1
00ddf7 81e5      	LDD  R30,Z+5
00ddf8 e0f0      	LDI  R31,0
00ddf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F2:
00ddfa e0e0      	LDI  R30,LOW(512)
00ddfb e0f2      	LDI  R31,HIGH(512)
00ddfc 940e e260 	CALL __DIVW21U
00ddfe 01af      	MOVW R20,R30
00ddff 2e04      	MOV  R0,R20
00de00 2a05      	OR   R0,R21
00de01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F3:
00de02 8daa      	LDD  R26,Y+26
00de03 8dbb      	LDD  R27,Y+26+1
00de04 940e e2f0 	CALL __GETW1P
00de06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F4:
00de07 81e1      	LDD  R30,Z+1
00de08 93ea      	ST   -Y,R30
00de09 81ef      	LDD  R30,Y+7
00de0a 85f8      	LDD  R31,Y+7+1
00de0b 93fa      	ST   -Y,R31
00de0c 93ea      	ST   -Y,R30
00de0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3F5:
00de0e 8dea      	LDD  R30,Y+26
00de0f 8dfb      	LDD  R31,Y+26+1
                +
00de10 89a6     +LDD R26 , Z + 22
00de11 89b7     +LDD R27 , Z + 22 + 1
00de12 8d80     +LDD R24 , Z + 22 + 2
00de13 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00de14 940c c794 	JMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F6:
00de16 940e e18b 	CALL __SUBD21
00de18 01fa      	MOVW R30,R20
00de19 2766      	CLR  R22
00de1a 2777      	CLR  R23
00de1b 940e e394 	CALL __CPD21
00de1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F7:
00de1e 940e e18b 	CALL __SUBD21
                +
00de20 e0e0     +LDI R30 , LOW ( 0x200 )
00de21 e0f2     +LDI R31 , HIGH ( 0x200 )
00de22 e060     +LDI R22 , BYTE3 ( 0x200 )
00de23 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00de24 940e e222 	CALL __MULD12U
00de26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F8:
00de27 9615      	ADIW R26,5
00de28 91ec      	LD   R30,X
00de29 0fe4      	ADD  R30,R20
00de2a 93ec      	ST   X,R30
00de2b 01fa      	MOVW R30,R20
00de2c 0fee      	LSL  R30
00de2d 1fff      	ROL  R31
00de2e 2ffe      	MOV  R31,R30
00de2f e0e0      	LDI  R30,0
00de30 019f      	MOVW R18,R30
00de31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F9:
00de32 81e1      	LDD  R30,Z+1
00de33 93ea      	ST   -Y,R30
00de34 8deb      	LDD  R30,Y+27
00de35 8dfc      	LDD  R31,Y+27+1
00de36 96b0      	ADIW R30,32
00de37 93fa      	ST   -Y,R31
00de38 93ea      	ST   -Y,R30
00de39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3FA:
                +
00de3a 89a6     +LDD R26 , Z + 22
00de3b 89b7     +LDD R27 , Z + 22 + 1
00de3c 8d80     +LDD R24 , Z + 22 + 2
00de3d 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00de3e 940e e329 	CALL __PUTPARD2
00de40 e0a1      	LDI  R26,LOW(1)
00de41 940e aa52 	CALL _disk_write
00de43 30e0      	CPI  R30,0
00de44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3FB:
00de45 9614      	ADIW R26,4
00de46 91ec      	LD   R30,X
00de47 7bef      	ANDI R30,0xBF
00de48 93ec      	ST   X,R30
00de49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FC:
00de4a 9615      	ADIW R26,5
00de4b 91ec      	LD   R30,X
00de4c 5fef      	SUBI R30,-LOW(1)
00de4d 93ec      	ST   X,R30
00de4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3FD:
00de4f 9616      	ADIW R26,6
00de50 940e e2f0 	CALL __GETW1P
00de52 70f1      	ANDI R31,HIGH(0x1FF)
00de53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3FE:
00de54 9636      	ADIW R30,6
00de55 010f      	MOVW R0,R30
00de56 01df      	MOVW R26,R30
00de57 940e e2f4 	CALL __GETD1P
00de59 01df      	MOVW R26,R30
00de5a 01cb      	MOVW R24,R22
00de5b 01f9      	MOVW R30,R18
00de5c cecf      	RJMP SUBOPT_0x3D2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FF:
00de5d 91ed      	LD   R30,X+
00de5e 91fd      	LD   R31,X+
00de5f 0fe2      	ADD  R30,R18
00de60 1ff3      	ADC  R31,R19
00de61 93fe      	ST   -X,R31
00de62 93ee      	ST   -X,R30
00de63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x400:
00de64 89ae      	LDD  R26,Y+22
00de65 89bf      	LDD  R27,Y+22+1
00de66 c9ff      	RJMP SUBOPT_0x33E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x401:
00de67 89ae      	LDD  R26,Y+22
00de68 89bf      	LDD  R27,Y+22+1
00de69 961a      	ADIW R26,10
00de6a 940e e2f4 	CALL __GETD1P
00de6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x402:
00de6d 89ee      	LDD  R30,Y+22
00de6e 89ff      	LDD  R31,Y+22+1
                +
00de6f 81a6     +LDD R26 , Z + 6
00de70 81b7     +LDD R27 , Z + 6 + 1
00de71 8580     +LDD R24 , Z + 6 + 2
00de72 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00de73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x403:
00de74 89ae      	LDD  R26,Y+22
00de75 89bf      	LDD  R27,Y+22+1
00de76 940e e2f0 	CALL __GETW1P
00de78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x404:
00de79 8de8      	LDD  R30,Y+24
00de7a 8df9      	LDD  R31,Y+24+1
                +
00de7b 89a2     +LDD R26 , Z + 18
00de7c 89b3     +LDD R27 , Z + 18 + 1
00de7d 8984     +LDD R24 , Z + 18 + 2
00de7e 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00de7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x405:
00de80 89ae      	LDD  R26,Y+22
00de81 89bf      	LDD  R27,Y+22+1
00de82 9614      	ADIW R26,4
00de83 91ec      	LD   R30,X
00de84 68e0      	ORI  R30,0x80
00de85 93ec      	ST   X,R30
00de86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x406:
00de87 81e1      	LDD  R30,Z+1
00de88 93ea      	ST   -Y,R30
00de89 89ef      	LDD  R30,Y+23
00de8a 8df8      	LDD  R31,Y+23+1
00de8b 96b0      	ADIW R30,32
00de8c 93fa      	ST   -Y,R31
00de8d 93ea      	ST   -Y,R30
00de8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x407:
00de8f 89ee      	LDD  R30,Y+22
00de90 89ff      	LDD  R31,Y+22+1
00de91 81e5      	LDD  R30,Z+5
00de92 e0f0      	LDI  R31,0
00de93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x408:
00de94 89ee      	LDD  R30,Y+22
00de95 89ff      	LDD  R31,Y+22+1
                +
00de96 89a6     +LDD R26 , Z + 22
00de97 89b7     +LDD R27 , Z + 22 + 1
00de98 8d80     +LDD R24 , Z + 22 + 2
00de99 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00de9a 940c c412 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x409:
00de9c 89ee      	LDD  R30,Y+22
00de9d 89ff      	LDD  R31,Y+22+1
00de9e 96b0      	ADIW R30,32
00de9f 93fa      	ST   -Y,R31
00dea0 93ea      	ST   -Y,R30
00dea1 8de8      	LDD  R30,Y+24
00dea2 8df9      	LDD  R31,Y+24+1
00dea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40A:
00dea4 89ad      	LDD  R26,Y+21
00dea5 89be      	LDD  R27,Y+21+1
00dea6 c9bf      	RJMP SUBOPT_0x33E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40B:
00dea7 89ad      	LDD  R26,Y+21
00dea8 89be      	LDD  R27,Y+21+1
00dea9 961a      	ADIW R26,10
00deaa 940e e2f4 	CALL __GETD1P
00deac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x40C:
                +
00dead 89a9     +LDD R26 , Y + 17
00deae 89ba     +LDD R27 , Y + 17 + 1
00deaf 898b     +LDD R24 , Y + 17 + 2
00deb0 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00deb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40D:
                +
00deb2 8be9     +STD Y + 17 , R30
00deb3 8bfa     +STD Y + 17 + 1 , R31
00deb4 8b6b     +STD Y + 17 + 2 , R22
00deb5 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00deb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40E:
                +
00deb7 89ad     +LDD R26 , Y + 21
00deb8 89be     +LDD R27 , Y + 21 + 1
00deb9 9616     +ADIW R26 , 6
00deba 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00debc 89ad      	LDD  R26,Y+21
00debd 89be      	LDD  R27,Y+21+1
00debe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40F:
00debf 89ad      	LDD  R26,Y+21
00dec0 89be      	LDD  R27,Y+21+1
00dec1 940e e2f0 	CALL __GETW1P
00dec3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x410:
                +
00dec4 89e9     +LDD R30 , Y + 17
00dec5 89fa     +LDD R31 , Y + 17 + 1
00dec6 896b     +LDD R22 , Y + 17 + 2
00dec7 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00dec8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x411:
00dec9 940e c799 	CALL SUBOPT_0xDA
00decb 01df      	MOVW R26,R30
00decc 01cb      	MOVW R24,R22
00decd 940e c4cb 	CALL SUBOPT_0x6B
00decf 940e e278 	CALL __DIVD21U
00ded1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x412:
00ded2 940e e2f4 	CALL __GETD1P
                +
00ded4 87ed     +STD Y + 13 , R30
00ded5 87fe     +STD Y + 13 + 1 , R31
00ded6 876f     +STD Y + 13 + 2 , R22
00ded7 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00ded8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x413:
                +
00ded9 85ed     +LDD R30 , Y + 13
00deda 85fe     +LDD R31 , Y + 13 + 1
00dedb 856f     +LDD R22 , Y + 13 + 2
00dedc 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00dedd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x414:
00dede 940e afe9 	CALL _create_chain_G103
                +
00dee0 87ed     +STD Y + 13 , R30
00dee1 87fe     +STD Y + 13 + 1 , R31
00dee2 876f     +STD Y + 13 + 2 , R22
00dee3 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dee4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x415:
                +
00dee5 85ad     +LDD R26 , Y + 13
00dee6 85be     +LDD R27 , Y + 13 + 1
00dee7 858f     +LDD R24 , Y + 13 + 2
00dee8 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00dee9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x416:
00deea 89ad      	LDD  R26,Y+21
00deeb 89be      	LDD  R27,Y+21+1
00deec 9614      	ADIW R26,4
00deed 91ec      	LD   R30,X
00deee 68e0      	ORI  R30,0x80
00deef 93ec      	ST   X,R30
00def0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x417:
00def1 dfe7      	RCALL SUBOPT_0x413
                +
00def2 89ad     +LDD R26 , Y + 21
00def3 89be     +LDD R27 , Y + 21 + 1
00def4 9652     +ADIW R26 , 18
00def5 940e e2ff+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00def7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x418:
                +
00def8 85af     +LDD R26 , Y + 15
00def9 89b8     +LDD R27 , Y + 15 + 1
00defa 8989     +LDD R24 , Y + 15 + 2
00defb 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00defc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x419:
00defd 89ed      	LDD  R30,Y+21
00defe 89fe      	LDD  R31,Y+21+1
00deff 9636      	ADIW R30,6
00df00 010f      	MOVW R0,R30
00df01 01df      	MOVW R26,R30
00df02 940e e2f4 	CALL __GETD1P
00df04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41A:
00df05 89ed      	LDD  R30,Y+21
00df06 89fe      	LDD  R31,Y+21+1
                +
00df07 81a6     +LDD R26 , Z + 6
00df08 81b7     +LDD R27 , Z + 6 + 1
00df09 8580     +LDD R24 , Z + 6 + 2
00df0a 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00df0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41B:
00df0c 940e c77e 	CALL SUBOPT_0xD4
00df0e 940e c6dd 	CALL SUBOPT_0xBC
00df10 940c d12f 	JMP SUBOPT_0x253
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41C:
00df12 940e c678 	CALL SUBOPT_0xA9
00df14 ccc9      	RJMP SUBOPT_0x3A1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x41D:
00df15 940e c598 	CALL SUBOPT_0x89
00df17 940e c23b 	CALL SUBOPT_0xB
00df19 940e e158 	CALL __CMPF12
00df1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41E:
00df1c 940e c23b 	CALL SUBOPT_0xB
                +
00df1e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00df1f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00df20 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00df21 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00df22 ccde      	RJMP SUBOPT_0x3A8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41F:
00df23 85a8      	LDD  R26,Y+8
00df24 85b9      	LDD  R27,Y+8+1
00df25 9611      	ADIW R26,1
00df26 87a8      	STD  Y+8,R26
00df27 87b9      	STD  Y+8+1,R27
00df28 9711      	SBIW R26,1
00df29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x420:
00df2a 932a      	ST   -Y,R18
00df2b 81af      	LDD  R26,Y+7
00df2c 85b8      	LDD  R27,Y+7+1
00df2d 940e c4cb 	CALL SUBOPT_0x6B
00df2f bf6c      	OUT  EIND,R22
00df30 9519      	EICALL
00df31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x421:
                +
00df32 01fe     +MOVW R30 , R28
00df33 5ae0     +SUBI R30 , LOW ( - 96 )
00df34 4fff     +SBCI R31 , HIGH ( - 96 )
00df35 9001     +LD R0 , Z +
00df36 81f0     +LD R31 , Z
00df37 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00df38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x422:
00df39 9734      	SBIW R30,4
                +
00df3a 01de     +MOVW R26 , R28
00df3b 5aa0     +SUBI R26 , LOW ( - 96 )
00df3c 4fbf     +SBCI R27 , HIGH ( - 96 )
00df3d 93ed     +ST X + , R30
00df3e 93fc     +ST X , R31
                 	__PUTW1SX 96
00df3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x423:
00df40 81af      	LDD  R26,Y+7
00df41 85b8      	LDD  R27,Y+7+1
00df42 940e c4cb 	CALL SUBOPT_0x6B
00df44 bf6c      	OUT  EIND,R22
00df45 9519      	EICALL
00df46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x424:
                +
00df47 01de     +MOVW R26 , R28
00df48 5aa0     +SUBI R26 , LOW ( - 96 )
00df49 4fbf     +SBCI R27 , HIGH ( - 96 )
00df4a 900d     +LD R0 , X +
00df4b 91bc     +LD R27 , X
00df4c 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00df4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x425:
00df4e dfe3      	RCALL SUBOPT_0x421
00df4f cfe9      	RJMP SUBOPT_0x422
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x426:
00df50 8be8      	STD  Y+16,R30
00df51 8bf9      	STD  Y+16+1,R31
00df52 89a8      	LDD  R26,Y+16
00df53 89b9      	LDD  R27,Y+16+1
00df54 940e a799 	CALL _strlen
00df56 2f1e      	MOV  R17,R30
00df57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x427:
00df58 7f0b      	ANDI R16,LOW(251)
00df59 8de9      	LDD  R30,Y+25
00df5a 93ea      	ST   -Y,R30
                +
00df5b 01de     +MOVW R26 , R28
00df5c 5aa5     +SUBI R26 , LOW ( - 91 )
00df5d 4fbf     +SBCI R27 , HIGH ( - 91 )
00df5e 900d     +LD R0 , X +
00df5f 91bc     +LD R27 , X
00df60 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00df61 01fe     +MOVW R30 , R28
00df62 5ae3     +SUBI R30 , LOW ( - 93 )
00df63 4fff     +SBCI R31 , HIGH ( - 93 )
00df64 9001     +LD R0 , Z +
00df65 9011     +LD R1 , Z +
00df66 9161     +LD R22 , Z +
00df67 8170     +LD R23 , Z
00df68 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00df69 bf6c      	OUT  EIND,R22
00df6a 9519      	EICALL
00df6b 3050      	CPI  R21,0
00df6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x428:
                +
00df6d edec     +LDI R30 , LOW ( _put_buff_G104 )
00df6e ebfd     +LDI R31 , HIGH ( _put_buff_G104 )
00df6f e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00df70 e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00df71 940e e324 	CALL __PUTPARD1
00df73 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00df74 9858      	cbi  __i2c_port,__scl_bit
00df75 9859      	cbi  __i2c_port,__sda_bit
00df76 9a50      	sbi  __i2c_dir,__scl_bit
00df77 9851      	cbi  __i2c_dir,__sda_bit
00df78 c015      	rjmp __i2c_delay2
                 _i2c_start:
00df79 9851      	cbi  __i2c_dir,__sda_bit
00df7a 9850      	cbi  __i2c_dir,__scl_bit
00df7b 27ee      	clr  r30
00df7c 0000      	nop
00df7d 9b49      	sbis __i2c_pin,__sda_bit
00df7e 9508      	ret
00df7f 9b48      	sbis __i2c_pin,__scl_bit
00df80 9508      	ret
00df81 d004      	rcall __i2c_delay1
00df82 9a51      	sbi  __i2c_dir,__sda_bit
00df83 d002      	rcall __i2c_delay1
00df84 9a50      	sbi  __i2c_dir,__scl_bit
00df85 e0e1      	ldi  r30,1
                 __i2c_delay1:
00df86 e06d      	ldi  r22,13
00df87 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00df88 9a51      	sbi  __i2c_dir,__sda_bit
00df89 9a50      	sbi  __i2c_dir,__scl_bit
00df8a d003      	rcall __i2c_delay2
00df8b 9850      	cbi  __i2c_dir,__scl_bit
00df8c dff9      	rcall __i2c_delay1
00df8d 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00df8e e16b      	ldi  r22,27
                 __i2c_delay2l:
00df8f 956a      	dec  r22
00df90 f7f1      	brne __i2c_delay2l
00df91 9508      	ret
                 _i2c_read:
00df92 e078      	ldi  r23,8
                 __i2c_read0:
00df93 9850      	cbi  __i2c_dir,__scl_bit
00df94 dff1      	rcall __i2c_delay1
                 __i2c_read3:
00df95 9b48      	sbis __i2c_pin,__scl_bit
00df96 cffe      	rjmp __i2c_read3
00df97 dfee      	rcall __i2c_delay1
00df98 9488      	clc
00df99 9949      	sbic __i2c_pin,__sda_bit
00df9a 9408      	sec
00df9b 9a50      	sbi  __i2c_dir,__scl_bit
00df9c dff1      	rcall __i2c_delay2
00df9d 1fee      	rol  r30
00df9e 957a      	dec  r23
00df9f f799      	brne __i2c_read0
00dfa0 2f7a      	mov  r23,r26
00dfa1 2377      	tst  r23
00dfa2 f411      	brne __i2c_read1
00dfa3 9851      	cbi  __i2c_dir,__sda_bit
00dfa4 c001      	rjmp __i2c_read2
                 __i2c_read1:
00dfa5 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00dfa6 dfdf      	rcall __i2c_delay1
00dfa7 9850      	cbi  __i2c_dir,__scl_bit
00dfa8 dfe5      	rcall __i2c_delay2
00dfa9 9a50      	sbi  __i2c_dir,__scl_bit
00dfaa dfdb      	rcall __i2c_delay1
00dfab 9851      	cbi  __i2c_dir,__sda_bit
00dfac cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00dfad e078      	ldi  r23,8
                 __i2c_write0:
00dfae 0faa      	lsl  r26
00dfaf f410      	brcc __i2c_write1
00dfb0 9851      	cbi  __i2c_dir,__sda_bit
00dfb1 c001      	rjmp __i2c_write2
                 __i2c_write1:
00dfb2 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00dfb3 dfda      	rcall __i2c_delay2
00dfb4 9850      	cbi  __i2c_dir,__scl_bit
00dfb5 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00dfb6 9b48      	sbis __i2c_pin,__scl_bit
00dfb7 cffe      	rjmp __i2c_write3
00dfb8 dfcd      	rcall __i2c_delay1
00dfb9 9a50      	sbi  __i2c_dir,__scl_bit
00dfba 957a      	dec  r23
00dfbb f791      	brne __i2c_write0
00dfbc 9851      	cbi  __i2c_dir,__sda_bit
00dfbd dfc8      	rcall __i2c_delay1
00dfbe 9850      	cbi  __i2c_dir,__scl_bit
00dfbf dfce      	rcall __i2c_delay2
00dfc0 e0e1      	ldi  r30,1
00dfc1 9949      	sbic __i2c_pin,__sda_bit
00dfc2 27ee      	clr  r30
00dfc3 9a50      	sbi  __i2c_dir,__scl_bit
00dfc4 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00dfc5 9610      	adiw r26,0
00dfc6 f039      	breq __delay_ms1
                 __delay_ms0:
                +
00dfc7 ed80     +LDI R24 , LOW ( 0x7D0 )
00dfc8 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00dfc9 9701     +SBIW R24 , 1
00dfca f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00dfcb 95a8      	wdr
00dfcc 9711      	sbiw r26,1
00dfcd f7c9      	brne __delay_ms0
                 __delay_ms1:
00dfce 9508      	ret
                 
                 __ANEGF1:
00dfcf 9730      	SBIW R30,0
00dfd0 4060      	SBCI R22,0
00dfd1 4070      	SBCI R23,0
00dfd2 f009      	BREQ __ANEGF10
00dfd3 5870      	SUBI R23,0x80
                 __ANEGF10:
00dfd4 9508      	RET
                 
                 __ROUND_REPACK:
00dfd5 2355      	TST  R21
00dfd6 f442      	BRPL __REPACK
00dfd7 3850      	CPI  R21,0x80
00dfd8 f411      	BRNE __ROUND_REPACK0
00dfd9 ffe0      	SBRS R30,0
00dfda c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00dfdb 9631      	ADIW R30,1
00dfdc 1f69      	ADC  R22,R25
00dfdd 1f79      	ADC  R23,R25
00dfde f06b      	BRVS __REPACK1
                 
                 __REPACK:
00dfdf e850      	LDI  R21,0x80
00dfe0 2757      	EOR  R21,R23
00dfe1 f411      	BRNE __REPACK0
00dfe2 935f      	PUSH R21
00dfe3 c0cf      	RJMP __ZERORES
                 __REPACK0:
00dfe4 3f5f      	CPI  R21,0xFF
00dfe5 f031      	BREQ __REPACK1
00dfe6 0f66      	LSL  R22
00dfe7 0c00      	LSL  R0
00dfe8 9557      	ROR  R21
00dfe9 9567      	ROR  R22
00dfea 2f75      	MOV  R23,R21
00dfeb 9508      	RET
                 __REPACK1:
00dfec 935f      	PUSH R21
00dfed 2000      	TST  R0
00dfee f00a      	BRMI __REPACK2
00dfef c0cf      	RJMP __MAXRES
                 __REPACK2:
00dff0 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00dff1 e850      	LDI  R21,0x80
00dff2 2e19      	MOV  R1,R25
00dff3 2215      	AND  R1,R21
00dff4 0f88      	LSL  R24
00dff5 1f99      	ROL  R25
00dff6 2795      	EOR  R25,R21
00dff7 0f55      	LSL  R21
00dff8 9587      	ROR  R24
                 
                 __UNPACK1:
00dff9 e850      	LDI  R21,0x80
00dffa 2e07      	MOV  R0,R23
00dffb 2205      	AND  R0,R21
00dffc 0f66      	LSL  R22
00dffd 1f77      	ROL  R23
00dffe 2775      	EOR  R23,R21
00dfff 0f55      	LSL  R21
00e000 9567      	ROR  R22
00e001 9508      	RET
                 
                 __CFD1U:
00e002 9468      	SET
00e003 c001      	RJMP __CFD1U0
                 __CFD1:
00e004 94e8      	CLT
                 __CFD1U0:
00e005 935f      	PUSH R21
00e006 dff2      	RCALL __UNPACK1
00e007 3870      	CPI  R23,0x80
00e008 f018      	BRLO __CFD10
00e009 3f7f      	CPI  R23,0xFF
00e00a f408      	BRCC __CFD10
00e00b c0a7      	RJMP __ZERORES
                 __CFD10:
00e00c e156      	LDI  R21,22
00e00d 1b57      	SUB  R21,R23
00e00e f4aa      	BRPL __CFD11
00e00f 9551      	NEG  R21
00e010 3058      	CPI  R21,8
00e011 f40e      	BRTC __CFD19
00e012 3059      	CPI  R21,9
                 __CFD19:
00e013 f030      	BRLO __CFD17
00e014 efef      	SER  R30
00e015 efff      	SER  R31
00e016 ef6f      	SER  R22
00e017 e77f      	LDI  R23,0x7F
00e018 f977      	BLD  R23,7
00e019 c01a      	RJMP __CFD15
                 __CFD17:
00e01a 2777      	CLR  R23
00e01b 2355      	TST  R21
00e01c f0b9      	BREQ __CFD15
                 __CFD18:
00e01d 0fee      	LSL  R30
00e01e 1fff      	ROL  R31
00e01f 1f66      	ROL  R22
00e020 1f77      	ROL  R23
00e021 955a      	DEC  R21
00e022 f7d1      	BRNE __CFD18
00e023 c010      	RJMP __CFD15
                 __CFD11:
00e024 2777      	CLR  R23
                 __CFD12:
00e025 3058      	CPI  R21,8
00e026 f028      	BRLO __CFD13
00e027 2fef      	MOV  R30,R31
00e028 2ff6      	MOV  R31,R22
00e029 2f67      	MOV  R22,R23
00e02a 5058      	SUBI R21,8
00e02b cff9      	RJMP __CFD12
                 __CFD13:
00e02c 2355      	TST  R21
00e02d f031      	BREQ __CFD15
                 __CFD14:
00e02e 9576      	LSR  R23
00e02f 9567      	ROR  R22
00e030 95f7      	ROR  R31
00e031 95e7      	ROR  R30
00e032 955a      	DEC  R21
00e033 f7d1      	BRNE __CFD14
                 __CFD15:
00e034 2000      	TST  R0
00e035 f40a      	BRPL __CFD16
00e036 d167      	RCALL __ANEGD1
                 __CFD16:
00e037 915f      	POP  R21
00e038 9508      	RET
                 
                 __CDF1U:
00e039 9468      	SET
00e03a c001      	RJMP __CDF1U0
                 __CDF1:
00e03b 94e8      	CLT
                 __CDF1U0:
00e03c 9730      	SBIW R30,0
00e03d 4060      	SBCI R22,0
00e03e 4070      	SBCI R23,0
00e03f f0b1      	BREQ __CDF10
00e040 2400      	CLR  R0
00e041 f026      	BRTS __CDF11
00e042 2377      	TST  R23
00e043 f412      	BRPL __CDF11
00e044 9400      	COM  R0
00e045 d158      	RCALL __ANEGD1
                 __CDF11:
00e046 2e17      	MOV  R1,R23
00e047 e17e      	LDI  R23,30
00e048 2011      	TST  R1
                 __CDF12:
00e049 f032      	BRMI __CDF13
00e04a 957a      	DEC  R23
00e04b 0fee      	LSL  R30
00e04c 1fff      	ROL  R31
00e04d 1f66      	ROL  R22
00e04e 1c11      	ROL  R1
00e04f cff9      	RJMP __CDF12
                 __CDF13:
00e050 2fef      	MOV  R30,R31
00e051 2ff6      	MOV  R31,R22
00e052 2d61      	MOV  R22,R1
00e053 935f      	PUSH R21
00e054 df8a      	RCALL __REPACK
00e055 915f      	POP  R21
                 __CDF10:
00e056 9508      	RET
                 
                 __SWAPACC:
00e057 934f      	PUSH R20
00e058 01af      	MOVW R20,R30
00e059 01fd      	MOVW R30,R26
00e05a 01da      	MOVW R26,R20
00e05b 01ab      	MOVW R20,R22
00e05c 01bc      	MOVW R22,R24
00e05d 01ca      	MOVW R24,R20
00e05e 2d40      	MOV  R20,R0
00e05f 2c01      	MOV  R0,R1
00e060 2e14      	MOV  R1,R20
00e061 914f      	POP  R20
00e062 9508      	RET
                 
                 __UADD12:
00e063 0fea      	ADD  R30,R26
00e064 1ffb      	ADC  R31,R27
00e065 1f68      	ADC  R22,R24
00e066 9508      	RET
                 
                 __NEGMAN1:
00e067 95e0      	COM  R30
00e068 95f0      	COM  R31
00e069 9560      	COM  R22
00e06a 5fef      	SUBI R30,-1
00e06b 4fff      	SBCI R31,-1
00e06c 4f6f      	SBCI R22,-1
00e06d 9508      	RET
                 
                 __SUBF12:
00e06e 935f      	PUSH R21
00e06f df81      	RCALL __UNPACK
00e070 3890      	CPI  R25,0x80
00e071 f171      	BREQ __ADDF129
00e072 e850      	LDI  R21,0x80
00e073 2615      	EOR  R1,R21
                 
00e074 c004      	RJMP __ADDF120
                 
                 __ADDF12:
00e075 935f      	PUSH R21
00e076 df7a      	RCALL __UNPACK
00e077 3890      	CPI  R25,0x80
00e078 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00e079 3870      	CPI  R23,0x80
00e07a f121      	BREQ __ADDF128
                 __ADDF121:
00e07b 2f57      	MOV  R21,R23
00e07c 1b59      	SUB  R21,R25
00e07d f12b      	BRVS __ADDF1211
00e07e f412      	BRPL __ADDF122
00e07f dfd7      	RCALL __SWAPACC
00e080 cffa      	RJMP __ADDF121
                 __ADDF122:
00e081 3158      	CPI  R21,24
00e082 f018      	BRLO __ADDF123
00e083 27aa      	CLR  R26
00e084 27bb      	CLR  R27
00e085 2788      	CLR  R24
                 __ADDF123:
00e086 3058      	CPI  R21,8
00e087 f028      	BRLO __ADDF124
00e088 2fab      	MOV  R26,R27
00e089 2fb8      	MOV  R27,R24
00e08a 2788      	CLR  R24
00e08b 5058      	SUBI R21,8
00e08c cff9      	RJMP __ADDF123
                 __ADDF124:
00e08d 2355      	TST  R21
00e08e f029      	BREQ __ADDF126
                 __ADDF125:
00e08f 9586      	LSR  R24
00e090 95b7      	ROR  R27
00e091 95a7      	ROR  R26
00e092 955a      	DEC  R21
00e093 f7d9      	BRNE __ADDF125
                 __ADDF126:
00e094 2d50      	MOV  R21,R0
00e095 2551      	EOR  R21,R1
00e096 f072      	BRMI __ADDF127
00e097 dfcb      	RCALL __UADD12
00e098 f438      	BRCC __ADDF129
00e099 9567      	ROR  R22
00e09a 95f7      	ROR  R31
00e09b 95e7      	ROR  R30
00e09c 9573      	INC  R23
00e09d f413      	BRVC __ADDF129
00e09e c020      	RJMP __MAXRES
                 __ADDF128:
00e09f dfb7      	RCALL __SWAPACC
                 __ADDF129:
00e0a0 df3e      	RCALL __REPACK
00e0a1 915f      	POP  R21
00e0a2 9508      	RET
                 __ADDF1211:
00e0a3 f7d8      	BRCC __ADDF128
00e0a4 cffb      	RJMP __ADDF129
                 __ADDF127:
00e0a5 1bea      	SUB  R30,R26
00e0a6 0bfb      	SBC  R31,R27
00e0a7 0b68      	SBC  R22,R24
00e0a8 f051      	BREQ __ZERORES
00e0a9 f410      	BRCC __ADDF1210
00e0aa 9400      	COM  R0
00e0ab dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00e0ac 2366      	TST  R22
00e0ad f392      	BRMI __ADDF129
00e0ae 0fee      	LSL  R30
00e0af 1fff      	ROL  R31
00e0b0 1f66      	ROL  R22
00e0b1 957a      	DEC  R23
00e0b2 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00e0b3 27ee      	CLR  R30
00e0b4 27ff      	CLR  R31
00e0b5 2766      	CLR  R22
00e0b6 2777      	CLR  R23
00e0b7 915f      	POP  R21
00e0b8 9508      	RET
                 
                 __MINRES:
00e0b9 efef      	SER  R30
00e0ba efff      	SER  R31
00e0bb e76f      	LDI  R22,0x7F
00e0bc ef7f      	SER  R23
00e0bd 915f      	POP  R21
00e0be 9508      	RET
                 
                 __MAXRES:
00e0bf efef      	SER  R30
00e0c0 efff      	SER  R31
00e0c1 e76f      	LDI  R22,0x7F
00e0c2 e77f      	LDI  R23,0x7F
00e0c3 915f      	POP  R21
00e0c4 9508      	RET
                 
                 __MULF12:
00e0c5 935f      	PUSH R21
00e0c6 df2a      	RCALL __UNPACK
00e0c7 3870      	CPI  R23,0x80
00e0c8 f351      	BREQ __ZERORES
00e0c9 3890      	CPI  R25,0x80
00e0ca f341      	BREQ __ZERORES
00e0cb 2401      	EOR  R0,R1
00e0cc 9408      	SEC
00e0cd 1f79      	ADC  R23,R25
00e0ce f423      	BRVC __MULF124
00e0cf f31c      	BRLT __ZERORES
                 __MULF125:
00e0d0 2000      	TST  R0
00e0d1 f33a      	BRMI __MINRES
00e0d2 cfec      	RJMP __MAXRES
                 __MULF124:
00e0d3 920f      	PUSH R0
00e0d4 931f      	PUSH R17
00e0d5 932f      	PUSH R18
00e0d6 933f      	PUSH R19
00e0d7 934f      	PUSH R20
00e0d8 2711      	CLR  R17
00e0d9 2722      	CLR  R18
00e0da 2799      	CLR  R25
00e0db 9f68      	MUL  R22,R24
00e0dc 01a0      	MOVW R20,R0
00e0dd 9f8f      	MUL  R24,R31
00e0de 2d30      	MOV  R19,R0
00e0df 0d41      	ADD  R20,R1
00e0e0 1f59      	ADC  R21,R25
00e0e1 9f6b      	MUL  R22,R27
00e0e2 0d30      	ADD  R19,R0
00e0e3 1d41      	ADC  R20,R1
00e0e4 1f59      	ADC  R21,R25
00e0e5 9f8e      	MUL  R24,R30
00e0e6 d027      	RCALL __MULF126
00e0e7 9fbf      	MUL  R27,R31
00e0e8 d025      	RCALL __MULF126
00e0e9 9f6a      	MUL  R22,R26
00e0ea d023      	RCALL __MULF126
00e0eb 9fbe      	MUL  R27,R30
00e0ec d01d      	RCALL __MULF127
00e0ed 9faf      	MUL  R26,R31
00e0ee d01b      	RCALL __MULF127
00e0ef 9fae      	MUL  R26,R30
00e0f0 0d11      	ADD  R17,R1
00e0f1 1f29      	ADC  R18,R25
00e0f2 1f39      	ADC  R19,R25
00e0f3 1f49      	ADC  R20,R25
00e0f4 1f59      	ADC  R21,R25
00e0f5 2fe3      	MOV  R30,R19
00e0f6 2ff4      	MOV  R31,R20
00e0f7 2f65      	MOV  R22,R21
00e0f8 2f52      	MOV  R21,R18
00e0f9 914f      	POP  R20
00e0fa 913f      	POP  R19
00e0fb 912f      	POP  R18
00e0fc 911f      	POP  R17
00e0fd 900f      	POP  R0
00e0fe 2366      	TST  R22
00e0ff f02a      	BRMI __MULF122
00e100 0f55      	LSL  R21
00e101 1fee      	ROL  R30
00e102 1fff      	ROL  R31
00e103 1f66      	ROL  R22
00e104 c002      	RJMP __MULF123
                 __MULF122:
00e105 9573      	INC  R23
00e106 f24b      	BRVS __MULF125
                 __MULF123:
00e107 decd      	RCALL __ROUND_REPACK
00e108 915f      	POP  R21
00e109 9508      	RET
                 
                 __MULF127:
00e10a 0d10      	ADD  R17,R0
00e10b 1d21      	ADC  R18,R1
00e10c 1f39      	ADC  R19,R25
00e10d c002      	RJMP __MULF128
                 __MULF126:
00e10e 0d20      	ADD  R18,R0
00e10f 1d31      	ADC  R19,R1
                 __MULF128:
00e110 1f49      	ADC  R20,R25
00e111 1f59      	ADC  R21,R25
00e112 9508      	RET
                 
                 __DIVF21:
00e113 935f      	PUSH R21
00e114 dedc      	RCALL __UNPACK
00e115 3870      	CPI  R23,0x80
00e116 f421      	BRNE __DIVF210
00e117 2011      	TST  R1
                 __DIVF211:
00e118 f40a      	BRPL __DIVF219
00e119 cf9f      	RJMP __MINRES
                 __DIVF219:
00e11a cfa4      	RJMP __MAXRES
                 __DIVF210:
00e11b 3890      	CPI  R25,0x80
00e11c f409      	BRNE __DIVF218
                 __DIVF217:
00e11d cf95      	RJMP __ZERORES
                 __DIVF218:
00e11e 2401      	EOR  R0,R1
00e11f 9408      	SEC
00e120 0b97      	SBC  R25,R23
00e121 f41b      	BRVC __DIVF216
00e122 f3d4      	BRLT __DIVF217
00e123 2000      	TST  R0
00e124 cff3      	RJMP __DIVF211
                 __DIVF216:
00e125 2f79      	MOV  R23,R25
00e126 931f      	PUSH R17
00e127 932f      	PUSH R18
00e128 933f      	PUSH R19
00e129 934f      	PUSH R20
00e12a 2411      	CLR  R1
00e12b 2711      	CLR  R17
00e12c 2722      	CLR  R18
00e12d 2733      	CLR  R19
00e12e 2744      	CLR  R20
00e12f 2755      	CLR  R21
00e130 e290      	LDI  R25,32
                 __DIVF212:
00e131 17ae      	CP   R26,R30
00e132 07bf      	CPC  R27,R31
00e133 0786      	CPC  R24,R22
00e134 0741      	CPC  R20,R17
00e135 f030      	BRLO __DIVF213
00e136 1bae      	SUB  R26,R30
00e137 0bbf      	SBC  R27,R31
00e138 0b86      	SBC  R24,R22
00e139 0b41      	SBC  R20,R17
00e13a 9408      	SEC
00e13b c001      	RJMP __DIVF214
                 __DIVF213:
00e13c 9488      	CLC
                 __DIVF214:
00e13d 1f55      	ROL  R21
00e13e 1f22      	ROL  R18
00e13f 1f33      	ROL  R19
00e140 1c11      	ROL  R1
00e141 1faa      	ROL  R26
00e142 1fbb      	ROL  R27
00e143 1f88      	ROL  R24
00e144 1f44      	ROL  R20
00e145 959a      	DEC  R25
00e146 f751      	BRNE __DIVF212
00e147 01f9      	MOVW R30,R18
00e148 2d61      	MOV  R22,R1
00e149 914f      	POP  R20
00e14a 913f      	POP  R19
00e14b 912f      	POP  R18
00e14c 911f      	POP  R17
00e14d 2366      	TST  R22
00e14e f032      	BRMI __DIVF215
00e14f 0f55      	LSL  R21
00e150 1fee      	ROL  R30
00e151 1fff      	ROL  R31
00e152 1f66      	ROL  R22
00e153 957a      	DEC  R23
00e154 f243      	BRVS __DIVF217
                 __DIVF215:
00e155 de7f      	RCALL __ROUND_REPACK
00e156 915f      	POP  R21
00e157 9508      	RET
                 
                 __CMPF12:
00e158 2399      	TST  R25
00e159 f09a      	BRMI __CMPF120
00e15a 2377      	TST  R23
00e15b f042      	BRMI __CMPF121
00e15c 1797      	CP   R25,R23
00e15d f048      	BRLO __CMPF122
00e15e f429      	BRNE __CMPF121
00e15f 17ae      	CP   R26,R30
00e160 07bf      	CPC  R27,R31
00e161 0786      	CPC  R24,R22
00e162 f020      	BRLO __CMPF122
00e163 f031      	BREQ __CMPF123
                 __CMPF121:
00e164 9498      	CLZ
00e165 9488      	CLC
00e166 9508      	RET
                 __CMPF122:
00e167 9498      	CLZ
00e168 9408      	SEC
00e169 9508      	RET
                 __CMPF123:
00e16a 9418      	SEZ
00e16b 9488      	CLC
00e16c 9508      	RET
                 __CMPF120:
00e16d 2377      	TST  R23
00e16e f7c2      	BRPL __CMPF122
00e16f 1797      	CP   R25,R23
00e170 f398      	BRLO __CMPF121
00e171 f7a9      	BRNE __CMPF122
00e172 17ea      	CP   R30,R26
00e173 07fb      	CPC  R31,R27
00e174 0768      	CPC  R22,R24
00e175 f388      	BRLO __CMPF122
00e176 f399      	BREQ __CMPF123
00e177 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00e178 2400      	CLR  R0
00e179 0daf      	ADD  R26,R15
00e17a 1db0      	ADC  R27,R0
00e17b 9508      	RET
                 
                 __ADDD12:
00e17c 0fea      	ADD  R30,R26
00e17d 1ffb      	ADC  R31,R27
00e17e 1f68      	ADC  R22,R24
00e17f 1f79      	ADC  R23,R25
00e180 9508      	RET
                 
                 __ADDD21:
00e181 0fae      	ADD  R26,R30
00e182 1fbf      	ADC  R27,R31
00e183 1f86      	ADC  R24,R22
00e184 1f97      	ADC  R25,R23
00e185 9508      	RET
                 
                 __SUBD12:
00e186 1bea      	SUB  R30,R26
00e187 0bfb      	SBC  R31,R27
00e188 0b68      	SBC  R22,R24
00e189 0b79      	SBC  R23,R25
00e18a 9508      	RET
                 
                 __SUBD21:
00e18b 1bae      	SUB  R26,R30
00e18c 0bbf      	SBC  R27,R31
00e18d 0b86      	SBC  R24,R22
00e18e 0b97      	SBC  R25,R23
00e18f 9508      	RET
                 
                 __ANDD12:
00e190 23ea      	AND  R30,R26
00e191 23fb      	AND  R31,R27
00e192 2368      	AND  R22,R24
00e193 2379      	AND  R23,R25
00e194 9508      	RET
                 
                 __ORD12:
00e195 2bea      	OR   R30,R26
00e196 2bfb      	OR   R31,R27
00e197 2b68      	OR   R22,R24
00e198 2b79      	OR   R23,R25
00e199 9508      	RET
                 
                 __ANEGW1:
00e19a 95f1      	NEG  R31
00e19b 95e1      	NEG  R30
00e19c 40f0      	SBCI R31,0
00e19d 9508      	RET
                 
                 __ANEGD1:
00e19e 95f0      	COM  R31
00e19f 9560      	COM  R22
00e1a0 9570      	COM  R23
00e1a1 95e1      	NEG  R30
00e1a2 4fff      	SBCI R31,-1
00e1a3 4f6f      	SBCI R22,-1
00e1a4 4f7f      	SBCI R23,-1
00e1a5 9508      	RET
                 
                 __LSLW12:
00e1a6 23ee      	TST  R30
00e1a7 2e0e      	MOV  R0,R30
00e1a8 01fd      	MOVW R30,R26
00e1a9 f021      	BREQ __LSLW12R
                 __LSLW12L:
00e1aa 0fee      	LSL  R30
00e1ab 1fff      	ROL  R31
00e1ac 940a      	DEC  R0
00e1ad f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00e1ae 9508      	RET
                 
                 __LSLD12:
00e1af 23ee      	TST  R30
00e1b0 2e0e      	MOV  R0,R30
00e1b1 01fd      	MOVW R30,R26
00e1b2 01bc      	MOVW R22,R24
00e1b3 f031      	BREQ __LSLD12R
                 __LSLD12L:
00e1b4 0fee      	LSL  R30
00e1b5 1fff      	ROL  R31
00e1b6 1f66      	ROL  R22
00e1b7 1f77      	ROL  R23
00e1b8 940a      	DEC  R0
00e1b9 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00e1ba 9508      	RET
                 
                 __LSRD12:
00e1bb 23ee      	TST  R30
00e1bc 2e0e      	MOV  R0,R30
00e1bd 01fd      	MOVW R30,R26
00e1be 01bc      	MOVW R22,R24
00e1bf f031      	BREQ __LSRD12R
                 __LSRD12L:
00e1c0 9576      	LSR  R23
00e1c1 9567      	ROR  R22
00e1c2 95f7      	ROR  R31
00e1c3 95e7      	ROR  R30
00e1c4 940a      	DEC  R0
00e1c5 f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00e1c6 9508      	RET
                 
                 __LSLW4:
00e1c7 0fee      	LSL  R30
00e1c8 1fff      	ROL  R31
                 __LSLW3:
00e1c9 0fee      	LSL  R30
00e1ca 1fff      	ROL  R31
                 __LSLW2:
00e1cb 0fee      	LSL  R30
00e1cc 1fff      	ROL  R31
00e1cd 0fee      	LSL  R30
00e1ce 1fff      	ROL  R31
00e1cf 9508      	RET
                 
                 __ASRW4:
00e1d0 95f5      	ASR  R31
00e1d1 95e7      	ROR  R30
                 __ASRW3:
00e1d2 95f5      	ASR  R31
00e1d3 95e7      	ROR  R30
                 __ASRW2:
00e1d4 95f5      	ASR  R31
00e1d5 95e7      	ROR  R30
00e1d6 95f5      	ASR  R31
00e1d7 95e7      	ROR  R30
00e1d8 9508      	RET
                 
                 __LSRW4:
00e1d9 95f6      	LSR  R31
00e1da 95e7      	ROR  R30
                 __LSRW3:
00e1db 95f6      	LSR  R31
00e1dc 95e7      	ROR  R30
                 __LSRW2:
00e1dd 95f6      	LSR  R31
00e1de 95e7      	ROR  R30
00e1df 95f6      	LSR  R31
00e1e0 95e7      	ROR  R30
00e1e1 9508      	RET
                 
                 __LSRD1:
00e1e2 9576      	LSR  R23
00e1e3 9567      	ROR  R22
00e1e4 95f7      	ROR  R31
00e1e5 95e7      	ROR  R30
00e1e6 9508      	RET
                 
                 __LSLD1:
00e1e7 0fee      	LSL  R30
00e1e8 1fff      	ROL  R31
00e1e9 1f66      	ROL  R22
00e1ea 1f77      	ROL  R23
00e1eb 9508      	RET
                 
                 __ASRW8:
00e1ec 2fef      	MOV  R30,R31
00e1ed 27ff      	CLR  R31
00e1ee fde7      	SBRC R30,7
00e1ef efff      	SER  R31
00e1f0 9508      	RET
                 
                 __LSRD16:
00e1f1 2fe6      	MOV  R30,R22
00e1f2 2ff7      	MOV  R31,R23
00e1f3 e060      	LDI  R22,0
00e1f4 e070      	LDI  R23,0
00e1f5 9508      	RET
                 
                 __LSLD16:
00e1f6 2f6e      	MOV  R22,R30
00e1f7 2f7f      	MOV  R23,R31
00e1f8 e0e0      	LDI  R30,0
00e1f9 e0f0      	LDI  R31,0
00e1fa 9508      	RET
                 
                 __CBD1:
00e1fb 2ffe      	MOV  R31,R30
00e1fc 0fff      	ADD  R31,R31
00e1fd 0bff      	SBC  R31,R31
00e1fe 2f6f      	MOV  R22,R31
00e1ff 2f7f      	MOV  R23,R31
00e200 9508      	RET
                 
                 __CWD1:
00e201 2f6f      	MOV  R22,R31
00e202 0f66      	ADD  R22,R22
00e203 0b66      	SBC  R22,R22
00e204 2f76      	MOV  R23,R22
00e205 9508      	RET
                 
                 __COMD1:
00e206 95e0      	COM  R30
00e207 95f0      	COM  R31
00e208 9560      	COM  R22
00e209 9570      	COM  R23
00e20a 9508      	RET
                 
                 __EQB12:
00e20b 17ea      	CP   R30,R26
00e20c e0e1      	LDI  R30,1
00e20d f009      	BREQ __EQB12T
00e20e 27ee      	CLR  R30
                 __EQB12T:
00e20f 9508      	RET
                 
                 __LNEGB1:
00e210 23ee      	TST  R30
00e211 e0e1      	LDI  R30,1
00e212 f009      	BREQ __LNEGB1F
00e213 27ee      	CLR  R30
                 __LNEGB1F:
00e214 9508      	RET
                 
                 __LNEGW1:
00e215 2bef      	OR   R30,R31
00e216 e0e1      	LDI  R30,1
00e217 f009      	BREQ __LNEGW1F
00e218 e0e0      	LDI  R30,0
                 __LNEGW1F:
00e219 9508      	RET
                 
                 __MULW12U:
00e21a 9ffa      	MUL  R31,R26
00e21b 2df0      	MOV  R31,R0
00e21c 9feb      	MUL  R30,R27
00e21d 0df0      	ADD  R31,R0
00e21e 9fea      	MUL  R30,R26
00e21f 2de0      	MOV  R30,R0
00e220 0df1      	ADD  R31,R1
00e221 9508      	RET
                 
                 __MULD12U:
00e222 9f7a      	MUL  R23,R26
00e223 2d70      	MOV  R23,R0
00e224 9f6b      	MUL  R22,R27
00e225 0d70      	ADD  R23,R0
00e226 9ff8      	MUL  R31,R24
00e227 0d70      	ADD  R23,R0
00e228 9fe9      	MUL  R30,R25
00e229 0d70      	ADD  R23,R0
00e22a 9f6a      	MUL  R22,R26
00e22b 2d60      	MOV  R22,R0
00e22c 0d71      	ADD  R23,R1
00e22d 9ffb      	MUL  R31,R27
00e22e 0d60      	ADD  R22,R0
00e22f 1d71      	ADC  R23,R1
00e230 9fe8      	MUL  R30,R24
00e231 0d60      	ADD  R22,R0
00e232 1d71      	ADC  R23,R1
00e233 2788      	CLR  R24
00e234 9ffa      	MUL  R31,R26
00e235 2df0      	MOV  R31,R0
00e236 0d61      	ADD  R22,R1
00e237 1f78      	ADC  R23,R24
00e238 9feb      	MUL  R30,R27
00e239 0df0      	ADD  R31,R0
00e23a 1d61      	ADC  R22,R1
00e23b 1f78      	ADC  R23,R24
00e23c 9fea      	MUL  R30,R26
00e23d 2de0      	MOV  R30,R0
00e23e 0df1      	ADD  R31,R1
00e23f 1f68      	ADC  R22,R24
00e240 1f78      	ADC  R23,R24
00e241 9508      	RET
                 
                 __MULB1W2U:
00e242 2f6e      	MOV  R22,R30
00e243 9f6a      	MUL  R22,R26
00e244 01f0      	MOVW R30,R0
00e245 9f6b      	MUL  R22,R27
00e246 0df0      	ADD  R31,R0
00e247 9508      	RET
                 
                 __MULW12:
00e248 d086      	RCALL __CHKSIGNW
00e249 dfd0      	RCALL __MULW12U
00e24a f40e      	BRTC __MULW121
00e24b df4e      	RCALL __ANEGW1
                 __MULW121:
00e24c 9508      	RET
                 
                 __DIVB21U:
00e24d 2400      	CLR  R0
00e24e e098      	LDI  R25,8
                 __DIVB21U1:
00e24f 0faa      	LSL  R26
00e250 1c00      	ROL  R0
00e251 1a0e      	SUB  R0,R30
00e252 f410      	BRCC __DIVB21U2
00e253 0e0e      	ADD  R0,R30
00e254 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00e255 60a1      	SBR  R26,1
                 __DIVB21U3:
00e256 959a      	DEC  R25
00e257 f7b9      	BRNE __DIVB21U1
00e258 2fea      	MOV  R30,R26
00e259 2da0      	MOV  R26,R0
00e25a 9508      	RET
                 
                 __DIVB21:
00e25b d067      	RCALL __CHKSIGNB
00e25c dff0      	RCALL __DIVB21U
00e25d f40e      	BRTC __DIVB211
00e25e 95e1      	NEG  R30
                 __DIVB211:
00e25f 9508      	RET
                 
                 __DIVW21U:
00e260 2400      	CLR  R0
00e261 2411      	CLR  R1
00e262 e190      	LDI  R25,16
                 __DIVW21U1:
00e263 0faa      	LSL  R26
00e264 1fbb      	ROL  R27
00e265 1c00      	ROL  R0
00e266 1c11      	ROL  R1
00e267 1a0e      	SUB  R0,R30
00e268 0a1f      	SBC  R1,R31
00e269 f418      	BRCC __DIVW21U2
00e26a 0e0e      	ADD  R0,R30
00e26b 1e1f      	ADC  R1,R31
00e26c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00e26d 60a1      	SBR  R26,1
                 __DIVW21U3:
00e26e 959a      	DEC  R25
00e26f f799      	BRNE __DIVW21U1
00e270 01fd      	MOVW R30,R26
00e271 01d0      	MOVW R26,R0
00e272 9508      	RET
                 
                 __DIVW21:
00e273 d05b      	RCALL __CHKSIGNW
00e274 dfeb      	RCALL __DIVW21U
00e275 f40e      	BRTC __DIVW211
00e276 df23      	RCALL __ANEGW1
                 __DIVW211:
00e277 9508      	RET
                 
                 __DIVD21U:
00e278 933f      	PUSH R19
00e279 934f      	PUSH R20
00e27a 935f      	PUSH R21
00e27b 2400      	CLR  R0
00e27c 2411      	CLR  R1
00e27d 2744      	CLR  R20
00e27e 2755      	CLR  R21
00e27f e230      	LDI  R19,32
                 __DIVD21U1:
00e280 0faa      	LSL  R26
00e281 1fbb      	ROL  R27
00e282 1f88      	ROL  R24
00e283 1f99      	ROL  R25
00e284 1c00      	ROL  R0
00e285 1c11      	ROL  R1
00e286 1f44      	ROL  R20
00e287 1f55      	ROL  R21
00e288 1a0e      	SUB  R0,R30
00e289 0a1f      	SBC  R1,R31
00e28a 0b46      	SBC  R20,R22
00e28b 0b57      	SBC  R21,R23
00e28c f428      	BRCC __DIVD21U2
00e28d 0e0e      	ADD  R0,R30
00e28e 1e1f      	ADC  R1,R31
00e28f 1f46      	ADC  R20,R22
00e290 1f57      	ADC  R21,R23
00e291 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00e292 60a1      	SBR  R26,1
                 __DIVD21U3:
00e293 953a      	DEC  R19
00e294 f759      	BRNE __DIVD21U1
00e295 01fd      	MOVW R30,R26
00e296 01bc      	MOVW R22,R24
00e297 01d0      	MOVW R26,R0
00e298 01ca      	MOVW R24,R20
00e299 915f      	POP  R21
00e29a 914f      	POP  R20
00e29b 913f      	POP  R19
00e29c 9508      	RET
                 
                 __DIVD21:
00e29d d03f      	RCALL __CHKSIGND
00e29e dfd9      	RCALL __DIVD21U
00e29f f40e      	BRTC __DIVD211
00e2a0 defd      	RCALL __ANEGD1
                 __DIVD211:
00e2a1 9508      	RET
                 
                 __MODB21:
00e2a2 94e8      	CLT
00e2a3 ffa7      	SBRS R26,7
00e2a4 c002      	RJMP __MODB211
00e2a5 95a1      	NEG  R26
00e2a6 9468      	SET
                 __MODB211:
00e2a7 fde7      	SBRC R30,7
00e2a8 95e1      	NEG  R30
00e2a9 dfa3      	RCALL __DIVB21U
00e2aa 2fea      	MOV  R30,R26
00e2ab f40e      	BRTC __MODB212
00e2ac 95e1      	NEG  R30
                 __MODB212:
00e2ad 9508      	RET
                 
                 __MODW21U:
00e2ae dfb1      	RCALL __DIVW21U
00e2af 01fd      	MOVW R30,R26
00e2b0 9508      	RET
                 
                 __MODW21:
00e2b1 94e8      	CLT
00e2b2 ffb7      	SBRS R27,7
00e2b3 c004      	RJMP __MODW211
00e2b4 95a0      	COM  R26
00e2b5 95b0      	COM  R27
00e2b6 9611      	ADIW R26,1
00e2b7 9468      	SET
                 __MODW211:
00e2b8 fdf7      	SBRC R31,7
00e2b9 dee0      	RCALL __ANEGW1
00e2ba dfa5      	RCALL __DIVW21U
00e2bb 01fd      	MOVW R30,R26
00e2bc f40e      	BRTC __MODW212
00e2bd dedc      	RCALL __ANEGW1
                 __MODW212:
00e2be 9508      	RET
                 
                 __MODD21U:
00e2bf dfb8      	RCALL __DIVD21U
00e2c0 01fd      	MOVW R30,R26
00e2c1 01bc      	MOVW R22,R24
00e2c2 9508      	RET
                 
                 __CHKSIGNB:
00e2c3 94e8      	CLT
00e2c4 ffe7      	SBRS R30,7
00e2c5 c002      	RJMP __CHKSB1
00e2c6 95e1      	NEG  R30
00e2c7 9468      	SET
                 __CHKSB1:
00e2c8 ffa7      	SBRS R26,7
00e2c9 c004      	RJMP __CHKSB2
00e2ca 95a1      	NEG  R26
00e2cb f800      	BLD  R0,0
00e2cc 9403      	INC  R0
00e2cd fa00      	BST  R0,0
                 __CHKSB2:
00e2ce 9508      	RET
                 
                 __CHKSIGNW:
00e2cf 94e8      	CLT
00e2d0 fff7      	SBRS R31,7
00e2d1 c002      	RJMP __CHKSW1
00e2d2 dec7      	RCALL __ANEGW1
00e2d3 9468      	SET
                 __CHKSW1:
00e2d4 ffb7      	SBRS R27,7
00e2d5 c006      	RJMP __CHKSW2
00e2d6 95a0      	COM  R26
00e2d7 95b0      	COM  R27
00e2d8 9611      	ADIW R26,1
00e2d9 f800      	BLD  R0,0
00e2da 9403      	INC  R0
00e2db fa00      	BST  R0,0
                 __CHKSW2:
00e2dc 9508      	RET
                 
                 __CHKSIGND:
00e2dd 94e8      	CLT
00e2de ff77      	SBRS R23,7
00e2df c002      	RJMP __CHKSD1
00e2e0 debd      	RCALL __ANEGD1
00e2e1 9468      	SET
                 __CHKSD1:
00e2e2 ff97      	SBRS R25,7
00e2e3 c00b      	RJMP __CHKSD2
00e2e4 2400      	CLR  R0
00e2e5 95a0      	COM  R26
00e2e6 95b0      	COM  R27
00e2e7 9580      	COM  R24
00e2e8 9590      	COM  R25
00e2e9 9611      	ADIW R26,1
00e2ea 1d80      	ADC  R24,R0
00e2eb 1d90      	ADC  R25,R0
00e2ec f800      	BLD  R0,0
00e2ed 9403      	INC  R0
00e2ee fa00      	BST  R0,0
                 __CHKSD2:
00e2ef 9508      	RET
                 
                 __GETW1P:
00e2f0 91ed      	LD   R30,X+
00e2f1 91fc      	LD   R31,X
00e2f2 9711      	SBIW R26,1
00e2f3 9508      	RET
                 
                 __GETD1P:
00e2f4 91ed      	LD   R30,X+
00e2f5 91fd      	LD   R31,X+
00e2f6 916d      	LD   R22,X+
00e2f7 917c      	LD   R23,X
00e2f8 9713      	SBIW R26,3
00e2f9 9508      	RET
                 
                 __GETD1P_INC:
00e2fa 91ed      	LD   R30,X+
00e2fb 91fd      	LD   R31,X+
00e2fc 916d      	LD   R22,X+
00e2fd 917d      	LD   R23,X+
00e2fe 9508      	RET
                 
                 __PUTDP1:
00e2ff 93ed      	ST   X+,R30
00e300 93fd      	ST   X+,R31
00e301 936d      	ST   X+,R22
00e302 937c      	ST   X,R23
00e303 9508      	RET
                 
                 __PUTDP1_DEC:
00e304 937e      	ST   -X,R23
00e305 936e      	ST   -X,R22
00e306 93fe      	ST   -X,R31
00e307 93ee      	ST   -X,R30
00e308 9508      	RET
                 
                 __GETD1PF:
00e309 bf6b      	OUT  RAMPZ,R22
00e30a 9007      	ELPM R0,Z+
00e30b 9017      	ELPM R1,Z+
00e30c 9167      	ELPM R22,Z+
00e30d 9176      	ELPM R23,Z
00e30e 01f0      	MOVW R30,R0
00e30f 9508      	RET
                 
                 __GETD1S0:
00e310 81e8      	LD   R30,Y
00e311 81f9      	LDD  R31,Y+1
00e312 816a      	LDD  R22,Y+2
00e313 817b      	LDD  R23,Y+3
00e314 9508      	RET
                 
                 __GETD2S0:
00e315 81a8      	LD   R26,Y
00e316 81b9      	LDD  R27,Y+1
00e317 818a      	LDD  R24,Y+2
00e318 819b      	LDD  R25,Y+3
00e319 9508      	RET
                 
                 __PUTD1S0:
00e31a 83e8      	ST   Y,R30
00e31b 83f9      	STD  Y+1,R31
00e31c 836a      	STD  Y+2,R22
00e31d 837b      	STD  Y+3,R23
00e31e 9508      	RET
                 
                 __PUTDZ20:
00e31f 83a0      	ST   Z,R26
00e320 83b1      	STD  Z+1,R27
00e321 8382      	STD  Z+2,R24
00e322 8393      	STD  Z+3,R25
00e323 9508      	RET
                 
                 __PUTPARD1:
00e324 937a      	ST   -Y,R23
00e325 936a      	ST   -Y,R22
00e326 93fa      	ST   -Y,R31
00e327 93ea      	ST   -Y,R30
00e328 9508      	RET
                 
                 __PUTPARD2:
00e329 939a      	ST   -Y,R25
00e32a 938a      	ST   -Y,R24
00e32b 93ba      	ST   -Y,R27
00e32c 93aa      	ST   -Y,R26
00e32d 9508      	RET
                 
                 __PUTPARL:
00e32e 27bb      	CLR  R27
                 __PUTPAR:
00e32f 0fea      	ADD  R30,R26
00e330 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00e331 9002      	LD   R0,-Z
00e332 920a      	ST   -Y,R0
00e333 9711      	SBIW R26,1
00e334 f7e1      	BRNE __PUTPAR0
00e335 9508      	RET
                 
                 __CDF2U:
00e336 9468      	SET
00e337 c001      	RJMP __CDF2U0
                 __CDF2:
00e338 94e8      	CLT
                 __CDF2U0:
00e339 d001      	RCALL __SWAPD12
00e33a dd01      	RCALL __CDF1U0
                 
                 __SWAPD12:
00e33b 2e18      	MOV  R1,R24
00e33c 2f86      	MOV  R24,R22
00e33d 2d61      	MOV  R22,R1
00e33e 2e19      	MOV  R1,R25
00e33f 2f97      	MOV  R25,R23
00e340 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00e341 2e1b      	MOV  R1,R27
00e342 2fbf      	MOV  R27,R31
00e343 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00e344 2e1a      	MOV  R1,R26
00e345 2fae      	MOV  R26,R30
00e346 2de1      	MOV  R30,R1
00e347 9508      	RET
                 
                 __EEPROMRDD:
00e348 9612      	ADIW R26,2
00e349 d002      	RCALL __EEPROMRDW
00e34a 01bf      	MOVW R22,R30
00e34b 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00e34c 9611      	ADIW R26,1
00e34d d002      	RCALL __EEPROMRDB
00e34e 2ffe      	MOV  R31,R30
00e34f 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00e350 99f9      	SBIC EECR,EEWE
00e351 cffe      	RJMP __EEPROMRDB
00e352 93ff      	PUSH R31
00e353 b7ff      	IN   R31,SREG
00e354 94f8      	CLI
00e355 bda1      	OUT  EEARL,R26
00e356 bdb2      	OUT  EEARH,R27
00e357 9af8      	SBI  EECR,EERE
00e358 b5e0      	IN   R30,EEDR
00e359 bfff      	OUT  SREG,R31
00e35a 91ff      	POP  R31
00e35b 9508      	RET
                 
                 __EEPROMWRD:
00e35c d007      	RCALL __EEPROMWRW
00e35d 9612      	ADIW R26,2
00e35e 010f      	MOVW R0,R30
00e35f 01fb      	MOVW R30,R22
00e360 d003      	RCALL __EEPROMWRW
00e361 01f0      	MOVW R30,R0
00e362 9712      	SBIW R26,2
00e363 9508      	RET
                 
                 __EEPROMWRW:
00e364 d007      	RCALL __EEPROMWRB
00e365 9611      	ADIW R26,1
00e366 93ef      	PUSH R30
00e367 2fef      	MOV  R30,R31
00e368 d003      	RCALL __EEPROMWRB
00e369 91ef      	POP  R30
00e36a 9711      	SBIW R26,1
00e36b 9508      	RET
                 
                 __EEPROMWRB:
00e36c 9bf9      	SBIS EECR,EEWE
00e36d c002      	RJMP __EEPROMWRB1
00e36e 95a8      	WDR
00e36f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00e370 b79f      	IN   R25,SREG
00e371 94f8      	CLI
00e372 bda1      	OUT  EEARL,R26
00e373 bdb2      	OUT  EEARH,R27
00e374 9af8      	SBI  EECR,EERE
00e375 b580      	IN   R24,EEDR
00e376 17e8      	CP   R30,R24
00e377 f019      	BREQ __EEPROMWRB0
00e378 bde0      	OUT  EEDR,R30
00e379 9afa      	SBI  EECR,EEMWE
00e37a 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00e37b bf9f      	OUT  SREG,R25
00e37c 9508      	RET
                 
                 __CPD10:
00e37d 9730      	SBIW R30,0
00e37e 4060      	SBCI R22,0
00e37f 4070      	SBCI R23,0
00e380 9508      	RET
                 
                 __CPW02:
00e381 2400      	CLR  R0
00e382 160a      	CP   R0,R26
00e383 060b      	CPC  R0,R27
00e384 9508      	RET
                 
                 __CPD20:
00e385 9710      	SBIW R26,0
00e386 4080      	SBCI R24,0
00e387 4090      	SBCI R25,0
00e388 9508      	RET
                 
                 __CPD02:
00e389 2400      	CLR  R0
00e38a 160a      	CP   R0,R26
00e38b 060b      	CPC  R0,R27
00e38c 0608      	CPC  R0,R24
00e38d 0609      	CPC  R0,R25
00e38e 9508      	RET
                 
                 __CPD12:
00e38f 17ea      	CP   R30,R26
00e390 07fb      	CPC  R31,R27
00e391 0768      	CPC  R22,R24
00e392 0779      	CPC  R23,R25
00e393 9508      	RET
                 
                 __CPD21:
00e394 17ae      	CP   R26,R30
00e395 07bf      	CPC  R27,R31
00e396 0786      	CPC  R24,R22
00e397 0797      	CPC  R25,R23
00e398 9508      	RET
                 
                 __SAVELOCR6:
00e399 935a      	ST   -Y,R21
                 __SAVELOCR5:
00e39a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00e39b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00e39c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00e39d 931a      	ST   -Y,R17
00e39e 930a      	ST   -Y,R16
00e39f 9508      	RET
                 
                 __LOADLOCR6:
00e3a0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00e3a1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00e3a2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00e3a3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00e3a4 8119      	LDD  R17,Y+1
00e3a5 8108      	LD   R16,Y
00e3a6 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00e3a7 0fac      	ADD  R26,R28
00e3a8 1fbd      	ADC  R27,R29
00e3a9 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00e3aa 9007      	ELPM R0,Z+
00e3ab 920d      	ST   X+,R0
00e3ac 958a      	DEC  R24
00e3ad f7e1      	BRNE __INITLOC0
00e3ae 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 585 r1 : 111 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 841 r17: 965 r18: 519 r19: 407 r20: 308 r21: 245 r22:1471 r23:1315 
r24: 484 r25: 363 r26:4597 r27:1698 r28: 632 r29:  23 r30:8208 r31:3424 
x  : 696 y  :4085 z  : 728 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 247 add   : 256 
adiw  : 826 and   :  15 andi  : 198 asr   :   6 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :  20 brcs  :   5 break :   0 breq  : 638 
brge  : 188 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 131 
brlt  :  68 brmi  :  32 brne  : 865 brpl  : 157 brsh  : 127 brtc  :  10 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   5 call  :7038 
cbi   :  41 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 208 cls   :   0 clt   :  11 clv   :   0 clz   :   2 com   :  32 
cp    : 111 cpc   : 561 cpi   :1182 cpse  :   0 dec   :  22 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 109 inc   :   8 jmp   : 391 
ld    : 806 ldd   :2896 ldi   :7240 lds   : 681 lpm   :   0 lsl   :  40 
lsr   :  21 mov   : 387 movw  :1331 mul   : 114 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  66 ori   :  50 out   : 113 pop   : 436 
push  : 436 rcall : 318 ret   :1070 reti  :   5 rjmp  :1766 rol   :  60 
ror   :  33 sbc   :  39 sbci  : 774 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 272 sbr   :   5 sbrc  :  17 sbrs  :  61 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  17 ses   :   0 set   :  10 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1226 std   : 558 sts   : 506 
sub   :  32 subi  : 833 swap  :   7 tst   : 166 wdr   :  13 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x01c75e  89352  27222 116574  262144  44.5%
[.dseg] 0x000200 0x001ab7      0   3527   3527    8703  40.5%
[.eseg] 0x000000 0x00065d      0   1629   1629    4096  39.8%

Assembly complete, 0 errors, 41 warnings
