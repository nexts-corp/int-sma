;#include "interruptTask.h"
;#include "timer.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "wiz100rs.h"
;int wiz100srSetTimer = -1;

	.DSEG
;//int viUart0TimeOutTemp = -1;
;piInterrupt_t pviUart0TimeOut = -1;
;extern void (*pfiWiz100rs)(void);
;
;void interruptTask(void *pviParameter){
; 0022 0009 void interruptTask(void *pviParameter){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0022 000A 
; 0022 000B      printDebug("<interruptTask>Task Running...\r\n");
;PCODE: $0000000F VOL: 0
;	*pviParameter -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0022 000C 
; 0022 000D //     if(pviUart0TimeOut == 1){    //start interrupt start timeout
; 0022 000E //        printf("<interruptTask>start count pviUart0TimeOut\r\n");
; 0022 000F //
; 0022 0010 //        if(wiz100srSetTimer == -1){
; 0022 0011 //           wiz100srSetTimer = countTimerIntpTask;
; 0022 0012 //        }else if((countTimerIntpTask - wiz100srSetTimer) > 2){                  //set timer = 1 sec
; 0022 0013 //             printDebug("<interruptTask>wiz100srSetTimer(timeout %d)\r\n",(countTimerIntpTask - wiz100srSetTimer));
; 0022 0014 //             wiz100srSetTimer = -1;
; 0022 0015 //             pviUart0TimeOut = 0;
; 0022 0016 //        }
; 0022 0017 //     }
; 0022 0018 
; 0022 0019      printDebug("<interruptTask>pviUart0TimeOut(%d),wiz100srSetTimer(%d)\r\n",pviUart0TimeOut,wiz100srSetTimer);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0022 001A      if(pviUart0TimeOut >= 0){    //start interrupt start timeout
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0022 001B          printDebug("<interruptTask>start count pviUart0TimeOut\r\n");
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0022 001C          if(wiz100srSetTimer == -1){
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0022 001D              wiz100srSetTimer = countTimerIntpTask;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0022 001E              //viUart0TimeOutTemp = pviUart0TimeOut;
; 0022 001F          }else if((countTimerIntpTask - wiz100srSetTimer) > 2){                  //set timer = 1 sec
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0022 0020              printDebug("<interruptTask>wiz100srSetTimer(timeout %d)\r\n",(countTimerIntpTask - wiz100srSetTimer));
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0022 0021              pfiWiz100rs = &iWizRXTimeOut;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0022 0022              pfiWiz100rs();
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0022 0023              wiz100srSetTimer = -1;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0022 0024              pviUart0TimeOut = -1;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0022 0025          }
; 0022 0026      }else if(pviUart0TimeOut == -1){
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0022 0027          wiz100srSetTimer = -1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0022 0028      }
; 0022 0029 
; 0022 002A 
; 0022 002B 
; 0022 002C }
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
