
AVRASM ver. 2.1.30  C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm Sat Aug 22 23:32:57 2015

C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 32e1 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 3f36 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 3f47 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 3f43 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 3f3f 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3ce0 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 3f60 	JMP  _timer3_ovf_isr
000048 940c 3e02 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 3f7c 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 3e0e 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 3e2c 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 4344
000077 302d
000078 302e
000079 6131      	.DB  0x44,0x43,0x2D,0x30,0x2E,0x30,0x31,0x61
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1189): warning: .cseg .db misalignment - padding zero byte
00007a 0000      	.DB  0x0
                 _error_msg:
00007b 49fe
00007c 0000
00007d 49ff
00007e 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
00007f 4a0b
000080 0000
000081 4a16
000082 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
000083 4a23
000084 0000
000085 4a2e
000086 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
000087 4a39
000088 0000
000089 4a49
00008a 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
00008b 4a53
00008c 0000
00008d 4a5c
00008e 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
00008f 4a6e
000090 0000
000091 4a81
000092 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
000093 4a92
000094 0000
000095 4aa1
000096 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
000097 4ab2
000098 0000
000099 4ac2
00009a 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
00009b 4324
00009c 444d
00009d 4453
00009e 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
00009f 4324
0000a0 444d
0000a1 4152
0000a2 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000a3 4324
0000a4 444d
0000a5 4c43
0000a6 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000a7 4324
0000a8 444d
0000a9 5653
0000aa 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000ab 4324
0000ac 444d
0000ad 4e53
0000ae 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000af 4324
0000b0 444d
0000b1 4544
0000b2 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000b3 4324
0000b4 444d
0000b5 4444
0000b6 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000b7 4324
0000b8 444d
0000b9 5353
0000ba 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000bb 4324
0000bc 444d
0000bd 5352
0000be 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _k1:
0000bf 2220
0000c0 2b2a
0000c1 5b2c
0000c2 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
0000c3 7f7c
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1219): warning: .cseg .db misalignment - padding zero byte
0000c4 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
0000c5 0000
0000c6 0000      	.DW  0,0
                 
                 _0x3:
0000c7 0000
0000c8 0000
0000c9 0000
0000ca 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000cb 0000
0000cc 0000
0000cd 0000
0000ce 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000cf 0000
0000d0 0000
0000d1 0000
0000d2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d3 0000
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1229): warning: .cseg .db misalignment - padding zero byte
0000d4 0000      	.DB  0x0,0x0,0x0
                 _0xA5:
0000d5 ffff
0000d6 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
0000d7 0a0d
0000d8 2d2d
0000d9 2d2d
0000da 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000db 4920
0000dc 696e
0000dd 6974
0000de 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
0000df 4320
0000e0 6d6f
0000e1 6c70
0000e2 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
0000e3 2065
0000e4 2d2d
0000e5 2d2d
0000e6 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000e7 0a0d
0000e8 4300
0000e9 6e6f
0000ea 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
0000eb 7463
0000ec 3a20
0000ed 6320
0000ee 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
0000ef 6174
0000f0 7463
0000f1 742e
0000f2 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
0000f3 6e61
0000f4 6740
0000f5 616d
0000f6 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
0000f7 632e
0000f8 6d6f
0000f9 0a0d
0000fa 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
0000fb 616d
0000fc 6e69
0000fd 203e
0000fe 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
0000ff 5374
000100 6e65
000101 6f73
000102 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000103 6e6f
000104 6966
000105 2867
000106 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000107 2029
000108 7265
000109 6f72
00010a 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
00010b 000a
00010c 6d3c
00010d 6961
00010e 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
00010f 6120
000110 6464
000111 6553
000112 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
000113 726f
000114 6144
000115 6174
000116 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000117 7565
000118 2865
000119 6425
00011a 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
00011b 312e
00011c 2966
00011d 6620
00011e 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
00011f 656c
000120 0d64
000121 000a
000122 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
000123 6961
000124 3e6e
000125 7520
000126 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000127 7461
000128 5365
000129 6174
00012a 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00012b 2873
00012c 2029
00012d 6166
00012e 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00012f 6465
000130 0a0d
000131 3c00
000132 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
000133 6e69
000134 203e
000135 706f
000136 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000137 7461
000138 6e69
000139 2067
00013a 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
00013b 6564
00013c 6520
00013d 7272
00013e 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
00013f 2121
000140 5b20
000141 7830
000142 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
000143 5832
000144 0d5d
000145 000a
000146 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000147 6961
000148 3e6e
000149 5320
00014a 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
00014b 6572
00014c 6461
00014d 654d
00014e 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
00014f 7972
000150 6552
000151 616d
000152 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
000153 2928
000154 6620
000155 6961
000156 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000157 0d64
000158 000a
000159 6d3c
00015a 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
00015b 3e6e
00015c 5b20
00015d 6544
00015e 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
00015f 6563
000160 6420
000161 7369
000162 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
000163 656c
000164 205d
000165 545b
000166 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
000167 2d45
000168 5d4b
000169 2420
00016a 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
00016b 5344
00016c 534e
00016d 4e20
00016e 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
00016f 5820
000170 582e
000171 2058
000172 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
000173 2020
000174 2020
000175 2020
000176 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000177 2020
000178 2020
000179 2020
00017a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00017b 0d20
00017c 3c00
00017d 616d
00017e 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
00017f 203e
000180 445b
000181 7665
000182 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
000183 2065
000184 6964
000185 6173
000186 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
000187 5d65
000188 5b20
000189 5954
00018a 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
00018b 4b2d
00018c 205d
00018d 4324
00018e 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
00018f 4e53
000190 2053
000191 6425
000192 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
000193 2520
000194 2066
000195 2020
000196 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
000197 2020
000198 2020
000199 2020
00019a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00019b 2020
00019c 2020
00019d 2020
00019e 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00019f 000d
0001a0 6d3c
0001a1 6961
0001a2 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001a3 5b20
0001a4 6544
0001a5 6976
0001a6 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001a7 6420
0001a8 7369
0001a9 6261
0001aa 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001ab 205d
0001ac 545b
0001ad 5059
0001ae 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001af 5d4b
0001b0 2420
0001b1 4d43
0001b2 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
0001b3 534e
0001b4 2520
0001b5 2064
0001b6 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
0001b7 6964
0001b8 6373
0001b9 6e6f
0001ba 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
0001bb 7463
0001bc 6465
0001bd 2020
0001be 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
0001bf 2020
0001c0 2020
0001c1 2020
0001c2 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
0001c3 3c00
0001c4 616d
0001c5 6e69
0001c6 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
0001c7 445b
0001c8 7665
0001c9 6369
0001ca 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
0001cb 6964
0001cc 6173
0001cd 6c62
0001ce 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
0001cf 5b20
0001d0 4d54
0001d1 4345
0001d2 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
0001d3 2020
0001d4 2020
0001d5 2020
0001d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001d7 2020
0001d8 2020
0001d9 2020
0001da 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001db 2020
0001dc 2020
0001dd 2020
0001de 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001df 2020
0001e0 2020
0001e1 2020
0001e2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001e3 2020
0001e4 2020
0001e5 2020
0001e6 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
0001e7 6d3c
0001e8 6961
0001e9 3e6e
0001ea 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
0001eb 6544
0001ec 6976
0001ed 6563
0001ee 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
0001ef 7369
0001f0 6261
0001f1 656c
0001f2 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
0001f3 505b
0001f4 3154
0001f5 3030
0001f6 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
0001f7 2020
0001f8 2020
0001f9 2020
0001fa 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001fb 2020
0001fc 2020
0001fd 2020
0001fe 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ff 2020
000200 2020
000201 2020
000202 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000203 2020
000204 2020
000205 2020
000206 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000207 2020
000208 2020
000209 0d20
00020a 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
00020b 616d
00020c 6e69
00020d 203e
00020e 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
00020f 7665
000210 6369
000211 2065
000212 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
000213 6173
000214 6c62
000215 5d65
000216 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000217 4552
000218 4553
000219 5652
00021a 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
00021b 205d
00021c 2020
00021d 2020
00021e 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00021f 2020
000220 2020
000221 2020
000222 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000223 2020
000224 2020
000225 2020
000226 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000227 2020
000228 2020
000229 2020
00022a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022b 2020
00022c 2020
00022d 000d
00022e 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
00022f 6470
000230 7461
000231 5365
000232 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
000233 7574
000234 3e73
000235 4520
000236 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000237 725f
000238 7473
000239 745f
00023a 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
00023b 7265
00023c 7420
00023d 6d69
00023e 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
00023f 656c
000240 7466
000241 3d20
000242 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
000243 646c
000244 2528
000245 586c
000246 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000247 000a
000248 0a0d
000249 653c
00024a 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00024b 746e
00024c 6143
00024d 7470
00024e 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00024f 3e65
000250 2120
000251 2121
000252 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000253 2121
000254 2121
000255 2121
000256 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000257 6e6f
000258 7469
000259 726f
00025a 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
00025b 646f
00025c 2065
00025d 2121
00025e 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
00025f 0d21
000260 000a
000261 0a0d
000262 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
000263 6576
000264 746e
000265 6143
000266 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
000267 7275
000268 3e65
000269 2120
00026a 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
00026b 2121
00026c 2121
00026d 2121
00026e 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00026f 4d20
000270 6961
000271 746e
000272 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
000273 6e61
000274 6563
000275 4920
000276 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
000277 7250
000278 676f
000279 6572
00027a 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
00027b 2120
00027c 2121
00027d 2121
00027e 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
00027f 3c00
000280 7665
000281 6e65
000282 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
000283 7061
000284 7574
000285 6572
000286 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
000287 6461
000288 4564
000289 6576
00028a 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
00028b 7551
00028c 7565
00028d 2865
00028e 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
00028f 6166
000290 6c69
000291 6465
000292 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000293 0d00
000294 3c0a
000295 7665
000296 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000297 4374
000298 7061
000299 7574
00029a 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00029b 203e
00029c 2121
00029d 2121
00029e 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00029f 2121
0002a0 2121
0002a1 2021
0002a2 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002a3 6e69
0002a4 5020
0002a5 776f
0002a6 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002a7 4420
0002a8 776f
0002a9 206e
0002aa 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002ab 2121
0002ac 0d21
0002ad 000a
0002ae 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002af 653c
0002b0 6576
0002b1 746e
0002b2 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0002b3 7470
0002b4 7275
0002b5 3e65
0002b6 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0002b7 2121
0002b8 2121
0002b9 2121
0002ba 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002bb 2121
0002bc 4d20
0002bd 6961
0002be 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
0002bf 6f50
0002c0 6577
0002c1 2072
0002c2 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
0002c3 2120
0002c4 2121
0002c5 2121
0002c6 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002c7 0d00
0002c8 3c0a
0002c9 7665
0002ca 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002cb 4374
0002cc 7061
0002cd 7574
0002ce 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002cf 203e
0002d0 2121
0002d1 2121
0002d2 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002d3 2121
0002d4 2121
0002d5 2021
0002d6 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
0002d7 7474
0002d8 7265
0002d9 2079
0002da 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
0002db 2077
0002dc 2121
0002dd 2121
0002de 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0002df 000a
0002e0 0a0d
0002e1 653c
0002e2 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0002e3 746e
0002e4 6143
0002e5 7470
0002e6 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0002e7 3e65
0002e8 2120
0002e9 2121
0002ea 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0002eb 2121
0002ec 2121
0002ed 2121
0002ee 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
0002ef 7461
0002f0 6574
0002f1 7972
0002f2 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
0002f3 204b
0002f4 2121
0002f5 2121
0002f6 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0002f7 000a
0002f8 0a0d
0002f9 653c
0002fa 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0002fb 746e
0002fc 6143
0002fd 7470
0002fe 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0002ff 3e65
000300 2120
000301 2121
000302 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000303 2121
000304 2121
000305 2121
000306 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000307 6d65
000308 726f
000309 2079
00030a 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
00030b 2077
00030c 2121
00030d 2121
00030e 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00030f 000a
000310 0a0d
000311 653c
000312 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000313 746e
000314 6143
000315 7470
000316 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000317 3e65
000318 2120
000319 2121
00031a 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00031b 2121
00031c 2121
00031d 2121
00031e 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
00031f 6d65
000320 726f
000321 2079
000322 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
000323 6f72
000324 2072
000325 2121
000326 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000327 0d21
000328 000a
000329 0a0d
00032a 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00032b 6576
00032c 746e
00032d 6143
00032e 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
00032f 7275
000330 3e65
000331 2120
000332 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
000333 2121
000334 2121
000335 2121
000336 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000337 4d20
000338 6d65
000339 726f
00033a 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
00033b 4b4f
00033c 2120
00033d 2121
00033e 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
00033f 0a0d
000340 0d00
000341 3c0a
000342 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000343 6e65
000344 4374
000345 7061
000346 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000347 6572
000348 203e
000349 2121
00034a 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
00034b 2121
00034c 2121
00034d 2121
00034e 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
00034f 6944
000350 206e
000351 6425
000352 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
000353 7369
000354 6e69
000355 2067
000356 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
000357 2121
000358 0d21
000359 000a
00035a 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
00035b 653c
00035c 6576
00035d 746e
00035e 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
00035f 7470
000360 7275
000361 3e65
000362 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
000363 2121
000364 2121
000365 2121
000366 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000367 2121
000368 4420
000369 6e69
00036a 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
00036b 2064
00036c 6146
00036d 6c6c
00036e 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
00036f 2067
000370 2121
000371 2121
000372 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000373 000a
000374 0a0d
000375 653c
000376 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000377 746e
000378 6143
000379 7470
00037a 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00037b 3e65
00037c 2120
00037d 2121
00037e 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00037f 2121
000380 2121
000381 2121
000382 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
000383 4f52
000384 4542
000385 2520
000386 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
000387 4944
000388 4353
000389 4e4f
00038a 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
00038b 5443
00038c 2120
00038d 2121
00038e 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
00038f 0a0d
000390 4100
000391 314c
000392 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
000393 6431
000394 0d00
000395 3c0a
000396 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
000397 6e65
000398 4374
000399 7061
00039a 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
00039b 6572
00039c 203e
00039d 2121
00039e 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
00039f 2121
0003a0 2121
0003a1 2121
0003a2 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003a3 5250
0003a4 424f
0003a5 2045
0003a6 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003a7 4320
0003a8 4e4f
0003a9 454e
0003aa 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003ab 2120
0003ac 2121
0003ad 2121
0003ae 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003af 4100
0003b0 304c
0003b1 2532
0003b2 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
0003b3 0d00
0003b4 3c0a
0003b5 7665
0003b6 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0003b7 4374
0003b8 7061
0003b9 7574
0003ba 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0003bb 203e
0003bc 2121
0003bd 2121
0003be 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0003bf 2121
0003c0 2121
0003c1 2021
0003c2 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
0003c3 424f
0003c4 2045
0003c5 6425
0003c6 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
0003c7 6d65
0003c8 6570
0003c9 6172
0003ca 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
0003cb 6572
0003cc 4520
0003cd 5252
0003ce 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
0003cf 2120
0003d0 2121
0003d1 2121
0003d2 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003d3 0d00
0003d4 3c0a
0003d5 7665
0003d6 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0003d7 4374
0003d8 7061
0003d9 7574
0003da 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0003db 203e
0003dc 2121
0003dd 2121
0003de 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0003df 2121
0003e0 2121
0003e1 2021
0003e2 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
0003e3 424f
0003e4 2045
0003e5 6425
0003e6 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
0003e7 6d65
0003e8 6570
0003e9 6172
0003ea 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
0003eb 6572
0003ec 4f20
0003ed 204b
0003ee 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
0003ef 2121
0003f0 0d21
0003f1 000a
0003f2 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
0003f3 6174
0003f4 7574
0003f5 5273
0003f6 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0003f7 726f
0003f8 3e74
0003f9 5220
0003fa 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
0003fb 524f
0003fc 5f54
0003fd 4953
0003fe 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
0003ff 454c
000400 6d20
000401 646f
000402 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000403 6f6e
000404 2074
000405 7573
000406 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000407 726f
000408 6574
000409 2064
00040a 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
00040b 0d74
00040c 000a
00040d 733c
00040e 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00040f 7574
000410 5273
000411 7065
000412 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000413 3e74
000414 5220
000415 5045
000416 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000417 5f54
000418 554d
000419 544c
00041a 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
00041b 454c
00041c 6d20
00041d 646f
00041e 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00041f 6f6e
000420 2074
000421 7573
000422 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000423 726f
000424 6574
000425 2064
000426 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000427 0d74
000428 000a
000429 733c
00042a 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00042b 7574
00042c 5273
00042d 7065
00042e 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00042f 3e74
000430 6d20
000431 6c61
000432 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
000433 2063
000434 6166
000435 6c69
000436 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000437 2820
000438 6425
000439 6220
00043a 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
00043b 7365
00043c 0d29
00043d 000a
00043e 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
00043f 6174
000440 7574
000441 5273
000442 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000443 726f
000444 3e74
000445 6720
000446 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000447 6544
000448 6976
000449 6563
00044a 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
00044b 7461
00044c 2865
00044d 2029
00044e 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
00044f 6c69
000450 6465
000451 0a0d
000452 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
000453 7473
000454 7461
000455 7375
000456 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
000457 6f70
000458 7472
000459 203e
00045a 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
00045b 7461
00045c 7375
00045d 7220
00045e 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
00045f 726f
000460 2074
000461 6361
000462 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
000463 7520
000464 6b6e
000465 6f6e
000466 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
000467 5b20
000468 7830
000469 3025
00046a 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
00046b 0d5d
00046c 000a
00046d 733c
00046e 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00046f 7574
000470 5273
000471 7065
000472 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000473 3e74
000474 4520
000475 4854
000476 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
000477 6e65
000478 5364
000479 6174
00047a 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
00047b 5273
00047c 7065
00047d 726f
00047e 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
00047f 646d
000480 2928
000481 6620
000482 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
000483 656c
000484 0d64
000485 000a
000486 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
000487 6e65
000488 6f73
000489 4472
00048a 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
00048b 5261
00048c 7065
00048d 726f
00048e 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00048f 5b20
000490 6c25
000491 5d64
000492 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
000493 5d64
000494 255b
000495 322e
000496 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
000497 0a0d
000498 0d00
000499 3c0a
00049a 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
00049b 736e
00049c 726f
00049d 6144
00049e 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
00049f 6552
0004a0 6f70
0004a1 7472
0004a2 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004a3 3d3d
0004a4 203d
0004a5 5245
0004a6 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004a7 2052
0004a8 4e49
0004a9 4f46
0004aa 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004ab 4954
0004ac 4e4f
0004ad 4920
0004ae 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004af 4554
0004b0 504d
0004b1 5120
0004b2 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
0004b3 4555
0004b4 3d20
0004b5 3d3d
0004b6 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
0004b7 3c00
0004b8 6573
0004b9 736e
0004ba 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0004bb 6144
0004bc 6174
0004bd 6552
0004be 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0004bf 7472
0004c0 203e
0004c1 5445
0004c2 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
0004c3 6573
0004c4 646e
0004c5 6144
0004c6 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
0004c7 6552
0004c8 6f70
0004c9 7472
0004ca 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
0004cb 2864
0004cc 2029
0004cd 6166
0004ce 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0004cf 6465
0004d0 0a0d
0004d1 3c00
0004d2 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
0004d3 6e65
0004d4 5274
0004d5 7065
0004d6 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
0004d7 3e74
0004d8 5b20
0004d9 6c25
0004da 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
0004db 305b
0004dc 2578
0004dd 3230
0004de 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0004df 305b
0004e0 2578
0004e1 3230
0004e2 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0004e3 0a0d
0004e4 0d00
0004e5 3c0a
0004e6 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
0004e7 6e65
0004e8 5274
0004e9 7065
0004ea 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
0004eb 3e74
0004ec 3d20
0004ed 3d3d
0004ee 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
0004ef 5252
0004f0 524f
0004f1 4920
0004f2 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
0004f3 4d4f
0004f4 5441
0004f5 4f49
0004f6 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
0004f7 4e49
0004f8 5420
0004f9 4d45
0004fa 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
0004fb 5551
0004fc 5545
0004fd 2045
0004fe 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
0004ff 0d3d
000500 000a
000501 653c
000502 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
000503 746e
000504 6552
000505 6f70
000506 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000507 203e
000508 5445
000509 5f48
00050a 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
00050b 646e
00050c 7645
00050d 6e65
00050e 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
00050f 7065
000510 726f
000511 4374
000512 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000513 2928
000514 6620
000515 6961
000516 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000517 0d64
000518 000a
000519 733c
00051a 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00051b 6f73
00051c 4472
00051d 7461
00051e 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
00051f 7661
000520 3e65
000521 7420
000522 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
000523 5b65
000524 6c25
000525 5d64
000526 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000527 5b68
000528 6425
000529 2c5d
00052a 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
00052b 5b6c
00052c 2e25
00052d 6632
00052e 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
00052f 000a
000530 0a0d
000531 733c
000532 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
000533 6f73
000534 4472
000535 7461
000536 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000537 7661
000538 3e65
000539 3d20
00053a 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
00053b 4520
00053c 5252
00053d 524f
00053e 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
00053f 464e
000540 4d4f
000541 5441
000542 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
000543 204e
000544 4e49
000545 5420
000546 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000547 2050
000548 5551
000549 5545
00054a 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
00054b 3d3d
00054c 0d3d
00054d 000a
00054e 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
00054f 6e65
000550 6f73
000551 4472
000552 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
000553 5361
000554 7661
000555 3e65
000556 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
000557 474f
000558 6f5f
000559 6570
00055a 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
00055b 6c69
00055c 2865
00055d 7325
00055e 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
00055f 6166
000560 6c69
000561 6465
000562 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
000563 6f63
000564 6c75
000565 6e64
000566 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
000567 7320
000568 7661
000569 2065
00056a 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
00056b 0d67
00056c 000a
00056d 733c
00056e 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00056f 6f73
000570 4472
000571 7461
000572 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000573 7661
000574 3e65
000575 4c20
000576 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000577 695f
000578 736e
000579 7265
00057a 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
00057b 7461
00057c 2861
00057d 2029
00057e 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
00057f 6c69
000580 6465
000581 0a0d
000582 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
000583 6573
000584 736e
000585 726f
000586 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
000587 6174
000588 6153
000589 6576
00058a 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
00058b 4f4c
00058c 5f47
00058d 6c63
00058e 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
00058f 4665
000590 6c69
000591 2865
000592 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
000593 6166
000594 6c69
000595 6465
000596 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000597 3c00
000598 6573
000599 736e
00059a 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00059b 6144
00059c 6174
00059d 6153
00059e 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
00059f 203e
0005a0 6144
0005a1 6174
0005a2 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005a3 676f
0005a4 6920
0005a5 2073
0005a6 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005a7 2074
0005a8 6d65
0005a9 7470
0005aa 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005ab 000a
0005ac 653c
0005ad 6576
0005ae 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005af 6153
0005b0 6576
0005b1 203e
0005b2 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
0005b3 656d
0005b4 255b
0005b5 646c
0005b6 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
0005b7 6469
0005b8 305b
0005b9 2578
0005ba 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
0005bb 5d58
0005bc 732c
0005bd 6174
0005be 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
0005bf 7830
0005c0 3025
0005c1 5832
0005c2 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0005c3 000a
0005c4 0a0d
0005c5 653c
0005c6 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0005c7 746e
0005c8 6153
0005c9 6576
0005ca 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
0005cb 3d3d
0005cc 203d
0005cd 5245
0005ce 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0005cf 2052
0005d0 4e49
0005d1 4f46
0005d2 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0005d3 4954
0005d4 4e4f
0005d5 4920
0005d6 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0005d7 4554
0005d8 504d
0005d9 5120
0005da 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
0005db 4555
0005dc 3d20
0005dd 3d3d
0005de 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
0005df 3c00
0005e0 7665
0005e1 6e65
0005e2 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
0005e3 7661
0005e4 3e65
0005e5 4c20
0005e6 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005e7 6f5f
0005e8 6570
0005e9 466e
0005ea 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
0005eb 2865
0005ec 7325
0005ed 2029
0005ee 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
0005ef 6c69
0005f0 6465
0005f1 202c
0005f2 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
0005f3 6c75
0005f4 6e64
0005f5 7427
0005f6 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
0005f7 7661
0005f8 2065
0005f9 6f6c
0005fa 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
0005fb 000a
0005fc 653c
0005fd 6576
0005fe 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005ff 6153
000600 6576
000601 203e
000602 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
000603 5f47
000604 6e69
000605 6573
000606 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000607 7645
000608 6e65
000609 2874
00060a 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
00060b 6166
00060c 6c69
00060d 6465
00060e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00060f 3c00
000610 7665
000611 6e65
000612 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000613 7661
000614 3e65
000615 4c20
000616 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000617 635f
000618 6f6c
000619 6573
00061a 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
00061b 656c
00061c 2928
00061d 6620
00061e 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00061f 656c
000620 0d64
000621 000a
000622 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
000623 6576
000624 746e
000625 6153
000626 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000627 203e
000628 7645
000629 6e65
00062a 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00062b 6f4c
00062c 2067
00062d 7369
00062e 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
00062f 746f
000630 6520
000631 706d
000632 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
000633 0a0d
000634 3c00
000635 6f6c
000636 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000637 7065
000638 726f
000639 3e74
00063a 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
00063b 6568
00063c 6b63
00063d 4420
00063e 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
00063f 2061
000640 6f4c
000641 2067
000642 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000643 7369
000644 0d74
000645 000a
000646 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000647 676f
000648 6552
000649 6f70
00064a 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00064b 203e
00064c 4f4c
00064d 5f47
00064e 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
00064f 6e65
000650 6946
000651 656c
000652 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
000653 2973
000654 6620
000655 6961
000656 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000657 0d64
000658 000a
000659 6c3c
00065a 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00065b 6552
00065c 6f70
00065d 7472
00065e 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00065f 4f4c
000660 5f47
000661 6572
000662 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
000663 6144
000664 6174
000665 2528
000666 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
000667 6620
000668 6961
000669 656c
00066a 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00066b 000a
00066c 6c3c
00066d 676f
00066e 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00066f 6f70
000670 7472
000671 203e
000672 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
000673 5f47
000674 6572
000675 6461
000676 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
000677 6174
000678 2928
000679 4c20
00067a 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
00067b 6520
00067c 706d
00067d 7974
00067e 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
00067f 0d00
000680 3c0a
000681 6f6c
000682 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
000683 7065
000684 726f
000685 3e74
000686 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
000687 3d3d
000688 4520
000689 5252
00068a 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
00068b 4920
00068c 464e
00068d 4d4f
00068e 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
00068f 4f49
000690 204e
000691 4e49
000692 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
000693 2073
000694 3d3d
000695 0d3d
000696 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
000697 6c3c
000698 676f
000699 6552
00069a 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
00069b 7472
00069c 203e
00069d 6144
00069e 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
00069f 6f4c
0006a0 2067
0006a1 6f66
0006a2 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006a3 2064
0006a4 6974
0006a5 656d
0006a6 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006a7 646c
0006a8 2c5d
0006a9 6863
0006aa 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006ab 5d64
0006ac 762c
0006ad 6c61
0006ae 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006af 322e
0006b0 5d66
0006b1 0a0d
0006b2 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
0006b3 6f6c
0006b4 5267
0006b5 7065
0006b6 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0006b7 3e74
0006b8 4520
0006b9 4854
0006ba 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0006bb 6e65
0006bc 4464
0006bd 7461
0006be 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
0006bf 7065
0006c0 726f
0006c1 4374
0006c2 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
0006c3 2928
0006c4 6620
0006c5 6961
0006c6 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0006c7 0d64
0006c8 000a
0006c9 6c3c
0006ca 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
0006cb 6552
0006cc 6f70
0006cd 7472
0006ce 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0006cf 6144
0006d0 6174
0006d1 6f4c
0006d2 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
0006d3 6573
0006d4 746e
0006d5 6620
0006d6 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
0006d7 656d
0006d8 4449
0006d9 305b
0006da 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
0006db 3230
0006dc 5d58
0006dd 6c20
0006de 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
0006df 4449
0006e0 305b
0006e1 2578
0006e2 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
0006e3 5d58
0006e4 0a0d
0006e5 3c00
0006e6 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
0006e7 5267
0006e8 7065
0006e9 726f
0006ea 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0006eb 4c20
0006ec 474f
0006ed 635f
0006ee 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
0006ef 6573
0006f0 6946
0006f1 656c
0006f2 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
0006f3 6620
0006f4 6961
0006f5 656c
0006f6 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006f7 000a
0006f8 6c3c
0006f9 676f
0006fa 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006fb 6f70
0006fc 7472
0006fd 203e
0006fe 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
0006ff 6365
000700 206b
000701 7645
000702 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
000703 2074
000704 6f4c
000705 2067
000706 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000707 7369
000708 0d74
000709 000a
00070a 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
00070b 676f
00070c 6552
00070d 6f70
00070e 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00070f 203e
000710 4f4c
000711 5f47
000712 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
000713 6461
000714 7645
000715 6e65
000716 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000717 2029
000718 6166
000719 6c69
00071a 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00071b 0a0d
00071c 3c00
00071d 6f6c
00071e 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00071f 7065
000720 726f
000721 3e74
000722 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
000723 474f
000724 725f
000725 6165
000726 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000727 6576
000728 746e
000729 2928
00072a 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
00072b 676f
00072c 6520
00072d 706d
00072e 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
00072f 0a0d
000730 3c00
000731 6f6c
000732 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000733 7065
000734 726f
000735 3e74
000736 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000737 6576
000738 746e
000739 6f4c
00073a 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
00073b 6f66
00073c 6e75
00073d 2064
00073e 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
00073f 656d
000740 255b
000741 646c
000742 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000743 6469
000744 305b
000745 2578
000746 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000747 5d58
000748 732c
000749 6174
00074a 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00074b 7830
00074c 3025
00074d 5832
00074e 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00074f 000a
000750 6c3c
000751 676f
000752 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
000753 6f70
000754 7472
000755 203e
000756 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
000757 5f48
000758 6573
000759 646e
00075a 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
00075b 6e65
00075c 5274
00075d 7065
00075e 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
00075f 4374
000760 646d
000761 2928
000762 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
000763 6961
000764 656c
000765 0d64
000766 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
000767 6c3c
000768 676f
000769 6552
00076a 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
00076b 7472
00076c 203e
00076d 7645
00076e 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
00076f 4c74
000770 676f
000771 7320
000772 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
000773 2074
000774 7266
000775 6d61
000776 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
000777 5b44
000778 7830
000779 3025
00077a 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
00077b 205d
00077c 6f6c
00077d 4967
00077e 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
00077f 7830
000780 3025
000781 5832
000782 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000783 000a
000784 6c3c
000785 676f
000786 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
000787 6f70
000788 7472
000789 203e
00078a 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
00078b 5f47
00078c 6c63
00078d 736f
00078e 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
00078f 6c69
000790 2865
000791 7325
000792 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
000793 6166
000794 6c69
000795 6465
000796 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1665): warning: .cseg .db misalignment - padding zero byte
000797 0000      	.DB  0x0
                 _0x20000:
000798 0a0d
000799 6f50
00079a 6577
00079b 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
00079c 6e6f
00079d 5220
00079e 7365
00079f 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007a0 0a0d
0007a1 0d00
0007a2 450a
0007a3 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007a4 7265
0007a5 616e
0007a6 206c
0007a7 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007a8 6573
0007a9 0d74
0007aa 000a
0007ab 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007ac 7242
0007ad 776f
0007ae 2d6e
0007af 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007b0 2074
0007b1 6552
0007b2 6573
0007b3 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
0007b4 000a
0007b5 0a0d
0007b6 6157
0007b7 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
0007b8 6468
0007b9 676f
0007ba 5220
0007bb 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
0007bc 7465
0007bd 0a0d
0007be 0d00
0007bf 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
0007c0 4154
0007c1 2047
0007c2 6552
0007c3 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
0007c4 0d74
0007c5 000a
0007c6 693c
0007c7 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
0007c8 6974
0007c9 6c61
0007ca 735f
0007cb 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
0007cc 6574
0007cd 3e6d
0007ce 4c20
0007cf 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
0007d0 695f
0007d1 696e
0007d2 2874
0007d3 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
0007d4 6166
0007d5 6c69
0007d6 6465
0007d7 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0007d8 3c00
0007d9 6e69
0007da 7469
0007db 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
0007dc 5f6c
0007dd 7973
0007de 7473
0007df 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
0007e0 203e
0007e1 4453
0007e2 695f
0007e3 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
0007e4 2874
0007e5 2029
0007e6 6166
0007e7 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0007e8 6465
0007e9 0a0d
0007ea 4900
0007eb 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
0007ec 6974
0007ed 6c61
0007ee 4420
0007ef 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
0007f0 6369
0007f1 2065
0007f2 6f43
0007f3 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
0007f4 656c
0007f5 6574
0007f6 2064
0007f7 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
0007f8 2d20
0007f9 0020
0007fa 3025
0007fb 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
0007fc 252d
0007fd 3230
0007fe 2d64
0007ff 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000800 6432
000801 2520
000802 3230
000803 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000804 3025
000805 6432
000806 253a
000807 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000808 0d64
000809 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
00080a 0a0d
00080b 2121
00080c 2121
00080d 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
00080e 2121
00080f 2121
000810 2121
000811 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000812 2121
000813 2121
000814 2121
000815 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000816 2121
000817 2121
000818 2121
000819 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00081a 2121
00081b 2121
00081c 2121
00081d 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00081e 0a0d
00081f 2100
000820 2121
000821 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
000822 2121
000823 4520
000824 6874
000825 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
000826 6675
000827 6566
000828 2072
000829 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
00082a 7265
00082b 6c66
00082c 776f
00082d 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
00082e 2121
00082f 2121
000830 2121
000831 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1707): warning: .cseg .db misalignment - padding zero byte
000832 0000      	.DB  0x0
                 _0x60000:
000833 543c
000834 4d49
000835 5245
000836 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000837 7465
000838 6954
000839 656d
00083a 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
00083b 4520
00083c 5252
00083d 203a
00083e 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
00083f 6972
000840 646f
000841 3d20
000842 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
000843 0a0d
000844 3c00
000845 4954
000846 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000847 5f52
000848 6573
000849 5474
00084a 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
00084b 7265
00084c 203e
00084d 6162
00084e 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
00084f 6f43
000850 6e75
000851 6574
000852 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
000853 6c25
000854 5d64
000855 2b20
000856 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
000857 7265
000858 6f69
000859 5b64
00085a 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
00085b 5d64
00085c 3d20
00085d 2520
00085e 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
00085f 4f20
000860 4556
000861 4652
000862 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
000863 2157
000864 0d21
000865 000a
000866 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
000867 5444
000868 203e
000869 6157
00086a 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
00086b 4468
00086c 676f
00086d 5420
00086e 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
00086f 7265
000870 5220
000871 7365
000872 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
000873 2121
000874 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1725): warning: .cseg .db misalignment - padding zero byte
000875 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
000876 ffff      	.DB  0xFF,0xFF
                 _0x80000:
000877 493c
000878 5f4f
000879 656b
00087a 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
00087b 6568
00087c 6b63
00087d 203e
00087e 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
00087f 2079
000880 4f4d
000881 4544
000882 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
000883 3c00
000884 4f49
000885 6b5f
000886 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
000887 6843
000888 6365
000889 3e6b
00088a 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
00088b 7965
00088c 5520
00088d 0d50
00088e 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
00088f 493c
000890 5f4f
000891 656b
000892 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
000893 6568
000894 6b63
000895 203e
000896 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
000897 2079
000898 4f44
000899 4e57
00089a 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
00089b 3c00
00089c 4f49
00089d 6b5f
00089e 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
00089f 6843
0008a0 6365
0008a1 3e6b
0008a2 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008a3 7965
0008a4 4f20
0008a5 0d4b
0008a6 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008a7 6e49
0008a8 7469
0008a9 6169
0008aa 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008ab 697a
0008ac 676e
0008ad 4120
0008ae 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008af 2e2e
0008b0 0020
0008b1 4b4f
0008b2 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1745): warning: .cseg .db misalignment - padding zero byte
0008b3 0000      	.DB  0x0
                 _0xC0003:
0008b4 0063
0008b5 0000
0008b6 0063
0008b7 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
0008b8 0063
0008b9 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
0008ba 5f63
0008bb 6974
0008bc 656d
0008bd 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
0008be 646c
0008bf 205d
0008c0 2026
0008c1 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
0008c2 6974
0008c3 656d
0008c4 255b
0008c5 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
0008c6 205d
0008c7 3e3d
0008c8 6420
0008c9 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
0008ca 5b66
0008cb 6c25
0008cc 5d64
0008cd 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0008ce 3e00
0008cf 203e
0008d0 5452
0008d1 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
0008d2 6573
0008d3 4274
0008d4 6e69
0008d5 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
0008d6 2079
0008d7 5452
0008d8 2043
0008d9 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
0008da 636e
0008db 0d2e
0008dc 000a
0008dd 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
0008de 4354
0008df 735f
0008e0 7465
0008e1 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
0008e2 6574
0008e3 6954
0008e4 656d
0008e5 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
0008e6 6954
0008e7 656d
0008e8 6f7a
0008e9 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
0008ea 6f20
0008eb 7475
0008ec 6f20
0008ed 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
0008ee 6172
0008ef 676e
0008f0 2065
0008f1 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
0008f2 642b
0008f3 0d29
0008f4 000a
0008f5 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
0008f6 2e6e
0008f7 0020
0008f8 7554
0008f9 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
0008fa 0020
0008fb 6557
0008fc 2e64
0008fd 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
0008fe 6854
0008ff 2e75
000900 0020
000901 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
000902 2e69
000903 0020
000904 6153
000905 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
000906 0020
000907 7553
000908 2e6e
000909 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
00090a 255b
00090b 5d64
00090c 3025
00090d 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
00090e 252d
00090f 3230
000910 2d64
000911 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000912 6432
000913 2520
000914 3230
000915 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000916 3025
000917 6432
000918 253a
000919 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
00091a 0d64
00091b 000a
00091c 7552
00091d 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
00091e 6e69
00091f 2067
000920 6977
000921 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
000922 5320
000923 7379
000924 6574
000925 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
000926 6c43
000927 636f
000928 206b
000929 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1778): warning: .cseg .db misalignment - padding zero byte
00092a 0000      	.DB  0x0
                 _0xE0003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1780): warning: .cseg .db misalignment - padding zero byte
00092b 0001      	.DB  0x1
                 _0xE0004:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1782): warning: .cseg .db misalignment - padding zero byte
00092c 0001      	.DB  0x1
                 _0xE0005:
00092d 0101
00092e 0101
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1784): warning: .cseg .db misalignment - padding zero byte
00092f 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
000930 0101
000931 0101
000932 0101
000933 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000934 0101
000935 0101
000936 0101
000937 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000938 0101
000939 0101
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1789): warning: .cseg .db misalignment - padding zero byte
00093a 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1791): warning: .cseg .db misalignment - padding zero byte
00093b 0001      	.DB  0x1
                 _0xE0009:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1793): warning: .cseg .db misalignment - padding zero byte
00093c 0001      	.DB  0x1
                 _0xE000A:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(1795): warning: .cseg .db misalignment - padding zero byte
00093d 0001      	.DB  0x1
                 _0xE0000:
00093e 673c
00093f 7465
000940 7250
000941 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
000942 7265
000943 6974
000944 7365
000945 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
000946 666e
000947 6769
000948 203e
000949 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
00094a 6320
00094b 6e6f
00094c 6966
00094d 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
00094e 6172
00094f 6974
000950 6e6f
000951 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000952 7375
000953 2065
000954 6564
000955 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000956 6c75
000957 0d74
000958 000a
000959 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
00095a 7465
00095b 704f
00095c 7265
00095d 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
00095e 6e69
00095f 4367
000960 6e6f
000961 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
000962 3e67
000963 6e20
000964 206f
000965 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000966 666e
000967 6769
000968 7275
000969 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
00096a 6f69
00096b 2c6e
00096c 7520
00096d 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
00096e 6420
00096f 6665
000970 7561
000971 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000972 0a0d
000973 3c00
000974 6567
000975 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
000976 6570
000977 6172
000978 6974
000979 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
00097a 6f43
00097b 666e
00097c 6769
00097d 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
00097e 6f6d
00097f 6564
000980 2020
000981 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
000982 2020
000983 2020
000984 2020
000985 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000986 3e3e
000987 3020
000988 2578
000989 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
00098a 0d58
00098b 000a
00098c 673c
00098d 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
00098e 704f
00098f 7265
000990 7461
000991 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
000992 4367
000993 6e6f
000994 6966
000995 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000996 6420
000997 7665
000998 6369
000999 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
00099a 616e
00099b 6c62
00099c 2065
00099d 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
00099e 3e20
00099f 203e
0009a0 7830
0009a1 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009a2 5832
0009a3 0a0d
0009a4 3c00
0009a5 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009a6 4f74
0009a7 6570
0009a8 6172
0009a9 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009aa 676e
0009ab 6f43
0009ac 666e
0009ad 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009ae 203e
0009af 6c61
0009b0 7261
0009b1 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
0009b2 616e
0009b3 6c62
0009b4 2065
0009b5 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009b6 2020
0009b7 3e3e
0009b8 3020
0009b9 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
0009ba 3230
0009bb 0d58
0009bc 000a
0009bd 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
0009be 7465
0009bf 704f
0009c0 7265
0009c1 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009c2 6e69
0009c3 4367
0009c4 6e6f
0009c5 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009c6 3e67
0009c7 7320
0009c8 6e65
0009c9 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
0009ca 4572
0009cb 616e
0009cc 6c62
0009cd 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
0009ce 2020
0009cf 3e20
0009d0 203e
0009d1 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
0009d2 7830
0009d3 3025
0009d4 5832
0009d5 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
0009d6 673c
0009d7 7465
0009d8 6553
0009d9 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
0009da 726f
0009db 6f43
0009dc 666e
0009dd 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
0009de 203e
0009df 6573
0009e0 736e
0009e1 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0009e2 6320
0009e3 6168
0009e4 6e6e
0009e5 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
0009e6 6f20
0009e7 7475
0009e8 6f20
0009e9 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
0009ea 6172
0009eb 676e
0009ec 2065
0009ed 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
0009ee 2964
0009ef 0a0d
0009f0 3c00
0009f1 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
0009f2 5374
0009f3 6e65
0009f4 6f73
0009f5 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
0009f6 6e6f
0009f7 6966
0009f8 3e67
0009f9 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
0009fa 206f
0009fb 6f63
0009fc 666e
0009fd 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0009fe 7275
0009ff 7461
000a00 6f69
000a01 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a02 7520
000a03 6573
000a04 6420
000a05 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a06 7561
000a07 746c
000a08 0a0d
000a09 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a0a 6567
000a0b 4174
000a0c 7875
000a0d 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a0e 436e
000a0f 6e6f
000a10 6966
000a11 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a12 6420
000a13 6769
000a14 7469
000a15 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a16 6920
000a17 706e
000a18 7475
000a19 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a1a 6168
000a1b 6e6e
000a1c 6c65
000a1d 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a1e 7475
000a1f 6f20
000a20 2066
000a21 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a22 676e
000a23 2065
000a24 2528
000a25 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a26 0a0d
000a27 3c00
000a28 6567
000a29 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a2a 7875
000a2b 6944
000a2c 436e
000a2d 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a2e 6966
000a2f 3e67
000a30 6e20
000a31 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a32 6f63
000a33 666e
000a34 6769
000a35 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a36 7461
000a37 6f69
000a38 2c6e
000a39 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a3a 6573
000a3b 6420
000a3c 6665
000a3d 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a3e 746c
000a3f 0a0d
000a40 3c00
000a41 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a42 4174
000a43 7875
000a44 6f44
000a45 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a46 6f43
000a47 666e
000a48 6769
000a49 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a4a 6964
000a4b 6967
000a4c 6174
000a4d 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a4e 756f
000a4f 7074
000a50 7475
000a51 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000a52 6168
000a53 6e6e
000a54 6c65
000a55 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a56 7475
000a57 6f20
000a58 2066
000a59 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a5a 676e
000a5b 2065
000a5c 2528
000a5d 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a5e 0a0d
000a5f 3c00
000a60 6567
000a61 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a62 7875
000a63 6f44
000a64 7475
000a65 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000a66 666e
000a67 6769
000a68 203e
000a69 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000a6a 6320
000a6b 6e6f
000a6c 6966
000a6d 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000a6e 6172
000a6f 6974
000a70 6e6f
000a71 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000a72 7375
000a73 2065
000a74 6564
000a75 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000a76 6c75
000a77 0d74
000a78 000a
000a79 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000a7a 7465
000a7b 7541
000a7c 4478
000a7d 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000a7e 4374
000a7f 6e6f
000a80 6966
000a81 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a82 2d20
000a83 202d
000a84 4843
000a85 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000a86 2064
000a87 2d2d
000a88 0d20
000a89 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000a8a 673c
000a8b 7465
000a8c 7541
000a8d 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000a8e 756f
000a8f 4374
000a90 6e6f
000a91 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000a92 3e67
000a93 6520
000a94 616e
000a95 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000a96 2065
000a97 2020
000a98 2020
000a99 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000a9a 2020
000a9b 305b
000a9c 2578
000a9d 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000a9e 5d58
000a9f 0a0d
000aa0 3c00
000aa1 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000aa2 4174
000aa3 7875
000aa4 6f44
000aa5 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000aa6 6f43
000aa7 666e
000aa8 6769
000aa9 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000aaa 7473
000aab 7461
000aac 4f65
000aad 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000aae 6576
000aaf 746e
000ab0 2020
000ab1 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000ab2 7830
000ab3 3025
000ab4 5832
000ab5 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000ab6 000a
000ab7 673c
000ab8 7465
000ab9 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000aba 4478
000abb 756f
000abc 4374
000abd 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000abe 6966
000abf 3e67
000ac0 6e20
000ac1 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000ac2 6562
000ac3 4572
000ac4 5376
000ac5 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000ac6 2020
000ac7 2020
000ac8 255b
000ac9 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000aca 3e2d
000acb 3c00
000acc 6567
000acd 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000ace 7875
000acf 6941
000ad0 436e
000ad1 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000ad2 6966
000ad3 3e67
000ad4 6120
000ad5 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000ad6 6f6c
000ad7 2067
000ad8 6e69
000ad9 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000ada 2074
000adb 6863
000adc 6e61
000add 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000ade 206c
000adf 756f
000ae0 2074
000ae1 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000ae2 7220
000ae3 6e61
000ae4 6567
000ae5 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000ae6 6425
000ae7 0d29
000ae8 000a
000ae9 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000aea 7465
000aeb 7541
000aec 4178
000aed 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000aee 6f43
000aef 666e
000af0 6769
000af1 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000af2 6f6e
000af3 6320
000af4 6e6f
000af5 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000af6 7567
000af7 6172
000af8 6974
000af9 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000afa 202c
000afb 7375
000afc 2065
000afd 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000afe 6166
000aff 6c75
000b00 0d74
000b01 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b02 673c
000b03 7465
000b04 7541
000b05 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b06 756f
000b07 4374
000b08 6e6f
000b09 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b0a 3e67
000b0b 6120
000b0c 616e
000b0d 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b0e 2067
000b0f 756f
000b10 7074
000b11 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b12 6320
000b13 6168
000b14 6e6e
000b15 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b16 6f20
000b17 7475
000b18 6f20
000b19 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b1a 6172
000b1b 676e
000b1c 2065
000b1d 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b1e 2964
000b1f 0a0d
000b20 3c00
000b21 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b22 4174
000b23 7875
000b24 6f41
000b25 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b26 6f43
000b27 666e
000b28 6769
000b29 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b2a 6f6e
000b2b 6320
000b2c 6e6f
000b2d 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b2e 7567
000b2f 6172
000b30 6974
000b31 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b32 202c
000b33 7375
000b34 2065
000b35 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b36 6166
000b37 6c75
000b38 0d74
000b39 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b3a 673c
000b3b 7465
000b3c 7542
000b3d 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b3e 7265
000b3f 6f43
000b40 666e
000b41 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b42 203e
000b43 6f6e
000b44 6320
000b45 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b46 6966
000b47 7567
000b48 6172
000b49 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b4a 6e6f
000b4b 202c
000b4c 7375
000b4d 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b4e 6564
000b4f 6166
000b50 6c75
000b51 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000b52 000a
000b53 673c
000b54 7465
000b55 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000b56 7a7a
000b57 7265
000b58 6f43
000b59 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000b5a 6769
000b5b 203e
000b5c 6e65
000b5d 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000b5e 656c
000b5f 2020
000b60 2020
000b61 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000b62 2020
000b63 2020
000b64 2020
000b65 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000b66 305b
000b67 2578
000b68 3230
000b69 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000b6a 0a0d
000b6b 3c00
000b6c 6567
000b6d 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000b6e 7a75
000b6f 657a
000b70 4372
000b71 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000b72 6966
000b73 3e67
000b74 6520
000b75 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000b76 746e
000b77 6f53
000b78 7275
000b79 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000b7a 754e
000b7b 626d
000b7c 7265
000b7d 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000b7e 5b3e
000b7f 6425
000b80 0d5d
000b81 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000b82 673c
000b83 7465
000b84 7542
000b85 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b86 7265
000b87 6f43
000b88 666e
000b89 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b8a 203e
000b8b 7665
000b8c 6e65
000b8d 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000b8e 756f
000b8f 6372
000b90 2065
000b91 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000b92 2020
000b93 2020
000b94 3e3e
000b95 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000b96 6567
000b97 4574
000b98 766e
000b99 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000b9a 7261
000b9b 436d
000b9c 6e6f
000b9d 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000b9e 3e67
000b9f 6e20
000ba0 206f
000ba1 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000ba2 666e
000ba3 6769
000ba4 7275
000ba5 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000ba6 6f69
000ba7 2c6e
000ba8 7520
000ba9 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000baa 6420
000bab 6665
000bac 7561
000bad 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000bae 0a0d
000baf 3c00
000bb0 6567
000bb1 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000bb2 766e
000bb3 6c41
000bb4 7261
000bb5 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000bb6 6e6f
000bb7 6966
000bb8 3e67
000bb9 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000bba 6d73
000bbb 5352
000bbc 4953
000bbd 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000bbe 6576
000bbf 206c
000bc0 2020
000bc1 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000bc2 2020
000bc3 2020
000bc4 255b
000bc5 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000bc6 0a0d
000bc7 3c00
000bc8 6567
000bc9 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000bca 766e
000bcb 6c41
000bcc 7261
000bcd 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000bce 6e6f
000bcf 6966
000bd0 3e67
000bd1 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000bd2 6d73
000bd3 7243
000bd4 6465
000bd5 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000bd6 6142
000bd7 616c
000bd8 636e
000bd9 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000bda 2020
000bdb 2020
000bdc 255b
000bdd 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000bde 0a0d
000bdf 3c00
000be0 6567
000be1 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000be2 766e
000be3 6c41
000be4 7261
000be5 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000be6 6e6f
000be7 6966
000be8 3e67
000be9 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000bea 7461
000beb 6574
000bec 7972
000bed 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000bee 6576
000bef 206c
000bf0 2020
000bf1 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000bf2 2020
000bf3 2020
000bf4 255b
000bf5 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000bf6 0a0d
000bf7 3c00
000bf8 6567
000bf9 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000bfa 766e
000bfb 6c41
000bfc 7261
000bfd 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000bfe 6e6f
000bff 6966
000c00 3e67
000c01 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c02 6d6f
000c03 536d
000c04 6769
000c05 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c06 4c6c
000c07 7665
000c08 6c65
000c09 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c0a 2020
000c0b 2020
000c0c 255b
000c0d 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c0e 0a0d
000c0f 3c00
000c10 6567
000c11 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c12 766e
000c13 6c41
000c14 7261
000c15 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c16 6e6f
000c17 6966
000c18 3e67
000c19 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c1a 6d6f
000c1b 4c6d
000c1c 736f
000c1d 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c1e 6c65
000c1f 7961
000c20 2020
000c21 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c22 2020
000c23 2020
000c24 255b
000c25 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c26 0a0d
000c27 3c00
000c28 6567
000c29 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c2a 766e
000c2b 6c41
000c2c 7261
000c2d 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c2e 6e6f
000c2f 6966
000c30 3e67
000c31 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c32 6d65
000c33 726f
000c34 4d79
000c35 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c36 2020
000c37 2020
000c38 2020
000c39 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c3a 2020
000c3b 2020
000c3c 255b
000c3d 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c3e 0a0d
000c3f 3c00
000c40 6567
000c41 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c42 6174
000c43 7574
000c44 5273
000c45 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c46 726f
000c47 4374
000c48 6e6f
000c49 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c4a 3e67
000c4b 6e20
000c4c 206f
000c4d 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c4e 666e
000c4f 6769
000c50 7275
000c51 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000c52 6f69
000c53 2c6e
000c54 7520
000c55 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000c56 6420
000c57 6665
000c58 7561
000c59 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000c5a 0a0d
000c5b 3c00
000c5c 6567
000c5d 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c5e 6174
000c5f 7574
000c60 5273
000c61 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c62 726f
000c63 4374
000c64 6e6f
000c65 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c66 3e67
000c67 6120
000c68 6363
000c69 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000c6a 2020
000c6b 2020
000c6c 2020
000c6d 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000c6e 7830
000c6f 3025
000c70 5832
000c71 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000c72 000a
000c73 673c
000c74 7465
000c75 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000c76 7461
000c77 7375
000c78 6552
000c79 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000c7a 7472
000c7b 6f43
000c7c 666e
000c7d 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000c7e 203e
000c7f 6e69
000c80 7674
000c81 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000c82 2020
000c83 2020
000c84 2020
000c85 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000c86 5d64
000c87 0a0d
000c88 3c00
000c89 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000c8a 4f74
000c8b 6570
000c8c 6172
000c8d 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000c8e 676e
000c8f 6f43
000c90 666e
000c91 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000c92 203e
000c93 7245
000c94 6f72
000c95 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000c96 6f20
000c97 6570
000c98 6172
000c99 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000c9a 676e
000c9b 6d20
000c9c 646f
000c9d 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000c9e 6e69
000c9f 6176
000ca0 696c
000ca1 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000ca2 305b
000ca3 2578
000ca4 3230
000ca5 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000ca6 0a0d
000ca7 0d00
000ca8 200a
000ca9 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000caa 6564
000cab 2020
000cac 2020
000cad 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000cae 2020
000caf 2020
000cb0 2020
000cb1 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000cb2 3020
000cb3 2578
000cb4 3230
000cb5 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000cb6 0a0d
000cb7 6420
000cb8 7665
000cb9 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000cba 4565
000cbb 616e
000cbc 6c62
000cbd 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000cbe 2020
000cbf 3e20
000cc0 203e
000cc1 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000cc2 3025
000cc3 5832
000cc4 0d00
000cc5 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000cc6 6c61
000cc7 7261
000cc8 456d
000cc9 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000cca 6c62
000ccb 2065
000ccc 2020
000ccd 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000cce 3e3e
000ccf 3020
000cd0 2578
000cd1 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000cd2 0058
000cd3 0a0d
000cd4 7320
000cd5 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000cd6 6f73
000cd7 4572
000cd8 616e
000cd9 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000cda 2065
000cdb 2020
000cdc 3e20
000cdd 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000cde 3c00
000cdf 6573
000ce0 5374
000ce1 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000ce2 6f73
000ce3 4372
000ce4 6e6f
000ce5 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000ce6 3e67
000ce7 4520
000ce8 5252
000ce9 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000cea 6863
000ceb 6e61
000cec 656e
000ced 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000cee 756f
000cef 2074
000cf0 666f
000cf1 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000cf2 6e61
000cf3 6567
000cf4 0a0d
000cf5 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000cf6 6573
000cf7 5374
000cf8 6e65
000cf9 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000cfa 4372
000cfb 6e6f
000cfc 6966
000cfd 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000cfe 4520
000cff 5252
000d00 203a
000d01 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d02 706d
000d03 696c
000d04 676e
000d05 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d06 6574
000d07 6320
000d08 756f
000d09 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d0a 276e
000d0b 2074
000d0c 6562
000d0d 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d0e 7465
000d0f 7420
000d10 206f
000d11 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d12 000a
000d13 0a0d
000d14 7320
000d15 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d16 6c70
000d17 6e69
000d18 5267
000d19 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d1a 2065
000d1b 2020
000d1c 3e20
000d1d 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d1e 7830
000d1f 3025
000d20 5834
000d21 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d22 200a
000d23 6572
000d24 634f
000d25 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d26 7272
000d27 6e65
000d28 6563
000d29 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d2a 2020
000d2b 3e3e
000d2c 3020
000d2d 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d2e 3430
000d2f 0058
000d30 0a0d
000d31 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d32 6d69
000d33 5365
000d34 6174
000d35 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d36 6f48
000d37 7275
000d38 2020
000d39 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d3a 203e
000d3b 7830
000d3c 3025
000d3d 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d3e 0d00
000d3f 200a
000d40 6974
000d41 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d42 7453
000d43 7261
000d44 4d74
000d45 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d46 2020
000d47 2020
000d48 3e3e
000d49 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d4a 2578
000d4b 3230
000d4c 0058
000d4d 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d4e 7420
000d4f 6d69
000d50 5365
000d51 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000d52 4870
000d53 756f
000d54 2072
000d55 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000d56 3e20
000d57 203e
000d58 7830
000d59 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000d5a 5832
000d5b 0d00
000d5c 200a
000d5d 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000d5e 656d
000d5f 7453
000d60 706f
000d61 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000d62 206e
000d63 2020
000d64 2020
000d65 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d66 3020
000d67 2578
000d68 3230
000d69 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000d6a 0a0d
000d6b 6c20
000d6c 776f
000d6d 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000d6e 694c
000d6f 696d
000d70 2074
000d71 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000d72 2020
000d73 3e20
000d74 203e
000d75 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000d76 5b20
000d77 3025
000d78 6c34
000d79 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000d7a 0d00
000d7b 200a
000d7c 6f6c
000d7d 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000d7e 4472
000d7f 6c65
000d80 7961
000d81 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000d82 2020
000d83 2020
000d84 3e3e
000d85 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000d86 2064
000d87 255b
000d88 3230
000d89 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000d8a 0d00
000d8b 200a
000d8c 6f6c
000d8d 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000d8e 4572
000d8f 7478
000d90 6572
000d91 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000d92 2020
000d93 2020
000d94 3e3e
000d95 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000d96 2066
000d97 255b
000d98 3430
000d99 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000d9a 005d
000d9b 0a0d
000d9c 7520
000d9d 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000d9e 7265
000d9f 694c
000da0 696d
000da1 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000da2 2020
000da3 2020
000da4 3e20
000da5 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000da6 6625
000da7 5b20
000da8 3025
000da9 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000daa 5d58
000dab 0d00
000dac 200a
000dad 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000dae 6570
000daf 4472
000db0 6c65
000db1 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000db2 2020
000db3 2020
000db4 2020
000db5 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000db6 2520
000db7 2064
000db8 255b
000db9 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000dba 5d58
000dbb 0d00
000dbc 200a
000dbd 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000dbe 6570
000dbf 4572
000dc0 7478
000dc1 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000dc2 656d
000dc3 2020
000dc4 2020
000dc5 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000dc6 2520
000dc7 2066
000dc8 255b
000dc9 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000dca 586c
000dcb 005d
000dcc 0a0d
000dcd 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000dce 6168
000dcf 6e6e
000dd0 6c65
000dd1 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000dd2 2020
000dd3 2020
000dd4 2020
000dd5 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000dd6 203e
000dd7 255b
000dd8 5d64
000dd9 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000dda 200a
000ddb 6863
000ddc 6e61
000ddd 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000dde 456c
000ddf 616e
000de0 6c62
000de1 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000de2 2020
000de3 3e3e
000de4 3020
000de5 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000de6 3230
000de7 0058
000de8 0a0d
000de9 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000dea 616c
000deb 6d72
000dec 6544
000ded 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000dee 2079
000def 2020
000df0 2020
000df1 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000df2 203e
000df3 6425
000df4 0d00
000df5 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000df6 6573
000df7 4174
000df8 7875
000df9 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000dfa 7475
000dfb 6f43
000dfc 666e
000dfd 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000dfe 203e
000dff 6843
000e00 6e61
000e01 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e02 206c
000e03 7245
000e04 6f72
000e05 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e06 0d21
000e07 000a
000e08 0a0d
000e09 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e0a 7465
000e0b 7541
000e0c 4478
000e0d 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e0e 4374
000e0f 6e6f
000e10 6966
000e11 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e12 6520
000e13 6576
000e14 746e
000e15 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e16 7275
000e17 6563
000e18 754e
000e19 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e1a 7265
000e1b 6920
000e1c 2073
000e1d 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e1e 206f
000e1f 6f6c
000e20 676e
000e21 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e22 6425
000e23 2129
000e24 0d21
000e25 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e26 0a0d
000e27 6320
000e28 6168
000e29 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e2a 6c65
000e2b 2020
000e2c 2020
000e2d 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e2e 2020
000e2f 2020
000e30 3e20
000e31 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e32 255b
000e33 5d64
000e34 0d00
000e35 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e36 6863
000e37 6e61
000e38 656e
000e39 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e3a 616e
000e3b 6c62
000e3c 2065
000e3d 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e3e 2020
000e3f 3e3e
000e40 3020
000e41 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e42 3230
000e43 0058
000e44 0a0d
000e45 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e46 6174
000e47 6574
000e48 6e4f
000e49 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e4a 6e65
000e4b 2074
000e4c 2020
000e4d 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e4e 3e20
000e4f 203e
000e50 7830
000e51 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000e52 5832
000e53 0d00
000e54 200a
000e55 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000e56 6e65
000e57 5374
000e58 756f
000e59 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000e5a 4e65
000e5b 6d75
000e5c 6562
000e5d 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000e5e 3e3e
000e5f 2520
000e60 0064
000e61 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000e62 6520
000e63 6576
000e64 746e
000e65 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e66 7275
000e67 6563
000e68 2020
000e69 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000e6a 2020
000e6b 3e20
000e6c 203e
000e6d 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000e6e 200a
000e6f 6c61
000e70 7261
000e71 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000e72 7665
000e73 6c65
000e74 2020
000e75 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000e76 2020
000e77 3e3e
000e78 2520
000e79 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000e7a 0a0d
000e7b 733c
000e7c 7465
000e7d 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000e7e 4178
000e7f 756f
000e80 4374
000e81 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000e82 6966
000e83 3e67
000e84 4320
000e85 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000e86 6e6e
000e87 6c65
000e88 4520
000e89 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000e8a 726f
000e8b 2121
000e8c 0a0d
000e8d 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000e8e 3c0a
000e8f 6573
000e90 4174
000e91 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000e92 6f41
000e93 7475
000e94 6f43
000e95 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000e96 6769
000e97 203e
000e98 7665
000e99 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000e9a 5374
000e9b 756f
000e9c 6372
000e9d 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000e9e 6d75
000e9f 6562
000ea0 2072
000ea1 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000ea2 7420
000ea3 6f6f
000ea4 6c20
000ea5 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000ea6 2067
000ea7 2528
000ea8 2964
000ea9 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000eaa 0a0d
000eab 0d00
000eac 200a
000ead 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000eae 6576
000eaf 4f6c
000eb0 456e
000eb1 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000eb2 746e
000eb3 2020
000eb4 2020
000eb5 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000eb6 3e3e
000eb7 2520
000eb8 0066
000eb9 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000eba 733c
000ebb 7465
000ebc 7542
000ebd 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000ebe 7265
000ebf 6f43
000ec0 666e
000ec1 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000ec2 203e
000ec3 7665
000ec4 6e65
000ec5 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000ec6 756f
000ec7 6372
000ec8 4e65
000ec9 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000eca 6562
000ecb 2072
000ecc 7369
000ecd 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000ece 6f6f
000ecf 6c20
000ed0 6e6f
000ed1 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000ed2 2528
000ed3 2964
000ed4 2121
000ed5 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000ed6 0d00
000ed7 200a
000ed8 6e65
000ed9 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000eda 656c
000edb 2020
000edc 2020
000edd 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000ede 2020
000edf 2020
000ee0 2020
000ee1 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000ee2 3020
000ee3 2578
000ee4 3230
000ee5 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000ee6 0a0d
000ee7 6520
000ee8 6576
000ee9 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000eea 6f53
000eeb 7275
000eec 6563
000eed 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000eee 2020
000eef 2020
000ef0 3e20
000ef1 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000ef2 0a0d
000ef3 6720
000ef4 6d73
000ef5 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000ef6 4953
000ef7 654c
000ef8 6576
000ef9 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000efa 2020
000efb 2020
000efc 3e3e
000efd 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000efe 2066
000eff 4264
000f00 0d00
000f01 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f02 7367
000f03 436d
000f04 6572
000f05 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f06 4274
000f07 6c61
000f08 6e61
000f09 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f0a 3e20
000f0b 203e
000f0c 6425
000f0d 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f0e 6861
000f0f 0074
000f10 0a0d
000f11 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f12 7461
000f13 6574
000f14 7972
000f15 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f16 6576
000f17 206c
000f18 2020
000f19 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f1a 3e3e
000f1b 2520
000f1c 2066
000f1d 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f1e 746c
000f1f 0073
000f20 0a0d
000f21 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f22 6d6f
000f23 536d
000f24 6769
000f25 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f26 4c6c
000f27 7665
000f28 6c65
000f29 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f2a 3e3e
000f2b 2520
000f2c 2066
000f2d 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f2e 0d00
000f2f 200a
000f30 6f63
000f31 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f32 6f4c
000f33 7473
000f34 6544
000f35 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f36 2079
000f37 2020
000f38 3e20
000f39 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f3a 6425
000f3b 7320
000f3c 6365
000f3d 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f3e 200a
000f3f 656d
000f40 6f6d
000f41 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f42 694d
000f43 206e
000f44 2020
000f45 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f46 2020
000f47 3e20
000f48 203e
000f49 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f4a 4d20
000f4b 2e42
000f4c 0d00
000f4d 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f4e 6361
000f4f 6d63
000f50 2020
000f51 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000f52 3e20
000f53 203e
000f54 6625
000f55 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000f56 0042
000f57 0a0d
000f58 6920
000f59 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000f5a 2076
000f5b 2020
000f5c 2020
000f5d 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f5e 2520
000f5f 2064
000f60 6142
000f61 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000f62 3c00
000f63 616d
000f64 6e69
000f65 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000f66 6567
000f67 5374
000f68 6e65
000f69 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000f6a 4372
000f6b 6e6f
000f6c 6966
000f6d 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000f6e 6425
000f6f 2029
000f70 7265
000f71 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000f72 0d72
000f73 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000f74 453c
000f75 4854
000f76 735f
000f77 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000f78 4e64
000f79 6361
000f7a 3e6b
000f7b 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000f7c 6e65
000f7d 6964
000f7e 676e
000f7f 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000f80 0a0d
000f81 3c00
000f82 5445
000f83 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000f84 6573
000f85 646e
000f86 7453
000f87 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000f88 7375
000f89 6552
000f8a 7571
000f8b 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000f8c 4174
000f8d 6b63
000f8e 203e
000f8f 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000f90 646e
000f91 6e69
000f92 2e67
000f93 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000f94 000a
000f95 453c
000f96 4854
000f97 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000f98 6e65
000f99 5364
000f9a 6174
000f9b 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000f9c 5273
000f9d 7065
000f9e 726f
000f9f 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fa0 646d
000fa1 203e
000fa2 7266
000fa3 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000fa4 4c65
000fa5 6e65
000fa6 7420
000fa7 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000fa8 6c20
000fa9 6e6f
000faa 2067
000fab 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000fac 2064
000fad 7962
000fae 6574
000faf 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fb0 0a0d
000fb1 3c00
000fb2 5445
000fb3 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fb4 6573
000fb5 646e
000fb6 7453
000fb7 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fb8 7375
000fb9 6552
000fba 6f70
000fbb 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
000fbc 6d43
000fbd 3e64
000fbe 6d20
000fbf 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
000fc0 6f6c
000fc1 2063
000fc2 6166
000fc3 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
000fc4 6465
000fc5 2820
000fc6 6425
000fc7 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
000fc8 7479
000fc9 7365
000fca 0d29
000fcb 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
000fcc 453c
000fcd 4854
000fce 735f
000fcf 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fd0 4564
000fd1 6576
000fd2 746e
000fd3 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
000fd4 6f70
000fd5 7472
000fd6 6d43
000fd7 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
000fd8 5720
000fd9 6f72
000fda 676e
000fdb 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
000fdc 6576
000fdd 746e
000fde 7954
000fdf 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
000fe0 3020
000fe1 2578
000fe2 3230
000fe3 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
000fe4 000a
000fe5 453c
000fe6 4854
000fe7 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fe8 6e65
000fe9 4564
000fea 6576
000feb 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
000fec 6552
000fed 6f70
000fee 7472
000fef 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
000ff0 3e64
000ff1 6120
000ff2 6464
000ff3 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
000ff4 6e65
000ff5 4c74
000ff6 676f
000ff7 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
000ff8 7565
000ff9 2865
000ffa 7830
000ffb 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
000ffc 5832
000ffd 252c
000ffe 646c
000fff 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
001000 2578
001001 3230
001002 2c58
001003 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
001004 3025
001005 5832
001006 2029
001007 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001008 6c69
001009 6465
00100a 0a0d
00100b 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00100c 5445
00100d 5f48
00100e 6573
00100f 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001010 7645
001011 6e65
001012 5274
001013 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
001014 726f
001015 4374
001016 646d
001017 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001018 6573
001019 646e
00101a 6e69
00101b 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
00101c 0d2e
00101d 000a
00101e 453c
00101f 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001020 735f
001021 6e65
001022 4364
001023 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001024 6966
001025 4d67
001026 6e61
001027 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001028 4e65
001029 6361
00102a 3e6b
00102b 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
00102c 6e65
00102d 6964
00102e 676e
00102f 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
001030 0a0d
001031 3c00
001032 5445
001033 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001034 6573
001035 646e
001036 6f43
001037 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001038 6769
001039 614d
00103a 616e
00103b 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
00103c 6341
00103d 3e6b
00103e 6620
00103f 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
001040 656d
001041 654c
001042 206e
001043 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
001044 206f
001045 6f6c
001046 676e
001047 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001048 6425
001049 6220
00104a 7479
00104b 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00104c 0d29
00104d 000a
00104e 453c
00104f 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001050 735f
001051 6e65
001052 4364
001053 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001054 6966
001055 4d67
001056 6e61
001057 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001058 4165
001059 6b63
00105a 203e
00105b 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
00105c 6c6c
00105d 636f
00105e 6620
00105f 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001060 656c
001061 2064
001062 2528
001063 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001064 7962
001065 6574
001066 2973
001067 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001068 3c00
001069 5445
00106a 5f48
00106b 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00106c 646e
00106d 6f43
00106e 666e
00106f 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
001070 614d
001071 616e
001072 6567
001073 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
001074 3e6b
001075 7320
001076 6e65
001077 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
001078 676e
001079 2e2e
00107a 0a0d
00107b 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
00107c 5445
00107d 5f48
00107e 6573
00107f 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001080 6144
001081 6174
001082 6552
001083 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
001084 7472
001085 6d43
001086 3e64
001087 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
001088 6f72
001089 676e
00108a 6420
00108b 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
00108c 5461
00108d 7079
00108e 2065
00108f 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
001090 3025
001091 5832
001092 0a0d
001093 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
001094 5445
001095 5f48
001096 6573
001097 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001098 6144
001099 6174
00109a 6552
00109b 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
00109c 7472
00109d 6d43
00109e 3e64
00109f 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010a0 6464
0010a1 6144
0010a2 6174
0010a3 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010a4 5167
0010a5 6575
0010a6 6575
0010a7 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010a8 2578
0010a9 3230
0010aa 2c58
0010ab 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010ac 2c64
0010ad 7525
0010ae 252c
0010af 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010b0 2966
0010b1 6620
0010b2 6961
0010b3 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0010b4 0d64
0010b5 000a
0010b6 453c
0010b7 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0010b8 735f
0010b9 6e65
0010ba 4464
0010bb 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
0010bc 5261
0010bd 7065
0010be 726f
0010bf 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0010c0 646d
0010c1 203e
0010c2 6573
0010c3 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
0010c4 6e69
0010c5 2e67
0010c6 0d2e
0010c7 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
0010c8 453c
0010c9 4854
0010ca 735f
0010cb 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
0010cc 4c64
0010cd 676f
0010ce 614d
0010cf 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0010d0 7570
0010d1 616c
0010d2 6974
0010d3 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
0010d4 6341
0010d5 3e6b
0010d6 7320
0010d7 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
0010d8 6964
0010d9 676e
0010da 2e2e
0010db 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
0010dc 3c00
0010dd 5445
0010de 5f48
0010df 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010e0 646e
0010e1 654e
0010e2 7774
0010e3 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
0010e4 4d6b
0010e5 6961
0010e6 746e
0010e7 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0010e8 6e61
0010e9 6563
0010ea 6341
0010eb 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
0010ec 7320
0010ed 6e65
0010ee 6964
0010ef 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
0010f0 2e2e
0010f1 0a0d
0010f2 3c00
0010f3 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
0010f4 5f48
0010f5 6572
0010f6 6f6d
0010f7 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
0010f8 6544
0010f9 6976
0010fa 6563
0010fb 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
0010fc 746e
0010fd 6f72
0010fe 416c
0010ff 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
001100 203e
001101 6573
001102 646e
001103 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
001104 2e67
001105 0d2e
001106 000a
001107 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001108 4854
001109 635f
00110a 656c
00110b 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
00110c 7544
00110d 6c70
00110e 6369
00110f 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
001110 5265
001111 7165
001112 6575
001113 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001114 6d43
001115 3e64
001116 7320
001117 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001118 6964
001119 676e
00111a 2e2e
00111b 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00111c 0d00
00111d 3c0a
00111e 5445
00111f 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
001120 6863
001121 6365
001122 506b
001123 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001124 4c68
001125 676f
001126 203e
001127 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001128 203d
001129 5245
00112a 4f52
00112b 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
00112c 4e49
00112d 4f46
00112e 414d
00112f 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
001130 4e4f
001131 4920
001132 204e
001133 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
001134 4154
001135 4c20
001136 474f
001137 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001138 4555
001139 4555
00113a 3d20
00113b 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
00113c 0a0d
00113d 3c00
00113e 5445
00113f 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001140 6863
001141 6365
001142 506b
001143 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001144 4c68
001145 676f
001146 203e
001147 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001148 6174
001149 6f4c
00114a 2067
00114b 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
00114c 656d
00114d 255b
00114e 646c
00114f 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
001150 6863
001151 255b
001152 5d64
001153 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
001154 6c61
001155 255b
001156 322e
001157 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
001158 0a0d
001159 3c00
00115a 5445
00115b 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00115c 6863
00115d 6365
00115e 506b
00115f 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001160 4c68
001161 676f
001162 203e
001163 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
001164 5f47
001165 706f
001166 6e65
001167 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
001168 656c
001169 2528
00116a 2973
00116b 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
00116c 6961
00116d 656c
00116e 2c64
00116f 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
001170 756f
001171 646c
001172 276e
001173 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
001174 6173
001175 6576
001176 6c20
001177 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
001178 0a0d
001179 3c00
00117a 5445
00117b 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00117c 6863
00117d 6365
00117e 506b
00117f 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001180 4c68
001181 676f
001182 203e
001183 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
001184 5f47
001185 6e69
001186 6573
001187 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
001188 6144
001189 6174
00118a 2928
00118b 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
00118c 6961
00118d 656c
00118e 0d64
00118f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001190 453c
001191 4854
001192 635f
001193 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
001194 6b63
001195 7550
001196 6873
001197 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
001198 3e67
001199 4c20
00119a 474f
00119b 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
00119c 6f6c
00119d 6573
00119e 6946
00119f 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011a0 2928
0011a1 6620
0011a2 6961
0011a3 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011a4 0d64
0011a5 000a
0011a6 453c
0011a7 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011a8 635f
0011a9 6568
0011aa 6b63
0011ab 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011ac 6873
0011ad 6f4c
0011ae 3e67
0011af 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011b0 736e
0011b1 7265
0011b2 6574
0011b3 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
0011b4 6144
0011b5 6174
0011b6 4c20
0011b7 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
0011b8 0a0d
0011b9 0d00
0011ba 3c0a
0011bb 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0011bc 5f48
0011bd 6863
0011be 6365
0011bf 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
0011c0 7375
0011c1 4c68
0011c2 676f
0011c3 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
0011c4 3d3d
0011c5 203d
0011c6 5245
0011c7 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0011c8 2052
0011c9 4e49
0011ca 4f46
0011cb 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0011cc 4954
0011cd 4e4f
0011ce 4920
0011cf 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0011d0 5645
0011d1 4e45
0011d2 2054
0011d3 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
0011d4 2047
0011d5 5551
0011d6 5545
0011d7 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
0011d8 3d3d
0011d9 0d3d
0011da 000a
0011db 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
0011dc 4854
0011dd 635f
0011de 6568
0011df 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
0011e0 7550
0011e1 6873
0011e2 6f4c
0011e3 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
0011e4 4520
0011e5 6576
0011e6 746e
0011e7 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
0011e8 2067
0011e9 6974
0011ea 656d
0011eb 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0011ec 646c
0011ed 2c5d
0011ee 6469
0011ef 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
0011f0 2578
0011f1 3230
0011f2 5d58
0011f3 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
0011f4 6174
0011f5 5b74
0011f6 7830
0011f7 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
0011f8 5832
0011f9 0d5d
0011fa 000a
0011fb 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0011fc 4854
0011fd 635f
0011fe 6568
0011ff 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001200 7550
001201 6873
001202 6f4c
001203 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001204 4920
001205 736e
001206 7265
001207 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001208 2064
001209 7645
00120a 6e65
00120b 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00120c 6f4c
00120d 0d67
00120e 000a
00120f 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
001210 4854
001211 725f
001212 7465
001213 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001214 736e
001215 696d
001216 3e74
001217 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001218 6361
001219 656b
00121a 2074
00121b 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
00121c 2578
00121d 3230
00121e 5d58
00121f 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
001220 7078
001221 7269
001222 6465
001223 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
001224 3c00
001225 5445
001226 5f48
001227 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001228 7274
001229 6e61
00122a 6d73
00122b 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
00122c 203e
00122d 7075
00122e 6164
00122f 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
001230 6c20
001231 676f
001232 6144
001233 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
001234 7420
001235 6d69
001236 6f65
001237 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001238 0a0d
001239 3c00
00123a 5445
00123b 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00123c 6572
00123d 7274
00123e 6e61
00123f 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
001240 7469
001241 203e
001242 7075
001243 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
001244 6574
001245 6c20
001246 676f
001247 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001248 6e65
001249 2074
00124a 6974
00124b 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
00124c 756f
00124d 0d74
00124e 000a
00124f 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
001250 4854
001251 725f
001252 7465
001253 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001254 736e
001255 696d
001256 3e74
001257 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
001258 6d6f
001259 4c6d
00125a 736f
00125b 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
00125c 6d69
00125d 7265
00125e 3d20
00125f 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
001260 646c
001261 2528
001262 586c
001263 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
001264 000a
001265 453c
001266 4854
001267 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
001268 7465
001269 6172
00126a 736e
00126b 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
00126c 3e74
00126d 4c20
00126e 736f
00126f 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
001270 6d69
001271 7265
001272 7420
001273 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
001274 2065
001275 656c
001276 7466
001277 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
001278 2520
001279 646c
00127a 2528
00127b 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
00127c 0d29
00127d 000a
00127e 0a0d
00127f 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
001280 4854
001281 725f
001282 7465
001283 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001284 736e
001285 696d
001286 3e74
001287 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
001288 522d
001289 7465
00128a 6172
00128b 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
00128c 696d
00128d 7474
00128e 6e69
00128f 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
001290 202d
001291 305b
001292 2578
001293 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001294 5d58
001295 0a0d
001296 3c00
001297 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001298 5f48
001299 7270
00129a 636f
00129b 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00129c 5073
00129d 6361
00129e 656b
00129f 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012a0 7320
0012a1 6174
0012a2 7574
0012a3 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012a4 6572
0012a5 7571
0012a6 7365
0012a7 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012a8 6e69
0012a9 6176
0012aa 696c
0012ab 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012ac 656c
0012ad 676e
0012ae 6874
0012af 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012b0 6425
0012b1 0d29
0012b2 000a
0012b3 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
0012b4 4854
0012b5 705f
0012b6 6f72
0012b7 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0012b8 7373
0012b9 6150
0012ba 6b63
0012bb 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0012bc 203e
0012bd 6170
0012be 6c79
0012bf 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
0012c0 2064
0012c1 616d
0012c2 6c6c
0012c3 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
0012c4 2928
0012c5 6620
0012c6 6961
0012c7 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0012c8 0d64
0012c9 000a
0012ca 453c
0012cb 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0012cc 705f
0012cd 6f72
0012ce 6563
0012cf 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
0012d0 6150
0012d1 6b63
0012d2 7465
0012d3 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
0012d4 7473
0012d5 7461
0012d6 7375
0012d7 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
0012d8 7571
0012d9 7365
0012da 5074
0012db 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
0012dc 6573
0012dd 2872
0012de 2029
0012df 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
0012e0 6c69
0012e1 6465
0012e2 0a0d
0012e3 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
0012e4 2d0a
0012e5 732d
0012e6 6174
0012e7 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
0012e8 5273
0012e9 7165
0012ea 6575
0012eb 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
0012ec 6150
0012ed 7372
0012ee 7265
0012ef 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0012f0 4320
0012f1 444d
0012f2 5b20
0012f3 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0012f4 3025
0012f5 5832
0012f6 0d5d
0012f7 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0012f8 6361
0012f9 6563
0012fa 7373
0012fb 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
0012fc 6874
0012fd 646f
0012fe 2020
0012ff 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
001300 305b
001301 2578
001302 3230
001303 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001304 0a0d
001305 6900
001306 746e
001307 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001308 6176
001309 206c
00130a 2020
00130b 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
00130c 2020
00130d 5b20
00130e 7830
00130f 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
001310 5834
001311 205d
001312 203d
001313 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
001314 0a0d
001315 7300
001316 6174
001317 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001318 4c73
001319 7369
00131a 2074
00131b 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
00131c 2020
00131d 7c20
00131e 2500
00131f 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
001320 7c58
001321 0d00
001322 2d0a
001323 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
001324 2e2e
001325 6f44
001326 656e
001327 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001328 2d20
001329 0d2d
00132a 000a
00132b 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
00132c 4854
00132d 705f
00132e 6f72
00132f 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001330 7373
001331 6150
001332 6b63
001333 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001334 203e
001335 7473
001336 7461
001337 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001338 7220
001339 7065
00133a 726f
00133b 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
00133c 6e69
00133d 6176
00133e 696c
00133f 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001340 656c
001341 676e
001342 6874
001343 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001344 6425
001345 0d29
001346 000a
001347 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001348 2d2d
001349 7473
00134a 7461
00134b 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
00134c 6552
00134d 6f70
00134e 7472
00134f 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
001350 7372
001351 7265
001352 2d2d
001353 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
001354 4b43
001355 5b20
001356 7830
001357 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
001358 5832
001359 0d5d
00135a 000a
00135b 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
00135c 7869
00135d 6954
00135e 656d
00135f 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
001360 2020
001361 2020
001362 2020
001363 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
001364 2578
001365 3230
001366 5d58
001367 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
001368 2578
001369 3230
00136a 5d58
00136b 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
00136c 2578
00136d 3230
00136e 5d58
00136f 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
001370 2578
001371 3230
001372 5d58
001373 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
001374 3c00
001375 5445
001376 5f48
001377 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001378 636f
001379 7365
00137a 5073
00137b 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
00137c 656b
00137d 3e74
00137e 6520
00137f 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
001380 746e
001381 7220
001382 7065
001383 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
001384 2074
001385 6e69
001386 6176
001387 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
001388 2064
001389 656c
00138a 676e
00138b 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
00138c 2820
00138d 6425
00138e 0d29
00138f 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
001390 0a0d
001391 2d2d
001392 7665
001393 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
001394 5274
001395 7065
001396 726f
001397 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
001398 7261
001399 6573
00139a 2d72
00139b 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
00139c 4341
00139d 204b
00139e 305b
00139f 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013a0 3230
0013a1 5d58
0013a2 0a0d
0013a3 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013a4 5445
0013a5 5f48
0013a6 7270
0013a7 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013a8 7365
0013a9 5073
0013aa 6361
0013ab 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013ac 3e74
0013ad 6720
0013ae 746f
0013af 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013b0 6576
0013b1 746e
0013b2 6c20
0013b3 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
0013b4 6120
0013b5 6b63
0013b6 0a0d
0013b7 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
0013b8 6f6c
0013b9 5267
0013ba 7065
0013bb 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0013bc 3e74
0013bd 4c20
0013be 474f
0013bf 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
0013c0 6570
0013c1 466e
0013c2 6c69
0013c3 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
0013c4 7325
0013c5 2029
0013c6 6166
0013c7 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0013c8 6465
0013c9 0a0d
0013ca 3c00
0013cb 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0013cc 5f47
0013cd 6572
0013ce 6461
0013cf 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0013d0 6174
0013d1 203e
0013d2 4f4c
0013d3 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0013d4 6573
0013d5 4c74
0013d6 7361
0013d7 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
0013d8 6e65
0013d9 2864
0013da 2029
0013db 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
0013dc 6c69
0013dd 6465
0013de 0a0d
0013df 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0013e0 4f4c
0013e1 5f47
0013e2 6572
0013e3 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0013e4 6144
0013e5 6174
0013e6 203e
0013e7 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
0013e8 5f47
0013e9 6573
0013ea 4c74
0013eb 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
0013ec 5374
0013ed 6e65
0013ee 2864
0013ef 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
0013f0 252c
0013f1 646c
0013f2 0d29
0013f3 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
0013f4 6c3c
0013f5 676f
0013f6 6552
0013f7 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0013f8 7472
0013f9 203e
0013fa 4f4c
0013fb 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0013fc 6c63
0013fd 736f
0013fe 4665
0013ff 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
001400 2865
001401 7325
001402 2029
001403 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
001404 6c69
001405 6465
001406 0a0d
001407 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001408 5445
001409 5f48
00140a 7270
00140b 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00140c 7365
00140d 5073
00140e 6361
00140f 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001410 3e74
001411 4320
001412 6e6f
001413 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
001414 2067
001415 614d
001416 616e
001417 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001418 0a0d
001419 3c00
00141a 5445
00141b 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00141c 7270
00141d 636f
00141e 7365
00141f 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001420 6361
001421 656b
001422 3e74
001423 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
001424 6e6f
001425 6966
001426 7567
001427 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001428 6974
001429 6e6f
00142a 6d20
00142b 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
00142c 6761
00142d 6d65
00142e 6e65
00142f 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
001430 6e69
001431 6176
001432 696c
001433 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001434 656c
001435 676e
001436 6874
001437 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001438 6425
001439 0d29
00143a 000a
00143b 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00143c 4854
00143d 705f
00143e 6f72
00143f 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001440 7373
001441 6150
001442 6b63
001443 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001444 203e
001445 6170
001446 6c79
001447 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001448 2064
001449 616d
00144a 6c6c
00144b 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00144c 2528
00144d 2964
00144e 6620
00144f 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
001450 656c
001451 0d64
001452 000a
001453 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001454 4854
001455 705f
001456 6f72
001457 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001458 7373
001459 6150
00145a 6b63
00145b 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00145c 203e
00145d 6f63
00145e 666e
00145f 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001460 614d
001461 616e
001462 6567
001463 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
001464 7372
001465 7265
001466 2928
001467 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
001468 6961
001469 656c
00146a 0d64
00146b 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00146c 0a0d
00146d 2d2d
00146e 6f63
00146f 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
001470 6769
001471 614d
001472 616e
001473 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001474 6150
001475 7372
001476 7265
001477 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
001478 4320
001479 444d
00147a 5b20
00147b 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
00147c 3025
00147d 5832
00147e 0d5d
00147f 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001480 6361
001481 6463
001482 2020
001483 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
001484 2020
001485 2020
001486 2020
001487 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001488 305b
001489 2578
00148a 3230
00148b 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00148c 0a0d
00148d 6300
00148e 666e
00148f 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
001490 2020
001491 2020
001492 2020
001493 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001494 2020
001495 5b20
001496 7830
001497 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
001498 5832
001499 0d5d
00149a 000a
00149b 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
00149c 4854
00149d 705f
00149e 6f72
00149f 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014a0 7373
0014a1 6150
0014a2 6b63
0014a3 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014a4 203e
0014a5 6567
0014a6 4374
0014a7 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014a8 6966
0014a9 4c67
0014aa 6e65
0014ab 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014ac 6620
0014ad 6961
0014ae 656c
0014af 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014b0 000a
0014b1 453c
0014b2 4854
0014b3 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0014b4 6f72
0014b5 6563
0014b6 7373
0014b7 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0014b8 6b63
0014b9 7465
0014ba 203e
0014bb 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
0014bc 6766
0014bd 6452
0014be 6d20
0014bf 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
0014c0 6f6c
0014c1 2863
0014c2 2029
0014c3 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
0014c4 6c69
0014c5 6465
0014c6 0a0d
0014c7 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0014c8 5445
0014c9 5f48
0014ca 7270
0014cb 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0014cc 7365
0014cd 5073
0014ce 6361
0014cf 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0014d0 3e74
0014d1 6320
0014d2 6e6f
0014d3 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
0014d4 5267
0014d5 6165
0014d6 2864
0014d7 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
0014d8 6166
0014d9 6c69
0014da 6465
0014db 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0014dc 3c00
0014dd 5445
0014de 5f48
0014df 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0014e0 636f
0014e1 7365
0014e2 5073
0014e3 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0014e4 656b
0014e5 3e74
0014e6 5220
0014e7 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
0014e8 4d43
0014e9 2044
0014ea 203a
0014eb 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
0014ec 5f48
0014ed 6573
0014ee 646e
0014ef 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
0014f0 666e
0014f1 6769
0014f2 614d
0014f3 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
0014f4 6567
0014f5 6341
0014f6 286b
0014f7 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
0014f8 6166
0014f9 6c69
0014fa 6465
0014fb 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0014fc 3c00
0014fd 5445
0014fe 5f48
0014ff 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001500 636f
001501 7365
001502 5073
001503 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001504 656b
001505 3e74
001506 6320
001507 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001508 5767
001509 2072
00150a 616d
00150b 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
00150c 636f
00150d 2928
00150e 6620
00150f 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
001510 656c
001511 0d64
001512 000a
001513 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001514 4854
001515 705f
001516 6f72
001517 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001518 7373
001519 6150
00151a 6b63
00151b 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00151c 203e
00151d 6f63
00151e 666e
00151f 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001520 7257
001521 7469
001522 2865
001523 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
001524 6166
001525 6c69
001526 6465
001527 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001528 5700
001529 5241
00152a 204e
00152b 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
00152c 453c
00152d 4854
00152e 705f
00152f 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001530 6563
001531 7373
001532 6150
001533 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001534 7465
001535 203e
001536 5257
001537 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001538 444d
001539 3a20
00153a 4520
00153b 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
00153c 735f
00153d 6e65
00153e 4364
00153f 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001540 6966
001541 4d67
001542 6e61
001543 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001544 4165
001545 6b63
001546 2928
001547 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001548 6961
001549 656c
00154a 0d64
00154b 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00154c 453c
00154d 4854
00154e 705f
00154f 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001550 6563
001551 7373
001552 6150
001553 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001554 7465
001555 203e
001556 6f63
001557 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
001558 6769
001559 6f43
00155a 666e
00155b 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
00155c 286d
00155d 2029
00155e 6166
00155f 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001560 6465
001561 0a0d
001562 3c00
001563 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
001564 5f48
001565 7270
001566 636f
001567 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001568 5073
001569 6361
00156a 656b
00156b 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00156c 7520
00156d 6b6e
00156e 6f6e
00156f 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
001570 7420
001571 7079
001572 2065
001573 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
001574 2072
001575 6f63
001576 666e
001577 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001578 3e2d
001579 6361
00157a 6463
00157b 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
00157c 7830
00157d 3025
00157e 5832
00157f 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001580 000a
001581 453c
001582 4854
001583 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001584 6f72
001585 6563
001586 7373
001587 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001588 6b63
001589 7465
00158a 203e
00158b 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
00158c 6174
00158d 7220
00158e 7065
00158f 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
001590 2074
001591 6e69
001592 6176
001593 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
001594 2064
001595 656c
001596 676e
001597 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
001598 2820
001599 6425
00159a 0d29
00159b 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
00159c 0a0d
00159d 2d2d
00159e 6164
00159f 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015a0 6552
0015a1 6f70
0015a2 7472
0015a3 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015a4 7372
0015a5 7265
0015a6 2d2d
0015a7 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015a8 4b43
0015a9 5b20
0015aa 7830
0015ab 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015ac 5832
0015ad 0d5d
0015ae 000a
0015af 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015b0 4854
0015b1 705f
0015b2 6f72
0015b3 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0015b4 7373
0015b5 6150
0015b6 6b63
0015b7 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0015b8 203e
0015b9 6f67
0015ba 2074
0015bb 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
0015bc 6174
0015bd 6c20
0015be 676f
0015bf 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
0015c0 6b63
0015c1 0a0d
0015c2 3c00
0015c3 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
0015c4 5f48
0015c5 7270
0015c6 636f
0015c7 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015c8 5073
0015c9 6361
0015ca 656b
0015cb 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015cc 6c20
0015cd 676f
0015ce 6d20
0015cf 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
0015d0 7069
0015d1 6c75
0015d2 7461
0015d3 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
0015d4 206e
0015d5 4328
0015d6 444d
0015d7 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
0015d8 6e69
0015d9 6176
0015da 696c
0015db 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0015dc 656c
0015dd 676e
0015de 6874
0015df 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0015e0 6425
0015e1 0d29
0015e2 000a
0015e3 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
0015e4 4854
0015e5 705f
0015e6 6f72
0015e7 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0015e8 7373
0015e9 6150
0015ea 6b63
0015eb 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0015ec 203e
0015ed 6f6c
0015ee 4d67
0015ef 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
0015f0 7069
0015f1 6c75
0015f2 7461
0015f3 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
0015f4 436e
0015f5 646d
0015f6 6150
0015f7 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
0015f8 7265
0015f9 2928
0015fa 6620
0015fb 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
0015fc 656c
0015fd 0d64
0015fe 000a
0015ff 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001600 2d2d
001601 6f6c
001602 4d67
001603 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001604 7069
001605 6c75
001606 7461
001607 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001608 436e
001609 646d
00160a 6150
00160b 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00160c 7265
00160d 2d2d
00160e 4320
00160f 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
001610 5b20
001611 7830
001612 3025
001613 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001614 0d5d
001615 000a
001616 5374
001617 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001618 7472
001619 2020
00161a 2020
00161b 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
00161c 2020
00161d 2020
00161e 255b
00161f 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
001620 0d5d
001621 000a
001622 5374
001623 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
001624 2070
001625 2020
001626 2020
001627 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001628 2020
001629 2020
00162a 255b
00162b 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00162c 0d5d
00162d 000a
00162e 453c
00162f 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001630 705f
001631 6f72
001632 6563
001633 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001634 6150
001635 6b63
001636 7465
001637 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001638 6573
001639 4c74
00163a 676f
00163b 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
00163c 696e
00163d 7570
00163e 616c
00163f 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
001640 6353
001641 6568
001642 616d
001643 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
001644 6620
001645 6961
001646 656c
001647 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001648 000a
001649 453c
00164a 4854
00164b 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
00164c 6f72
00164d 6563
00164e 7373
00164f 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001650 6b63
001651 7465
001652 203e
001653 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
001654 2067
001655 616d
001656 696e
001657 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
001658 616c
001659 6974
00165a 6e6f
00165b 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
00165c 4341
00165d 294b
00165e 6920
00165f 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
001660 6c61
001661 6469
001662 6c20
001663 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
001664 7467
001665 2068
001666 2528
001667 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
001668 0a0d
001669 0d00
00166a 2d0a
00166b 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
00166c 676f
00166d 614d
00166e 696e
00166f 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
001670 616c
001671 6974
001672 6e6f
001673 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
001674 506b
001675 7261
001676 6573
001677 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
001678 202d
001679 4341
00167a 204b
00167b 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
00167c 2578
00167d 3230
00167e 5d58
00167f 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
001680 7300
001681 6174
001682 7574
001683 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
001684 2020
001685 2020
001686 2020
001687 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001688 5b20
001689 6c25
00168a 5d64
00168b 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
00168c 3c00
00168d 5445
00168e 5f48
00168f 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001690 636f
001691 7365
001692 5073
001693 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001694 656b
001695 3e74
001696 6e20
001697 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
001698 6f77
001699 6b72
00169a 6d20
00169b 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
00169c 746e
00169d 6e65
00169e 6e61
00169f 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016a0 6920
0016a1 766e
0016a2 6c61
0016a3 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016a4 6c20
0016a5 6e65
0016a6 7467
0016a7 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016a8 2528
0016a9 2964
0016aa 0a0d
0016ab 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016ac 5445
0016ad 5f48
0016ae 7270
0016af 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016b0 7365
0016b1 5073
0016b2 6361
0016b3 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0016b4 3e74
0016b5 6e20
0016b6 7465
0016b7 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
0016b8 6b72
0016b9 614d
0016ba 6e69
0016bb 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
0016bc 616e
0016bd 636e
0016be 5065
0016bf 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
0016c0 6573
0016c1 2872
0016c2 2029
0016c3 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
0016c4 6c69
0016c5 6465
0016c6 0a0d
0016c7 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
0016c8 2d0a
0016c9 6e2d
0016ca 7465
0016cb 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
0016cc 6b72
0016cd 614d
0016ce 6e69
0016cf 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
0016d0 616e
0016d1 636e
0016d2 5065
0016d3 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
0016d4 6573
0016d5 2d72
0016d6 202d
0016d7 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
0016d8 2044
0016d9 305b
0016da 2578
0016db 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0016dc 5d58
0016dd 0a0d
0016de 6300
0016df 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
0016e0 2020
0016e1 2020
0016e2 2020
0016e3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016e4 2020
0016e5 2020
0016e6 5b20
0016e7 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
0016e8 3025
0016e9 5832
0016ea 0d5d
0016eb 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0016ec 6164
0016ed 6174
0016ee 654c
0016ef 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
0016f0 2020
0016f1 2020
0016f2 2020
0016f3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016f4 255b
0016f5 5d64
0016f6 0a0d
0016f7 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
0016f8 7461
0016f9 2061
0016fa 2d2d
0016fb 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
0016fc 2020
0016fd 2020
0016fe 2020
0016ff 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
001700 000a
001701 2d2d
001702 2d2d
001703 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
001704 2d2d
001705 0a0d
001706 3c00
001707 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001708 5f48
001709 7270
00170a 636f
00170b 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00170c 5073
00170d 6361
00170e 656b
00170f 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001710 7320
001711 7465
001712 6954
001713 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
001714 7953
001715 636e
001716 6353
001717 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001718 616d
001719 2928
00171a 6620
00171b 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
00171c 656c
00171d 0d64
00171e 000a
00171f 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
001720 4e52
001721 3a20
001722 3c20
001723 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
001724 5f48
001725 7270
001726 636f
001727 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001728 5073
001729 6361
00172a 656b
00172b 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00172c 4e20
00172d 5445
00172e 5f57
00172f 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
001730 454d
001731 535f
001732 4e59
001733 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
001734 203a
001735 5445
001736 5f48
001737 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001738 646e
001739 654e
00173a 7774
00173b 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00173c 4d6b
00173d 6961
00173e 746e
00173f 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001740 6e61
001741 6563
001742 6341
001743 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
001744 2029
001745 6166
001746 6c69
001747 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001748 0a0d
001749 3c00
00174a 5445
00174b 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00174c 7270
00174d 636f
00174e 7365
00174f 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001750 6361
001751 656b
001752 3e74
001753 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
001754 6d65
001755 746f
001756 2065
001757 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
001758 6976
001759 6563
00175a 6320
00175b 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
00175c 7274
00175d 6c6f
00175e 6920
00175f 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
001760 6c61
001761 6469
001762 6c20
001763 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
001764 7467
001765 2068
001766 2528
001767 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
001768 0a0d
001769 3c00
00176a 5445
00176b 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00176c 7270
00176d 636f
00176e 7365
00176f 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001770 6361
001771 656b
001772 3e74
001773 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
001774 6d65
001775 746f
001776 4465
001777 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
001778 6369
001779 4365
00177a 6e6f
00177b 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
00177c 6c6f
00177d 6150
00177e 7372
00177f 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
001780 2928
001781 6620
001782 6961
001783 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001784 0d64
001785 000a
001786 0a0d
001787 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001788 6572
001789 6f6d
00178a 6574
00178b 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
00178c 6976
00178d 6563
00178e 6f43
00178f 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
001790 6f72
001791 506c
001792 7261
001793 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
001794 2d72
001795 202d
001796 4d43
001797 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
001798 305b
001799 2578
00179a 3230
00179b 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00179c 0a0d
00179d 7600
00179e 6c61
00179f 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017a0 2020
0017a1 2020
0017a2 2020
0017a3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017a4 2020
0017a5 5b20
0017a6 6c25
0017a7 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017a8 0a0d
0017a9 3c00
0017aa 5445
0017ab 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017ac 7270
0017ad 636f
0017ae 7365
0017af 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017b0 6361
0017b1 656b
0017b2 3e74
0017b3 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
0017b4 7465
0017b5 6954
0017b6 656d
0017b7 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
0017b8 636e
0017b9 6353
0017ba 6568
0017bb 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
0017bc 2528
0017bd 646c
0017be 2029
0017bf 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
0017c0 6c69
0017c1 6465
0017c2 0a0d
0017c3 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
0017c4 5241
0017c5 204e
0017c6 203a
0017c7 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
0017c8 4854
0017c9 705f
0017ca 6f72
0017cb 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0017cc 7373
0017cd 6150
0017ce 6b63
0017cf 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0017d0 203e
0017d1 4544
0017d2 4356
0017d3 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
0017d4 5f4c
0017d5 554d
0017d6 4554
0017d7 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
0017d8 414c
0017d9 4d52
0017da 3a20
0017db 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
0017dc 4854
0017dd 725f
0017de 6d65
0017df 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
0017e0 4465
0017e1 7665
0017e2 6369
0017e3 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
0017e4 6e6f
0017e5 7274
0017e6 6c6f
0017e7 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
0017e8 286b
0017e9 2029
0017ea 6166
0017eb 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0017ec 6465
0017ed 0a0d
0017ee 3c00
0017ef 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0017f0 5f48
0017f1 7270
0017f2 636f
0017f3 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0017f4 5073
0017f5 6361
0017f6 656b
0017f7 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0017f8 6320
0017f9 656c
0017fa 7261
0017fb 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
0017fc 7369
0017fd 2074
0017fe 4341
0017ff 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
001800 6e69
001801 6176
001802 696c
001803 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001804 656c
001805 676e
001806 6874
001807 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001808 6425
001809 0d29
00180a 000a
00180b 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00180c 4854
00180d 705f
00180e 6f72
00180f 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001810 7373
001811 6150
001812 6b63
001813 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001814 203e
001815 6c63
001816 6165
001817 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001818 7369
001819 5074
00181a 7261
00181b 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
00181c 2872
00181d 2029
00181e 6166
00181f 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001820 6465
001821 0a0d
001822 0d00
001823 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001824 632d
001825 656c
001826 7261
001827 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001828 7473
001829 6150
00182a 7372
00182b 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
00182c 2d2d
00182d 4120
00182e 4b43
00182f 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
001830 7830
001831 3025
001832 5832
001833 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001834 000a
001835 7473
001836 7461
001837 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001838 2020
001839 2020
00183a 2020
00183b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00183c 2020
00183d 305b
00183e 2578
00183f 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001840 5d58
001841 0a0d
001842 3c00
001843 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001844 5f48
001845 7270
001846 636f
001847 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001848 5073
001849 6361
00184a 656b
00184b 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00184c 6320
00184d 656c
00184e 7261
00184f 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
001850 7075
001851 696c
001852 6163
001853 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
001854 7220
001855 7165
001856 6575
001857 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
001858 2820
001859 4341
00185a 294b
00185b 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
00185c 4355
00185d 4543
00185e 5353
00185f 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
001860 0a0d
001861 3c00
001862 5445
001863 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001864 7270
001865 636f
001866 7365
001867 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001868 6361
001869 656b
00186a 3e74
00186b 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
00186c 656c
00186d 7261
00186e 6420
00186f 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
001870 696c
001871 6163
001872 6574
001873 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
001874 7165
001875 6575
001876 7473
001877 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
001878 4341
001879 294b
00187a 4620
00187b 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
00187c 454c
00187d 5b44
00187e 7830
00187f 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
001880 5832
001881 215d
001882 0d21
001883 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
001884 453c
001885 4854
001886 705f
001887 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001888 6563
001889 7373
00188a 6150
00188b 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
00188c 7465
00188d 203e
00188e 6e75
00188f 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
001890 776f
001891 206e
001892 7974
001893 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
001894 6620
001895 726f
001896 6320
001897 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
001898 6c5f
001899 7473
00189a 735f
00189b 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
00189c 633e
00189d 646d
00189e 5b20
00189f 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018a0 3025
0018a1 5832
0018a2 0d5d
0018a3 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018a4 453c
0018a5 4854
0018a6 705f
0018a7 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018a8 6563
0018a9 7373
0018aa 6150
0018ab 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018ac 7465
0018ad 203e
0018ae 6966
0018af 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018b0 6177
0018b1 6572
0018b2 7520
0018b3 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
0018b4 616f
0018b5 2064
0018b6 6168
0018b7 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
0018b8 7427
0018b9 7320
0018ba 7075
0018bb 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
0018bc 7472
0018bd 6465
0018be 7920
0018bf 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
0018c0 0a0d
0018c1 0d00
0018c2 3c0a
0018c3 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0018c4 5f48
0018c5 7270
0018c6 636f
0018c7 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0018c8 5073
0018c9 6361
0018ca 656b
0018cb 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0018cc 6920
0018cd 766e
0018ce 6c61
0018cf 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0018d0 6620
0018d1 6172
0018d2 656d
0018d3 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
0018d4 7079
0018d5 2065
0018d6 2028
0018d7 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
0018d8 5832
0018d9 2920
0018da 2121
0018db 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
0018dc 3c00
0018dd 5445
0018de 5f48
0018df 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
0018e0 6563
0018e1 7669
0018e2 3e65
0018e3 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
0018e4 6c61
0018e5 6f6c
0018e6 2e63
0018e7 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
0018e8 4941
0018e9 454c
0018ea 2e44
0018eb 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
0018ec 000a
0018ed 0a0d
0018ee 0a0d
0018ef 2b2b      	.DB  0xA,0x0,0xD,0xA,0xD,0xA,0x2B,0x2B
0018f0 2b2b
0018f1 2b2b
0018f2 202b
0018f3 6152      	.DB  0x2B,0x2B,0x2B,0x2B,0x2B,0x20,0x52,0x61
0018f4 2077
0018f5 7562
0018f6 6666
0018f7 7265      	.DB  0x77,0x20,0x62,0x75,0x66,0x66,0x65,0x72
0018f8 2b20
0018f9 2b2b
0018fa 2b2b
0018fb 2b2b      	.DB  0x20,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B,0x2B
0018fc 0a0d
0018fd 7e00
0018fe 0d00
0018ff 690a      	.DB  0xD,0xA,0x0,0x7E,0x0,0xD,0xA,0x69
001900 766e
001901 6c61
001902 6469
001903 6c20      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x6C
001904 6e65
001905 7467
001906 2168
001907 0d21      	.DB  0x65,0x6E,0x67,0x74,0x68,0x21,0x21,0xD
001908 000a
001909 453c
00190a 4854
00190b 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
00190c 6365
00190d 6965
00190e 6576
00190f 203e      	.DB  0x65,0x63,0x65,0x69,0x76,0x65,0x3E,0x20
001910 6863
001911 6365
001912 736b
001913 6d75      	.DB  0x63,0x68,0x65,0x63,0x6B,0x73,0x75,0x6D
001914 6520
001915 7272
001916 726f
001917 0a0d      	.DB  0x20,0x65,0x72,0x72,0x6F,0x72,0xD,0xA
001918 3c00
001919 5445
00191a 5f48
00191b 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00191c 646e
00191d 203e
00191e 4157
00191f 4e52      	.DB  0x6E,0x64,0x3E,0x20,0x57,0x41,0x52,0x4E
001920 4e49
001921 2047
001922 203a
001923 6150      	.DB  0x49,0x4E,0x47,0x20,0x3A,0x20,0x50,0x61
001924 6b63
001925 7465
001926 6920
001927 2073      	.DB  0x63,0x6B,0x65,0x74,0x20,0x69,0x73,0x20
001928 6f74
001929 206f
00192a 6f6c
00192b 676e      	.DB  0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67
00192c 2528
00192d 2064
00192e 7962
00192f 6574      	.DB  0x28,0x25,0x64,0x20,0x62,0x79,0x74,0x65
001930 2973
001931 0a0d
001932 3c00
001933 5445      	.DB  0x73,0x29,0xD,0xA,0x0,0x3C,0x45,0x54
001934 5f48
001935 6573
001936 646e
001937 203e      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20
001938 4157
001939 4e52
00193a 4e49
00193b 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
00193c 203a
00193d 5445
00193e 5f48
00193f 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001940 646e
001941 6d20
001942 6c61
001943 6f6c      	.DB  0x6E,0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F
001944 2063
001945 6166
001946 6c69
001947 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001948 2820
001949 6425
00194a 0d29
00194b 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
00194c 453c
00194d 4854
00194e 735f
00194f 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001950 3e64
001951 4520
001952 4854
001953 615f      	.DB  0x64,0x3E,0x20,0x45,0x54,0x48,0x5F,0x61
001954 6464
001955 6157
001956 7469
001957 7551      	.DB  0x64,0x64,0x57,0x61,0x69,0x74,0x51,0x75
001958 7565
001959 2865
00195a 2029
00195b 6166      	.DB  0x65,0x75,0x65,0x28,0x29,0x20,0x66,0x61
00195c 6c69
00195d 6465
00195e 5b20
00195f 6469      	.DB  0x69,0x6C,0x65,0x64,0x20,0x5B,0x69,0x64
001960 303a
001961 2578
001962 3230
001963 5d58      	.DB  0x3A,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001964 0a0d
001965 0d00
001966 2d0a
001967 542d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x54
001968 6172
001969 736e
00196a 696d
00196b 7474      	.DB  0x72,0x61,0x6E,0x73,0x6D,0x69,0x74,0x74
00196c 6e69
00196d 2067
00196e 305b
00196f 2578      	.DB  0x69,0x6E,0x67,0x20,0x5B,0x30,0x78,0x25
001970 3230
001971 5d58
001972 0a0d
001973 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
001974 5445
001975 5f48
001976 7773
001977 7469      	.DB  0x45,0x54,0x48,0x5F,0x73,0x77,0x69,0x74
001978 6863
001979 6f4d
00197a 6564
00197b 203e      	.DB  0x63,0x68,0x4D,0x6F,0x64,0x65,0x3E,0x20
00197c 7773
00197d 7469
00197e 6863
00197f 7420      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x20,0x74
001980 206f
001981 6f43
001982 666e
001983 6769      	.DB  0x6F,0x20,0x43,0x6F,0x6E,0x66,0x69,0x67
001984 6d20
001985 646f
001986 0d65
001987 000a      	.DB  0x20,0x6D,0x6F,0x64,0x65,0xD,0xA,0x0
001988 453c
001989 4854
00198a 735f
00198b 6977      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x77,0x69
00198c 6374
00198d 4d68
00198e 646f
00198f 3e65      	.DB  0x74,0x63,0x68,0x4D,0x6F,0x64,0x65,0x3E
001990 7320
001991 6977
001992 6374
001993 2068      	.DB  0x20,0x73,0x77,0x69,0x74,0x63,0x68,0x20
001994 6f74
001995 4e20
001996 726f
001997 616d      	.DB  0x74,0x6F,0x20,0x4E,0x6F,0x72,0x6D,0x61
001998 206c
001999 6f6d
00199a 6564
00199b 0a0d      	.DB  0x6C,0x20,0x6D,0x6F,0x64,0x65,0xD,0xA
00199c 3c00
00199d 5445
00199e 5f48
00199f 6567      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x67,0x65
0019a0 4374
0019a1 6e6f
0019a2 6966
0019a3 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0019a4 5720
0019a5 6972
0019a6 6574
0019a7 7420      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x74
0019a8 206f
0019a9 6175
0019aa 7472
0019ab 3020      	.DB  0x6F,0x20,0x75,0x61,0x72,0x74,0x20,0x30
0019ac 3a20
0019ad 3c00
0019ae 5445
0019af 5f48      	.DB  0x20,0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F
0019b0 6573
0019b1 4374
0019b2 6e6f
0019b3 6966      	.DB  0x73,0x65,0x74,0x43,0x6F,0x6E,0x66,0x69
0019b4 3e67
0019b5 6d20
0019b6 6c61
0019b7 6f6c      	.DB  0x67,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
0019b8 2863
0019b9 4f43
0019ba 464e
0019bb 525f      	.DB  0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F,0x52
0019bc 4145
0019bd 5f44
0019be 5542
0019bf 4646      	.DB  0x45,0x41,0x44,0x5F,0x42,0x55,0x46,0x46
0019c0 5245
0019c1 2029
0019c2 6166
0019c3 6c69      	.DB  0x45,0x52,0x29,0x20,0x66,0x61,0x69,0x6C
0019c4 6465
0019c5 0a0d
0019c6 3c00
0019c7 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0019c8 5f48
0019c9 6573
0019ca 4374
0019cb 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
0019cc 6966
0019cd 3e67
0019ce 5720
0019cf 6972      	.DB  0x66,0x69,0x67,0x3E,0x20,0x57,0x72,0x69
0019d0 6574
0019d1 7420
0019d2 206f
0019d3 6175      	.DB  0x74,0x65,0x20,0x74,0x6F,0x20,0x75,0x61
0019d4 7472
0019d5 3020
0019d6 3a20
0019d7 3c00      	.DB  0x72,0x74,0x20,0x30,0x20,0x3A,0x0,0x3C
0019d8 5445
0019d9 5f48
0019da 6573
0019db 4374      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x74,0x43
0019dc 6e6f
0019dd 6966
0019de 3e67
0019df 7220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x72
0019e0 6165
0019e1 2064
0019e2 6f63
0019e3 666e      	.DB  0x65,0x61,0x64,0x20,0x63,0x6F,0x6E,0x66
0019e4 6769
0019e5 6620
0019e6 6f72
0019e7 206d      	.DB  0x69,0x67,0x20,0x66,0x72,0x6F,0x6D,0x20
0019e8 5445
0019e9 2048
0019ea 6f6d
0019eb 7564      	.DB  0x45,0x54,0x48,0x20,0x6D,0x6F,0x64,0x75
0019ec 656c
0019ed 6620
0019ee 6961
0019ef 656c      	.DB  0x6C,0x65,0x20,0x66,0x61,0x69,0x6C,0x65
0019f0 0d64
0019f1 000a
0019f2 3025
0019f3 5832      	.DB  0x64,0xD,0xA,0x0,0x25,0x30,0x32,0x58
0019f4 3025
0019f5 5832
0019f6 3025
0019f7 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
0019f8 3025
0019f9 5832
0019fa 3025
0019fb 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
0019fc 3025
0019fd 5832
0019fe 3025
0019ff 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
001a00 3025
001a01 5832
001a02 3025
001a03 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
001a04 3025
001a05 5832
001a06 3025
001a07 5832      	.DB  0x25,0x30,0x32,0x58,0x25,0x30,0x32,0x58
001a08 3025
001a09 5832
001a0a 3c00
001a0b 5445      	.DB  0x25,0x30,0x32,0x58,0x0,0x3C,0x45,0x54
001a0c 5f48
001a0d 6573
001a0e 4374
001a0f 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
001a10 6966
001a11 3e67
001a12 5320
001a13 7465      	.DB  0x66,0x69,0x67,0x3E,0x20,0x53,0x65,0x74
001a14 5320
001a15 7274
001a16 6e69
001a17 2067      	.DB  0x20,0x53,0x74,0x72,0x69,0x6E,0x67,0x20
001a18 255b
001a19 5d73
001a1a 0a0d
001a1b 3c00      	.DB  0x5B,0x25,0x73,0x5D,0xD,0xA,0x0,0x3C
001a1c 5445
001a1d 5f48
001a1e 6573
001a1f 4374      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x74,0x43
001a20 6e6f
001a21 6966
001a22 3e67
001a23 5320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x53
001a24 7465
001a25 6974
001a26 676e
001a27 6d20      	.DB  0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x6D
001a28 6773
001a29 2d20
001a2a 2d2d
001a2b 0a0d      	.DB  0x73,0x67,0x20,0x2D,0x2D,0x2D,0xD,0xA
001a2c 0d00
001a2d 2d0a
001a2e 2d2d
001a2f 0a0d      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0xD,0xA
001a30 3c00
001a31 5445
001a32 5f48
001a33 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001a34 6573
001a35 3e74
001a36 5220
001a37 7365      	.DB  0x73,0x65,0x74,0x3E,0x20,0x52,0x65,0x73
001a38 7465
001a39 6974
001a3a 676e
001a3b 4520      	.DB  0x65,0x74,0x74,0x69,0x6E,0x67,0x20,0x45
001a3c 6874
001a3d 7265
001a3e 656e
001a3f 2074      	.DB  0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x20
001a40 6f4d
001a41 7564
001a42 656c
001a43 202c      	.DB  0x4D,0x6F,0x64,0x75,0x6C,0x65,0x2C,0x20
001a44 6c70
001a45 6165
001a46 6573
001a47 7720      	.DB  0x70,0x6C,0x65,0x61,0x73,0x65,0x20,0x77
001a48 6961
001a49 2e74
001a4a 2e00
001a4b 2e2e      	.DB  0x61,0x69,0x74,0x2E,0x0,0x2E,0x2E,0x2E
001a4c 6f44
001a4d 656e
001a4e 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(2890): warning: .cseg .db misalignment - padding zero byte
001a4f 0000      	.DB  0x44,0x6F,0x6E,0x65,0xD,0xA,0x0
                 _0x140000:
001a50 733c
001a51 6174
001a52 7574
001a53 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a54 7165
001a55 6575
001a56 7473
001a57 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a58 7372
001a59 7265
001a5a 203e
001a5b 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a5c 6c6c
001a5d 636f
001a5e 6620
001a5f 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a60 656c
001a61 0d64
001a62 000a
001a63 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a64 6e6f
001a65 6966
001a66 4d67
001a67 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a68 6761
001a69 5065
001a6a 7261
001a6b 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a6c 3e72
001a6d 0a0d
001a6e 3c00
001a6f 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001a70 666e
001a71 6769
001a72 614d
001a73 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001a74 6567
001a75 6150
001a76 7372
001a77 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001a78 203e
001a79 4552
001a7a 4441
001a7b 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001a7c 0d47
001a7d 000a
001a7e 633c
001a7f 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001a80 6966
001a81 4d67
001a82 6e61
001a83 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001a84 5065
001a85 7261
001a86 6573
001a87 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001a88 5720
001a89 4952
001a8a 4954
001a8b 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001a8c 0a0d
001a8d 3c00
001a8e 6f63
001a8f 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001a90 6769
001a91 614d
001a92 616e
001a93 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001a94 6150
001a95 7372
001a96 7265
001a97 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001a98 6f63
001a99 666e
001a9a 654c
001a9b 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001a9c 203d
001a9d 6425
001a9e 0a0d
001a9f 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001aa0 6f63
001aa1 666e
001aa2 6769
001aa3 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001aa4 616e
001aa5 6567
001aa6 6150
001aa7 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001aa8 7265
001aa9 203e
001aaa 616d
001aab 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001aac 636f
001aad 6620
001aae 6961
001aaf 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001ab0 0d64
001ab1 000a
001ab2 6e3c
001ab3 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ab4 6f77
001ab5 6b72
001ab6 614d
001ab7 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ab8 6574
001ab9 616e
001aba 636e
001abb 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001abc 7261
001abd 6573
001abe 3e72
001abf 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001ac0 6c61
001ac1 6f6c
001ac2 2063
001ac3 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001ac4 6c69
001ac5 6465
001ac6 2820
001ac7 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001ac8 0d29
001ac9 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001aca 673c
001acb 7465
001acc 6f43
001acd 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001ace 6769
001acf 654c
001ad0 3e6e
001ad1 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001ad2 6b6e
001ad3 6f6e
001ad4 6e77
001ad5 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001ad6 6e6f
001ad7 6966
001ad8 7567
001ad9 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001ada 6974
001adb 6e6f
001adc 7420
001add 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001ade 2065
001adf 305b
001ae0 2578
001ae1 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001ae2 5d58
001ae3 0a0d
001ae4 3c00
001ae5 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001ae6 666e
001ae7 6769
001ae8 6552
001ae9 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001aea 203e
001aeb 4f43
001aec 464e
001aed 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001aee 4f52
001aef 4550
001af0 5452
001af1 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001af2 2053
001af3 616d
001af4 6c6c
001af5 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001af6 2031
001af7 6166
001af8 6c69
001af9 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001afa 2820
001afb 6425
001afc 6220
001afd 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001afe 7365
001aff 0d29
001b00 000a
001b01 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b02 6e6f
001b03 6966
001b04 5267
001b05 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b06 3e64
001b07 6720
001b08 7465
001b09 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b0a 706f
001b0b 7265
001b0c 6974
001b0d 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b0e 6f43
001b0f 666e
001b10 6769
001b11 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b12 6620
001b13 6961
001b14 656c
001b15 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b16 000a
001b17 0a0d
001b18 2d2d
001b19 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b1a 4552
001b1b 4441
001b1c 4320
001b1d 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b1e 5f46
001b1f 5250
001b20 504f
001b21 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b22 4954
001b23 5345
001b24 2d20
001b25 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b26 0a0d
001b27 2500
001b28 0d73
001b29 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b2a 6425
001b2b 0a0d
001b2c 3c00
001b2d 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b2e 666e
001b2f 6769
001b30 6552
001b31 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b32 203e
001b33 4f43
001b34 464e
001b35 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b36 4550
001b37 4152
001b38 4554
001b39 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b3a 6c61
001b3b 6f6c
001b3c 3163
001b3d 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b3e 6961
001b3f 656c
001b40 2064
001b41 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b42 2064
001b43 7962
001b44 6574
001b45 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b46 0a0d
001b47 3c00
001b48 6f63
001b49 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b4a 6769
001b4b 6552
001b4c 6461
001b4d 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b4e 6567
001b4f 4f74
001b50 6570
001b51 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b52 6974
001b53 676e
001b54 6f43
001b55 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b56 6769
001b57 2928
001b58 6620
001b59 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b5a 656c
001b5b 0d64
001b5c 000a
001b5d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b5e 2d2d
001b5f 202d
001b60 4552
001b61 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b62 4320
001b63 4e4f
001b64 5f46
001b65 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b66 5245
001b67 5441
001b68 2045
001b69 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b6a 0d2d
001b6b 000a
001b6c 6f6d
001b6d 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b6e 2020
001b6f 2020
001b70 2020
001b71 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001b72 2020
001b73 2020
001b74 305b
001b75 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001b76 3230
001b77 5d58
001b78 0a0d
001b79 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001b7a 7665
001b7b 6369
001b7c 4565
001b7d 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001b7e 6c62
001b7f 2065
001b80 2020
001b81 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001b82 7830
001b83 3025
001b84 5832
001b85 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001b86 000a
001b87 6c61
001b88 7261
001b89 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001b8a 616e
001b8b 6c62
001b8c 2065
001b8d 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001b8e 2020
001b8f 305b
001b90 2578
001b91 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001b92 5d58
001b93 0a0d
001b94 7300
001b95 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001b96 6f73
001b97 4572
001b98 616e
001b99 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001b9a 2065
001b9b 2020
001b9c 0020
001b9d 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001b9e 2578
001b9f 3230
001ba0 5d58
001ba1 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001ba2 6f63
001ba3 666e
001ba4 6769
001ba5 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001ba6 6461
001ba7 203e
001ba8 4f43
001ba9 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001baa 535f
001bab 4e45
001bac 4f53
001bad 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bae 616d
001baf 6c6c
001bb0 636f
001bb1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001bb2 6166
001bb3 6c69
001bb4 6465
001bb5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001bb6 6425
001bb7 6220
001bb8 7479
001bb9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bba 0d29
001bbb 000a
001bbc 633c
001bbd 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bbe 6966
001bbf 5267
001bc0 6165
001bc1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bc2 6720
001bc3 7465
001bc4 6553
001bc5 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001bc6 726f
001bc7 6f43
001bc8 666e
001bc9 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001bca 2928
001bcb 6620
001bcc 6961
001bcd 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001bce 0d64
001bcf 000a
001bd0 0a0d
001bd1 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001bd2 202d
001bd3 4552
001bd4 4441
001bd5 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001bd6 4e4f
001bd7 5f46
001bd8 4553
001bd9 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001bda 524f
001bdb 5b20
001bdc 6425
001bdd 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001bde 2d2d
001bdf 0a0d
001be0 7300
001be1 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001be2 6c70
001be3 6e69
001be4 5267
001be5 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001be6 2065
001be7 2020
001be8 5b20
001be9 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001bea 0d5d
001beb 000a
001bec 6572
001bed 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001bee 7563
001bef 7272
001bf0 6e65
001bf1 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001bf2 2020
001bf3 2020
001bf4 305b
001bf5 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001bf6 3430
001bf7 5d58
001bf8 0a0d
001bf9 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001bfa 6d69
001bfb 5365
001bfc 6174
001bfd 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001bfe 6f48
001bff 7275
001c00 2020
001c01 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c02 6425
001c03 0d5d
001c04 000a
001c05 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c06 656d
001c07 7453
001c08 7261
001c09 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c0a 6e69
001c0b 2020
001c0c 2020
001c0d 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c0e 5d64
001c0f 0a0d
001c10 7400
001c11 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c12 5365
001c13 6f74
001c14 4870
001c15 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c16 2072
001c17 2020
001c18 5b20
001c19 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c1a 0d5d
001c1b 000a
001c1c 6974
001c1d 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c1e 7453
001c1f 706f
001c20 694d
001c21 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c22 2020
001c23 2020
001c24 255b
001c25 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c26 0a0d
001c27 6c00
001c28 776f
001c29 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c2a 694c
001c2b 696d
001c2c 2074
001c2d 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c2e 2020
001c2f 5b20
001c30 6625
001c31 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c32 000a
001c33 6f6c
001c34 6577
001c35 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c36 6c65
001c37 7961
001c38 2020
001c39 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c3a 2020
001c3b 255b
001c3c 5d64
001c3d 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c3e 6c00
001c3f 776f
001c40 7265
001c41 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c42 7274
001c43 6d65
001c44 2065
001c45 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c46 5b20
001c47 6625
001c48 0d5d
001c49 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c4a 7075
001c4b 6570
001c4c 4c72
001c4d 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c4e 7469
001c4f 2020
001c50 2020
001c51 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c52 255b
001c53 5d66
001c54 0a0d
001c55 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c56 7070
001c57 7265
001c58 6544
001c59 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c5a 2079
001c5b 2020
001c5c 2020
001c5d 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c5e 6425
001c5f 0d5d
001c60 000a
001c61 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c62 6570
001c63 4572
001c64 7478
001c65 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c66 656d
001c67 2020
001c68 2020
001c69 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c6a 5d66
001c6b 0a0d
001c6c 3c00
001c6d 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c6e 666e
001c6f 6769
001c70 6552
001c71 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001c72 203e
001c73 4f43
001c74 464e
001c75 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001c76 5855
001c77 4944
001c78 6d20
001c79 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001c7a 6f6c
001c7b 3163
001c7c 6620
001c7d 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001c7e 656c
001c7f 2064
001c80 2528
001c81 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001c82 7962
001c83 6574
001c84 2973
001c85 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001c86 3c00
001c87 6f63
001c88 666e
001c89 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001c8a 6552
001c8b 6461
001c8c 203e
001c8d 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001c8e 4174
001c8f 7875
001c90 6944
001c91 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001c92 6e6f
001c93 6966
001c94 2867
001c95 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001c96 6166
001c97 6c69
001c98 6465
001c99 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001c9a 0d00
001c9b 2d0a
001c9c 2d2d
001c9d 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001c9e 4145
001c9f 2044
001ca0 4f43
001ca1 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001ca2 415f
001ca3 5855
001ca4 4944
001ca5 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001ca6 6425
001ca7 2d5d
001ca8 2d2d
001ca9 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001caa 6300
001cab 6168
001cac 6e6e
001cad 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cae 6e45
001caf 6261
001cb0 656c
001cb1 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001cb2 2020
001cb3 305b
001cb4 2578
001cb5 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001cb6 5d58
001cb7 0a0d
001cb8 6100
001cb9 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cba 6d72
001cbb 6544
001cbc 616c
001cbd 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cbe 2020
001cbf 2020
001cc0 2020
001cc1 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cc2 5d64
001cc3 0a0d
001cc4 3c00
001cc5 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001cc6 666e
001cc7 6769
001cc8 6552
001cc9 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001cca 203e
001ccb 4f43
001ccc 464e
001ccd 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001cce 5855
001ccf 4f44
001cd0 6d20
001cd1 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001cd2 6f6c
001cd3 3163
001cd4 6620
001cd5 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cd6 656c
001cd7 2064
001cd8 2528
001cd9 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cda 7962
001cdb 6574
001cdc 2973
001cdd 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cde 3c00
001cdf 6f63
001ce0 666e
001ce1 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001ce2 6552
001ce3 6461
001ce4 203e
001ce5 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001ce6 4174
001ce7 7875
001ce8 6f44
001ce9 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001cea 6f43
001ceb 666e
001cec 6769
001ced 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001cee 6620
001cef 6961
001cf0 656c
001cf1 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001cf2 000a
001cf3 0a0d
001cf4 2d2d
001cf5 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001cf6 4552
001cf7 4441
001cf8 4320
001cf9 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001cfa 5f46
001cfb 5541
001cfc 4458
001cfd 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001cfe 255b
001cff 5d64
001d00 2d2d
001d01 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d02 000a
001d03 6863
001d04 6e61
001d05 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d06 456c
001d07 616e
001d08 6c62
001d09 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d0a 2020
001d0b 2020
001d0c 305b
001d0d 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d0e 3230
001d0f 5d58
001d10 0a0d
001d11 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d12 6174
001d13 6574
001d14 6e4f
001d15 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d16 6e65
001d17 2074
001d18 2020
001d19 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d1a 5b20
001d1b 6425
001d1c 0d5d
001d1d 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d1e 7665
001d1f 6e65
001d20 5374
001d21 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d22 6372
001d23 4e65
001d24 6d75
001d25 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d26 2072
001d27 255b
001d28 5d64
001d29 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d2a 6500
001d2b 6576
001d2c 746e
001d2d 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d2e 7275
001d2f 6563
001d30 2020
001d31 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d32 2020
001d33 0020
001d34 633c
001d35 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d36 6966
001d37 5267
001d38 6165
001d39 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d3a 4320
001d3b 4e4f
001d3c 5f46
001d3d 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d3e 4158
001d3f 2049
001d40 616d
001d41 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d42 636f
001d43 2031
001d44 6166
001d45 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d46 6465
001d47 2820
001d48 6425
001d49 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d4a 7479
001d4b 7365
001d4c 0d29
001d4d 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d4e 633c
001d4f 6e6f
001d50 6966
001d51 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d52 6165
001d53 3e64
001d54 6720
001d55 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d56 7541
001d57 4178
001d58 6e69
001d59 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d5a 666e
001d5b 6769
001d5c 2928
001d5d 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d5e 6961
001d5f 656c
001d60 0d64
001d61 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d62 0a0d
001d63 2d2d
001d64 202d
001d65 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d66 4441
001d67 4320
001d68 4e4f
001d69 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d6a 5541
001d6b 4158
001d6c 2049
001d6d 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d6e 5d64
001d6f 2d2d
001d70 0d2d
001d71 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001d72 6c61
001d73 7261
001d74 446d
001d75 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001d76 7961
001d77 2020
001d78 2020
001d79 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001d7a 5b20
001d7b 6625
001d7c 0d5d
001d7d 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001d7e 633c
001d7f 6e6f
001d80 6966
001d81 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d82 6165
001d83 3e64
001d84 4320
001d85 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001d86 5f46
001d87 5541
001d88 4158
001d89 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001d8a 616d
001d8b 6c6c
001d8c 636f
001d8d 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001d8e 6166
001d8f 6c69
001d90 6465
001d91 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001d92 6425
001d93 6220
001d94 7479
001d95 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001d96 0d29
001d97 000a
001d98 633c
001d99 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001d9a 6966
001d9b 5267
001d9c 6165
001d9d 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d9e 6720
001d9f 7465
001da0 7541
001da1 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001da2 756f
001da3 4374
001da4 6e6f
001da5 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001da6 2867
001da7 2029
001da8 6166
001da9 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001daa 6465
001dab 0a0d
001dac 0d00
001dad 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dae 2d2d
001daf 5220
001db0 4145
001db1 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001db2 4f43
001db3 464e
001db4 415f
001db5 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001db6 4f41
001db7 5b20
001db8 6425
001db9 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dba 2d2d
001dbb 0a0d
001dbc 6c00
001dbd 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dbe 6c65
001dbf 6e4f
001dc0 7645
001dc1 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001dc2 2074
001dc3 2020
001dc4 2020
001dc5 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001dc6 6625
001dc7 0d5d
001dc8 000a
001dc9 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001dca 6e6f
001dcb 6966
001dcc 5267
001dcd 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001dce 3e64
001dcf 4320
001dd0 4e4f
001dd1 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001dd2 5542
001dd3 5a5a
001dd4 5245
001dd5 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001dd6 6c61
001dd7 6f6c
001dd8 3163
001dd9 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001dda 6961
001ddb 656c
001ddc 2064
001ddd 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001dde 2064
001ddf 7962
001de0 6574
001de1 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001de2 0a0d
001de3 3c00
001de4 6f63
001de5 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001de6 6769
001de7 6552
001de8 6461
001de9 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001dea 6567
001deb 4274
001dec 7a75
001ded 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001dee 4372
001def 6e6f
001df0 6966
001df1 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001df2 2029
001df3 6166
001df4 6c69
001df5 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001df6 0a0d
001df7 0d00
001df8 2d0a
001df9 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001dfa 5220
001dfb 4145
001dfc 2044
001dfd 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001dfe 464e
001dff 425f
001e00 5a55
001e01 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e02 2052
001e03 2d2d
001e04 0d2d
001e05 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e06 6e65
001e07 6261
001e08 656c
001e09 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e0a 2020
001e0b 2020
001e0c 2020
001e0d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e0e 2020
001e0f 305b
001e10 2578
001e11 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e12 5d58
001e13 0a0d
001e14 3c00
001e15 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e16 666e
001e17 6769
001e18 6552
001e19 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e1a 203e
001e1b 4f43
001e1c 464e
001e1d 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e1e 564e
001e1f 4c41
001e20 5241
001e21 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e22 616d
001e23 6c6c
001e24 636f
001e25 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e26 6166
001e27 6c69
001e28 6465
001e29 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e2a 6425
001e2b 6220
001e2c 7479
001e2d 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e2e 0d29
001e2f 000a
001e30 633c
001e31 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e32 6966
001e33 5267
001e34 6165
001e35 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e36 6720
001e37 7465
001e38 6e45
001e39 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e3a 616c
001e3b 6d72
001e3c 6f43
001e3d 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e3e 6769
001e3f 2928
001e40 6620
001e41 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e42 656c
001e43 0d64
001e44 000a
001e45 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e46 2d2d
001e47 202d
001e48 4552
001e49 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e4a 4320
001e4b 4e4f
001e4c 5f46
001e4d 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e4e 4156
001e4f 414c
001e50 4d52
001e51 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e52 2d2d
001e53 0a0d
001e54 6700
001e55 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e56 5352
001e57 4953
001e58 654c
001e59 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e5a 206c
001e5b 2020
001e5c 2020
001e5d 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e5e 6625
001e5f 0d5d
001e60 000a
001e61 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e62 436d
001e63 6572
001e64 6964
001e65 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e66 6c61
001e67 6e61
001e68 6563
001e69 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e6a 255b
001e6b 5d64
001e6c 0a0d
001e6d 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e6e 7461
001e6f 6574
001e70 7972
001e71 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001e72 6576
001e73 206c
001e74 2020
001e75 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001e76 5b20
001e77 6625
001e78 0d5d
001e79 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001e7a 6f63
001e7b 6d6d
001e7c 6953
001e7d 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001e7e 6c61
001e7f 654c
001e80 6576
001e81 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001e82 2020
001e83 255b
001e84 5d66
001e85 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001e86 6300
001e87 6d6f
001e88 4c6d
001e89 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001e8a 4474
001e8b 6c65
001e8c 7961
001e8d 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001e8e 2020
001e8f 5b20
001e90 6425
001e91 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001e92 000a
001e93 656d
001e94 6f6d
001e95 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001e96 694d
001e97 206e
001e98 2020
001e99 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001e9a 2020
001e9b 2020
001e9c 255b
001e9d 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001e9e 0a0d
001e9f 3c00
001ea0 6f63
001ea1 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ea2 6769
001ea3 6552
001ea4 6461
001ea5 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ea6 4f43
001ea7 464e
001ea8 535f
001ea9 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001eaa 5254
001eab 5045
001eac 524f
001ead 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001eae 616d
001eaf 6c6c
001eb0 636f
001eb1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001eb2 6166
001eb3 6c69
001eb4 6465
001eb5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001eb6 6425
001eb7 6220
001eb8 7479
001eb9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001eba 0d29
001ebb 000a
001ebc 633c
001ebd 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ebe 6966
001ebf 5267
001ec0 6165
001ec1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001ec2 6720
001ec3 7465
001ec4 7453
001ec5 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ec6 7375
001ec7 6552
001ec8 6f70
001ec9 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001eca 6f43
001ecb 666e
001ecc 6769
001ecd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001ece 6620
001ecf 6961
001ed0 656c
001ed1 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001ed2 000a
001ed3 0a0d
001ed4 2d2d
001ed5 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001ed6 4552
001ed7 4441
001ed8 4320
001ed9 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001eda 5f46
001edb 5453
001edc 5441
001edd 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001ede 4f50
001edf 5452
001ee0 2d20
001ee1 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001ee2 0a0d
001ee3 6100
001ee4 6363
001ee5 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001ee6 2020
001ee7 2020
001ee8 5b20
001ee9 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001eea 3025
001eeb 5832
001eec 0d5d
001eed 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001eee 6e69
001eef 7674
001ef0 2020
001ef1 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001ef2 2020
001ef3 255b
001ef4 5d64
001ef5 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001ef6 3c00
001ef7 6f63
001ef8 666e
001ef9 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001efa 6552
001efb 6461
001efc 203e
001efd 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001efe 6e6b
001eff 776f
001f00 206e
001f01 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f02 666e
001f03 6769
001f04 7275
001f05 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f06 6f69
001f07 206e
001f08 7974
001f09 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f0a 5b20
001f0b 7830
001f0c 3025
001f0d 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f0e 0d5d
001f0f 000a
001f10 0a0d
001f11 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f12 2d2d
001f13 5720
001f14 4952
001f15 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f16 4320
001f17 4e4f
001f18 4946
001f19 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f1a 6170
001f1b 6b63
001f1c 7465
001f1d 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f1e 6425
001f1f 2d29
001f20 2d2d
001f21 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f22 000a
001f23 0a0d
001f24 2d2d
001f25 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f26 7257
001f27 7469
001f28 2065
001f29 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f2a 464e
001f2b 505f
001f2c 4f52
001f2d 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f2e 5452
001f2f 4549
001f30 2053
001f31 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f32 002d
001f33 633c
001f34 6e6f
001f35 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f36 5767
001f37 6972
001f38 6574
001f39 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f3a 6573
001f3b 5074
001f3c 6f72
001f3d 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f3e 7472
001f3f 6569
001f40 4373
001f41 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f42 6966
001f43 2867
001f44 2029
001f45 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f46 6c69
001f47 6465
001f48 0a0d
001f49 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f4a 2d0a
001f4b 2d2d
001f4c 5720
001f4d 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f4e 6574
001f4f 4320
001f50 4e4f
001f51 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f52 504f
001f53 5245
001f54 5441
001f55 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f56 2d2d
001f57 002d
001f58 633c
001f59 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f5a 6966
001f5b 5767
001f5c 6972
001f5d 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f5e 203e
001f5f 6573
001f60 4f74
001f61 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f62 6172
001f63 6974
001f64 676e
001f65 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f66 666e
001f67 6769
001f68 2928
001f69 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f6a 6961
001f6b 656c
001f6c 0d64
001f6d 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f6e 0a0d
001f6f 2d2d
001f70 202d
001f71 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001f72 7469
001f73 2065
001f74 4f43
001f75 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001f76 535f
001f77 4e45
001f78 4f53
001f79 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001f7a 2528
001f7b 2964
001f7c 2d20
001f7d 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001f7e 3c00
001f7f 6f63
001f80 666e
001f81 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f82 7257
001f83 7469
001f84 3e65
001f85 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001f86 7465
001f87 6553
001f88 736e
001f89 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001f8a 6f43
001f8b 666e
001f8c 6769
001f8d 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001f8e 6620
001f8f 6961
001f90 656c
001f91 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001f92 000a
001f93 0a0d
001f94 2d2d
001f95 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f96 7257
001f97 7469
001f98 2065
001f99 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f9a 464e
001f9b 415f
001f9c 5855
001f9d 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001f9e 2820
001f9f 6425
001fa0 2029
001fa1 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fa2 002d
001fa3 633c
001fa4 6e6f
001fa5 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fa6 5767
001fa7 6972
001fa8 6574
001fa9 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001faa 6573
001fab 4174
001fac 7875
001fad 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fae 436e
001faf 6e6f
001fb0 6966
001fb1 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fb2 2029
001fb3 6166
001fb4 6c69
001fb5 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fb6 0a0d
001fb7 0d00
001fb8 2d0a
001fb9 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fba 5720
001fbb 6972
001fbc 6574
001fbd 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fbe 4e4f
001fbf 5f46
001fc0 5541
001fc1 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001fc2 204f
001fc3 2528
001fc4 2964
001fc5 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001fc6 2d2d
001fc7 3c00
001fc8 6f63
001fc9 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001fca 6769
001fcb 7257
001fcc 7469
001fcd 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001fce 7320
001fcf 7465
001fd0 7541
001fd1 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
001fd2 756f
001fd3 4374
001fd4 6e6f
001fd5 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001fd6 2867
001fd7 2029
001fd8 6166
001fd9 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001fda 6465
001fdb 0a0d
001fdc 0d00
001fdd 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001fde 2d2d
001fdf 5720
001fe0 6972
001fe1 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
001fe2 4320
001fe3 4e4f
001fe4 5f46
001fe5 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001fe6 4158
001fe7 2049
001fe8 2528
001fe9 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
001fea 2d20
001feb 2d2d
001fec 3c00
001fed 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
001fee 666e
001fef 6769
001ff0 7257
001ff1 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
001ff2 3e65
001ff3 7320
001ff4 7465
001ff5 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
001ff6 4178
001ff7 6e69
001ff8 6f43
001ff9 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
001ffa 6769
001ffb 2928
001ffc 6620
001ffd 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001ffe 656c
001fff 0d64
002000 000a
002001 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002002 2d2d
002003 202d
002004 7257
002005 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002006 2065
002007 4f43
002008 464e
002009 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
00200a 5855
00200b 4f41
00200c 2820
00200d 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
00200e 2029
00200f 2d2d
002010 002d
002011 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002012 6e6f
002013 6966
002014 5767
002015 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002016 6574
002017 203e
002018 6573
002019 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
00201a 7875
00201b 6f41
00201c 7475
00201d 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
00201e 666e
00201f 6769
002020 2928
002021 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
002022 6961
002023 656c
002024 0d64
002025 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002026 0a0d
002027 2d2d
002028 202d
002029 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
00202a 7469
00202b 2065
00202c 4f43
00202d 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
00202e 425f
00202f 5a55
002030 455a
002031 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
002032 2d2d
002033 002d
002034 633c
002035 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002036 6966
002037 5767
002038 6972
002039 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
00203a 203e
00203b 6573
00203c 4274
00203d 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
00203e 657a
00203f 4372
002040 6e6f
002041 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
002042 2867
002043 2029
002044 6166
002045 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002046 6465
002047 0a0d
002048 0d00
002049 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00204a 2d2d
00204b 5720
00204c 6972
00204d 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
00204e 4320
00204f 4e4f
002050 5f46
002051 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
002052 4156
002053 414c
002054 4d52
002055 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002056 2d2d
002057 3c00
002058 6f63
002059 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
00205a 6769
00205b 7257
00205c 7469
00205d 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
00205e 7320
00205f 7465
002060 6e45
002061 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
002062 616c
002063 6d72
002064 6f43
002065 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002066 6769
002067 2928
002068 6620
002069 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00206a 656c
00206b 0d64
00206c 000a
00206d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00206e 2d2d
00206f 202d
002070 7257
002071 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002072 2065
002073 4f43
002074 464e
002075 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
002076 4154
002077 5254
002078 5045
002079 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
00207a 2054
00207b 2d2d
00207c 002d
00207d 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
00207e 6e6f
00207f 6966
002080 5767
002081 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002082 6574
002083 203e
002084 6573
002085 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
002086 6174
002087 7574
002088 5273
002089 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
00208a 726f
00208b 4374
00208c 6e6f
00208d 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
00208e 2867
00208f 2029
002090 6166
002091 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002092 6465
002093 0a0d
002094 3c00
002095 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
002096 4c74
002097 676f
002098 614d
002099 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
00209a 7570
00209b 616c
00209c 6574
00209d 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
00209e 6568
00209f 616d
0020a0 203e
0020a1 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020a2 656d
0020a3 7020
0020a4 7265
0020a5 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020a6 2064
0020a7 7265
0020a8 6f72
0020a9 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020aa 7473
0020ab 7261
0020ac 5b74
0020ad 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020ae 5d64
0020af 2d20
0020b0 7320
0020b1 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020b2 5b70
0020b3 6c25
0020b4 5d64
0020b5 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020b6 3c00
0020b7 6573
0020b8 5474
0020b9 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020ba 5365
0020bb 6e79
0020bc 5363
0020bd 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020be 6d65
0020bf 3e61
0020c0 4720
0020c1 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020c2 3020
0020c3 5520
0020c4 696e
0020c5 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020c6 6974
0020c7 656d
0020c8 7320
0020c9 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020ca 706d
0020cb 0a0d
0020cc 3c00
0020cd 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020ce 5474
0020cf 6d69
0020d0 5365
0020d1 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
0020d2 5363
0020d3 6863
0020d4 6d65
0020d5 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
0020d6 5220
0020d7 6365
0020d8 6965
0020d9 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
0020da 2064
0020db 6974
0020dc 656d
0020dd 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
0020de 6e79
0020df 2e63
0020e0 7020
0020e1 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
0020e2 656b
0020e3 2074
0020e4 6c25
0020e5 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
0020e6 000a
0020e7 733c
0020e8 7465
0020e9 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
0020ea 656d
0020eb 7953
0020ec 636e
0020ed 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
0020ee 6568
0020ef 616d
0020f0 203e
0020f1 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
0020f2 5f43
0020f3 6573
0020f4 4274
0020f5 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
0020f6 7261
0020f7 2879
0020f8 6c25
0020f9 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
0020fa 6620
0020fb 6961
0020fc 656c
0020fd 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0020fe 000a
0020ff 733c
002100 7465
002101 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
002102 6574
002103 6c41
002104 7261
002105 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002106 7020
002107 7265
002108 616d
002109 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
00210a 746e
00210b 6d20
00210c 7475
00210d 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
00210e 6c61
00210f 7261
002110 0d6d
002111 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
002112 733c
002113 7465
002114 754d
002115 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002116 6c41
002117 7261
002118 3e6d
002119 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
00211a 766e
00211b 6c61
00211c 6469
00211d 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
00211e 7265
00211f 6f69
002120 2064
002121 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
002122 646c
002123 0d29
002124 000a
002125 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002126 7465
002127 754d
002128 6574
002129 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
00212a 7261
00212b 3e6d
00212c 6d20
00212d 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
00212e 2065
00212f 6c61
002130 7261
002131 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
002132 6f66
002133 2072
002134 6c25
002135 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002136 6573
002137 6f63
002138 646e
002139 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
00213a 3c00
00213b 6573
00213c 4d74
00213d 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
00213e 4165
00213f 616c
002140 6d72
002141 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002142 4c41
002143 5241
002144 5f4d
002145 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002146 6574
002147 2528
002148 646c
002149 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
00214a 6166
00214b 6c69
00214c 6465
00214d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3341): warning: .cseg .db misalignment - padding zero byte
00214e 0000      	.DB  0x0
                 _0x18001D:
00214f 0000
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3343): warning: .cseg .db misalignment - padding zero byte
002150 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
002151 0a0d
002152 0a0d
002153 453c
002154 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
002155 615f
002156 6464
002157 6157
002158 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002159 7551
00215a 7565
00215b 3e65
00215c 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
00215d 5241
00215e 494e
00215f 474e
002160 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
002161 5720
002162 6961
002163 2074
002164 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
002165 7565
002166 2065
002167 5546
002168 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002169 0a0d
00216a 0a0d
00216b 3c00
00216c 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
00216d 5f48
00216e 6461
00216f 5764
002170 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
002171 5174
002172 6575
002173 6575
002174 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002175 616d
002176 6c6c
002177 636f
002178 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
002179 2964
00217a 6620
00217b 6961
00217c 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
00217d 0d64
00217e 000a
00217f 0a0d
002180 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
002181 2020
002182 2020
002183 2020
002184 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002185 2020
002186 2020
002187 2020
002188 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002189 2020
00218a 2020
00218b 2020
00218c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00218d 2020
00218e 2020
00218f 2020
002190 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002191 2020
002192 4120
002193 6464
002194 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
002195 2820
002196 3025
002197 5832
002198 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
002199 6f74
00219a 6520
00219b 6874
00219c 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
00219d 6961
00219e 5174
00219f 6575
0021a0 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021a1 255b
0021a2 5d64
0021a3 0a0d
0021a4 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021a5 200a
0021a6 2020
0021a7 2020
0021a8 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021a9 2020
0021aa 2020
0021ab 2020
0021ac 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021ad 2020
0021ae 2020
0021af 2020
0021b0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b1 2020
0021b2 2020
0021b3 2020
0021b4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b5 2020
0021b6 2020
0021b7 2020
0021b8 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021b9 6f6d
0021ba 6576
0021bb 2064
0021bc 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021bd 3230
0021be 2958
0021bf 7420
0021c0 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021c1 7465
0021c2 5f68
0021c3 6177
0021c4 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021c5 7551
0021c6 7565
0021c7 5b65
0021c8 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021c9 0d5d
0021ca 000a
0021cb 0a0d
0021cc 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021cd 4157
0021ce 4e52
0021cf 4e49
0021d0 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
0021d1 203a
0021d2 5445
0021d3 5f48
0021d4 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
0021d5 6f6d
0021d6 6576
0021d7 6157
0021d8 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
0021d9 7551
0021da 7565
0021db 2865
0021dc 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
0021dd 5832
0021de 2029
0021df 6f6e
0021e0 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
0021e1 6f66
0021e2 6e75
0021e3 2164
0021e4 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
0021e5 0d0a
0021e6 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A0011:
0021e7 0000
0021e8 0000
0021e9 0000
0021ea 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021eb 0000
0021ec 0000
0021ed 0000
0021ee 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ef 0000
0021f0 0000
0021f1 0000
0021f2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021f3 0000
0021f4 0000
0021f5 0000
0021f6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021f7 0000
0021f8 0000
0021f9 0000
0021fa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021fb 0000
0021fc 0000
0021fd 0000
0021fe 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0021ff 0000
002200 0000
002201 0000
002202 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002203 0000
002204 0000
002205 0000
002206 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002207 0000
002208 0000
002209 0000
00220a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00220b 0000
00220c 0000
00220d 0000
00220e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00220f 0000
002210 0000
002211 0000
002212 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002213 0000
002214 0000
002215 0000
002216 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002217 0000
002218 0000
002219 0000
00221a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00221b 0000
00221c 0000
00221d 0000
00221e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00221f 0000
002220 0000
002221 0000
002222 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002223 0000
002224 0000
002225 0000
002226 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002227 0000
002228 0000
002229 0000
00222a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222b 0000
00222c 0000
00222d 0000
00222e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222f 0000
002230 0000
002231 0000
002232 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002233 0000
002234 0000
002235 0000
002236 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002237 0000
002238 0000
002239 0000
00223a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00223b 0000
00223c 0000
00223d 0000
00223e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00223f 0000
002240 0000
002241 0000
002242 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002243 0000
002244 0000
002245 0000
002246 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002247 0000
002248 0000
002249 0000
00224a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00224b 0000
00224c 0000
00224d 0000
00224e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00224f 0000
002250 0000
002251 0000
002252 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002253 0000
002254 0000
002255 0000
002256 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002257 0000
002258 0000
002259 0000
00225a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00225b 0000
00225c 0000
00225d 0000
00225e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00225f 0000
002260 0000
002261 0000
002262 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002263 0000
002264 0000
002265 0000
002266 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002267 0000
002268 0000
002269 0000
00226a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00226b 0000
00226c 0000
00226d 0000
00226e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00226f 0000
002270 0000
002271 0000
002272 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002273 0000
002274 0000
002275 0000
002276 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002277 0000
002278 0000
002279 0000
00227a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00227b 0000
00227c 0000
00227d 0000
00227e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00227f 0000
002280 0000
002281 0000
002282 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002283 0000
002284 0000
002285 0000
002286 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002287 0000
002288 0000
002289 0000
00228a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00228b 0000
00228c 0000
00228d 0000
00228e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00228f 0000
002290 0000
002291 0000
002292 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002293 0000
002294 0000
002295 0000
002296 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002297 0000
002298 0000
002299 0000
00229a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00229b 0000
00229c 0000
00229d 0000
00229e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00229f 0000
0022a0 0000
0022a1 0000
0022a2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022a3 0000
0022a4 0000
0022a5 0000
0022a6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022a7 0000
0022a8 0000
0022a9 0000
0022aa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022ab 0000
0022ac 0000
0022ad 0000
0022ae 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022af 0000
0022b0 0000
0022b1 0000
0022b2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022b3 0000
0022b4 0000
0022b5 0000
0022b6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022b7 0000
0022b8 0000
0022b9 0000
0022ba 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022bb 0000
0022bc 0000
0022bd 0000
0022be 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022bf 0000
0022c0 0000
0022c1 0000
0022c2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022c3 0000
0022c4 0000
0022c5 0000
0022c6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022c7 0000
0022c8 0000
0022c9 0000
0022ca 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022cb 0000
0022cc 0000
0022cd 0000
0022ce 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022cf 0000
0022d0 0000
0022d1 0000
0022d2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022d3 0000
0022d4 0000
0022d5 0000
0022d6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022d7 0000
0022d8 0000
0022d9 0000
0022da 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022db 0000
0022dc 0000
0022dd 0000
0022de 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022df 0000
0022e0 0000
0022e1 0000
0022e2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022e3 0000
0022e4 0000
0022e5 0000
0022e6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0022e7 0000
0022e8 4194
0022e9 0000
0022ea 0000      	.DB  0x0,0x0,0x94,0x41,0x0,0x0,0x0,0x0
                 _0x1C0005:
0022eb 0000
0022ec 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
0022ed ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
0022ee ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3456): warning: .cseg .db misalignment - padding zero byte
0022ef 00ff      	.DB  0xFF
                 _0x1E003A:
0022f0 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
0022f1 753c
0022f2 6470
0022f3 7461
0022f4 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
0022f5 6d6f
0022f6 536d
0022f7 6174
0022f8 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
0022f9 3e73
0022fa 4c20
0022fb 736f
0022fc 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0022fd 6d69
0022fe 7265
0022ff 7420
002300 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
002301 2065
002302 656c
002303 7466
002304 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
002305 2520
002306 646c
002307 2528
002308 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
002309 0d29
00230a 000a
00230b 753c
00230c 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
00230d 7461
00230e 4365
00230f 6d6f
002310 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
002311 6174
002312 7574
002313 3e73
002314 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
002315 7265
002316 6576
002317 2072
002318 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
002319 6e77
00231a 2121
00231b 0d21
00231c 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
00231d 753c
00231e 6470
00231f 7461
002320 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002321 6d6f
002322 536d
002323 6174
002324 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002325 3e73
002326 5320
002327 7265
002328 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
002329 2072
00232a 7055
00232b 2121
00232c 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
00232d 000a
00232e 633c
00232f 6568
002330 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
002331 7250
002332 626f
002333 4165
002334 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
002335 6d72
002336 203e
002337 6573
002338 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
002339 726f
00233a 6320
00233b 6168
00233c 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
00233d 6c65
00233e 6f20
00233f 7475
002340 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
002341 2066
002342 6172
002343 676e
002344 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
002345 2528
002346 2964
002347 0a0d
002348 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
002349 7075
00234a 6164
00234b 6574
00234c 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
00234d 6174
00234e 7453
00234f 7461
002350 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
002351 203e
002352 4241
002353 524f
002354 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
002355 7320
002356 6e65
002357 6f73
002358 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
002359 6863
00235a 6e61
00235b 656e
00235c 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
00235d 756f
00235e 2074
00235f 666f
002360 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
002361 6e61
002362 6567
002363 2820
002364 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
002365 0d29
002366 000a
002367 753c
002368 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
002369 7461
00236a 4465
00236b 6e69
00236c 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
00236d 7461
00236e 7375
00236f 203e
002370 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
002371 6e61
002372 656e
002373 5b6c
002374 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
002375 205d
002376 756f
002377 2074
002378 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
002379 7220
00237a 6e61
00237b 6567
00237c 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
00237d 3c00
00237e 6567
00237f 4474
002380 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
002381 6369
002382 5365
002383 6174
002384 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
002385 203e
002386 7473
002387 7461
002388 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
002389 203d
00238a 305b
00238b 2578
00238c 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
00238d 5d58
00238e 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3499): warning: .cseg .db misalignment - padding zero byte
00238f 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
002390 ffff
002391 ffff
002392 ffff
002393 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002394 ffff
002395 ffff
002396 ffff
002397 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
002398 ffff
002399 ffff
00239a ffff
00239b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00239c ffff
00239d ffff
00239e ffff
00239f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3507): warning: .cseg .db misalignment - padding zero byte
0023a0 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3509): warning: .cseg .db misalignment - padding zero byte
0023a1 0069      	.DB  0x69
                 _0x2200C5:
0023a2 6969      	.DB  0x69,0x69
                 _0x2200CF:
0023a3 6969
0023a4 6969
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3513): warning: .cseg .db misalignment - padding zero byte
0023a5 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
0023a6 ffff
0023a7 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3517): warning: .cseg .db misalignment - padding zero byte
0023a8 00ff      	.DB  0xFF
                 _0x220000:
0023a9 633c
0023aa 6568
0023ab 6b63
0023ac 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
0023ad 7261
0023ae 466d
0023af 6f72
0023b0 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
0023b1 6372
0023b2 203e
0023b3 5347
0023b4 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
0023b5 6f4e
0023b6 2074
0023b7 7573
0023b8 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
0023b9 726f
0023ba 2074
0023bb 6579
0023bc 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
0023bd 305b
0023be 2578
0023bf 3230
0023c0 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0023c1 0a0d
0023c2 3c00
0023c3 6863
0023c4 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0023c5 416b
0023c6 616c
0023c7 6d72
0023c8 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
0023c9 6d6f
0023ca 7253
0023cb 3e63
0023cc 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
0023cd 616c
0023ce 6d72
0023cf 7253
0023d0 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
0023d1 6e75
0023d2 6e6b
0023d3 776f
0023d4 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
0023d5 305b
0023d6 2578
0023d7 3230
0023d8 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0023d9 0a0d
0023da 3c00
0023db 6863
0023dc 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0023dd 536b
0023de 6e65
0023df 4464
0023e0 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
0023e1 6c41
0023e2 7261
0023e3 3e6d
0023e4 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
0023e5 6168
0023e6 6e6e
0023e7 6c65
0023e8 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
0023e9 7475
0023ea 6f20
0023eb 2066
0023ec 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
0023ed 676e
0023ee 2065
0023ef 255b
0023f0 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
0023f1 0a0d
0023f2 3c00
0023f3 6863
0023f4 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0023f5 536b
0023f6 6e65
0023f7 4464
0023f8 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
0023f9 4161
0023fa 616c
0023fb 6d72
0023fc 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
0023fd 7250
0023fe 626f
0023ff 2065
002400 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
002401 6420
002402 7461
002403 4161
002404 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
002405 6d72
002406 305b
002407 2578
002408 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
002409 5d58
00240a 0a0d
00240b 3c00
00240c 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
00240d 5241
00240e 5f4d
00240f 6863
002410 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
002411 4d6b
002412 7475
002413 4565
002414 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
002415 7269
002416 6465
002417 203e
002418 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
002419 6176
00241a 696c
00241b 2064
00241c 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
00241d 6574
00241e 6f4d
00241f 6564
002420 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
002421 6425
002422 0d29
002423 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
002424 5444
002425 3025
002426 6432
002427 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
002428 3230
002429 2d64
00242a 3025
00242b 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
00242c 5400
00242d 254d
00242e 3230
00242f 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
002430 3025
002431 6432
002432 4400
002433 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
002434 6431
002435 2e25
002436 6631
002437 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
002438 2556
002439 6431
00243a 5245
00243b 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
00243c 0042
00243d 5644
00243e 3125
00243f 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
002440 5252
002441 4255
002442 4400
002443 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
002444 6431
002445 5245
002446 4e52
002447 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
002448 5644
002449 3125
00244a 4564
00244b 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
00244c 4853
00244d 4400
00244e 2556
00244f 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
002450 4544
002451 4554
002452 5443
002453 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
002454 0047
002455 4f3c
002456 454c
002457 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
002458 6873
002459 776f
00245a 6553
00245b 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
00245c 726f
00245d 6156
00245e 756c
00245f 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
002460 7320
002461 6e65
002462 6f73
002463 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
002464 6425
002465 2e5d
002466 7473
002467 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
002468 7375
002469 7520
00246a 6b6e
00246b 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
00246c 6e77
00246d 5b20
00246e 7830
00246f 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
002470 5832
002471 0d5d
002472 000a
002473 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
002474 3125
002475 4e64
002476 412f
002477 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
002478 3147
002479 4200
00247a 304c
00247b 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
00247c 314c
00247d 4200
00247e 324c
00247f 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
002480 334c
002481 4200
002482 344c
002483 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
002484 4c4f
002485 4445
002486 735f
002487 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
002488 4977
002489 706e
00248a 7475
00248b 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
00248c 7461
00248d 7375
00248e 203e
00248f 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
002490 3a52
002491 6320
002492 2068
002493 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
002494 756c
002495 2065
002496 756f
002497 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
002498 666f
002499 7220
00249a 6e61
00249b 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
00249c 212e
00249d 0d21
00249e 000a
00249f 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
0024a0 3125
0024a1 2564
0024a2 6431
0024a3 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
0024a4 4c4f
0024a5 4445
0024a6 735f
0024a7 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0024a8 4f77
0024a9 7475
0024aa 7570
0024ab 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
0024ac 6174
0024ad 7574
0024ae 3e73
0024af 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
0024b0 5252
0024b1 203a
0024b2 6863
0024b3 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
0024b4 6c61
0024b5 6575
0024b6 6f20
0024b7 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
0024b8 6f20
0024b9 2066
0024ba 6172
0024bb 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
0024bc 2e65
0024bd 2121
0024be 0a0d
0024bf 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
0024c0 2550
0024c1 6431
0024c2 3125
0024c3 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
0024c4 4353
0024c5 3125
0024c6 0064
0024c7 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
0024c8 3125
0024c9 0064
0024ca 5a42
0024cb 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
0024cc 0064
0024cd 534d
0024ce 3125
0024cf 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
0024d0 4c41
0024d1 3125
0024d2 2564
0024d3 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
0024d4 3125
0024d5 2564
0024d6 6431
0024d7 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
0024d8 2564
0024d9 6431
0024da 3125
0024db 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
0024dc 6431
0024dd 3125
0024de 2564
0024df 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
0024e0 3125
0024e1 2564
0024e2 6431
0024e3 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
0024e4 210a
0024e5 2121
0024e6 2021
0024e7 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
0024e8 4445
0024e9 4520
0024ea 7272
0024eb 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
0024ec 2120
0024ed 2121
0024ee 0d21
0024ef 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
0024f0 6e49
0024f1 7469
0024f2 6169
0024f3 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0024f4 697a
0024f5 676e
0024f6 4f20
0024f7 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
0024f8 2e44
0024f9 202e
0024fa 4f00
0024fb 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
0024fc 000a      	.DB  0xA,0x0
                 _0x260003:
0024fd 3a30
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3607): warning: .cseg .db misalignment - padding zero byte
0024fe 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
0024ff 4600
002500 5f52
002501 4944
002502 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
002503 455f
002504 5252
002505 4600
002506 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
002507 4e49
002508 5f54
002509 5245
00250a 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
00250b 5246
00250c 4e5f
00250d 544f
00250e 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
00250f 4145
002510 5944
002511 4600
002512 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
002513 4f4e
002514 465f
002515 4c49
002516 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
002517 5246
002518 4e5f
002519 5f4f
00251a 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
00251b 4854
00251c 4600
00251d 5f52
00251e 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
00251f 4156
002520 494c
002521 5f44
002522 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
002523 454d
002524 4600
002525 5f52
002526 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
002527 494e
002528 4445
002529 4600
00252a 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
00252b 5845
00252c 5349
00252d 0054
00252e 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
00252f 495f
002530 564e
002531 4c41
002532 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
002533 4f5f
002534 4a42
002535 4345
002536 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
002537 5246
002538 575f
002539 4952
00253a 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
00253b 505f
00253c 4f52
00253d 4554
00253e 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
00253f 4445
002540 4600
002541 5f52
002542 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
002543 4156
002544 494c
002545 5f44
002546 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
002547 5649
002548 0045
002549 5246
00254a 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
00254b 544f
00254c 455f
00254d 414e
00254e 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
00254f 4445
002550 4600
002551 5f52
002552 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
002553 465f
002554 4c49
002555 5345
002556 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
002557 4554
002558 004d
002559 5246
00255a 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
00255b 464b
00255c 5f53
00255d 4241
00255e 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
00255f 4554
002560 0044
002561 5246
002562 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
002563 4d49
002564 4f45
002565 5455
002566 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
002567 5245
002568 3e52
002569 2520
00256a 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
00256b 0a0d
00256c 3c00
00256d 4453
00256e 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
00256f 6972
002570 6574
002571 6144
002572 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002573 203e
002574 4453
002575 4320
002576 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
002577 2064
002578 6f6e
002579 2074
00257a 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
00257b 6461
00257c 0d79
00257d 000a
00257e 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
00257f 5f44
002580 7277
002581 7469
002582 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002583 7461
002584 3e61
002585 6620
002586 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
002587 6573
002588 6b65
002589 2528
00258a 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
00258b 6620
00258c 6961
00258d 656c
00258e 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
00258f 0d21
002590 000a
002591 533c
002592 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
002593 7277
002594 7469
002595 4465
002596 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002597 3e61
002598 6620
002599 775f
00259a 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
00259b 6574
00259c 2928
00259d 6620
00259e 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00259f 656c
0025a0 0d64
0025a1 000a
0025a2 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
0025a3 5f44
0025a4 7277
0025a5 7469
0025a6 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0025a7 7461
0025a8 3e61
0025a9 6120
0025aa 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
0025ab 6175
0025ac 5f6c
0025ad 7277
0025ae 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
0025af 5b65
0025b0 7525
0025b1 205d
0025b2 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
0025b3 6c20
0025b4 6e65
0025b5 255b
0025b6 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
0025b7 0a0d
0025b8 3c00
0025b9 4453
0025ba 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
0025bb 6165
0025bc 4464
0025bd 7461
0025be 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
0025bf 5320
0025c0 2044
0025c1 6143
0025c2 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
0025c3 6e20
0025c4 746f
0025c5 7220
0025c6 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
0025c7 7964
0025c8 0a0d
0025c9 3c00
0025ca 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
0025cb 725f
0025cc 6165
0025cd 4464
0025ce 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0025cf 3e61
0025d0 6620
0025d1 6c5f
0025d2 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
0025d3 6b65
0025d4 2528
0025d5 2975
0025d6 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
0025d7 6961
0025d8 656c
0025d9 2164
0025da 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
0025db 000a
0025dc 533c
0025dd 5f44
0025de 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
0025df 6461
0025e0 6144
0025e1 6174
0025e2 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
0025e3 5f66
0025e4 6572
0025e5 6461
0025e6 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
0025e7 6620
0025e8 6961
0025e9 656c
0025ea 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0025eb 000a
0025ec 533c
0025ed 5f44
0025ee 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
0025ef 7469
0025f0 4465
0025f1 7461
0025f2 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
0025f3 6120
0025f4 7463
0025f5 6175
0025f6 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
0025f7 6572
0025f8 6461
0025f9 255b
0025fa 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
0025fb 2120
0025fc 203d
0025fd 656c
0025fe 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
0025ff 7525
002600 0d5d
002601 000a
002602 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
002603 5f44
002604 6572
002605 6461
002606 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
002607 6f6d
002608 7972
002609 6552
00260a 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
00260b 6e69
00260c 203e
00260d 5f66
00260e 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
00260f 6674
002610 6572
002611 2865
002612 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
002613 2029
002614 7265
002615 6f72
002616 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
002617 0d21
002618 000a
002619 6f4c
00261a 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
00261b 6163
00261c 206c
00261d 7264
00261e 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
00261f 2065
002620 3a30
002621 6d20
002622 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
002623 746e
002624 6465
002625 4520
002626 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
002627 524f
002628 0a0d
002629 4c00
00262a 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
00262b 6369
00262c 6c61
00262d 6420
00262e 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
00262f 6576
002630 3020
002631 203a
002632 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
002633 6e75
002634 6574
002635 2064
002636 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
002637 0a0d
002638 4c00
002639 676f
00263a 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
00263b 6c61
00263c 6420
00263d 6972
00263e 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
00263f 3020
002640 203a
002641 6e75
002642 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
002643 6e75
002644 6574
002645 2064
002646 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
002647 4f52
002648 0d52
002649 000a
00264a 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
00264b 6967
00264c 6163
00264d 206c
00264e 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
00264f 7669
002650 2065
002651 3a30
002652 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
002653 6d6e
002654 756f
002655 746e
002656 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
002657 4f20
002658 0d4b
002659 000a
00265a 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
00265b 5f44
00265c 6572
00265d 6f6d
00265e 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
00265f 3e74
002660 5320
002661 5f44
002662 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
002663 6f6d
002664 6e75
002665 2874
002666 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
002667 6166
002668 6c69
002669 6465
00266a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00266b 3c00
00266c 4453
00266d 725f
00266e 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
00266f 756f
002670 746e
002671 203e
002672 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
002673 6d5f
002674 756f
002675 746e
002676 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
002677 6620
002678 6961
002679 656c
00267a 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00267b 000a
00267c 533c
00267d 5f44
00267e 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
00267f 6165
002680 6574
002681 6946
002682 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002683 203e
002684 4453
002685 4320
002686 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
002687 2064
002688 6f6e
002689 2074
00268a 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
00268b 6461
00268c 0d79
00268d 000a
00268e 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
00268f 7325
002690 3c00
002691 4453
002692 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
002693 6572
002694 7461
002695 4665
002696 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
002697 3e65
002698 6620
002699 6f5f
00269a 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
00269b 286e
00269c 2029
00269d 6166
00269e 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00269f 6465
0026a0 0a0d
0026a1 3c00
0026a2 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
0026a3 635f
0026a4 6572
0026a5 7461
0026a6 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
0026a7 6c69
0026a8 3e65
0026a9 6620
0026aa 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
0026ab 6f6c
0026ac 6573
0026ad 2928
0026ae 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
0026af 6961
0026b0 656c
0026b1 0d64
0026b2 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0026b3 533c
0026b4 5f44
0026b5 706f
0026b6 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
0026b7 6946
0026b8 656c
0026b9 203e
0026ba 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0026bb 4320
0026bc 7261
0026bd 2064
0026be 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
0026bf 2074
0026c0 6572
0026c1 6461
0026c2 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
0026c3 000a
0026c4 533c
0026c5 5f44
0026c6 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
0026c7 6e65
0026c8 6946
0026c9 656c
0026ca 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
0026cb 5f66
0026cc 706f
0026cd 6e65
0026ce 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
0026cf 5b20
0026d0 7325
0026d1 205d
0026d2 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
0026d3 6c69
0026d4 6465
0026d5 0a0d
0026d6 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0026d7 4453
0026d8 635f
0026d9 6f6c
0026da 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
0026db 6946
0026dc 656c
0026dd 203e
0026de 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0026df 4320
0026e0 7261
0026e1 2064
0026e2 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
0026e3 2074
0026e4 6572
0026e5 6461
0026e6 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
0026e7 000a
0026e8 533c
0026e9 5f44
0026ea 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
0026eb 736f
0026ec 4665
0026ed 6c69
0026ee 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
0026ef 6620
0026f0 635f
0026f1 6f6c
0026f2 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
0026f3 2928
0026f4 6620
0026f5 6961
0026f6 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0026f7 0d64
0026f8 000a
0026f9 533c
0026fa 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
0026fb 6e69
0026fc 7469
0026fd 203e
0026fe 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
0026ff 7261
002700 2074
002701 6e69
002702 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
002703 6169
002704 206c
002705 656d
002706 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
002707 7972
002708 6320
002709 7261
00270a 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
00270b 000a
00270c 0a0d
00270d 533c
00270e 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
00270f 6e69
002710 7469
002711 203e
002712 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
002713 6e75
002714 6974
002715 676e
002716 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
002717 2044
002718 6143
002719 6472
00271a 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
00271b 002e
00271c 533c
00271d 5f44
00271e 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
00271f 7469
002720 203e
002721 4453
002722 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
002723 756f
002724 746e
002725 2928
002726 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
002727 6961
002728 656c
002729 0d64
00272a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00272b 0a0d
00272c 533c
00272d 5f44
00272e 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
00272f 7469
002730 203e
002731 6843
002732 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
002733 206b
002734 6143
002735 6472
002736 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
002737 7a69
002738 2e65
002739 2e2e
00273a 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
00273b 4453
00273c 695f
00273d 696e
00273e 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
00273f 5320
002740 5f44
002741 6572
002742 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002743 654d
002744 6f6d
002745 7972
002746 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
002747 616d
002748 6e69
002749 2928
00274a 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
00274b 6961
00274c 656c
00274d 0d64
00274e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00274f 533c
002750 5f44
002751 6e69
002752 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
002753 203e
002754 7246
002755 6565
002756 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
002757 6170
002758 6563
002759 6f20
00275a 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
00275b 6f6c
00275c 6967
00275d 6163
00275e 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
00275f 7264
002760 7669
002761 2065
002762 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
002763 2520
002764 756c
002765 6b20
002766 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
002767 6574
002768 0d73
002769 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
00276a 6164
00276b 6174
00276c 6c2e
00276d 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
00276e 7665
00276f 6e65
002770 2e74
002771 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3768): warning: .cseg .db misalignment - padding zero byte
002772 0067      	.DB  0x67
                 _0x280005:
002773 7265
002774 6f72
002775 2e72
002776 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(3771): warning: .cseg .db misalignment - padding zero byte
002777 0067      	.DB  0x67
                 _0x280006:
002778 0000
002779 0000
00277a 0000
00277b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00277c ffff
00277d ffff
00277e ffff
00277f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
002780 7791
002781 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
002782 77d0
002783 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
002784 4c3c
002785 474f
002786 695f
002787 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
002788 7265
002789 4474
00278a 7461
00278b 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
00278c 4c20
00278d 474f
00278e 675f
00278f 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002790 614c
002791 7473
002792 6e49
002793 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002794 7472
002795 2928
002796 6620
002797 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
002798 656c
002799 0d64
00279a 000a
00279b 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
00279c 474f
00279d 695f
00279e 736e
00279f 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
0027a0 4474
0027a1 7461
0027a2 3e61
0027a3 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
0027a4 5f44
0027a5 7277
0027a6 7469
0027a7 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0027a8 7461
0027a9 2861
0027aa 6c66
0027ab 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
0027ac 2029
0027ad 6166
0027ae 6c69
0027af 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0027b0 0a0d
0027b1 3c00
0027b2 4f4c
0027b3 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0027b4 6e69
0027b5 6573
0027b6 7472
0027b7 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
0027b8 6174
0027b9 203e
0027ba 4453
0027bb 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
0027bc 6972
0027bd 6574
0027be 6144
0027bf 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
0027c0 7428
0027c1 6d69
0027c2 7365
0027c3 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
0027c4 706d
0027c5 2029
0027c6 6166
0027c7 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
0027c8 6465
0027c9 0a0d
0027ca 3c00
0027cb 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0027cc 5f47
0027cd 6e69
0027ce 6573
0027cf 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0027d0 6144
0027d1 6174
0027d2 203e
0027d3 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0027d4 775f
0027d5 6972
0027d6 6574
0027d7 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0027d8 6174
0027d9 6328
0027da 6168
0027db 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
0027dc 6c65
0027dd 2029
0027de 6166
0027df 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
0027e0 6465
0027e1 0a0d
0027e2 3c00
0027e3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0027e4 5f47
0027e5 6e69
0027e6 6573
0027e7 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0027e8 6144
0027e9 6174
0027ea 203e
0027eb 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0027ec 775f
0027ed 6972
0027ee 6574
0027ef 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0027f0 6174
0027f1 7628
0027f2 6c61
0027f3 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
0027f4 2029
0027f5 6166
0027f6 6c69
0027f7 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0027f8 0a0d
0027f9 3c00
0027fa 4f4c
0027fb 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0027fc 6e69
0027fd 6573
0027fe 7472
0027ff 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002800 6174
002801 203e
002802 4f4c
002803 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002804 6573
002805 4c74
002806 7361
002807 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002808 736e
002809 7265
00280a 2874
00280b 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
00280c 2964
00280d 6620
00280e 6961
00280f 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002810 0d64
002811 000a
002812 4c3c
002813 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002814 725f
002815 6165
002816 4464
002817 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002818 3e61
002819 4c20
00281a 474f
00281b 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
00281c 7465
00281d 614c
00281e 7473
00281f 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
002820 6573
002821 7472
002822 2928
002823 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
002824 6961
002825 656c
002826 0d64
002827 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002828 4c3c
002829 474f
00282a 725f
00282b 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
00282c 4464
00282d 7461
00282e 3e61
00282f 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
002830 474f
002831 675f
002832 7465
002833 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
002834 7473
002835 6553
002836 646e
002837 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
002838 6620
002839 6961
00283a 656c
00283b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00283c 000a
00283d 4c3c
00283e 474f
00283f 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
002840 6165
002841 4564
002842 6576
002843 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
002844 203e
002845 616c
002846 7473
002847 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
002848 646e
002849 6c2f
00284a 7361
00284b 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
00284c 736e
00284d 7265
00284e 2074
00284f 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
002850 3e2d
002851 2520
002852 646c
002853 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
002854 646c
002855 0a0d
002856 3c00
002857 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002858 5f47
002859 6572
00285a 6461
00285b 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
00285c 6174
00285d 203e
00285e 6f4c
00285f 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
002860 6d65
002861 7470
002862 2e79
002863 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002864 0d21
002865 000a
002866 443c
002867 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
002868 4755
002869 435f
00286a 656c
00286b 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
00286c 6f4c
00286d 4667
00286e 6c69
00286f 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
002870 4c20
002871 474f
002872 635f
002873 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
002874 7461
002875 4665
002876 6c69
002877 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002878 7325
002879 2029
00287a 6166
00287b 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
00287c 6465
00287d 0a0d
00287e 3c00
00287f 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002880 5f47
002881 6572
002882 6461
002883 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002884 6174
002885 203e
002886 4453
002887 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
002888 6165
002889 4464
00288a 7461
00288b 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
00288c 6c66
00288d 6761
00288e 2029
00288f 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002890 6c69
002891 6465
002892 0a0d
002893 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002894 4f4c
002895 5f47
002896 6572
002897 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002898 6144
002899 6174
00289a 203e
00289b 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
00289c 725f
00289d 6165
00289e 4464
00289f 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0028a0 2861
0028a1 6974
0028a2 656d
0028a3 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
0028a4 6d61
0028a5 2970
0028a6 6620
0028a7 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
0028a8 656c
0028a9 0d64
0028aa 000a
0028ab 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
0028ac 474f
0028ad 725f
0028ae 6165
0028af 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
0028b0 7461
0028b1 3e61
0028b2 5320
0028b3 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
0028b4 6572
0028b5 6461
0028b6 6144
0028b7 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
0028b8 6328
0028b9 6168
0028ba 6e6e
0028bb 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
0028bc 2029
0028bd 6166
0028be 6c69
0028bf 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0028c0 0a0d
0028c1 3c00
0028c2 4f4c
0028c3 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0028c4 6572
0028c5 6461
0028c6 6144
0028c7 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
0028c8 203e
0028c9 4453
0028ca 725f
0028cb 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
0028cc 4464
0028cd 7461
0028ce 2861
0028cf 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
0028d0 756c
0028d1 2965
0028d2 6620
0028d3 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
0028d4 656c
0028d5 0d64
0028d6 000a
0028d7 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
0028d8 474f
0028d9 695f
0028da 736e
0028db 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
0028dc 4574
0028dd 6576
0028de 746e
0028df 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
0028e0 4f4c
0028e1 5f47
0028e2 6567
0028e3 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
0028e4 7361
0028e5 4974
0028e6 736e
0028e7 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
0028e8 2874
0028e9 2029
0028ea 6166
0028eb 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0028ec 6465
0028ed 0a0d
0028ee 3c00
0028ef 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0028f0 5f47
0028f1 6e69
0028f2 6573
0028f3 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0028f4 7645
0028f5 6e65
0028f6 3e74
0028f7 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
0028f8 5f44
0028f9 7277
0028fa 7469
0028fb 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0028fc 7461
0028fd 2861
0028fe 6c66
0028ff 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002900 2029
002901 6166
002902 6c69
002903 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002904 0a0d
002905 3c00
002906 4f4c
002907 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002908 6e69
002909 6573
00290a 7472
00290b 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
00290c 6e65
00290d 3e74
00290e 5320
00290f 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002910 7277
002911 7469
002912 4465
002913 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002914 2861
002915 6974
002916 656d
002917 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002918 6d61
002919 2970
00291a 6620
00291b 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
00291c 656c
00291d 0d64
00291e 000a
00291f 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002920 474f
002921 695f
002922 736e
002923 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002924 4574
002925 6576
002926 746e
002927 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002928 4453
002929 775f
00292a 6972
00292b 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
00292c 6144
00292d 6174
00292e 6928
00292f 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002930 6620
002931 6961
002932 656c
002933 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002934 000a
002935 4c3c
002936 474f
002937 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002938 736e
002939 7265
00293a 4574
00293b 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
00293c 746e
00293d 203e
00293e 4453
00293f 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002940 6972
002941 6574
002942 6144
002943 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002944 7328
002945 6174
002946 7574
002947 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002948 6620
002949 6961
00294a 656c
00294b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00294c 000a
00294d 4c3c
00294e 474f
00294f 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002950 736e
002951 7265
002952 4574
002953 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002954 746e
002955 203e
002956 4f4c
002957 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002958 6573
002959 4c74
00295a 7361
00295b 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
00295c 736e
00295d 7265
00295e 2874
00295f 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002960 2964
002961 6620
002962 6961
002963 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002964 0d64
002965 000a
002966 4c3c
002967 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002968 725f
002969 6165
00296a 4564
00296b 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
00296c 746e
00296d 203e
00296e 4f4c
00296f 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002970 6567
002971 4c74
002972 7361
002973 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002974 736e
002975 7265
002976 2874
002977 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002978 6166
002979 6c69
00297a 6465
00297b 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00297c 3c00
00297d 4f4c
00297e 5f47
00297f 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002980 6461
002981 7645
002982 6e65
002983 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002984 4c20
002985 474f
002986 675f
002987 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002988 614c
002989 7473
00298a 6553
00298b 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
00298c 2928
00298d 6620
00298e 6961
00298f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002990 0d64
002991 000a
002992 4c3c
002993 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002994 725f
002995 6165
002996 4564
002997 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002998 746e
002999 203e
00299a 6f4c
00299b 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
00299c 6d65
00299d 7470
00299e 2e79
00299f 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
0029a0 0d21
0029a1 000a
0029a2 4c3c
0029a3 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0029a4 725f
0029a5 6165
0029a6 4564
0029a7 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
0029a8 746e
0029a9 203e
0029aa 4453
0029ab 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
0029ac 6165
0029ad 4464
0029ae 7461
0029af 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
0029b0 6c66
0029b1 6761
0029b2 2029
0029b3 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
0029b4 6c69
0029b5 6465
0029b6 0a0d
0029b7 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0029b8 4f4c
0029b9 5f47
0029ba 6572
0029bb 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0029bc 7645
0029bd 6e65
0029be 3e74
0029bf 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
0029c0 5f44
0029c1 6572
0029c2 6461
0029c3 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0029c4 6174
0029c5 7428
0029c6 6d69
0029c7 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
0029c8 6174
0029c9 706d
0029ca 2029
0029cb 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
0029cc 6c69
0029cd 6465
0029ce 0a0d
0029cf 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0029d0 4f4c
0029d1 5f47
0029d2 6572
0029d3 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0029d4 7645
0029d5 6e65
0029d6 3e74
0029d7 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
0029d8 5f44
0029d9 6572
0029da 6461
0029db 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0029dc 6174
0029dd 6928
0029de 2964
0029df 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
0029e0 6961
0029e1 656c
0029e2 0d64
0029e3 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0029e4 4c3c
0029e5 474f
0029e6 725f
0029e7 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
0029e8 4564
0029e9 6576
0029ea 746e
0029eb 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
0029ec 4453
0029ed 725f
0029ee 6165
0029ef 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
0029f0 7461
0029f1 2861
0029f2 7473
0029f3 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
0029f4 7375
0029f5 2029
0029f6 6166
0029f7 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0029f8 6465
0029f9 0a0d
0029fa 3c00
0029fb 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029fc 5f47
0029fd 6567
0029fe 4c74
0029ff 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002a00 4974
002a01 736e
002a02 7265
002a03 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002a04 5320
002a05 5f44
002a06 6572
002a07 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002a08 6144
002a09 6174
002a0a 2928
002a0b 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002a0c 6961
002a0d 656c
002a0e 0d64
002a0f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002a10 4c3c
002a11 474f
002a12 675f
002a13 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002a14 614c
002a15 7473
002a16 6e49
002a17 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002a18 7472
002a19 203e
002a1a 6f67
002a1b 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002a1c 6c25
002a1d 0d64
002a1e 000a
002a1f 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002a20 474f
002a21 735f
002a22 7465
002a23 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002a24 7473
002a25 6e49
002a26 6573
002a27 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002a28 203e
002a29 7277
002a2a 7469
002a2b 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002a2c 2067
002a2d 6c25
002a2e 0d64
002a2f 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002a30 4c3c
002a31 474f
002a32 735f
002a33 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002a34 614c
002a35 7473
002a36 6e49
002a37 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002a38 7472
002a39 203e
002a3a 4453
002a3b 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002a3c 6165
002a3d 4464
002a3e 7461
002a3f 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002a40 2029
002a41 6166
002a42 6c69
002a43 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a44 0a0d
002a45 3c00
002a46 4f4c
002a47 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a48 6567
002a49 4c74
002a4a 7361
002a4b 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002a4c 6e65
002a4d 3e64
002a4e 5320
002a4f 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002a50 6572
002a51 6461
002a52 6144
002a53 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a54 2928
002a55 6620
002a56 6961
002a57 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002a58 0d64
002a59 000a
002a5a 4c3c
002a5b 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002a5c 675f
002a5d 7465
002a5e 614c
002a5f 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002a60 6553
002a61 646e
002a62 203e
002a63 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002a64 2074
002a65 6c25
002a66 0d64
002a67 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002a68 4c3c
002a69 474f
002a6a 735f
002a6b 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002a6c 614c
002a6d 7473
002a6e 6553
002a6f 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002a70 203e
002a71 7277
002a72 7469
002a73 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002a74 2067
002a75 6c25
002a76 0d64
002a77 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002a78 4c3c
002a79 474f
002a7a 735f
002a7b 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002a7c 614c
002a7d 7473
002a7e 6553
002a7f 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002a80 203e
002a81 4453
002a82 725f
002a83 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002a84 4464
002a85 7461
002a86 2861
002a87 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002a88 6166
002a89 6c69
002a8a 6465
002a8b 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002a8c 3c00
002a8d 4f4c
002a8e 5f47
002a8f 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002a90 6165
002a91 6574
002a92 6946
002a93 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002a94 203e
002a95 4453
002a96 635f
002a97 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002a98 7461
002a99 4665
002a9a 6c69
002a9b 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002a9c 7325
002a9d 2029
002a9e 6166
002a9f 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002aa0 6465
002aa1 0a0d
002aa2 3c00
002aa3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002aa4 5f47
002aa5 7263
002aa6 6165
002aa7 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002aa8 6946
002aa9 656c
002aaa 203e
002aab 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002aac 6120
002aad 726c
002aae 6165
002aaf 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002ab0 6520
002ab1 6978
002ab2 7473
002ab3 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002ab4 3c00
002ab5 4f4c
002ab6 5f47
002ab7 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002ab8 6165
002ab9 6574
002aba 6946
002abb 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002abc 203e
002abd 7325
002abe 6320
002abf 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002ac0 7461
002ac1 6465
002ac2 0a0d
002ac3 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002ac4 4f4c
002ac5 5f47
002ac6 7263
002ac7 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002ac8 6574
002ac9 6946
002aca 656c
002acb 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002acc 7325
002acd 6320
002ace 6e6f
002acf 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002ad0 6e69
002ad1 6465
002ad2 6e20
002ad3 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002ad4 6e69
002ad5 7469
002ad6 6169
002ad7 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002ad8 6164
002ad9 6174
002ada 0a0d
002adb 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002adc 4f4c
002add 5f47
002ade 7263
002adf 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002ae0 6574
002ae1 6946
002ae2 656c
002ae3 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002ae4 4453
002ae5 6f5f
002ae6 6570
002ae7 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002ae8 6c69
002ae9 2865
002aea 7325
002aeb 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002aec 6166
002aed 6c69
002aee 6465
002aef 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002af0 3c00
002af1 4f4c
002af2 5f47
002af3 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002af4 6165
002af5 6574
002af6 6946
002af7 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002af8 203e
002af9 7277
002afa 7469
002afb 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002afc 2067
002afd 6e69
002afe 7469
002aff 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002b00 206c
002b01 6164
002b02 6174
002b03 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002b04 3c00
002b05 4f4c
002b06 5f47
002b07 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002b08 6165
002b09 6574
002b0a 6946
002b0b 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002b0c 203e
002b0d 4453
002b0e 775f
002b0f 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002b10 6574
002b11 6144
002b12 6174
002b13 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002b14 6620
002b15 6961
002b16 656c
002b17 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002b18 7257
002b19 7469
002b1a 6e69
002b1b 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002b1c 202e
002b1d 0a0d
002b1e 3c00
002b1f 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002b20 5f47
002b21 7263
002b22 6165
002b23 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002b24 6946
002b25 656c
002b26 203e
002b27 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002b28 635f
002b29 6f6c
002b2a 6573
002b2b 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002b2c 656c
002b2d 2928
002b2e 6620
002b2f 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002b30 656c
002b31 0d64
002b32 000a
002b33 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002b34 474f
002b35 695f
002b36 696e
002b37 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002b38 4920
002b39 696e
002b3a 6974
002b3b 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002b3c 6c20
002b3d 676f
002b3e 6620
002b3f 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002b40 0d65
002b41 000a
002b42 4c3c
002b43 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b44 695f
002b45 696e
002b46 3e74
002b47 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002b48 474f
002b49 635f
002b4a 6572
002b4b 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002b4c 4665
002b4d 6c69
002b4e 2865
002b4f 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002b50 2029
002b51 6166
002b52 6c69
002b53 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002b54 0a0d
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4024): warning: .cseg .db misalignment - padding zero byte
002b55 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002b56 0a0d
002b57 0a0d
002b58 613c
002b59 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002b5a 6144
002b5b 6174
002b5c 6f4c
002b5d 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002b5e 6575
002b5f 6575
002b60 203e
002b61 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002b62 4e52
002b63 4e49
002b64 2047
002b65 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002b66 6164
002b67 6174
002b68 6f4c
002b69 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002b6a 6575
002b6b 6575
002b6c 4620
002b6d 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002b6e 0d4c
002b6f 0d0a
002b70 000a
002b71 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002b72 613c
002b73 6464
002b74 6144
002b75 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002b76 6f4c
002b77 5167
002b78 6575
002b79 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002b7a 203e
002b7b 2020
002b7c 2020
002b7d 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b7e 2020
002b7f 2020
002b80 2020
002b81 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b82 2020
002b83 2020
002b84 2020
002b85 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002b86 2020
002b87 2020
002b88 6441
002b89 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002b8a 2064
002b8b 2528
002b8c 3230
002b8d 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002b8e 7420
002b8f 206f
002b90 6164
002b91 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002b92 6f4c
002b93 5167
002b94 6575
002b95 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002b96 255b
002b97 5d64
002b98 4320
002b99 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002b9a 746e
002b9b 3d20
002b9c 2520
002b9d 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002b9e 000a
002b9f 723c
002ba0 6165
002ba1 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002ba2 7461
002ba3 4c61
002ba4 676f
002ba5 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002ba6 7565
002ba7 3e65
002ba8 5720
002ba9 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002baa 3a4e
002bab 6420
002bac 7461
002bad 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002bae 676f
002baf 7551
002bb0 7565
002bb1 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002bb2 6d65
002bb3 7470
002bb4 2179
002bb5 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002bb6 000a
002bb7 723c
002bb8 6165
002bb9 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002bba 7461
002bbb 4c61
002bbc 676f
002bbd 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002bbe 7565
002bbf 3e65
002bc0 5720
002bc1 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002bc2 3a4e
002bc3 6e20
002bc4 746f
002bc5 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002bc6 756f
002bc7 646e
002bc8 6920
002bc9 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002bca 7830
002bcb 3025
002bcc 5832
002bcd 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002bce 6e69
002bcf 6420
002bd0 7461
002bd1 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002bd2 676f
002bd3 7551
002bd4 7565
002bd5 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002bd6 000a
002bd7 0a0d
002bd8 723c
002bd9 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002bda 766f
002bdb 4465
002bdc 7461
002bdd 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002bde 676f
002bdf 7551
002be0 7565
002be1 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002be2 2020
002be3 2020
002be4 2020
002be5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002be6 2020
002be7 2020
002be8 2020
002be9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002bea 2020
002beb 2020
002bec 2020
002bed 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002bee 6552
002bef 6f6d
002bf0 6576
002bf1 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002bf2 2528
002bf3 3230
002bf4 2958
002bf5 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002bf6 6f72
002bf7 206d
002bf8 6164
002bf9 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002bfa 6f4c
002bfb 5167
002bfc 6575
002bfd 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002bfe 255b
002bff 5d64
002c00 0a0d
002c01 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002c02 6572
002c03 6f6d
002c04 6576
002c05 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002c06 6174
002c07 6f4c
002c08 5167
002c09 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002c0a 6575
002c0b 203e
002c0c 4157
002c0d 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002c0e 203a
002c0f 6f6e
002c10 2074
002c11 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002c12 6e75
002c13 2064
002c14 6469
002c15 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002c16 2578
002c17 3230
002c18 5d58
002c19 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002c1a 206e
002c1b 6164
002c1c 6174
002c1d 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002c1e 5167
002c1f 6575
002c20 6575
002c21 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002c22 0d00
002c23 0d0a
002c24 3c0a
002c25 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002c26 4564
002c27 6576
002c28 746e
002c29 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002c2a 5167
002c2b 6575
002c2c 6575
002c2d 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002c2e 4157
002c2f 4e52
002c30 4e49
002c31 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002c32 203a
002c33 7665
002c34 6e65
002c35 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002c36 676f
002c37 7551
002c38 7565
002c39 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002c3a 5546
002c3b 4c4c
002c3c 0a0d
002c3d 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002c3e 0d00
002c3f 3c0a
002c40 6461
002c41 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002c42 6576
002c43 746e
002c44 6f4c
002c45 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002c46 6575
002c47 6575
002c48 203e
002c49 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002c4a 2020
002c4b 2020
002c4c 2020
002c4d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002c4e 2020
002c4f 2020
002c50 2020
002c51 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002c52 2020
002c53 2020
002c54 2020
002c55 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002c56 6564
002c57 2064
002c58 2528
002c59 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002c5a 2958
002c5b 7420
002c5c 206f
002c5d 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002c5e 6e65
002c5f 4c74
002c60 676f
002c61 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002c62 7565
002c63 5b65
002c64 6425
002c65 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002c66 6f43
002c67 6e75
002c68 2074
002c69 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002c6a 6425
002c6b 0a0d
002c6c 3c00
002c6d 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002c6e 6461
002c6f 7645
002c70 6e65
002c71 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002c72 676f
002c73 7551
002c74 7565
002c75 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002c76 5720
002c77 5241
002c78 3a4e
002c79 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002c7a 6576
002c7b 746e
002c7c 6f4c
002c7d 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002c7e 6575
002c7f 6575
002c80 6520
002c81 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002c82 7974
002c83 2121
002c84 0a0d
002c85 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002c86 6572
002c87 6461
002c88 7645
002c89 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002c8a 4c74
002c8b 676f
002c8c 7551
002c8d 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002c8e 3e65
002c8f 5720
002c90 5241
002c91 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002c92 6e20
002c93 746f
002c94 6620
002c95 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002c96 646e
002c97 6920
002c98 5b64
002c99 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002c9a 3025
002c9b 5832
002c9c 205d
002c9d 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002c9e 6520
002c9f 6576
002ca0 746e
002ca1 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002ca2 5167
002ca3 6575
002ca4 6575
002ca5 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002ca6 0d00
002ca7 3c0a
002ca8 6572
002ca9 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002caa 6576
002cab 7645
002cac 6e65
002cad 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002cae 676f
002caf 7551
002cb0 7565
002cb1 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002cb2 2020
002cb3 2020
002cb4 2020
002cb5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cb6 2020
002cb7 2020
002cb8 2020
002cb9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cba 2020
002cbb 2020
002cbc 2020
002cbd 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002cbe 6f6d
002cbf 6576
002cc0 2064
002cc1 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002cc2 3230
002cc3 2958
002cc4 6620
002cc5 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002cc6 206d
002cc7 7665
002cc8 6e65
002cc9 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002cca 676f
002ccb 7551
002ccc 7565
002ccd 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002cce 6425
002ccf 0d5d
002cd0 000a
002cd1 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002cd2 6d65
002cd3 766f
002cd4 4565
002cd5 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002cd6 746e
002cd7 6f4c
002cd8 5167
002cd9 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002cda 6575
002cdb 203e
002cdc 4157
002cdd 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002cde 203a
002cdf 6f6e
002ce0 2074
002ce1 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002ce2 6e75
002ce3 2064
002ce4 6469
002ce5 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002ce6 2578
002ce7 3230
002ce8 5d58
002ce9 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002cea 206e
002ceb 7665
002cec 6e65
002ced 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002cee 676f
002cef 7551
002cf0 7565
002cf1 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002cf2 000a      	.DB  0xA,0x0
                 _0x2C0003:
002cf3 0000
002cf4 0000
002cf5 0000
002cf6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002cf7 0000
002cf8 0000
002cf9 0000
002cfa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002cfb 0000
002cfc 0000
002cfd 0000
002cfe 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002cff 0000
002d00 0000
002d01 0000
002d02 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d03 0000
002d04 0000
002d05 0000
002d06 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d07 0000
002d08 0000
002d09 0000
002d0a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d0b 0000
002d0c 0000
002d0d 0000
002d0e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d0f 0000
002d10 0000
002d11 0000
002d12 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d13 0000
002d14 0000
002d15 0000
002d16 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d17 0591
002d18 058d
002d19 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C022A:
002d1a 0000
002d1b 0000
002d1c 0000
002d1d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d1e 0000
002d1f 0000
002d20 0000
002d21 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002d22 0000
002d23 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002d24 314d
002d25 3125
002d26 0064
002d27 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002d28 4d00
002d29 2541
002d2a 6431
002d2b 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002d2c 2532
002d2d 6431
002d2e 4d00
002d2f 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002d30 6431
002d31 4d00
002d32 2534
002d33 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002d34 5000
002d35 0031
002d36 354d
002d37 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002d38 0064
002d39 3050
002d3a 3c00
002d3b 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002d3c 554e
002d3d 705f
002d3e 6f72
002d3f 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002d40 7373
002d41 654b
002d42 3e79
002d43 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002d44 2550
002d45 2c73
002d46 7325
002d47 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002d48 2c73
002d49 5200
002d4a 6165
002d4b 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002d4c 6d69
002d4d 2c65
002d4e 4400
002d4f 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002d50 6c61
002d51 676f
002d52 6567
002d53 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002d54 5500
002d55 6b6e
002d56 6f6e
002d57 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002d58 002c
002d59 6e45
002d5a 6261
002d5b 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002d5c 002c
002d5d 6944
002d5e 6173
002d5f 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002d60 2c65
002d61 3c00
002d62 454d
002d63 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002d64 705f
002d65 6f72
002d66 6563
002d67 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002d68 654b
002d69 3e79
002d6a 5620
002d6b 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002d6c 0073
002d6d 4d3c
002d6e 4e45
002d6f 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002d70 7270
002d71 636f
002d72 7365
002d73 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002d74 7965
002d75 203e
002d76 616d
002d77 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002d78 636f
002d79 4328
002d7a 4e4f
002d7b 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002d7c 4552
002d7d 4441
002d7e 425f
002d7f 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002d80 4546
002d81 2952
002d82 6620
002d83 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002d84 656c
002d85 0d64
002d86 000a
002d87 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002d88 4e45
002d89 5f55
002d8a 7270
002d8b 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002d8c 7365
002d8d 4b73
002d8e 7965
002d8f 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002d90 5445
002d91 5f48
002d92 6567
002d93 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002d94 6e6f
002d95 6966
002d96 2867
002d97 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002d98 6166
002d99 6c69
002d9a 6465
002d9b 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002d9c 3c00
002d9d 454d
002d9e 554e
002d9f 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002da0 6f72
002da1 6563
002da2 7373
002da3 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002da4 3e79
002da5 4520
002da6 4854
002da7 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002da8 7465
002da9 6f43
002daa 666e
002dab 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002dac 2928
002dad 7320
002dae 6375
002daf 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002db0 7373
002db1 0a0d
002db2 0d00
002db3 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002db4 3c0a
002db5 454d
002db6 554e
002db7 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002db8 6f72
002db9 6563
002dba 7373
002dbb 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002dbc 3e79
002dbd 7220
002dbe 6165
002dbf 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002dc0 6425
002dc1 205d
002dc2 2d2d
002dc3 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002dc4 000a
002dc5 4d3c
002dc6 4e45
002dc7 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002dc8 7270
002dc9 636f
002dca 7365
002dcb 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002dcc 7965
002dcd 203e
002dce 6567
002dcf 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002dd0 7465
002dd1 6f77
002dd2 6b72
002dd3 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002dd4 6f66
002dd5 2928
002dd6 6620
002dd7 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002dd8 656c
002dd9 0d64
002dda 000a
002ddb 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002ddc 4e45
002ddd 5f55
002dde 7270
002ddf 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002de0 7365
002de1 4b73
002de2 7965
002de3 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002de4 4e56
002de5 7525
002de6 252e
002de7 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002de8 7525
002de9 252e
002dea 2c75
002deb 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002dec 252e
002ded 2e75
002dee 7525
002def 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002df0 2c75
002df1 7525
002df2 252e
002df3 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002df4 7525
002df5 252e
002df6 2c75
002df7 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002df8 252e
002df9 2e75
002dfa 7525
002dfb 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002dfc 2c75
002dfd 0a0d
002dfe 5600
002dff 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002e00 2e75
002e01 7525
002e02 252e
002e03 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002e04 7525
002e05 252c
002e06 2e75
002e07 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002e08 252e
002e09 2e75
002e0a 7525
002e0b 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002e0c 2e75
002e0d 7525
002e0e 252e
002e0f 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002e10 7525
002e11 252c
002e12 2e75
002e13 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002e14 252e
002e15 2e75
002e16 7525
002e17 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
002e18 4d3c
002e19 4e45
002e1a 5f55
002e1b 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002e1c 636f
002e1d 7365
002e1e 4b73
002e1f 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002e20 203e
002e21 6564
002e22 4576
002e23 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
002e24 6425
002e25 205d
002e26 6c61
002e27 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
002e28 5b6e
002e29 6425
002e2a 005d
002e2b 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
002e2c 3125
002e2d 0064
002e2e 4445
002e2f 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
002e30 6431
002e31 4500
002e32 3344
002e33 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
002e34 0064
002e35 4953
002e36 4900
002e37 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
002e38 5831
002e39 3125
002e3a 0064
002e3b 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
002e3c 3125
002e3d 0064
002e3e 4d3c
002e3f 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002e40 5f55
002e41 7270
002e42 636f
002e43 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002e44 4b73
002e45 7965
002e46 203e
002e47 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
002e48 4576
002e49 206e
002e4a 3e2d
002e4b 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
002e4c 2544
002e4d 6431
002e4e 3125
002e4f 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002e50 4d3c
002e51 4e45
002e52 5f55
002e53 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002e54 636f
002e55 7365
002e56 4b73
002e57 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002e58 203e
002e59 6c61
002e5a 456d
002e5b 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
002e5c 3e2d
002e5d 4520
002e5e 2544
002e5f 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
002e60 3125
002e61 0064
002e62 4d3c
002e63 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002e64 5f55
002e65 7270
002e66 636f
002e67 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002e68 4b73
002e69 7965
002e6a 203e
002e6b 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
002e6c 4f74
002e6d 6570
002e6e 6172
002e6f 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
002e70 676e
002e71 6f43
002e72 666e
002e73 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
002e74 2928
002e75 6620
002e76 6961
002e77 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002e78 0d64
002e79 000a
002e7a 4c46
002e7b 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
002e7c 0049
002e7d 4149
002e7e 3125
002e7f 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
002e80 4d53
002e81 5300
002e82 0047
002e83 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
002e84 5300
002e85 2546
002e86 2e75
002e87 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
002e88 252e
002e89 2e75
002e8a 7525
002e8b 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002e8c 2e75
002e8d 7525
002e8e 252e
002e8f 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002e90 7525
002e91 252c
002e92 2e75
002e93 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002e94 252e
002e95 2e75
002e96 7525
002e97 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002e98 2e75
002e99 7525
002e9a 252e
002e9b 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002e9c 7525
002e9d 002c
002e9e 4d3c
002e9f 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
002ea0 5f55
002ea1 7270
002ea2 636f
002ea3 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002ea4 4b73
002ea5 7965
002ea6 203e
002ea7 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
002ea8 5f48
002ea9 6573
002eaa 4374
002eab 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
002eac 6966
002ead 2867
002eae 2029
002eaf 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
002eb0 6c69
002eb1 6465
002eb2 0d20
002eb3 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
002eb4 554d
002eb5 3125
002eb6 0064
002eb7 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
002eb8 3125
002eb9 2a64
002eba 5000
002ebb 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
002ebc 6431
002ebd 5000
002ebe 0035
002ebf 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
002ec0 3125
002ec1 2564
002ec2 6431
002ec3 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
002ec4 454d
002ec5 554e
002ec6 705f
002ec7 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
002ec8 6563
002ec9 7373
002eca 654b
002ecb 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
002ecc 6e20
002ecd 7765
002ece 7750
002ecf 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
002ed0 2026
002ed1 6f63
002ed2 666e
002ed3 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
002ed4 2064
002ed5 6f6e
002ed6 2074
002ed7 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
002ed8 6374
002ed9 0d68
002eda 000a
002edb 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
002edc 5600
002edd 2544
002ede 6431
002edf 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
002ee0 0064
002ee1 3153
002ee2 3125
002ee3 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
002ee4 3253
002ee5 3125
002ee6 0064
002ee7 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
002ee8 4d00
002ee9 2537
002eea 6431
002eeb 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
002eec 2541
002eed 6431
002eee 5300
002eef 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
002ef0 6431
002ef1 5000
002ef2 254e
002ef3 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
002ef4 4300
002ef5 2543
002ef6 6431
002ef7 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
002ef8 2538
002ef9 6431
002efa 5700
002efb 0050      	.DB  0x38,0x25,0x31,0x64,0x0,0x57,0x50,0x0
002efc 5350
002efd 5000
002efe 0034
002eff 455b      	.DB  0x50,0x53,0x0,0x50,0x34,0x0,0x5B,0x45
002f00 005d
002f01 445b
002f02 005d
002f03 6e45      	.DB  0x5D,0x0,0x5B,0x44,0x5D,0x0,0x45,0x6E
002f04 6261
002f05 656c
002f06 4400
002f07 7369      	.DB  0x61,0x62,0x6C,0x65,0x0,0x44,0x69,0x73
002f08 6261
002f09 656c
002f0a 3c00
002f0b 6873      	.DB  0x61,0x62,0x6C,0x65,0x0,0x3C,0x73,0x68
002f0c 776f
002f0d 7250
002f0e 626f
002f0f 4365      	.DB  0x6F,0x77,0x50,0x72,0x6F,0x62,0x65,0x43
002f10 6e6f
002f11 6966
002f12 3e67
002f13 5020      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x50
002f14 2543
002f15 6431
002f16 3125
002f17 2564      	.DB  0x43,0x25,0x31,0x64,0x25,0x31,0x64,0x25
002f18 2c64
002f19 7325
002f1a 252c
002f1b 2c73      	.DB  0x64,0x2C,0x25,0x73,0x2C,0x25,0x73,0x2C
002f1c 2e25
002f1d 6631
002f1e 252c
002f1f 2c64      	.DB  0x25,0x2E,0x31,0x66,0x2C,0x25,0x64,0x2C
002f20 2e25
002f21 6631
002f22 252c
002f23 312e      	.DB  0x25,0x2E,0x31,0x66,0x2C,0x25,0x2E,0x31
002f24 2c66
002f25 6425
002f26 252c
002f27 312e      	.DB  0x66,0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31
002f28 0066
002f29 0a0d
002f2a 673c
002f2b 7465      	.DB  0x66,0x0,0xD,0xA,0x3C,0x67,0x65,0x74
002f2c 635f
002f2d 7275
002f2e 6572
002f2f 746e      	.DB  0x5F,0x63,0x75,0x72,0x72,0x65,0x6E,0x74
002f30 735f
002f31 6d61
002f32 6c70
002f33 6e69      	.DB  0x5F,0x73,0x61,0x6D,0x70,0x6C,0x69,0x6E
002f34 3e67
002f35 7220
002f36 6165
002f37 206c      	.DB  0x67,0x3E,0x20,0x72,0x65,0x61,0x6C,0x20
002f38 6176
002f39 756c
002f3a 2065
002f3b 2528      	.DB  0x76,0x61,0x6C,0x75,0x65,0x20,0x28,0x25
002f3c 206c
002f3d 6573
002f3e 2e63
002f3f 0d29      	.DB  0x6C,0x20,0x73,0x65,0x63,0x2E,0x29,0xD
002f40 000a
002f41 673c
002f42 7465
002f43 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
002f44 7275
002f45 6572
002f46 746e
002f47 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
002f48 6d61
002f49 6c70
002f4a 6e69
002f4b 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
002f4c 2520
002f4d 2064
002f4e 7268
002f4f 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
002f50 000a
002f51 673c
002f52 7465
002f53 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
002f54 7275
002f55 6572
002f56 746e
002f57 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
002f58 6d61
002f59 6c70
002f5a 6e69
002f5b 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
002f5c 2520
002f5d 2064
002f5e 696d
002f5f 2e6e      	.DB  0x20,0x25,0x64,0x20,0x6D,0x69,0x6E,0x2E
002f60 0a0d
002f61 3c00
002f62 6567
002f63 5f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x5F
002f64 7563
002f65 7272
002f66 6e65
002f67 5f74      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x74,0x5F
002f68 6173
002f69 706d
002f6a 696c
002f6b 676e      	.DB  0x73,0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67
002f6c 203e
002f6d 6425
002f6e 7320
002f6f 6365      	.DB  0x3E,0x20,0x25,0x64,0x20,0x73,0x65,0x63
002f70 0d2e
002f71 000a
002f72 673c
002f73 7465      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
002f74 635f
002f75 7275
002f76 6572
002f77 746e      	.DB  0x5F,0x63,0x75,0x72,0x72,0x65,0x6E,0x74
002f78 735f
002f79 6d61
002f7a 6c70
002f7b 6e69      	.DB  0x5F,0x73,0x61,0x6D,0x70,0x6C,0x69,0x6E
002f7c 3e67
002f7d 2520
002f7e 2064
002f7f 696d      	.DB  0x67,0x3E,0x20,0x25,0x64,0x20,0x6D,0x69
002f80 2e6e
002f81 2520
002f82 2064
002f83 6573      	.DB  0x6E,0x2E,0x20,0x25,0x64,0x20,0x73,0x65
002f84 2e63
002f85 0020
002f86 2d2d
002f87 203e      	.DB  0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E,0x20
002f88 6425
002f89 6d20
002f8a 6e69
002f8b 0d2e      	.DB  0x25,0x64,0x20,0x6D,0x69,0x6E,0x2E,0xD
002f8c 000a
002f8d 673c
002f8e 7465
002f8f 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
002f90 7275
002f91 6572
002f92 746e
002f93 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
002f94 6d61
002f95 6c70
002f96 6e69
002f97 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
002f98 2520
002f99 2064
002f9a 7268
002f9b 202e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0x20
002f9c 6425
002f9d 6d20
002f9e 6e69
002f9f 202e      	.DB  0x25,0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20
002fa0 6425
002fa1 7320
002fa2 6365
002fa3 202e      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x2E,0x20
002fa4 2d00
002fa5 3e2d
002fa6 2520
002fa7 2064      	.DB  0x0,0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20
002fa8 7268
002fa9 0d2e
002faa 000a
002fab 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
002fac 7465
002fad 635f
002fae 7275
002faf 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
002fb0 746e
002fb1 735f
002fb2 6d61
002fb3 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
002fb4 6e69
002fb5 3e67
002fb6 4320
002fb7 6e61      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x43,0x61,0x6E
002fb8 7427
002fb9 5320
002fba 6f68
002fbb 2e77      	.DB  0x27,0x74,0x20,0x53,0x68,0x6F,0x77,0x2E
002fbc 0a0d
002fbd 3c00
002fbe 6567
002fbf 5f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x5F
002fc0 7563
002fc1 7272
002fc2 6e65
002fc3 5f74      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x74,0x5F
002fc4 7276
002fc5 6665
002fc6 203e
002fc7 7276      	.DB  0x76,0x72,0x65,0x66,0x3E,0x20,0x76,0x72
002fc8 6665
002fc9 2528
002fca 2966
002fcb 7620      	.DB  0x65,0x66,0x28,0x25,0x66,0x29,0x20,0x76
002fcc 6c61
002fcd 6d54
002fce 2070
002fcf 203d      	.DB  0x61,0x6C,0x54,0x6D,0x70,0x20,0x3D,0x20
002fd0 7325
002fd1 0a0d
002fd2 3c00
002fd3 6567      	.DB  0x25,0x73,0xD,0xA,0x0,0x3C,0x67,0x65
002fd4 5f74
002fd5 7563
002fd6 7272
002fd7 6e65      	.DB  0x74,0x5F,0x63,0x75,0x72,0x72,0x65,0x6E
002fd8 5f74
002fd9 7276
002fda 6665
002fdb 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
002fdc 7562
002fdd 2066
002fde 3e2d
002fdf 0020      	.DB  0x62,0x75,0x66,0x20,0x2D,0x3E,0x20,0x0
002fe0 255b
002fe1 5d63
002fe2 3c00
002fe3 6567      	.DB  0x5B,0x25,0x63,0x5D,0x0,0x3C,0x67,0x65
002fe4 4e74
002fe5 7465
002fe6 6f77
002fe7 6b72      	.DB  0x74,0x4E,0x65,0x74,0x77,0x6F,0x72,0x6B
002fe8 6e49
002fe9 6f66
002fea 203e
002feb 494c      	.DB  0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4C,0x49
002fec 2050
002fed 203a
002fee 7525
002fef 252e      	.DB  0x50,0x20,0x3A,0x20,0x25,0x75,0x2E,0x25
002ff0 2e75
002ff1 7525
002ff2 252e
002ff3 0d75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0xD
002ff4 000a
002ff5 673c
002ff6 7465
002ff7 654e      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x4E,0x65
002ff8 7774
002ff9 726f
002ffa 496b
002ffb 666e      	.DB  0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66
002ffc 3e6f
002ffd 4d20
002ffe 4b53
002fff 3a20      	.DB  0x6F,0x3E,0x20,0x4D,0x53,0x4B,0x20,0x3A
003000 2520
003001 2e75
003002 7525
003003 252e      	.DB  0x20,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
003004 2e75
003005 7525
003006 0a0d
003007 3c00      	.DB  0x75,0x2E,0x25,0x75,0xD,0xA,0x0,0x3C
003008 6567
003009 4e74
00300a 7465
00300b 6f77      	.DB  0x67,0x65,0x74,0x4E,0x65,0x74,0x77,0x6F
00300c 6b72
00300d 6e49
00300e 6f66
00300f 203e      	.DB  0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20
003010 4744
003011 2057
003012 203a
003013 7525      	.DB  0x44,0x47,0x57,0x20,0x3A,0x20,0x25,0x75
003014 252e
003015 2e75
003016 7525
003017 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
003018 0d75
003019 000a
00301a 673c
00301b 7465      	.DB  0x75,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
00301c 654e
00301d 7774
00301e 726f
00301f 496b      	.DB  0x4E,0x65,0x74,0x77,0x6F,0x72,0x6B,0x49
003020 666e
003021 3e6f
003022 5320
003023 5049      	.DB  0x6E,0x66,0x6F,0x3E,0x20,0x53,0x49,0x50
003024 3a20
003025 2520
003026 2e75
003027 7525      	.DB  0x20,0x3A,0x20,0x25,0x75,0x2E,0x25,0x75
003028 252e
003029 2e75
00302a 7525
00302b 0a0d      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0xD,0xA
00302c 3c00
00302d 6573
00302e 5f74
00302f 7276      	.DB  0x0,0x3C,0x73,0x65,0x74,0x5F,0x76,0x72
003030 6665
003031 203e
003032 255b
003033 5d64      	.DB  0x65,0x66,0x3E,0x20,0x5B,0x25,0x64,0x5D
003034 255b
003035 5d64
003036 255b
003037 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
003038 2d20
003039 203e
00303a 6425
00303b 2d20      	.DB  0x20,0x2D,0x3E,0x20,0x25,0x64,0x20,0x2D
00303c 203e
00303d 6625
00303e 0a0d
00303f 3c00      	.DB  0x3E,0x20,0x25,0x66,0xD,0xA,0x0,0x3C
003040 6572
003041 6d63
003042 3e70
003043 7320      	.DB  0x72,0x65,0x63,0x6D,0x70,0x3E,0x20,0x73
003044 6372
003045 5b31
003046 3025
003047 5832      	.DB  0x72,0x63,0x31,0x5B,0x25,0x30,0x32,0x58
003048 205d
003049 7273
00304a 3263
00304b 255b      	.DB  0x5D,0x20,0x73,0x72,0x63,0x32,0x5B,0x25
00304c 3230
00304d 5d58
00304e 7520
00304f 6573      	.DB  0x30,0x32,0x58,0x5D,0x20,0x75,0x73,0x65
003050 5b72
003051 3025
003052 5832
003053 205d      	.DB  0x72,0x5B,0x25,0x30,0x32,0x58,0x5D,0x20
003054 6573
003055 7672
003056 6369
003057 5b65      	.DB  0x73,0x65,0x72,0x76,0x69,0x63,0x65,0x5B
003058 3025
003059 5832
00305a 0d5d
00305b 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4353): warning: .cseg .db misalignment - padding zero byte
00305c 0009      	.DB  0x9
                 _0x2E0000:
00305d 6567
00305e 2074
00305f 6579
003060 7261      	.DB  0x67,0x65,0x74,0x20,0x79,0x65,0x61,0x72
003061 3d20
003062 2520
003063 0d64
003064 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
003065 6567
003066 2074
003067 6f6d
003068 746e      	.DB  0x67,0x65,0x74,0x20,0x6D,0x6F,0x6E,0x74
003069 2068
00306a 203d
00306b 6425
00306c 0a0d      	.DB  0x68,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
00306d 6700
00306e 7465
00306f 6420
003070 7461      	.DB  0x0,0x67,0x65,0x74,0x20,0x64,0x61,0x74
003071 2065
003072 203d
003073 6425
003074 0a0d      	.DB  0x65,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
003075 6700
003076 7465
003077 6820
003078 756f      	.DB  0x0,0x67,0x65,0x74,0x20,0x68,0x6F,0x75
003079 2072
00307a 203d
00307b 6425
00307c 0a0d      	.DB  0x72,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
00307d 6700
00307e 7465
00307f 6d20
003080 6e69      	.DB  0x0,0x67,0x65,0x74,0x20,0x6D,0x69,0x6E
003081 3d20
003082 2520
003083 0d64
003084 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
003085 6567
003086 2074
003087 6573
003088 2063      	.DB  0x67,0x65,0x74,0x20,0x73,0x65,0x63,0x20
003089 203d
00308a 6425
00308b 0a0d
00308c 6700      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x67
00308d 7465
00308e 7420
00308f 6d69
003090 7a65      	.DB  0x65,0x74,0x20,0x74,0x69,0x6D,0x65,0x7A
003091 6e6f
003092 2065
003093 203d
003094 2b25      	.DB  0x6F,0x6E,0x65,0x20,0x3D,0x20,0x25,0x2B
003095 0d64
003096 000a
003097 0a0d
003098 443c      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x3C,0x44
003099 4245
00309a 4755
00309b 203e
00309c 6c41      	.DB  0x45,0x42,0x55,0x47,0x3E,0x20,0x41,0x6C
00309d 7261
00309e 206d
00309f 7453
0030a0 7461      	.DB  0x61,0x72,0x6D,0x20,0x53,0x74,0x61,0x74
0030a1 7375
0030a2 5220
0030a3 7365
0030a4 7465      	.DB  0x75,0x73,0x20,0x52,0x65,0x73,0x65,0x74
0030a5 2e2e
0030a6 2121
0030a7 0a0d
0030a8 3c00      	.DB  0x2E,0x2E,0x21,0x21,0xD,0xA,0x0,0x3C
0030a9 4544
0030aa 5542
0030ab 5f47
0030ac 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
0030ad 6165
0030ae 4c72
0030af 676f
0030b0 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
0030b1 656c
0030b2 203e
0030b3 6552
0030b4 692d      	.DB  0x6C,0x65,0x3E,0x20,0x52,0x65,0x2D,0x69
0030b5 696e
0030b6 6974
0030b7 7461
0030b8 2065      	.DB  0x6E,0x69,0x74,0x69,0x61,0x74,0x65,0x20
0030b9 6f6c
0030ba 2067
0030bb 6966
0030bc 656c      	.DB  0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C,0x65
0030bd 0a0d
0030be 3c00
0030bf 4544
0030c0 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0030c1 5f47
0030c2 6c43
0030c3 6165
0030c4 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
0030c5 676f
0030c6 6946
0030c7 656c
0030c8 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
0030c9 4f4c
0030ca 5f47
0030cb 7263
0030cc 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
0030cd 6574
0030ce 6946
0030cf 656c
0030d0 2528      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x28,0x25
0030d1 2973
0030d2 6620
0030d3 6961
0030d4 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0030d5 0d64
0030d6 000a
0030d7 443c
0030d8 4245      	.DB  0x64,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
0030d9 4755
0030da 735f
0030db 7465
0030dc 6552      	.DB  0x55,0x47,0x5F,0x73,0x65,0x74,0x52,0x65
0030dd 6c61
0030de 7256
0030df 6665
0030e0 203e      	.DB  0x61,0x6C,0x56,0x72,0x65,0x66,0x3E,0x20
0030e1 6567
0030e2 2074
0030e3 6573
0030e4 2074      	.DB  0x67,0x65,0x74,0x20,0x73,0x65,0x74,0x20
0030e5 7256
0030e6 6665
0030e7 733c
0030e8 7274      	.DB  0x56,0x72,0x65,0x66,0x3C,0x73,0x74,0x72
0030e9 6e69
0030ea 3e67
0030eb 2520
0030ec 0d73      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x73,0xD
0030ed 000a
0030ee 443c
0030ef 4245
0030f0 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
0030f1 735f
0030f2 7465
0030f3 6552
0030f4 6c61      	.DB  0x5F,0x73,0x65,0x74,0x52,0x65,0x61,0x6C
0030f5 7256
0030f6 6665
0030f7 203e
0030f8 6641      	.DB  0x56,0x72,0x65,0x66,0x3E,0x20,0x41,0x66
0030f9 6574
0030fa 2072
0030fb 6f63
0030fc 766e      	.DB  0x74,0x65,0x72,0x20,0x63,0x6F,0x6E,0x76
0030fd 7265
0030fe 2074
0030ff 203d
003100 6625      	.DB  0x65,0x72,0x74,0x20,0x3D,0x20,0x25,0x66
003101 0a0d
003102 3c00
003103 4544
003104 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
003105 5f47
003106 6573
003107 736e
003108 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
003109 6553
00310a 656c
00310b 7463
00310c 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
00310d 6854
00310e 7369
00310f 5420
003110 4d45      	.DB  0x54,0x68,0x69,0x73,0x20,0x54,0x45,0x4D
003111 5f50
003112 4553
003113 204c
003114 6f6e      	.DB  0x50,0x5F,0x53,0x45,0x4C,0x20,0x6E,0x6F
003115 2074
003116 7573
003117 7070
003118 726f      	.DB  0x74,0x20,0x73,0x75,0x70,0x70,0x6F,0x72
003119 0d74
00311a 0d0a
00311b 000a
00311c 443c      	.DB  0x74,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
00311d 4245
00311e 4755
00311f 735f
003120 6e65      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x6E
003121 6f73
003122 5372
003123 6c65
003124 6365      	.DB  0x73,0x6F,0x72,0x53,0x65,0x6C,0x65,0x63
003125 3e74
003126 4420
003127 7365
003128 6c65      	.DB  0x74,0x3E,0x20,0x44,0x65,0x73,0x65,0x6C
003129 6365
00312a 2074
00312b 6573
00312c 736e      	.DB  0x65,0x63,0x74,0x20,0x73,0x65,0x6E,0x73
00312d 726f
00312e 0a0d
00312f 0a0d
003130 3c00      	.DB  0x6F,0x72,0xD,0xA,0xD,0xA,0x0,0x3C
003131 4544
003132 5542
003133 5f47
003134 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003135 736e
003136 726f
003137 6553
003138 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
003139 7463
00313a 203e
00313b 6553
00313c 656c      	.DB  0x63,0x74,0x3E,0x20,0x53,0x65,0x6C,0x65
00313d 7463
00313e 6465
00313f 7320
003140 6e65      	.DB  0x63,0x74,0x65,0x64,0x20,0x73,0x65,0x6E
003141 6f73
003142 2072
003143 6425
003144 0a0d      	.DB  0x73,0x6F,0x72,0x20,0x25,0x64,0xD,0xA
003145 0a0d
003146 3c00
003147 4544
003148 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
003149 5f47
00314a 6573
00314b 736e
00314c 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
00314d 6553
00314e 656c
00314f 7463
003150 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
003151 5245
003152 4f52
003153 2052
003154 203a      	.DB  0x45,0x52,0x52,0x4F,0x52,0x20,0x3A,0x20
003155 6553
003156 656c
003157 7463
003158 6e69      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x69,0x6E
003159 2067
00315a 6573
00315b 736e
00315c 726f      	.DB  0x67,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
00315d 5b20
00315e 6325
00315f 5b5d
003160 7830      	.DB  0x20,0x5B,0x25,0x63,0x5D,0x5B,0x30,0x78
003161 3025
003162 5832
003163 0d5d
003164 0d0a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0xD
003165 000a
003166 443c
003167 4245
003168 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
003169 735f
00316a 7465
00316b 6553
00316c 6972      	.DB  0x5F,0x73,0x65,0x74,0x53,0x65,0x72,0x69
00316d 6c61
00316e 754e
00316f 626d
003170 7265      	.DB  0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72
003171 203e
003172 6e69
003173 6176
003174 696c      	.DB  0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
003175 2064
003176 6573
003177 7474
003178 6e69      	.DB  0x64,0x20,0x73,0x65,0x74,0x74,0x69,0x6E
003179 2067
00317a 7473
00317b 6972
00317c 676e      	.DB  0x67,0x20,0x73,0x74,0x72,0x69,0x6E,0x67
00317d 2820
00317e 6325
00317f 5b29
003180 7830      	.DB  0x20,0x28,0x25,0x63,0x29,0x5B,0x30,0x78
003181 3025
003182 5d32
003183 0a0d
003184 3c00      	.DB  0x25,0x30,0x32,0x5D,0xD,0xA,0x0,0x3C
003185 4544
003186 5542
003187 5f47
003188 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003189 5374
00318a 7265
00318b 6169
00318c 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
00318d 6d75
00318e 6562
00318f 3e72
003190 5220      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x52
003191 7065
003192 616c
003193 6963
003194 676e      	.DB  0x65,0x70,0x6C,0x61,0x63,0x69,0x6E,0x67
003195 4420
003196 5645
003197 4349
003198 5f45      	.DB  0x20,0x44,0x45,0x56,0x49,0x43,0x45,0x5F
003199 4553
00319a 4952
00319b 4c41
00319c 2e2e      	.DB  0x53,0x45,0x52,0x49,0x41,0x4C,0x2E,0x2E
00319d 0a0d
00319e 3c00
00319f 4544
0031a0 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0031a1 5f47
0031a2 6573
0031a3 5374
0031a4 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
0031a5 6169
0031a6 4e6c
0031a7 6d75
0031a8 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
0031a9 3e72
0031aa 5320
0031ab 7465
0031ac 5320      	.DB  0x72,0x3E,0x20,0x53,0x65,0x74,0x20,0x53
0031ad 7274
0031ae 6e69
0031af 2067
0031b0 2d2d      	.DB  0x74,0x72,0x69,0x6E,0x67,0x20,0x2D,0x2D
0031b1 203e
0031b2 5b00
0031b3 6325
0031b4 2500      	.DB  0x3E,0x20,0x0,0x5B,0x25,0x63,0x0,0x25
0031b5 5d63
0031b6 3c00
0031b7 4544
0031b8 5542      	.DB  0x63,0x5D,0x0,0x3C,0x44,0x45,0x42,0x55
0031b9 5f47
0031ba 6573
0031bb 5374
0031bc 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
0031bd 6169
0031be 4e6c
0031bf 6d75
0031c0 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
0031c1 3e72
0031c2 5320
0031c3 6375
0031c4 6563      	.DB  0x72,0x3E,0x20,0x53,0x75,0x63,0x63,0x65
0031c5 7373
0031c6 2121
0031c7 4420
0031c8 5645      	.DB  0x73,0x73,0x21,0x21,0x20,0x44,0x45,0x56
0031c9 535f
0031ca 5245
0031cb 4149
0031cc 204c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x20
0031cd 3d3d
0031ce 203e
0031cf 5b00
0031d0 3025      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x5B,0x25,0x30
0031d1 5832
0031d2 005d
0031d3 443c
0031d4 4245      	.DB  0x32,0x58,0x5D,0x0,0x3C,0x44,0x45,0x42
0031d5 4755
0031d6 725f
0031d7 6165
0031d8 5364      	.DB  0x55,0x47,0x5F,0x72,0x65,0x61,0x64,0x53
0031d9 7265
0031da 6169
0031db 4e6c
0031dc 6d75      	.DB  0x65,0x72,0x69,0x61,0x6C,0x4E,0x75,0x6D
0031dd 6562
0031de 3e72
0031df 4420
0031e0 5645      	.DB  0x62,0x65,0x72,0x3E,0x20,0x44,0x45,0x56
0031e1 535f
0031e2 5245
0031e3 4149
0031e4 204c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x20
0031e5 3d3d
0031e6 203e
0031e7 4700
0031e8 7465      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x47,0x65,0x74
0031e9 4420
0031ea 6265
0031eb 6775
0031ec 5220      	.DB  0x20,0x44,0x65,0x62,0x75,0x67,0x20,0x52
0031ed 7165
0031ee 3a2e
0031ef 2500
0031f0 3530      	.DB  0x65,0x71,0x2E,0x3A,0x0,0x25,0x30,0x35
0031f1 2064
0031f2 2020
0031f3 2500
0031f4 3230      	.DB  0x64,0x20,0x20,0x20,0x0,0x25,0x30,0x32
0031f5 2078
0031f6 2e00
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4457): warning: .cseg .db misalignment - padding zero byte
0031f7 0000      	.DB  0x78,0x20,0x0,0x2E,0x0
                 _0x300003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4459): warning: .cseg .db misalignment - padding zero byte
0031f8 0003      	.DB  0x3
                 _0x300000:
0031f9 0a0d
0031fa 673c
0031fb 7561
0031fc 7373      	.DB  0xD,0xA,0x3C,0x67,0x61,0x75,0x73,0x73
0031fd 6169
0031fe 3e6e
0031ff 2d20
003200 2d2d      	.DB  0x69,0x61,0x6E,0x3E,0x20,0x2D,0x2D,0x2D
003201 7320
003202 6174
003203 7472
003204 2d20      	.DB  0x20,0x73,0x74,0x61,0x72,0x74,0x20,0x2D
003205 2d2d
003206 0a0d
003207 0900
003208 0009      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x9,0x9,0x0
003209 2e25
00320a 6632
00320b 0009
00320c 0a0d      	.DB  0x25,0x2E,0x32,0x66,0x9,0x0,0xD,0xA
00320d 673c
00320e 7561
00320f 7373
003210 6169      	.DB  0x3C,0x67,0x61,0x75,0x73,0x73,0x69,0x61
003211 3e6e
003212 2d20
003213 2d2d
003214 6620      	.DB  0x6E,0x3E,0x20,0x2D,0x2D,0x2D,0x20,0x66
003215 6e69
003216 7369
003217 2068
003218 2d2d      	.DB  0x69,0x6E,0x69,0x73,0x68,0x20,0x2D,0x2D
003219 0d2d
00321a 000a
00321b 0a0d
00321c 673c      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x3C,0x67
00321d 7561
00321e 7373
00321f 6169
003220 3e6e      	.DB  0x61,0x75,0x73,0x73,0x69,0x61,0x6E,0x3E
003221 7920
003222 3d20
003223 2520
003224 2866      	.DB  0x20,0x79,0x20,0x3D,0x20,0x25,0x66,0x28
003225 5e78
003226 2932
003227 2b20
003228 2520      	.DB  0x78,0x5E,0x32,0x29,0x20,0x2B,0x20,0x25
003229 2866
00322a 2978
00322b 2b20
00322c 2520      	.DB  0x66,0x28,0x78,0x29,0x20,0x2B,0x20,0x25
00322d 0d66
00322e 000a      	.DB  0x66,0xD,0xA,0x0
                 _0x320007:
00322f 0000
003230 0000
003231 0000
003232 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003233 0000
003234 0000
003235 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000060:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4479): warning: .cseg .db misalignment - padding zero byte
003236 0001      	.DB  0x1
                 _0x2000000:
003237 4e2d
003238 4e41
003239 4900
00323a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4482): warning: .cseg .db misalignment - padding zero byte
00323b 0000      	.DB  0x0
                 _0x2040003:
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4484): warning: .cseg .db misalignment - padding zero byte
00323c 0001      	.DB  0x1
                 _0x2080000:
00323d 4e2d
00323e 4e41
C:\Data\Projects\AVR\iNT_ETH_CLOUD_v01_Data_Center\List\iNT_ETH.asm(4486): warning: .cseg .db misalignment - padding zero byte
00323f 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
003240 0004      	.DW  0x04
003241 1d8a      	.DW  0x1D8A
003242 018a 0000 	.DD  __HEAP_START_MARKER*2
                 
003244 0004      	.DW  0x04
003245 14e0      	.DW  _ETH_rst_timer_S0000001000
003246 01aa 0000 	.DD  _0xA5*2
                 
003248 002b      	.DW  0x2B
003249 0cf0      	.DW  _0x40009
00324a 1014 0000 	.DD  _0x40000*2
                 
00324c 0026      	.DW  0x26
00324d 0d1b      	.DW  _0x40009+43
00324e 103f 0000 	.DD  _0x40000*2+43
                 
003250 002b      	.DW  0x2B
003251 0d41      	.DW  _0x40009+81
003252 1014 0000 	.DD  _0x40000*2
                 
003254 0002      	.DW  0x02
003255 1434      	.DW  _d_out
003256 10ec 0000 	.DD  _0x80003*2
                 
003258 0001      	.DW  0x01
003259 10f6      	.DW  _is_properties_config_update
00325a 1256 0000 	.DD  _0xE0003*2
                 
00325c 0001      	.DW  0x01
00325d 10f7      	.DW  _is_operating_config_update
00325e 1258 0000 	.DD  _0xE0004*2
                 
003260 0005      	.DW  0x05
003261 10f8      	.DW  _is_sensor_config_update
003262 125a 0000 	.DD  _0xE0005*2
                 
003264 0010      	.DW  0x10
003265 10fd      	.DW  _is_din_config_update
003266 1260 0000 	.DD  _0xE0006*2
                 
003268 0005      	.DW  0x05
003269 110d      	.DW  _is_dout_config_update
00326a 1270 0000 	.DD  _0xE0007*2
                 
00326c 0001      	.DW  0x01
00326d 1112      	.DW  _is_buzzer_config_update
00326e 1276 0000 	.DD  _0xE0008*2
                 
003270 0001      	.DW  0x01
003271 1113      	.DW  _is_status_config_update
003272 1278 0000 	.DD  _0xE0009*2
                 
003274 0001      	.DW  0x01
003275 1114      	.DW  _is_env_config_update
003276 127a 0000 	.DD  _0xE000A*2
                 
003278 0002      	.DW  0x02
003279 0d6c      	.DW  _0x1200D0
00327a 31fb 0000 	.DD  _0x120000*2+4883
                 
00327c 0003      	.DW  0x03
00327d 0007      	.DW  0x07
00327e 429e 0000 	.DD  _0x18001D*2
                 
003280 0004      	.DW  0x04
003281 000a      	.DW  0x0A
003282 45d6 0000 	.DD  _0x1C0005*2
                 
003284 0002      	.DW  0x02
003285 147c      	.DW  _dinStatus
003286 45da 0000 	.DD  _0x1E0003*2
                 
003288 0002      	.DW  0x02
003289 147e      	.DW  _doutStatus
00328a 45dc 0000 	.DD  _0x1E0004*2
                 
00328c 0001      	.DW  0x01
00328d 1480      	.DW  _serverCommStatus
00328e 45de 0000 	.DD  _0x1E0005*2
                 
003290 0002      	.DW  0x02
003291 15ec      	.DW  _lastDinCheck_S00F0006000
003292 45e0 0000 	.DD  _0x1E003A*2
                 
003294 0010      	.DW  0x10
003295 1496      	.DW  _dinAlarm
003296 4720 0000 	.DD  _0x220003*2
                 
003298 0010      	.DW  0x10
003299 166e      	.DW  _ainAlarm
00329a 4730 0000 	.DD  _0x220004*2
                 
00329c 0001      	.DW  0x01
00329d 1688      	.DW  _lastCheck_S0110003000
00329e 4740 0000 	.DD  _0x2200A8*2
                 
0032a0 0001      	.DW  0x01
0032a1 168e      	.DW  _lastCheck_S0110004000
0032a2 4742 0000 	.DD  _0x2200B1*2
                 
0032a4 0002      	.DW  0x02
0032a5 169e      	.DW  _lastCheck_S0110006000
0032a6 4744 0000 	.DD  _0x2200C5*2
                 
0032a8 0005      	.DW  0x05
0032a9 16b9      	.DW  _lastCheck_S0110007000
0032aa 4746 0000 	.DD  _0x2200CF*2
                 
0032ac 0004      	.DW  0x04
0032ad 1487      	.DW  _muteAlarmExpired
0032ae 474c 0000 	.DD  _0x2200DD*2
                 
0032b0 0001      	.DW  0x01
0032b1 0006      	.DW  0x06
0032b2 4750 0000 	.DD  _0x2200F6*2
                 
0032b4 0003      	.DW  0x03
0032b5 190b      	.DW  _root_path
0032b6 49fa 0000 	.DD  _0x260003*2
                 
0032b8 0008      	.DW  0x08
0032b9 14a8      	.DW  _LOGFILE_DATA
0032ba 4ed4 0000 	.DD  _0x280003*2
                 
0032bc 0009      	.DW  0x09
0032bd 14b1      	.DW  _LOGFILE_EVENT
0032be 4edc 0000 	.DD  _0x280004*2
                 
0032c0 0009      	.DW  0x09
0032c1 14bb      	.DW  _LOGFILE_ERROR
0032c2 4ee6 0000 	.DD  _0x280005*2
                 
0032c4 0010      	.DW  0x10
0032c5 14c5      	.DW  _LOG_INIT_STR
0032c6 4ef0 0000 	.DD  _0x280006*2
                 
0032c8 0004      	.DW  0x04
0032c9 14d5      	.DW  _LOG_openFile
0032ca 4f00 0000 	.DD  _0x280007*2
                 
0032cc 0004      	.DW  0x04
0032cd 14d9      	.DW  _LOG_closeFile
0032ce 4f04 0000 	.DD  _0x280008*2
                 
0032d0 0001      	.DW  0x01
0032d1 10f4      	.DW  _hwCalId
0032d2 60b8 0000 	.DD  _0x2E0003*2
                 
0032d4 0001      	.DW  0x01
0032d5 1a57      	.DW  _n
0032d6 63f0 0000 	.DD  _0x300003*2
                 
0032d8 0001      	.DW  0x01
0032d9 1a89      	.DW  __seed_G100
0032da 646c 0000 	.DD  _0x2000060*2
                 
0032dc 0001      	.DW  0x01
0032dd 1a8d      	.DW  _status_G102
0032de 6478 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
0032e0 0000      	.DW  0
                 
                 __RESET:
0032e1 94f8      	CLI
0032e2 27ee      	CLR  R30
0032e3 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0032e4 e0f1      	LDI  R31,1
0032e5 bff5      	OUT  MCUCR,R31
0032e6 bfe5      	OUT  MCUCR,R30
0032e7 93e0 0074 	STS  XMCRA,R30
0032e9 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0032eb e1f8      	LDI  R31,0x18
0032ec 95a8      	WDR
0032ed b7a4      	IN   R26,MCUSR
0032ee 7fa7      	CBR  R26,8
0032ef bfa4      	OUT  MCUSR,R26
0032f0 93f0 0060 	STS  WDTCSR,R31
0032f2 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0032f4 e08d      	LDI  R24,(14-2)+1
0032f5 e0a2      	LDI  R26,2
0032f6 27bb      	CLR  R27
                 __CLEAR_REG:
0032f7 93ed      	ST   X+,R30
0032f8 958a      	DEC  R24
0032f9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0032fa e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0032fb e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0032fc e0a0      	LDI  R26,LOW(__SRAM_START)
0032fd e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0032fe 93ed      	ST   X+,R30
0032ff 9701      	SBIW R24,1
003300 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
003301 e8e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
003302 e6f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
003303 e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
003304 bfdb      	OUT  RAMPZ,R29
003305 9187      	ELPM R24,Z+
003306 9197      	ELPM R25,Z+
003307 9700      	SBIW R24,0
003308 f081      	BREQ __GLOBAL_INI_END
003309 91a7      	ELPM R26,Z+
00330a 91b7      	ELPM R27,Z+
00330b 9007      	ELPM R0,Z+
00330c 9017      	ELPM R1,Z+
00330d 91c7      	ELPM R28,Z+
00330e 91d7      	ELPM R29,Z+
00330f 01bf      	MOVW R22,R30
003310 b7db      	IN   R29,RAMPZ
003311 01f0      	MOVW R30,R0
003312 bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
003313 9007      	ELPM R0,Z+
003314 920d      	ST   X+,R0
003315 9701      	SBIW R24,1
003316 f7e1      	BRNE __GLOBAL_INI_LOOP
003317 01fb      	MOVW R30,R22
003318 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
003319 e0e0      	LDI  R30,__GPIOR0_INIT
00331a bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00331b e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00331c bfed      	OUT  SPL,R30
00331d e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00331e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00331f efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
003320 e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
003321 940c 3323 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;#include "dht11.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0032 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;extern int DHT11Read(ST_DHT11 *dhtDevice);
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 0043 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0044     int                     err,i=0,k=0,res,last_status;
                 ; 0000 0045 
                 ; 0000 0046     TIMER                   sensor_report_timer[5];
                 ; 0000 0047     TIMER                   status_report_timer;
                 ; 0000 0048     TIMER                   check_reset_timer;
                 ; 0000 0049     TIMER                   check_memory_timer;
                 ; 0000 004A     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 004B     TIMER                   readSensorTimer = 0;
                 ; 0000 004C     unsigned long int       timestamp_rd;
                 ; 0000 004D 
                 ; 0000 004E     char                    key_press = 0;
                 ; 0000 004F 
                 ; 0000 0050     float tmpA = 0.0;
                 ; 0000 0051     float tmpB = 0.0;
                 ; 0000 0052     float tmpC = 0.0;
                 ; 0000 0053 
                 ; 0000 0054     /*bongkot*/
                 ; 0000 0055     int countSenserRead = 0;
                 ; 0000 0056 
                 ; 0000 0057     struct rtc_structure st_rtc;
                 ; 0000 0058     //ST_DHT11 dhtDevice;
                 ; 0000 0059     //int dhtRet = 0;
                 ; 0000 005A 
                 ; 0000 005B     // -------- System Initialize ----------- //
                 ; 0000 005C     do{ err = initial_system();  }while(err);
003323 97ef      	SBIW R28,63
003324 976a      	SBIW R28,26
003325 e18b      	LDI  R24,27
003326 e1aa      	LDI  R26,LOW(26)
003327 e0b0      	LDI  R27,HIGH(26)
003328 e8ee      	LDI  R30,LOW(_0x3*2)
003329 e0f1      	LDI  R31,HIGH(_0x3*2)
00332a e060      	LDI  R22,BYTE3(_0x3*2)
00332b 940e cf46 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+87
                 ;	last_status -> Y+85
                 ;	sensor_report_timer -> Y+65
                 ;	status_report_timer -> Y+61
                 ;	check_reset_timer -> Y+57
                 ;	check_memory_timer -> Y+53
                 ;	clear_duplicate_timer -> Y+49
                 ;	readSensorTimer -> Y+45
                 ;	timestamp_rd -> Y+41
                 ;	key_press -> Y+40
                 ;	tmpA -> Y+36
                 ;	tmpB -> Y+32
                 ;	tmpC -> Y+28
                 ;	countSenserRead -> Y+26
                 ;	st_rtc -> Y+0
00332d 940e b216 	CALL SUBOPT_0x0
                 _0x5:
00332f 940e 3bb5 	CALL _initial_system
003331 018f      	MOVW R16,R30
003332 2e00      	MOV  R0,R16
003333 2a01      	OR   R0,R17
003334 f7d1      	BRNE _0x5
                 ; 0000 005D 
                 ; 0000 005E //    /*bongkot*/
                 ; 0000 005F //    while(1){
                 ; 0000 0060 //        #asm("wdr")
                 ; 0000 0061 //        dhtRet = DHT11Read(&dhtDevice);
                 ; 0000 0062 //        if(dhtRet == DHT11_SUCCESS){
                 ; 0000 0063 //           printDebug("DHT11: Temp(%f), Humi(%f) \r\n",dhtDevice.temp,dhtDevice.humi);
                 ; 0000 0064 //        }else if(dhtRet == DHT11_ERROR_TIMEOUT){      //DHT11_ERROR_TIMEOUT
                 ; 0000 0065 //           printDebug("DHT11:Time out. \r\n");
                 ; 0000 0066 //        }else if(dhtRet == DHT11_ERROR_CHECKSUM){      //DHT11_ERROR_TIMEOUT
                 ; 0000 0067 //           printDebug("DHT11:Check sum error. \r\n");
                 ; 0000 0068 //        }
                 ; 0000 0069 //
                 ; 0000 006A //        delay_ms(2000);
                 ; 0000 006B //    }
                 ; 0000 006C //
                 ; 0000 006D     /*bongkot*/
                 ; 0000 006E //    while(1){
                 ; 0000 006F //        #asm("wdr")
                 ; 0000 0070 //        for(countSenserRead=0;countSenserRead<5;countSenserRead++){
                 ; 0000 0071 ////            if(TIMER_checkTimerExceed(readSensorTimer)){
                 ; 0000 0072 ////                TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 0073 ////                updateSensorADC(countSenserRead);                    // -- update adcData[ch] -- //
                 ; 0000 0074 ////                //printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0075 ////                //printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[countSenserRead], (adcData[countSenserRead]/1023)*3.30);
                 ; 0000 0076 ////            }
                 ; 0000 0077 //
                 ; 0000 0078 //             updateSensorADC(countSenserRead);
                 ; 0000 0079 ////             updateSensorADC(1);
                 ; 0000 007A ////             delay_ms(100);
                 ; 0000 007B ////             updateSensorADC(2);
                 ; 0000 007C //             delay_ms(100);
                 ; 0000 007D //        }
                 ; 0000 007E //        //delay_ms(2000);
                 ; 0000 007F //
                 ; 0000 0080 //    }
                 ; 0000 0081 
                 ; 0000 0082     //ETH_CONF;
                 ; 0000 0083 
                 ; 0000 0084     ETH_switchMode((unsigned char) MODE_NORM);
003335 e8a0      	LDI  R26,LOW(128)
003336 940e 5bd7 	CALL _ETH_switchMode
                 ; 0000 0085 
                 ; 0000 0086     /*bongkot*/
                 ; 0000 0087 //    ETH_NORM;
                 ; 0000 0088 //    ETH_reset();
                 ; 0000 0089 //    ETH_OFF;
                 ; 0000 008A //    delay_ms(2000);
                 ; 0000 008B //    ETH_ON;
                 ; 0000 008C 
                 ; 0000 008D     // -- alarm indicator initialize -- //
                 ; 0000 008E     buzzer_on = 0;          // -- buzzer off -- //
003338 98f3      	CBI  0x1E,3
                 ; 0000 008F     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
003339 e040     +LDI R20 , LOW ( 0 )
00333a e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
00333b 3042     +CPI R20 , LOW ( 2 )
00333c e0e0     +LDI R30 , HIGH ( 2 )
00333d 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00333e f44c      	BRGE _0xB
                 ; 0000 0090     {
                 ; 0000 0091         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
00333f 940e b21b 	CALL SUBOPT_0x1
003341 940e b225 	CALL SUBOPT_0x2
003343 940e 4082 	CALL _IO_dout
                 ; 0000 0092     }
                +
003345 5f4f     +SUBI R20 , LOW ( - 1 )
003346 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003347 cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0093 
                 ; 0000 0094     initDataLogQueue();
003348 940e 7cd4 	CALL _initDataLogQueue
                 ; 0000 0095     initEventLogQueue();
00334a 940e 7daa 	CALL _initEventLogQueue
                 ; 0000 0096     ETH_initWaitQueue();
00334c 940e 67be 	CALL _ETH_initWaitQueue
                 ; 0000 0097 
                 ; 0000 0098     printDebug("\r\n------ Initial Complete ------\r\n");
                +
00334e eaee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00334f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
003350 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
003351 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
003352 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0099     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
003354 ede1     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
003355 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
003356 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
003357 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
003358 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 009A 
                 ; 0000 009B 
                 ; 0000 009C     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 009D 
                 ; 0000 009E     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
00335a e020     +LDI R18 , LOW ( 0 )
00335b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
00335c 3025     +CPI R18 , LOW ( 5 )
00335d e0e0     +LDI R30 , HIGH ( 5 )
00335e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00335f f444      	BRGE _0xE
                 ; 0000 009F         if(operating_config.sensorEnable[i]){
003360 940e b231 	CALL SUBOPT_0x4
003362 f011      	BREQ _0xF
                 ; 0000 00A0             TIMER_setTimer(&sensor_report_timer[i], 5);
003363 940e b238 	CALL SUBOPT_0x5
                 ; 0000 00A1         }
                 ; 0000 00A2     }
                 _0xF:
                +
003365 5f2f     +SUBI R18 , LOW ( - 1 )
003366 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003367 cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 00A3 
                 ; 0000 00A4 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 00A5 //                 -90, -20, 50,
                 ; 0000 00A6 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 00A7 //
                 ; 0000 00A8 //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 00A9 //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 00AA //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 00AB 
                 ; 0000 00AC     TIMER_setTimer(&status_report_timer, 7);
003368 940e b248 	CALL SUBOPT_0x6
                 ; 0000 00AD     TIMER_setTimer(&check_reset_timer, 60);
00336a 940e b252 	CALL SUBOPT_0x7
                 ; 0000 00AE     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
00336c 940e b25c 	CALL SUBOPT_0x8
                 ; 0000 00AF 
                 ; 0000 00B0     while(1){
                 _0x10:
                 ; 0000 00B1 
                 ; 0000 00B2         #asm("wdr")
00336e 95a8      	wdr
                 ; 0000 00B3 
                 ; 0000 00B4         // Reset at 05.00 in every day
                 ; 0000 00B5         if(TIMER_checkTimerExceed(check_reset_timer))
                +
00336f ada9     +LDD R26 , Y + 57
003370 adba     +LDD R27 , Y + 57 + 1
003371 ad8b     +LDD R24 , Y + 57 + 2
003372 ad9c     +LDD R25 , Y + 57 + 3
                 	__GETD2S 57
003373 940e 3edb 	CALL _TIMER_checkTimerExceed
003375 9730      	SBIW R30,0
003376 f0c1      	BREQ _0x13
                 ; 0000 00B6         {
                 ; 0000 00B7             TIMER_setTimer(&check_reset_timer, 60);
003377 940e b252 	CALL SUBOPT_0x7
                 ; 0000 00B8             RTC_getDateTime(&st_rtc, 7);
003379 940e b266 	CALL SUBOPT_0x9
00337b 940e b26a 	CALL SUBOPT_0xA
00337d 940e 45a5 	CALL _RTC_getDateTime
                 ; 0000 00B9 //            printRTC(st_rtc);
                 ; 0000 00BA             if(st_rtc.hour == 5) {
00337f 940e b26d 	CALL SUBOPT_0xB
                +
003381 30a5     +CPI R26 , LOW ( 0x5 )
003382 e0e0     +LDI R30 , HIGH ( 0x5 )
003383 07be     +CPC R27 , R30
003384 e0e0     +LDI R30 , BYTE3 ( 0x5 )
003385 078e     +CPC R24 , R30
003386 e0e0     +LDI R30 , BYTE4 ( 0x5 )
003387 079e     +CPC R25 , R30
                 	__CPD2N 0x5
003388 f431      	BRNE _0x14
                 ; 0000 00BB                 if(st_rtc.min == 0) {
003389 940e b272 	CALL SUBOPT_0xC
00338b 940e cf1c 	CALL __CPD10
00338d f409      	BRNE _0x15
                 ; 0000 00BC                     while(1);
                 _0x16:
00338e cfff      	RJMP _0x16
                 ; 0000 00BD                 }
                 ; 0000 00BE             }
                 _0x15:
                 ; 0000 00BF         }
                 _0x14:
                 ; 0000 00C0 
                 ; 0000 00C1         // ----------- Received Debug Request ---------- //
                 ; 0000 00C2         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
00338f 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
003391 30e0      	CPI  R30,0
003392 f011      	BREQ _0x19
003393 940e 91d7 	CALL _debug_req
                 ; 0000 00C3 
                 ; 0000 00C4         // ----------- On Device Key Press ------------- //
                 ; 0000 00C5         key_press = IO_keyCheck();
                 _0x19:
003395 940e 409f 	CALL _IO_keyCheck
003397 a7e8      	STD  Y+40,R30
                 ; 0000 00C6         if(key_press){
003398 30e0      	CPI  R30,0
003399 f019      	BREQ _0x1A
                 ; 0000 00C7             MENU_processKey(key_press);
00339a a5a8      	LDD  R26,Y+40
00339b 940e 7dbc 	CALL _MENU_processKey
                 ; 0000 00C8         }
                 ; 0000 00C9 
                 ; 0000 00CA         // ----------- Ethernet Communication ---------- //
                 ; 0000 00CB         ETH_receive();
                 _0x1A:
00339d 940e 5a77 	CALL _ETH_receive
                 ; 0000 00CC         ETH_retransmit();
00339f 940e 54bc 	CALL _ETH_retransmit
                 ; 0000 00CD 
                 ; 0000 00CE         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00CF         if(is_properties_config_update){
0033a1 91e0 10f6 	LDS  R30,_is_properties_config_update
0033a3 30e0      	CPI  R30,0
0033a4 f011      	BREQ _0x1B
                 ; 0000 00D0             getPropertiesConfig(&properties_config);
0033a5 940e b277 	CALL SUBOPT_0xD
                 ; 0000 00D1             is_properties_config_update = 0;
                 ; 0000 00D2         }
                 ; 0000 00D3 
                 ; 0000 00D4         if(is_operating_config_update){
                 _0x1B:
0033a7 91e0 10f7 	LDS  R30,_is_operating_config_update
0033a9 30e0      	CPI  R30,0
0033aa f011      	BREQ _0x1C
                 ; 0000 00D5             getOperatingConfig(&operating_config);
0033ab 940e b27f 	CALL SUBOPT_0xE
                 ; 0000 00D6             is_operating_config_update = 0;
                 ; 0000 00D7         }
                 ; 0000 00D8 
                 ; 0000 00D9         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
0033ad e020     +LDI R18 , LOW ( 0 )
0033ae e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
0033af 3025     +CPI R18 , LOW ( 5 )
0033b0 e0e0     +LDI R30 , HIGH ( 5 )
0033b1 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0033b2 f504      	BRGE _0x1F
                 ; 0000 00DA             if(is_sensor_config_update[i]){
0033b3 efa8      	LDI  R26,LOW(_is_sensor_config_update)
0033b4 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0033b5 940e b287 	CALL SUBOPT_0xF
0033b7 f0c1      	BREQ _0x20
                 ; 0000 00DB                 err = getSensorConfig(i,&sensor_config[i]);
0033b8 933a      	ST   -Y,R19
0033b9 932a      	ST   -Y,R18
0033ba 940e b28c 	CALL SUBOPT_0x10
0033bc 940e 4768 	CALL _getSensorConfig
0033be 018f      	MOVW R16,R30
                 ; 0000 00DC                 if(err < 0){
0033bf 2311      	TST  R17
0033c0 f44a      	BRPL _0x21
                 ; 0000 00DD                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
0033c1 efe5     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
0033c2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
0033c3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
0033c4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
0033c5 940e b295 	CALL SUBOPT_0x11
0033c7 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 00DE                     continue;
0033c9 c006      	RJMP _0x1D
                 ; 0000 00DF                 }
                 ; 0000 00E0                 is_sensor_config_update[i] = 0;
                 _0x21:
0033ca efa8      	LDI  R26,LOW(_is_sensor_config_update)
0033cb e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0033cc 940e b2a2 	CALL SUBOPT_0x13
                 ; 0000 00E1                 TIMER_setTimer(&sensor_report_timer[i], 5);
0033ce 940e b238 	CALL SUBOPT_0x5
                 ; 0000 00E2             }
                 ; 0000 00E3         }
                 _0x20:
                 _0x1D:
                +
0033d0 5f2f     +SUBI R18 , LOW ( - 1 )
0033d1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0033d2 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00E4 
                 ; 0000 00E5         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
0033d3 91e0 1112 	LDS  R30,_is_buzzer_config_update
0033d5 30e0      	CPI  R30,0
0033d6 f011      	BREQ _0x22
                 ; 0000 00E6             getBuzzerConfig(&buzz_config);
0033d7 940e b2a7 	CALL SUBOPT_0x14
                 ; 0000 00E7             is_buzzer_config_update = 0;
                 ; 0000 00E8         }
                 ; 0000 00E9 
                 ; 0000 00EA         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
0033d9 e020     +LDI R18 , LOW ( 0 )
0033da e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
0033db 3022     +CPI R18 , LOW ( 2 )
0033dc e0e0     +LDI R30 , HIGH ( 2 )
0033dd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0033de f49c      	BRGE _0x25
                 ; 0000 00EB             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
0033df efad      	LDI  R26,LOW(_is_din_config_update)
0033e0 e1b0      	LDI  R27,HIGH(_is_din_config_update)
0033e1 940e b287 	CALL SUBOPT_0xF
0033e3 f059      	BREQ _0x26
                 ; 0000 00EC                 getAuxDinConfig(i,&din_config[i]);
0033e4 933a      	ST   -Y,R19
0033e5 932a      	ST   -Y,R18
0033e6 940e b2af 	CALL SUBOPT_0x15
0033e8 01df      	MOVW R26,R30
0033e9 940e 4850 	CALL _getAuxDinConfig
                 ; 0000 00ED                 is_din_config_update[i] = 0;
0033eb efad      	LDI  R26,LOW(_is_din_config_update)
0033ec e1b0      	LDI  R27,HIGH(_is_din_config_update)
0033ed 940e b2a2 	CALL SUBOPT_0x13
                 ; 0000 00EE             }
                 ; 0000 00EF         }
                 _0x26:
                +
0033ef 5f2f     +SUBI R18 , LOW ( - 1 )
0033f0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0033f1 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00F0 
                 ; 0000 00F1         for(i=0;i<USE_DOUT;i++){
                +
0033f2 e020     +LDI R18 , LOW ( 0 )
0033f3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
0033f4 3022     +CPI R18 , LOW ( 2 )
0033f5 e0e0     +LDI R30 , HIGH ( 2 )
0033f6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0033f7 f49c      	BRGE _0x29
                 ; 0000 00F2             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
0033f8 e0ad      	LDI  R26,LOW(_is_dout_config_update)
0033f9 e1b1      	LDI  R27,HIGH(_is_dout_config_update)
0033fa 940e b287 	CALL SUBOPT_0xF
0033fc f059      	BREQ _0x2A
                 ; 0000 00F3                 getAuxDoutConfig(i,&dout_config[i]);
0033fd 933a      	ST   -Y,R19
0033fe 932a      	ST   -Y,R18
                +
0033ff e2a6     +LDI R26 , 38
003400 9fa2     +MUL R26 , R18
003401 01f0     +MOVW R30 , R0
003402 9fa3     +MUL R26 , R19
003403 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
003404 940e b2b7 	CALL SUBOPT_0x16
                 ; 0000 00F4                 is_dout_config_update[i] = 0;
003406 940e b2a2 	CALL SUBOPT_0x13
                 ; 0000 00F5             }
                 ; 0000 00F6         }
                 _0x2A:
                +
003408 5f2f     +SUBI R18 , LOW ( - 1 )
003409 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00340a cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 00F7 
                 ; 0000 00F8         if(is_status_config_update){
00340b 91e0 1113 	LDS  R30,_is_status_config_update
00340d 30e0      	CPI  R30,0
00340e f021      	BREQ _0x2B
                 ; 0000 00F9             getStatusReportConfig(&status_config);
00340f 940e b2bf 	CALL SUBOPT_0x17
                 ; 0000 00FA             is_status_config_update = 0;
                 ; 0000 00FB 
                 ; 0000 00FC             TIMER_setTimer(&status_report_timer, 7);
003411 940e b248 	CALL SUBOPT_0x6
                 ; 0000 00FD         }
                 ; 0000 00FE 
                 ; 0000 00FF         if(is_env_config_update){
                 _0x2B:
003413 91e0 1114 	LDS  R30,_is_env_config_update
003415 30e0      	CPI  R30,0
003416 f011      	BREQ _0x2C
                 ; 0000 0100             getEnvAlarmConfig(&env_config);
003417 940e b2c7 	CALL SUBOPT_0x18
                 ; 0000 0101             is_env_config_update = 0;
                 ; 0000 0102         }
                 ; 0000 0103 
                 ; 0000 0104         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
003419 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
00341b 30e0      	CPI  R30,0
00341c f411      	BRNE PC+3
00341d 940c 3611 	JMP _0x2D
                 ; 0000 0105         {
                 ; 0000 0106             // -------------- Sensor Association -------------- //
                 ; 0000 0107             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
00341f e020     +LDI R18 , LOW ( 0 )
003420 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
003421 3025     +CPI R18 , LOW ( 5 )
003422 e0e0     +LDI R30 , HIGH ( 5 )
003423 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003424 f014      	BRLT PC+3
003425 940c 3467 	JMP _0x30
                 ; 0000 0108             {
                 ; 0000 0109                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
003427 940e b231 	CALL SUBOPT_0x4
003429 f1d1      	BREQ _0x31
                 ; 0000 010A                 {
                 ; 0000 010B                     //** test **//
                 ; 0000 010C //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 010D //                    {
                 ; 0000 010E //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 010F //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 0110 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0111 //                    }
                 ; 0000 0112                     //-- test --//
                 ; 0000 0113 
                 ; 0000 0114 //                    printDebug("<main> sensorRead\r\n");
                 ; 0000 0115                     err = sensorRead(i,&sensor[i]);
00342a 940e b2cf 	CALL SUBOPT_0x19
00342c 940e 682e 	CALL _sensorRead
00342e 018f      	MOVW R16,R30
                 ; 0000 0116                     if(err < 0)                                 // . sensor value error . //
00342f 2311      	TST  R17
003430 f19a      	BRMI _0x2E
                 ; 0000 0117                     {
                 ; 0000 0118                         continue;
                 ; 0000 0119                     }
                 ; 0000 011A                     else                                        // . sensor value valid . //
                 ; 0000 011B                     {
                 ; 0000 011C                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 011D                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
003431 940e b2da 	CALL SUBOPT_0x1A
003433 940e b2e1 	CALL SUBOPT_0x1B
003435 940e b2e6 	CALL SUBOPT_0x1C
003437 f161      	BREQ _0x34
                 ; 0000 011E                         {
                 ; 0000 011F                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
003438 940e b2da 	CALL SUBOPT_0x1A
00343a 940e b2ec 	CALL SUBOPT_0x1D
00343c 940e b28c 	CALL SUBOPT_0x10
00343e 940e b2f1 	CALL SUBOPT_0x1E
003440 940e b2f6 	CALL SUBOPT_0x1F
                 ; 0000 0120 
                 ; 0000 0121                             timestamp_rd = DS1672_read();
003442 940e 426e 	CALL _DS1672_read
                +
003444 a7e9     +STD Y + 41 , R30
003445 a7fa     +STD Y + 41 + 1 , R31
003446 a76b     +STD Y + 41 + 2 , R22
003447 a77c     +STD Y + 41 + 3 , R23
                 	__PUTD1S 41
                 ; 0000 0122                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
003448 940e cec8 	CALL __PUTPARD1
00344a 940e b2cf 	CALL SUBOPT_0x19
00344c 940e ce98 	CALL __GETD1P
00344e 01df      	MOVW R26,R30
00344f 01cb      	MOVW R24,R22
003450 940e 6a68 	CALL _addDataQueue
003452 018f      	MOVW R16,R30
                 ; 0000 0123                             if(err<0){
003453 2311      	TST  R17
003454 f47a      	BRPL _0x35
                 ; 0000 0124                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
003455 e1e8     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
003456 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
003457 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
003458 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
003459 940e b295 	CALL SUBOPT_0x11
                +
00345b e0a5     +LDI R26 , 5
00345c 9fa2     +MUL R26 , R18
00345d 01f0     +MOVW R30 , R0
00345e 9fa3     +MUL R26 , R19
00345f 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
003460 940e b2fa 	CALL SUBOPT_0x20
003462 940e b300 	CALL SUBOPT_0x21
                 ; 0000 0125                                 continue;   // -- continue other sensor
                 ; 0000 0126                             }
                 ; 0000 0127                         }
                 _0x35:
                 ; 0000 0128                         else{
                 _0x34:
                 ; 0000 0129                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 012A                         }
                 ; 0000 012B                     }
                 ; 0000 012C 
                 ; 0000 012D                 }
                 ; 0000 012E                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 012F                 {
                 ; 0000 0130                 }
                 ; 0000 0131             } // -- iterate each probe -- //
                 _0x2E:
                +
003464 5f2f     +SUBI R18 , LOW ( - 1 )
003465 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003466 cfba      	RJMP _0x2F
                 _0x30:
                 ; 0000 0132 
                 ; 0000 0133             #asm("wdr")
003467 95a8      	wdr
                 ; 0000 0134             // --------------- Status Management --------------- //
                 ; 0000 0135            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 0136             last_status = updateStatus();
003468 d220      	RCALL _updateStatus
                +
003469 01de     +MOVW R26 , R28
00346a 5aab     +SUBI R26 , LOW ( - 85 )
00346b 4fbf     +SBCI R27 , HIGH ( - 85 )
00346c 93ed     +ST X + , R30
00346d 93fc     +ST X , R31
                 	__PUTW1SX 85
                 ; 0000 0137 
                 ; 0000 0138             // --------------- Alarm Management --------------- //
                 ; 0000 0139             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
00346e 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
003470 30e0      	CPI  R30,0
003471 f411      	BRNE PC+3
003472 940c 34e7 	JMP _0x38
                 ; 0000 013A             {
                 ; 0000 013B                 // -- check alarm all -- //
                 ; 0000 013C                 if(last_status < 0)                             // .. status update falied .. //
                +
003474 01de     +MOVW R26 , R28
003475 5aaa     +SUBI R26 , LOW ( - 86 )
003476 4fbf     +SBCI R27 , HIGH ( - 86 )
003477 91ac     +LD R26 , X
                 	__GETB2SX 86
003478 23aa      	TST  R26
003479 f43a      	BRPL _0x39
                 ; 0000 013D                 {
                 ; 0000 013E                     printDebug("<main> updateStatus() failed\r\n");
                +
00347a e4e4     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
00347b e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
00347c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
00347d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
00347e 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 013F                 }
                 ; 0000 0140                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
003480 c062      	RJMP _0x3A
                 _0x39:
                +
003481 01de     +MOVW R26 , R28
003482 5aab     +SUBI R26 , LOW ( - 85 )
003483 4fbf     +SBCI R27 , HIGH ( - 85 )
003484 900d     +LD R0 , X +
003485 91bc     +LD R27 , X
003486 2da0     +MOV R26 , R0
                 	__GETW2SX 85
003487 940e cf20 	CALL __CPW02
003489 f424      	BRGE _0x3C
00348a 91e0 148b 	LDS  R30,_muteMode
00348c 30e0      	CPI  R30,0
00348d f009      	BREQ _0x3D
                 _0x3C:
00348e c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0141                 {
                 ; 0000 0142                     // -- Buzzer Alarm -- //
                 ; 0000 0143                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
00348f 91a0 133d 	LDS  R26,_buzz_config
003491 30a1      	CPI  R26,LOW(0x1)
003492 f471      	BRNE _0x3E
                 ; 0000 0144                     {
                 ; 0000 0145                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 0146                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
003493 e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
003494 e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
003495 93fa      	ST   -Y,R31
003496 93ea      	ST   -Y,R30
                +
003497 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
003499 27bb      	CLR  R27
00349a 940e b307 	CALL SUBOPT_0x22
                 ; 0000 0147                         if(res){
00349c f011      	BREQ _0x3F
                 ; 0000 0148                             buzzer_on = 1;          // -- buzzer on -- //
00349d 9af3      	SBI  0x1E,3
                 ; 0000 0149                         }
                 ; 0000 014A                         else{
00349e c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 014B                             buzzer_on = 0;          // -- buzzer off -- //
00349f 98f3      	CBI  0x1E,3
                 ; 0000 014C                         }
                 _0x42:
                 ; 0000 014D                     }
                 ; 0000 014E                     else                                        // -- buzzer disabled -- //
0034a0 c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 014F                     {
                 ; 0000 0150                         buzzer_on = 0;                  // -- buzzer off -- //
0034a1 98f3      	CBI  0x1E,3
                 ; 0000 0151                     }
                 _0x45:
                 ; 0000 0152 
                 ; 0000 0153                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0154                     for(k=0;k<USE_DOUT;k++)
                +
0034a2 e040     +LDI R20 , LOW ( 0 )
0034a3 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
0034a4 3042     +CPI R20 , LOW ( 2 )
0034a5 e0e0     +LDI R30 , HIGH ( 2 )
0034a6 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0034a7 f554      	BRGE _0x4A
                 ; 0000 0155                     {
                 ; 0000 0156                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
0034a8 940e b310 	CALL SUBOPT_0x23
0034aa 58e1      	SUBI R30,LOW(-_dout_config)
0034ab 4efd      	SBCI R31,HIGH(-_dout_config)
0034ac 81a0      	LD   R26,Z
0034ad 30a1      	CPI  R26,LOW(0x1)
0034ae f4d1      	BRNE _0x4B
                 ; 0000 0157                         {
                 ; 0000 0158                             // -- check alarm Digital Output -- //
                 ; 0000 0159 //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 015A                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
0034af 940e b310 	CALL SUBOPT_0x23
                +
0034b1 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
0034b2 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
0034b3 93fa      	ST   -Y,R31
0034b4 93ea      	ST   -Y,R30
0034b5 940e b310 	CALL SUBOPT_0x23
                +
0034b7 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
0034b8 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
0034b9 81a0      	LD   R26,Z
0034ba e0b0      	LDI  R27,0
0034bb 940e b307 	CALL SUBOPT_0x22
                 ; 0000 015B                             if(res){
0034bd f021      	BREQ _0x4C
                 ; 0000 015C                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
0034be 940e b21b 	CALL SUBOPT_0x1
0034c0 81a0      	LD   R26,Z
0034c1 c004      	RJMP _0x133
                 ; 0000 015D                             }
                 ; 0000 015E                             else{
                 _0x4C:
                 ; 0000 015F                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0034c2 940e b21b 	CALL SUBOPT_0x1
0034c4 940e b225 	CALL SUBOPT_0x2
                 _0x133:
0034c6 940e 4082 	CALL _IO_dout
                 ; 0000 0160                             }
                 ; 0000 0161                         }
                 ; 0000 0162                         else                                                // -- digital output disabled -- //
0034c8 c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0163                         {
                 ; 0000 0164                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
0034c9 940e b21b 	CALL SUBOPT_0x1
0034cb 940e b225 	CALL SUBOPT_0x2
0034cd 940e 4082 	CALL _IO_dout
                 ; 0000 0165                         }
                 _0x4E:
                 ; 0000 0166                     }
                +
0034cf 5f4f     +SUBI R20 , LOW ( - 1 )
0034d0 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0034d1 cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 0167                 }
                 ; 0000 0168                 else                                            // .. no event .. //
0034d2 c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 0169                 {
                 ; 0000 016A                     // -- no alarm -- // ^_^
                 ; 0000 016B                     buzzer_on = 0;                  // -- buzzer off -- //
0034d3 98f3      	CBI  0x1E,3
                 ; 0000 016C                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
0034d4 e040     +LDI R20 , LOW ( 0 )
0034d5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
0034d6 3042     +CPI R20 , LOW ( 2 )
0034d7 e0e0     +LDI R30 , HIGH ( 2 )
0034d8 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0034d9 f44c      	BRGE _0x54
                 ; 0000 016D                     {
                 ; 0000 016E                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0034da 940e b21b 	CALL SUBOPT_0x1
0034dc 940e b225 	CALL SUBOPT_0x2
0034de 940e 4082 	CALL _IO_dout
                 ; 0000 016F                     }
                +
0034e0 5f4f     +SUBI R20 , LOW ( - 1 )
0034e1 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0034e2 cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0170                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0171 
                 ; 0000 0172                 res = eventCapture();                           // -- send event packet if needed -- //
0034e3 d21a      	RCALL _eventCapture
0034e4 940e b316 	CALL SUBOPT_0x24
                 ; 0000 0173             }
                 ; 0000 0174             else                                                // .. alarm disable .. //
0034e6 c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0175             {
                 ; 0000 0176             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 0177                 // -- no alarm -- // ;-P
                 ; 0000 0178                 buzzer_on = 0;                      // -- buzzer off -- //
0034e7 98f3      	CBI  0x1E,3
                 ; 0000 0179                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
0034e8 e040     +LDI R20 , LOW ( 0 )
0034e9 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
0034ea 3042     +CPI R20 , LOW ( 2 )
0034eb e0e0     +LDI R30 , HIGH ( 2 )
0034ec 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0034ed f44c      	BRGE _0x5A
                 ; 0000 017A                 {
                 ; 0000 017B                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0034ee 940e b21b 	CALL SUBOPT_0x1
0034f0 940e b225 	CALL SUBOPT_0x2
0034f2 940e 4082 	CALL _IO_dout
                 ; 0000 017C                 }
                +
0034f4 5f4f     +SUBI R20 , LOW ( - 1 )
0034f5 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0034f6 cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 017D             }
                 _0x55:
                 ; 0000 017E 
                 ; 0000 017F             // -- check mute expired -- //
                 ; 0000 0180             if(muteMode){
0034f7 91e0 148b 	LDS  R30,_muteMode
0034f9 30e0      	CPI  R30,0
0034fa f059      	BREQ _0x5B
                 ; 0000 0181                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0182                 if(ALARM_checkMuteExpired()){
0034fb 940e 735e 	CALL _ALARM_checkMuteExpired
0034fd 9730      	SBIW R30,0
0034fe f039      	BREQ _0x5C
                 ; 0000 0183                     muteAlarmExpired = 0xFFFFFFFF;
0034ff 940e b31c 	CALL SUBOPT_0x25
003501 940e b321 	CALL SUBOPT_0x26
                 ; 0000 0184                     muteMode = 0;
003503 e0e0      	LDI  R30,LOW(0)
003504 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0185                 }
                 ; 0000 0186             }
                 _0x5C:
                 ; 0000 0187 
                 ; 0000 0188             // ---------------- Operating Mode ---------------- //
                 ; 0000 0189 //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 018A             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
                 _0x5B:
003506 91a0 11b6 	LDS  R26,_operating_config
003508 31a0      	CPI  R26,LOW(0x10)
003509 f011      	BREQ PC+3
00350a 940c 354c 	JMP _0x5D
                 ; 0000 018B             {
                 ; 0000 018C                 if(!duplicateListClear)
00350c 91e0 1425 	LDS  R30,_duplicateListClear
00350e 30e0      	CPI  R30,0
00350f f4a9      	BRNE _0x5E
                 ; 0000 018D                 {
                 ; 0000 018E                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
003510 a9a9     +LDD R26 , Y + 49
003511 a9ba     +LDD R27 , Y + 49 + 1
003512 a98b     +LDD R24 , Y + 49 + 2
003513 a99c     +LDD R25 , Y + 49 + 3
                 	__GETD2S 49
003514 940e 3edb 	CALL _TIMER_checkTimerExceed
003516 940e b316 	CALL SUBOPT_0x24
                 ; 0000 018F                     if(res != 0){
003518 940e b32a 	CALL SUBOPT_0x27
00351a 9730      	SBIW R30,0
00351b f031      	BREQ _0x5F
                 ; 0000 0190                         TIMER_setTimer(&clear_duplicate_timer, 10);
00351c 01fe      	MOVW R30,R28
00351d 96f1      	ADIW R30,49
00351e 940e b331 	CALL SUBOPT_0x28
                 ; 0000 0191                         ETH_clearDuplicateRequestCmd();
003520 940e 53d0 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 0192                     }
                 ; 0000 0193 
                 ; 0000 0194                     sensorDataSave();
                 _0x5F:
003522 d44d      	RCALL _sensorDataSave
                 ; 0000 0195                     eventSave();
003523 d4d0      	RCALL _eventSave
                 ; 0000 0196                 }
                 ; 0000 0197                 else
003524 c026      	RJMP _0x60
                 _0x5E:
                 ; 0000 0198                 {
                 ; 0000 0199                     if(TIMER_checkTimerExceed(status_report_timer))
                +
003525 01de     +MOVW R26 , R28
003526 5ca3     +SUBI R26 , LOW ( - 61 )
003527 4fbf     +SBCI R27 , HIGH ( - 61 )
003528 900d     +LD R0 , X +
003529 901d     +LD R1 , X +
00352a 918d     +LD R24 , X +
00352b 919c     +LD R25 , X
00352c 01d0     +MOVW R26 , R0
                 	__GETD2SX 61
00352d 940e 3edb 	CALL _TIMER_checkTimerExceed
00352f 9730      	SBIW R30,0
003530 f069      	BREQ _0x61
                 ; 0000 019A                     {
                 ; 0000 019B                         TIMER_setTimer(&status_report_timer, status_config.intv);
003531 01fe      	MOVW R30,R28
003532 96fd      	ADIW R30,61
003533 93fa      	ST   -Y,R31
003534 93ea      	ST   -Y,R30
                +
003535 91a0 1363+LDS R26 , _status_config + ( 1 )
003537 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
003539 2788      	CLR  R24
00353a 2799      	CLR  R25
00353b 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0000 019C 
                 ; 0000 019D                         statusReport();
00353d d2ec      	RCALL _statusReport
                 ; 0000 019E                     }
                 ; 0000 019F 
                 ; 0000 01A0                     // -- report log only when no realtime data not ready -- //
                 ; 0000 01A1                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
00353e d38c      	RCALL _sensorDataReport
00353f 9730      	SBIW R30,0
003540 f441      	BRNE _0x63
003541 d3dd      	RCALL _eventReport
003542 9730      	SBIW R30,0
003543 f429      	BRNE _0x63
003544 940e b339 	CALL SUBOPT_0x29
003546 940e cf28 	CALL __CPD02
003548 f008      	BRLO _0x64
                 _0x63:
003549 c001      	RJMP _0x62
                 _0x64:
                 ; 0000 01A2                     {
                 ; 0000 01A3                         logReport();
00354a d531      	RCALL _logReport
                 ; 0000 01A4                     }
                 ; 0000 01A5                 }
                 _0x62:
                 _0x60:
                 ; 0000 01A6             }
                 ; 0000 01A7             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
00354b c011      	RJMP _0x65
                 _0x5D:
00354c 91a0 11b6 	LDS  R26,_operating_config
00354e 32a0      	CPI  R26,LOW(0x20)
00354f f419      	BRNE _0x66
                 ; 0000 01A8             {
                 ; 0000 01A9                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 01AA                 sensorDataSave();
003550 d41f      	RCALL _sensorDataSave
                 ; 0000 01AB               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 01AC                 eventSave();
003551 d4a2      	RCALL _eventSave
                 ; 0000 01AD             }
                 ; 0000 01AE             else                                                // .. unknown mode .. //
003552 c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 01AF             {
                 ; 0000 01B0                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
003553 e6e3     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
003554 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
003555 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
003556 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
003557 940e cec8 	CALL __PUTPARD1
003559 91e0 11b6 	LDS  R30,_operating_config
00355b 940e b342 	CALL SUBOPT_0x2A
                 ; 0000 01B1             }
                 _0x67:
                 _0x65:
                 ; 0000 01B2 
                 ; 0000 01B3             #asm("wdr")
00355d 95a8      	wdr
                 ; 0000 01B4             if(timer_1sec_flag)
00355e 9bf2      	SBIS 0x1E,2
00355f c0b0      	RJMP _0x68
                 ; 0000 01B5             {
                 ; 0000 01B6               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 01B7                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
003560 a9ad     +LDD R26 , Y + 53
003561 a9be     +LDD R27 , Y + 53 + 1
003562 a98f     +LDD R24 , Y + 53 + 2
003563 ad98     +LDD R25 , Y + 53 + 3
                 	__GETD2S 53
003564 940e 3edb 	CALL _TIMER_checkTimerExceed
003566 9730      	SBIW R30,0
003567 f021      	BREQ _0x6A
003568 91a0 1482 	LDS  R26,_memoryStatus
00356a 30a1      	CPI  R26,LOW(0x1)
00356b f409      	BRNE _0x6B
                 _0x6A:
00356c c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 01B8                 {
                 ; 0000 01B9               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 01BA                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
00356d 940e b25c 	CALL SUBOPT_0x8
                 ; 0000 01BB 
                 ; 0000 01BC                     res = SD_readMemoryRemain(&sdFreeSpace);
00356f e6ab      	LDI  R26,LOW(_sdFreeSpace)
003570 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
003571 940e 76e8 	CALL _SD_readMemoryRemain
003573 940e b316 	CALL SUBOPT_0x24
                 ; 0000 01BD                     if(res < 0){
                +
003575 01de     +MOVW R26 , R28
003576 5aa8     +SUBI R26 , LOW ( - 88 )
003577 4fbf     +SBCI R27 , HIGH ( - 88 )
003578 91ac     +LD R26 , X
                 	__GETB2SX 88
003579 23aa      	TST  R26
00357a f432      	BRPL _0x6C
                 ; 0000 01BE                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
00357b e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
00357c e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
00357d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
00357e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
00357f 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 01BF                     }
                 ; 0000 01C0                 }
                 _0x6C:
                 ; 0000 01C1 
                 ; 0000 01C2                 if(currentPage == P_MONITOR)
                 _0x69:
003581 91e0 14df 	LDS  R30,_currentPage
003583 30e0      	CPI  R30,0
003584 f569      	BRNE _0x6D
                 ; 0000 01C3                 {
                 ; 0000 01C4               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 01C5                     OLED_showSensorValue();
003585 940e 73ea 	CALL _OLED_showSensorValue
                 ; 0000 01C6 
                 ; 0000 01C7                     for(i=0;i<2;i++){
                +
003587 e020     +LDI R18 , LOW ( 0 )
003588 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
003589 3022     +CPI R18 , LOW ( 2 )
00358a e0e0     +LDI R30 , HIGH ( 2 )
00358b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00358c f454      	BRGE _0x70
                 ; 0000 01C8                         OLED_showInputStatus(i,dinStatus[i]);
00358d 933a      	ST   -Y,R19
00358e 932a      	ST   -Y,R18
00358f 940e b348 	CALL SUBOPT_0x2B
003591 91ac      	LD   R26,X
003592 940e 74aa 	CALL _OLED_showInputStatus
                 ; 0000 01C9                     }
                +
003594 5f2f     +SUBI R18 , LOW ( - 1 )
003595 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003596 cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 01CA 
                 ; 0000 01CB                     for(i=0;i<2;i++){
                +
003597 e020     +LDI R18 , LOW ( 0 )
003598 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
003599 3022     +CPI R18 , LOW ( 2 )
00359a e0e0     +LDI R30 , HIGH ( 2 )
00359b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00359c f464      	BRGE _0x73
                 ; 0000 01CC                         OLED_showOutputStatus(i,doutStatus[i]);
00359d 933a      	ST   -Y,R19
00359e 932a      	ST   -Y,R18
00359f e7ae      	LDI  R26,LOW(_doutStatus)
0035a0 e1b4      	LDI  R27,HIGH(_doutStatus)
0035a1 0fa2      	ADD  R26,R18
0035a2 1fb3      	ADC  R27,R19
0035a3 91ac      	LD   R26,X
0035a4 940e 74cf 	CALL _OLED_showOutputStatus
                 ; 0000 01CD                     }
                +
0035a6 5f2f     +SUBI R18 , LOW ( - 1 )
0035a7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0035a8 cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01CE 
                 ; 0000 01CF                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01D0                     OLED_showDateTime(properties_config.timeZone);
                +
0035a9 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
0035ab e0b0      	LDI  R27,0
0035ac fda7      	SBRC R26,7
0035ad efbf      	SER  R27
0035ae 940e 73c6 	CALL _OLED_showDateTime
                 ; 0000 01D1 
                 ; 0000 01D2               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01D3                     OLED_showAlarmStatus();
0035b0 940e 7528 	CALL _OLED_showAlarmStatus
                 ; 0000 01D4                 }
                 ; 0000 01D5 
                 ; 0000 01D6               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01D7                 switch(powerSrcStatus){
                 _0x6D:
0035b2 91e0 147a 	LDS  R30,_powerSrcStatus
0035b4 940e b34d 	CALL SUBOPT_0x2C
                 ; 0000 01D8                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
0035b6 f439      	BRNE _0x77
0035b7 e0e0      	LDI  R30,LOW(0)
0035b8 93ea      	ST   -Y,R30
0035b9 940e b350 	CALL SUBOPT_0x2D
0035bb 940e 7467 	CALL _OLED_showPowerStatus
0035bd c00a      	RJMP _0x76
                 ; 0000 01D9                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
0035be 30e1      	CPI  R30,LOW(0x1)
0035bf e0a0      	LDI  R26,HIGH(0x1)
0035c0 07fa      	CPC  R31,R26
0035c1 f431      	BRNE _0x79
0035c2 e0e1      	LDI  R30,LOW(1)
0035c3 93ea      	ST   -Y,R30
0035c4 940e b355 	CALL SUBOPT_0x2E
0035c6 940e 7467 	CALL _OLED_showPowerStatus
                 ; 0000 01DA                     default             :   break;
                 _0x79:
                 ; 0000 01DB                 }
                 _0x76:
                 ; 0000 01DC 
                 ; 0000 01DD             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01DE                 switch(serverCommStatus){
0035c8 91e0 1480 	LDS  R30,_serverCommStatus
0035ca 940e b34d 	CALL SUBOPT_0x2C
                 ; 0000 01DF                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
0035cc f411      	BRNE _0x7D
0035cd e0a2      	LDI  R26,LOW(2)
0035ce c007      	RJMP _0x134
                 ; 0000 01E0                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
0035cf 30e2      	CPI  R30,LOW(0x2)
0035d0 e0a0      	LDI  R26,HIGH(0x2)
0035d1 07fa      	CPC  R31,R26
0035d2 f411      	BRNE _0x7F
0035d3 e0a1      	LDI  R26,LOW(1)
0035d4 c001      	RJMP _0x134
                 ; 0000 01E1                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
0035d5 e0a0      	LDI  R26,LOW(0)
                 _0x134:
0035d6 940e 7500 	CALL _OLED_showServerCommStatus
                 ; 0000 01E2                 }
                 ; 0000 01E3 
                 ; 0000 01E4             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01E5                 switch(lanStatus){
0035d8 91e0 1481 	LDS  R30,_lanStatus
0035da 940e b34d 	CALL SUBOPT_0x2C
                 ; 0000 01E6                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
0035dc f421      	BRNE _0x83
0035dd e0a1      	LDI  R26,LOW(1)
0035de 940e 750a 	CALL _OLED_showLanStatus
0035e0 c007      	RJMP _0x82
                 ; 0000 01E7                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
0035e1 30e1      	CPI  R30,LOW(0x1)
0035e2 e0a0      	LDI  R26,HIGH(0x1)
0035e3 07fa      	CPC  R31,R26
0035e4 f419      	BRNE _0x85
0035e5 e0a0      	LDI  R26,LOW(0)
0035e6 940e 750a 	CALL _OLED_showLanStatus
                 ; 0000 01E8                     default                     :   break;
                 _0x85:
                 ; 0000 01E9                 }
                 _0x82:
                 ; 0000 01EA 
                 ; 0000 01EB             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 01EC                 if(muteMode){
0035e8 91e0 148b 	LDS  R30,_muteMode
0035ea 30e0      	CPI  R30,0
0035eb f011      	BREQ _0x86
                 ; 0000 01ED                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
0035ec e0a2      	LDI  R26,LOW(2)
0035ed c007      	RJMP _0x135
                 ; 0000 01EE                 }
                 ; 0000 01EF                 else if(buzz_config.enable == 0x01){
                 _0x86:
0035ee 91a0 133d 	LDS  R26,_buzz_config
0035f0 30a1      	CPI  R26,LOW(0x1)
0035f1 f411      	BRNE _0x88
                 ; 0000 01F0                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
0035f2 e0a0      	LDI  R26,LOW(0)
0035f3 c001      	RJMP _0x135
                 ; 0000 01F1                 }
                 ; 0000 01F2                 else{
                 _0x88:
                 ; 0000 01F3                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
0035f4 e0a1      	LDI  R26,LOW(1)
                 _0x135:
0035f5 940e 7514 	CALL _OLED_showBuzzerStatus
                 ; 0000 01F4                 }
                 ; 0000 01F5 
                 ; 0000 01F6            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 01F7                 switch(memoryStatus){
0035f7 91e0 1482 	LDS  R30,_memoryStatus
0035f9 940e b34d 	CALL SUBOPT_0x2C
                 ; 0000 01F8                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
0035fb f421      	BRNE _0x8D
0035fc e0a0      	LDI  R26,LOW(0)
0035fd 940e 751e 	CALL _OLED_showMemoryStatus
0035ff c00f      	RJMP _0x8C
                 ; 0000 01F9                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
003600 30e1      	CPI  R30,LOW(0x1)
003601 e0a0      	LDI  R26,HIGH(0x1)
003602 07fa      	CPC  R31,R26
003603 f421      	BRNE _0x8E
003604 e0a1      	LDI  R26,LOW(1)
003605 940e 751e 	CALL _OLED_showMemoryStatus
003607 c007      	RJMP _0x8C
                 ; 0000 01FA                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
003608 30e2      	CPI  R30,LOW(0x2)
003609 e0a0      	LDI  R26,HIGH(0x2)
00360a 07fa      	CPC  R31,R26
00360b f419      	BRNE _0x90
00360c e0a2      	LDI  R26,LOW(2)
00360d 940e 751e 	CALL _OLED_showMemoryStatus
                 ; 0000 01FB                     default                 :   break;
                 _0x90:
                 ; 0000 01FC                 }
                 _0x8C:
                 ; 0000 01FD 
                 ; 0000 01FE                 timer_1sec_flag = 0;
00360f 98f2      	CBI  0x1E,2
                 ; 0000 01FF             }
                 ; 0000 0200         } // -- device enable -- //
                 _0x68:
                 ; 0000 0201         else                                                    // ----- device disable ----- //
003610 c075      	RJMP _0x93
                 _0x2D:
                 ; 0000 0202         {
                 ; 0000 0203             // -- no alarm -- // ;-P
                 ; 0000 0204             buzzer_on = 0;                      // -- buzzer off -- //
003611 98f3      	CBI  0x1E,3
                 ; 0000 0205             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
003612 e040     +LDI R20 , LOW ( 0 )
003613 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
003614 3042     +CPI R20 , LOW ( 2 )
003615 e0e0     +LDI R30 , HIGH ( 2 )
003616 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003617 f44c      	BRGE _0x98
                 ; 0000 0206             {
                 ; 0000 0207                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003618 940e b21b 	CALL SUBOPT_0x1
00361a 940e b225 	CALL SUBOPT_0x2
00361c 940e 4082 	CALL _IO_dout
                 ; 0000 0208             }
                +
00361e 5f4f     +SUBI R20 , LOW ( - 1 )
00361f 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003620 cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 0209 
                 ; 0000 020A 
                 ; 0000 020B             if(TEMP_SEL == TEMP_TYPE_K){
003621 940e b35e 	CALL SUBOPT_0x2F
003623 f011      	BREQ PC+3
003624 940c 3668 	JMP _0x99
                 ; 0000 020C                 if(hwCalId == 9){
003626 91a0 10f4 	LDS  R26,_hwCalId
003628 91b0 10f5 	LDS  R27,_hwCalId+1
00362a 9719      	SBIW R26,9
00362b f439      	BRNE _0x9A
                 ; 0000 020D                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
00362c ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
00362d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
00362e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
00362f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
003630 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 020E                 }
                 ; 0000 020F                 else if(SENSOR_CONNECT){
003632 c032      	RJMP _0x9B
                 _0x9A:
003633 91e0 0106 	LDS  R30,262
003635 940e b369 	CALL SUBOPT_0x30
003637 f119      	BREQ _0x9C
                 ; 0000 0210                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
003638 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
003639 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
00363a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
00363b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
00363c 940e b36f 	CALL SUBOPT_0x31
00363e 2766      	CLR  R22
00363f 2777      	CLR  R23
003640 940e b36f 	CALL SUBOPT_0x31
003642 940e b376 	CALL SUBOPT_0x32
003644 940e b2e1 	CALL SUBOPT_0x1B
003646 937f      	PUSH R23
003647 936f      	PUSH R22
003648 93ff      	PUSH R31
003649 93ef      	PUSH R30
00364a 940e b37b 	CALL SUBOPT_0x33
00364c 91af      	POP  R26
00364d 91bf      	POP  R27
00364e 918f      	POP  R24
00364f 919f      	POP  R25
003650 940e cc81 	CALL __MULF12
                +
003652 e0a0     +LDI R26 , LOW ( 0x42C80000 )
003653 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
003654 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
003655 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
003656 940e cc81 	CALL __MULF12
003658 940e b300 	CALL SUBOPT_0x21
                 ; 0000 0211                 }
                 ; 0000 0212                 else{
00365a c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 0213                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
00365b e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
00365c e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
00365d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
00365e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
00365f 940e b36f 	CALL SUBOPT_0x31
003661 940e b388 	CALL SUBOPT_0x34
003663 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 0214                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 0215                 delay_ms(200);
003665 940e b38d 	CALL SUBOPT_0x35
                 ; 0000 0216             }
                 ; 0000 0217             else if(TEMP_SEL == TEMP_TMEC){
003667 c01e      	RJMP _0x9E
                 _0x99:
003668 940e b35e 	CALL SUBOPT_0x2F
00366a 30e1      	CPI  R30,LOW(0x1)
00366b f429      	BRNE _0x9F
                 ; 0000 0218                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
00366c e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
00366d e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
00366e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
00366f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
003670 c011      	RJMP _0x136
                 ; 0000 0219             }
                 ; 0000 021A             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
003671 940e b35e 	CALL SUBOPT_0x2F
003673 30e2      	CPI  R30,LOW(0x2)
003674 f429      	BRNE _0xA1
                 ; 0000 021B                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
003675 ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
003676 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
003677 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
003678 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
003679 c008      	RJMP _0x136
                 ; 0000 021C             }
                 ; 0000 021D             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
00367a 940e b35e 	CALL SUBOPT_0x2F
00367c 30e3      	CPI  R30,LOW(0x3)
00367d f441      	BRNE _0xA3
                 ; 0000 021E                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
00367e e1e5     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
00367f e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
003680 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
003681 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
003682 940e cec8 	CALL __PUTPARD1
003684 940e b391 	CALL SUBOPT_0x36
                 ; 0000 021F             }
                 ; 0000 0220         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 0221 
                 ; 0000 0222         #asm("wdr")
003686 95a8      	wdr
                 ; 0000 0223     }
003687 cce6      	RJMP _0x10
                 ; 0000 0224 
                 ; 0000 0225 }
                 _0xA4:
003688 cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 022D {
                 _updateStatus:
                 ; 0000 022E     int                 res=0, i=0, err=0;
                 ; 0000 022F     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0230 
                 ; 0000 0231     // --------------- Update Sensor's Event --------------- //
                 ; 0000 0232     for(i=0;i<MAX_SENS_CHANNEL;i++)
003689 940e b396 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
00368b e020     +LDI R18 , LOW ( 0 )
00368c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
00368d 3025     +CPI R18 , LOW ( 5 )
00368e e0e0     +LDI R30 , HIGH ( 5 )
00368f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003690 f4dc      	BRGE _0xA8
                 ; 0000 0233     {
                 ; 0000 0234         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003691 940e b231 	CALL SUBOPT_0x4
003693 f0a9      	BREQ _0xA9
                 ; 0000 0235         {
                 ; 0000 0236             // ----------- Update Probe Status ------------------------- //
                 ; 0000 0237             err =   updateSensorStatus(i);
003694 01d9      	MOVW R26,R18
003695 940e 6ba4 	CALL _updateSensorStatus
003697 01af      	MOVW R20,R30
                 ; 0000 0238             if(err >= 0){
003698 2355      	TST  R21
003699 f07a      	BRMI _0xAA
                 ; 0000 0239                 res |=  err;
                +
00369a 2b04     +OR R16 , R20
00369b 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 023A                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
00369c 940e b39b 	CALL SUBOPT_0x38
00369e f019      	BREQ _0xAC
00369f 2e04      	MOV  R0,R20
0036a0 2a05      	OR   R0,R21
0036a1 f009      	BREQ _0xAD
                 _0xAC:
0036a2 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 023B                 {
                 ; 0000 023C                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 023D                     err =   updateDataStatus(i);
0036a3 01d9      	MOVW R26,R18
0036a4 940e 6bdb 	CALL _updateDataStatus
0036a6 01af      	MOVW R20,R30
                 ; 0000 023E                     res |=  err;
                +
0036a7 2b04     +OR R16 , R20
0036a8 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 023F                 }
                 ; 0000 0240             }
                 _0xAB:
                 ; 0000 0241         }
                 _0xAA:
                 ; 0000 0242     }
                 _0xA9:
                +
0036a9 5f2f     +SUBI R18 , LOW ( - 1 )
0036aa 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036ab cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 0243 
                 ; 0000 0244     // --- Update Battery Status --- //
                 ; 0000 0245     err =   updateBatteryStatus();
0036ac 940e 6ac8 	CALL _updateBatteryStatus
0036ae 01af      	MOVW R20,R30
                 ; 0000 0246     res |=  err;
                +
0036af 2b04     +OR R16 , R20
0036b0 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0247     // --- Update Digital Input Status --- //
                 ; 0000 0248     err =   updateDinStatus();
0036b1 940e 6cc4 	CALL _updateDinStatus
0036b3 01af      	MOVW R20,R30
                 ; 0000 0249     res |=  err;
                +
0036b4 2b04     +OR R16 , R20
0036b5 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 024A     // --- Update Digital Output Status --- //
                 ; 0000 024B     err =   updateDoutStatus();
0036b6 940e 6d40 	CALL _updateDoutStatus
0036b8 01af      	MOVW R20,R30
                 ; 0000 024C     res |=  err;
                +
0036b9 2b04     +OR R16 , R20
0036ba 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 024D     // --- Update Analog Input Status --- //
                 ; 0000 024E     // --- Update Communication Status --- //
                 ; 0000 024F     err =   updateCommStatus();
0036bb 940e 6b20 	CALL _updateCommStatus
0036bd 01af      	MOVW R20,R30
                 ; 0000 0250     if(err){
0036be 2e04      	MOV  R0,R20
0036bf 2a05      	OR   R0,R21
0036c0 f189      	BREQ _0xAE
                 ; 0000 0251 
                 ; 0000 0252         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
0036c1 940e b3a5 	CALL SUBOPT_0x39
0036c3 940e b3ae 	CALL SUBOPT_0x3A
0036c5 f029      	BREQ _0xB0
0036c6 940e b3a5 	CALL SUBOPT_0x39
0036c8 940e cf28 	CALL __CPD02
0036ca f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 0253             TIMER_setTimer(&ETH_rst_timer,15);
0036cb eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
0036cc e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
0036cd 940e b3b6 	CALL SUBOPT_0x3B
                 ; 0000 0254             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
0036cf e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
0036d0 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
0036d1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
0036d2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
0036d3 940e b3be 	CALL SUBOPT_0x3C
0036d5 940e b3be 	CALL SUBOPT_0x3C
0036d7 940e b300 	CALL SUBOPT_0x21
                 ; 0000 0255         }
                 ; 0000 0256 
                 ; 0000 0257         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
0036d9 940e b3a5 	CALL SUBOPT_0x39
0036db 940e 3edb 	CALL _TIMER_checkTimerExceed
0036dd 30e1      	CPI  R30,LOW(0x1)
0036de e0a0      	LDI  R26,HIGH(0x1)
0036df 07fa      	CPC  R31,R26
0036e0 f489      	BRNE _0xB2
                 ; 0000 0258             ETH_NORM;
0036e1 91e0 0102 	LDS  R30,258
0036e3 77ef      	ANDI R30,0x7F
0036e4 93e0 0102 	STS  258,R30
                 ; 0000 0259             ETH_reset();
0036e6 940e 5e63 	CALL _ETH_reset
                 ; 0000 025A             ETH_rst_timer = 0xFFFFFFFF;
0036e8 940e b31c 	CALL SUBOPT_0x25
0036ea 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
0036ec 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
0036ee 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
0036f0 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 025B         }
                 ; 0000 025C     }
                 _0xB2:
                 ; 0000 025D     res |=  err;
                 _0xAE:
                +
0036f2 2b04     +OR R16 , R20
0036f3 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 025E     // --- Update Memory Card Status --- //
                 ; 0000 025F     err =   updateMemoryStatus();
0036f4 940e 6b84 	CALL _updateMemoryStatus
0036f6 01af      	MOVW R20,R30
                 ; 0000 0260     res |=  err;
                +
0036f7 2b04     +OR R16 , R20
0036f8 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0261 
                 ; 0000 0262     return res;
0036f9 01f8      	MOVW R30,R16
0036fa 940e cf3f 	CALL __LOADLOCR6
0036fc 9626      	ADIW R28,6
0036fd 9508      	RET
                 ; 0000 0263 }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 0266 {
                 _eventCapture:
                 ; 0000 0267     int                 res=0, i=0, err=0;
                 ; 0000 0268     unsigned long int   timestamp_rd;
                 ; 0000 0269     unsigned char       statusCode;
                 ; 0000 026A 
                 ; 0000 026B     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 026C     err =   checkSendMIPAlarm(&statusCode);
0036fe 9725      	SBIW R28,5
0036ff 940e b396 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
003701 01de      	MOVW R26,R28
003702 9616      	ADIW R26,6
003703 940e 7120 	CALL _checkSendMIPAlarm
003705 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 026D     res |=  err;
                 ; 0000 026E     if(err){
003707 f0c1      	BREQ _0xB3
                 ; 0000 026F         timestamp_rd    = DS1672_read();
003708 940e b3d9 	CALL SUBOPT_0x3E
                 ; 0000 0270         if(statusCode)
00370a f029      	BREQ _0xB4
                 ; 0000 0271         {
                 ; 0000 0272             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
00370b e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
00370c e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
00370d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
00370e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
00370f c004      	RJMP _0x137
                 ; 0000 0273             //printOLED("AL12%1d",i+1);
                 ; 0000 0274         }
                 ; 0000 0275         else
                 _0xB4:
                 ; 0000 0276         {
                 ; 0000 0277             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
003710 ece2     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
003711 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
003712 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
003713 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
003714 940e cec8 	CALL __PUTPARD1
003716 940e b391 	CALL SUBOPT_0x36
                 ; 0000 0278             //printOLED("AL02%1d",i+1);
                 ; 0000 0279         }
                 ; 0000 027A         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
003718 940e b3e2 	CALL SUBOPT_0x3F
00371a e1e0      	LDI  R30,LOW(16)
00371b 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 027B         if(err < 0){
00371d f412      	BRPL _0xB6
                 ; 0000 027C             printDebug("<eventCapture> addEventQueue() failed\r\n");
00371e 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 027D         }
                 ; 0000 027E     }
                 _0xB6:
                 ; 0000 027F 
                 ; 0000 0280     /*
                 ; 0000 0281     // -- Analog Input Event -- //
                 ; 0000 0282     // -- reserved -- //
                 ; 0000 0283     */
                 ; 0000 0284     // --------------- Check for Power Down Event --------------- //
                 ; 0000 0285     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
003720 01de      	MOVW R26,R28
003721 9616      	ADIW R26,6
003722 940e 7135 	CALL _checkSendPowerAlarm
003724 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 0286     res |=  err;
                 ; 0000 0287     if(err){
003726 f0c1      	BREQ _0xB7
                 ; 0000 0288         timestamp_rd    = DS1672_read();
003727 940e b3d9 	CALL SUBOPT_0x3E
                 ; 0000 0289         if(statusCode)
003729 f029      	BREQ _0xB8
                 ; 0000 028A         {
                 ; 0000 028B             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
00372a e2e7     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
00372b e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
00372c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
00372d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
00372e c004      	RJMP _0x138
                 ; 0000 028C             //printOLED("AL12%1d",i+1);
                 ; 0000 028D         }
                 ; 0000 028E         else
                 _0xB8:
                 ; 0000 028F         {
                 ; 0000 0290             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
00372f e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
003730 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
003731 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
003732 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
003733 940e cec8 	CALL __PUTPARD1
003735 940e b391 	CALL SUBOPT_0x36
                 ; 0000 0291             //printOLED("AL02%1d",i+1);
                 ; 0000 0292         }
                 ; 0000 0293         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
003737 940e b3e2 	CALL SUBOPT_0x3F
003739 e5e0      	LDI  R30,LOW(80)
00373a 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 0294         if(err < 0){
00373c f412      	BRPL _0xBA
                 ; 0000 0295             printDebug("<eventCapture> addEventQueue() failed\r\n");
00373d 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 0296         }
                 ; 0000 0297     }
                 _0xBA:
                 ; 0000 0298 
                 ; 0000 0299     // --------------- Check for Battery Event --------------- //
                 ; 0000 029A     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
00373f 01de      	MOVW R26,R28
003740 9616      	ADIW R26,6
003741 940e 717d 	CALL _checkSendBatteryAlarm
003743 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 029B     res |=  err;
                 ; 0000 029C     if(err){
003745 f0c1      	BREQ _0xBB
                 ; 0000 029D         timestamp_rd    = DS1672_read();
003746 940e b3d9 	CALL SUBOPT_0x3E
                 ; 0000 029E         if(statusCode)
003748 f029      	BREQ _0xBC
                 ; 0000 029F         {
                 ; 0000 02A0             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
003749 e8ef     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
00374a e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
00374b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
00374c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
00374d c004      	RJMP _0x139
                 ; 0000 02A1             //printOLED("AL12%1d",i+1);
                 ; 0000 02A2         }
                 ; 0000 02A3         else
                 _0xBC:
                 ; 0000 02A4         {
                 ; 0000 02A5             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
00374e ece0     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
00374f e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
003750 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
003751 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
003752 940e cec8 	CALL __PUTPARD1
003754 940e b391 	CALL SUBOPT_0x36
                 ; 0000 02A6             //printOLED("AL02%1d",i+1);
                 ; 0000 02A7         }
                 ; 0000 02A8         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
003756 940e b3e2 	CALL SUBOPT_0x3F
003758 e5e1      	LDI  R30,LOW(81)
003759 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 02A9         if(err < 0){
00375b f412      	BRPL _0xBE
                 ; 0000 02AA             printDebug("<eventCapture> addEventQueue() failed\r\n");
00375c 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 02AB         }
                 ; 0000 02AC     }
                 _0xBE:
                 ; 0000 02AD 
                 ; 0000 02AE     // --------------- Check for Memory Event --------------- //
                 ; 0000 02AF     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
00375e 01de      	MOVW R26,R28
00375f 9616      	ADIW R26,6
003760 940e 71d6 	CALL _checkSendMemoryAlarm
003762 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 02B0     res |=  err;
                 ; 0000 02B1     if(err){
003764 f131      	BREQ _0xBF
                 ; 0000 02B2         timestamp_rd    = DS1672_read();
003765 940e 426e 	CALL _DS1672_read
                +
003767 83ef     +STD Y + 7 , R30
003768 87f8     +STD Y + 7 + 1 , R31
003769 8769     +STD Y + 7 + 2 , R22
00376a 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 02B3         if(statusCode == ES_LOWMEMORY)
00376b 81ae      	LDD  R26,Y+6
00376c 30a1      	CPI  R26,LOW(0x1)
00376d f429      	BRNE _0xC0
                 ; 0000 02B4         {
                 ; 0000 02B5             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
00376e efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
00376f e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
003770 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
003771 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
003772 c00c      	RJMP _0x13A
                 ; 0000 02B6             //printOLED("AL12%1d",i+1);
                 ; 0000 02B7         }
                 ; 0000 02B8         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
003773 81ae      	LDD  R26,Y+6
003774 30a2      	CPI  R26,LOW(0x2)
003775 f429      	BRNE _0xC2
                 ; 0000 02B9         {
                 ; 0000 02BA             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
003776 e2e0     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
003777 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
003778 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
003779 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
00377a c004      	RJMP _0x13A
                 ; 0000 02BB             //printOLED("AL12%1d",i+1);
                 ; 0000 02BC         }
                 ; 0000 02BD         else
                 _0xC2:
                 ; 0000 02BE         {
                 ; 0000 02BF             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
00377b e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
00377c e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
00377d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
00377e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
00377f 940e cec8 	CALL __PUTPARD1
003781 940e b391 	CALL SUBOPT_0x36
                 ; 0000 02C0             //printOLED("AL02%1d",i+1);
                 ; 0000 02C1         }
                 ; 0000 02C2         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
003783 940e b3e2 	CALL SUBOPT_0x3F
003785 e7e0      	LDI  R30,LOW(112)
003786 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 02C3         if(err < 0){
003788 f412      	BRPL _0xC4
                 ; 0000 02C4             printDebug("<eventCapture> addEventQueue() failed\r\n");
003789 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 02C5         }
                 ; 0000 02C6     }
                 _0xC4:
                 ; 0000 02C7 
                 ; 0000 02C8     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 02C9     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
00378b e020     +LDI R18 , LOW ( 0 )
00378c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
00378d 3022     +CPI R18 , LOW ( 2 )
00378e e0e0     +LDI R30 , HIGH ( 2 )
00378f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003790 f544      	BRGE _0xC7
                 ; 0000 02CA     {
                 ; 0000 02CB         if(din_config[i].channelEnable)
003791 940e b2af 	CALL SUBOPT_0x15
003793 81e0      	LD   R30,Z
003794 30e0      	CPI  R30,0
003795 f101      	BREQ _0xC8
                 ; 0000 02CC         {
                 ; 0000 02CD             err =   checkSendDinAlarm(i,&statusCode);
003796 940e b3f5 	CALL SUBOPT_0x42
003798 940e 7224 	CALL _checkSendDinAlarm
00379a 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 02CE             res |=  err;
                 ; 0000 02CF             if(err){
00379c f0c9      	BREQ _0xC9
                 ; 0000 02D0                 timestamp_rd    = DS1672_read();
00379d 940e b3d9 	CALL SUBOPT_0x3E
                 ; 0000 02D1                 if(statusCode)
00379f f029      	BREQ _0xCA
                 ; 0000 02D2                 {
                 ; 0000 02D3                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
0037a0 e8e1     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
0037a1 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
0037a2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
0037a3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
0037a4 c004      	RJMP _0x13B
                 ; 0000 02D4                     //printOLED("AL12%1d",i+1);
                 ; 0000 02D5                 }
                 ; 0000 02D6                 else
                 _0xCA:
                 ; 0000 02D7                 {
                 ; 0000 02D8                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
0037a5 ebe4     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
0037a6 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
0037a7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
0037a8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
0037a9 940e cec8 	CALL __PUTPARD1
0037ab 940e b3fa 	CALL SUBOPT_0x43
                 ; 0000 02D9                     //printOLED("AL02%1d",i+1);
                 ; 0000 02DA                 }
                 ; 0000 02DB                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
0037ad 940e b3e2 	CALL SUBOPT_0x3F
0037af 2fe2      	MOV  R30,R18
0037b0 6ce0      	ORI  R30,LOW(0xC0)
0037b1 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 02DC                 if(err < 0){
0037b3 f412      	BRPL _0xCC
                 ; 0000 02DD                     printDebug("<eventCapture> addEventQueue() failed\r\n");
0037b4 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 02DE                 }
                 ; 0000 02DF             }
                 _0xCC:
                 ; 0000 02E0         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02E1     }// -- for loop -- //
                 _0xC8:
                +
0037b6 5f2f     +SUBI R18 , LOW ( - 1 )
0037b7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0037b8 cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02E2 
                 ; 0000 02E3     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02E4     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0037b9 e020     +LDI R18 , LOW ( 0 )
0037ba e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
0037bb 3025     +CPI R18 , LOW ( 5 )
0037bc e0e0     +LDI R30 , HIGH ( 5 )
0037bd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0037be f014      	BRLT PC+3
0037bf 940c 3825 	JMP _0xCF
                 ; 0000 02E5     {
                 ; 0000 02E6         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
0037c1 940e b231 	CALL SUBOPT_0x4
0037c3 f411      	BRNE PC+3
0037c4 940c 3822 	JMP _0xD0
                 ; 0000 02E7         {
                 ; 0000 02E8             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 02E9             err =   checkSendSensorAlarm(i,&statusCode);
0037c6 940e b3f5 	CALL SUBOPT_0x42
0037c8 940e 7286 	CALL _checkSendSensorAlarm
0037ca 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 02EA             res |=  err;
                 ; 0000 02EB             if(err){
0037cc f131      	BREQ _0xD1
                 ; 0000 02EC                 timestamp_rd    = DS1672_read();
0037cd 940e b3d9 	CALL SUBOPT_0x3E
                 ; 0000 02ED                 if(statusCode)
0037cf f059      	BREQ _0xD2
                 ; 0000 02EE                 {
                 ; 0000 02EF                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
0037d0 eee8     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
0037d1 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
0037d2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
0037d3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
0037d4 940e b401 	CALL SUBOPT_0x44
                 ; 0000 02F0                     printOLED("AL12%1d",i+1);
                +
0037d6 e2e1     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
0037d7 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
0037d8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
0037d9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
0037da c00a      	RJMP _0x13C
                 ; 0000 02F1                 }
                 ; 0000 02F2                 else
                 _0xD2:
                 ; 0000 02F3                 {
                 ; 0000 02F4                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
0037db e2e9     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
0037dc e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
0037dd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
0037de e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
0037df 940e b401 	CALL SUBOPT_0x44
                 ; 0000 02F5                     printOLED("AL02%1d",i+1);
                +
0037e1 e5ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
0037e2 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
0037e3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
0037e4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
0037e5 940e cec8 	CALL __PUTPARD1
0037e7 940e b404 	CALL SUBOPT_0x45
                 ; 0000 02F6                 }
                 ; 0000 02F7 
                 ; 0000 02F8                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
0037e9 940e b3e2 	CALL SUBOPT_0x3F
0037eb 2fe2      	MOV  R30,R18
0037ec 6fe0      	ORI  R30,LOW(0xF0)
0037ed 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 02F9                 if(err < 0){
0037ef f412      	BRPL _0xD4
                 ; 0000 02FA                     printDebug("<eventCapture> addEventQueue() failed\r\n");
0037f0 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 02FB                 }
                 ; 0000 02FC             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 02FD             else
0037f2 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 02FE             {
                 ; 0000 02FF                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
0037f3 940e b39b 	CALL SUBOPT_0x38
0037f5 f161      	BREQ _0xD6
                 ; 0000 0300                 {
                 ; 0000 0301                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 0302                     err =   checkSendDataAlarm(i,&statusCode);
0037f6 940e b3f5 	CALL SUBOPT_0x42
0037f8 940e 72ea 	CALL _checkSendDataAlarm
0037fa 940e b3d3 	CALL SUBOPT_0x3D
                 ; 0000 0303                     res |=  err;
                 ; 0000 0304                     if(err){
0037fc f129      	BREQ _0xD7
                 ; 0000 0305                         timestamp_rd    = DS1672_read();
0037fd 940e b3d9 	CALL SUBOPT_0x3E
                 ; 0000 0306                         if(statusCode)
0037ff f059      	BREQ _0xD8
                 ; 0000 0307                         {
                 ; 0000 0308                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
003800 e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
003801 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003802 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003803 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003804 940e b401 	CALL SUBOPT_0x44
                 ; 0000 0309                             printOLED("AL12%1d",i+1);
                +
003806 e2e1     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003807 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003808 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003809 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
00380a c00a      	RJMP _0x13D
                 ; 0000 030A                         }
                 ; 0000 030B                         else
                 _0xD8:
                 ; 0000 030C                         {
                 ; 0000 030D                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
00380b eae7     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
00380c e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
00380d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
00380e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
00380f 940e b401 	CALL SUBOPT_0x44
                 ; 0000 030E                             printOLED("AL02%1d",i+1);
                +
003811 e5ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003812 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003813 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003814 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003815 940e cec8 	CALL __PUTPARD1
003817 940e b404 	CALL SUBOPT_0x45
                 ; 0000 030F                         }
                 ; 0000 0310                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003819 940e b3e2 	CALL SUBOPT_0x3F
00381b 2fe2      	MOV  R30,R18
00381c 6ee0      	ORI  R30,LOW(0xE0)
00381d 940e b3e9 	CALL SUBOPT_0x40
                 ; 0000 0311                         if(err < 0){
00381f f412      	BRPL _0xDA
                 ; 0000 0312                             printDebug("<eventCapture> addEventQueue() failed\r\n");
003820 940e b3f0 	CALL SUBOPT_0x41
                 ; 0000 0313                         }
                 ; 0000 0314                     }
                 _0xDA:
                 ; 0000 0315                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 0316             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 0317         }// -- sensor Enable -- //
                 ; 0000 0318     }// -- for loop -- //
                 _0xD0:
                +
003822 5f2f     +SUBI R18 , LOW ( - 1 )
003823 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003824 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 0319 
                 ; 0000 031A 
                 ; 0000 031B     return res;
003825 01f8      	MOVW R30,R16
003826 940e cf3f 	CALL __LOADLOCR6
003828 962b      	ADIW R28,11
003829 9508      	RET
                 ; 0000 031C }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 0324 {
                 _statusReport:
                 ; 0000 0325     int                     res = 0;
                 ; 0000 0326     unsigned long int       timestamp_rd;
                 ; 0000 0327     unsigned char           *param;
                 ; 0000 0328     int                     paramLen = 0;
                 ; 0000 0329 
                 ; 0000 032A     unsigned short          deviceState;
                 ; 0000 032B 
                 ; 0000 032C     switch (status_config.accm)
00382a 9726      	SBIW R28,6
00382b 940e b40f 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
00382d e040     +LDI R20 , LOW ( 0 )
00382e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00382f 91e0 1362 	LDS  R30,_status_config
003831 940e b414 	CALL SUBOPT_0x47
                 ; 0000 032D     {
                 ; 0000 032E         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
003833 f449      	BRNE _0xDE
                +
003834 eee4     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
003835 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
003836 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
003837 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
003838 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 032F                                     return -1;
00383a efef      	LDI  R30,LOW(65535)
00383b efff      	LDI  R31,HIGH(65535)
00383c c08a      	RJMP _0x20E0095
                 ; 0000 0330         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
00383d 32e0      	CPI  R30,LOW(0x20)
00383e e0a0      	LDI  R26,HIGH(0x20)
00383f 07fa      	CPC  R31,R26
003840 f449      	BRNE _0xDF
                +
003841 e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
003842 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
003843 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
003844 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
003845 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0331                                     return -1;
003847 efef      	LDI  R30,LOW(65535)
003848 efff      	LDI  R31,HIGH(65535)
003849 c07d      	RJMP _0x20E0095
                 ; 0000 0332         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
00384a 33e0      	CPI  R30,LOW(0x30)
00384b e0a0      	LDI  R26,HIGH(0x30)
00384c 07fa      	CPC  R31,R26
00384d f011      	BREQ PC+3
00384e 940c 38a0 	JMP _0xE3
003850 940e b419 	CALL SUBOPT_0x48
003852 940e 96fc 	CALL _malloc
003854 019f      	MOVW R18,R30
                 ; 0000 0333                                     if(param == NULL){
003855 2e02      	MOV  R0,R18
003856 2a03      	OR   R0,R19
003857 f449      	BRNE _0xE1
                 ; 0000 0334                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
003858 e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
003859 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
00385a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
00385b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
00385c 940e b41c 	CALL SUBOPT_0x49
                 ; 0000 0335                                         return -1;
00385e efef      	LDI  R30,LOW(65535)
00385f efff      	LDI  R31,HIGH(65535)
003860 c066      	RJMP _0x20E0095
                 ; 0000 0336                                     }
                 ; 0000 0337 
                 ; 0000 0338                                     res = getDeviceState(&deviceState);
                 _0xE1:
003861 01de      	MOVW R26,R28
003862 9616      	ADIW R26,6
003863 940e 6d55 	CALL _getDeviceState
003865 018f      	MOVW R16,R30
                 ; 0000 0339                                     if(res<0){
003866 2311      	TST  R17
003867 f452      	BRPL _0xE2
                 ; 0000 033A                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
003868 e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
003869 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
00386a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
00386b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
00386c 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 033B                                         free ( param );
00386e 01d9      	MOVW R26,R18
00386f 940e b424 	CALL SUBOPT_0x4A
                 ; 0000 033C                                         return -1;
003871 c055      	RJMP _0x20E0095
                 ; 0000 033D                                     }
                 ; 0000 033E 
                 ; 0000 033F                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
003872 940e b429 	CALL SUBOPT_0x4B
003874 81ef      	LDD  R30,Y+7
003875 70f0      	ANDI R31,HIGH(0x0)
003876 93ec      	ST   X,R30
                 ; 0000 0340                                     param[paramLen++] = (deviceState & 0x00FF);
003877 940e b429 	CALL SUBOPT_0x4B
003879 81ee      	LDD  R30,Y+6
00387a 93ec      	ST   X,R30
                 ; 0000 0341                                     param[paramLen++] = powerSrcStatus;
00387b 940e b430 	CALL SUBOPT_0x4C
00387d 91a0 147a 	LDS  R26,_powerSrcStatus
00387f 83a0      	STD  Z+0,R26
                 ; 0000 0342 
                 ; 0000 0343 
                 ; 0000 0344                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
003880 01fa      	MOVW R30,R20
003881 0fe2      	ADD  R30,R18
003882 1ff3      	ADC  R31,R19
003883 93fa      	ST   -Y,R31
003884 93ea      	ST   -Y,R30
003885 e8e3      	LDI  R30,LOW(_batteryVolt)
003886 e1f4      	LDI  R31,HIGH(_batteryVolt)
003887 940e b436 	CALL SUBOPT_0x4D
                 ; 0000 0345                                     paramLen         += sizeof(batteryVolt);
                +
003889 5f4c     +SUBI R20 , LOW ( - 4 )
00388a 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 0346 
                 ; 0000 0347                                     param[paramLen++] = dinStatus[0];
00388b 940e b430 	CALL SUBOPT_0x4C
00388d 91a0 147c 	LDS  R26,_dinStatus
00388f 83a0      	STD  Z+0,R26
                 ; 0000 0348                                     param[paramLen++] = dinStatus[1];
003890 940e b430 	CALL SUBOPT_0x4C
                +
003892 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003894 83a0      	STD  Z+0,R26
                 ; 0000 0349                                     param[paramLen++] = doutStatus[0];
003895 940e b430 	CALL SUBOPT_0x4C
003897 91a0 147e 	LDS  R26,_doutStatus
003899 83a0      	STD  Z+0,R26
                 ; 0000 034A                                     param[paramLen++] = doutStatus[1];
00389a 940e b430 	CALL SUBOPT_0x4C
                +
00389c 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
00389e 83a0      	STD  Z+0,R26
                 ; 0000 034B 
                 ; 0000 034C                                     break;
00389f c00d      	RJMP _0xDD
                 ; 0000 034D         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
0038a0 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
0038a1 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
0038a2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
0038a3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
0038a4 940e cec8 	CALL __PUTPARD1
0038a6 91e0 1362 	LDS  R30,_status_config
0038a8 940e b342 	CALL SUBOPT_0x2A
                 ; 0000 034E                                     return -1;
0038aa efef      	LDI  R30,LOW(65535)
0038ab efff      	LDI  R31,HIGH(65535)
0038ac c01a      	RJMP _0x20E0095
                 ; 0000 034F     }
                 _0xDD:
                 ; 0000 0350 
                 ; 0000 0351     timestamp_rd = DS1672_read();
0038ad 940e b43c 	CALL SUBOPT_0x4E
                 ; 0000 0352 
                 ; 0000 0353     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
0038af 940e b443 	CALL SUBOPT_0x4F
0038b1 940e cec8 	CALL __PUTPARD1
0038b3 91e0 1362 	LDS  R30,_status_config
0038b5 93ea      	ST   -Y,R30
0038b6 933a      	ST   -Y,R19
0038b7 932a      	ST   -Y,R18
0038b8 01da      	MOVW R26,R20
0038b9 940e 5155 	CALL _ETH_sendStatusReportCmd
0038bb 018f      	MOVW R16,R30
                 ; 0000 0354     if(res < 0)
0038bc 2311      	TST  R17
0038bd f432      	BRPL _0xE4
                 ; 0000 0355     {
                 ; 0000 0356         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
0038be edea     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
0038bf e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
0038c0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
0038c1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
0038c2 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0357     }
                 ; 0000 0358 
                 ; 0000 0359     free ( param );
                 _0xE4:
0038c4 01d9      	MOVW R26,R18
0038c5 940e 9717 	CALL _free
                 ; 0000 035A }
                 _0x20E0095:
0038c7 940e cf3f 	CALL __LOADLOCR6
0038c9 962c      	ADIW R28,12
0038ca 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 035D {
                 _sensorDataReport:
                 ; 0000 035E     int                     count = 0;
                 ; 0000 035F     int                     res;
                 ; 0000 0360     unsigned long int       timestamp;
                 ; 0000 0361     unsigned int            channel;
                 ; 0000 0362     float                   value;
                 ; 0000 0363 
                 ; 0000 0364     // -- for debug -- //
                 ; 0000 0365     //struct rtc_structure    dt;
                 ; 0000 0366     // --------------- //
                 ; 0000 0367     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 0368 
                 ; 0000 0369     while (count < MAX_DATA_QUEUE)
0038cb 9728      	SBIW R28,8
0038cc 940e b40f 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
0038ce 300a     +CPI R16 , LOW ( 10 )
0038cf e0e0     +LDI R30 , HIGH ( 10 )
0038d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
0038d1 f014      	BRLT PC+3
0038d2 940c 391a 	JMP _0xE7
                 ; 0000 036A     {
                 ; 0000 036B         res = fetchDataQueue(&timestamp, &channel, &value);
0038d4 01fe      	MOVW R30,R28
0038d5 963a      	ADIW R30,10
0038d6 93fa      	ST   -Y,R31
0038d7 93ea      	ST   -Y,R30
0038d8 b7ed      	IN   R30,SPL
0038d9 b7fe      	IN   R31,SPH
0038da 9731      	SBIW R30,1
0038db 93fa      	ST   -Y,R31
0038dc 93ea      	ST   -Y,R30
0038dd 935f      	PUSH R21
0038de 934f      	PUSH R20
0038df 01de      	MOVW R26,R28
0038e0 961a      	ADIW R26,10
0038e1 940e 6a97 	CALL _fetchDataQueue
0038e3 914f      	POP  R20
0038e4 915f      	POP  R21
0038e5 019f      	MOVW R18,R30
                 ; 0000 036C         if(res < 0)
0038e6 2333      	TST  R19
0038e7 f192      	BRMI _0xE7
                 ; 0000 036D         {
                 ; 0000 036E             break;
                 ; 0000 036F         }
                 ; 0000 0370         else
                 ; 0000 0371         {
                 ; 0000 0372             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
0038e8 e0ec     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
0038e9 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
0038ea e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
0038eb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
0038ec 940e b448 	CALL SUBOPT_0x50
0038ee 01fa      	MOVW R30,R20
0038ef 940e b388 	CALL SUBOPT_0x34
0038f1 940e b451 	CALL SUBOPT_0x51
                 ; 0000 0373             /*
                 ; 0000 0374             binary_to_date(timestamp, &dt);
                 ; 0000 0375             printRTC(dt);
                 ; 0000 0376             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 0377             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 0378             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 0379             */
                 ; 0000 037A 
                 ; 0000 037B             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
0038f3 940e b45c 	CALL SUBOPT_0x52
0038f5 940e cf28 	CALL __CPD02
0038f7 f039      	BREQ _0xEB
0038f8 940e b461 	CALL SUBOPT_0x53
0038fa f021      	BREQ _0xEB
                +
0038fb 3045     +CPI R20 , LOW ( 5 )
0038fc e0e0     +LDI R30 , HIGH ( 5 )
0038fd 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
0038fe f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 037C             {
                 ; 0000 037D                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
0038ff e3e1     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003900 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003901 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003902 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003903 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 037E                 continue;
003905 cfc8      	RJMP _0xE5
                 ; 0000 037F             }
                 ; 0000 0380 
                 ; 0000 0381 
                 ; 0000 0382             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003906 e0e0      	LDI  R30,LOW(0)
003907 940e b463 	CALL SUBOPT_0x54
003909 935a      	ST   -Y,R21
00390a 934a      	ST   -Y,R20
00390b 940e b46b 	CALL SUBOPT_0x55
00390d 019f      	MOVW R18,R30
                 ; 0000 0383             if(res < 0)
00390e 2333      	TST  R19
00390f f43a      	BRPL _0xED
                 ; 0000 0384             {
                 ; 0000 0385                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003910 e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003911 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003912 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003913 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003914 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0386                 // --- Keep in Log --- //
                 ; 0000 0387                 continue;
003916 cfb7      	RJMP _0xE5
                 ; 0000 0388             }
                 ; 0000 0389             count++;
                 _0xED:
                +
003917 5f0f     +SUBI R16 , LOW ( - 1 )
003918 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 038A         }
                 ; 0000 038B 
                 ; 0000 038C     }
003919 cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 038D 
                 ; 0000 038E     return count;
00391a 01f8      	MOVW R30,R16
00391b 940e cf3f 	CALL __LOADLOCR6
00391d 962e      	ADIW R28,14
00391e 9508      	RET
                 ; 0000 038F }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 0392 {
                 _eventReport:
                 ; 0000 0393     int                     count = 0;
                 ; 0000 0394     int                     res;
                 ; 0000 0395     unsigned long int       timestamp;
                 ; 0000 0396     unsigned char           eventID;
                 ; 0000 0397     unsigned char           eventStatus;
                 ; 0000 0398 
                 ; 0000 0399     // -- for debug -- //
                 ; 0000 039A     //struct rtc_structure    dt;
                 ; 0000 039B     // --------------- //
                 ; 0000 039C     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 039D 
                 ; 0000 039E     while (count < MAX_EVENT_QUEUE)
00391f 9724      	SBIW R28,4
003920 940e b40f 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003922 3104     +CPI R16 , LOW ( 20 )
003923 e0e0     +LDI R30 , HIGH ( 20 )
003924 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003925 f014      	BRLT PC+3
003926 940c 396b 	JMP _0xF0
                 ; 0000 039F     {
                 ; 0000 03A0         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003928 940e b471 	CALL SUBOPT_0x56
00392a b7ed      	IN   R30,SPL
00392b b7fe      	IN   R31,SPH
00392c 93fa      	ST   -Y,R31
00392d 93ea      	ST   -Y,R30
00392e 935f      	PUSH R21
00392f b7ad      	IN   R26,SPL
003930 b7be      	IN   R27,SPH
003931 934f      	PUSH R20
003932 940e 6dfa 	CALL _fetchEventQueue
003934 914f      	POP  R20
003935 915f      	POP  R21
003936 019f      	MOVW R18,R30
                 ; 0000 03A1         if(res < 0)
003937 2333      	TST  R19
003938 f192      	BRMI _0xF0
                 ; 0000 03A2         {
                 ; 0000 03A3             break;
                 ; 0000 03A4         }
                 ; 0000 03A5         else
                 ; 0000 03A6         {
                 ; 0000 03A7 
                 ; 0000 03A8             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003939 eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
00393a e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
00393b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
00393c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
00393d 940e cec8 	CALL __PUTPARD1
00393f 940e b476 	CALL SUBOPT_0x57
003941 940e cec8 	CALL __PUTPARD1
003943 940e b47b 	CALL SUBOPT_0x58
                 ; 0000 03A9             /*
                 ; 0000 03AA             binary_to_date(timestamp, &dt);
                 ; 0000 03AB             printRTC(dt);
                 ; 0000 03AC             */
                 ; 0000 03AD 
                 ; 0000 03AE             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003945 940e b48c 	CALL SUBOPT_0x59
003947 940e cf28 	CALL __CPD02
003949 f029      	BREQ _0xF4
00394a 940e b48c 	CALL SUBOPT_0x59
00394c 940e b3ae 	CALL SUBOPT_0x3A
00394e f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 03AF             {
                 ; 0000 03B0                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
00394f ece9     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003950 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003951 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003952 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003953 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 03B1                 continue;
003955 cfcc      	RJMP _0xEE
                 ; 0000 03B2             }
                 ; 0000 03B3 
                 ; 0000 03B4 
                 ; 0000 03B5             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003956 e0e0      	LDI  R30,LOW(0)
003957 93ea      	ST   -Y,R30
003958 940e b3e2 	CALL SUBOPT_0x3F
00395a 935a      	ST   -Y,R21
00395b 2fa4      	MOV  R26,R20
00395c 940e 51a4 	CALL _ETH_sendEventReportCmd
00395e 019f      	MOVW R18,R30
                 ; 0000 03B6             if(res < 0)
00395f 2333      	TST  R19
003960 f43a      	BRPL _0xF6
                 ; 0000 03B7             {
                 ; 0000 03B8                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003961 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003962 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003963 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003964 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003965 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 03B9                 // --- Keep in Log --- //
                 ; 0000 03BA                 continue;
003967 cfba      	RJMP _0xEE
                 ; 0000 03BB             }
                 ; 0000 03BC             count++;
                 _0xF6:
                +
003968 5f0f     +SUBI R16 , LOW ( - 1 )
003969 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03BD         }
                 ; 0000 03BE     }
00396a cfb7      	RJMP _0xEE
                 _0xF0:
                 ; 0000 03BF 
                 ; 0000 03C0     return count;
00396b 01f8      	MOVW R30,R16
00396c 940e cf3f 	CALL __LOADLOCR6
00396e 962a      	ADIW R28,10
00396f 9508      	RET
                 ; 0000 03C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 03C9 {
                 _sensorDataSave:
                 ; 0000 03CA     FIL                     file;
                 ; 0000 03CB     char                    isFileOpen = 0;
                 ; 0000 03CC     int                     count = 0;
                 ; 0000 03CD     int                     res;
                 ; 0000 03CE     unsigned long int       timestamp;
                 ; 0000 03CF     unsigned int            channel;
                 ; 0000 03D0     float                   value;
                 ; 0000 03D1 
                 ; 0000 03D2 
                 ; 0000 03D3     // -- for debug -- //
                 ; 0000 03D4     //struct rtc_structure    dt;
                 ; 0000 03D5     // --------------- //
                 ; 0000 03D6 
                 ; 0000 03D7     while (count < MAX_DATA_QUEUE)
003970 97aa      	SBIW R28,42
003971 50d2      	SUBI R29,2
003972 940e cf38 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003974 e010      	LDI  R17,0
                +
003975 e020     +LDI R18 , LOW ( 0 )
003976 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003977 302a     +CPI R18 , LOW ( 10 )
003978 e0e0     +LDI R30 , HIGH ( 10 )
003979 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
00397a f014      	BRLT PC+3
00397b 940c 39d4 	JMP _0xF9
                 ; 0000 03D8     {
                 ; 0000 03D9         res = fetchDataQueue(&timestamp, &channel, &value);
00397d 940e b491 	CALL SUBOPT_0x5A
00397f 940e b491 	CALL SUBOPT_0x5A
003981 01de      	MOVW R26,R28
003982 961a      	ADIW R26,10
003983 940e 6a97 	CALL _fetchDataQueue
003985 01af      	MOVW R20,R30
                 ; 0000 03DA         if(res < 0)
003986 2355      	TST  R21
003987 f40a      	BRPL _0xFA
                 ; 0000 03DB         {
                 ; 0000 03DC             break;
003988 c04b      	RJMP _0xF9
                 ; 0000 03DD         }
                 ; 0000 03DE         else
                 _0xFA:
                 ; 0000 03DF         {
                 ; 0000 03E0             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003989 e3e2     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
00398a e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
00398b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
00398c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
00398d 940e b496 	CALL SUBOPT_0x5B
00398f 89ea      	LDD  R30,Y+18
003990 89fb      	LDD  R31,Y+18+1
003991 940e b388 	CALL SUBOPT_0x34
003993 940e b451 	CALL SUBOPT_0x51
                 ; 0000 03E1             /*
                 ; 0000 03E2             binary_to_date(timestamp, &dt);
                 ; 0000 03E3             printRTC(dt);
                 ; 0000 03E4             */
                 ; 0000 03E5 
                 ; 0000 03E6             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003995 940e b26d 	CALL SUBOPT_0xB
003997 940e cf28 	CALL __CPD02
003999 f039      	BREQ _0xFD
00399a 940e b49c 	CALL SUBOPT_0x5C
00399c f021      	BREQ _0xFD
00399d 85aa      	LDD  R26,Y+10
00399e 85bb      	LDD  R27,Y+10+1
00399f 9715      	SBIW R26,5
0039a0 f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03E7             {
                 ; 0000 03E8                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
0039a1 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
0039a2 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
0039a3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
0039a4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
0039a5 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 03E9                 continue;
0039a7 cfcf      	RJMP _0xF7
                 ; 0000 03EA             }
                 ; 0000 03EB 
                 ; 0000 03EC             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 03ED             if(!isFileOpen)
                 _0xFC:
0039a8 3010      	CPI  R17,0
0039a9 f489      	BRNE _0xFF
                 ; 0000 03EE             {
                 ; 0000 03EF                 res = LOG_openFile(&file,LOGFILE_DATA);
0039aa 940e b49e 	CALL SUBOPT_0x5D
0039ac 940e b4a3 	CALL SUBOPT_0x5E
0039ae 01af      	MOVW R20,R30
                 ; 0000 03F0                 if(res < 0)
0039af 2355      	TST  R21
0039b0 f44a      	BRPL _0x100
                 ; 0000 03F1                 {
                 ; 0000 03F2                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
0039b1 e9ec     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
0039b2 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
0039b3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
0039b4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
0039b5 940e b4ae 	CALL SUBOPT_0x5F
0039b7 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 03F3                     continue;
0039b9 cfbd      	RJMP _0xF7
                 ; 0000 03F4                 }
                 ; 0000 03F5                 isFileOpen = 1;
                 _0x100:
0039ba e011      	LDI  R17,LOW(1)
                 ; 0000 03F6             }
                 ; 0000 03F7 
                 ; 0000 03F8             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
0039bb 940e b49e 	CALL SUBOPT_0x5D
0039bd 940e b4b3 	CALL SUBOPT_0x60
0039bf 940e cec8 	CALL __PUTPARD1
0039c1 89e8      	LDD  R30,Y+16
0039c2 89f9      	LDD  R31,Y+16+1
0039c3 93fa      	ST   -Y,R31
0039c4 93ea      	ST   -Y,R30
0039c5 940e b4b8 	CALL SUBOPT_0x61
0039c7 01af      	MOVW R20,R30
                 ; 0000 03F9             if(res < 0)
0039c8 2355      	TST  R21
0039c9 f43a      	BRPL _0x101
                 ; 0000 03FA             {
                 ; 0000 03FB                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
0039ca edea     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
0039cb e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
0039cc e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
0039cd e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
0039ce 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 03FC                 continue;
0039d0 cfa6      	RJMP _0xF7
                 ; 0000 03FD             }
                 ; 0000 03FE             count++;
                 _0x101:
                +
0039d1 5f2f     +SUBI R18 , LOW ( - 1 )
0039d2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 03FF         }
                 ; 0000 0400     }
0039d3 cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 0401 
                 ; 0000 0402     if(isFileOpen)
0039d4 3010      	CPI  R17,0
0039d5 f071      	BREQ _0x102
                 ; 0000 0403     {
                 ; 0000 0404         res = LOG_closeFile(&file);
0039d6 01de      	MOVW R26,R28
0039d7 9650      	ADIW R26,16
0039d8 940e b4be 	CALL SUBOPT_0x62
                 ; 0000 0405         if(res < 0)
0039da f44a      	BRPL _0x103
                 ; 0000 0406         {
                 ; 0000 0407             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
0039db e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
0039dc e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
0039dd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
0039de e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
0039df 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0408             return -1;
0039e1 efef      	LDI  R30,LOW(65535)
0039e2 efff      	LDI  R31,HIGH(65535)
0039e3 c00b      	RJMP _0x20E0094
                 ; 0000 0409         }
                 ; 0000 040A     }
                 _0x103:
                 ; 0000 040B 
                 ; 0000 040C     if(count > 0){
                 _0x102:
0039e4 2400      	CLR  R0
0039e5 1602      	CP   R0,R18
0039e6 0603      	CPC  R0,R19
0039e7 f434      	BRGE _0x104
                 ; 0000 040D         //isDataLogEmpty  = 0;
                 ; 0000 040E         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
0039e8 e2ef     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
0039e9 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
0039ea e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
0039eb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
0039ec 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 040F     }
                 ; 0000 0410 
                 ; 0000 0411     return count;
                 _0x104:
0039ee 01f9      	MOVW R30,R18
                 _0x20E0094:
0039ef 940e cf3f 	CALL __LOADLOCR6
0039f1 96e0      	ADIW R28,48
0039f2 5fde      	SUBI R29,-2
0039f3 9508      	RET
                 ; 0000 0412 }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 0415 {
                 _eventSave:
                 ; 0000 0416     FIL                     file;
                 ; 0000 0417     char                    isFileOpen = 0;
                 ; 0000 0418     int                     count = 0;
                 ; 0000 0419     int                     res;
                 ; 0000 041A     unsigned long int       timestamp;
                 ; 0000 041B     unsigned char           eventID;
                 ; 0000 041C     unsigned char           eventStatus;
                 ; 0000 041D 
                 ; 0000 041E     // -- for debug -- //
                 ; 0000 041F     //struct rtc_structure    dt;
                 ; 0000 0420     // --------------- //
                 ; 0000 0421 
                 ; 0000 0422     while (count < MAX_EVENT_QUEUE)
0039f4 97a5      	SBIW R28,37
0039f5 50d2      	SUBI R29,2
0039f6 940e cf38 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
0039f8 e010      	LDI  R17,0
                +
0039f9 e020     +LDI R18 , LOW ( 0 )
0039fa e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
0039fb 3124     +CPI R18 , LOW ( 20 )
0039fc e0e0     +LDI R30 , HIGH ( 20 )
0039fd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
0039fe f014      	BRLT PC+3
0039ff 940c 3a5c 	JMP _0x107
                 ; 0000 0423     {
                 ; 0000 0424         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003a01 940e b4c9 	CALL SUBOPT_0x63
003a03 b7ed      	IN   R30,SPL
003a04 b7fe      	IN   R31,SPH
003a05 93fa      	ST   -Y,R31
003a06 93ea      	ST   -Y,R30
003a07 930f      	PUSH R16
003a08 01de      	MOVW R26,R28
003a09 961a      	ADIW R26,10
003a0a 940e 6dfa 	CALL _fetchEventQueue
003a0c 910f      	POP  R16
003a0d 01af      	MOVW R20,R30
                 ; 0000 0425         if(res < 0)
003a0e 2355      	TST  R21
003a0f f40a      	BRPL _0x108
                 ; 0000 0426         {
                 ; 0000 0427             break;
003a10 c04b      	RJMP _0x107
                 ; 0000 0428         }
                 ; 0000 0429         else
                 _0x108:
                 ; 0000 042A         {
                 ; 0000 042B             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003a11 e5e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003a12 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003a13 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003a14 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003a15 940e cec8 	CALL __PUTPARD1
003a17 940e b4ce 	CALL SUBOPT_0x64
003a19 2fe0      	MOV  R30,R16
003a1a 940e b4d5 	CALL SUBOPT_0x65
003a1c 89ea      	LDD  R30,Y+18
003a1d 940e b4d5 	CALL SUBOPT_0x65
003a1f 940e b4db 	CALL SUBOPT_0x66
                 ; 0000 042C             /*
                 ; 0000 042D             binary_to_date(timestamp, &dt);
                 ; 0000 042E             printRTC(dt);
                 ; 0000 042F             */
                 ; 0000 0430 
                 ; 0000 0431             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003a21 940e b4e0 	CALL SUBOPT_0x67
003a23 940e cf28 	CALL __CPD02
003a25 f029      	BREQ _0x10B
003a26 940e b4e0 	CALL SUBOPT_0x67
003a28 940e b3ae 	CALL SUBOPT_0x3A
003a2a f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 0432             {
                 ; 0000 0433                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003a2b e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003a2c e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003a2d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003a2e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003a2f 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0434                 continue;
003a31 cfc9      	RJMP _0x105
                 ; 0000 0435             }
                 ; 0000 0436 
                 ; 0000 0437             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0438             if(!isFileOpen)
                 _0x10A:
003a32 3010      	CPI  R17,0
003a33 f489      	BRNE _0x10D
                 ; 0000 0439             {
                 ; 0000 043A                 res = LOG_openFile(&file,LOGFILE_EVENT);
003a34 940e b4e5 	CALL SUBOPT_0x68
003a36 940e b4ea 	CALL SUBOPT_0x69
003a38 01af      	MOVW R20,R30
                 ; 0000 043B                 if(res < 0)
003a39 2355      	TST  R21
003a3a f44a      	BRPL _0x10E
                 ; 0000 043C                 {
                 ; 0000 043D                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003a3b ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003a3c e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003a3d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003a3e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003a3f 940e b4f5 	CALL SUBOPT_0x6A
003a41 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 043E                     continue;
003a43 cfb7      	RJMP _0x105
                 ; 0000 043F                 }
                 ; 0000 0440                 isFileOpen = 1;
                 _0x10E:
003a44 e011      	LDI  R17,LOW(1)
                 ; 0000 0441             }
                 ; 0000 0442 
                 ; 0000 0443             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003a45 940e b4e5 	CALL SUBOPT_0x68
003a47 940e b4fa 	CALL SUBOPT_0x6B
003a49 940e cec8 	CALL __PUTPARD1
003a4b 930a      	ST   -Y,R16
003a4c 85ad      	LDD  R26,Y+13
003a4d 940e 796f 	CALL _LOG_insertEvent
003a4f 01af      	MOVW R20,R30
                 ; 0000 0444             if(res < 0)
003a50 2355      	TST  R21
003a51 f43a      	BRPL _0x10F
                 ; 0000 0445             {
                 ; 0000 0446                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003a52 efe8     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003a53 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003a54 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003a55 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003a56 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0447                 continue;
003a58 cfa2      	RJMP _0x105
                 ; 0000 0448             }
                 ; 0000 0449             count++;
                 _0x10F:
                +
003a59 5f2f     +SUBI R18 , LOW ( - 1 )
003a5a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 044A         }
                 ; 0000 044B     }
003a5b cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 044C 
                 ; 0000 044D     if(isFileOpen)
003a5c 3010      	CPI  R17,0
003a5d f071      	BREQ _0x110
                 ; 0000 044E     {
                 ; 0000 044F         res = LOG_closeFile(&file);
003a5e 01de      	MOVW R26,R28
003a5f 961b      	ADIW R26,11
003a60 940e b4be 	CALL SUBOPT_0x62
                 ; 0000 0450         if(res < 0)
003a62 f44a      	BRPL _0x111
                 ; 0000 0451         {
                 ; 0000 0452             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003a63 e1ef     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003a64 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003a65 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003a66 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003a67 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 0453             return -1;
003a69 efef      	LDI  R30,LOW(65535)
003a6a efff      	LDI  R31,HIGH(65535)
003a6b c00b      	RJMP _0x20E0093
                 ; 0000 0454         }
                 ; 0000 0455     }
                 _0x111:
                 ; 0000 0456 
                 ; 0000 0457     if(count > 0){
                 _0x110:
003a6c 2400      	CLR  R0
003a6d 1602      	CP   R0,R18
003a6e 0603      	CPC  R0,R19
003a6f f434      	BRGE _0x112
                 ; 0000 0458         //isEventLogEmpty    = 0;
                 ; 0000 0459         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003a70 e4e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003a71 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003a72 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003a73 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003a74 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 045A     }
                 ; 0000 045B 
                 ; 0000 045C     return count;
                 _0x112:
003a76 01f9      	MOVW R30,R18
                 _0x20E0093:
003a77 940e cf3f 	CALL __LOADLOCR6
003a79 96ab      	ADIW R28,43
003a7a 5fde      	SUBI R29,-2
003a7b 9508      	RET
                 ; 0000 045D }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0460 {
                 _logReport:
                 ; 0000 0461     FIL                     file;
                 ; 0000 0462     int                     res;
                 ; 0000 0463     unsigned long int       index;
                 ; 0000 0464     unsigned long int       timestamp;
                 ; 0000 0465     unsigned int            channel;
                 ; 0000 0466     float                   value;
                 ; 0000 0467     unsigned char           id;
                 ; 0000 0468     unsigned char           status;
                 ; 0000 0469 
                 ; 0000 046A     // -- send data log if any exist -- //
                 ; 0000 046B     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003a7c 97ac      	SBIW R28,44
003a7d 50d2      	SUBI R29,2
003a7e 940e cf38 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003a80 91e0 14dd 	LDS  R30,_isDataLogEmpty
003a82 30e0      	CPI  R30,0
003a83 f421      	BRNE _0x114
003a84 91a0 1426 	LDS  R26,_logDataWait
003a86 30a0      	CPI  R26,LOW(0x0)
003a87 f009      	BREQ _0x115
                 _0x114:
003a88 c091      	RJMP _0x113
                 _0x115:
                 ; 0000 046C     {
                 ; 0000 046D         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003a89 e6e9     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003a8a e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003a8b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003a8c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003a8d 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 046E         res = LOG_openFile(&file,LOGFILE_DATA);
003a8f 940e b4ff 	CALL SUBOPT_0x6C
003a91 940e b4a3 	CALL SUBOPT_0x5E
003a93 018f      	MOVW R16,R30
                 ; 0000 046F         if(res < 0)
003a94 2311      	TST  R17
003a95 f44a      	BRPL _0x116
                 ; 0000 0470         {
                 ; 0000 0471             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003a96 e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003a97 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003a98 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003a99 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003a9a 940e b4ae 	CALL SUBOPT_0x5F
003a9c 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 0472         }
                 ; 0000 0473         else
003a9e c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 0474         {
                 ; 0000 0475             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003a9f 940e b4ff 	CALL SUBOPT_0x6C
003aa1 940e b491 	CALL SUBOPT_0x5A
003aa3 b7ed      	IN   R30,SPL
003aa4 b7fe      	IN   R31,SPH
003aa5 9731      	SBIW R30,1
003aa6 93fa      	ST   -Y,R31
003aa7 93ea      	ST   -Y,R30
003aa8 933f      	PUSH R19
003aa9 932f      	PUSH R18
003aaa 940e b491 	CALL SUBOPT_0x5A
003aac 01de      	MOVW R26,R28
003aad 9656      	ADIW R26,22
003aae 940e 78d6 	CALL _LOG_readData
003ab0 912f      	POP  R18
003ab1 913f      	POP  R19
003ab2 018f      	MOVW R16,R30
                 ; 0000 0476             if(res < 0)
003ab3 2311      	TST  R17
003ab4 f44a      	BRPL _0x118
                 ; 0000 0477             {
                 ; 0000 0478                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003ab5 ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003ab6 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003ab7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003ab8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003ab9 940e b4ae 	CALL SUBOPT_0x5F
003abb 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 0479             }
                 ; 0000 047A             else if(res == 0)
003abd c053      	RJMP _0x119
                 _0x118:
003abe 2e00      	MOV  R0,R16
003abf 2a01      	OR   R0,R17
003ac0 f439      	BRNE _0x11A
                 ; 0000 047B             {
                 ; 0000 047C                 //isDataLogEmpty      = 1;
                 ; 0000 047D                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003ac1 ede8     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003ac2 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003ac3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003ac4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003ac5 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 047E             }
                 ; 0000 047F             else
003ac7 c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0480             {
                 ; 0000 0481                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003ac8 940e b504 	CALL SUBOPT_0x6D
003aca f039      	BREQ _0x11D
003acb 940e b461 	CALL SUBOPT_0x53
003acd f021      	BREQ _0x11D
                +
003ace 3025     +CPI R18 , LOW ( 5 )
003acf e0e0     +LDI R30 , HIGH ( 5 )
003ad0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003ad1 f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 0482                 {
                 ; 0000 0483                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003ad2 efef     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003ad3 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003ad4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003ad5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003ad6 940e b4ae 	CALL SUBOPT_0x5F
003ad8 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 0484                 }
                 ; 0000 0485                 else
003ada c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 0486                 {
                 ; 0000 0487                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003adb e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003adc e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003add e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003ade e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003adf 940e b448 	CALL SUBOPT_0x50
003ae1 01f9      	MOVW R30,R18
003ae2 940e b388 	CALL SUBOPT_0x34
003ae4 940e b451 	CALL SUBOPT_0x51
                 ; 0000 0488                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003ae6 e0e1      	LDI  R30,LOW(1)
003ae7 940e b463 	CALL SUBOPT_0x54
003ae9 933a      	ST   -Y,R19
003aea 932a      	ST   -Y,R18
003aeb 940e b46b 	CALL SUBOPT_0x55
003aed 018f      	MOVW R16,R30
                 ; 0000 0489                     if(res < 0)
003aee 2311      	TST  R17
003aef f44a      	BRPL _0x120
                 ; 0000 048A                     {
                 ; 0000 048B                         logDataWait.frameID    = 0;
003af0 940e b508 	CALL SUBOPT_0x6E
                 ; 0000 048C                         logDataWait.logID      = 0;
                 ; 0000 048D                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003af2 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003af3 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003af4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003af5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003af6 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 048E                     }
                 ; 0000 048F                     else
003af8 c018      	RJMP _0x121
                 _0x120:
                 ; 0000 0490                     {
                 ; 0000 0491                         logDataWait.logID       = index;
003af9 940e b4b3 	CALL SUBOPT_0x60
                +
003afb 93e0 1427+STS _logDataWait + ( 1 ) , R30
003afd 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003aff 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003b01 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 0492                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003b03 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003b04 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003b05 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003b06 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003b07 940e cec8 	CALL __PUTPARD1
003b09 91e0 1426 	LDS  R30,_logDataWait
003b0b 940e b4d5 	CALL SUBOPT_0x65
003b0d 940e b518 	CALL SUBOPT_0x6F
003b0f 940e b300 	CALL SUBOPT_0x21
                 ; 0000 0493                     }
                 _0x121:
                 ; 0000 0494                 }
                 _0x11F:
                 ; 0000 0495             }
                 _0x11B:
                 _0x119:
                 ; 0000 0496 
                 ; 0000 0497             res = LOG_closeFile(&file);
003b11 940e b521 	CALL SUBOPT_0x70
                 ; 0000 0498             if(res < 0)
003b13 f432      	BRPL _0x122
                 ; 0000 0499             {
                 ; 0000 049A                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003b14 eceb     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003b15 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003b16 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003b17 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003b18 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 049B             }
                 ; 0000 049C         }
                 _0x122:
                 _0x117:
                 ; 0000 049D     }
                 ; 0000 049E 
                 ; 0000 049F     // -- send event log if any exist -- //
                 ; 0000 04A0     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003b1a 91e0 14de 	LDS  R30,_isEventLogEmpty
003b1c 30e0      	CPI  R30,0
003b1d f421      	BRNE _0x124
003b1e 91a0 142b 	LDS  R26,_logEventWait
003b20 30a0      	CPI  R26,LOW(0x0)
003b21 f009      	BREQ _0x125
                 _0x124:
003b22 c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 04A1     {
                 ; 0000 04A2         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003b23 efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003b24 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003b25 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003b26 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003b27 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 04A3         res = LOG_openFile(&file,LOGFILE_EVENT);
003b29 940e b4ff 	CALL SUBOPT_0x6C
003b2b 940e b4ea 	CALL SUBOPT_0x69
003b2d 018f      	MOVW R16,R30
                 ; 0000 04A4         if(res < 0)
003b2e 2311      	TST  R17
003b2f f42a      	BRPL _0x126
                 ; 0000 04A5         {
                 ; 0000 04A6             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003b30 e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003b31 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003b32 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003b33 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003b34 c071      	RJMP _0x13E
                 ; 0000 04A7         }
                 ; 0000 04A8         else
                 _0x126:
                 ; 0000 04A9         {
                 ; 0000 04AA             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003b35 940e b4ff 	CALL SUBOPT_0x6C
003b37 940e b491 	CALL SUBOPT_0x5A
003b39 b7ed      	IN   R30,SPL
003b3a b7fe      	IN   R31,SPH
003b3b 93fa      	ST   -Y,R31
003b3c 93ea      	ST   -Y,R30
003b3d 935f      	PUSH R21
003b3e b7ed      	IN   R30,SPL
003b3f b7fe      	IN   R31,SPH
003b40 93fa      	ST   -Y,R31
003b41 93ea      	ST   -Y,R30
003b42 934f      	PUSH R20
003b43 01de      	MOVW R26,R28
003b44 9656      	ADIW R26,22
003b45 940e 79f9 	CALL _LOG_readEvent
003b47 914f      	POP  R20
003b48 915f      	POP  R21
003b49 018f      	MOVW R16,R30
                 ; 0000 04AB             if(res < 0)
003b4a 2311      	TST  R17
003b4b f43a      	BRPL _0x128
                 ; 0000 04AC             {
                 ; 0000 04AD                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003b4c e1e4     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003b4d e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003b4e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003b4f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003b50 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 04AE             }
                 ; 0000 04AF             else if(res == 0)
003b52 c04c      	RJMP _0x129
                 _0x128:
003b53 2e00      	MOV  R0,R16
003b54 2a01      	OR   R0,R17
003b55 f439      	BRNE _0x12A
                 ; 0000 04B0             {
                 ; 0000 04B1                 //isEventLogEmpty     = 1;
                 ; 0000 04B2                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003b56 e3e9     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003b57 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003b58 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003b59 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003b5a 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 04B3             }
                 ; 0000 04B4             else
003b5c c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 04B5             {
                 ; 0000 04B6                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003b5d 940e b504 	CALL SUBOPT_0x6D
003b5f f019      	BREQ _0x12D
003b60 940e b461 	CALL SUBOPT_0x53
003b62 f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 04B7                 {
                 ; 0000 04B8                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003b63 efef     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003b64 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003b65 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003b66 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003b67 940e b4f5 	CALL SUBOPT_0x6A
003b69 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 04B9                 }
                 ; 0000 04BA                 else
003b6b c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 04BB                 {
                 ; 0000 04BC                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003b6c e6e1     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003b6d e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003b6e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003b6f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003b70 940e b448 	CALL SUBOPT_0x50
003b72 940e b47b 	CALL SUBOPT_0x58
                 ; 0000 04BD                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003b74 e0e1      	LDI  R30,LOW(1)
003b75 940e b463 	CALL SUBOPT_0x54
003b77 935a      	ST   -Y,R21
003b78 2fa4      	MOV  R26,R20
003b79 940e 51a4 	CALL _ETH_sendEventReportCmd
003b7b 018f      	MOVW R16,R30
                 ; 0000 04BE                     if(res < 0)
003b7c 2311      	TST  R17
003b7d f44a      	BRPL _0x130
                 ; 0000 04BF                     {
                 ; 0000 04C0                         logEventWait.frameID    = 0;
003b7e 940e b52e 	CALL SUBOPT_0x71
                 ; 0000 04C1                         logEventWait.logID      = 0;
                 ; 0000 04C2                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003b80 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003b81 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003b82 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003b83 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003b84 940e b22a 	CALL SUBOPT_0x3
                 ; 0000 04C3                     }
                 ; 0000 04C4                     else
003b86 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 04C5                     {
                 ; 0000 04C6                         logEventWait.logID      = index;
003b87 940e b4b3 	CALL SUBOPT_0x60
                +
003b89 93e0 142c+STS _logEventWait + ( 1 ) , R30
003b8b 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003b8d 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003b8f 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 04C7                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003b91 ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003b92 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003b93 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003b94 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003b95 940e cec8 	CALL __PUTPARD1
003b97 91e0 142b 	LDS  R30,_logEventWait
003b99 940e b4d5 	CALL SUBOPT_0x65
003b9b 940e b53e 	CALL SUBOPT_0x72
003b9d 940e b300 	CALL SUBOPT_0x21
                 ; 0000 04C8                     }
                 _0x131:
                 ; 0000 04C9                 }
                 _0x12F:
                 ; 0000 04CA             }
                 _0x12B:
                 _0x129:
                 ; 0000 04CB 
                 ; 0000 04CC             res = LOG_closeFile(&file);
003b9f 940e b521 	CALL SUBOPT_0x70
                 ; 0000 04CD             if(res < 0)
003ba1 f462      	BRPL _0x132
                 ; 0000 04CE             {
                 ; 0000 04CF                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003ba2 e0e8     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003ba3 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003ba4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003ba5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003ba6 940e cec8 	CALL __PUTPARD1
003ba8 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003ba9 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003baa 940e b388 	CALL SUBOPT_0x34
003bac 940e b29d 	CALL SUBOPT_0x12
                 ; 0000 04D0             }
                 ; 0000 04D1         }
                 _0x132:
                 ; 0000 04D2     }
                 ; 0000 04D3 
                 ; 0000 04D4     return 0;
                 _0x123:
003bae e0e0      	LDI  R30,LOW(0)
003baf e0f0      	LDI  R31,HIGH(0)
003bb0 940e cf3f 	CALL __LOADLOCR6
003bb2 96e2      	ADIW R28,50
003bb3 5fde      	SUBI R29,-2
003bb4 9508      	RET
                 ; 0000 04D5 }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003bb5 931a      	ST   -Y,R17
003bb6 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003bb7 e000     +LDI R16 , LOW ( 0 )
003bb8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003bb9 e8e0      	LDI  R30,LOW(128)
003bba 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003bbc e0e0      	LDI  R30,LOW(0)
003bbd 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003bbf 940e 3e9e 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003bc1 b7e4      	IN   R30,0x34
003bc2 ffe0      	SBRS R30,0
003bc3 c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003bc4 e3e0     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003bc5 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003bc6 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003bc7 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003bc8 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003bca b7e4      	IN   R30,0x34
003bcb 7fee      	ANDI R30,0xFE
003bcc bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003bcd b7e4      	IN   R30,0x34
003bce ffe1      	SBRS R30,1
003bcf c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003bd0 e4e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003bd1 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003bd2 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003bd3 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003bd4 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003bd6 b7e4      	IN   R30,0x34
003bd7 7fed      	ANDI R30,0xFD
003bd8 bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003bd9 b7e4      	IN   R30,0x34
003bda ffe2      	SBRS R30,2
003bdb c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003bdc e5e6     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003bdd e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003bde e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003bdf e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003be0 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003be2 b7e4      	IN   R30,0x34
003be3 7feb      	ANDI R30,0xFB
003be4 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003be5 b7e4      	IN   R30,0x34
003be6 ffe3      	SBRS R30,3
003be7 c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003be8 e6ea     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003be9 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003bea e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003beb e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003bec 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003bee b7e4      	IN   R30,0x34
003bef 7fe7      	ANDI R30,0XF7
003bf0 bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003bf1 b7e4      	IN   R30,0x34
003bf2 ffe4      	SBRS R30,4
003bf3 c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003bf4 e7ed     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003bf5 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003bf6 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003bf7 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003bf8 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003bfa b7e4      	IN   R30,0x34
003bfb 7eef      	ANDI R30,0xEF
003bfc bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003bfd 940e 403f 	CALL _init_io
                 ; 0001 0036     init_i2c();
003bff d051      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003c00 d053      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003c01 940e 4241 	CALL _init_adc
                 ; 0001 0039     init_timer();
003c03 940e 3f8f 	CALL _init_timer
                 ; 0001 003A     init_common();
003c05 d053      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003c06 940e b547 	CALL SUBOPT_0x73
003c08 940e 4019 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003c0a efa4      	LDI  R26,LOW(500)
003c0b e0b1      	LDI  R27,HIGH(500)
003c0c 940e cb81 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003c0e 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003c0f 940e 463e 	CALL _init_RTC
003c11 940e b54a 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003c13 940e 7609 	CALL _init_oled
003c15 940e b54a 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003c17 940e 41dc 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003c19 940e b54e 	CALL SUBOPT_0x75
003c1b 940e 4019 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003c1d 940e b551 	CALL SUBOPT_0x76
003c1f 940e 4019 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003c21 940e b554 	CALL SUBOPT_0x77
003c23 940e 4019 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003c25 940e 50a2 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     /*bongkot*/
                 ; 0001 004D     //playBeep();
                 ; 0001 004E     showLedInitComplete();
003c27 d097      	RCALL _showLedInitComplete
                 ; 0001 004F     showDebugInitComplete();
003c28 d048      	RCALL _showDebugInitComplete
                 ; 0001 0050 
                 ; 0001 0051     if(SD_init() == 0)
003c29 940e 77f8 	CALL _SD_init
003c2b 9730      	SBIW R30,0
003c2c f459      	BRNE _0x2000A
                 ; 0001 0052     {
                 ; 0001 0053         if(LOG_init() < 0)
003c2d 940e 7bd4 	CALL _LOG_init
003c2f 23ff      	TST  R31
003c30 f432      	BRPL _0x2000B
                 ; 0001 0054         {
                 ; 0001 0055             // -- log status = error -- //
                 ; 0001 0056             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003c31 e8ec     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003c32 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003c33 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003c34 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003c35 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 0057         }
                 ; 0001 0058 
                 ; 0001 0059         // -- log status = ok -- //
                 ; 0001 005A     }
                 _0x2000B:
                 ; 0001 005B     else
003c37 c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005C     {
                 ; 0001 005D         // -- sd status = error -- //
                 ; 0001 005E         printDebug("<initial_system> SD_init() failed\r\n");
                +
003c38 ebe1     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003c39 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003c3a e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003c3b e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003c3c 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 005F     }
                 _0x2000C:
                 ; 0001 0060 
                 ; 0001 0061     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003c3e e0a8      	LDI  R26,LOW(8)
003c3f 940e 4155 	CALL _read_adc
003c41 e0ad      	LDI  R26,LOW(13)
003c42 e0b0      	LDI  R27,HIGH(13)
003c43 940e cdd6 	CALL __MULW12U
003c45 91a0 1430 	LDS  R26,_raw_rtc
003c47 91b0 1431 	LDS  R27,_raw_rtc+1
003c49 0fae      	ADD  R26,R30
003c4a 1fbf      	ADC  R27,R31
003c4b 940e 9640 	CALL _srand
                 ; 0001 0062 
                 ; 0001 0063     // -------- Configuration Initialize ----------- //
                 ; 0001 0064 //    readConfig();
                 ; 0001 0065 //    initAlarm();        //delay_ms(100);
                 ; 0001 0066 //
                 ; 0001 0067 //    if(init_logfile() < 0){
                 ; 0001 0068 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0069 //        return -1;
                 ; 0001 006A //    }
                 ; 0001 006B 
                 ; 0001 006C 
                 ; 0001 006D     return res;
003c4d 01f8      	MOVW R30,R16
003c4e 9109      	LD   R16,Y+
003c4f 9119      	LD   R17,Y+
003c50 9508      	RET
                 ; 0001 006E }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0071 {
                 _init_i2c:
                 ; 0001 0072     // I2C Bus initialization
                 ; 0001 0073     i2c_init();
003c51 940e cb30 	CALL _i2c_init
                 ; 0001 0074 }
003c53 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0077 {
                 _init_spi:
                 ; 0001 0078     // SPI initialization
                 ; 0001 0079     // SPI Type: Master
                 ; 0001 007A     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007B     // SPI Clock Phase: Cycle Start
                 ; 0001 007C     // SPI Clock Polarity: Low
                 ; 0001 007D     // SPI Data Order: MSB First
                 ; 0001 007E     SPCR=0x50;
003c54 e5e0      	LDI  R30,LOW(80)
003c55 bdec      	OUT  0x2C,R30
                 ; 0001 007F     SPSR=0x00;
003c56 e0e0      	LDI  R30,LOW(0)
003c57 bded      	OUT  0x2D,R30
                 ; 0001 0080 }
003c58 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0083 {
                 _init_common:
                 ; 0001 0084     // External Interrupt(s) initialization
                 ; 0001 0085     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0086     EICRA=0x00;
003c59 e0e0      	LDI  R30,LOW(0)
003c5a 93e0 0069 	STS  105,R30
                 ; 0001 0087     EICRB=0x00;
003c5c 93e0 006a 	STS  106,R30
                 ; 0001 0088     EIMSK=0x00;
003c5e bbed      	OUT  0x1D,R30
                 ; 0001 0089 
                 ; 0001 008A     PCMSK0=0x00;
003c5f 93e0 006b 	STS  107,R30
                 ; 0001 008B     PCMSK1=0x00;
003c61 93e0 006c 	STS  108,R30
                 ; 0001 008C     PCMSK2=0x00;
003c63 93e0 006d 	STS  109,R30
                 ; 0001 008D     PCICR=0x00;
003c65 93e0 0068 	STS  104,R30
                 ; 0001 008E 
                 ; 0001 008F     // Analog Comparator initialization
                 ; 0001 0090     // Analog Comparator: Off
                 ; 0001 0091     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0092     ACSR=0x80;
003c67 e8e0      	LDI  R30,LOW(128)
003c68 bfe0      	OUT  0x30,R30
                 ; 0001 0093     ADCSRB=0x00;
003c69 e0e0      	LDI  R30,LOW(0)
003c6a 93e0 007b 	STS  123,R30
                 ; 0001 0094     DIDR1=0x00;
003c6c 93e0 007f 	STS  127,R30
                 ; 0001 0095 
                 ; 0001 0096     // TWI initialization
                 ; 0001 0097     // TWI disabled
                 ; 0001 0098     TWCR=0x00;
003c6e 93e0 00bc 	STS  188,R30
                 ; 0001 0099 }
003c70 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009C {
                 ; 0001 009D     BUZZER = 1;                                     // Buzzer ON Starting
                 ; 0001 009E     delay_ms(200);
                 ; 0001 009F     BUZZER = 0;
                 ; 0001 00A0 }
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A3 {
                 _showDebugInitComplete:
                 ; 0001 00A4     struct rtc_structure time;
                 ; 0001 00A5     struct prop_cnfg_st properties_config;
                 ; 0001 00A6 
                 ; 0001 00A7     printDebug("Initial Device Completed at - ");
003c71 97ef      	SBIW R28,63
003c72 97ef      	SBIW R28,63
003c73 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003c74 ede5     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003c75 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003c76 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003c77 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003c78 940e b22a 	CALL SUBOPT_0x3
                 ; 0001 00A8     RTC_getDateTime(&time,properties_config.timeZone);
003c7a 01fe      	MOVW R30,R28
003c7b 55ef      	SUBI R30,LOW(-(161))
003c7c 4fff      	SBCI R31,HIGH(-(161))
003c7d 93fa      	ST   -Y,R31
003c7e 93ea      	ST   -Y,R30
003c7f 01de      	MOVW R26,R28
003c80 55ae      	SUBI R26,LOW(-162)
003c81 4fbf      	SBCI R27,HIGH(-162)
003c82 91ec      	LD   R30,X
003c83 e0f0      	LDI  R31,0
003c84 fde7      	SBRC R30,7
003c85 efff      	SER  R31
003c86 01df      	MOVW R26,R30
003c87 940e 45a5 	CALL _RTC_getDateTime
                 ; 0001 00A9     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00AA             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003c89 efe4     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003c8a e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003c8b e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003c8c e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003c8d 940e cec8 	CALL __PUTPARD1
                +
003c8f 01fe     +MOVW R30 , R28
003c90 55eb     +SUBI R30 , LOW ( - 165 )
003c91 4fff     +SBCI R31 , HIGH ( - 165 )
003c92 9001     +LD R0 , Z +
003c93 9011     +LD R1 , Z +
003c94 9161     +LD R22 , Z +
003c95 8170     +LD R23 , Z
003c96 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003c97 940e cec8 	CALL __PUTPARD1
003c99 01fe      	MOVW R30,R28
003c9a 55e7      	SUBI R30,LOW(-(169))
003c9b 4fff      	SBCI R31,HIGH(-(169))
003c9c 9634      	ADIW R30,4
003c9d 940e b557 	CALL SUBOPT_0x78
003c9f 01fe      	MOVW R30,R28
003ca0 55e3      	SUBI R30,LOW(-(173))
003ca1 4fff      	SBCI R31,HIGH(-(173))
003ca2 9638      	ADIW R30,8
003ca3 940e b557 	CALL SUBOPT_0x78
003ca5 01fe      	MOVW R30,R28
003ca6 54ef      	SUBI R30,LOW(-(177))
003ca7 4fff      	SBCI R31,HIGH(-(177))
003ca8 963c      	ADIW R30,12
003ca9 940e b557 	CALL SUBOPT_0x78
003cab 01fe      	MOVW R30,R28
003cac 54eb      	SUBI R30,LOW(-(181))
003cad 4fff      	SBCI R31,HIGH(-(181))
003cae 9670      	ADIW R30,16
003caf 940e b557 	CALL SUBOPT_0x78
003cb1 01fe      	MOVW R30,R28
003cb2 54e7      	SUBI R30,LOW(-(185))
003cb3 4fff      	SBCI R31,HIGH(-(185))
003cb4 9674      	ADIW R30,20
003cb5 940e b557 	CALL SUBOPT_0x78
003cb7 e188      	LDI  R24,24
003cb8 940e 9245 	CALL _printDebug
003cba 966c      	ADIW R28,28
                 ; 0001 00AB }
003cbb 96ef      	ADIW R28,63
003cbc 96ef      	ADIW R28,63
003cbd 96ed      	ADIW R28,61
003cbe 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AE {
                 _showLedInitComplete:
                 ; 0001 00AF     LED_ON(BIT_LED_ALARM);
003cbf 91e0 0102 	LDS  R30,258
003cc1 7bef      	ANDI R30,0xBF
003cc2 940e b55d 	CALL SUBOPT_0x79
                 ; 0001 00B0     delay_ms(200);
                 ; 0001 00B1 
                 ; 0001 00B2     LED_ON(BIT_LED_LINK);
003cc4 91e0 0102 	LDS  R30,258
003cc6 7def      	ANDI R30,0xDF
003cc7 940e b55d 	CALL SUBOPT_0x79
                 ; 0001 00B3     delay_ms(200);
                 ; 0001 00B4 
                 ; 0001 00B5     LED_ON(BIT_LED_TEMP);
003cc9 91e0 0102 	LDS  R30,258
003ccb 7eef      	ANDI R30,0xEF
003ccc 940e b55d 	CALL SUBOPT_0x79
                 ; 0001 00B6     delay_ms(200);
                 ; 0001 00B7 
                 ; 0001 00B8     LED_ON(BIT_LED_PWR);
003cce 91e0 0102 	LDS  R30,258
003cd0 7fe7      	ANDI R30,0XF7
003cd1 940e b55d 	CALL SUBOPT_0x79
                 ; 0001 00B9     delay_ms(200);
                 ; 0001 00BA 
                 ; 0001 00BB     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003cd3 91e0 0102 	LDS  R30,258
003cd5 67e8      	ORI  R30,LOW(0x78)
003cd6 940e b55d 	CALL SUBOPT_0x79
                 ; 0001 00BC     delay_ms(200);
                 ; 0001 00BD 
                 ; 0001 00BE     LED_ON(BIT_LED_PWR);
003cd8 91e0 0102 	LDS  R30,258
003cda 7fe7      	ANDI R30,0XF7
003cdb 93e0 0102 	STS  258,R30
                 ; 0001 00BF     delay_ms(50);
003cdd 940e b560 	CALL SUBOPT_0x7A
                 ; 0001 00C0 }
003cdf 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003ce0 940e b564 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003ce2 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003ce4 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003ce6 2fe1      	MOV  R30,R17
003ce7 71ec      	ANDI R30,LOW(0x1C)
003ce8 f011      	BREQ PC+3
003ce9 940c 3d94 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003ceb 91e0 1420 	LDS  R30,_ETH_current_mode
003ced 30e0      	CPI  R30,0
003cee f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003cef eaa3      	LDI  R26,LOW(_rx_wr_index0)
003cf0 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003cf1 940e b578 	CALL SUBOPT_0x7C
003cf3 9731      	SBIW R30,1
003cf4 55e1      	SUBI R30,LOW(-_rx_buffer0)
003cf5 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003cf6 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003cf7 91a0 0fa3 	LDS  R26,_rx_wr_index0
003cf9 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003cfb 3fa4      	CPI  R26,LOW(0x1F4)
003cfc e0e1      	LDI  R30,HIGH(0x1F4)
003cfd 07be      	CPC  R27,R30
003cfe f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003cff e0e0      	LDI  R30,LOW(0)
003d00 93e0 0fa3 	STS  _rx_wr_index0,R30
003d02 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003d04 eaa7      	LDI  R26,LOW(_rx_counter0)
003d05 e0bf      	LDI  R27,HIGH(_rx_counter0)
003d06 940e b578 	CALL SUBOPT_0x7C
003d08 3fe4      	CPI  R30,LOW(0x1F4)
003d09 e0a1      	LDI  R26,HIGH(0x1F4)
003d0a 07fa      	CPC  R31,R26
003d0b f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003d0c e0e0      	LDI  R30,LOW(0)
003d0d 93e0 0fa7 	STS  _rx_counter0,R30
003d0f 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003d11 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003d12 e0e3      	LDI  R30,LOW(3)
003d13 93ea      	ST   -Y,R30
                +
003d14 efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003d15 e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003d16 d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003d17 e0e3      	LDI  R30,LOW(3)
003d18 93ea      	ST   -Y,R30
                +
003d19 e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003d1a e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003d1b d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003d1c e0e3      	LDI  R30,LOW(3)
003d1d 93ea      	ST   -Y,R30
                +
003d1e e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003d1f e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003d20 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003d21 c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003d22 2fa0      	MOV  R26,R16
003d23 d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003d24 940e b57e 	CALL SUBOPT_0x7D
003d26 34a5      	CPI  R26,LOW(0x145)
003d27 e0e1      	LDI  R30,HIGH(0x145)
003d28 07be      	CPC  R27,R30
003d29 f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
003d2a 940e b583 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
003d2c 330c      	CPI  R16,60
003d2d f421      	BRNE _0x4000D
003d2e 91a0 10f0 	LDS  R26,_config_start
003d30 30a0      	CPI  R26,LOW(0x0)
003d31 f009      	BREQ _0x4000E
                 _0x4000D:
003d32 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
003d33 e0e1      	LDI  R30,LOW(1)
003d34 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
003d36 e0e0      	LDI  R30,LOW(0)
003d37 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
003d39 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
003d3b c058      	RJMP _0x4000F
                 _0x4000C:
003d3c 300d      	CPI  R16,13
003d3d f461      	BRNE _0x40011
003d3e 91a0 10f2 	LDS  R26,_config_end
003d40 30a0      	CPI  R26,LOW(0x0)
003d41 f441      	BRNE _0x40011
003d42 91a0 10f0 	LDS  R26,_config_start
003d44 30a1      	CPI  R26,LOW(0x1)
003d45 f421      	BRNE _0x40011
003d46 91a0 10f3 	LDS  R26,_config_response
003d48 30a0      	CPI  R26,LOW(0x0)
003d49 f409      	BRNE _0x40012
                 _0x40011:
003d4a c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
003d4b e0ed      	LDI  R30,LOW(13)
003d4c 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
003d4e c045      	RJMP _0x40013
                 _0x40010:
003d4f 300a      	CPI  R16,10
003d50 f461      	BRNE _0x40015
003d51 91a0 10f2 	LDS  R26,_config_end
003d53 30ad      	CPI  R26,LOW(0xD)
003d54 f441      	BRNE _0x40015
003d55 91a0 10f0 	LDS  R26,_config_start
003d57 30a1      	CPI  R26,LOW(0x1)
003d58 f421      	BRNE _0x40015
003d59 91a0 10f3 	LDS  R26,_config_response
003d5b 30a0      	CPI  R26,LOW(0x0)
003d5c f409      	BRNE _0x40016
                 _0x40015:
003d5d c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
003d5e e0ea      	LDI  R30,LOW(10)
003d5f 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
003d61 e0e1      	LDI  R30,LOW(1)
003d62 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
003d64 c02f      	RJMP _0x40017
                 _0x40014:
003d65 3405      	CPI  R16,69
003d66 f441      	BRNE _0x40019
003d67 91a0 10f0 	LDS  R26,_config_start
003d69 30a1      	CPI  R26,LOW(0x1)
003d6a f421      	BRNE _0x40019
003d6b 91a0 10f3 	LDS  R26,_config_response
003d6d 30a0      	CPI  R26,LOW(0x0)
003d6e f009      	BREQ _0x4001A
                 _0x40019:
003d6f c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
003d70 e4e5      	LDI  R30,LOW(69)
003d71 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
003d73 c020      	RJMP _0x4001B
                 _0x40018:
003d74 3503      	CPI  R16,83
003d75 f441      	BRNE _0x4001D
003d76 91a0 10f0 	LDS  R26,_config_start
003d78 30a1      	CPI  R26,LOW(0x1)
003d79 f421      	BRNE _0x4001D
003d7a 91a0 10f3 	LDS  R26,_config_response
003d7c 30a0      	CPI  R26,LOW(0x0)
003d7d f009      	BREQ _0x4001E
                 _0x4001D:
003d7e c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
003d7f e5e3      	LDI  R30,LOW(83)
003d80 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
003d82 c011      	RJMP _0x4001F
                 _0x4001C:
003d83 91a0 10f0 	LDS  R26,_config_start
003d85 30a1      	CPI  R26,LOW(0x1)
003d86 f421      	BRNE _0x40021
003d87 91a0 10f3 	LDS  R26,_config_response
003d89 30a0      	CPI  R26,LOW(0x0)
003d8a f409      	BRNE _0x40022
                 _0x40021:
003d8b c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
003d8c eeae      	LDI  R26,LOW(_configLen)
003d8d e1b0      	LDI  R27,HIGH(_configLen)
003d8e 940e b578 	CALL SUBOPT_0x7C
003d90 9731      	SBIW R30,1
003d91 55e7      	SUBI R30,LOW(-_configRd)
003d92 4ff0      	SBCI R31,HIGH(-_configRd)
003d93 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
003d94 c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
003d95 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
003d96 91e0 00c0 	LDS  R30,192
003d98 72e0      	ANDI R30,LOW(0x20)
003d99 f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
003d9a 81e8      	LD   R30,Y
003d9b 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
003d9d c0cb      	RJMP _0x20E0092
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
003d9e 940e b589 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
003da0 e020     +LDI R18 , LOW ( 0 )
003da1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
003da2 91a0 0fa7 	LDS  R26,_rx_counter0
003da4 91b0 0fa8 	LDS  R27,_rx_counter0+1
003da6 940e cf20 	CALL __CPW02
003da8 f010      	BRLO PC+3
003da9 940c 3deb 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
003dab eaa5      	LDI  R26,LOW(_rx_rd_index0)
003dac e0bf      	LDI  R27,HIGH(_rx_rd_index0)
003dad 940e b578 	CALL SUBOPT_0x7C
003daf 9731      	SBIW R30,1
003db0 55e1      	SUBI R30,LOW(-_rx_buffer0)
003db1 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003db2 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
003db3 91a0 0fa5 	LDS  R26,_rx_rd_index0
003db5 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
003db7 3fa4      	CPI  R26,LOW(0x1F4)
003db8 e0e1      	LDI  R30,HIGH(0x1F4)
003db9 07be      	CPC  R27,R30
003dba f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
003dbb e0e0      	LDI  R30,LOW(0)
003dbc 93e0 0fa5 	STS  _rx_rd_index0,R30
003dbe 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
003dc0 91e0 00c1 	LDS  R30,193
003dc2 77ef      	ANDI R30,0x7F
003dc3 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
003dc5 eaa7      	LDI  R26,LOW(_rx_counter0)
003dc6 e0bf      	LDI  R27,HIGH(_rx_counter0)
003dc7 91ed      	LD   R30,X+
003dc8 91fd      	LD   R31,X+
003dc9 9731      	SBIW R30,1
003dca 93fe      	ST   -X,R31
003dcb 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
003dcc 91e0 00c1 	LDS  R30,193
003dce 68e0      	ORI  R30,0x80
003dcf 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
003dd1 940e b58e 	CALL SUBOPT_0x80
003dd3 93fa      	ST   -Y,R31
003dd4 93ea      	ST   -Y,R30
003dd5 b7ed      	IN   R30,SPL
003dd6 b7fe      	IN   R31,SPH
003dd7 93fa      	ST   -Y,R31
003dd8 93ea      	ST   -Y,R30
003dd9 931f      	PUSH R17
003dda 940e b54e 	CALL SUBOPT_0x75
003ddc 940e 9739 	CALL _memcpy
003dde 911f      	POP  R17
                 ; 0002 0092         len++;
                +
003ddf 5f2f     +SUBI R18 , LOW ( - 1 )
003de0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
003de1 81ee      	LDD  R30,Y+6
003de2 81ff      	LDD  R31,Y+6+1
003de3 17e2      	CP   R30,R18
003de4 07f3      	CPC  R31,R19
003de5 f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
003de6 81ac      	LDD  R26,Y+4
003de7 81bd      	LDD  R27,Y+4+1
003de8 940e cb81 	CALL _delay_ms
                 ; 0002 0098     }
003dea cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
003deb 01f9      	MOVW R30,R18
003dec 940e cf41 	CALL __LOADLOCR4
003dee c145      	RJMP _0x20E0091
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
003def 940e b595 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
003df1 e000     +LDI R16 , LOW ( 0 )
003df2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
003df3 940e b59a 	CALL SUBOPT_0x82
003df5 f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
003df6 940e b59f 	CALL SUBOPT_0x83
003df8 91ac      	LD   R26,X
003df9 df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
003dfa 5f0f     +SUBI R16 , LOW ( - 1 )
003dfb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
003dfc cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
003dfd 01f8      	MOVW R30,R16
003dfe 8119      	LDD  R17,Y+1
003dff 8108      	LDD  R16,Y+0
003e00 9626      	ADIW R28,6
003e01 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
003e02 93ea      	ST   -Y,R30
003e03 b7ef      	IN   R30,SREG
003e04 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
003e05 931a      	ST   -Y,R17
003e06 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003e07 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
003e09 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003e0b 2fe1      	MOV  R30,R17
003e0c 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
003e0d c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
003e0e 93ea      	ST   -Y,R30
003e0f b7ef      	IN   R30,SREG
003e10 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
003e11 931a      	ST   -Y,R17
003e12 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003e13 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
003e15 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003e17 2fe1      	MOV  R30,R17
003e18 71ec      	ANDI R30,LOW(0x1C)
003e19 f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
003e1a 340b      	CPI  R16,75
003e1b f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
003e1c 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
003e1d 9109      	LD   R16,Y+
003e1e 9119      	LD   R17,Y+
003e1f 91e9      	LD   R30,Y+
003e20 bfef      	OUT  SREG,R30
003e21 91e9      	LD   R30,Y+
003e22 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
003e23 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
003e24 91e0 00d0 	LDS  R30,208
003e26 72e0      	ANDI R30,LOW(0x20)
003e27 f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
003e28 81e8      	LD   R30,Y
003e29 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
003e2b c03d      	RJMP _0x20E0092
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
003e2c 940e b564 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
003e2e 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
003e30 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003e32 2fe1      	MOV  R30,R17
003e33 71ec      	ANDI R30,LOW(0x1C)
003e34 f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
003e35 2fa0      	MOV  R26,R16
003e36 d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
003e37 3204      	CPI  R16,36
003e38 f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
003e39 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
003e3a 2de5      	MOV  R30,R5
003e3b 9453      	INC  R5
003e3c e0f0      	LDI  R31,0
003e3d 59e1      	SUBI R30,LOW(-_rxPackage3)
003e3e 4ff2      	SBCI R31,HIGH(-_rxPackage3)
003e3f 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
003e40 e4e0      	LDI  R30,LOW(64)
003e41 165e      	CP   R5,R30
003e42 f008      	BRLO _0x4003E
003e43 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
003e44 3203      	CPI  R16,35
003e45 f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
003e46 2de5      	MOV  R30,R5
003e47 50e1      	SUBI R30,LOW(1)
003e48 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
003e49 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
003e4a e0e1      	LDI  R30,LOW(1)
003e4b 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
003e4d 9109      	LD   R16,Y+
003e4e 9119      	LD   R17,Y+
003e4f 91e9      	LD   R30,Y+
003e50 bfef      	OUT  SREG,R30
003e51 91e9      	LD   R30,Y+
003e52 bfec      	OUT  EIND,R30
003e53 91e9      	LD   R30,Y+
003e54 bfeb      	OUT  RAMPZ,R30
003e55 91f9      	LD   R31,Y+
003e56 91e9      	LD   R30,Y+
003e57 91b9      	LD   R27,Y+
003e58 91a9      	LD   R26,Y+
003e59 9199      	LD   R25,Y+
003e5a 9189      	LD   R24,Y+
003e5b 9179      	LD   R23,Y+
003e5c 9169      	LD   R22,Y+
003e5d 90f9      	LD   R15,Y+
003e5e 9019      	LD   R1,Y+
003e5f 9009      	LD   R0,Y+
003e60 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
003e61 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
003e62 91e0 0130 	LDS  R30,304
003e64 72e0      	ANDI R30,LOW(0x20)
003e65 f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
003e66 81e8      	LD   R30,Y
003e67 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E0092:
003e69 9621      	ADIW R28,1
003e6a 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
003e6b 93ba      	ST   -Y,R27
003e6c 93aa      	ST   -Y,R26
003e6d 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
003e6e e010      	LDI  R17,0
003e6f 81eb      	LDD  R30,Y+3
003e70 940e b34d 	CALL SUBOPT_0x2C
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
003e72 f429      	BRNE _0x40046
003e73 81a9      	LDD  R26,Y+1
003e74 81ba      	LDD  R27,Y+1+1
003e75 940e adf0 	CALL _puts
                 ; 0002 0100                 break;
003e77 c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
003e78 30e1      	CPI  R30,LOW(0x1)
003e79 e0a0      	LDI  R26,HIGH(0x1)
003e7a 07fa      	CPC  R31,R26
003e7b f431      	BRNE _0x40047
                 _0x40048:
003e7c 940e b5a5 	CALL SUBOPT_0x84
003e7e f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
003e7f 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
003e80 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
003e81 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
003e82 30e2      	CPI  R30,LOW(0x2)
003e83 e0a0      	LDI  R26,HIGH(0x2)
003e84 07fa      	CPC  R31,R26
003e85 f449      	BRNE _0x4004B
                 _0x4004C:
003e86 940e b5a5 	CALL SUBOPT_0x84
003e88 f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
003e89 940e b5ad 	CALL SUBOPT_0x85
003e8b df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
003e8c 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
003e8d cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
003e8e c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
003e8f 30e3      	CPI  R30,LOW(0x3)
003e90 e0a0      	LDI  R26,HIGH(0x3)
003e91 07fa      	CPC  R31,R26
003e92 f441      	BRNE _0x40045
                 _0x40050:
003e93 940e b5a5 	CALL SUBOPT_0x84
003e95 f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
003e96 940e b5ad 	CALL SUBOPT_0x85
003e98 dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
003e99 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
003e9a cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
003e9b 8118      	LDD  R17,Y+0
003e9c 940c 41da 	JMP  _0x20E008E
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
003e9e e0e0      	LDI  R30,LOW(0)
003e9f 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
003ea1 e9e8      	LDI  R30,LOW(152)
003ea2 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
003ea4 e0e6      	LDI  R30,LOW(6)
003ea5 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
003ea7 e0e0      	LDI  R30,LOW(0)
003ea8 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
003eaa e3e3      	LDI  R30,LOW(51)
003eab 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
003ead e0e0      	LDI  R30,LOW(0)
003eae 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
003eb0 e9e8      	LDI  R30,LOW(152)
003eb1 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
003eb3 e0e6      	LDI  R30,LOW(6)
003eb4 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
003eb6 e0e0      	LDI  R30,LOW(0)
003eb7 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
003eb9 e0ec      	LDI  R30,LOW(12)
003eba 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
003ebc e0e0      	LDI  R30,LOW(0)
003ebd 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
003ebf e9e8      	LDI  R30,LOW(152)
003ec0 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
003ec2 e0e6      	LDI  R30,LOW(6)
003ec3 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
003ec5 e0e0      	LDI  R30,LOW(0)
003ec6 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
003ec8 e0ec      	LDI  R30,LOW(12)
003ec9 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
003ecb e0e0      	LDI  R30,LOW(0)
003ecc 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
003ece e9e8      	LDI  R30,LOW(152)
003ecf 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
003ed1 e0e6      	LDI  R30,LOW(6)
003ed2 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
003ed4 e0e0      	LDI  R30,LOW(0)
003ed5 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
003ed7 e0ec      	LDI  R30,LOW(12)
003ed8 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
003eda 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
003edb 940e b5b4 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
003edd f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
003ede efef      	LDI  R30,LOW(65535)
003edf efff      	LDI  R31,HIGH(65535)
003ee0 940c 41da 	JMP  _0x20E008E
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
003ee2 940e b5bb 	CALL SUBOPT_0x87
003ee4 940e b5be 	CALL SUBOPT_0x88
003ee6 940e cf33 	CALL __CPD21
003ee8 f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
003ee9 e0e0      	LDI  R30,LOW(0)
003eea e0f0      	LDI  R31,HIGH(0)
003eeb 940c 41da 	JMP  _0x20E008E
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
003eed e0e1      	LDI  R30,LOW(1)
003eee e0f0      	LDI  R31,HIGH(1)
003eef 940c 41da 	JMP  _0x20E008E
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
003ef1 940e cecd 	CALL __PUTPARD2
003ef3 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
003ef4 940e b5c7 	CALL SUBOPT_0x89
003ef6 940e cf1c 	CALL __CPD10
003ef8 f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
003ef9 e6e6     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
003efa e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
003efb e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
003efc e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
003efd 940e b22a 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
003eff 85a8      	LDD  R26,Y+8
003f00 85b9      	LDD  R27,Y+8+1
003f01 940e b31c 	CALL SUBOPT_0x25
003f03 940e cea3 	CALL __PUTDP1
                 ; 0003 0030         return -1;
003f05 efef      	LDI  R30,LOW(65535)
003f06 efff      	LDI  R31,HIGH(65535)
003f07 c02c      	RJMP _0x20E0091
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
003f08 940e b5c7 	CALL SUBOPT_0x89
003f0a 940e b5be 	CALL SUBOPT_0x88
003f0c 940e b5cc 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
003f0e 940e b5bb 	CALL SUBOPT_0x87
003f10 85a8      	LDD  R26,Y+8
003f11 85b9      	LDD  R27,Y+8+1
003f12 940e cea3 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
003f14 940e b5d1 	CALL SUBOPT_0x8B
003f16 940e b5da 	CALL SUBOPT_0x8C
003f18 940e cf2e 	CALL __CPD12
003f1a f0b8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
003f1b e8e9     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
003f1c e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
003f1d e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
003f1e e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
003f1f 940e cec8 	CALL __PUTPARD1
003f21 940e b5d1 	CALL SUBOPT_0x8B
003f23 940e b5dd 	CALL SUBOPT_0x8D
003f25 940e b5dd 	CALL SUBOPT_0x8D
003f27 940e cec8 	CALL __PUTPARD1
003f29 940e b4db 	CALL SUBOPT_0x66
                 ; 0003 0039         *keeper = 0;
003f2b 85a8      	LDD  R26,Y+8
003f2c 85b9      	LDD  R27,Y+8+1
003f2d 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0003 003A         return -1;
003f2f efef      	LDI  R30,LOW(65535)
003f30 efff      	LDI  R31,HIGH(65535)
003f31 c002      	RJMP _0x20E0091
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
003f32 e0e0      	LDI  R30,LOW(0)
003f33 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0091:
003f34 962a      	ADIW R28,10
003f35 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
003f36 940e b5eb 	CALL SUBOPT_0x8F
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
003f38 ecec     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
003f39 e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
003f3a e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
003f3b e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
003f3c 940e b22a 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
003f3e c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
003f3f 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
003f40 e6e4      	LDI  R30,LOW(100)
003f41 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
003f42 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
003f43 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
003f44 940e b5fd 	CALL SUBOPT_0x90
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
003f46 c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
003f47 940e b5eb 	CALL SUBOPT_0x8F
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
003f49 ebe2      	LDI  R30,LOW(178)
003f4a 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
003f4c 940e 9c85 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
003f4e 91e9      	LD   R30,Y+
003f4f bfef      	OUT  SREG,R30
003f50 91e9      	LD   R30,Y+
003f51 bfec      	OUT  EIND,R30
003f52 91e9      	LD   R30,Y+
003f53 bfeb      	OUT  RAMPZ,R30
003f54 91f9      	LD   R31,Y+
003f55 91e9      	LD   R30,Y+
003f56 91b9      	LD   R27,Y+
003f57 91a9      	LD   R26,Y+
003f58 9199      	LD   R25,Y+
003f59 9189      	LD   R24,Y+
003f5a 9179      	LD   R23,Y+
003f5b 9169      	LD   R22,Y+
003f5c 90f9      	LD   R15,Y+
003f5d 9019      	LD   R1,Y+
003f5e 9009      	LD   R0,Y+
003f5f 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
003f60 936a      	ST   -Y,R22
003f61 937a      	ST   -Y,R23
003f62 93aa      	ST   -Y,R26
003f63 93ba      	ST   -Y,R27
003f64 93ea      	ST   -Y,R30
003f65 93fa      	ST   -Y,R31
003f66 b7ef      	IN   R30,SREG
003f67 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
003f68 940e b604 	CALL SUBOPT_0x91
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
003f6a 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
003f6b e7a7      	LDI  R26,LOW(_baseCounter)
003f6c e1b3      	LDI  R27,HIGH(_baseCounter)
003f6d 940e b60b 	CALL SUBOPT_0x92
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
003f6f e3a0      	LDI  R26,LOW(_raw_rtc)
003f70 e1b4      	LDI  R27,HIGH(_raw_rtc)
003f71 940e b60b 	CALL SUBOPT_0x92
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
003f73 91e9      	LD   R30,Y+
003f74 bfef      	OUT  SREG,R30
003f75 91f9      	LD   R31,Y+
003f76 91e9      	LD   R30,Y+
003f77 91b9      	LD   R27,Y+
003f78 91a9      	LD   R26,Y+
003f79 9179      	LD   R23,Y+
003f7a 9169      	LD   R22,Y+
003f7b 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
003f7c 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
003f7d 940e b614 	CALL SUBOPT_0x93
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
003f7f 9bf4      	SBIS 0x1E,4
003f80 c002      	RJMP _0x6000D
003f81 98f4      	CBI  0x1E,4
003f82 c001      	RJMP _0x6000E
                 _0x6000D:
003f83 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
003f84 9bf3      	SBIS 0x1E,3
003f85 c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
003f86 9bf4      	SBIS 0x1E,4
003f87 c002      	RJMP _0x60010
003f88 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
003f89 c001      	RJMP _0x60013
                 _0x60010:
003f8a 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
003f8b c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
003f8c 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
003f8d 91e9      	LD   R30,Y+
003f8e 9518      	RETI
                 ;
                 ;//// Timer5 overflow interrupt service routine
                 ;//interrupt [TIM5_OVF] void timer5_ovf_isr(void)
                 ;//{
                 ;//// Place your code here
                 ;//
                 ;//}
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 009C {
                 _init_timer:
                 ; 0003 009D 
                 ; 0003 009E     // Timer/Counter 0 initialization
                 ; 0003 009F     // Clock source: System Clock
                 ; 0003 00A0     // Clock value: 7.813 kHz
                 ; 0003 00A1     // Mode: Normal top=0xFF
                 ; 0003 00A2     // OC0A output: Disconnected
                 ; 0003 00A3     // OC0B output: Disconnected
                 ; 0003 00A4     TCCR0A=0x00;
003f8f e0e0      	LDI  R30,LOW(0)
003f90 bde4      	OUT  0x24,R30
                 ; 0003 00A5     TCCR0B=0x05;
003f91 e0e5      	LDI  R30,LOW(5)
003f92 bde5      	OUT  0x25,R30
                 ; 0003 00A6     TCNT0=0x64;
003f93 e6e4      	LDI  R30,LOW(100)
003f94 bde6      	OUT  0x26,R30
                 ; 0003 00A7     OCR0A=0x00;
003f95 e0e0      	LDI  R30,LOW(0)
003f96 bde7      	OUT  0x27,R30
                 ; 0003 00A8     OCR0B=0x00;
003f97 bde8      	OUT  0x28,R30
                 ; 0003 00A9 
                 ; 0003 00AA     // Timer/Counter 1 initialization
                 ; 0003 00AB     // Clock source: System Clock
                 ; 0003 00AC     // Clock value: 7.813 kHz
                 ; 0003 00AD     // Mode: Normal top=0xFFFF
                 ; 0003 00AE     // OC1A output: Discon.
                 ; 0003 00AF     // OC1B output: Discon.
                 ; 0003 00B0     // OC1C output: Discon.
                 ; 0003 00B1     // Noise Canceler: Off
                 ; 0003 00B2     // Input Capture on Falling Edge
                 ; 0003 00B3     // Timer1 Overflow Interrupt: On
                 ; 0003 00B4     // Input Capture Interrupt: Off
                 ; 0003 00B5     // Compare A Match Interrupt: Off
                 ; 0003 00B6     // Compare B Match Interrupt: Off
                 ; 0003 00B7     // Compare C Match Interrupt: Off
                 ; 0003 00B8     TCCR1A=0x00;
003f98 93e0 0080 	STS  128,R30
                 ; 0003 00B9     TCCR1B=0x05;
003f9a e0e5      	LDI  R30,LOW(5)
003f9b 93e0 0081 	STS  129,R30
                 ; 0003 00BA     //TCNT1H=0xFF;
                 ; 0003 00BB     //TCNT1L=0x64;
                 ; 0003 00BC     TCNT1H=0xFE;
003f9d 940e b5fd 	CALL SUBOPT_0x90
                 ; 0003 00BD     TCNT1L=0x79;
                 ; 0003 00BE     ICR1H=0x00;
003f9f e0e0      	LDI  R30,LOW(0)
003fa0 93e0 0087 	STS  135,R30
                 ; 0003 00BF     ICR1L=0x00;
003fa2 93e0 0086 	STS  134,R30
                 ; 0003 00C0     OCR1AH=0x00;
003fa4 93e0 0089 	STS  137,R30
                 ; 0003 00C1     OCR1AL=0x00;
003fa6 93e0 0088 	STS  136,R30
                 ; 0003 00C2     OCR1BH=0x00;
003fa8 93e0 008b 	STS  139,R30
                 ; 0003 00C3     OCR1BL=0x00;
003faa 93e0 008a 	STS  138,R30
                 ; 0003 00C4     OCR1CH=0x00;
003fac 93e0 008d 	STS  141,R30
                 ; 0003 00C5     OCR1CL=0x00;
003fae 93e0 008c 	STS  140,R30
                 ; 0003 00C6 
                 ; 0003 00C7     // Timer/Counter 2 initialization
                 ; 0003 00C8     // Clock source: System Clock
                 ; 0003 00C9     // Clock value: 7.813 kHz
                 ; 0003 00CA     // Mode: Normal top=0xFF
                 ; 0003 00CB     // OC2A output: Disconnected
                 ; 0003 00CC     // OC2B output: Disconnected
                 ; 0003 00CD     ASSR=0x00;
003fb0 93e0 00b6 	STS  182,R30
                 ; 0003 00CE     TCCR2A=0x00;
003fb2 93e0 00b0 	STS  176,R30
                 ; 0003 00CF     TCCR2B=0x07;
003fb4 e0e7      	LDI  R30,LOW(7)
003fb5 93e0 00b1 	STS  177,R30
                 ; 0003 00D0     TCNT2=0xb2;
003fb7 ebe2      	LDI  R30,LOW(178)
003fb8 93e0 00b2 	STS  178,R30
                 ; 0003 00D1     OCR2A=0x00;
003fba e0e0      	LDI  R30,LOW(0)
003fbb 93e0 00b3 	STS  179,R30
                 ; 0003 00D2     OCR2B=0x00;
003fbd 93e0 00b4 	STS  180,R30
                 ; 0003 00D3 
                 ; 0003 00D4     // Timer/Counter 3 initialization
                 ; 0003 00D5     // Clock source: System Clock
                 ; 0003 00D6     // Clock value: 31.250 kHz
                 ; 0003 00D7     // Mode: Normal top=0xFFFF
                 ; 0003 00D8     // OC3A output: Discon.
                 ; 0003 00D9     // OC3B output: Discon.
                 ; 0003 00DA     // OC3C output: Discon.
                 ; 0003 00DB     // Noise Canceler: Off
                 ; 0003 00DC     // Input Capture on Falling Edge
                 ; 0003 00DD     // Timer3 Overflow Interrupt: On
                 ; 0003 00DE     // Input Capture Interrupt: Off
                 ; 0003 00DF     // Compare A Match Interrupt: Off
                 ; 0003 00E0     // Compare B Match Interrupt: Off
                 ; 0003 00E1     // Compare C Match Interrupt: Off
                 ; 0003 00E2     TCCR3A=0x00;
003fbf 93e0 0090 	STS  144,R30
                 ; 0003 00E3     TCCR3B=0x04;
003fc1 e0e4      	LDI  R30,LOW(4)
003fc2 93e0 0091 	STS  145,R30
                 ; 0003 00E4     TCNT3H=0x85;
003fc4 940e b604 	CALL SUBOPT_0x91
                 ; 0003 00E5     TCNT3L=0xED;
                 ; 0003 00E6     ICR3H=0x00;
003fc6 e0e0      	LDI  R30,LOW(0)
003fc7 93e0 0097 	STS  151,R30
                 ; 0003 00E7     ICR3L=0x00;
003fc9 93e0 0096 	STS  150,R30
                 ; 0003 00E8     OCR3AH=0x00;
003fcb 93e0 0099 	STS  153,R30
                 ; 0003 00E9     OCR3AL=0x00;
003fcd 93e0 0098 	STS  152,R30
                 ; 0003 00EA     OCR3BH=0x00;
003fcf 93e0 009b 	STS  155,R30
                 ; 0003 00EB     OCR3BL=0x00;
003fd1 93e0 009a 	STS  154,R30
                 ; 0003 00EC     OCR3CH=0x00;
003fd3 93e0 009d 	STS  157,R30
                 ; 0003 00ED     OCR3CL=0x00;
003fd5 93e0 009c 	STS  156,R30
                 ; 0003 00EE 
                 ; 0003 00EF     // Timer/Counter 4 initialization
                 ; 0003 00F0     // Clock source: System Clock
                 ; 0003 00F1     // Clock value: 125.000 kHz
                 ; 0003 00F2     // Mode: Normal top=0xFFFF
                 ; 0003 00F3     // OC4A output: Discon.
                 ; 0003 00F4     // OC4B output: Discon.
                 ; 0003 00F5     // OC4C output: Discon.
                 ; 0003 00F6     // Noise Canceler: Off
                 ; 0003 00F7     // Input Capture on Falling Edge
                 ; 0003 00F8     // Timer4 Overflow Interrupt: On
                 ; 0003 00F9     // Input Capture Interrupt: Off
                 ; 0003 00FA     // Compare A Match Interrupt: Off
                 ; 0003 00FB     // Compare B Match Interrupt: Off
                 ; 0003 00FC     // Compare C Match Interrupt: Off
                 ; 0003 00FD     TCCR4A=0x00;
003fd7 93e0 00a0 	STS  160,R30
                 ; 0003 00FE     TCCR4B=0x03;
003fd9 e0e3      	LDI  R30,LOW(3)
003fda 93e0 00a1 	STS  161,R30
                 ; 0003 00FF     TCNT4H=0x85;
003fdc 940e b614 	CALL SUBOPT_0x93
                 ; 0003 0100     TCNT4L=0xED;
                 ; 0003 0101     ICR4H=0x00;
003fde e0e0      	LDI  R30,LOW(0)
003fdf 93e0 00a7 	STS  167,R30
                 ; 0003 0102     ICR4L=0x00;
003fe1 93e0 00a6 	STS  166,R30
                 ; 0003 0103     OCR4AH=0x00;
003fe3 93e0 00a9 	STS  169,R30
                 ; 0003 0104     OCR4AL=0x00;
003fe5 93e0 00a8 	STS  168,R30
                 ; 0003 0105     OCR4BH=0x00;
003fe7 93e0 00ab 	STS  171,R30
                 ; 0003 0106     OCR4BL=0x00;
003fe9 93e0 00aa 	STS  170,R30
                 ; 0003 0107     OCR4CH=0x00;
003feb 93e0 00ad 	STS  173,R30
                 ; 0003 0108     OCR4CL=0x00;
003fed 93e0 00ac 	STS  172,R30
                 ; 0003 0109 
                 ; 0003 010A     // Timer/Counter 5 initialization
                 ; 0003 010B     // Clock source: System Clock
                 ; 0003 010C     // Clock value: Timer5 Stopped
                 ; 0003 010D     // Mode: Normal top=0xFFFF
                 ; 0003 010E     // OC5A output: Discon.
                 ; 0003 010F     // OC5B output: Discon.
                 ; 0003 0110     // OC5C output: Discon.
                 ; 0003 0111     // Noise Canceler: Off
                 ; 0003 0112     // Input Capture on Falling Edge
                 ; 0003 0113     // Timer5 Overflow Interrupt: Off
                 ; 0003 0114     // Input Capture Interrupt: Off
                 ; 0003 0115     // Compare A Match Interrupt: Off
                 ; 0003 0116     // Compare B Match Interrupt: Off
                 ; 0003 0117     // Compare C Match Interrupt: Off
                 ; 0003 0118     TCCR5A=0x00;
003fef 93e0 0120 	STS  288,R30
                 ; 0003 0119     TCCR5B=0x00;
003ff1 940e b61b 	CALL SUBOPT_0x94
                 ; 0003 011A     TCNT5H=0x00;
                 ; 0003 011B     TCNT5L=0x00;
                 ; 0003 011C     ICR5H=0x00;
003ff3 e0e0      	LDI  R30,LOW(0)
003ff4 93e0 0127 	STS  295,R30
                 ; 0003 011D     ICR5L=0x00;
003ff6 93e0 0126 	STS  294,R30
                 ; 0003 011E     OCR5AH=0x00;
003ff8 93e0 0129 	STS  297,R30
                 ; 0003 011F     OCR5AL=0x00;
003ffa 93e0 0128 	STS  296,R30
                 ; 0003 0120     OCR5BH=0x00;
003ffc 93e0 012b 	STS  299,R30
                 ; 0003 0121     OCR5BL=0x00;
003ffe 93e0 012a 	STS  298,R30
                 ; 0003 0122     OCR5CH=0x00;
004000 93e0 012d 	STS  301,R30
                 ; 0003 0123     OCR5CL=0x00;
004002 93e0 012c 	STS  300,R30
                 ; 0003 0124 
                 ; 0003 0125     // Watchdog Timer initialization
                 ; 0003 0126     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0127     // Watchdog Timer interrupt: On
                 ; 0003 0128     #pragma optsize-
                 ; 0003 0129     #asm("wdr")
004004 95a8      	wdr
                 ; 0003 012A     WDTCSR=0x79;
004005 e7e9      	LDI  R30,LOW(121)
004006 93e0 0060 	STS  96,R30
                 ; 0003 012B     WDTCSR=0x69;
004008 e6e9      	LDI  R30,LOW(105)
004009 93e0 0060 	STS  96,R30
                 ; 0003 012C 
                 ; 0003 012D     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 012E     #pragma optsize+
                 ; 0003 012F     #endif
                 ; 0003 0130 
                 ; 0003 0131 
                 ; 0003 0132     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 0133     TIMSK0=0x00;
00400b e0e0      	LDI  R30,LOW(0)
00400c 93e0 006e 	STS  110,R30
                 ; 0003 0134 
                 ; 0003 0135     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0136     TIMSK1=0x00;
00400e 93e0 006f 	STS  111,R30
                 ; 0003 0137 
                 ; 0003 0138     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0139     TIMSK2=0x00;
004010 93e0 0070 	STS  112,R30
                 ; 0003 013A 
                 ; 0003 013B     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 013C     TIMSK3=0x00;
004012 93e0 0071 	STS  113,R30
                 ; 0003 013D 
                 ; 0003 013E     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 013F     TIMSK4=0x00;
004014 93e0 0072 	STS  114,R30
                 ; 0003 0140 
                 ; 0003 0141     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 0142     TIMSK5=0x00;
004016 93e0 0073 	STS  115,R30
                 ; 0003 0143 }
004018 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 0146 {
                 _enable_interrupt:
                 ; 0003 0147 
                 ; 0003 0148     // -------------- enable timer ---------------  //
                 ; 0003 0149 
                 ; 0003 014A     switch(ch){
004019 940e b623 	CALL SUBOPT_0x95
                 ;	ch -> Y+0
                 ; 0003 014B         case 0: // Timer/Counter 0 Interrupt(s) initialization
00401b 9730      	SBIW R30,0
00401c f0f9      	BREQ _0x6001B
                 ; 0003 014C                 //TIMSK0=0x01;
                 ; 0003 014D                 break;
                 ; 0003 014E         case 1: // Timer/Counter 1 Interrupt(s) initialization
00401d 30e1      	CPI  R30,LOW(0x1)
00401e e0a0      	LDI  R26,HIGH(0x1)
00401f 07fa      	CPC  R31,R26
004020 f421      	BRNE _0x6001D
                 ; 0003 014F                 TIMSK1=0x01;
004021 e0e1      	LDI  R30,LOW(1)
004022 93e0 006f 	STS  111,R30
                 ; 0003 0150                 break;
004024 c017      	RJMP _0x6001B
                 ; 0003 0151         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
004025 30e2      	CPI  R30,LOW(0x2)
004026 e0a0      	LDI  R26,HIGH(0x2)
004027 07fa      	CPC  R31,R26
004028 f421      	BRNE _0x6001E
                 ; 0003 0152                 TIMSK2=0x01;
004029 e0e1      	LDI  R30,LOW(1)
00402a 93e0 0070 	STS  112,R30
                 ; 0003 0153                 break;
00402c c00f      	RJMP _0x6001B
                 ; 0003 0154         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
00402d 30e3      	CPI  R30,LOW(0x3)
00402e e0a0      	LDI  R26,HIGH(0x3)
00402f 07fa      	CPC  R31,R26
004030 f421      	BRNE _0x6001F
                 ; 0003 0155                 TIMSK3=0x01;
004031 e0e1      	LDI  R30,LOW(1)
004032 93e0 0071 	STS  113,R30
                 ; 0003 0156                 break;
004034 c007      	RJMP _0x6001B
                 ; 0003 0157         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
004035 30e4      	CPI  R30,LOW(0x4)
004036 e0a0      	LDI  R26,HIGH(0x4)
004037 07fa      	CPC  R31,R26
004038 f419      	BRNE _0x6001B
                 ; 0003 0158                 TIMSK4=0x01;
004039 e0e1      	LDI  R30,LOW(1)
00403a 93e0 0072 	STS  114,R30
                 ; 0003 0159                 break;
                 ; 0003 015A     }
                 _0x6001B:
                 ; 0003 015B     // Global enable interrupts
                 ; 0003 015C     #asm("sei")
00403c 9478      	sei
                 ; 0003 015D }
00403d 9622      	ADIW R28,2
00403e 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0160 {
                 ; 0003 0161 
                 ; 0003 0162     // -------------- enable timer ---------------  //
                 ; 0003 0163 
                 ; 0003 0164     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 0165         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 0166                 //TIMSK0=0x00;
                 ; 0003 0167                 break;
                 ; 0003 0168         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0169                 TIMSK1=0x00;
                 ; 0003 016A                 break;
                 ; 0003 016B         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 016C                 TIMSK2=0x00;
                 ; 0003 016D                 break;
                 ; 0003 016E         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 016F                 TIMSK3=0x00;
                 ; 0003 0170                 break;
                 ; 0003 0171         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0172                 TIMSK4=0x00;
                 ; 0003 0173                 break;
                 ; 0003 0174     }
                 ; 0003 0175     // Global enable interrupts
                 ; 0003 0176     #asm("sei")
                 ; 0003 0177 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
00403f e0e0      	LDI  R30,LOW(0)
004040 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
004041 e0e4      	LDI  R30,LOW(4)
004042 b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
004043 efef      	LDI  R30,LOW(255)
004044 b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
004045 efe7      	LDI  R30,LOW(247)
004046 b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
004047 ece0      	LDI  R30,LOW(192)
004048 b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
004049 e0e0      	LDI  R30,LOW(0)
00404a b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
00404b e8e0      	LDI  R30,LOW(128)
00404c b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
00404d e0e0      	LDI  R30,LOW(0)
00404e b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
00404f efec      	LDI  R30,LOW(252)
004050 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
004051 b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
004052 e0e0      	LDI  R30,LOW(0)
004053 bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
004054 bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
004055 e3e0      	LDI  R30,LOW(48)
004056 bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
004057 bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
004058 efe8      	LDI  R30,LOW(248)
004059 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
00405b 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
00405d e8e0      	LDI  R30,LOW(128)
00405e 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
004060 e0e0      	LDI  R30,LOW(0)
004061 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
004063 940e b35e 	CALL SUBOPT_0x2F
004065 f021      	BREQ _0x80005
004066 940e b35e 	CALL SUBOPT_0x2F
004068 30e3      	CPI  R30,LOW(0x3)
004069 f429      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054         PORTK=0x90;
00406a e9e0      	LDI  R30,LOW(144)
00406b 93e0 0108 	STS  264,R30
                 ; 0004 0055         DDRK=0x0E;
00406d e0ee      	LDI  R30,LOW(14)
00406e c00b      	RJMP _0x8003D
                 ; 0004 0056     }
                 ; 0004 0057     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
00406f 940e b628 	CALL SUBOPT_0x96
004071 f021      	BREQ _0x80009
004072 940e b35e 	CALL SUBOPT_0x2F
004074 30e2      	CPI  R30,LOW(0x2)
004075 f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 0058         // Port K initialization
                 ; 0004 0059         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005A         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 005B         PORTK=0x80;
004076 e8e0      	LDI  R30,LOW(128)
004077 93e0 0108 	STS  264,R30
                 ; 0004 005C         DDRK=0x00;
004079 e0e0      	LDI  R30,LOW(0)
                 _0x8003D:
00407a 93e0 0107 	STS  263,R30
                 ; 0004 005D     }
                 ; 0004 005E 
                 ; 0004 005F     // Port L initialization
                 ; 0004 0060     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0061     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0062     PORTL=0x00;
                 _0x80008:
00407c e0e0      	LDI  R30,LOW(0)
00407d 93e0 010b 	STS  267,R30
                 ; 0004 0063     DDRL=0x00;
00407f 93e0 010a 	STS  266,R30
                 ; 0004 0064 
                 ; 0004 0065 }
004081 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 0068 {
                 _IO_dout:
                 ; 0004 0069     switch(ch){
004082 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
004083 81e9      	LDD  R30,Y+1
004084 81fa      	LDD  R31,Y+1+1
                 ; 0004 006A         case 0  :   DOUT1       =   !state;
004085 9730      	SBIW R30,0
004086 f451      	BRNE _0x8000E
004087 81e8      	LD   R30,Y
004088 30e0      	CPI  R30,0
004089 f011      	BREQ _0x8000F
00408a 9873      	CBI  0xE,3
00408b c001      	RJMP _0x80010
                 _0x8000F:
00408c 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 006B                     d_out[0]    =   state;
00408d 81e8      	LD   R30,Y
00408e 93e0 1434 	STS  _d_out,R30
                 ; 0004 006C                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 006D                     break;
004090 c00d      	RJMP _0x8000D
                 ; 0004 006E         case 1  :   DOUT2       =   !state;
                 _0x8000E:
004091 30e1      	CPI  R30,LOW(0x1)
004092 e0a0      	LDI  R26,HIGH(0x1)
004093 07fa      	CPC  R31,R26
004094 f449      	BRNE _0x80014
004095 81e8      	LD   R30,Y
004096 30e0      	CPI  R30,0
004097 f011      	BREQ _0x80012
004098 9874      	CBI  0xE,4
004099 c001      	RJMP _0x80013
                 _0x80012:
00409a 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 006F                     d_out[1]    =   state;
00409b 81e8      	LD   R30,Y
                +
00409c 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0070                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0071                     break;
                 ; 0004 0072         default :   break;
                 _0x80014:
                 ; 0004 0073     }
                 _0x8000D:
                 ; 0004 0074 }
00409e c100      	RJMP _0x20E008F
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 0077 {
                 _IO_keyCheck:
                 ; 0004 0078     static char flag_hold_MODE   = 0;
                 ; 0004 0079     static char flag_hold_UP     = 0;
                 ; 0004 007A     static char flag_hold_DOWN   = 0;
                 ; 0004 007B     static char flag_hold_OK     = 0;
                 ; 0004 007C 
                 ; 0004 007D     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
00409f b1e3      	IN   R30,0x3
0040a0 940e b369 	CALL SUBOPT_0x30
0040a2 f421      	BRNE _0x80016
0040a3 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0040a5 30e0      	CPI  R30,0
0040a6 f009      	BREQ _0x80017
                 _0x80016:
0040a7 c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 007E     {
                 ; 0004 007F         delay_ms(KEY_DELAY);
0040a8 940e b635 	CALL SUBOPT_0x97
                 ; 0004 0080 
                 ; 0004 0081         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
0040aa 940e b369 	CALL SUBOPT_0x30
0040ac f421      	BRNE _0x80019
0040ad 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0040af 30e0      	CPI  R30,0
0040b0 f009      	BREQ _0x8001A
                 _0x80019:
0040b1 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0082         {
                 ; 0004 0083             flag_hold_MODE = 1;
0040b2 e0e1      	LDI  R30,LOW(1)
0040b3 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0084             return 0;
0040b5 c09d      	RJMP _0x20E0090
                 ; 0004 0085         }
                 ; 0004 0086     }
                 _0x80018:
                 ; 0004 0087     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
0040b6 c014      	RJMP _0x8001B
                 _0x80015:
0040b7 b1e3      	IN   R30,0x3
0040b8 940e b369 	CALL SUBOPT_0x30
0040ba f021      	BREQ _0x8001D
0040bb 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0040bd 30e0      	CPI  R30,0
0040be f409      	BRNE _0x8001E
                 _0x8001D:
0040bf c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 0088     {
                 ; 0004 0089         printDebug("<IO_keyCheck> key MODE\r\n");
                +
0040c0 eeee     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
0040c1 e1f0     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
0040c2 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
0040c3 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
0040c4 940e b22a 	CALL SUBOPT_0x3
                 ; 0004 008A         flag_hold_MODE = 0;
0040c6 e0e0      	LDI  R30,LOW(0)
0040c7 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 008B         return KEY_MODE;
0040c9 e0e1      	LDI  R30,LOW(1)
0040ca 9508      	RET
                 ; 0004 008C     }
                 ; 0004 008D 
                 ; 0004 008E     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
0040cb 940e b63b 	CALL SUBOPT_0x98
0040cd f421      	BRNE _0x80020
0040ce 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0040d0 30e0      	CPI  R30,0
0040d1 f009      	BREQ _0x80021
                 _0x80020:
0040d2 c014      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 008F     {
                 ; 0004 0090         delay_ms(KEY_DELAY);
0040d3 940e b635 	CALL SUBOPT_0x97
                 ; 0004 0091 
                 ; 0004 0092         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
0040d5 72e0      	ANDI R30,LOW(0x20)
0040d6 e0f0      	LDI  R31,0
0040d7 95f5      	ASR  R31
0040d8 95e7      	ROR  R30
0040d9 940e cd8c 	CALL __ASRW4
0040db 9730      	SBIW R30,0
0040dc f421      	BRNE _0x80023
0040dd 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0040df 30e0      	CPI  R30,0
0040e0 f009      	BREQ _0x80024
                 _0x80023:
0040e1 c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0093         {
                 ; 0004 0094             flag_hold_UP = 1;
0040e2 e0e1      	LDI  R30,LOW(1)
0040e3 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 0095             return 0;
0040e5 c06d      	RJMP _0x20E0090
                 ; 0004 0096         }
                 ; 0004 0097     }
                 _0x80022:
                 ; 0004 0098     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
0040e6 c013      	RJMP _0x80025
                 _0x8001F:
0040e7 940e b63b 	CALL SUBOPT_0x98
0040e9 f021      	BREQ _0x80027
0040ea 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0040ec 30e0      	CPI  R30,0
0040ed f409      	BRNE _0x80028
                 _0x80027:
0040ee c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 0099     {
                 ; 0004 009A         printDebug("<IO_keyCheck> key UP\r\n");
                +
0040ef e0e7     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
0040f0 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
0040f1 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
0040f2 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
0040f3 940e b22a 	CALL SUBOPT_0x3
                 ; 0004 009B         flag_hold_UP = 0;
0040f5 e0e0      	LDI  R30,LOW(0)
0040f6 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009C         return KEY_UP;
0040f8 e0e2      	LDI  R30,LOW(2)
0040f9 9508      	RET
                 ; 0004 009D     }
                 ; 0004 009E 
                 ; 0004 009F     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
0040fa 940e b644 	CALL SUBOPT_0x99
0040fc f421      	BRNE _0x8002A
0040fd 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
0040ff 30e0      	CPI  R30,0
004100 f009      	BREQ _0x8002B
                 _0x8002A:
004101 c014      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A0     {
                 ; 0004 00A1         delay_ms(KEY_DELAY);
004102 940e b635 	CALL SUBOPT_0x97
                 ; 0004 00A2 
                 ; 0004 00A3         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
004104 74e0      	ANDI R30,LOW(0x40)
004105 e0f0      	LDI  R31,0
004106 940e cd90 	CALL __ASRW2
004108 940e cd8c 	CALL __ASRW4
00410a 9730      	SBIW R30,0
00410b f421      	BRNE _0x8002D
00410c 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
00410e 30e0      	CPI  R30,0
00410f f009      	BREQ _0x8002E
                 _0x8002D:
004110 c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A4         {
                 ; 0004 00A5             flag_hold_DOWN = 1;
004111 e0e1      	LDI  R30,LOW(1)
004112 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00A6             return 0;
004114 c03e      	RJMP _0x20E0090
                 ; 0004 00A7         }
                 ; 0004 00A8     }
                 _0x8002C:
                 ; 0004 00A9     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
004115 c013      	RJMP _0x8002F
                 _0x80029:
004116 940e b644 	CALL SUBOPT_0x99
004118 f021      	BREQ _0x80031
004119 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
00411b 30e0      	CPI  R30,0
00411c f409      	BRNE _0x80032
                 _0x80031:
00411d c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AA     {
                 ; 0004 00AB         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
00411e e1ee     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
00411f e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
004120 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
004121 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
004122 940e b22a 	CALL SUBOPT_0x3
                 ; 0004 00AC         flag_hold_DOWN = 0;
004124 e0e0      	LDI  R30,LOW(0)
004125 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AD         return KEY_DOWN;
004127 e0e3      	LDI  R30,LOW(3)
004128 9508      	RET
                 ; 0004 00AE     }
                 ; 0004 00AF 
                 ; 0004 00B0     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
004129 940e b64d 	CALL SUBOPT_0x9A
00412b f421      	BRNE _0x80034
00412c 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
00412e 30e0      	CPI  R30,0
00412f f009      	BREQ _0x80035
                 _0x80034:
004130 c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B1     {
                 ; 0004 00B2         delay_ms(KEY_DELAY);
004131 940e b635 	CALL SUBOPT_0x97
                 ; 0004 00B3 
                 ; 0004 00B4         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
004133 940e b656 	CALL SUBOPT_0x9B
004135 f421      	BRNE _0x80037
004136 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004138 30e0      	CPI  R30,0
004139 f009      	BREQ _0x80038
                 _0x80037:
00413a c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00B5         {
                 ; 0004 00B6             flag_hold_OK = 1;
00413b e0e1      	LDI  R30,LOW(1)
00413c 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00B7             return 0;
00413e c014      	RJMP _0x20E0090
                 ; 0004 00B8         }
                 ; 0004 00B9     }
                 _0x80036:
                 ; 0004 00BA     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
00413f c013      	RJMP _0x80039
                 _0x80033:
004140 940e b64d 	CALL SUBOPT_0x9A
004142 f021      	BREQ _0x8003B
004143 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004145 30e0      	CPI  R30,0
004146 f409      	BRNE _0x8003C
                 _0x8003B:
004147 c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00BB     {
                 ; 0004 00BC         printDebug("<IO_keyCheck> key OK\r\n");
                +
004148 e3e7     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
004149 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
00414a e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
00414b e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
00414c 940e b22a 	CALL SUBOPT_0x3
                 ; 0004 00BD         flag_hold_OK = 0;
00414e e0e0      	LDI  R30,LOW(0)
00414f 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BE         return KEY_OK;
004151 e0e4      	LDI  R30,LOW(4)
004152 9508      	RET
                 ; 0004 00BF     }
                 ; 0004 00C0 
                 ; 0004 00C1     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0090:
004153 e0e0      	LDI  R30,LOW(0)
004154 9508      	RET
                 ; 0004 00C2 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     unsigned int adc_data = 0x0000;
                 ; 0005 0012 
                 ; 0005 0013     ADMUX  &= ADC_VREF_TYPE;
004155 93aa      	ST   -Y,R26
004156 940e b65e 	CALL SUBOPT_0x9C
                 ;	adc_input -> Y+2
                 ;	adc_data -> R16,R17
004158 91e0 007c 	LDS  R30,124
00415a 74e0      	ANDI R30,LOW(0x40)
00415b 93e0 007c 	STS  124,R30
                 ; 0005 0014     ADCSRB &= 0xf7;
00415d 91e0 007b 	LDS  R30,123
00415f 7fe7      	ANDI R30,0XF7
004160 93e0 007b 	STS  123,R30
                 ; 0005 0015 
                 ; 0005 0016     ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
004162 e7ac      	LDI  R26,LOW(124)
004163 e0b0      	LDI  R27,HIGH(124)
004164 2e0a      	MOV  R0,R26
004165 91ac      	LD   R26,X
004166 81ea      	LDD  R30,Y+2
004167 70e7      	ANDI R30,LOW(0x7)
004168 64e0      	ORI  R30,0x40
004169 2bea      	OR   R30,R26
00416a 2da0      	MOV  R26,R0
00416b 93ec      	ST   X,R30
                 ; 0005 0017 
                 ; 0005 0018     if(adc_input > 7)
00416c 81aa      	LDD  R26,Y+2
00416d 30a8      	CPI  R26,LOW(0x8)
00416e f020      	BRLO _0xA0003
                 ; 0005 0019     {
                 ; 0005 001A         ADCSRB |= 0x08;
00416f 91e0 007b 	LDS  R30,123
004171 60e8      	ORI  R30,8
004172 c003      	RJMP _0xA0020
                 ; 0005 001B     }
                 ; 0005 001C     else
                 _0xA0003:
                 ; 0005 001D     {
                 ; 0005 001E         ADCSRB &= 0xf7;
004173 91e0 007b 	LDS  R30,123
004175 7fe7      	ANDI R30,0XF7
                 _0xA0020:
004176 93e0 007b 	STS  123,R30
                 ; 0005 001F     }
                 ; 0005 0020 
                 ; 0005 0021     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0022     delay_us(20);
                +
004178 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
004179 958a     +DEC R24
00417a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0005 0023 
                 ; 0005 0024     // Start the AD conversion
                 ; 0005 0025     ADCSRA  |= 0x80; //ENABLE ADC
00417b 91e0 007a 	LDS  R30,122
00417d 68e0      	ORI  R30,0x80
00417e 93e0 007a 	STS  122,R30
                 ; 0005 0026     ADCSRA  |= 0x40;
004180 91e0 007a 	LDS  R30,122
004182 64e0      	ORI  R30,0x40
004183 93e0 007a 	STS  122,R30
                 ; 0005 0027 
                 ; 0005 0028     // Wait for the AD conversion to complete
                 ; 0005 0029     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 002A     while ( (ADCSRA & 0x10)==0);
                 _0xA0005:
004185 91e0 007a 	LDS  R30,122
004187 71e0      	ANDI R30,LOW(0x10)
004188 f3e1      	BREQ _0xA0005
                 ; 0005 002B     adc_data = ADCL;
004189 9100 0078 	LDS  R16,120
00418b 2711      	CLR  R17
                 ; 0005 002C     adc_data |= (ADCH & 0x00ff) << 8;
00418c 91e0 0079 	LDS  R30,121
00418e 940e b663 	CALL SUBOPT_0x9D
004190 2ffe      	MOV  R31,R30
004191 e0e0      	LDI  R30,0
                +
004192 2b0e     +OR R16 , R30
004193 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
                 ; 0005 002D 
                 ; 0005 002E     ADCSRA  |=0x10;
004194 91e0 007a 	LDS  R30,122
004196 61e0      	ORI  R30,0x10
004197 93e0 007a 	STS  122,R30
                 ; 0005 002F 
                 ; 0005 0030     delay_us(50);
                +
004199 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00419a 958a     +DEC R24
00419b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
                 ; 0005 0031 
                 ; 0005 0032     return adc_data;
00419c 01f8      	MOVW R30,R16
00419d 8119      	LDD  R17,Y+1
00419e 8108      	LDD  R16,Y+0
                 _0x20E008F:
00419f 9623      	ADIW R28,3
0041a0 9508      	RET
                 ; 0005 0033 }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 0036 {
                 ; 0005 0037     static int      i = 0;
                 ; 0005 0038     static char     batt_read_flag = 0;
                 ; 0005 0039 
                 ; 0005 003A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 003B         /*
                 ; 0005 003C         printDebug("<%d>",i);
                 ; 0005 003D         SENSOR_SELECT(i);
                 ; 0005 003E         delay_ms(20);
                 ; 0005 003F         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0040         if(++i >= 5){   i = 0;  }
                 ; 0005 0041         */
                 ; 0005 0042     }
                 ; 0005 0043     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 0044 //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 0045 //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 0046 //        }
                 ; 0005 0047     }
                 ; 0005 0048 
                 ; 0005 0049 //    if(++batt_read_flag > 25){
                 ; 0005 004A //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 004B //        batt_read_flag = 0;
                 ; 0005 004C //    }
                 ; 0005 004D 
                 ; 0005 004E     return 0;
                 ; 0005 004F }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 0052 {
                 _readBattery:
                 ; 0005 0053     float   vBATT;
                 ; 0005 0054 
                 ; 0005 0055     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
0041a1 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
0041a2 940e b666 	CALL SUBOPT_0x9E
                +
0041a4 e6e6     +LDI R30 , LOW ( 0x411E6666 )
0041a5 e6f6     +LDI R31 , HIGH ( 0x411E6666 )
0041a6 e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
0041a7 e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
0041a8 940e cc81 	CALL __MULF12
0041aa 937f      	PUSH R23
0041ab 936f      	PUSH R22
0041ac 93ff      	PUSH R31
0041ad 93ef      	PUSH R30
0041ae e0ae      	LDI  R26,LOW(14)
0041af dfa5      	RCALL _read_adc
0041b0 940e b66f 	CALL SUBOPT_0x9F
                +
0041b2 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
0041b3 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
0041b4 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
0041b5 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
0041b6 940e cc81 	CALL __MULF12
0041b8 91af      	POP  R26
0041b9 91bf      	POP  R27
0041ba 918f      	POP  R24
0041bb 919f      	POP  R25
0041bc 940e b674 	CALL SUBOPT_0xA0
0041be 940e b679 	CALL SUBOPT_0xA1
0041c0 940e cccf 	CALL __DIVF21
0041c2 93e0 14e8 	STS  _adcBatt,R30
0041c4 93f0 14e9 	STS  _adcBatt+1,R31
0041c6 9360 14ea 	STS  _adcBatt+2,R22
0041c8 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 0056 
                 ; 0005 0057     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
0041ca 940e b37b 	CALL SUBOPT_0x33
0041cc 940e b666 	CALL SUBOPT_0x9E
0041ce 940e cc81 	CALL __MULF12
                +
0041d0 e6a6     +LDI R26 , LOW ( 0x3FE66666 )
0041d1 e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
0041d2 ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
0041d3 e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
0041d4 940e cc81 	CALL __MULF12
0041d6 940e b67e 	CALL SUBOPT_0xA2
                 ; 0005 0058     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0059 
                 ; 0005 005A     return vBATT;
0041d8 940e b5bb 	CALL SUBOPT_0x87
                 _0x20E008E:
0041da 9624      	ADIW R28,4
0041db 9508      	RET
                 ; 0005 005B }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 005E {
                 _adc_init_read:
                 ; 0005 005F     int i;
                 ; 0005 0060     printDebug("Initializing ADC.. ");
0041dc 931a      	ST   -Y,R17
0041dd 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
0041de e4ee     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
0041df e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
0041e0 e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
0041e1 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
0041e2 940e b22a 	CALL SUBOPT_0x3
                 ; 0005 0061 
                 ; 0005 0062     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0041e4 940e b35e 	CALL SUBOPT_0x2F
0041e6 f021      	BREQ _0xA0010
0041e7 940e b35e 	CALL SUBOPT_0x2F
0041e9 30e3      	CPI  R30,LOW(0x3)
0041ea f511      	BRNE _0xA000F
                 _0xA0010:
                 ; 0005 0063         for(i=0;i<5;i++){ \
                 ; 0005 0064             SENSOR_SELECT(i);
                +
0041eb e000     +LDI R16 , LOW ( 0 )
0041ec e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0013:
                +
0041ed 3005     +CPI R16 , LOW ( 5 )
0041ee e0e0     +LDI R30 , HIGH ( 5 )
0041ef 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0041f0 f4dc      	BRGE _0xA0014
0041f1 940e b681 	CALL SUBOPT_0xA3
0041f3 2fe0      	MOV  R30,R16
0041f4 0fee      	LSL  R30
0041f5 2bea      	OR   R30,R26
0041f6 2da0      	MOV  R26,R0
0041f7 93ec      	ST   X,R30
                 ; 0005 0065             delay_ms(20);
0041f8 940e b68b 	CALL SUBOPT_0xA4
0041fa 940e cb81 	CALL _delay_ms
                 ; 0005 0066             adcData[i] = read_adc(8);
0041fc 01f8      	MOVW R30,R16
0041fd 940e b376 	CALL SUBOPT_0x32
0041ff 0fea      	ADD  R30,R26
004200 1ffb      	ADC  R31,R27
004201 93ff      	PUSH R31
004202 93ef      	PUSH R30
004203 e0a8      	LDI  R26,LOW(8)
004204 df50      	RCALL _read_adc
004205 91af      	POP  R26
004206 91bf      	POP  R27
004207 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 0067         }
                +
004209 5f0f     +SUBI R16 , LOW ( - 1 )
00420a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00420b cfe1      	RJMP _0xA0013
                 _0xA0014:
                 ; 0005 0068     }
                 ; 0005 0069     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
00420c c025      	RJMP _0xA0015
                 _0xA000F:
00420d 940e b628 	CALL SUBOPT_0x96
00420f f021      	BREQ _0xA0017
004210 940e b35e 	CALL SUBOPT_0x2F
004212 30e2      	CPI  R30,LOW(0x2)
004213 f4f1      	BRNE _0xA0016
                 _0xA0017:
                 ; 0005 006A         adcData[0] = read_adc(8);
004214 e0a8      	LDI  R26,LOW(8)
004215 df3f      	RCALL _read_adc
004216 e3a6      	LDI  R26,LOW(_adcData)
004217 e1b4      	LDI  R27,HIGH(_adcData)
004218 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 006B         adcData[1] = read_adc(9);
00421a e0a9      	LDI  R26,LOW(9)
00421b df39      	RCALL _read_adc
                +
00421c e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
00421d e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
00421e 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 006C         adcData[2] = read_adc(10);
004220 e0aa      	LDI  R26,LOW(10)
004221 df33      	RCALL _read_adc
                +
004222 e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
004223 e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
004224 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 006D         adcData[3] = read_adc(11);
004226 e0ab      	LDI  R26,LOW(11)
004227 df2d      	RCALL _read_adc
                +
004228 e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
004229 e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
00422a 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 006E         adcData[4] = read_adc(12);
00422c e0ac      	LDI  R26,LOW(12)
00422d df27      	RCALL _read_adc
                +
00422e e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
00422f e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
004230 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 006F     }
                 ; 0005 0070 
                 ; 0005 0071     adcBatt = read_adc(14);
                 _0xA0016:
                 _0xA0015:
004232 e0ae      	LDI  R26,LOW(14)
004233 df21      	RCALL _read_adc
004234 eea8      	LDI  R26,LOW(_adcBatt)
004235 e1b4      	LDI  R27,HIGH(_adcBatt)
004236 940e b68e 	CALL SUBOPT_0xA5
                 ; 0005 0072 
                 ; 0005 0073     printDebug("OK\r\n");
                +
004238 e6e2     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
004239 e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
00423a e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
00423b e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
00423c 940e b22a 	CALL SUBOPT_0x3
                 ; 0005 0074 }
00423e 9109      	LD   R16,Y+
00423f 9119      	LD   R17,Y+
004240 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 0077 {
                 _init_adc:
                 ; 0005 0078     // ADC initialization
                 ; 0005 0079     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 007A     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 007B     // ADC Auto Trigger Source: Free Running
                 ; 0005 007C     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 007D     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 007E     DIDR0=0x00;
004241 e0e0      	LDI  R30,LOW(0)
004242 93e0 007e 	STS  126,R30
                 ; 0005 007F 
                 ; 0005 0080 
                 ; 0005 0081     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
004244 940e b35e 	CALL SUBOPT_0x2F
004246 f021      	BREQ _0xA001A
004247 940e b35e 	CALL SUBOPT_0x2F
004249 30e3      	CPI  R30,LOW(0x3)
00424a f411      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0082         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 0083         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0084         DIDR2=0x61;
00424b e6e1      	LDI  R30,LOW(97)
00424c c008      	RJMP _0xA0021
                 ; 0005 0085     }
                 ; 0005 0086     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0xA0019:
00424d 940e b628 	CALL SUBOPT_0x96
00424f f021      	BREQ _0xA001E
004250 940e b35e 	CALL SUBOPT_0x2F
004252 30e2      	CPI  R30,LOW(0x2)
004253 f419      	BRNE _0xA001D
                 _0xA001E:
                 ; 0005 0087         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0088         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0089         DIDR2=0x7F;
004254 e7ef      	LDI  R30,LOW(127)
                 _0xA0021:
004255 93e0 007d 	STS  125,R30
                 ; 0005 008A     }
                 ; 0005 008B 
                 ; 0005 008C     ADMUX   = ADC_VREF_TYPE;
                 _0xA001D:
004257 e4e0      	LDI  R30,LOW(64)
004258 93e0 007c 	STS  124,R30
                 ; 0005 008D     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 008E               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 008F               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 0090               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 0091               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 0092               (1<<2) |          //-----
                 ; 0005 0093               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 0094               (0<<0);           //-----
00425a e8e6      	LDI  R30,LOW(134)
00425b 93e0 007a 	STS  122,R30
                 ; 0005 0095 
                 ; 0005 0096     ADCSRB  = 0;
00425d e0e0      	LDI  R30,LOW(0)
00425e 93e0 007b 	STS  123,R30
                 ; 0005 0097 
                 ; 0005 0098     //adc_init_read();
                 ; 0005 0099 }
004260 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
004261 94f8      	cli
                 ; 0006 000E     i2c_start();
004262 940e b692 	CALL SUBOPT_0xA6
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
004264 e0a5      	LDI  R26,LOW(5)
004265 940e cb69 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
004267 eaa6      	LDI  R26,LOW(166)
004268 940e b697 	CALL SUBOPT_0xA7
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
00426a 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
00426b 940e b69b 	CALL SUBOPT_0xA8
                 ; 0006 0017 
                 ; 0006 0018     return 0;
00426d 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
00426e 9724      	SBIW R28,4
00426f 940e cf3a 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
004271 94f8      	cli
                 ; 0006 0021     i2c_start();
004272 940e b692 	CALL SUBOPT_0xA6
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
004274 e0a0      	LDI  R26,LOW(0)
004275 940e cb69 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
004277 940e cb35 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
004279 eda1      	LDI  R26,LOW(209)
00427a 940e cb69 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
00427c e0a1      	LDI  R26,LOW(1)
00427d 940e cb4e 	CALL _i2c_read
00427f 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
004280 e0a1      	LDI  R26,LOW(1)
004281 940e cb4e 	CALL _i2c_read
004283 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
004284 e0a1      	LDI  R26,LOW(1)
004285 940e cb4e 	CALL _i2c_read
004287 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
004288 e0a0      	LDI  R26,LOW(0)
004289 940e cb4e 	CALL _i2c_read
00428b 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
00428c 940e cb44 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
00428e 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
00428f 2fe2      	MOV  R30,R18
004290 27ff      	CLR  R31
004291 2766      	CLR  R22
004292 2777      	CLR  R23
004293 940e b6a2 	CALL SUBOPT_0xA9
                 ; 0006 002E     z <<= 8;
004295 940e b6a7 	CALL SUBOPT_0xAA
004297 940e b6ac 	CALL SUBOPT_0xAB
                 ; 0006 002F     z += rtc_reg3;
004299 2fe3      	MOV  R30,R19
00429a 940e b6b0 	CALL SUBOPT_0xAC
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
00429c 2fe0      	MOV  R30,R16
00429d 940e b6b0 	CALL SUBOPT_0xAC
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
00429f 940e b6b9 	CALL SUBOPT_0xAD
0042a1 940e b6a7 	CALL SUBOPT_0xAA
0042a3 940e b6bc 	CALL SUBOPT_0xAE
0042a5 940e b6c1 	CALL SUBOPT_0xAF
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
0042a7 940e cf41 	CALL __LOADLOCR4
0042a9 9628      	ADIW R28,8
0042aa 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
0042ab 93ba      	ST   -Y,R27
0042ac 93aa      	ST   -Y,R26
0042ad 97a8      	SBIW R28,40
0042ae e08c      	LDI  R24,12
0042af e1ac      	LDI  R26,LOW(28)
0042b0 e0b0      	LDI  R27,HIGH(28)
0042b1 e6e8      	LDI  R30,LOW(_0xC0003*2)
0042b2 e1f1      	LDI  R31,HIGH(_0xC0003*2)
0042b3 e060      	LDI  R22,BYTE3(_0xC0003*2)
0042b4 940e cf46 	CALL __INITLOCB
0042b6 931a      	ST   -Y,R17
0042b7 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
0042b8 a5ac     +LDD R26 , Y + 44
0042b9 a5bd     +LDD R27 , Y + 44 + 1
0042ba a58e     +LDD R24 , Y + 44 + 2
0042bb a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
0042bc 940e b6c3 	CALL SUBOPT_0xB0
0042be 940e b6ca 	CALL SUBOPT_0xB1
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
0042c0 940e b6cf 	CALL SUBOPT_0xB2
                +
0042c2 a5ac     +LDD R26 , Y + 44
0042c3 a5bd     +LDD R27 , Y + 44 + 1
0042c4 a58e     +LDD R24 , Y + 44 + 2
0042c5 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
0042c6 940e cd47 	CALL __SUBD21
                +
0042c8 87aa     +STD Y + 10 , R26
0042c9 87bb     +STD Y + 10 + 1 , R27
0042ca 878c     +STD Y + 10 + 2 , R24
0042cb 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
0042cc 940e b48c 	CALL SUBOPT_0x59
0042ce 940e b6c3 	CALL SUBOPT_0xB0
0042d0 940e b6d6 	CALL SUBOPT_0xB3
                 ; 0006 0044     min = j - (60 * n);
0042d2 940e b6db 	CALL SUBOPT_0xB4
0042d4 940e b6cf 	CALL SUBOPT_0xB2
0042d6 940e b48c 	CALL SUBOPT_0x59
0042d8 940e cd47 	CALL __SUBD21
                +
0042da 87ae     +STD Y + 14 , R26
0042db 87bf     +STD Y + 14 + 1 , R27
0042dc 8b88     +STD Y + 14 + 2 , R24
0042dd 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
0042de 940e b6e0 	CALL SUBOPT_0xB5
                +
0042e0 e1e8     +LDI R30 , LOW ( 0x18 )
0042e1 e0f0     +LDI R31 , HIGH ( 0x18 )
0042e2 e060     +LDI R22 , BYTE3 ( 0x18 )
0042e3 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
0042e4 940e ce34 	CALL __DIVD21U
0042e6 940e b6ca 	CALL SUBOPT_0xB1
                 ; 0006 0046     hrs = n - (24 * j);
                +
0042e8 e1a8     +LDI R26 , LOW ( 0x18 )
0042e9 e0b0     +LDI R27 , HIGH ( 0x18 )
0042ea e080     +LDI R24 , BYTE3 ( 0x18 )
0042eb e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
0042ec 940e cdde 	CALL __MULD12U
0042ee 940e b6e0 	CALL SUBOPT_0xB5
0042f0 940e cd47 	CALL __SUBD21
                +
0042f2 8baa     +STD Y + 18 , R26
0042f3 8bbb     +STD Y + 18 + 1 , R27
0042f4 8b8c     +STD Y + 18 + 2 , R24
0042f5 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
0042f6 940e b6e5 	CALL SUBOPT_0xB6
                +
0042f8 52e5     +SUBI R30 , LOW ( - 731 )
0042f9 4ffd     +SBCI R31 , HIGH ( - 731 )
0042fa 4f6f     +SBCI R22 , BYTE3 ( - 731 )
0042fb 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
0042fc 940e b6ea 	CALL SUBOPT_0xB7
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
0042fe 940e b48c 	CALL SUBOPT_0x59
                +
004300 e0e7     +LDI R30 , LOW ( 0x7 )
004301 e0f0     +LDI R31 , HIGH ( 0x7 )
004302 e060     +LDI R22 , BYTE3 ( 0x7 )
004303 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
004304 940e ce76 	CALL __MODD21U
004306 9631      	ADIW R30,1
004307 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
004308 940e b6ef 	CALL SUBOPT_0xB8
00430a 940e ce34 	CALL __DIVD21U
00430c 940e b6f5 	CALL SUBOPT_0xB9
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
00430e 940e b6ef 	CALL SUBOPT_0xB8
004310 940e ce76 	CALL __MODD21U
                +
004312 8fea     +STD Y + 26 , R30
004313 8ffb     +STD Y + 26 + 1 , R31
004314 8f6c     +STD Y + 26 + 2 , R22
004315 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
004316 940e b6fa 	CALL SUBOPT_0xBA
004318 940e b6ff 	CALL SUBOPT_0xBB
00431a f040      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
                +
00431b 8dee     +LDD R30 , Y + 30
00431c 8dff     +LDD R31 , Y + 30 + 1
00431d a168     +LDD R22 , Y + 30 + 2
00431e a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00431f 940e b707 	CALL SUBOPT_0xBC
004321 940e b6f5 	CALL SUBOPT_0xB9
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
                +
004323 8dae     +LDD R26 , Y + 30
004324 8dbf     +LDD R27 , Y + 30 + 1
004325 a188     +LDD R24 , Y + 30 + 2
004326 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
004327 940e b6e5 	CALL SUBOPT_0xB6
004329 940e cd42 	CALL __SUBD12
00432b 01df      	MOVW R26,R30
00432c 01cb      	MOVW R24,R22
                +
00432d e6ed     +LDI R30 , LOW ( 0x16D )
00432e e0f1     +LDI R31 , HIGH ( 0x16D )
00432f e060     +LDI R22 , BYTE3 ( 0x16D )
004330 e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
004331 940e ce34 	CALL __DIVD21U
                +
004333 a3ee     +STD Y + 38 , R30
004334 a3ff     +STD Y + 38 + 1 , R31
004335 a768     +STD Y + 38 + 2 , R22
004336 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
004337 940e b70c 	CALL SUBOPT_0xBD
004339 940e b711 	CALL SUBOPT_0xBE
00433b 940e b48c 	CALL SUBOPT_0x59
00433d 940e b718 	CALL SUBOPT_0xBF
                +
00433f 8dae     +LDD R26 , Y + 30
004340 8dbf     +LDD R27 , Y + 30 + 1
004341 a188     +LDD R24 , Y + 30 + 2
004342 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
004343 940e cd42 	CALL __SUBD12
004345 940e b71d 	CALL SUBOPT_0xC0
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
004347 940e b6fa 	CALL SUBOPT_0xBA
                +
004349 36ae     +CPI R26 , LOW ( 0x16E )
00434a e0e1     +LDI R30 , HIGH ( 0x16E )
00434b 07be     +CPC R27 , R30
00434c e0e0     +LDI R30 , BYTE3 ( 0x16E )
00434d 078e     +CPC R24 , R30
00434e e0e0     +LDI R30 , BYTE4 ( 0x16E )
00434f 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
004350 f428      	BRSH _0xC0006
004351 940e b6fa 	CALL SUBOPT_0xBA
004353 940e b6ff 	CALL SUBOPT_0xBB
004355 f408      	BRSH _0xC0007
                 _0xC0006:
004356 c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
004357 940e b722 	CALL SUBOPT_0xC1
004359 940e b707 	CALL SUBOPT_0xBC
00435b 940e b71d 	CALL SUBOPT_0xC0
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
00435d 940e b70c 	CALL SUBOPT_0xBD
                +
00435f 55e0     +SUBI R30 , LOW ( - 1968 )
004360 4ff8     +SBCI R31 , HIGH ( - 1968 )
004361 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
004362 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
004363 a3ee     +STD Y + 38 , R30
004364 a3ff     +STD Y + 38 + 1 , R31
004365 a768     +STD Y + 38 + 2 , R22
004366 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
004367 e0ec     +LDI R30 , LOW ( 0xC )
004368 e0f0     +LDI R31 , HIGH ( 0xC )
004369 e060     +LDI R22 , BYTE3 ( 0xC )
00436a e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
00436b a3ea     +STD Y + 34 , R30
00436c a3fb     +STD Y + 34 + 1 , R31
00436d a36c     +STD Y + 34 + 2 , R22
00436e a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
00436f a1aa     +LDD R26 , Y + 34
004370 a1bb     +LDD R27 , Y + 34 + 1
004371 a18c     +LDD R24 , Y + 34 + 2
004372 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
004373 940e cf28 	CALL __CPD02
004375 f010      	BRLO PC+3
004376 940c 4403 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
004378 940e b727 	CALL SUBOPT_0xC2
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
00437a 940e b72c 	CALL SUBOPT_0xC3
00437c f431      	BRNE _0xC000E
00437d e0e0      	LDI  R30,LOW(0)
                +
00437e 8fea     +STD Y + 26 , R30
00437f 8feb     +STD Y + 26 + 1 , R30
004380 8fec     +STD Y + 26 + 2 , R30
004381 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
004382 c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
004383 940e b734 	CALL SUBOPT_0xC4
004385 f429      	BRNE _0xC000F
                +
004386 e1ef     +LDI R30 , LOW ( 0x1F )
004387 e0f0     +LDI R31 , HIGH ( 0x1F )
004388 e060     +LDI R22 , BYTE3 ( 0x1F )
004389 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
00438a c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
00438b 940e b73c 	CALL SUBOPT_0xC5
00438d f429      	BRNE _0xC0010
                +
00438e e3eb     +LDI R30 , LOW ( 0x3B )
00438f e0f0     +LDI R31 , HIGH ( 0x3B )
004390 e060     +LDI R22 , BYTE3 ( 0x3B )
004391 e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
004392 c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
004393 940e b744 	CALL SUBOPT_0xC6
004395 f429      	BRNE _0xC0011
                +
004396 e5ea     +LDI R30 , LOW ( 0x5A )
004397 e0f0     +LDI R31 , HIGH ( 0x5A )
004398 e060     +LDI R22 , BYTE3 ( 0x5A )
004399 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
00439a c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
00439b 940e b74c 	CALL SUBOPT_0xC7
00439d f429      	BRNE _0xC0012
                +
00439e e7e8     +LDI R30 , LOW ( 0x78 )
00439f e0f0     +LDI R31 , HIGH ( 0x78 )
0043a0 e060     +LDI R22 , BYTE3 ( 0x78 )
0043a1 e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
0043a2 c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
0043a3 940e b754 	CALL SUBOPT_0xC8
0043a5 f429      	BRNE _0xC0013
                +
0043a6 e9e7     +LDI R30 , LOW ( 0x97 )
0043a7 e0f0     +LDI R31 , HIGH ( 0x97 )
0043a8 e060     +LDI R22 , BYTE3 ( 0x97 )
0043a9 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
0043aa c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
0043ab 940e b75c 	CALL SUBOPT_0xC9
0043ad f429      	BRNE _0xC0014
                +
0043ae ebe5     +LDI R30 , LOW ( 0xB5 )
0043af e0f0     +LDI R31 , HIGH ( 0xB5 )
0043b0 e060     +LDI R22 , BYTE3 ( 0xB5 )
0043b1 e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
0043b2 c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
0043b3 940e b764 	CALL SUBOPT_0xCA
0043b5 f429      	BRNE _0xC0015
                +
0043b6 ede4     +LDI R30 , LOW ( 0xD4 )
0043b7 e0f0     +LDI R31 , HIGH ( 0xD4 )
0043b8 e060     +LDI R22 , BYTE3 ( 0xD4 )
0043b9 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
0043ba c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
0043bb 940e b76c 	CALL SUBOPT_0xCB
0043bd f429      	BRNE _0xC0016
                +
0043be efe3     +LDI R30 , LOW ( 0xF3 )
0043bf e0f0     +LDI R31 , HIGH ( 0xF3 )
0043c0 e060     +LDI R22 , BYTE3 ( 0xF3 )
0043c1 e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
0043c2 c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
0043c3 940e b774 	CALL SUBOPT_0xCC
0043c5 f429      	BRNE _0xC0017
                +
0043c6 e1e1     +LDI R30 , LOW ( 0x111 )
0043c7 e0f1     +LDI R31 , HIGH ( 0x111 )
0043c8 e060     +LDI R22 , BYTE3 ( 0x111 )
0043c9 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
0043ca c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
0043cb 940e b77c 	CALL SUBOPT_0xCD
0043cd f429      	BRNE _0xC0018
                +
0043ce e3e0     +LDI R30 , LOW ( 0x130 )
0043cf e0f1     +LDI R31 , HIGH ( 0x130 )
0043d0 e060     +LDI R22 , BYTE3 ( 0x130 )
0043d1 e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
0043d2 c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
0043d3 940e b784 	CALL SUBOPT_0xCE
0043d5 f441      	BRNE _0xC000D
                +
0043d6 e4ee     +LDI R30 , LOW ( 0x14E )
0043d7 e0f1     +LDI R31 , HIGH ( 0x14E )
0043d8 e060     +LDI R22 , BYTE3 ( 0x14E )
0043d9 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
0043da 8fea     +STD Y + 26 , R30
0043db 8ffb     +STD Y + 26 + 1 , R31
0043dc 8f6c     +STD Y + 26 + 2 , R22
0043dd 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
0043de a1aa     +LDD R26 , Y + 34
0043df a1bb     +LDD R27 , Y + 34 + 1
0043e0 a18c     +LDD R24 , Y + 34 + 2
0043e1 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0043e2 940e b78c 	CALL SUBOPT_0xCF
0043e4 f020      	BRLO _0xC001B
0043e5 940e b70c 	CALL SUBOPT_0xBD
0043e7 70e3      	ANDI R30,LOW(0x3)
0043e8 f009      	BREQ _0xC001C
                 _0xC001B:
0043e9 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
0043ea 940e b794 	CALL SUBOPT_0xD0
0043ec 940e b707 	CALL SUBOPT_0xBC
                +
0043ee 8fea     +STD Y + 26 , R30
0043ef 8ffb     +STD Y + 26 + 1 , R31
0043f0 8f6c     +STD Y + 26 + 2 , R22
0043f1 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
0043f2 940e b794 	CALL SUBOPT_0xD0
0043f4 940e b799 	CALL SUBOPT_0xD1
0043f6 940e cf33 	CALL __CPD21
0043f8 f450      	BRSH _0xC000A
                 ; 0006 0074     }
0043f9 940e b727 	CALL SUBOPT_0xC2
0043fb 9731      	SBIW R30,1
0043fc 4060      	SBCI R22,0
0043fd 4070      	SBCI R23,0
                +
0043fe a3ea     +STD Y + 34 , R30
0043ff a3fb     +STD Y + 34 + 1 , R31
004400 a36c     +STD Y + 34 + 2 , R22
004401 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
004402 cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
004403 940e b6fa 	CALL SUBOPT_0xBA
004405 940e b722 	CALL SUBOPT_0xC1
004407 940e cd42 	CALL __SUBD12
004409 940e b79e 	CALL SUBOPT_0xD2
00440b 940e b6f5 	CALL SUBOPT_0xB9
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
00440d 940e b70c 	CALL SUBOPT_0xBD
00440f a5aa      	LDD  R26,Y+42
004410 a5bb      	LDD  R27,Y+42+1
004411 940e cea3 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
004413 940e b727 	CALL SUBOPT_0xC2
                +
004415 a5aa     +LDD R26 , Y + 42
004416 a5bb     +LDD R27 , Y + 42 + 1
004417 9614     +ADIW R26 , 4
004418 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
                +
00441a 8dee     +LDD R30 , Y + 30
00441b 8dff     +LDD R31 , Y + 30 + 1
00441c a168     +LDD R22 , Y + 30 + 2
00441d a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
                +
00441e a5aa     +LDD R26 , Y + 42
00441f a5bb     +LDD R27 , Y + 42 + 1
004420 9618     +ADIW R26 , 8
004421 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
004423 940e b7a3 	CALL SUBOPT_0xD3
                +
004425 a5aa     +LDD R26 , Y + 42
004426 a5bb     +LDD R27 , Y + 42 + 1
004427 961c     +ADIW R26 , 12
004428 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
00442a 940e b4b3 	CALL SUBOPT_0x60
                +
00442c a5aa     +LDD R26 , Y + 42
00442d a5bb     +LDD R27 , Y + 42 + 1
00442e 9650     +ADIW R26 , 16
00442f 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
004431 940e b476 	CALL SUBOPT_0x57
                +
004433 a5aa     +LDD R26 , Y + 42
004434 a5bb     +LDD R27 , Y + 42 + 1
004435 9654     +ADIW R26 , 20
004436 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
004438 01f8      	MOVW R30,R16
                +
004439 a5aa     +LDD R26 , Y + 42
00443a a5bb     +LDD R27 , Y + 42 + 1
00443b 9658     +ADIW R26 , 24
00443c 93ed     +ST X + , R30
00443d 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
00443e 940e b7a8 	CALL SUBOPT_0xD4
004440 96e0      	ADIW R28,48
004441 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
004442 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
004443 940e b5c7 	CALL SUBOPT_0x89
                +
004445 5be2     +SUBI R30 , LOW ( 1970 )
004446 40f7     +SBCI R31 , HIGH ( 1970 )
004447 4060     +SBCI R22 , BYTE3 ( 1970 )
004448 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
004449 940e b711 	CALL SUBOPT_0xBE
00444b 940e b67e 	CALL SUBOPT_0xA2
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
00444d 940e b5c7 	CALL SUBOPT_0x89
                +
00444f 5be1     +SUBI R30 , LOW ( 1969 )
004450 40f7     +SBCI R31 , HIGH ( 1969 )
004451 4060     +SBCI R22 , BYTE3 ( 1969 )
004452 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
004453 940e cd9e 	CALL __LSRD1
004455 940e cd9e 	CALL __LSRD1
004457 940e b7ad 	CALL SUBOPT_0xD5
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
004459 940e b7af 	CALL SUBOPT_0xD6
00445b 940e b78c 	CALL SUBOPT_0xCF
00445d f018      	BRLO _0xC001F
00445e 81ec      	LDD  R30,Y+4
00445f 70e3      	ANDI R30,LOW(0x3)
004460 f009      	BREQ _0xC0020
                 _0xC001F:
004461 c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
004462 940e b5bb 	CALL SUBOPT_0x87
004464 940e b707 	CALL SUBOPT_0xBC
004466 940e b67e 	CALL SUBOPT_0xA2
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
004468 940e b443 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
00446a 940e b72c 	CALL SUBOPT_0xC3
00446c f419      	BRNE _0xC0024
00446d 940e b5bb 	CALL SUBOPT_0x87
00446f c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
004470 940e b734 	CALL SUBOPT_0xC4
004472 f439      	BRNE _0xC0025
004473 940e b5bb 	CALL SUBOPT_0x87
                +
004475 5ee1     +SUBI R30 , LOW ( - 31 )
004476 4fff     +SBCI R31 , HIGH ( - 31 )
004477 4f6f     +SBCI R22 , BYTE3 ( - 31 )
004478 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
004479 c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
00447a 940e b73c 	CALL SUBOPT_0xC5
00447c f439      	BRNE _0xC0026
00447d 940e b5bb 	CALL SUBOPT_0x87
                +
00447f 5ce5     +SUBI R30 , LOW ( - 59 )
004480 4fff     +SBCI R31 , HIGH ( - 59 )
004481 4f6f     +SBCI R22 , BYTE3 ( - 59 )
004482 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
004483 c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
004484 940e b744 	CALL SUBOPT_0xC6
004486 f439      	BRNE _0xC0027
004487 940e b5bb 	CALL SUBOPT_0x87
                +
004489 5ae6     +SUBI R30 , LOW ( - 90 )
00448a 4fff     +SBCI R31 , HIGH ( - 90 )
00448b 4f6f     +SBCI R22 , BYTE3 ( - 90 )
00448c 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
00448d c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
00448e 940e b74c 	CALL SUBOPT_0xC7
004490 f439      	BRNE _0xC0028
004491 940e b5bb 	CALL SUBOPT_0x87
                +
004493 58e8     +SUBI R30 , LOW ( - 120 )
004494 4fff     +SBCI R31 , HIGH ( - 120 )
004495 4f6f     +SBCI R22 , BYTE3 ( - 120 )
004496 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
004497 c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
004498 940e b754 	CALL SUBOPT_0xC8
00449a f439      	BRNE _0xC0029
00449b 940e b5bb 	CALL SUBOPT_0x87
                +
00449d 56e9     +SUBI R30 , LOW ( - 151 )
00449e 4fff     +SBCI R31 , HIGH ( - 151 )
00449f 4f6f     +SBCI R22 , BYTE3 ( - 151 )
0044a0 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
0044a1 c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
0044a2 940e b75c 	CALL SUBOPT_0xC9
0044a4 f439      	BRNE _0xC002A
0044a5 940e b5bb 	CALL SUBOPT_0x87
                +
0044a7 54eb     +SUBI R30 , LOW ( - 181 )
0044a8 4fff     +SBCI R31 , HIGH ( - 181 )
0044a9 4f6f     +SBCI R22 , BYTE3 ( - 181 )
0044aa 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
0044ab c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
0044ac 940e b764 	CALL SUBOPT_0xCA
0044ae f439      	BRNE _0xC002B
0044af 940e b5bb 	CALL SUBOPT_0x87
                +
0044b1 52ec     +SUBI R30 , LOW ( - 212 )
0044b2 4fff     +SBCI R31 , HIGH ( - 212 )
0044b3 4f6f     +SBCI R22 , BYTE3 ( - 212 )
0044b4 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
0044b5 c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
0044b6 940e b76c 	CALL SUBOPT_0xCB
0044b8 f439      	BRNE _0xC002C
0044b9 940e b5bb 	CALL SUBOPT_0x87
                +
0044bb 50ed     +SUBI R30 , LOW ( - 243 )
0044bc 4fff     +SBCI R31 , HIGH ( - 243 )
0044bd 4f6f     +SBCI R22 , BYTE3 ( - 243 )
0044be 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
0044bf c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
0044c0 940e b774 	CALL SUBOPT_0xCC
0044c2 f439      	BRNE _0xC002D
0044c3 940e b5bb 	CALL SUBOPT_0x87
                +
0044c5 5eef     +SUBI R30 , LOW ( - 273 )
0044c6 4ffe     +SBCI R31 , HIGH ( - 273 )
0044c7 4f6f     +SBCI R22 , BYTE3 ( - 273 )
0044c8 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
0044c9 c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
0044ca 940e b77c 	CALL SUBOPT_0xCD
0044cc f439      	BRNE _0xC002E
0044cd 940e b5bb 	CALL SUBOPT_0x87
                +
0044cf 5de0     +SUBI R30 , LOW ( - 304 )
0044d0 4ffe     +SBCI R31 , HIGH ( - 304 )
0044d1 4f6f     +SBCI R22 , BYTE3 ( - 304 )
0044d2 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
0044d3 c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
0044d4 940e b784 	CALL SUBOPT_0xCE
0044d6 f441      	BRNE _0xC0023
0044d7 940e b5bb 	CALL SUBOPT_0x87
                +
0044d9 5be2     +SUBI R30 , LOW ( - 334 )
0044da 4ffe     +SBCI R31 , HIGH ( - 334 )
0044db 4f6f     +SBCI R22 , BYTE3 ( - 334 )
0044dc 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
0044dd 940e cebe 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
0044df 940e b7b4 	CALL SUBOPT_0xD7
0044e1 940e b7b9 	CALL SUBOPT_0xD8
0044e3 940e b7ad 	CALL SUBOPT_0xD5
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
0044e5 940e b5bb 	CALL SUBOPT_0x87
                +
0044e7 e8a0     +LDI R26 , LOW ( 0x15180 )
0044e8 e5b1     +LDI R27 , HIGH ( 0x15180 )
0044e9 e081     +LDI R24 , BYTE3 ( 0x15180 )
0044ea e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
0044eb 940e cdde 	CALL __MULD12U
0044ed 940e b67e 	CALL SUBOPT_0xA2
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
0044ef 940e b7be 	CALL SUBOPT_0xD9
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
0044f1 940e b7be 	CALL SUBOPT_0xD9
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
0044f3 940e b7c6 	CALL SUBOPT_0xDA
0044f5 940e b6cf 	CALL SUBOPT_0xB2
0044f7 940e b7ad 	CALL SUBOPT_0xD5
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
0044f9 940e b7cb 	CALL SUBOPT_0xDB
0044fb 940e b7ad 	CALL SUBOPT_0xD5
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
0044fd 940e b5bb 	CALL SUBOPT_0x87
0044ff 966e      	ADIW R28,30
004500 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
004501 940e cecd 	CALL __PUTPARD2
004503 9728      	SBIW R28,8
004504 940e cf3a 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004506 940e b43c 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
004508 940e b7d0 	CALL SUBOPT_0xDC
00450a f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
00450b 940e b7d5 	CALL SUBOPT_0xDD
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
00450d c00b      	RJMP _0xC0031
                 _0xC0030:
00450e 940e b7da 	CALL SUBOPT_0xDE
004510 f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
004511 940e b7df 	CALL SUBOPT_0xDF
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
004513 c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
004514 e0e0      	LDI  R30,LOW(0)
                +
004515 83ec     +STD Y + 4 , R30
004516 83ed     +STD Y + 4 + 1 , R30
004517 83ee     +STD Y + 4 + 2 , R30
004518 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
004519 940e b6a7 	CALL SUBOPT_0xAA
00451b 940e cf24 	CALL __CPD20
00451d f018      	BRLO _0xC0035
00451e 940e b7e4 	CALL SUBOPT_0xE0
004520 f008      	BRLO _0xC0036
                 _0xC0035:
004521 c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
004522 efef      	LDI  R30,LOW(65535)
004523 efff      	LDI  R31,HIGH(65535)
004524 c016      	RJMP _0x20E008D
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
004525 940e b7ed 	CALL SUBOPT_0xE1
004527 940e b7f2 	CALL SUBOPT_0xE2
004529 940e b4db 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
00452b 940e b7f6 	CALL SUBOPT_0xE3
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
00452d 94f8      	cli
                 ; 0006 00D5     i2c_start();
00452e 940e b692 	CALL SUBOPT_0xA6
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
004530 940e b807 	CALL SUBOPT_0xE4
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
004532 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
004533 e9ed     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
004534 e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
004535 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
004536 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
004537 940e b22a 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
004539 940e b69b 	CALL SUBOPT_0xA8
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E008D:
00453b 940e cf41 	CALL __LOADLOCR4
00453d 9660      	ADIW R28,16
00453e 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
00453f 940e b815 	CALL SUBOPT_0xE5
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004541 89a8      	LDD  R26,Y+16
004542 89b9      	LDD  R27,Y+16+1
004543 971f      	SBIW R26,15
004544 f434      	BRGE _0xC0038
004545 89a8      	LDD  R26,Y+16
004546 89b9      	LDD  R27,Y+16+1
004547 3fa4      	CPI  R26,LOW(0xFFF4)
004548 efef      	LDI  R30,HIGH(0xFFF4)
004549 07be      	CPC  R27,R30
00454a f46c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
00454b ebea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
00454c e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
00454d e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
00454e e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
00454f 940e cec8 	CALL __PUTPARD1
004551 89ec      	LDD  R30,Y+20
004552 89fd      	LDD  R31,Y+20+1
004553 940e b81b 	CALL SUBOPT_0xE6
                 ; 0006 00F0         return -2;
004555 efee      	LDI  R30,LOW(65534)
004556 efff      	LDI  R31,HIGH(65534)
004557 c049      	RJMP _0x20E008C
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
004558 01fe      	MOVW R30,R28
004559 9672      	ADIW R30,18
00455a e1aa      	LDI  R26,26
00455b 940e ced2 	CALL __PUTPARL
00455d dee4      	RCALL _date_to_binary
00455e 940e b820 	CALL SUBOPT_0xE7
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
004560 89e8      	LDD  R30,Y+16
004561 89f9      	LDD  R31,Y+16+1
004562 940e b825 	CALL SUBOPT_0xE8
004564 940e b825 	CALL SUBOPT_0xE8
004566 efaf      	LDI  R26,LOW(65535)
004567 efbf      	LDI  R27,HIGH(65535)
004568 940e ce04 	CALL __MULW12
00456a 940e b26d 	CALL SUBOPT_0xB
00456c 940e b6bc 	CALL SUBOPT_0xAE
00456e 940e b82a 	CALL SUBOPT_0xE9
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
004570 940e b82c 	CALL SUBOPT_0xEA
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
004572 940e b43c 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
004574 940e b7d0 	CALL SUBOPT_0xDC
004576 f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
004577 940e b7d5 	CALL SUBOPT_0xDD
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
004579 c00b      	RJMP _0xC003B
                 _0xC003A:
00457a 940e b7da 	CALL SUBOPT_0xDE
00457c f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
00457d 940e b7df 	CALL SUBOPT_0xDF
                 ; 0006 0100     }
                 ; 0006 0101     else{
00457f c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
004580 e0e0      	LDI  R30,LOW(0)
                +
004581 83ec     +STD Y + 4 , R30
004582 83ed     +STD Y + 4 + 1 , R30
004583 83ee     +STD Y + 4 + 2 , R30
004584 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
004585 940e b6a7 	CALL SUBOPT_0xAA
004587 940e cf24 	CALL __CPD20
004589 f018      	BRLO _0xC003F
00458a 940e b7e4 	CALL SUBOPT_0xE0
00458c f008      	BRLO _0xC0040
                 _0xC003F:
00458d c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
00458e efef      	LDI  R30,LOW(65535)
00458f efff      	LDI  R31,HIGH(65535)
004590 c010      	RJMP _0x20E008C
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
004591 940e b7ed 	CALL SUBOPT_0xE1
004593 940e b7f2 	CALL SUBOPT_0xE2
004595 940e b4db 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
004597 940e b7f6 	CALL SUBOPT_0xE3
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
004599 94f8      	cli
                 ; 0006 0113     i2c_start();
00459a 940e b692 	CALL SUBOPT_0xA6
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
00459c 940e b807 	CALL SUBOPT_0xE4
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
00459e 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
00459f 940e b69b 	CALL SUBOPT_0xA8
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E008C:
0045a1 940e cf41 	CALL __LOADLOCR4
0045a3 96ac      	ADIW R28,44
0045a4 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
0045a5 940e b835 	CALL SUBOPT_0xEB
0045a7 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
0045a8 dcc5      	RCALL _DS1672_read
0045a9 940e b83a 	CALL SUBOPT_0xEC
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
0045ab 940e b3ae 	CALL SUBOPT_0x3A
0045ad f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
0045ae e001     +LDI R16 , LOW ( 1 )
0045af e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
0045b0 91e0 1430 	LDS  R30,_raw_rtc
0045b2 91f0 1431 	LDS  R31,_raw_rtc+1
0045b4 9160 1432 	LDS  R22,_raw_rtc+2
0045b6 9170 1433 	LDS  R23,_raw_rtc+3
0045b8 940e b6d6 	CALL SUBOPT_0xB3
                 ; 0006 012C     }
                 ; 0006 012D     else{
0045ba c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
0045bb e000     +LDI R16 , LOW ( 0 )
0045bc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
0045bd 940e b6db 	CALL SUBOPT_0xB4
0045bf 940e b82c 	CALL SUBOPT_0xEA
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
0045c1 81ee      	LDD  R30,Y+6
0045c2 81ff      	LDD  R31,Y+6+1
0045c3 940e b825 	CALL SUBOPT_0xE8
0045c5 940e b825 	CALL SUBOPT_0xE8
0045c7 940e b6e0 	CALL SUBOPT_0xB5
0045c9 940e b6bc 	CALL SUBOPT_0xAE
0045cb 940e b6d6 	CALL SUBOPT_0xB3
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
0045cd 940e b6db 	CALL SUBOPT_0xB4
0045cf 940e cec8 	CALL __PUTPARD1
0045d1 85ac      	LDD  R26,Y+12
0045d2 85bd      	LDD  R27,Y+12+1
0045d3 dcd7      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
0045d4 01f8      	MOVW R30,R16
0045d5 8119      	LDD  R17,Y+1
0045d6 8108      	LDD  R16,Y+0
0045d7 962a      	ADIW R28,10
0045d8 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
0045d9 8de8      	LDD  R30,Y+24
0045da 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
0045db 30e1      	CPI  R30,LOW(0x1)
0045dc e0a0      	LDI  R26,HIGH(0x1)
0045dd 07fa      	CPC  R31,R26
0045de f429      	BRNE _0xC0046
                +
0045df eeea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
0045e0 e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
0045e1 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
0045e2 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
0045e3 c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
0045e4 30e2      	CPI  R30,LOW(0x2)
0045e5 e0a0      	LDI  R26,HIGH(0x2)
0045e6 07fa      	CPC  R31,R26
0045e7 f429      	BRNE _0xC0047
                +
0045e8 efe0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
0045e9 e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
0045ea e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
0045eb e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
0045ec c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
0045ed 30e3      	CPI  R30,LOW(0x3)
0045ee e0a0      	LDI  R26,HIGH(0x3)
0045ef 07fa      	CPC  R31,R26
0045f0 f429      	BRNE _0xC0048
                +
0045f1 efe6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
0045f2 e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
0045f3 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
0045f4 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
0045f5 c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
0045f6 30e4      	CPI  R30,LOW(0x4)
0045f7 e0a0      	LDI  R26,HIGH(0x4)
0045f8 07fa      	CPC  R31,R26
0045f9 f429      	BRNE _0xC0049
                +
0045fa efec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
0045fb e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
0045fc e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
0045fd e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
0045fe c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
0045ff 30e5      	CPI  R30,LOW(0x5)
004600 e0a0      	LDI  R26,HIGH(0x5)
004601 07fa      	CPC  R31,R26
004602 f429      	BRNE _0xC004A
                +
004603 e0e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
004604 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
004605 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
004606 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
004607 c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
004608 30e6      	CPI  R30,LOW(0x6)
004609 e0a0      	LDI  R26,HIGH(0x6)
00460a 07fa      	CPC  R31,R26
00460b f429      	BRNE _0xC004B
                +
00460c e0e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
00460d e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
00460e e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
00460f e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
004610 c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
004611 30e7      	CPI  R30,LOW(0x7)
004612 e0a0      	LDI  R26,HIGH(0x7)
004613 07fa      	CPC  R31,R26
004614 f441      	BRNE _0xC0045
                +
004615 e0ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
004616 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
004617 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
004618 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
004619 940e cec8 	CALL __PUTPARD1
00461b 940e b391 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
00461d e1e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
00461e e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
00461f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
004620 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
004621 940e b83c 	CALL SUBOPT_0xED
004623 940e b388 	CALL SUBOPT_0x34
004625 940e b443 	CALL SUBOPT_0x4F
004627 940e b496 	CALL SUBOPT_0x5B
004629 940e b841 	CALL SUBOPT_0xEE
                +
00462b a1e8     +LDD R30 , Y + 32
00462c a1f9     +LDD R31 , Y + 32 + 1
00462d a16a     +LDD R22 , Y + 32 + 2
00462e a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
00462f 940e cec8 	CALL __PUTPARD1
004631 940e b845 	CALL SUBOPT_0xEF
                +
004633 a9e8     +LDD R30 , Y + 48
004634 a9f9     +LDD R31 , Y + 48 + 1
004635 a96a     +LDD R22 , Y + 48 + 2
004636 a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
004637 940e cec8 	CALL __PUTPARD1
004639 e18c      	LDI  R24,28
00463a 940e 9245 	CALL _printDebug
00463c 96a0      	ADIW R28,32
                 ; 0006 014F     return;
00463d c025      	RJMP _0x20E008B
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
00463e 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
00463f e0e0      	LDI  R30,LOW(0)
004640 93e0 1430 	STS  _raw_rtc,R30
004642 93e0 1431 	STS  _raw_rtc+1,R30
004644 93e0 1432 	STS  _raw_rtc+2,R30
004646 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
004648 94f8      	cli
                 ; 0006 0159     i2c_start();
004649 940e b692 	CALL SUBOPT_0xA6
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
00464b e0a4      	LDI  R26,LOW(4)
00464c 940e cb69 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
00464e e0a0      	LDI  R26,LOW(0)
00464f 940e b697 	CALL SUBOPT_0xA7
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
004651 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
004652 dc0e      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
004653 940e b266 	CALL SUBOPT_0x9
004655 940e b84c 	CALL SUBOPT_0xF0
004657 df4d      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
004658 e3e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
004659 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
00465a e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
00465b e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
00465c 940e b22a 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
00465e 01fe      	MOVW R30,R28
00465f e1aa      	LDI  R26,26
004660 940e ced2 	CALL __PUTPARL
004662 df76      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E008B:
004663 966a      	ADIW R28,26
004664 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;//flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;//iNT-ETH-DC-0.01a
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-DC-0.01a";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0023 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0024     int i;
                 ; 0007 0025 
                 ; 0007 0026     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0027 
                 ; 0007 0028     if( config_prop_flag != 0x01){
004665 940e b595 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004667 e4a2      	LDI  R26,LOW(_config_prop_flag)
004668 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004669 940e ceef 	CALL __EEPROMRDB
00466b 30e1      	CPI  R30,LOW(0x1)
00466c f0a9      	BREQ _0xE000B
                 ; 0007 0029         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
00466d e7ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
00466e e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
00466f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
004670 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
004671 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 002A         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
004673 81ea      	LDD  R30,Y+2
004674 81fb      	LDD  R31,Y+2+1
004675 940e b84f 	CALL SUBOPT_0xF1
004677 940e b854 	CALL SUBOPT_0xF2
004679 940e 977e 	CALL _memset
                 ; 0007 002B         readConfig->timeZone   = 7;
00467b 81aa      	LDD  R26,Y+2
00467c 81bb      	LDD  R27,Y+2+1
00467d 56a0      	SUBI R26,LOW(-160)
00467e 4fbf      	SBCI R27,HIGH(-160)
00467f e0e7      	LDI  R30,LOW(7)
004680 93ec      	ST   X,R30
                 ; 0007 002C     }
                 ; 0007 002D     else{
004681 c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002E 
                 ; 0007 002F         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
004682 e000     +LDI R16 , LOW ( 0 )
004683 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
004684 3104     +CPI R16 , LOW ( 20 )
004685 e0e0     +LDI R30 , HIGH ( 20 )
004686 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004687 f47c      	BRGE _0xE000F
                 ; 0007 0030         {
                 ; 0007 0031             readConfig->deviceType[i]   = config_prop.deviceType[i];
004688 01f8      	MOVW R30,R16
004689 81aa      	LDD  R26,Y+2
00468a 81bb      	LDD  R27,Y+2+1
00468b 0fea      	ADD  R30,R26
00468c 1ffb      	ADC  R31,R27
00468d 010f      	MOVW R0,R30
00468e e0a0      	LDI  R26,LOW(_config_prop)
00468f e0b0      	LDI  R27,HIGH(_config_prop)
004690 940e b857 	CALL SUBOPT_0xF3
004692 01d0      	MOVW R26,R0
004693 93ec      	ST   X,R30
                 ; 0007 0032         }
                +
004694 5f0f     +SUBI R16 , LOW ( - 1 )
004695 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004696 cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0033 
                 ; 0007 0034         /*
                 ; 0007 0035         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0036         {
                 ; 0007 0037             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0038             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0039         }
                 ; 0007 003A         */
                 ; 0007 003B         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
004697 81ea      	LDD  R30,Y+2
004698 81fb      	LDD  R31,Y+2+1
004699 9674      	ADIW R30,20
00469a 93fa      	ST   -Y,R31
00469b 93ea      	ST   -Y,R30
                +
00469c eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
00469d e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
00469e e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
00469f e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
0046a0 940e cec8 	CALL __PUTPARD1
0046a2 eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
0046a3 e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
0046a4 e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
0046a5 940e 97d1 	CALL _strlenf
0046a7 01df      	MOVW R26,R30
0046a8 940e 974b 	CALL _memcpyf
                 ; 0007 003C 
                 ; 0007 003D         for(i=0;i<NAME_LENGTH;i++)
                +
0046aa e000     +LDI R16 , LOW ( 0 )
0046ab e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
0046ac 3208     +CPI R16 , LOW ( 40 )
0046ad e0e0     +LDI R30 , HIGH ( 40 )
0046ae 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0046af f46c      	BRGE _0xE0012
                 ; 0007 003E         {
                 ; 0007 003F             readConfig->deviceName[i]   = config_prop.deviceName[i];
0046b0 81ea      	LDD  R30,Y+2
0046b1 81fb      	LDD  R31,Y+2+1
0046b2 96b8      	ADIW R30,40
0046b3 0fe0      	ADD  R30,R16
0046b4 1ff1      	ADC  R31,R17
0046b5 010f      	MOVW R0,R30
                +
0046b6 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
0046b7 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
0046b8 940e b85c 	CALL SUBOPT_0xF4
                 ; 0007 0040         }
                +
0046ba 5f0f     +SUBI R16 , LOW ( - 1 )
0046bb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0046bc cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 0041 
                 ; 0007 0042         for(i=0;i<ID_LENGTH;i++)
                +
0046bd e000     +LDI R16 , LOW ( 0 )
0046be e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
0046bf 3104     +CPI R16 , LOW ( 20 )
0046c0 e0e0     +LDI R30 , HIGH ( 20 )
0046c1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0046c2 f454      	BRGE _0xE0015
                 ; 0007 0043         {
                 ; 0007 0044             readConfig->deviceID[i]   = config_prop.deviceID[i];
0046c3 940e b864 	CALL SUBOPT_0xF5
0046c5 010f      	MOVW R0,R30
                +
0046c6 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
0046c7 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
0046c8 940e b85c 	CALL SUBOPT_0xF4
                 ; 0007 0045         }
                +
0046ca 5f0f     +SUBI R16 , LOW ( - 1 )
0046cb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0046cc cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0046 
                 ; 0007 0047         for(i=0;i<NAME_LENGTH;i++)
                +
0046cd e000     +LDI R16 , LOW ( 0 )
0046ce e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
0046cf 3208     +CPI R16 , LOW ( 40 )
0046d0 e0e0     +LDI R30 , HIGH ( 40 )
0046d1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0046d2 f454      	BRGE _0xE0018
                 ; 0007 0048         {
                 ; 0007 0049             readConfig->hostName[i]   = config_prop.hostName[i];
0046d3 940e b86b 	CALL SUBOPT_0xF6
0046d5 010f      	MOVW R0,R30
                +
0046d6 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
0046d7 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
0046d8 940e b85c 	CALL SUBOPT_0xF4
                 ; 0007 004A         }
                +
0046da 5f0f     +SUBI R16 , LOW ( - 1 )
0046db 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0046dc cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 004B 
                 ; 0007 004C         for(i=0;i<ID_LENGTH;i++)
                +
0046dd e000     +LDI R16 , LOW ( 0 )
0046de e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
0046df 3104     +CPI R16 , LOW ( 20 )
0046e0 e0e0     +LDI R30 , HIGH ( 20 )
0046e1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0046e2 f454      	BRGE _0xE001B
                 ; 0007 004D         {
                 ; 0007 004E             readConfig->hostID[i]   = config_prop.hostID[i];
0046e3 940e b872 	CALL SUBOPT_0xF7
0046e5 010f      	MOVW R0,R30
                +
0046e6 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
0046e7 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
0046e8 940e b85c 	CALL SUBOPT_0xF4
                 ; 0007 004F         }
                +
0046ea 5f0f     +SUBI R16 , LOW ( - 1 )
0046eb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0046ec cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 0050 
                 ; 0007 0051         readConfig->timeZone   = config_prop.timeZone;
                +
0046ed eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
0046ee e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
0046ef 940e ceef 	CALL __EEPROMRDB
                +
0046f1 81aa     +LDD R26 , Y + 2
0046f2 81bb     +LDD R27 , Y + 2 + 1
0046f3 56a0     +SUBI R26 , LOW ( - 160 )
0046f4 4fbf     +SBCI R27 , HIGH ( - 160 )
0046f5 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0052     }
                 _0xE000C:
                 ; 0007 0053     return 0;
0046f6 940e b7a8 	CALL SUBOPT_0xD4
0046f8 9624      	ADIW R28,4
0046f9 9508      	RET
                 ; 0007 0054 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0057 {
                 _getOperatingConfig:
                 ; 0007 0058     int i;
                 ; 0007 0059 
                 ; 0007 005A     if( config_oper_flag != 0x01){
0046fa 940e b595 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0046fc e4a3      	LDI  R26,LOW(_config_oper_flag)
0046fd e0b5      	LDI  R27,HIGH(_config_oper_flag)
0046fe 940e ceef 	CALL __EEPROMRDB
004700 30e1      	CPI  R30,LOW(0x1)
004701 f0d1      	BREQ _0xE001C
                 ; 0007 005B         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
004702 ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
004703 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
004704 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
004705 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
004706 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 005C 
                 ; 0007 005D         readConfig->mode                    =   MODE_DATALOGGER;
004708 81aa      	LDD  R26,Y+2
004709 81bb      	LDD  R27,Y+2+1
00470a e2e0      	LDI  R30,LOW(32)
00470b 940e b879 	CALL SUBOPT_0xF8
                 ; 0007 005E         readConfig->deviceEnable            =   0x00;
00470d e0e0      	LDI  R30,LOW(0)
00470e 940e b87e 	CALL SUBOPT_0xF9
                 ; 0007 005F         readConfig->alarmEnable             =   0x00;
                 ; 0007 0060 
                 ; 0007 0061         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
004710 3005     +CPI R16 , LOW ( 5 )
004711 e0e0     +LDI R30 , HIGH ( 5 )
004712 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004713 f43c      	BRGE _0xE001F
                 ; 0007 0062         {
                 ; 0007 0063             readConfig->sensorEnable[i]     =   0x00;
004714 940e b887 	CALL SUBOPT_0xFA
004716 e0a0      	LDI  R26,LOW(0)
004717 83a0      	STD  Z+0,R26
                 ; 0007 0064         }
                +
004718 5f0f     +SUBI R16 , LOW ( - 1 )
004719 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00471a cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0065 
                 ; 0007 0066         /* // -- for test -- //
                 ; 0007 0067         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0068         readConfig->deviceEnable            =   0x01;
                 ; 0007 0069         readConfig->alarmEnable             =   0x01;
                 ; 0007 006A 
                 ; 0007 006B         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006C         {
                 ; 0007 006D             if(i==0){
                 ; 0007 006E                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006F             }
                 ; 0007 0070             else{
                 ; 0007 0071                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0072             }
                 ; 0007 0073         }
                 ; 0007 0074         */
                 ; 0007 0075     }
                 ; 0007 0076     else{
00471b c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0077         readConfig->mode                    =   config_oper.mode;
00471c eaa1      	LDI  R26,LOW(_config_oper)
00471d e0b0      	LDI  R27,HIGH(_config_oper)
00471e 940e b88d 	CALL SUBOPT_0xFB
                 ; 0007 0078         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
004720 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004721 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004722 940e b893 	CALL SUBOPT_0xFC
                 ; 0007 0079         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
004724 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004725 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004726 940e b89a 	CALL SUBOPT_0xFD
                 ; 0007 007A 
                 ; 0007 007B         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004728 e000     +LDI R16 , LOW ( 0 )
004729 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
00472a 3005     +CPI R16 , LOW ( 5 )
00472b e0e0     +LDI R30 , HIGH ( 5 )
00472c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00472d f454      	BRGE _0xE0023
                 ; 0007 007C         {
                 ; 0007 007D             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
00472e 940e b887 	CALL SUBOPT_0xFA
004730 010f      	MOVW R0,R30
                +
004731 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004732 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004733 940e b85c 	CALL SUBOPT_0xF4
                 ; 0007 007E         }
                +
004735 5f0f     +SUBI R16 , LOW ( - 1 )
004736 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004737 cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007F     }
                 _0xE0020:
                 ; 0007 0080 
                 ; 0007 0081 
                 ; 0007 0082     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
004738 eee7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
004739 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
00473a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
00473b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
00473c 940e b8a1 	CALL SUBOPT_0xFE
                 ; 0007 0083     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
00473e e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
00473f e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
004740 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
004741 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
004742 940e b8a7 	CALL SUBOPT_0xFF
004744 81e1      	LDD  R30,Z+1
004745 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0084     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
004747 e4e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
004748 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
004749 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
00474a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
00474b 940e b8a7 	CALL SUBOPT_0xFF
00474d 81e2      	LDD  R30,Z+2
00474e 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0085     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
004750 e7ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
004751 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
004752 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
004753 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
004754 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0086 
                 ; 0007 0087     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004756 e000     +LDI R16 , LOW ( 0 )
004757 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
004758 3005     +CPI R16 , LOW ( 5 )
004759 e0e0     +LDI R30 , HIGH ( 5 )
00475a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00475b f43c      	BRGE _0xE0026
                 ; 0007 0088     {
                 ; 0007 0089         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
00475c 940e b8ac 	CALL SUBOPT_0x100
00475e 940e b8b1 	CALL SUBOPT_0x101
                 ; 0007 008A     }
                +
004760 5f0f     +SUBI R16 , LOW ( - 1 )
004761 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004762 cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 008B     printDebug("\r\n");
004763 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 008C 
                 ; 0007 008D     return 0;
004765 940e b7a8 	CALL SUBOPT_0xD4
004767 c4e6      	RJMP _0x20E0086
                 ; 0007 008E }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 0091 {
                 _getSensorConfig:
                 ; 0007 0092     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004768 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
00476a f022      	BRMI _0xE0028
00476b 81aa      	LDD  R26,Y+2
00476c 81bb      	LDD  R27,Y+2+1
00476d 9715      	SBIW R26,5
00476e f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0093         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
00476f eaec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
004770 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
004771 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
004772 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
004773 940e b8a7 	CALL SUBOPT_0xFF
004775 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 0094         return -1;
004777 c4d4      	RJMP _0x20E0087
                 ; 0007 0095     }
                 ; 0007 0096 
                 ; 0007 0097     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
004778 81aa      	LDD  R26,Y+2
004779 81bb      	LDD  R27,Y+2+1
00477a 5bac      	SUBI R26,LOW(-_config_sens_flag)
00477b 4fba      	SBCI R27,HIGH(-_config_sens_flag)
00477c 940e ceef 	CALL __EEPROMRDB
00477e 30e1      	CPI  R30,LOW(0x1)
00477f f411      	BRNE PC+3
004780 940c 47c9 	JMP _0xE002A
                 ; 0007 0098         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
004782 eee1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
004783 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
004784 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
004785 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
004786 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0099         readConfig->samplingRate        =   300;
004788 81a8      	LD   R26,Y
004789 81b9      	LDD  R27,Y+1
00478a e2ec      	LDI  R30,LOW(300)
00478b e0f1      	LDI  R31,HIGH(300)
00478c 940e b8c0 	CALL SUBOPT_0x104
                 ; 0007 009A         readConfig->reOccurrence        =   0x8000;
00478e 9612      	ADIW R26,2
00478f e0e0      	LDI  R30,LOW(32768)
004790 e8f0      	LDI  R31,HIGH(32768)
004791 940e b8c0 	CALL SUBOPT_0x104
                 ; 0007 009B         readConfig->timeStartHour       =   0;
004793 9614      	ADIW R26,4
004794 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 009C         readConfig->timeStartMin        =   0;
004796 9615      	ADIW R26,5
004797 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 009D         readConfig->timeStopHour        =   0;
004799 9616      	ADIW R26,6
00479a 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 009E         readConfig->timeStopMin         =   0;
00479c 9617      	ADIW R26,7
00479d 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 009F 
                 ; 0007 00A0         readConfig->alarmEnable         =   0x00;
00479f 9618      	ADIW R26,8
0047a0 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 00A1         readConfig->lowerLimit          =   10.0;
0047a2 9619      	ADIW R26,9
0047a3 940e b679 	CALL SUBOPT_0xA1
0047a5 940e cea3 	CALL __PUTDP1
                 ; 0007 00A2         readConfig->lowerDelay          =   20;
0047a7 81a8      	LD   R26,Y
0047a8 81b9      	LDD  R27,Y+1
0047a9 961d      	ADIW R26,13
0047aa e1e4      	LDI  R30,LOW(20)
0047ab e0f0      	LDI  R31,HIGH(20)
0047ac 940e b8c0 	CALL SUBOPT_0x104
                 ; 0007 00A3         readConfig->lowerExtreme        =   0.0;
0047ae 961f      	ADIW R26,15
0047af 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0007 00A4         readConfig->upperLimit          =   180.0;
0047b1 81a8      	LD   R26,Y
0047b2 81b9      	LDD  R27,Y+1
0047b3 9653      	ADIW R26,19
                +
0047b4 e0e0     +LDI R30 , LOW ( 0x43340000 )
0047b5 e0f0     +LDI R31 , HIGH ( 0x43340000 )
0047b6 e364     +LDI R22 , BYTE3 ( 0x43340000 )
0047b7 e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
0047b8 940e cea3 	CALL __PUTDP1
                 ; 0007 00A5         readConfig->upperDelay          =   20;
0047ba 81a8      	LD   R26,Y
0047bb 81b9      	LDD  R27,Y+1
0047bc 9657      	ADIW R26,23
0047bd e1e4      	LDI  R30,LOW(20)
0047be e0f0      	LDI  R31,HIGH(20)
0047bf 940e b8c0 	CALL SUBOPT_0x104
                 ; 0007 00A6         readConfig->upperExtreme        =   200.0;
0047c1 9659      	ADIW R26,25
                +
0047c2 e0e0     +LDI R30 , LOW ( 0x43480000 )
0047c3 e0f0     +LDI R31 , HIGH ( 0x43480000 )
0047c4 e468     +LDI R22 , BYTE3 ( 0x43480000 )
0047c5 e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
0047c6 940e cea3 	CALL __PUTDP1
                 ; 0007 00A7         /*
                 ; 0007 00A8         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A9         readConfig->lowerLimit          =   0.0;
                 ; 0007 00AA         readConfig->lowerDelay          =   10;
                 ; 0007 00AB         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AC         readConfig->upperLimit          =   0.0;
                 ; 0007 00AD         readConfig->upperDelay          =   10;
                 ; 0007 00AE         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AF         */
                 ; 0007 00B0     }
                 ; 0007 00B1     else{
0047c8 c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B2         readConfig->samplingRate        =   config_sens[ch].samplingRate;
0047c9 940e b8ca 	CALL SUBOPT_0x106
0047cb 55e7      	SUBI R30,LOW(-_config_sens)
0047cc 4fff      	SBCI R31,HIGH(-_config_sens)
0047cd 01df      	MOVW R26,R30
0047ce 940e ceeb 	CALL __EEPROMRDW
0047d0 81a8      	LD   R26,Y
0047d1 81b9      	LDD  R27,Y+1
0047d2 93ed      	ST   X+,R30
0047d3 93fc      	ST   X,R31
                 ; 0007 00B3         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
0047d4 940e b8ca 	CALL SUBOPT_0x106
                +
0047d6 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
0047d7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
0047d8 01df      	MOVW R26,R30
0047d9 940e ceeb 	CALL __EEPROMRDW
                +
0047db 81a8     +LDD R26 , Y + 0
0047dc 81b9     +LDD R27 , Y + 0 + 1
0047dd 9612     +ADIW R26 , 2
0047de 93ed     +ST X + , R30
0047df 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B4         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
0047e0 940e b8ca 	CALL SUBOPT_0x106
                +
0047e2 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
0047e3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
0047e4 01df      	MOVW R26,R30
0047e5 940e ceef 	CALL __EEPROMRDB
                +
0047e7 81a8     +LDD R26 , Y + 0
0047e8 81b9     +LDD R27 , Y + 0 + 1
0047e9 9614     +ADIW R26 , 4
0047ea 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B5         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
0047eb 940e b8ca 	CALL SUBOPT_0x106
                +
0047ed 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
0047ee 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
0047ef 01df      	MOVW R26,R30
0047f0 940e ceef 	CALL __EEPROMRDB
                +
0047f2 81a8     +LDD R26 , Y + 0
0047f3 81b9     +LDD R27 , Y + 0 + 1
0047f4 9615     +ADIW R26 , 5
0047f5 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B6         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
0047f6 940e b8ca 	CALL SUBOPT_0x106
                +
0047f8 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
0047f9 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
0047fa 01df      	MOVW R26,R30
0047fb 940e ceef 	CALL __EEPROMRDB
                +
0047fd 81a8     +LDD R26 , Y + 0
0047fe 81b9     +LDD R27 , Y + 0 + 1
0047ff 9616     +ADIW R26 , 6
004800 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B7         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
004801 940e b8ca 	CALL SUBOPT_0x106
                +
004803 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004804 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004805 01df      	MOVW R26,R30
004806 940e ceef 	CALL __EEPROMRDB
                +
004808 81a8     +LDD R26 , Y + 0
004809 81b9     +LDD R27 , Y + 0 + 1
00480a 9617     +ADIW R26 , 7
00480b 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B8 
                 ; 0007 00B9         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
00480c 940e b8ca 	CALL SUBOPT_0x106
                +
00480e 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
00480f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004810 01df      	MOVW R26,R30
004811 940e ceef 	CALL __EEPROMRDB
                +
004813 81a8     +LDD R26 , Y + 0
004814 81b9     +LDD R27 , Y + 0 + 1
004815 9618     +ADIW R26 , 8
004816 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00BA         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004817 940e b8ca 	CALL SUBOPT_0x106
004819 940e b8d0 	CALL SUBOPT_0x107
                +
00481b 81a8     +LDD R26 , Y + 0
00481c 81b9     +LDD R27 , Y + 0 + 1
00481d 9619     +ADIW R26 , 9
00481e 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00BB         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004820 940e b8ca 	CALL SUBOPT_0x106
004822 940e b8d6 	CALL SUBOPT_0x108
                +
004824 81a8     +LDD R26 , Y + 0
004825 81b9     +LDD R27 , Y + 0 + 1
004826 961d     +ADIW R26 , 13
004827 93ed     +ST X + , R30
004828 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BC         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004829 940e b8ca 	CALL SUBOPT_0x106
00482b 940e b8dc 	CALL SUBOPT_0x109
                +
00482d 81a8     +LDD R26 , Y + 0
00482e 81b9     +LDD R27 , Y + 0 + 1
00482f 961f     +ADIW R26 , 15
004830 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BD         readConfig->upperLimit          =   config_sens[ch].upperLimit;
004832 940e b8ca 	CALL SUBOPT_0x106
004834 940e b8e2 	CALL SUBOPT_0x10A
                +
004836 81a8     +LDD R26 , Y + 0
004837 81b9     +LDD R27 , Y + 0 + 1
004838 9653     +ADIW R26 , 19
004839 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BE         readConfig->upperDelay          =   config_sens[ch].upperDelay;
00483b 940e b8ca 	CALL SUBOPT_0x106
00483d 940e b8e8 	CALL SUBOPT_0x10B
                +
00483f 81a8     +LDD R26 , Y + 0
004840 81b9     +LDD R27 , Y + 0 + 1
004841 9657     +ADIW R26 , 23
004842 93ed     +ST X + , R30
004843 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BF         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
004844 940e b8ca 	CALL SUBOPT_0x106
004846 940e b8ee 	CALL SUBOPT_0x10C
                +
004848 81a8     +LDD R26 , Y + 0
004849 81b9     +LDD R27 , Y + 0 + 1
00484a 9659     +ADIW R26 , 25
00484b 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00C0     }
                 _0xE002B:
                 ; 0007 00C1     return 0;
00484d e0e0      	LDI  R30,LOW(0)
00484e e0f0      	LDI  R31,HIGH(0)
00484f c3fe      	RJMP _0x20E0086
                 ; 0007 00C2 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C5 {
                 _getAuxDinConfig:
                 ; 0007 00C6     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
004850 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004852 f022      	BRMI _0xE002D
004853 81aa      	LDD  R26,Y+2
004854 81bb      	LDD  R27,Y+2+1
004855 9750      	SBIW R26,16
004856 f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C7         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
004857 e1e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
004858 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
004859 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
00485a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
00485b 940e b8a7 	CALL SUBOPT_0xFF
00485d 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 00C8         return -1;
00485f c3ec      	RJMP _0x20E0087
                 ; 0007 00C9     }
                 ; 0007 00CA 
                 ; 0007 00CB     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
004860 81aa      	LDD  R26,Y+2
004861 81bb      	LDD  R27,Y+2+1
004862 5ba7      	SUBI R26,LOW(-_config_din_flag)
004863 4fba      	SBCI R27,HIGH(-_config_din_flag)
004864 940e ceef 	CALL __EEPROMRDB
004866 30e1      	CPI  R30,LOW(0x1)
004867 f071      	BREQ _0xE002F
                 ; 0007 00CC         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
004868 e4ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
004869 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
00486a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
00486b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
00486c 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 00CD 
                 ; 0007 00CE         readConfig->channelEnable       =   0x00;
00486e 81a8      	LD   R26,Y
00486f 81b9      	LDD  R27,Y+1
004870 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 00CF         readConfig->alarmDelay          =   0;
004872 9611      	ADIW R26,1
004873 940e b8f4 	CALL SUBOPT_0x10D
                 ; 0007 00D0 
                 ; 0007 00D1         /* // -- for test -- //
                 ; 0007 00D2         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D3         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D4 
                 ; 0007 00D5         readConfig->alarmDelay          =   0;
                 ; 0007 00D6         */
                 ; 0007 00D7     }
                 ; 0007 00D8     else{
004875 c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D9         readConfig->channelEnable       =   config_din[ch].channelEnable;
004876 940e b8f9 	CALL SUBOPT_0x10E
004878 5ce6      	SUBI R30,LOW(-_config_din)
004879 4ffe      	SBCI R31,HIGH(-_config_din)
00487a 940e b8ff 	CALL SUBOPT_0x10F
                 ; 0007 00DA         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
00487c 940e b8f9 	CALL SUBOPT_0x10E
                +
00487e 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
00487f 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004880 01df      	MOVW R26,R30
004881 940e b906 	CALL SUBOPT_0x110
                 ; 0007 00DB     }
                 _0xE0030:
                 ; 0007 00DC     return 0;
004883 e0e0      	LDI  R30,LOW(0)
004884 e0f0      	LDI  R31,HIGH(0)
004885 c3c8      	RJMP _0x20E0086
                 ; 0007 00DD }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00E0 {
                 _getAuxDoutConfig:
                 ; 0007 00E1     int i;
                 ; 0007 00E2 
                 ; 0007 00E3     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
004886 940e b595 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004888 81ad      	LDD  R26,Y+5
004889 23aa      	TST  R26
00488a f022      	BRMI _0xE0032
00488b 81ac      	LDD  R26,Y+4
00488c 81bd      	LDD  R27,Y+4+1
00488d 9715      	SBIW R26,5
00488e f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E4         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
00488f e8e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
004890 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
004891 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
004892 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
004893 940e b90e 	CALL SUBOPT_0x111
                 ; 0007 00E5         return -1;
004895 efef      	LDI  R30,LOW(65535)
004896 efff      	LDI  R31,HIGH(65535)
004897 c144      	RJMP _0x20E0089
                 ; 0007 00E6     }
                 ; 0007 00E7 
                 ; 0007 00E8     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
004898 81ac      	LDD  R26,Y+4
004899 81bd      	LDD  R27,Y+4+1
00489a 5aa7      	SUBI R26,LOW(-_config_dout_flag)
00489b 4fba      	SBCI R27,HIGH(-_config_dout_flag)
00489c 940e ceef 	CALL __EEPROMRDB
00489e 30e1      	CPI  R30,LOW(0x1)
00489f f0d1      	BREQ _0xE0034
                 ; 0007 00E9         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
0048a0 ebef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
0048a1 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
0048a2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
0048a3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
0048a4 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 00EA         readConfig->channelEnable       =   0x00;
0048a6 81aa      	LDD  R26,Y+2
0048a7 81bb      	LDD  R27,Y+2+1
0048a8 e0e0      	LDI  R30,LOW(0)
0048a9 940e b879 	CALL SUBOPT_0xF8
                 ; 0007 00EB         readConfig->stateOnEvent        =   0x01;
0048ab e0e1      	LDI  R30,LOW(1)
0048ac 940e b87e 	CALL SUBOPT_0xF9
                 ; 0007 00EC         readConfig->eventSourceNumber   =   0;
                 ; 0007 00ED 
                 ; 0007 00EE         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
0048ae 3203     +CPI R16 , LOW ( 35 )
0048af e0e0     +LDI R30 , HIGH ( 35 )
0048b0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0048b1 f43c      	BRGE _0xE0037
                 ; 0007 00EF             readConfig->eventSource[i]  =   0x00;
0048b2 940e b887 	CALL SUBOPT_0xFA
0048b4 e0a0      	LDI  R26,LOW(0)
0048b5 83a0      	STD  Z+0,R26
                 ; 0007 00F0         }
                +
0048b6 5f0f     +SUBI R16 , LOW ( - 1 )
0048b7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048b8 cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00F1     }
                 ; 0007 00F2     else{
0048b9 c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F3         readConfig->channelEnable       =   config_dout[ch].channelEnable;
0048ba 940e b913 	CALL SUBOPT_0x112
0048bc 59e6      	SUBI R30,LOW(-_config_dout)
0048bd 4ffe      	SBCI R31,HIGH(-_config_dout)
0048be 01df      	MOVW R26,R30
0048bf 940e b88d 	CALL SUBOPT_0xFB
                 ; 0007 00F4         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
0048c1 940e b913 	CALL SUBOPT_0x112
                +
0048c3 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
0048c4 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
0048c5 01df      	MOVW R26,R30
0048c6 940e b893 	CALL SUBOPT_0xFC
                 ; 0007 00F5         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
0048c8 940e b913 	CALL SUBOPT_0x112
                +
0048ca 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
0048cb 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
0048cc 01df      	MOVW R26,R30
0048cd 940e b89a 	CALL SUBOPT_0xFD
                 ; 0007 00F6 
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
0048cf efe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
0048d0 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
0048d1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
0048d2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
0048d3 940e b90e 	CALL SUBOPT_0x111
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
0048d5 e1e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
0048d6 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
0048d7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
0048d8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
0048d9 940e b919 	CALL SUBOPT_0x113
0048db 940e b921 	CALL SUBOPT_0x114
                 ; 0007 00F9         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
0048dd e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
0048de e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
0048df e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
0048e0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
0048e1 940e b919 	CALL SUBOPT_0x113
0048e3 940e b927 	CALL SUBOPT_0x115
                 ; 0007 00FA         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
0048e5 e6ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
0048e6 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
0048e7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
0048e8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
0048e9 940e b919 	CALL SUBOPT_0x113
0048eb 940e b92d 	CALL SUBOPT_0x116
0048ed 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 00FB         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
0048ef e000     +LDI R16 , LOW ( 0 )
0048f0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
0048f1 940e b913 	CALL SUBOPT_0x112
0048f3 940e b92d 	CALL SUBOPT_0x116
0048f5 940e b933 	CALL SUBOPT_0x117
0048f7 f4a4      	BRGE _0xE003B
                 ; 0007 00FC             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
0048f8 940e b887 	CALL SUBOPT_0xFA
                +
0048fa 2f7e     +MOV R23 , R30
0048fb 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
0048fc 940e b913 	CALL SUBOPT_0x112
0048fe 940e b938 	CALL SUBOPT_0x118
004900 940e ceef 	CALL __EEPROMRDB
                +
004902 2fa7     +MOV R26 , R23
004903 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004904 93ec      	ST   X,R30
                 ; 0007 00FD             printDebug("[0x%02X]",readConfig->eventSource[i]);
004905 940e b8ac 	CALL SUBOPT_0x100
004907 940e b8b1 	CALL SUBOPT_0x101
                 ; 0007 00FE         }
                +
004909 5f0f     +SUBI R16 , LOW ( - 1 )
00490a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00490b cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FF         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
00490c 940e b913 	CALL SUBOPT_0x112
00490e 940e b92d 	CALL SUBOPT_0x116
004910 2f0e      	MOV  R16,R30
004911 2711      	CLR  R17
                 _0xE003D:
                +
004912 3203     +CPI R16 , LOW ( 35 )
004913 e0e0     +LDI R30 , HIGH ( 35 )
004914 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004915 f43c      	BRGE _0xE003E
                 ; 0007 0100             readConfig->eventSource[i]  =   0x00;
004916 940e b887 	CALL SUBOPT_0xFA
004918 e0a0      	LDI  R26,LOW(0)
004919 83a0      	STD  Z+0,R26
                 ; 0007 0101             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0102         }
                +
00491a 5f0f     +SUBI R16 , LOW ( - 1 )
00491b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00491c cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0103         printDebug("\r\n");
00491d 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 0104 
                 ; 0007 0105     }
                 _0xE0038:
                 ; 0007 0106     return 0;
00491f c0ba      	RJMP _0x20E008A
                 ; 0007 0107 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 010A {
                 _getAuxAinConfig:
                 ; 0007 010B     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004920 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004922 f022      	BRMI _0xE0040
004923 81aa      	LDD  R26,Y+2
004924 81bb      	LDD  R27,Y+2+1
004925 9750      	SBIW R26,16
004926 f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010C         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004927 e9e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004928 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004929 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
00492a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
00492b 940e b8a7 	CALL SUBOPT_0xFF
00492d 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 010D         return -1;
00492f c31c      	RJMP _0x20E0087
                 ; 0007 010E     }
                 ; 0007 010F 
                 ; 0007 0110     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004930 81aa      	LDD  R26,Y+2
004931 81bb      	LDD  R27,Y+2+1
004932 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004933 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004934 940e ceef 	CALL __EEPROMRDB
004936 30e1      	CPI  R30,LOW(0x1)
004937 f071      	BREQ _0xE0042
                 ; 0007 0111         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004938 ede2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004939 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
00493a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
00493b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
00493c 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0112         readConfig->channelEnable       =   0x00;
00493e 81a8      	LD   R26,Y
00493f 81b9      	LDD  R27,Y+1
004940 940e b8c5 	CALL SUBOPT_0x105
                 ; 0007 0113         readConfig->alarmLevel          =   0;
004942 9611      	ADIW R26,1
004943 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0007 0114     }
                 ; 0007 0115     else{
004945 c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0116         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004946 940e b93e 	CALL SUBOPT_0x119
004948 5de8      	SUBI R30,LOW(-_config_ain)
004949 4ffd      	SBCI R31,HIGH(-_config_ain)
00494a 940e b8ff 	CALL SUBOPT_0x10F
                 ; 0007 0117         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
00494c 940e b93e 	CALL SUBOPT_0x119
                +
00494e 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
00494f 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004950 01df      	MOVW R26,R30
004951 940e cee7 	CALL __EEPROMRDD
                +
004953 81a8     +LDD R26 , Y + 0
004954 81b9     +LDD R27 , Y + 0 + 1
004955 9611     +ADIW R26 , 1
004956 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0118     }
                 _0xE0043:
                 ; 0007 0119     return 0;
004958 e0e0      	LDI  R30,LOW(0)
004959 e0f0      	LDI  R31,HIGH(0)
00495a c2f3      	RJMP _0x20E0086
                 ; 0007 011A }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011D {
                 _getAuxAoutConfig:
                 ; 0007 011E     int i;
                 ; 0007 011F 
                 ; 0007 0120     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
00495b 940e b595 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
00495d 81ad      	LDD  R26,Y+5
00495e 23aa      	TST  R26
00495f f022      	BRMI _0xE0045
004960 81ac      	LDD  R26,Y+4
004961 81bd      	LDD  R27,Y+4+1
004962 9750      	SBIW R26,16
004963 f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 0121         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004964 e0e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004965 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004966 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004967 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004968 940e b90e 	CALL SUBOPT_0x111
                 ; 0007 0122         return -1;
00496a efef      	LDI  R30,LOW(65535)
00496b efff      	LDI  R31,HIGH(65535)
00496c c06f      	RJMP _0x20E0089
                 ; 0007 0123     }
                 ; 0007 0124 
                 ; 0007 0125     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
00496d 81ac      	LDD  R26,Y+4
00496e 81bd      	LDD  R27,Y+4+1
00496f 59a2      	SUBI R26,LOW(-_config_aout_flag)
004970 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004971 940e ceef 	CALL __EEPROMRDB
004973 30e1      	CPI  R30,LOW(0x1)
004974 f101      	BREQ _0xE0047
                 ; 0007 0126         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004975 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004976 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004977 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004978 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004979 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0127         readConfig->channelEnable       =   0x00;
00497b 81aa      	LDD  R26,Y+2
00497c 81bb      	LDD  R27,Y+2+1
00497d e0e0      	LDI  R30,LOW(0)
00497e 940e b879 	CALL SUBOPT_0xF8
                 ; 0007 0128         readConfig->levelOnEvent        =   0.0;
004980 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0007 0129         readConfig->eventSourceNumber   =   0;
004982 81aa      	LDD  R26,Y+2
004983 81bb      	LDD  R27,Y+2+1
004984 9615      	ADIW R26,5
004985 e0e0      	LDI  R30,LOW(0)
004986 93ec      	ST   X,R30
                 ; 0007 012A 
                 ; 0007 012B         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004987 e000     +LDI R16 , LOW ( 0 )
004988 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004989 3203     +CPI R16 , LOW ( 35 )
00498a e0e0     +LDI R30 , HIGH ( 35 )
00498b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00498c f43c      	BRGE _0xE004A
                 ; 0007 012C             readConfig->eventSource[i]  =   0x00;
00498d 940e b944 	CALL SUBOPT_0x11A
00498f e0a0      	LDI  R26,LOW(0)
004990 83a0      	STD  Z+0,R26
                 ; 0007 012D         }
                +
004991 5f0f     +SUBI R16 , LOW ( - 1 )
004992 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004993 cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012E     }
                 ; 0007 012F     else{
004994 c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 0130         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004995 940e b94a 	CALL SUBOPT_0x11B
004997 58e8      	SUBI R30,LOW(-_config_aout)
004998 4ffd      	SBCI R31,HIGH(-_config_aout)
004999 01df      	MOVW R26,R30
00499a 940e b88d 	CALL SUBOPT_0xFB
                 ; 0007 0131         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
00499c 940e b94a 	CALL SUBOPT_0x11B
                +
00499e 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
00499f 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
0049a0 01df      	MOVW R26,R30
0049a1 940e cee7 	CALL __EEPROMRDD
                +
0049a3 81aa     +LDD R26 , Y + 2
0049a4 81bb     +LDD R27 , Y + 2 + 1
0049a5 9611     +ADIW R26 , 1
0049a6 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0132         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
0049a8 940e b94a 	CALL SUBOPT_0x11B
0049aa 940e b950 	CALL SUBOPT_0x11C
                +
0049ac 81aa     +LDD R26 , Y + 2
0049ad 81bb     +LDD R27 , Y + 2 + 1
0049ae 9615     +ADIW R26 , 5
0049af 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0133 
                 ; 0007 0134         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
0049b0 e000     +LDI R16 , LOW ( 0 )
0049b1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
0049b2 940e b94a 	CALL SUBOPT_0x11B
0049b4 940e b950 	CALL SUBOPT_0x11C
0049b6 940e b933 	CALL SUBOPT_0x117
0049b8 f484      	BRGE _0xE004E
                 ; 0007 0135             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
0049b9 940e b944 	CALL SUBOPT_0x11A
                +
0049bb 2f7e     +MOV R23 , R30
0049bc 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
0049bd 940e b94a 	CALL SUBOPT_0x11B
0049bf 940e b956 	CALL SUBOPT_0x11D
0049c1 940e ceef 	CALL __EEPROMRDB
                +
0049c3 2fa7     +MOV R26 , R23
0049c4 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
0049c5 93ec      	ST   X,R30
                 ; 0007 0136         }
                +
0049c6 5f0f     +SUBI R16 , LOW ( - 1 )
0049c7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049c8 cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0137         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
0049c9 940e b94a 	CALL SUBOPT_0x11B
0049cb 940e b950 	CALL SUBOPT_0x11C
0049cd 2f0e      	MOV  R16,R30
0049ce 2711      	CLR  R17
                 _0xE0050:
                +
0049cf 3203     +CPI R16 , LOW ( 35 )
0049d0 e0e0     +LDI R30 , HIGH ( 35 )
0049d1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0049d2 f43c      	BRGE _0xE0051
                 ; 0007 0138             readConfig->eventSource[i]  =   0x00;
0049d3 940e b944 	CALL SUBOPT_0x11A
0049d5 e0a0      	LDI  R26,LOW(0)
0049d6 83a0      	STD  Z+0,R26
                 ; 0007 0139         }
                +
0049d7 5f0f     +SUBI R16 , LOW ( - 1 )
0049d8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049d9 cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 013A     }
                 _0xE004B:
                 ; 0007 013B     return 0;
                 _0x20E008A:
0049da e0e0      	LDI  R30,LOW(0)
0049db e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
0049dc 8119      	LDD  R17,Y+1
0049dd 8108      	LDD  R16,Y+0
0049de 9626      	ADIW R28,6
0049df 9508      	RET
                 ; 0007 013C }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013F {
                 _getBuzzerConfig:
                 ; 0007 0140     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 0141     int i;
                 ; 0007 0142 
                 ; 0007 0143     if( config_buzz_flag != 0x01){
0049e0 93ba      	ST   -Y,R27
0049e1 93aa      	ST   -Y,R26
0049e2 9724      	SBIW R28,4
0049e3 ece7      	LDI  R30,LOW(199)
0049e4 83e8      	ST   Y,R30
0049e5 ecef      	LDI  R30,LOW(207)
0049e6 83e9      	STD  Y+1,R30
0049e7 ede7      	LDI  R30,LOW(215)
0049e8 83ea      	STD  Y+2,R30
0049e9 edef      	LDI  R30,LOW(223)
0049ea 83eb      	STD  Y+3,R30
0049eb 931a      	ST   -Y,R17
0049ec 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
0049ed e7ae      	LDI  R26,LOW(_config_buzz_flag)
0049ee e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0049ef 940e ceef 	CALL __EEPROMRDB
0049f1 30e1      	CPI  R30,LOW(0x1)
0049f2 f141      	BREQ _0xE0052
                 ; 0007 0144         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
0049f3 e7e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
0049f4 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
0049f5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
0049f6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
0049f7 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0145         readConfig->enable              =   0x01;
0049f9 81ae      	LDD  R26,Y+6
0049fa 81bf      	LDD  R27,Y+6+1
0049fb e0e1      	LDI  R30,LOW(1)
0049fc 93ec      	ST   X,R30
                 ; 0007 0146         readConfig->eventSourceNumber   =   sizeof(errSrc);
0049fd 9611      	ADIW R26,1
0049fe e0e4      	LDI  R30,LOW(4)
0049ff 93ec      	ST   X,R30
                 ; 0007 0147 
                 ; 0007 0148         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0149         for(i=0;i<sizeof(errSrc);i++){
                +
004a00 e000     +LDI R16 , LOW ( 0 )
004a01 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004a02 3004     +CPI R16 , LOW ( 4 )
004a03 e0e0     +LDI R30 , HIGH ( 4 )
004a04 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004a05 f4a4      	BRGE _0xE0055
                 ; 0007 014A             if(i<sizeof(errSrc)){
                +
004a06 3004     +CPI R16 , LOW ( 4 )
004a07 e0e0     +LDI R30 , HIGH ( 4 )
004a08 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004a09 f44c      	BRGE _0xE0056
                 ; 0007 014B                 readConfig->eventSource[i]  =   errSrc[i];
004a0a 940e b95c 	CALL SUBOPT_0x11E
004a0c 010f      	MOVW R0,R30
004a0d 940e b962 	CALL SUBOPT_0x11F
004a0f 91ec      	LD   R30,X
004a10 01d0      	MOVW R26,R0
004a11 93ec      	ST   X,R30
                 ; 0007 014C                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014D             }
                 ; 0007 014E             else{
004a12 c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014F                 readConfig->eventSource[i]  =   0x00;
004a13 940e b95c 	CALL SUBOPT_0x11E
004a15 e0a0      	LDI  R26,LOW(0)
004a16 83a0      	STD  Z+0,R26
                 ; 0007 0150             }
                 _0xE0057:
                 ; 0007 0151         }
                +
004a17 5f0f     +SUBI R16 , LOW ( - 1 )
004a18 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a19 cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0152         //printDebug("\r\n");
                 ; 0007 0153     }
                 ; 0007 0154     else{
004a1a c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0155         readConfig->enable              =   config_buzz.enable;
004a1b e0a8      	LDI  R26,LOW(_config_buzz)
004a1c e0b5      	LDI  R27,HIGH(_config_buzz)
004a1d 940e ceef 	CALL __EEPROMRDB
004a1f 81ae      	LDD  R26,Y+6
004a20 81bf      	LDD  R27,Y+6+1
004a21 93ec      	ST   X,R30
                 ; 0007 0156         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004a22 940e b967 	CALL SUBOPT_0x120
                +
004a24 81ae     +LDD R26 , Y + 6
004a25 81bf     +LDD R27 , Y + 6 + 1
004a26 9611     +ADIW R26 , 1
004a27 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0157 
                 ; 0007 0158         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004a28 e000     +LDI R16 , LOW ( 0 )
004a29 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004a2a 940e b967 	CALL SUBOPT_0x120
004a2c 940e b933 	CALL SUBOPT_0x117
004a2e f454      	BRGE _0xE005B
                 ; 0007 0159             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004a2f 940e b95c 	CALL SUBOPT_0x11E
004a31 010f      	MOVW R0,R30
                +
004a32 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004a33 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004a34 940e b85c 	CALL SUBOPT_0xF4
                 ; 0007 015A         }
                +
004a36 5f0f     +SUBI R16 , LOW ( - 1 )
004a37 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a38 cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 015B         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004a39 940e b967 	CALL SUBOPT_0x120
004a3b 2f0e      	MOV  R16,R30
004a3c 2711      	CLR  R17
                 _0xE005D:
                +
004a3d 3203     +CPI R16 , LOW ( 35 )
004a3e e0e0     +LDI R30 , HIGH ( 35 )
004a3f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004a40 f43c      	BRGE _0xE005E
                 ; 0007 015C             readConfig->eventSource[i]  =   0x00;
004a41 940e b95c 	CALL SUBOPT_0x11E
004a43 e0a0      	LDI  R26,LOW(0)
004a44 83a0      	STD  Z+0,R26
                 ; 0007 015D         }
                +
004a45 5f0f     +SUBI R16 , LOW ( - 1 )
004a46 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a47 cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015E     }
                 _0xE0058:
                 ; 0007 015F 
                 ; 0007 0160     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004a48 eae6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004a49 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004a4a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004a4b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004a4c 940e b96c 	CALL SUBOPT_0x121
004a4e 91ec      	LD   R30,X
004a4f 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0161     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004a51 ede7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004a52 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004a53 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004a54 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004a55 940e b971 	CALL SUBOPT_0x122
004a57 81e1      	LDD  R30,Z+1
004a58 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0162     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004a5a e0e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004a5b e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004a5c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004a5d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004a5e 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0163     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004a60 e000     +LDI R16 , LOW ( 0 )
004a61 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004a62 3203     +CPI R16 , LOW ( 35 )
004a63 e0e0     +LDI R30 , HIGH ( 35 )
004a64 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004a65 f45c      	BRGE _0xE0061
                 ; 0007 0164         printDebug("[0x%02X]",readConfig->eventSource[i]);
004a66 940e b976 	CALL SUBOPT_0x123
004a68 940e b971 	CALL SUBOPT_0x122
004a6a 940e b97b 	CALL SUBOPT_0x124
004a6c 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0165     }
                +
004a6e 5f0f     +SUBI R16 , LOW ( - 1 )
004a6f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a70 cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0166     printDebug("\r\n");
004a71 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 0167 
                 ; 0007 0168     return 0;
004a73 940e b7a8 	CALL SUBOPT_0xD4
004a75 9628      	ADIW R28,8
004a76 9508      	RET
                 ; 0007 0169 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016C {
                 _getEnvAlarmConfig:
                 ; 0007 016D     if( config_alm_flag != 0x01 ){
004a77 93ba      	ST   -Y,R27
004a78 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004a79 e7af      	LDI  R26,LOW(_config_alm_flag)
004a7a e0b5      	LDI  R27,HIGH(_config_alm_flag)
004a7b 940e ceef 	CALL __EEPROMRDB
004a7d 30e1      	CPI  R30,LOW(0x1)
004a7e f121      	BREQ _0xE0062
                 ; 0007 016E         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004a7f e2eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004a80 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004a81 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004a82 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004a83 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 016F         readConfig->gsmRSSILevel         =   0;
004a85 81a8      	LD   R26,Y
004a86 81b9      	LDD  R27,Y+1
004a87 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0007 0170         readConfig->gsmCreditBalance     =   0;
004a89 81a8      	LD   R26,Y
004a8a 81b9      	LDD  R27,Y+1
004a8b 9614      	ADIW R26,4
004a8c e0e0      	LDI  R30,LOW(0)
004a8d e0f0      	LDI  R31,HIGH(0)
004a8e 940e b8c0 	CALL SUBOPT_0x104
                 ; 0007 0171         readConfig->batteryLevel         =   0;
004a90 9616      	ADIW R26,6
004a91 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0007 0172         readConfig->commSignalLevel      =   0;
004a93 81a8      	LD   R26,Y
004a94 81b9      	LDD  R27,Y+1
004a95 961a      	ADIW R26,10
004a96 940e b5e4 	CALL SUBOPT_0x8E
                 ; 0007 0173         readConfig->commLostDelay        =   0;
004a98 81a8      	LD   R26,Y
004a99 81b9      	LDD  R27,Y+1
004a9a 961e      	ADIW R26,14
004a9b e0e0      	LDI  R30,LOW(0)
004a9c e0f0      	LDI  R31,HIGH(0)
004a9d 940e b8c0 	CALL SUBOPT_0x104
                 ; 0007 0174         readConfig->memoryMin            =   0;
004a9f 9650      	ADIW R26,16
004aa0 940e b8f4 	CALL SUBOPT_0x10D
                 ; 0007 0175     }
                 ; 0007 0176     else{
004aa2 c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0177         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004aa3 e2ad      	LDI  R26,LOW(_config_alm)
004aa4 e0b5      	LDI  R27,HIGH(_config_alm)
004aa5 940e cee7 	CALL __EEPROMRDD
004aa7 81a8      	LD   R26,Y
004aa8 81b9      	LDD  R27,Y+1
004aa9 940e cea3 	CALL __PUTDP1
                 ; 0007 0178         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004aab e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004aac e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004aad 940e ceeb 	CALL __EEPROMRDW
                +
004aaf 81a8     +LDD R26 , Y + 0
004ab0 81b9     +LDD R27 , Y + 0 + 1
004ab1 9614     +ADIW R26 , 4
004ab2 93ed     +ST X + , R30
004ab3 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0179         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004ab4 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004ab5 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004ab6 940e cee7 	CALL __EEPROMRDD
                +
004ab8 81a8     +LDD R26 , Y + 0
004ab9 81b9     +LDD R27 , Y + 0 + 1
004aba 9616     +ADIW R26 , 6
004abb 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 017A         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004abd e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004abe e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004abf 940e cee7 	CALL __EEPROMRDD
                +
004ac1 81a8     +LDD R26 , Y + 0
004ac2 81b9     +LDD R27 , Y + 0 + 1
004ac3 961a     +ADIW R26 , 10
004ac4 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 017B         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004ac6 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004ac7 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004ac8 940e ceeb 	CALL __EEPROMRDW
                +
004aca 81a8     +LDD R26 , Y + 0
004acb 81b9     +LDD R27 , Y + 0 + 1
004acc 961e     +ADIW R26 , 14
004acd 93ed     +ST X + , R30
004ace 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017C         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004acf e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004ad0 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004ad1 940e ceeb 	CALL __EEPROMRDW
                +
004ad3 81a8     +LDD R26 , Y + 0
004ad4 81b9     +LDD R27 , Y + 0 + 1
004ad5 9650     +ADIW R26 , 16
004ad6 93ed     +ST X + , R30
004ad7 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017D     }
                 _0xE0063:
                 ; 0007 017E 
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004ad8 e5ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004ad9 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004ada e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004adb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004adc 940e b980 	CALL SUBOPT_0x125
004ade 940e b985 	CALL SUBOPT_0x126
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004ae0 e8ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004ae1 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004ae2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004ae3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004ae4 940e b980 	CALL SUBOPT_0x125
004ae6 9614      	ADIW R26,4
004ae7 940e b98a 	CALL SUBOPT_0x127
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004ae9 ebef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004aea e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004aeb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004aec e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004aed 940e b98d 	CALL SUBOPT_0x128
004aef 940e b992 	CALL SUBOPT_0x129
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004af1 eeef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004af2 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004af3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004af4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004af5 940e b98d 	CALL SUBOPT_0x128
004af7 940e b999 	CALL SUBOPT_0x12A
                 ; 0007 0183     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004af9 e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004afa e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004afb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004afc e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004afd 940e b980 	CALL SUBOPT_0x125
004aff 961e      	ADIW R26,14
004b00 940e b98a 	CALL SUBOPT_0x127
                 ; 0007 0184     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004b02 e4ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004b03 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004b04 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004b05 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004b06 940e b980 	CALL SUBOPT_0x125
004b08 9650      	ADIW R26,16
004b09 c033      	RJMP _0x20E0088
                 ; 0007 0185 
                 ; 0007 0186     return 0;
                 ; 0007 0187 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 018A {
                 _getStatusReportConfig:
                 ; 0007 018B     if( config_stat_flag != 0x01 ){
004b0a 93ba      	ST   -Y,R27
004b0b 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004b0c e8a0      	LDI  R26,LOW(_config_stat_flag)
004b0d e0b5      	LDI  R27,HIGH(_config_stat_flag)
004b0e 940e ceef 	CALL __EEPROMRDB
004b10 30e1      	CPI  R30,LOW(0x1)
004b11 f081      	BREQ _0xE0064
                 ; 0007 018C         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004b12 e7ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004b13 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004b14 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004b15 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004b16 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 018D         readConfig->accm                =   0x30;
004b18 81a8      	LD   R26,Y
004b19 81b9      	LDD  R27,Y+1
004b1a e3e0      	LDI  R30,LOW(48)
004b1b 93ec      	ST   X,R30
                 ; 0007 018E         readConfig->intv                =   60;
004b1c 9611      	ADIW R26,1
004b1d e3ec      	LDI  R30,LOW(60)
004b1e e0f0      	LDI  R31,HIGH(60)
004b1f 93ed      	ST   X+,R30
004b20 93fc      	ST   X,R31
                 ; 0007 018F     }
                 ; 0007 0190     else{
004b21 c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 0191         readConfig->accm                =   config_stat.accm;
004b22 e3af      	LDI  R26,LOW(_config_stat)
004b23 e0b5      	LDI  R27,HIGH(_config_stat)
004b24 940e ceef 	CALL __EEPROMRDB
004b26 81a8      	LD   R26,Y
004b27 81b9      	LDD  R27,Y+1
004b28 93ec      	ST   X,R30
                 ; 0007 0192         readConfig->intv                =   config_stat.intv;
                +
004b29 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004b2a e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004b2b 940e b906 	CALL SUBOPT_0x110
                 ; 0007 0193     }
                 _0xE0065:
                 ; 0007 0194 
                 ; 0007 0195     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004b2d ebe7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004b2e e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004b2f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004b30 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004b31 940e b980 	CALL SUBOPT_0x125
004b33 91ec      	LD   R30,X
004b34 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0196     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004b36 eee6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004b37 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004b38 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004b39 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004b3a 940e b980 	CALL SUBOPT_0x125
004b3c 9611      	ADIW R26,1
                 _0x20E0088:
004b3d 940e ce94 	CALL __GETW1P
004b3f 940e b388 	CALL SUBOPT_0x34
004b41 940e b29d 	CALL SUBOPT_0x12
                 ; 0007 0197 
                 ; 0007 0198     return 0;
004b43 e0e0      	LDI  R30,LOW(0)
004b44 e0f0      	LDI  R31,HIGH(0)
004b45 9622      	ADIW R28,2
004b46 9508      	RET
                 ; 0007 0199 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 01A1 {
                 _setPropertiesConfig:
                 ; 0007 01A2     int i;
                 ; 0007 01A3 
                 ; 0007 01A4     for(i=0;i<DEVTYPE_LENGTH;i++)
004b47 940e b595 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004b49 e000     +LDI R16 , LOW ( 0 )
004b4a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004b4b 3104     +CPI R16 , LOW ( 20 )
004b4c e0e0     +LDI R30 , HIGH ( 20 )
004b4d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004b4e f474      	BRGE _0xE0068
                 ; 0007 01A5     {
                 ; 0007 01A6         config_prop.deviceType[i]       = newConfig->deviceType[i];
004b4f 01f8      	MOVW R30,R16
004b50 50e0      	SUBI R30,LOW(-_config_prop)
004b51 40f0      	SBCI R31,HIGH(-_config_prop)
004b52 010f      	MOVW R0,R30
004b53 01f8      	MOVW R30,R16
004b54 81aa      	LDD  R26,Y+2
004b55 81bb      	LDD  R27,Y+2+1
004b56 940e b9a0 	CALL SUBOPT_0x12B
004b58 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01A7     }
                +
004b5a 5f0f     +SUBI R16 , LOW ( - 1 )
004b5b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b5c cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A8 
                 ; 0007 01A9     /*
                 ; 0007 01AA     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01AB     {
                 ; 0007 01AC         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AD     }
                 ; 0007 01AE     */
                 ; 0007 01AF 
                 ; 0007 01B0     for(i=0;i<NAME_LENGTH;i++)
                +
004b5d e000     +LDI R16 , LOW ( 0 )
004b5e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004b5f 3208     +CPI R16 , LOW ( 40 )
004b60 e0e0     +LDI R30 , HIGH ( 40 )
004b61 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004b62 f484      	BRGE _0xE006B
                 ; 0007 01B1     {
                 ; 0007 01B2         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004b63 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004b64 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004b65 0fe0      	ADD  R30,R16
004b66 1ff1      	ADC  R31,R17
004b67 01df      	MOVW R26,R30
004b68 81ea      	LDD  R30,Y+2
004b69 81fb      	LDD  R31,Y+2+1
004b6a 96b8      	ADIW R30,40
004b6b 0fe0      	ADD  R30,R16
004b6c 1ff1      	ADC  R31,R17
004b6d 81e0      	LD   R30,Z
004b6e 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01B3     }
                +
004b70 5f0f     +SUBI R16 , LOW ( - 1 )
004b71 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b72 cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B4 
                 ; 0007 01B5     for(i=0;i<ID_LENGTH;i++)
                +
004b73 e000     +LDI R16 , LOW ( 0 )
004b74 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004b75 3104     +CPI R16 , LOW ( 20 )
004b76 e0e0     +LDI R30 , HIGH ( 20 )
004b77 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004b78 f46c      	BRGE _0xE006E
                 ; 0007 01B6     {
                 ; 0007 01B7         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004b79 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004b7a e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004b7b 0fe0      	ADD  R30,R16
004b7c 1ff1      	ADC  R31,R17
004b7d 01df      	MOVW R26,R30
004b7e 940e b864 	CALL SUBOPT_0xF5
004b80 81e0      	LD   R30,Z
004b81 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01B8     }
                +
004b83 5f0f     +SUBI R16 , LOW ( - 1 )
004b84 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b85 cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B9 
                 ; 0007 01BA     for(i=0;i<NAME_LENGTH;i++)
                +
004b86 e000     +LDI R16 , LOW ( 0 )
004b87 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004b88 3208     +CPI R16 , LOW ( 40 )
004b89 e0e0     +LDI R30 , HIGH ( 40 )
004b8a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004b8b f46c      	BRGE _0xE0071
                 ; 0007 01BB     {
                 ; 0007 01BC         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004b8c e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004b8d e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004b8e 0fe0      	ADD  R30,R16
004b8f 1ff1      	ADC  R31,R17
004b90 01df      	MOVW R26,R30
004b91 940e b86b 	CALL SUBOPT_0xF6
004b93 81e0      	LD   R30,Z
004b94 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01BD     }
                +
004b96 5f0f     +SUBI R16 , LOW ( - 1 )
004b97 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b98 cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BE 
                 ; 0007 01BF     for(i=0;i<ID_LENGTH;i++)
                +
004b99 e000     +LDI R16 , LOW ( 0 )
004b9a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004b9b 3104     +CPI R16 , LOW ( 20 )
004b9c e0e0     +LDI R30 , HIGH ( 20 )
004b9d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004b9e f46c      	BRGE _0xE0074
                 ; 0007 01C0     {
                 ; 0007 01C1         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004b9f e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004ba0 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004ba1 0fe0      	ADD  R30,R16
004ba2 1ff1      	ADC  R31,R17
004ba3 01df      	MOVW R26,R30
004ba4 940e b872 	CALL SUBOPT_0xF7
004ba6 81e0      	LD   R30,Z
004ba7 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01C2     }
                +
004ba9 5f0f     +SUBI R16 , LOW ( - 1 )
004baa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bab cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop.timeZone                = newConfig->timeZone;
                +
004bac eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004bad e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004bae 010f      	MOVW R0,R30
004baf 81aa      	LDD  R26,Y+2
004bb0 81bb      	LDD  R27,Y+2+1
004bb1 56a0      	SUBI R26,LOW(-160)
004bb2 4fbf      	SBCI R27,HIGH(-160)
004bb3 940e b9a5 	CALL SUBOPT_0x12C
                 ; 0007 01C5 
                 ; 0007 01C6     config_prop_flag                    = 0x01;
004bb5 e4a2      	LDI  R26,LOW(_config_prop_flag)
004bb6 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004bb7 940e b9aa 	CALL SUBOPT_0x12D
                 ; 0007 01C7 
                 ; 0007 01C8     is_properties_config_update          = 1;
004bb9 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C9 
                 ; 0007 01CA     return 0;
004bbb 940e b7a8 	CALL SUBOPT_0xD4
004bbd c090      	RJMP _0x20E0086
                 ; 0007 01CB }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CE {
                 _setOperatingConfig:
                 ; 0007 01CF     int i;
                 ; 0007 01D0 
                 ; 0007 01D1     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004bbe 940e b595 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004bc0 81aa      	LDD  R26,Y+2
004bc1 81bb      	LDD  R27,Y+2+1
004bc2 91ac      	LD   R26,X
004bc3 31a0      	CPI  R26,LOW(0x10)
004bc4 f029      	BREQ _0xE0076
004bc5 81aa      	LDD  R26,Y+2
004bc6 81bb      	LDD  R27,Y+2+1
004bc7 91ac      	LD   R26,X
004bc8 32a0      	CPI  R26,LOW(0x20)
004bc9 f409      	BRNE _0xE0077
                 _0xE0076:
004bca c00b      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D2         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004bcb e1e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004bcc e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004bcd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004bce e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004bcf 940e b8a1 	CALL SUBOPT_0xFE
                 ; 0007 01D3         return -1;
004bd1 efef      	LDI  R30,LOW(65535)
004bd2 efff      	LDI  R31,HIGH(65535)
004bd3 8119      	LDD  R17,Y+1
004bd4 8108      	LDD  R16,Y+0
004bd5 c078      	RJMP _0x20E0086
                 ; 0007 01D4     }
                 ; 0007 01D5 
                 ; 0007 01D6     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004bd6 81aa      	LDD  R26,Y+2
004bd7 81bb      	LDD  R27,Y+2+1
004bd8 91ec      	LD   R30,X
004bd9 eaa1      	LDI  R26,LOW(_config_oper)
004bda e0b0      	LDI  R27,HIGH(_config_oper)
004bdb 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01D7     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004bdd eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004bde e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004bdf 81ea      	LDD  R30,Y+2
004be0 81fb      	LDD  R31,Y+2+1
004be1 81e1      	LDD  R30,Z+1
004be2 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01D8     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004be4 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004be5 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004be6 81ea      	LDD  R30,Y+2
004be7 81fb      	LDD  R31,Y+2+1
004be8 81e2      	LDD  R30,Z+2
004be9 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01D9 
                 ; 0007 01DA     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004beb e4ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004bec e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004bed e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004bee e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004bef 940e cec8 	CALL __PUTPARD1
004bf1 eaa1      	LDI  R26,LOW(_config_oper)
004bf2 e0b0      	LDI  R27,HIGH(_config_oper)
004bf3 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 01DB     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004bf5 e6ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004bf6 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004bf7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004bf8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004bf9 940e cec8 	CALL __PUTPARD1
                +
004bfb eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004bfc e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004bfd 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 01DC     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004bff 940e b9b1 	CALL SUBOPT_0x12F
                +
004c01 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004c02 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004c03 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 01DD     printDebug("\r\n sensorEnable    >> ");
                +
004c05 eae6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004c06 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004c07 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004c08 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004c09 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 01DE 
                 ; 0007 01DF     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004c0b e000     +LDI R16 , LOW ( 0 )
004c0c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004c0d 3005     +CPI R16 , LOW ( 5 )
004c0e e0e0     +LDI R30 , HIGH ( 5 )
004c0f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004c10 f4c4      	BRGE _0xE007A
                 ; 0007 01E0     {
                 ; 0007 01E1         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004c11 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004c12 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004c13 0fe0      	ADD  R30,R16
004c14 1ff1      	ADC  R31,R17
004c15 01df      	MOVW R26,R30
004c16 940e b887 	CALL SUBOPT_0xFA
004c18 81e0      	LD   R30,Z
004c19 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 01E2         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004c1b 940e b976 	CALL SUBOPT_0x123
004c1d 940e cec8 	CALL __PUTPARD1
                +
004c1f eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004c20 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004c21 0fe0      	ADD  R30,R16
004c22 1ff1      	ADC  R31,R17
004c23 01df      	MOVW R26,R30
004c24 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 01E3     }
                +
004c26 5f0f     +SUBI R16 , LOW ( - 1 )
004c27 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c28 cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E4     printDebug("\r\n");
004c29 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 01E5 
                 ; 0007 01E6     config_oper_flag                    =   0x01;
004c2b e4a3      	LDI  R26,LOW(_config_oper_flag)
004c2c e0b5      	LDI  R27,HIGH(_config_oper_flag)
004c2d 940e b9aa 	CALL SUBOPT_0x12D
                 ; 0007 01E7 
                 ; 0007 01E8     is_operating_config_update          =   1;
004c2f 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E9 
                 ; 0007 01EA     return 0;
004c31 940e b7a8 	CALL SUBOPT_0xD4
004c33 c01a      	RJMP _0x20E0086
                 ; 0007 01EB }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EE {
                 _setSensorConfig:
                 ; 0007 01EF     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004c34 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004c36 f022      	BRMI _0xE007C
004c37 81aa      	LDD  R26,Y+2
004c38 81bb      	LDD  R27,Y+2+1
004c39 9715      	SBIW R26,5
004c3a f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01F0         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004c3b ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004c3c e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004c3d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004c3e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004c3f c008      	RJMP _0x20E0085
                 ; 0007 01F1         return -1;
                 ; 0007 01F2     }
                 ; 0007 01F3     if(newConfig->samplingRate == 0){
                 _0xE007B:
004c40 940e b9b8 	CALL SUBOPT_0x130
004c42 9730      	SBIW R30,0
004c43 f461      	BRNE _0xE007E
                 ; 0007 01F4         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004c44 eeeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004c45 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004c46 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004c47 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E0085:
004c48 940e cec8 	CALL __PUTPARD1
004c4a 940e b391 	CALL SUBOPT_0x36
                 ; 0007 01F5         return -1;
                 _0x20E0087:
004c4c efef      	LDI  R30,LOW(65535)
004c4d efff      	LDI  R31,HIGH(65535)
                 _0x20E0086:
004c4e 9624      	ADIW R28,4
004c4f 9508      	RET
                 ; 0007 01F6     }
                 ; 0007 01F7 
                 ; 0007 01F8     if(newConfig->samplingRate < 60){
                 _0xE007E:
004c50 940e b9b8 	CALL SUBOPT_0x130
004c52 97fc      	SBIW R30,60
004c53 f430      	BRSH _0xE007F
                 ; 0007 01F9         newConfig->samplingRate         =   60;
004c54 81a8      	LD   R26,Y
004c55 81b9      	LDD  R27,Y+1
004c56 e3ec      	LDI  R30,LOW(60)
004c57 e0f0      	LDI  R31,HIGH(60)
004c58 93ed      	ST   X+,R30
004c59 93fc      	ST   X,R31
                 ; 0007 01FA     }
                 ; 0007 01FB 
                 ; 0007 01FC     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004c5a 940e b8ca 	CALL SUBOPT_0x106
004c5c 55e7      	SUBI R30,LOW(-_config_sens)
004c5d 4fff      	SBCI R31,HIGH(-_config_sens)
004c5e 010f      	MOVW R0,R30
004c5f 940e b9b8 	CALL SUBOPT_0x130
004c61 940e b9bd 	CALL SUBOPT_0x131
                 ; 0007 01FD     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004c63 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004c64 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004c65 010f      	MOVW R0,R30
004c66 81a8      	LD   R26,Y
004c67 81b9      	LDD  R27,Y+1
004c68 9612      	ADIW R26,2
004c69 940e b9c1 	CALL SUBOPT_0x132
                 ; 0007 01FE     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004c6b 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004c6c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004c6d 01df      	MOVW R26,R30
004c6e 81e8      	LD   R30,Y
004c6f 81f9      	LDD  R31,Y+1
004c70 81e4      	LDD  R30,Z+4
004c71 940e b9c4 	CALL SUBOPT_0x133
                 ; 0007 01FF     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004c73 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004c74 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004c75 01df      	MOVW R26,R30
004c76 81e8      	LD   R30,Y
004c77 81f9      	LDD  R31,Y+1
004c78 81e5      	LDD  R30,Z+5
004c79 940e b9c4 	CALL SUBOPT_0x133
                 ; 0007 0200     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004c7b 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004c7c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004c7d 01df      	MOVW R26,R30
004c7e 81e8      	LD   R30,Y
004c7f 81f9      	LDD  R31,Y+1
004c80 81e6      	LDD  R30,Z+6
004c81 940e b9c4 	CALL SUBOPT_0x133
                 ; 0007 0201     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004c83 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004c84 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004c85 01df      	MOVW R26,R30
004c86 81e8      	LD   R30,Y
004c87 81f9      	LDD  R31,Y+1
004c88 81e7      	LDD  R30,Z+7
004c89 940e b9c4 	CALL SUBOPT_0x133
                 ; 0007 0202 
                 ; 0007 0203     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004c8b 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004c8c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004c8d 01df      	MOVW R26,R30
004c8e 81e8      	LD   R30,Y
004c8f 81f9      	LDD  R31,Y+1
004c90 85e0      	LDD  R30,Z+8
004c91 940e b9c4 	CALL SUBOPT_0x133
                 ; 0007 0204     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004c93 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004c94 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004c95 010f      	MOVW R0,R30
004c96 81a8      	LD   R26,Y
004c97 81b9      	LDD  R27,Y+1
004c98 9619      	ADIW R26,9
004c99 940e b9c7 	CALL SUBOPT_0x134
                 ; 0007 0205     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004c9b 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004c9c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004c9d 010f      	MOVW R0,R30
004c9e 81a8      	LD   R26,Y
004c9f 81b9      	LDD  R27,Y+1
004ca0 961d      	ADIW R26,13
004ca1 940e b9c1 	CALL SUBOPT_0x132
                 ; 0007 0206     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004ca3 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004ca4 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004ca5 010f      	MOVW R0,R30
004ca6 81a8      	LD   R26,Y
004ca7 81b9      	LDD  R27,Y+1
004ca8 961f      	ADIW R26,15
004ca9 940e b9c7 	CALL SUBOPT_0x134
                 ; 0007 0207     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004cab 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004cac 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004cad 010f      	MOVW R0,R30
004cae 81a8      	LD   R26,Y
004caf 81b9      	LDD  R27,Y+1
004cb0 9653      	ADIW R26,19
004cb1 940e b9c7 	CALL SUBOPT_0x134
                 ; 0007 0208     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004cb3 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004cb4 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004cb5 010f      	MOVW R0,R30
004cb6 81a8      	LD   R26,Y
004cb7 81b9      	LDD  R27,Y+1
004cb8 9657      	ADIW R26,23
004cb9 940e b9c1 	CALL SUBOPT_0x132
                 ; 0007 0209     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004cbb 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004cbc 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004cbd 010f      	MOVW R0,R30
004cbe 81a8      	LD   R26,Y
004cbf 81b9      	LDD  R27,Y+1
004cc0 9659      	ADIW R26,25
004cc1 940e b9cd 	CALL SUBOPT_0x135
                 ; 0007 020A 
                 ; 0007 020B     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004cc3 e2e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004cc4 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004cc5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004cc6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004cc7 940e b9d3 	CALL SUBOPT_0x136
004cc9 55e7      	SUBI R30,LOW(-_config_sens)
004cca 4fff      	SBCI R31,HIGH(-_config_sens)
004ccb 940e b9db 	CALL SUBOPT_0x137
004ccd 940e b29d 	CALL SUBOPT_0x12
                 ; 0007 020C     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004ccf e4e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004cd0 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004cd1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004cd2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004cd3 940e b9d3 	CALL SUBOPT_0x136
                +
004cd5 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004cd6 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004cd7 940e b9db 	CALL SUBOPT_0x137
004cd9 940e b29d 	CALL SUBOPT_0x12
                 ; 0007 020D     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004cdb e6e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004cdc e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004cdd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004cde e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004cdf 940e b9d3 	CALL SUBOPT_0x136
                +
004ce1 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004ce2 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004ce3 01df      	MOVW R26,R30
004ce4 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 020E     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004ce6 e7ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004ce7 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004ce8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004ce9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004cea 940e b9d3 	CALL SUBOPT_0x136
                +
004cec 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004ced 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004cee 01df      	MOVW R26,R30
004cef 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 020F     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004cf1 e9ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004cf2 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004cf3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004cf4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004cf5 940e b9d3 	CALL SUBOPT_0x136
                +
004cf7 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004cf8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004cf9 01df      	MOVW R26,R30
004cfa 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 0210     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004cfc ebe7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004cfd e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004cfe e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004cff e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004d00 940e b9d3 	CALL SUBOPT_0x136
                +
004d02 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004d03 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004d04 01df      	MOVW R26,R30
004d05 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 0211 
                 ; 0007 0212     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004d07 940e b9b1 	CALL SUBOPT_0x12F
004d09 81ae      	LDD  R26,Y+6
004d0a 81bf      	LDD  R27,Y+6+1
004d0b e1ed      	LDI  R30,LOW(29)
004d0c 940e cdfe 	CALL __MULB1W2U
                +
004d0e 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004d0f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004d10 01df      	MOVW R26,R30
004d11 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 0213     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004d13 ede4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004d14 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004d15 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004d16 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004d17 940e b9d3 	CALL SUBOPT_0x136
004d19 940e b8d0 	CALL SUBOPT_0x107
004d1b 940e b96c 	CALL SUBOPT_0x121
004d1d e1ed      	LDI  R30,LOW(29)
004d1e 940e cdfe 	CALL __MULB1W2U
004d20 940e b8d0 	CALL SUBOPT_0x107
004d22 940e b300 	CALL SUBOPT_0x21
                 ; 0007 0214     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004d24 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004d25 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004d26 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004d27 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004d28 940e b9d3 	CALL SUBOPT_0x136
004d2a 940e b8d6 	CALL SUBOPT_0x108
004d2c 940e b388 	CALL SUBOPT_0x34
004d2e 85aa      	LDD  R26,Y+10
004d2f 85bb      	LDD  R27,Y+10+1
004d30 e1ed      	LDI  R30,LOW(29)
004d31 940e cdfe 	CALL __MULB1W2U
004d33 940e b8d6 	CALL SUBOPT_0x108
004d35 940e b9df 	CALL SUBOPT_0x138
                 ; 0007 0215     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004d37 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004d38 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004d39 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004d3a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004d3b 940e b9d3 	CALL SUBOPT_0x136
004d3d 940e b8dc 	CALL SUBOPT_0x109
004d3f 940e b96c 	CALL SUBOPT_0x121
004d41 e1ed      	LDI  R30,LOW(29)
004d42 940e cdfe 	CALL __MULB1W2U
004d44 940e b8dc 	CALL SUBOPT_0x109
004d46 940e b300 	CALL SUBOPT_0x21
                 ; 0007 0216     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
004d48 e3e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
004d49 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
004d4a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
004d4b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
004d4c 940e b9d3 	CALL SUBOPT_0x136
004d4e 940e b8e2 	CALL SUBOPT_0x10A
004d50 940e b96c 	CALL SUBOPT_0x121
004d52 e1ed      	LDI  R30,LOW(29)
004d53 940e cdfe 	CALL __MULB1W2U
004d55 940e b8e2 	CALL SUBOPT_0x10A
004d57 940e b300 	CALL SUBOPT_0x21
                 ; 0007 0217     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
004d59 e5e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
004d5a e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
004d5b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
004d5c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
004d5d 940e b9d3 	CALL SUBOPT_0x136
004d5f 940e b8e8 	CALL SUBOPT_0x10B
004d61 940e b388 	CALL SUBOPT_0x34
004d63 85aa      	LDD  R26,Y+10
004d64 85bb      	LDD  R27,Y+10+1
004d65 e1ed      	LDI  R30,LOW(29)
004d66 940e cdfe 	CALL __MULB1W2U
004d68 940e b8e8 	CALL SUBOPT_0x10B
004d6a 940e b9df 	CALL SUBOPT_0x138
                 ; 0007 0218     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
004d6c e7e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
004d6d e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
004d6e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
004d6f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
004d70 940e b9d3 	CALL SUBOPT_0x136
004d72 940e b8ee 	CALL SUBOPT_0x10C
004d74 940e b96c 	CALL SUBOPT_0x121
004d76 e1ed      	LDI  R30,LOW(29)
004d77 940e cdfe 	CALL __MULB1W2U
004d79 940e b8ee 	CALL SUBOPT_0x10C
004d7b 940e b300 	CALL SUBOPT_0x21
                 ; 0007 0219     printDebug("\r\n");
004d7d 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 021A 
                 ; 0007 021B     config_sens_flag[ch]                = 0x01;
004d7f 81aa      	LDD  R26,Y+2
004d80 81bb      	LDD  R27,Y+2+1
004d81 5bac      	SUBI R26,LOW(-_config_sens_flag)
004d82 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004d83 e0e1      	LDI  R30,LOW(1)
004d84 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 021C     is_sensor_config_update[ch]          = 1;
004d86 81ea      	LDD  R30,Y+2
004d87 81fb      	LDD  R31,Y+2+1
004d88 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
004d89 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
004d8a e0a1      	LDI  R26,LOW(1)
004d8b 83a0      	STD  Z+0,R26
                 ; 0007 021D 
                 ; 0007 021E     return 0;
004d8c e0e0      	LDI  R30,LOW(0)
004d8d e0f0      	LDI  R31,HIGH(0)
004d8e c374      	RJMP _0x20E0080
                 ; 0007 021F }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0222 {
                 _setAuxDinConfig:
                 ; 0007 0223     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
004d8f 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004d91 f022      	BRMI _0xE0081
004d92 81aa      	LDD  R26,Y+2
004d93 81bb      	LDD  R27,Y+2+1
004d94 9751      	SBIW R26,17
004d95 f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0224         return -1;
004d96 efef      	LDI  R30,LOW(65535)
004d97 efff      	LDI  R31,HIGH(65535)
004d98 c36a      	RJMP _0x20E0080
                 ; 0007 0225     }
                 ; 0007 0226 
                 ; 0007 0227     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
004d99 940e b8f9 	CALL SUBOPT_0x10E
004d9b 5ce6      	SUBI R30,LOW(-_config_din)
004d9c 4ffe      	SBCI R31,HIGH(-_config_din)
004d9d 010f      	MOVW R0,R30
004d9e 81a8      	LD   R26,Y
004d9f 81b9      	LDD  R27,Y+1
004da0 940e b9a5 	CALL SUBOPT_0x12C
                 ; 0007 0228     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
004da2 940e b8f9 	CALL SUBOPT_0x10E
                +
004da4 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004da5 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004da6 940e b9e2 	CALL SUBOPT_0x139
004da8 940e b9e7 	CALL SUBOPT_0x13A
                 ; 0007 0229 
                 ; 0007 022A     printDebug("\r\n channel         >> [%d]",      ch);
004daa 940e b9ed 	CALL SUBOPT_0x13B
004dac 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 022B     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
004dae 940e b9f2 	CALL SUBOPT_0x13C
004db0 e0e3      	LDI  R30,LOW(3)
004db1 940e cdfe 	CALL __MULB1W2U
004db3 5ce6      	SUBI R30,LOW(-_config_din)
004db4 4ffe      	SBCI R31,HIGH(-_config_din)
004db5 01df      	MOVW R26,R30
004db6 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 022C     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
004db8 ede0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
004db9 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
004dba e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
004dbb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
004dbc 940e b9fb 	CALL SUBOPT_0x13D
004dbe e0e3      	LDI  R30,LOW(3)
004dbf 940e cdfe 	CALL __MULB1W2U
                +
004dc1 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004dc2 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004dc3 940e b9db 	CALL SUBOPT_0x137
004dc5 940e b29d 	CALL SUBOPT_0x12
                 ; 0007 022D 
                 ; 0007 022E     config_din_flag[ch]                 =   0x01;
004dc7 81aa      	LDD  R26,Y+2
004dc8 81bb      	LDD  R27,Y+2+1
004dc9 5ba7      	SUBI R26,LOW(-_config_din_flag)
004dca 4fba      	SBCI R27,HIGH(-_config_din_flag)
004dcb e0e1      	LDI  R30,LOW(1)
004dcc 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 022F     is_din_config_update[ch]            =   1;
004dce 81ea      	LDD  R30,Y+2
004dcf 81fb      	LDD  R31,Y+2+1
004dd0 50e3      	SUBI R30,LOW(-_is_din_config_update)
004dd1 4eff      	SBCI R31,HIGH(-_is_din_config_update)
004dd2 e0a1      	LDI  R26,LOW(1)
004dd3 83a0      	STD  Z+0,R26
                 ; 0007 0230     return 0;
004dd4 e0e0      	LDI  R30,LOW(0)
004dd5 e0f0      	LDI  R31,HIGH(0)
004dd6 c32c      	RJMP _0x20E0080
                 ; 0007 0231 }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0234 {
                 _setAuxDoutConfig:
                 ; 0007 0235     int i;
                 ; 0007 0236 
                 ; 0007 0237     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
004dd7 940e b595 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004dd9 81ad      	LDD  R26,Y+5
004dda 23aa      	TST  R26
004ddb f022      	BRMI _0xE0084
004ddc 81ac      	LDD  R26,Y+4
004ddd 81bd      	LDD  R27,Y+4+1
004dde 9716      	SBIW R26,6
004ddf f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0238         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
004de0 eee9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
004de1 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
004de2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
004de3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
004de4 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0239         return -1;
004de6 efef      	LDI  R30,LOW(65535)
004de7 efff      	LDI  R31,HIGH(65535)
004de8 c143      	RJMP _0x20E0083
                 ; 0007 023A     }
                 ; 0007 023B 
                 ; 0007 023C     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
004de9 81ea      	LDD  R30,Y+2
004dea 81fb      	LDD  R31,Y+2+1
004deb 81a2      	LDD  R26,Z+2
004dec 32a4      	CPI  R26,LOW(0x24)
004ded f060      	BRLO _0xE0086
                 ; 0007 023D         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004dee e1e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
004def e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
004df0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
004df1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
004df2 940e b8a7 	CALL SUBOPT_0xFF
004df4 81e2      	LDD  R30,Z+2
004df5 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 023E         return -1;
004df7 efef      	LDI  R30,LOW(65535)
004df8 efff      	LDI  R31,HIGH(65535)
004df9 c132      	RJMP _0x20E0083
                 ; 0007 023F     }
                 ; 0007 0240 
                 ; 0007 0241     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
004dfa 940e b913 	CALL SUBOPT_0x112
004dfc 59e6      	SUBI R30,LOW(-_config_dout)
004dfd 4ffe      	SBCI R31,HIGH(-_config_dout)
004dfe 01df      	MOVW R26,R30
004dff e0e1      	LDI  R30,LOW(1)
004e00 940e ba00 	CALL SUBOPT_0x13E
                 ; 0007 0242     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
004e02 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004e03 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004e04 01df      	MOVW R26,R30
004e05 e0e0      	LDI  R30,LOW(0)
004e06 940e ba00 	CALL SUBOPT_0x13E
                 ; 0007 0243     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
004e08 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004e09 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004e0a 01df      	MOVW R26,R30
004e0b 81ea      	LDD  R30,Y+2
004e0c 81fb      	LDD  R31,Y+2+1
004e0d 81e2      	LDD  R30,Z+2
004e0e 940e ba03 	CALL SUBOPT_0x13F
                 ; 0007 0244 
                 ; 0007 0245     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0246     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
004e10 e6e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
004e11 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
004e12 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
004e13 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
004e14 940e b919 	CALL SUBOPT_0x113
004e16 940e b921 	CALL SUBOPT_0x114
                 ; 0007 0247     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
004e18 e8e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
004e19 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
004e1a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
004e1b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
004e1c 940e b919 	CALL SUBOPT_0x113
004e1e 940e b927 	CALL SUBOPT_0x115
                 ; 0007 0248     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
004e20 940e ba0a 	CALL SUBOPT_0x140
004e22 940e b919 	CALL SUBOPT_0x113
004e24 940e b92d 	CALL SUBOPT_0x116
004e26 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0249     printDebug("\r\n eventSource       >> ");
004e28 940e ba0f 	CALL SUBOPT_0x141
                 ; 0007 024A 
                 ; 0007 024B     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004e2a e000     +LDI R16 , LOW ( 0 )
004e2b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
004e2c 940e b913 	CALL SUBOPT_0x112
004e2e 940e b92d 	CALL SUBOPT_0x116
004e30 940e b933 	CALL SUBOPT_0x117
004e32 f4d4      	BRGE _0xE0089
                 ; 0007 024C 
                 ; 0007 024D         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
004e33 940e b913 	CALL SUBOPT_0x112
004e35 940e b938 	CALL SUBOPT_0x118
004e37 940e b887 	CALL SUBOPT_0xFA
004e39 81e0      	LD   R30,Z
004e3a 940e ba00 	CALL SUBOPT_0x13E
                 ; 0007 024E 
                 ; 0007 024F         if( config_dout[ch].eventSource[i] != 0x00 ){
004e3c 940e b938 	CALL SUBOPT_0x118
004e3e 940e ceef 	CALL __EEPROMRDB
004e40 30e0      	CPI  R30,0
004e41 f041      	BREQ _0xE008A
                 ; 0007 0250             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
004e42 940e b976 	CALL SUBOPT_0x123
004e44 940e b919 	CALL SUBOPT_0x113
004e46 940e b938 	CALL SUBOPT_0x118
004e48 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 0251         }
                 ; 0007 0252     }
                 _0xE008A:
                +
004e4a 5f0f     +SUBI R16 , LOW ( - 1 )
004e4b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e4c cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0253     printDebug("\r\n");
004e4d 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 0254 
                 ; 0007 0255     config_dout_flag[ch]                =   0x01;
004e4f 81ac      	LDD  R26,Y+4
004e50 81bd      	LDD  R27,Y+4+1
004e51 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004e52 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004e53 e0e1      	LDI  R30,LOW(1)
004e54 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 0256     is_dout_config_update[ch]           =   1;
004e56 81ec      	LDD  R30,Y+4
004e57 81fd      	LDD  R31,Y+4+1
004e58 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
004e59 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
004e5a e0a1      	LDI  R26,LOW(1)
004e5b 83a0      	STD  Z+0,R26
                 ; 0007 0257 
                 ; 0007 0258     return 0;
004e5c c0cd      	RJMP _0x20E0084
                 ; 0007 0259 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025C {
                 _setAuxAinConfig:
                 ; 0007 025D     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
004e5d 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004e5f f022      	BRMI _0xE008C
004e60 81aa      	LDD  R26,Y+2
004e61 81bb      	LDD  R27,Y+2+1
004e62 9751      	SBIW R26,17
004e63 f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025E         return -1;
004e64 efef      	LDI  R30,LOW(65535)
004e65 efff      	LDI  R31,HIGH(65535)
004e66 c29c      	RJMP _0x20E0080
                 ; 0007 025F     }
                 ; 0007 0260 
                 ; 0007 0261     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
004e67 940e b93e 	CALL SUBOPT_0x119
004e69 5de8      	SUBI R30,LOW(-_config_ain)
004e6a 4ffd      	SBCI R31,HIGH(-_config_ain)
004e6b 010f      	MOVW R0,R30
004e6c 81a8      	LD   R26,Y
004e6d 81b9      	LDD  R27,Y+1
004e6e 940e b9a5 	CALL SUBOPT_0x12C
                 ; 0007 0262     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
004e70 940e b93e 	CALL SUBOPT_0x119
                +
004e72 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004e73 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004e74 940e b9e2 	CALL SUBOPT_0x139
004e76 940e b9cd 	CALL SUBOPT_0x135
                 ; 0007 0263 
                 ; 0007 0264     printDebug("\r\n channel         >> [%d]",      ch);
004e78 940e b9ed 	CALL SUBOPT_0x13B
004e7a 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 0265     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
004e7c 940e b9f2 	CALL SUBOPT_0x13C
004e7e e0e5      	LDI  R30,LOW(5)
004e7f 940e cdfe 	CALL __MULB1W2U
004e81 5de8      	SUBI R30,LOW(-_config_ain)
004e82 4ffd      	SBCI R31,HIGH(-_config_ain)
004e83 01df      	MOVW R26,R30
004e84 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 0266     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
004e86 edeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
004e87 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
004e88 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
004e89 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
004e8a 940e b9fb 	CALL SUBOPT_0x13D
004e8c e0e5      	LDI  R30,LOW(5)
004e8d 940e cdfe 	CALL __MULB1W2U
                +
004e8f 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004e90 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004e91 940e ba15 	CALL SUBOPT_0x142
                 ; 0007 0267 
                 ; 0007 0268     config_ain_flag[ch]                 = 0x01;
004e93 81aa      	LDD  R26,Y+2
004e94 81bb      	LDD  R27,Y+2+1
004e95 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004e96 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004e97 e0e1      	LDI  R30,LOW(1)
004e98 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 0269 
                 ; 0007 026A     return 0;
004e9a e0e0      	LDI  R30,LOW(0)
004e9b e0f0      	LDI  R31,HIGH(0)
004e9c c266      	RJMP _0x20E0080
                 ; 0007 026B }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026E {
                 _setAuxAoutConfig:
                 ; 0007 026F     int i;
                 ; 0007 0270 
                 ; 0007 0271     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
004e9d 940e b595 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004e9f 81ad      	LDD  R26,Y+5
004ea0 23aa      	TST  R26
004ea1 f022      	BRMI _0xE008F
004ea2 81ac      	LDD  R26,Y+4
004ea3 81bd      	LDD  R27,Y+4+1
004ea4 9751      	SBIW R26,17
004ea5 f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0272         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
004ea6 efe4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
004ea7 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
004ea8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
004ea9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
004eaa 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 0273         return -1;
004eac efef      	LDI  R30,LOW(65535)
004ead efff      	LDI  R31,HIGH(65535)
004eae c07d      	RJMP _0x20E0083
                 ; 0007 0274     }
                 ; 0007 0275 
                 ; 0007 0276     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
004eaf 81ea      	LDD  R30,Y+2
004eb0 81fb      	LDD  R31,Y+2+1
004eb1 81a5      	LDD  R26,Z+5
004eb2 32a4      	CPI  R26,LOW(0x24)
004eb3 f060      	BRLO _0xE0091
                 ; 0007 0277         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004eb4 e1eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
004eb5 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
004eb6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
004eb7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
004eb8 940e b8a7 	CALL SUBOPT_0xFF
004eba 81e5      	LDD  R30,Z+5
004ebb 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0278         return -1;
004ebd efef      	LDI  R30,LOW(65535)
004ebe efff      	LDI  R31,HIGH(65535)
004ebf c06c      	RJMP _0x20E0083
                 ; 0007 0279     }
                 ; 0007 027A 
                 ; 0007 027B     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
004ec0 940e b94a 	CALL SUBOPT_0x11B
004ec2 58e8      	SUBI R30,LOW(-_config_aout)
004ec3 4ffd      	SBCI R31,HIGH(-_config_aout)
004ec4 010f      	MOVW R0,R30
004ec5 81aa      	LDD  R26,Y+2
004ec6 81bb      	LDD  R27,Y+2+1
004ec7 940e b9a5 	CALL SUBOPT_0x12C
                 ; 0007 027C     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
004ec9 940e b94a 	CALL SUBOPT_0x11B
                +
004ecb 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004ecc 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004ecd 010f      	MOVW R0,R30
004ece 81aa      	LDD  R26,Y+2
004ecf 81bb      	LDD  R27,Y+2+1
004ed0 9611      	ADIW R26,1
004ed1 940e b9cd 	CALL SUBOPT_0x135
                 ; 0007 027D     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
004ed3 940e b94a 	CALL SUBOPT_0x11B
                +
004ed5 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
004ed6 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
004ed7 01df      	MOVW R26,R30
004ed8 81ea      	LDD  R30,Y+2
004ed9 81fb      	LDD  R31,Y+2+1
004eda 81e5      	LDD  R30,Z+5
004edb 940e ba03 	CALL SUBOPT_0x13F
                 ; 0007 027E 
                 ; 0007 027F     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0280     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
004edd e6e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
004ede e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
004edf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
004ee0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
004ee1 940e ba1b 	CALL SUBOPT_0x143
004ee3 58e8      	SUBI R30,LOW(-_config_aout)
004ee4 4ffd      	SBCI R31,HIGH(-_config_aout)
004ee5 01df      	MOVW R26,R30
004ee6 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 0281     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
004ee8 e5e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
004ee9 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
004eea e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
004eeb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
004eec 940e ba1b 	CALL SUBOPT_0x143
                +
004eee 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004eef 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004ef0 940e ba15 	CALL SUBOPT_0x142
                 ; 0007 0282     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
004ef2 940e ba0a 	CALL SUBOPT_0x140
004ef4 940e ba1b 	CALL SUBOPT_0x143
004ef6 940e b950 	CALL SUBOPT_0x11C
004ef8 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 0283     printDebug("\r\n eventSource       >> ");
004efa 940e ba0f 	CALL SUBOPT_0x141
                 ; 0007 0284 
                 ; 0007 0285     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004efc e000     +LDI R16 , LOW ( 0 )
004efd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
004efe 940e b94a 	CALL SUBOPT_0x11B
004f00 940e b950 	CALL SUBOPT_0x11C
004f02 940e b933 	CALL SUBOPT_0x117
004f04 f4e4      	BRGE _0xE0094
                 ; 0007 0286 
                 ; 0007 0287         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
004f05 940e b94a 	CALL SUBOPT_0x11B
004f07 940e b956 	CALL SUBOPT_0x11D
004f09 940e b944 	CALL SUBOPT_0x11A
004f0b 81e0      	LD   R30,Z
004f0c 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 0288 
                 ; 0007 0289         if( config_aout[ch].eventSource[i] != 0x00 ){
004f0e 940e b94a 	CALL SUBOPT_0x11B
004f10 940e b956 	CALL SUBOPT_0x11D
004f12 940e ceef 	CALL __EEPROMRDB
004f14 30e0      	CPI  R30,0
004f15 f041      	BREQ _0xE0095
                 ; 0007 028A             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
004f16 940e b976 	CALL SUBOPT_0x123
004f18 940e ba1b 	CALL SUBOPT_0x143
004f1a 940e b956 	CALL SUBOPT_0x11D
004f1c 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 028B         }
                 ; 0007 028C     }
                 _0xE0095:
                +
004f1e 5f0f     +SUBI R16 , LOW ( - 1 )
004f1f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f20 cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028D     printDebug("\r\n");
004f21 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 028E 
                 ; 0007 028F     config_aout_flag[ch]                =   0x01;
004f23 81ac      	LDD  R26,Y+4
004f24 81bd      	LDD  R27,Y+4+1
004f25 59a2      	SUBI R26,LOW(-_config_aout_flag)
004f26 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004f27 e0e1      	LDI  R30,LOW(1)
004f28 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 0290 
                 ; 0007 0291     return 0;
                 _0x20E0084:
004f2a e0e0      	LDI  R30,LOW(0)
004f2b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0083:
004f2c 8119      	LDD  R17,Y+1
004f2d 8108      	LDD  R16,Y+0
004f2e 9626      	ADIW R28,6
004f2f 9508      	RET
                 ; 0007 0292 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0295 {
                 _setBuzzerConfig:
                 ; 0007 0296     int i;
                 ; 0007 0297 
                 ; 0007 0298     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
004f30 940e b595 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004f32 81ea      	LDD  R30,Y+2
004f33 81fb      	LDD  R31,Y+2+1
004f34 81a1      	LDD  R26,Z+1
004f35 32a4      	CPI  R26,LOW(0x24)
004f36 f070      	BRLO _0xE0096
                 ; 0007 0299         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004f37 e7e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
004f38 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
004f39 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
004f3a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
004f3b 940e b8a7 	CALL SUBOPT_0xFF
004f3d 81e1      	LDD  R30,Z+1
004f3e 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 029A         return -1;
004f40 efef      	LDI  R30,LOW(65535)
004f41 efff      	LDI  R31,HIGH(65535)
004f42 8119      	LDD  R17,Y+1
004f43 8108      	LDD  R16,Y+0
004f44 c1be      	RJMP _0x20E0080
                 ; 0007 029B     }
                 ; 0007 029C 
                 ; 0007 029D     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
004f45 81aa      	LDD  R26,Y+2
004f46 81bb      	LDD  R27,Y+2+1
004f47 91ec      	LD   R30,X
004f48 e0a8      	LDI  R26,LOW(_config_buzz)
004f49 e0b5      	LDI  R27,HIGH(_config_buzz)
004f4a 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 029E     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
004f4c e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
004f4d e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
004f4e 81ea      	LDD  R30,Y+2
004f4f 81fb      	LDD  R31,Y+2+1
004f50 81e1      	LDD  R30,Z+1
004f51 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 029F 
                 ; 0007 02A0     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
004f53 eaed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
004f54 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
004f55 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
004f56 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
004f57 940e cec8 	CALL __PUTPARD1
004f59 e0a8      	LDI  R26,LOW(_config_buzz)
004f5a e0b5      	LDI  R27,HIGH(_config_buzz)
004f5b 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 02A1     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
004f5d 940e ba0a 	CALL SUBOPT_0x140
004f5f 940e cec8 	CALL __PUTPARD1
004f61 940e b967 	CALL SUBOPT_0x120
004f63 940e b342 	CALL SUBOPT_0x2A
                 ; 0007 02A2     printDebug("\r\n eventSource       >>");
                +
004f65 ecec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
004f66 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
004f67 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
004f68 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
004f69 940e b22a 	CALL SUBOPT_0x3
                 ; 0007 02A3 
                 ; 0007 02A4     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004f6b e000     +LDI R16 , LOW ( 0 )
004f6c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
004f6d 940e b967 	CALL SUBOPT_0x120
004f6f 940e b933 	CALL SUBOPT_0x117
004f71 f4cc      	BRGE _0xE0099
                 ; 0007 02A5 
                 ; 0007 02A6         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
004f72 940e ba23 	CALL SUBOPT_0x144
004f74 81ea      	LDD  R30,Y+2
004f75 81fb      	LDD  R31,Y+2+1
004f76 940e b97b 	CALL SUBOPT_0x124
004f78 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 02A7 
                 ; 0007 02A8         if( config_buzz.eventSource[i] != 0x00 ){
004f7a 940e ba23 	CALL SUBOPT_0x144
004f7c 940e ceef 	CALL __EEPROMRDB
004f7e 30e0      	CPI  R30,0
004f7f f041      	BREQ _0xE009A
                 ; 0007 02A9             printDebug("[0x%02X]",config_buzz.eventSource[i]);
004f80 940e b976 	CALL SUBOPT_0x123
004f82 940e cec8 	CALL __PUTPARD1
004f84 940e ba23 	CALL SUBOPT_0x144
004f86 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 02AA         }
                 ; 0007 02AB 
                 ; 0007 02AC     }
                 _0xE009A:
                +
004f88 5f0f     +SUBI R16 , LOW ( - 1 )
004f89 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f8a cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AD     printDebug("\r\n");
004f8b 940e b8b6 	CALL SUBOPT_0x102
                 ; 0007 02AE 
                 ; 0007 02AF     config_buzz_flag                    =   0x01;
004f8d e7ae      	LDI  R26,LOW(_config_buzz_flag)
004f8e e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004f8f 940e b9aa 	CALL SUBOPT_0x12D
                 ; 0007 02B0 
                 ; 0007 02B1     is_buzzer_config_update             =   1;
004f91 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B2 
                 ; 0007 02B3     return 0;
004f93 940e b7a8 	CALL SUBOPT_0xD4
004f95 c16d      	RJMP _0x20E0080
                 ; 0007 02B4 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B7 {
                 _setEnvAlarmConfig:
                 ; 0007 02B8     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
004f96 93ba      	ST   -Y,R27
004f97 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
004f98 81a8      	LD   R26,Y
004f99 81b9      	LDD  R27,Y+1
004f9a 940e ce98 	CALL __GETD1P
004f9c e2ad      	LDI  R26,LOW(_config_alm)
004f9d e0b5      	LDI  R27,HIGH(_config_alm)
004f9e 940e cefb 	CALL __EEPROMWRD
                 ; 0007 02B9     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
004fa0 e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
004fa1 e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
004fa2 010f      	MOVW R0,R30
004fa3 81a8      	LD   R26,Y
004fa4 81b9      	LDD  R27,Y+1
004fa5 9614      	ADIW R26,4
004fa6 940e b9e7 	CALL SUBOPT_0x13A
                 ; 0007 02BA     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
004fa8 e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
004fa9 e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
004faa 010f      	MOVW R0,R30
004fab 81a8      	LD   R26,Y
004fac 81b9      	LDD  R27,Y+1
004fad 9616      	ADIW R26,6
004fae 940e b9cd 	CALL SUBOPT_0x135
                 ; 0007 02BB     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
004fb0 e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
004fb1 e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
004fb2 010f      	MOVW R0,R30
004fb3 81a8      	LD   R26,Y
004fb4 81b9      	LDD  R27,Y+1
004fb5 961a      	ADIW R26,10
004fb6 940e b9cd 	CALL SUBOPT_0x135
                 ; 0007 02BC     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
004fb8 e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
004fb9 e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
004fba 010f      	MOVW R0,R30
004fbb 81a8      	LD   R26,Y
004fbc 81b9      	LDD  R27,Y+1
004fbd 961e      	ADIW R26,14
004fbe 940e b9e7 	CALL SUBOPT_0x13A
                 ; 0007 02BD     config_alm.memoryMin                =   newConfig->memoryMin;
                +
004fc0 e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
004fc1 e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
004fc2 010f      	MOVW R0,R30
004fc3 81a8      	LD   R26,Y
004fc4 81b9      	LDD  R27,Y+1
004fc5 9650      	ADIW R26,16
004fc6 940e b9e7 	CALL SUBOPT_0x13A
                 ; 0007 02BE 
                 ; 0007 02BF     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
004fc8 eee4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
004fc9 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
004fca e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
004fcb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
004fcc 940e cec8 	CALL __PUTPARD1
004fce e2ad      	LDI  R26,LOW(_config_alm)
004fcf e0b5      	LDI  R27,HIGH(_config_alm)
004fd0 940e ba29 	CALL SUBOPT_0x145
                 ; 0007 02C0     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
004fd2 e0e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
004fd3 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
004fd4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
004fd5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
004fd6 940e cec8 	CALL __PUTPARD1
                +
004fd8 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004fd9 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004fda 940e ceeb 	CALL __EEPROMRDW
004fdc 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 02C1     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
004fde e2e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
004fdf e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
004fe0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
004fe1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
004fe2 940e cec8 	CALL __PUTPARD1
                +
004fe4 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004fe5 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004fe6 940e ba29 	CALL SUBOPT_0x145
                 ; 0007 02C2     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
004fe8 e4e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
004fe9 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
004fea e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
004feb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
004fec 940e cec8 	CALL __PUTPARD1
                +
004fee e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004fef e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004ff0 940e ba29 	CALL SUBOPT_0x145
                 ; 0007 02C3     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
004ff2 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
004ff3 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
004ff4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
004ff5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
004ff6 940e cec8 	CALL __PUTPARD1
                +
004ff8 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004ff9 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004ffa 940e ceeb 	CALL __EEPROMRDW
004ffc 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 02C4     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
004ffe e7eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
004fff e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
005000 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
005001 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
005002 940e cec8 	CALL __PUTPARD1
                +
005004 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
005005 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
005006 940e ceeb 	CALL __EEPROMRDW
005008 940e b388 	CALL SUBOPT_0x34
00500a 940e b29d 	CALL SUBOPT_0x12
                 ; 0007 02C5 
                 ; 0007 02C6     config_alm_flag                 = 0x01;
00500c e7af      	LDI  R26,LOW(_config_alm_flag)
00500d e0b5      	LDI  R27,HIGH(_config_alm_flag)
00500e 940e b9aa 	CALL SUBOPT_0x12D
                 ; 0007 02C7     is_env_config_update            = 1;
005010 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C8     return 0;
005012 c02d      	RJMP _0x20E0082
                 ; 0007 02C9 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CC {
                 _setStatusReportConfig:
                 ; 0007 02CD     config_stat.accm                    =   newConfig->accm;
005013 93ba      	ST   -Y,R27
005014 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
005015 81a8      	LD   R26,Y
005016 81b9      	LDD  R27,Y+1
005017 91ec      	LD   R30,X
005018 e3af      	LDI  R26,LOW(_config_stat)
005019 e0b5      	LDI  R27,HIGH(_config_stat)
00501a 940e cf0b 	CALL __EEPROMWRB
                 ; 0007 02CE     config_stat.intv                    =   newConfig->intv;
                +
00501c e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
00501d e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
00501e 940e b9e2 	CALL SUBOPT_0x139
005020 940e b9e7 	CALL SUBOPT_0x13A
                 ; 0007 02CF 
                 ; 0007 02D0     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
005022 e9e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
005023 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
005024 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
005025 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
005026 940e cec8 	CALL __PUTPARD1
005028 e3af      	LDI  R26,LOW(_config_stat)
005029 e0b5      	LDI  R27,HIGH(_config_stat)
00502a 940e b9ae 	CALL SUBOPT_0x12E
                 ; 0007 02D1     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
00502c eaee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
00502d e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
00502e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
00502f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
005030 940e cec8 	CALL __PUTPARD1
                +
005032 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
005033 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
005034 940e ceeb 	CALL __EEPROMRDW
005036 940e b388 	CALL SUBOPT_0x34
005038 940e b29d 	CALL SUBOPT_0x12
                 ; 0007 02D2 
                 ; 0007 02D3     config_stat_flag                    = 0x01;
00503a e8a0      	LDI  R26,LOW(_config_stat_flag)
00503b e0b5      	LDI  R27,HIGH(_config_stat_flag)
00503c 940e b9aa 	CALL SUBOPT_0x12D
                 ; 0007 02D4     is_status_config_update             = 1;
00503e 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D5     return 0;
                 _0x20E0082:
005040 e0e0      	LDI  R30,LOW(0)
005041 e0f0      	LDI  R31,HIGH(0)
005042 9622      	ADIW R28,2
005043 9508      	RET
                 ; 0007 02D6 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DE {
                 ; 0007 02DF     int i;
                 ; 0007 02E0 
                 ; 0007 02E1     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E2     config_oper_flag            = 0x00;
                 ; 0007 02E3 
                 ; 0007 02E4     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E5         config_sens_flag[i]     = 0x00;
                 ; 0007 02E6     }
                 ; 0007 02E7 
                 ; 0007 02E8     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E9         config_din_flag[i]      = 0x00;
                 ; 0007 02EA     }
                 ; 0007 02EB 
                 ; 0007 02EC     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02ED         config_dout_flag[i]     = 0x00;
                 ; 0007 02EE     }
                 ; 0007 02EF 
                 ; 0007 02F0     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02F1         config_ain_flag[i]      = 0x00;
                 ; 0007 02F2     }
                 ; 0007 02F3 
                 ; 0007 02F4     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F5         config_aout_flag[i]     = 0x00;
                 ; 0007 02F6     }
                 ; 0007 02F7 
                 ; 0007 02F8     config_buzz_flag            = 0x00;
                 ; 0007 02F9     config_alm_flag             = 0x00;
                 ; 0007 02FA     config_stat_flag            = 0x00;
                 ; 0007 02FB 
                 ; 0007 02FC     return 0;
                 ; 0007 02FD }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 0300 {
                 _isDeviceConfig:
                 ; 0007 0301     int i   = 0;
                 ; 0007 0302 
                 ; 0007 0303     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
005044 940e b65e 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
005046 e4a2      	LDI  R26,LOW(_config_prop_flag)
005047 e0b5      	LDI  R27,HIGH(_config_prop_flag)
005048 940e ceef 	CALL __EEPROMRDB
00504a 30e0      	CPI  R30,0
00504b f4c1      	BRNE _0xE00AB
00504c e4a3      	LDI  R26,LOW(_config_oper_flag)
00504d e0b5      	LDI  R27,HIGH(_config_oper_flag)
00504e 940e ceef 	CALL __EEPROMRDB
005050 30e0      	CPI  R30,0
005051 f491      	BRNE _0xE00AB
005052 e7ae      	LDI  R26,LOW(_config_buzz_flag)
005053 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
005054 940e ceef 	CALL __EEPROMRDB
005056 30e0      	CPI  R30,0
005057 f461      	BRNE _0xE00AB
005058 e7af      	LDI  R26,LOW(_config_alm_flag)
005059 e0b5      	LDI  R27,HIGH(_config_alm_flag)
00505a 940e ceef 	CALL __EEPROMRDB
00505c 30e0      	CPI  R30,0
00505d f431      	BRNE _0xE00AB
00505e e8a0      	LDI  R26,LOW(_config_stat_flag)
00505f e0b5      	LDI  R27,HIGH(_config_stat_flag)
005060 940e ceef 	CALL __EEPROMRDB
005062 30e0      	CPI  R30,0
005063 f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0304         return 1;
005064 e0e1      	LDI  R30,LOW(1)
005065 e0f0      	LDI  R31,HIGH(1)
005066 c038      	RJMP _0x20E0081
                 ; 0007 0305     }
                 ; 0007 0306 
                 ; 0007 0307     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
005067 e000     +LDI R16 , LOW ( 0 )
005068 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
005069 3005     +CPI R16 , LOW ( 5 )
00506a e0e0     +LDI R30 , HIGH ( 5 )
00506b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00506c f464      	BRGE _0xE00AF
                 ; 0007 0308         if(config_sens_flag[i]){
00506d e4a4      	LDI  R26,LOW(_config_sens_flag)
00506e e0b5      	LDI  R27,HIGH(_config_sens_flag)
00506f 940e b857 	CALL SUBOPT_0xF3
005071 30e0      	CPI  R30,0
005072 f019      	BREQ _0xE00B0
                 ; 0007 0309             return 1;
005073 e0e1      	LDI  R30,LOW(1)
005074 e0f0      	LDI  R31,HIGH(1)
005075 c029      	RJMP _0x20E0081
                 ; 0007 030A         }
                 ; 0007 030B     }
                 _0xE00B0:
                +
005076 5f0f     +SUBI R16 , LOW ( - 1 )
005077 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005078 cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030C 
                 ; 0007 030D     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030E     for(i=0;i<2;i++){
                +
005079 e000     +LDI R16 , LOW ( 0 )
00507a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
00507b 3002     +CPI R16 , LOW ( 2 )
00507c e0e0     +LDI R30 , HIGH ( 2 )
00507d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00507e f464      	BRGE _0xE00B3
                 ; 0007 030F         if(config_din_flag[i]){
00507f e4a9      	LDI  R26,LOW(_config_din_flag)
005080 e0b5      	LDI  R27,HIGH(_config_din_flag)
005081 940e b857 	CALL SUBOPT_0xF3
005083 30e0      	CPI  R30,0
005084 f019      	BREQ _0xE00B4
                 ; 0007 0310             return 1;
005085 e0e1      	LDI  R30,LOW(1)
005086 e0f0      	LDI  R31,HIGH(1)
005087 c017      	RJMP _0x20E0081
                 ; 0007 0311         }
                 ; 0007 0312     }
                 _0xE00B4:
                +
005088 5f0f     +SUBI R16 , LOW ( - 1 )
005089 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00508a cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0313 
                 ; 0007 0314     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0315     for(i=0;i<2;i++){
                +
00508b e000     +LDI R16 , LOW ( 0 )
00508c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
00508d 3002     +CPI R16 , LOW ( 2 )
00508e e0e0     +LDI R30 , HIGH ( 2 )
00508f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005090 f464      	BRGE _0xE00B7
                 ; 0007 0316         if(config_dout_flag[i]){
005091 e5a9      	LDI  R26,LOW(_config_dout_flag)
005092 e0b5      	LDI  R27,HIGH(_config_dout_flag)
005093 940e b857 	CALL SUBOPT_0xF3
005095 30e0      	CPI  R30,0
005096 f019      	BREQ _0xE00B8
                 ; 0007 0317             return 1;
005097 e0e1      	LDI  R30,LOW(1)
005098 e0f0      	LDI  R31,HIGH(1)
005099 c005      	RJMP _0x20E0081
                 ; 0007 0318         }
                 ; 0007 0319     }
                 _0xE00B8:
                +
00509a 5f0f     +SUBI R16 , LOW ( - 1 )
00509b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00509c cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 031A     return 0;
00509d e0e0      	LDI  R30,LOW(0)
00509e e0f0      	LDI  R31,HIGH(0)
                 _0x20E0081:
00509f 9109      	LD   R16,Y+
0050a0 9119      	LD   R17,Y+
0050a1 9508      	RET
                 ; 0007 031B }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031E {
                 _getAllConfig:
                 ; 0007 031F     int i,err;
                 ; 0007 0320 
                 ; 0007 0321     // -- load configuration -- //
                 ; 0007 0322     getPropertiesConfig(&properties_config);
0050a2 940e cf3a 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
0050a4 940e b277 	CALL SUBOPT_0xD
                 ; 0007 0323     is_properties_config_update = 0;
                 ; 0007 0324 
                 ; 0007 0325     getOperatingConfig(&operating_config);
0050a6 940e b27f 	CALL SUBOPT_0xE
                 ; 0007 0326     is_operating_config_update = 0;
                 ; 0007 0327 
                 ; 0007 0328     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0050a8 e000     +LDI R16 , LOW ( 0 )
0050a9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
0050aa 3005     +CPI R16 , LOW ( 5 )
0050ab e0e0     +LDI R30 , HIGH ( 5 )
0050ac 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0050ad f504      	BRGE _0xE00BB
                 ; 0007 0329         err = getSensorConfig(i,&sensor_config[i]);
0050ae 931a      	ST   -Y,R17
0050af 930a      	ST   -Y,R16
                +
0050b0 e1ad     +LDI R26 , 29
0050b1 9fa0     +MUL R26 , R16
0050b2 01f0     +MOVW R30 , R0
0050b3 9fa1     +MUL R26 , R17
0050b4 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
0050b5 54e2      	SUBI R30,LOW(-_sensor_config)
0050b6 4efe      	SBCI R31,HIGH(-_sensor_config)
0050b7 01df      	MOVW R26,R30
0050b8 940e 4768 	CALL _getSensorConfig
0050ba 019f      	MOVW R18,R30
                 ; 0007 032A         if(err < 0){
0050bb 2333      	TST  R19
0050bc f452      	BRPL _0xE00BC
                 ; 0007 032B             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
0050bd ece5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
0050be e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
0050bf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
0050c0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
0050c1 940e cec8 	CALL __PUTPARD1
0050c3 01f8      	MOVW R30,R16
0050c4 940e b81b 	CALL SUBOPT_0xE6
                 ; 0007 032C             continue;
0050c6 c004      	RJMP _0xE00B9
                 ; 0007 032D         }
                 ; 0007 032E         is_sensor_config_update[i] = 0;
                 _0xE00BC:
0050c7 efa8      	LDI  R26,LOW(_is_sensor_config_update)
0050c8 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0050c9 940e ba2e 	CALL SUBOPT_0x146
                 ; 0007 032F     }
                 _0xE00B9:
                +
0050cb 5f0f     +SUBI R16 , LOW ( - 1 )
0050cc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0050cd cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 0330 
                 ; 0007 0331     getBuzzerConfig(&buzz_config);
0050ce 940e b2a7 	CALL SUBOPT_0x14
                 ; 0007 0332     is_buzzer_config_update = 0;
                 ; 0007 0333 
                 ; 0007 0334     for(i=0;i<USE_DIN;i++){
                +
0050d0 e000     +LDI R16 , LOW ( 0 )
0050d1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
0050d2 3002     +CPI R16 , LOW ( 2 )
0050d3 e0e0     +LDI R30 , HIGH ( 2 )
0050d4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0050d5 f49c      	BRGE _0xE00BF
                 ; 0007 0335         getAuxDinConfig(i,&din_config[i]);
0050d6 931a      	ST   -Y,R17
0050d7 930a      	ST   -Y,R16
                +
0050d8 e0a3     +LDI R26 , 3
0050d9 9fa0     +MUL R26 , R16
0050da 01f0     +MOVW R30 , R0
0050db 9fa1     +MUL R26 , R17
0050dc 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
0050dd 5be1      	SUBI R30,LOW(-_din_config)
0050de 4efd      	SBCI R31,HIGH(-_din_config)
0050df 01df      	MOVW R26,R30
0050e0 940e 4850 	CALL _getAuxDinConfig
                 ; 0007 0336         is_din_config_update[i] = 0;
0050e2 efad      	LDI  R26,LOW(_is_din_config_update)
0050e3 e1b0      	LDI  R27,HIGH(_is_din_config_update)
0050e4 940e ba2e 	CALL SUBOPT_0x146
                 ; 0007 0337     }
                +
0050e6 5f0f     +SUBI R16 , LOW ( - 1 )
0050e7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0050e8 cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0338 
                 ; 0007 0339     for(i=0;i<USE_DOUT;i++){
                +
0050e9 e000     +LDI R16 , LOW ( 0 )
0050ea e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
0050eb 3002     +CPI R16 , LOW ( 2 )
0050ec e0e0     +LDI R30 , HIGH ( 2 )
0050ed 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0050ee f474      	BRGE _0xE00C2
                 ; 0007 033A         getAuxDoutConfig(i,&dout_config[i]);
0050ef 931a      	ST   -Y,R17
0050f0 930a      	ST   -Y,R16
                +
0050f1 e2a6     +LDI R26 , 38
0050f2 9fa0     +MUL R26 , R16
0050f3 01f0     +MOVW R30 , R0
0050f4 9fa1     +MUL R26 , R17
0050f5 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
0050f6 940e b2b7 	CALL SUBOPT_0x16
                 ; 0007 033B         is_dout_config_update[i] = 0;
0050f8 940e ba2e 	CALL SUBOPT_0x146
                 ; 0007 033C     }
                +
0050fa 5f0f     +SUBI R16 , LOW ( - 1 )
0050fb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0050fc cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033D 
                 ; 0007 033E     getStatusReportConfig(&status_config);
0050fd 940e b2bf 	CALL SUBOPT_0x17
                 ; 0007 033F     is_status_config_update = 0;
                 ; 0007 0340 
                 ; 0007 0341     getEnvAlarmConfig(&env_config);
0050ff 940e b2c7 	CALL SUBOPT_0x18
                 ; 0007 0342     is_env_config_update = 0;
                 ; 0007 0343 
                 ; 0007 0344     return 0;
005101 940e ba33 	CALL SUBOPT_0x147
                 _0x20E0080:
005103 9624      	ADIW R28,4
005104 9508      	RET
                 ; 0007 0345 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
005105 93aa      	ST   -Y,R26
005106 940e ba38 	CALL SUBOPT_0x148
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005108 eeeb      	LDI  R30,LOW(235)
005109 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00510a e020     +LDI R18 , LOW ( 0 )
00510b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
00510c 3028     +CPI R18 , LOW ( 8 )
00510d e0e0     +LDI R30 , HIGH ( 8 )
00510e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00510f f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
005110 940e ba47 	CALL SUBOPT_0x149
005112 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 0020     }
                +
005114 5f2f     +SUBI R18 , LOW ( - 1 )
005115 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005116 cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
005117 940e ba47 	CALL SUBOPT_0x149
005119 85ae      	LDD  R26,Y+14
00511a 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
00511b eee8     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
00511c e1fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
00511d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
00511e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
00511f 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
005121 940e ba59 	CALL SUBOPT_0x14B
005123 89eb      	LDD  R30,Y+19
005124 93ea      	ST   -Y,R30
005125 940e b84c 	CALL SUBOPT_0xF0
005127 940e ba60 	CALL SUBOPT_0x14C
                 ; 0009 0027 
                 ; 0009 0028     return 0;
005129 c1a1      	RJMP _0x20E007D
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
00512a 93aa      	ST   -Y,R26
00512b 972f      	SBIW R28,15
00512c 940e ba63 	CALL SUBOPT_0x14D
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00512e e1eb      	LDI  R30,LOW(27)
00512f 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005130 e020     +LDI R18 , LOW ( 0 )
005131 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
005132 3028     +CPI R18 , LOW ( 8 )
005133 e0e0     +LDI R30 , HIGH ( 8 )
005134 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005135 f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
005136 940e ba47 	CALL SUBOPT_0x149
005138 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 0034     }
                +
00513a 5f2f     +SUBI R18 , LOW ( - 1 )
00513b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00513c cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
00513d 940e ba47 	CALL SUBOPT_0x149
00513f 89ac      	LDD  R26,Y+20
005140 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
005141 940e ba47 	CALL SUBOPT_0x149
005143 89ab      	LDD  R26,Y+19
005144 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
005145 e0e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
005146 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
005147 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
005148 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
005149 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
00514b 940e ba59 	CALL SUBOPT_0x14B
00514d 8de9      	LDD  R30,Y+25
00514e 93ea      	ST   -Y,R30
00514f 940e b84c 	CALL SUBOPT_0xF0
005151 940e ba60 	CALL SUBOPT_0x14C
                 ; 0009 003D 
                 ; 0009 003E     return 0;
005153 9666      	ADIW R28,22
005154 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
005155 93ba      	ST   -Y,R27
005156 93aa      	ST   -Y,R26
005157 9722      	SBIW R28,2
005158 940e b396 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
00515a 940e ba71 	CALL SUBOPT_0x14E
                 ; 0009 0049     if(frameLen > 250){
00515c f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
00515d e2ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
00515e e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
00515f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
005160 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
005161 940e b41c 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
005163 efef      	LDI  R30,LOW(65535)
005164 efff      	LDI  R31,HIGH(65535)
005165 c03a      	RJMP _0x20E007F
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
005166 940e ba79 	CALL SUBOPT_0x14F
                 ; 0009 004F     if(frameData == NULL){
005168 f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
005169 e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
00516a e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
00516b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
00516c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
00516d 940e b41c 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
00516f efef      	LDI  R30,LOW(65535)
005170 efff      	LDI  R31,HIGH(65535)
005171 c02e      	RJMP _0x20E007F
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
005172 940e ba80 	CALL SUBOPT_0x150
005174 0fae      	ADD  R26,R30
005175 1fbf      	ADC  R27,R31
005176 e2ea      	LDI  R30,LOW(42)
005177 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005178 e020     +LDI R18 , LOW ( 0 )
005179 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
00517a 3028     +CPI R18 , LOW ( 8 )
00517b e0e0     +LDI R30 , HIGH ( 8 )
00517c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00517d f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
00517e 940e ba80 	CALL SUBOPT_0x150
005180 940e ba86 	CALL SUBOPT_0x151
                 ; 0009 0058     }
                +
005182 5f2f     +SUBI R18 , LOW ( - 1 )
005183 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005184 cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005185 940e ba89 	CALL SUBOPT_0x152
005187 01fe      	MOVW R30,R28
005188 963f      	ADIW R30,15
005189 940e b436 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
00518b 5f0c     +SUBI R16 , LOW ( - 4 )
00518c 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
00518d 940e ba80 	CALL SUBOPT_0x150
00518f 0fea      	ADD  R30,R26
005190 1ffb      	ADC  R31,R27
005191 85ac      	LDD  R26,Y+12
005192 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
005193 940e ba89 	CALL SUBOPT_0x152
005195 940e ba8e 	CALL SUBOPT_0x153
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
005197 940e ba9b 	CALL SUBOPT_0x154
005199 931a      	ST   -Y,R17
00519a 930a      	ST   -Y,R16
00519b e0e0      	LDI  R30,LOW(0)
00519c 940e baa0 	CALL SUBOPT_0x155
                 ; 0009 0063     free( frameData );
00519e 940e baa5 	CALL SUBOPT_0x156
                 ; 0009 0064 }
                 _0x20E007F:
0051a0 940e cf3f 	CALL __LOADLOCR6
0051a2 9661      	ADIW R28,17
0051a3 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
0051a4 93aa      	ST   -Y,R26
0051a5 9761      	SBIW R28,17
0051a6 940e b396 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
0051a8 8dad      	LDD  R26,Y+29
0051a9 30a0      	CPI  R26,LOW(0x0)
0051aa f021      	BREQ _0x12000F
0051ab 30a1      	CPI  R26,LOW(0x1)
0051ac f011      	BREQ _0x12000F
0051ad 30a2      	CPI  R26,LOW(0x2)
0051ae f409      	BRNE _0x120010
                 _0x12000F:
0051af c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
0051b0 e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
0051b1 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
0051b2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
0051b3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
0051b4 940e cec8 	CALL __PUTPARD1
0051b6 a1e9      	LDD  R30,Y+33
0051b7 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 006F         return -1;
0051b9 efef      	LDI  R30,LOW(65535)
0051ba efff      	LDI  R31,HIGH(65535)
0051bb c078      	RJMP _0x20E007E
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
0051bc 940e baa9 	CALL SUBOPT_0x157
0051be 0fae      	ADD  R26,R30
0051bf 1fbf      	ADC  R27,R31
0051c0 e3ea      	LDI  R30,LOW(58)
0051c1 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0051c2 e020     +LDI R18 , LOW ( 0 )
0051c3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
0051c4 3028     +CPI R18 , LOW ( 8 )
0051c5 e0e0     +LDI R30 , HIGH ( 8 )
0051c6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0051c7 f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
0051c8 940e baa9 	CALL SUBOPT_0x157
0051ca 940e ba86 	CALL SUBOPT_0x151
                 ; 0009 0076     }
                +
0051cc 5f2f     +SUBI R18 , LOW ( - 1 )
0051cd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0051ce cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0051cf 01f8      	MOVW R30,R16
0051d0 01de      	MOVW R26,R28
0051d1 9616      	ADIW R26,6
0051d2 940e b2ec 	CALL SUBOPT_0x1D
0051d4 01fe      	MOVW R30,R28
0051d5 967b      	ADIW R30,27
0051d6 940e b436 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
0051d8 5f0c     +SUBI R16 , LOW ( - 4 )
0051d9 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
0051da 940e baa9 	CALL SUBOPT_0x157
0051dc 0fea      	ADD  R30,R26
0051dd 1ffb      	ADC  R31,R27
0051de 8dad      	LDD  R26,Y+29
0051df 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
0051e0 940e baa9 	CALL SUBOPT_0x157
0051e2 0fea      	ADD  R30,R26
0051e3 1ffb      	ADC  R31,R27
0051e4 8da8      	LDD  R26,Y+24
0051e5 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
0051e6 940e baa9 	CALL SUBOPT_0x157
0051e8 0fea      	ADD  R30,R26
0051e9 1ffb      	ADC  R31,R27
0051ea 89af      	LDD  R26,Y+23
0051eb 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
0051ec 940e 6811 	CALL _ETH_generateId
0051ee 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
0051ef 8ded      	LDD  R30,Y+29
0051f0 30e0      	CPI  R30,0
0051f1 f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
0051f2 89ee      	LDD  R30,Y+22
0051f3 93ea      	ST   -Y,R30
0051f4 940e b794 	CALL SUBOPT_0xD0
0051f6 940e cec8 	CALL __PUTPARD1
0051f8 8ded      	LDD  R30,Y+29
0051f9 93ea      	ST   -Y,R30
0051fa 8dad      	LDD  R26,Y+29
0051fb 940e 7cdf 	CALL _addEventLogQueue
0051fd 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
0051fe 2355      	TST  R21
0051ff f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
005200 ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
005201 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
005202 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
005203 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
005204 940e cec8 	CALL __PUTPARD1
005206 8dea      	LDD  R30,Y+26
005207 940e b4d5 	CALL SUBOPT_0x65
005209 940e baaf 	CALL SUBOPT_0x158
00520b a1ec      	LDD  R30,Y+36
00520c 940e b4d5 	CALL SUBOPT_0x65
00520e a1ef      	LDD  R30,Y+39
00520f 940e b4d5 	CALL SUBOPT_0x65
005211 940e bab6 	CALL SUBOPT_0x159
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
005213 c006      	RJMP _0x120016
                 _0x120014:
005214 8dad      	LDD  R26,Y+29
005215 30a1      	CPI  R26,LOW(0x1)
005216 f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
005217 89ee      	LDD  R30,Y+22
005218 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
00521a e1e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
00521b e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
00521c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
00521d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
00521e 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
005220 940e b471 	CALL SUBOPT_0x56
005222 01d8      	MOVW R26,R16
005223 940e 92cc 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005225 940e b471 	CALL SUBOPT_0x56
005227 931a      	ST   -Y,R17
005228 930a      	ST   -Y,R16
005229 8dea      	LDD  R30,Y+26
00522a 940e baa0 	CALL SUBOPT_0x155
00522c 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
00522d 2355      	TST  R21
00522e f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
00522f efef      	LDI  R30,LOW(65535)
005230 efff      	LDI  R31,HIGH(65535)
005231 c002      	RJMP _0x20E007E
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
005232 e0e0      	LDI  R30,LOW(0)
005233 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E007E:
005234 940e cf3f 	CALL __LOADLOCR6
005236 966e      	ADIW R28,30
005237 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
005238 93aa      	ST   -Y,R26
005239 972c      	SBIW R28,12
00523a 940e ba63 	CALL SUBOPT_0x14D
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00523c e4eb      	LDI  R30,LOW(75)
00523d 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00523e e020     +LDI R18 , LOW ( 0 )
00523f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
005240 3028     +CPI R18 , LOW ( 8 )
005241 e0e0     +LDI R30 , HIGH ( 8 )
005242 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005243 f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
005244 940e ba47 	CALL SUBOPT_0x149
005246 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 00A4     }
                +
005248 5f2f     +SUBI R18 , LOW ( - 1 )
005249 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00524a cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
00524b 940e ba47 	CALL SUBOPT_0x149
00524d 89aa      	LDD  R26,Y+18
00524e 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
00524f 940e ba47 	CALL SUBOPT_0x149
005251 89a9      	LDD  R26,Y+17
005252 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
005253 940e ba47 	CALL SUBOPT_0x149
005255 89a8      	LDD  R26,Y+16
005256 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
005257 e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
005258 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
005259 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
00525a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
00525b 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
00525d 940e ba59 	CALL SUBOPT_0x14B
00525f 89ef      	LDD  R30,Y+23
005260 93ea      	ST   -Y,R30
005261 940e b84c 	CALL SUBOPT_0xF0
005263 940e ba60 	CALL SUBOPT_0x14C
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
005265 9664      	ADIW R28,20
005266 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
005267 93ba      	ST   -Y,R27
005268 93aa      	ST   -Y,R26
005269 9722      	SBIW R28,2
00526a 940e b396 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
00526c 940e ba71 	CALL SUBOPT_0x14E
                 ; 0009 00BA     if(frameLen > 250){
00526e f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
00526f e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
005270 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
005271 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
005272 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
005273 940e b41c 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
005275 940e babb 	CALL SUBOPT_0x15A
                 ; 0009 00BD         return -1;
005277 c051      	RJMP _0x20E007C
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
005278 940e ba79 	CALL SUBOPT_0x14F
                 ; 0009 00C1     if(frameData == NULL){
00527a f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
00527b e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
00527c e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
00527d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
00527e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
00527f 940e b41c 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
005281 940e babb 	CALL SUBOPT_0x15A
                 ; 0009 00C4         return -1;
005283 c045      	RJMP _0x20E007C
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
005284 940e ba80 	CALL SUBOPT_0x150
005286 0fae      	ADD  R26,R30
005287 1fbf      	ADC  R27,R31
005288 e4eb      	LDI  R30,LOW(75)
005289 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00528a e020     +LDI R18 , LOW ( 0 )
00528b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
00528c 3028     +CPI R18 , LOW ( 8 )
00528d e0e0     +LDI R30 , HIGH ( 8 )
00528e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00528f f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
005290 940e ba80 	CALL SUBOPT_0x150
005292 940e ba86 	CALL SUBOPT_0x151
                 ; 0009 00CB     }
                +
005294 5f2f     +SUBI R18 , LOW ( - 1 )
005295 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005296 cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
005297 940e ba80 	CALL SUBOPT_0x150
005299 0fea      	ADD  R30,R26
00529a 1ffb      	ADC  R31,R27
00529b 85ae      	LDD  R26,Y+14
00529c 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
00529d 940e ba80 	CALL SUBOPT_0x150
00529f 0fea      	ADD  R30,R26
0052a0 1ffb      	ADC  R31,R27
0052a1 85ad      	LDD  R26,Y+13
0052a2 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
0052a3 940e ba80 	CALL SUBOPT_0x150
0052a5 0fea      	ADD  R30,R26
0052a6 1ffb      	ADC  R31,R27
0052a7 85ac      	LDD  R26,Y+12
0052a8 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
0052a9 85a8      	LDD  R26,Y+8
0052aa 85b9      	LDD  R27,Y+8+1
0052ab 940e cf20 	CALL __CPW02
0052ad f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
0052ae 940e ba89 	CALL SUBOPT_0x152
0052b0 940e ba8e 	CALL SUBOPT_0x153
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
0052b2 ede1     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
0052b3 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
0052b4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
0052b5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
0052b6 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
0052b8 940e ba9b 	CALL SUBOPT_0x154
0052ba 01d8      	MOVW R26,R16
0052bb 940e bac7 	CALL SUBOPT_0x15B
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
0052bd 931a      	ST   -Y,R17
0052be 930a      	ST   -Y,R16
0052bf 89eb      	LDD  R30,Y+19
0052c0 93ea      	ST   -Y,R30
0052c1 940e b84c 	CALL SUBOPT_0xF0
0052c3 940e 5b13 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
0052c5 940e baa5 	CALL SUBOPT_0x156
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
0052c7 e0e0      	LDI  R30,LOW(0)
0052c8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E007C:
0052c9 940e cf3f 	CALL __LOADLOCR6
                 _0x20E007D:
0052cb 9660      	ADIW R28,16
0052cc 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
0052cd 940e cecd 	CALL __PUTPARD2
0052cf 9764      	SBIW R28,20
0052d0 e0e0      	LDI  R30,LOW(0)
0052d1 83e8      	ST   Y,R30
0052d2 940e b396 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
0052d4 a1ac      	LDD  R26,Y+36
0052d5 30a0      	CPI  R26,LOW(0x0)
0052d6 f021      	BREQ _0x120024
0052d7 30a1      	CPI  R26,LOW(0x1)
0052d8 f011      	BREQ _0x120024
0052d9 30a2      	CPI  R26,LOW(0x2)
0052da f409      	BRNE _0x120025
                 _0x120024:
0052db c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
0052dc efe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
0052dd e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
0052de e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
0052df e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
0052e0 940e cec8 	CALL __PUTPARD1
0052e2 a5e8      	LDD  R30,Y+40
0052e3 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 00E9         return -1;
0052e5 efef      	LDI  R30,LOW(65535)
0052e6 efff      	LDI  R31,HIGH(65535)
0052e7 c083      	RJMP _0x20E007B
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
0052e8 8dae      	LDD  R26,Y+30
0052e9 5faf      	SUBI R26,-LOW(1)
0052ea 2fea      	MOV  R30,R26
0052eb 95e2      	SWAP R30
0052ec 7fe0      	ANDI R30,0xF0
0052ed 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
0052ee a1ec      	LDD  R30,Y+36
0052ef 81ae      	LDD  R26,Y+6
0052f0 2bea      	OR   R30,R26
0052f1 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
0052f2 940e baca 	CALL SUBOPT_0x15C
0052f4 0fae      	ADD  R26,R30
0052f5 1fbf      	ADC  R27,R31
0052f6 e5ea      	LDI  R30,LOW(90)
0052f7 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0052f8 e020     +LDI R18 , LOW ( 0 )
0052f9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
0052fa 3028     +CPI R18 , LOW ( 8 )
0052fb e0e0     +LDI R30 , HIGH ( 8 )
0052fc 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0052fd f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
0052fe 940e baca 	CALL SUBOPT_0x15C
005300 940e ba86 	CALL SUBOPT_0x151
                 ; 0009 00F3     }
                +
005302 5f2f     +SUBI R18 , LOW ( - 1 )
005303 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005304 cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005305 01f8      	MOVW R30,R16
005306 01de      	MOVW R26,R28
005307 9617      	ADIW R26,7
005308 940e b2ec 	CALL SUBOPT_0x1D
00530a 01fe      	MOVW R30,R28
00530b 96b2      	ADIW R30,34
00530c 940e b436 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
00530e 5f0c     +SUBI R16 , LOW ( - 4 )
00530f 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
005310 940e baca 	CALL SUBOPT_0x15C
005312 0fea      	ADD  R30,R26
005313 1ffb      	ADC  R31,R27
005314 81ae      	LDD  R26,Y+6
005315 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
005316 01f8      	MOVW R30,R16
005317 01de      	MOVW R26,R28
005318 9617      	ADIW R26,7
005319 940e b2ec 	CALL SUBOPT_0x1D
00531b 01fe      	MOVW R30,R28
00531c 967c      	ADIW R30,28
00531d 940e b436 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
00531f 5f0c     +SUBI R16 , LOW ( - 4 )
005320 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
005321 940e 6811 	CALL _ETH_generateId
005323 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
005324 a1ec      	LDD  R30,Y+36
005325 30e0      	CPI  R30,0
005326 f549      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
005327 8de9      	LDD  R30,Y+25
005328 93ea      	ST   -Y,R30
005329 940e baaf 	CALL SUBOPT_0x158
00532b a1eb      	LDD  R30,Y+35
00532c a1fc      	LDD  R31,Y+35+1
00532d 93fa      	ST   -Y,R31
00532e 93ea      	ST   -Y,R30
                +
00532f a1a9     +LDD R26 , Y + 33
005330 a1ba     +LDD R27 , Y + 33 + 1
005331 a18b     +LDD R24 , Y + 33 + 2
005332 a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
005333 940e 7c13 	CALL _addDataLogQueue
005335 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
005336 2355      	TST  R21
005337 f4ba      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
005338 e2e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
005339 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
00533a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
00533b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
00533c 940e cec8 	CALL __PUTPARD1
00533e 8ded      	LDD  R30,Y+29
00533f 940e b4d5 	CALL SUBOPT_0x65
005341 940e b845 	CALL SUBOPT_0xEF
005343 a5ea      	LDD  R30,Y+42
005344 a5fb      	LDD  R31,Y+42+1
005345 940e b388 	CALL SUBOPT_0x34
                +
005347 a5ea     +LDD R30 , Y + 42
005348 a5fb     +LDD R31 , Y + 42 + 1
005349 a56c     +LDD R22 , Y + 42 + 2
00534a a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
00534b 940e cec8 	CALL __PUTPARD1
00534d 940e bab6 	CALL SUBOPT_0x159
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
00534f c006      	RJMP _0x12002B
                 _0x120029:
005350 a1ac      	LDD  R26,Y+36
005351 30a1      	CPI  R26,LOW(0x1)
005352 f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
005353 8de9      	LDD  R30,Y+25
005354 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
005356 e6ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
005357 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
005358 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
005359 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
00535a 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
00535c 940e b4c9 	CALL SUBOPT_0x63
00535e 931a      	ST   -Y,R17
00535f 930a      	ST   -Y,R16
005360 8ded      	LDD  R30,Y+29
005361 940e baa0 	CALL SUBOPT_0x155
005363 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
005364 2355      	TST  R21
005365 f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
005366 efef      	LDI  R30,LOW(65535)
005367 efff      	LDI  R31,HIGH(65535)
005368 c002      	RJMP _0x20E007B
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
005369 e0e0      	LDI  R30,LOW(0)
00536a e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E007B:
00536b 940e cf3f 	CALL __LOADLOCR6
00536d 96a5      	ADIW R28,37
00536e 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
00536f 940e bad0 	CALL SUBOPT_0x15D
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005371 e6eb      	LDI  R30,LOW(107)
005372 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005373 e020     +LDI R18 , LOW ( 0 )
005374 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
005375 3028     +CPI R18 , LOW ( 8 )
005376 e0e0     +LDI R30 , HIGH ( 8 )
005377 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005378 f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
005379 940e ba47 	CALL SUBOPT_0x149
00537b 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 0121     }
                +
00537d 5f2f     +SUBI R18 , LOW ( - 1 )
00537e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00537f cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
005380 940e ba47 	CALL SUBOPT_0x149
005382 940e bad3 	CALL SUBOPT_0x15E
                 ; 0009 0124     frameData[i++]      = status;
005384 85af      	LDD  R26,Y+15
005385 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
005386 e9e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
005387 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
005388 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
005389 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
00538a c037      	RJMP _0x20E007A
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
00538b 940e bad0 	CALL SUBOPT_0x15D
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00538d e7eb      	LDI  R30,LOW(123)
00538e 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00538f e020     +LDI R18 , LOW ( 0 )
005390 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
005391 3028     +CPI R18 , LOW ( 8 )
005392 e0e0     +LDI R30 , HIGH ( 8 )
005393 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005394 f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
005395 940e ba47 	CALL SUBOPT_0x149
005397 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 0136     }
                +
005399 5f2f     +SUBI R18 , LOW ( - 1 )
00539a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00539b cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
00539c 940e ba47 	CALL SUBOPT_0x149
00539e 940e bad3 	CALL SUBOPT_0x15E
                 ; 0009 0139     frameData[i++]      = status;
0053a0 85af      	LDD  R26,Y+15
0053a1 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
0053a2 ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
0053a3 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
0053a4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
0053a5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
0053a6 c01b      	RJMP _0x20E007A
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
0053a7 940e bad0 	CALL SUBOPT_0x15D
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0053a9 e8eb      	LDI  R30,LOW(139)
0053aa 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053ab e020     +LDI R18 , LOW ( 0 )
0053ac e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
0053ad 3028     +CPI R18 , LOW ( 8 )
0053ae e0e0     +LDI R30 , HIGH ( 8 )
0053af 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053b0 f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
0053b1 940e ba47 	CALL SUBOPT_0x149
0053b3 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 014A     }
                +
0053b5 5f2f     +SUBI R18 , LOW ( - 1 )
0053b6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053b7 cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
0053b8 940e ba47 	CALL SUBOPT_0x149
0053ba 940e bad3 	CALL SUBOPT_0x15E
                 ; 0009 014D     frameData[i++]      = status;
0053bc 85af      	LDD  R26,Y+15
0053bd 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
0053be eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
0053bf e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
0053c0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
0053c1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E007A:
0053c2 940e cec8 	CALL __PUTPARD1
0053c4 940e b391 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
0053c6 940e ba59 	CALL SUBOPT_0x14B
0053c8 89ed      	LDD  R30,Y+21
0053c9 93ea      	ST   -Y,R30
0053ca 940e b84c 	CALL SUBOPT_0xF0
0053cc 940e ba60 	CALL SUBOPT_0x14C
                 ; 0009 0151 
                 ; 0009 0152     return 0;
0053ce 9662      	ADIW R28,18
0053cf 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
0053d0 940e ba38 	CALL SUBOPT_0x148
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0053d2 e9ea      	LDI  R30,LOW(154)
0053d3 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053d4 e020     +LDI R18 , LOW ( 0 )
0053d5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
0053d6 3028     +CPI R18 , LOW ( 8 )
0053d7 e0e0     +LDI R30 , HIGH ( 8 )
0053d8 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053d9 f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
0053da 940e ba47 	CALL SUBOPT_0x149
0053dc 940e ba4f 	CALL SUBOPT_0x14A
                 ; 0009 015E     }
                +
0053de 5f2f     +SUBI R18 , LOW ( - 1 )
0053df 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053e0 cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
0053e1 01f8      	MOVW R30,R16
                +
0053e2 5f0f     +SUBI R16 , LOW ( - 1 )
0053e3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053e4 940e bad6 	CALL SUBOPT_0x15F
0053e6 e0e1      	LDI  R30,LOW(1)
0053e7 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
0053e8 e0ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
0053e9 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
0053ea e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
0053eb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
0053ec 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
0053ee 940e ba59 	CALL SUBOPT_0x14B
0053f0 efef      	LDI  R30,LOW(255)
0053f1 93ea      	ST   -Y,R30
0053f2 940e b84c 	CALL SUBOPT_0xF0
0053f4 940e ba60 	CALL SUBOPT_0x14C
                 ; 0009 0164 
                 ; 0009 0165     return 0;
0053f6 962e      	ADIW R28,14
0053f7 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
0053f8 93aa      	ST   -Y,R26
0053f9 97a8      	SBIW R28,40
0053fa 50d2      	SUBI R29,2
0053fb 940e cf38 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
0053fd 940e badb 	CALL SUBOPT_0x160
0053ff b7ed      	IN   R30,SPL
005400 b7fe      	IN   R31,SPH
005401 9731      	SBIW R30,1
005402 93fa      	ST   -Y,R31
005403 93ea      	ST   -Y,R30
005404 933f      	PUSH R19
005405 932f      	PUSH R18
005406 01de      	MOVW R26,R28
005407 961b      	ADIW R26,11
005408 940e 7c5f 	CALL _readDataLogQueue
00540a 912f      	POP  R18
00540b 913f      	POP  R19
00540c 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
00540d efef      	LDI  R30,LOW(65535)
00540e efff      	LDI  R31,HIGH(65535)
00540f 17e0      	CP   R30,R16
005410 07f1      	CPC  R31,R17
005411 f411      	BRNE PC+3
005412 940c 545e 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
005414 940e b504 	CALL SUBOPT_0x6D
005416 f039      	BREQ _0x12003D
005417 940e b461 	CALL SUBOPT_0x53
005419 f021      	BREQ _0x12003D
                +
00541a 3025     +CPI R18 , LOW ( 5 )
00541b e0e0     +LDI R30 , HIGH ( 5 )
00541c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00541d f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
00541e e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
00541f e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
005420 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
005421 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
005422 c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
005423 e7eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
005424 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
005425 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
005426 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
005427 940e b448 	CALL SUBOPT_0x50
005429 01f9      	MOVW R30,R18
00542a 940e b388 	CALL SUBOPT_0x34
00542c 940e b451 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
00542e 940e bae1 	CALL SUBOPT_0x161
005430 940e b4a3 	CALL SUBOPT_0x5E
005432 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
005433 2311      	TST  R17
005434 f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
005435 ebe3     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
005436 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005437 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
005438 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
005439 940e b4ae 	CALL SUBOPT_0x5F
00543b 940e b29d 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
00543d c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
00543e 940e bae1 	CALL SUBOPT_0x161
005440 940e bae6 	CALL SUBOPT_0x162
005442 933a      	ST   -Y,R19
005443 932a      	ST   -Y,R18
005444 940e b4b8 	CALL SUBOPT_0x61
005446 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
005447 2311      	TST  R17
005448 f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
005449 940e baea 	CALL SUBOPT_0x163
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
00544b 940e baf0 	CALL SUBOPT_0x164
                 ; 0009 018C                 if(res < 0)
00544d f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
00544e 940e bafd 	CALL SUBOPT_0x165
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
005450 e4ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
005451 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
005452 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
005453 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
005454 940e cec8 	CALL __PUTPARD1
005456 940e b391 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
005458 01de     +MOVW R26 , R28
005459 5da2     +SUBI R26 , LOW ( - 558 )
00545a 4fbd     +SBCI R27 , HIGH ( - 558 )
00545b 91ac     +LD R26 , X
                 	__GETB2SX 558
00545c 940e 7c9e 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
00545e 940e badb 	CALL SUBOPT_0x160
005460 b7ed      	IN   R30,SPL
005461 b7fe      	IN   R31,SPH
005462 93fa      	ST   -Y,R31
005463 93ea      	ST   -Y,R30
005464 935f      	PUSH R21
005465 b7ad      	IN   R26,SPL
005466 b7be      	IN   R27,SPH
005467 934f      	PUSH R20
005468 940e 7d20 	CALL _readEventLogQueue
00546a 914f      	POP  R20
00546b 915f      	POP  R21
00546c 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
00546d efef      	LDI  R30,LOW(65535)
00546e efff      	LDI  R31,HIGH(65535)
00546f 17e0      	CP   R30,R16
005470 07f1      	CPC  R31,R17
005471 f411      	BRNE PC+3
005472 940c 54b7 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
005474 940e b504 	CALL SUBOPT_0x6D
005476 f019      	BREQ _0x120046
005477 940e b461 	CALL SUBOPT_0x53
005479 f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
00547a e7e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
00547b e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
00547c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
00547d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
00547e c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
00547f 940e bae1 	CALL SUBOPT_0x161
005481 940e b4ea 	CALL SUBOPT_0x69
005483 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
005484 2311      	TST  R17
005485 f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
005486 ebe3     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
005487 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005488 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
005489 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
00548a 940e b4f5 	CALL SUBOPT_0x6A
00548c 940e b29d 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
00548e c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
00548f ebe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
005490 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
005491 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
005492 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
005493 940e b448 	CALL SUBOPT_0x50
005495 940e b47b 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
005497 940e bae1 	CALL SUBOPT_0x161
005499 940e bae6 	CALL SUBOPT_0x162
00549b 935a      	ST   -Y,R21
00549c 2fa4      	MOV  R26,R20
00549d 940e 796f 	CALL _LOG_insertEvent
00549f 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
0054a0 2311      	TST  R17
0054a1 f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0054a2 940e baea 	CALL SUBOPT_0x163
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
0054a4 940e baf0 	CALL SUBOPT_0x164
                 ; 0009 01B3                 if(res < 0)
0054a6 f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0054a7 940e bafd 	CALL SUBOPT_0x165
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
0054a9 efe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
0054aa e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
0054ab e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
0054ac e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
0054ad 940e cec8 	CALL __PUTPARD1
0054af 940e b391 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
0054b1 01de     +MOVW R26 , R28
0054b2 5da2     +SUBI R26 , LOW ( - 558 )
0054b3 4fbd     +SBCI R27 , HIGH ( - 558 )
0054b4 91ac     +LD R26 , X
                 	__GETB2SX 558
0054b5 940e 7d65 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
0054b7 940e cf3f 	CALL __LOADLOCR6
0054b9 96af      	ADIW R28,47
0054ba 5fde      	SUBI R29,-2
0054bb 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
0054bc 940e b65e 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x12004E:
                +
0054be 300f     +CPI R16 , LOW ( 15 )
0054bf e0e0     +LDI R30 , HIGH ( 15 )
0054c0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
0054c1 f014      	BRLT PC+3
0054c2 940c 5570 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
0054c4 940e bb03 	CALL SUBOPT_0x166
                +
0054c6 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
0054c7 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
0054c8 01df      	MOVW R26,R30
0054c9 940e ce98 	CALL __GETD1P
0054cb 940e b2e6 	CALL SUBOPT_0x1C
0054cd f039      	BREQ _0x120051
0054ce 940e bb03 	CALL SUBOPT_0x166
                +
0054d0 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0054d1 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0054d2 81a0      	LD   R26,Z
0054d3 30a0      	CPI  R26,LOW(0x0)
0054d4 f409      	BRNE _0x120052
                 _0x120051:
0054d5 c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
0054d6 940e bb03 	CALL SUBOPT_0x166
0054d8 58e5      	SUBI R30,LOW(-_eth_waitQueue)
0054d9 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
0054da 81a0      	LD   R26,Z
0054db 30a3      	CPI  R26,LOW(0x3)
0054dc f410      	BRSH PC+3
0054dd 940c 5544 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
0054df e1ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
0054e0 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
0054e1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
0054e2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
0054e3 940e cec8 	CALL __PUTPARD1
0054e5 940e bb03 	CALL SUBOPT_0x166
                +
0054e7 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0054e8 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0054e9 81e0      	LD   R30,Z
0054ea 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
0054ec 940e bb03 	CALL SUBOPT_0x166
                +
0054ee 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0054ef 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0054f0 81a0      	LD   R26,Z
0054f1 91e0 1426 	LDS  R30,_logDataWait
0054f3 17ea      	CP   R30,R26
0054f4 f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
0054f5 e4e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
0054f6 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
0054f7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
0054f8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
0054f9 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
0054fb e0e0      	LDI  R30,LOW(0)
0054fc 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
0054fe c019      	RJMP _0x120055
                 _0x120054:
0054ff 940e bb03 	CALL SUBOPT_0x166
                +
005501 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005502 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005503 81a0      	LD   R26,Z
005504 91e0 142b 	LDS  R30,_logEventWait
005506 17ea      	CP   R30,R26
005507 f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
005508 e7e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
005509 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
00550a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
00550b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
00550c 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
00550e e0e0      	LDI  R30,LOW(0)
00550f 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
005511 c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
005512 940e bb03 	CALL SUBOPT_0x166
                +
005514 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005515 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005516 81a0      	LD   R26,Z
005517 dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
005518 940e bb03 	CALL SUBOPT_0x166
                +
00551a 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00551b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00551c 81a0      	LD   R26,Z
00551d 940e 678a 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
00551f e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
005520 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
005521 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
005522 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
005523 940e bb09 	CALL SUBOPT_0x167
005525 940e bb09 	CALL SUBOPT_0x167
005527 940e b300 	CALL SUBOPT_0x21
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
005529 940e bb14 	CALL SUBOPT_0x168
00552b 940e b3ae 	CALL SUBOPT_0x3A
00552d f029      	BREQ _0x120059
00552e 940e bb14 	CALL SUBOPT_0x168
005530 940e cf28 	CALL __CPD02
005532 f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
005533 e2e1      	LDI  R30,LOW(_commLostTimer)
005534 e1f4      	LDI  R31,HIGH(_commLostTimer)
005535 940e bb1d 	CALL SUBOPT_0x169
005537 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
005539 ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
00553a e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
00553b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
00553c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
00553d 940e bb24 	CALL SUBOPT_0x16A
00553f 940e bb24 	CALL SUBOPT_0x16A
005541 940e b300 	CALL SUBOPT_0x21
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
005543 c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
005544 940e bb03 	CALL SUBOPT_0x166
005546 940e bb32 	CALL SUBOPT_0x16B
005548 940e bb37 	CALL SUBOPT_0x16C
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
00554a 940e bb03 	CALL SUBOPT_0x166
00554c 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00554d 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00554e 01df      	MOVW R26,R30
00554f 91ec      	LD   R30,X
005550 5fef      	SUBI R30,-LOW(1)
005551 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
005552 efec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
005553 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
005554 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
005555 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
005556 940e cec8 	CALL __PUTPARD1
005558 940e bb03 	CALL SUBOPT_0x166
                +
00555a 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00555b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00555c 81e0      	LD   R30,Z
00555d 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
00555f 940e bb03 	CALL SUBOPT_0x166
005561 940e bb40 	CALL SUBOPT_0x16D
005563 93fa      	ST   -Y,R31
005564 93ea      	ST   -Y,R30
005565 940e bb03 	CALL SUBOPT_0x166
                +
005567 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
005568 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
005569 81a0      	LD   R26,Z
00556a e0b0      	LDI  R27,0
00556b 940e 3def 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
00556d 5f0f     +SUBI R16 , LOW ( - 1 )
00556e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00556f cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
005570 9109      	LD   R16,Y+
005571 9119      	LD   R17,Y+
005572 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
005573 93ba      	ST   -Y,R27
005574 93aa      	ST   -Y,R26
005575 97a6      	SBIW R28,38
005576 50d2      	SUBI R29,2
005577 940e cf38 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
005579 e020     +LDI R18 , LOW ( 0 )
00557a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00557b 940e bb46 	CALL SUBOPT_0x16E
00557d 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
00557e 940e bb46 	CALL SUBOPT_0x16E
005580 9611      	ADIW R26,1
005581 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
005582 940e b31c 	CALL SUBOPT_0x25
005584 93e0 1421 	STS  _commLostTimer,R30
005586 93f0 1422 	STS  _commLostTimer+1,R31
005588 9360 1423 	STS  _commLostTimer+2,R22
00558a 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
00558c 940e b6b9 	CALL SUBOPT_0xAD
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
00558e 31ea      	CPI  R30,LOW(0x1A)
00558f e0a0      	LDI  R26,HIGH(0x1A)
005590 07fa      	CPC  R31,R26
005591 f011      	BREQ PC+3
005592 940c 5611 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005594 940e bb4d 	CALL SUBOPT_0x16F
005596 971d      	SBIW R26,13
005597 f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
005598 e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
005599 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
00559a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
00559b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
00559c 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
00559e 940e bb5d 	CALL SUBOPT_0x171
                 ; 0009 0211                 return;
0055a0 c0d3      	RJMP _0x20E0079
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
0055a1 940e bb4d 	CALL SUBOPT_0x16F
0055a3 940e bb61 	CALL SUBOPT_0x172
                 ; 0009 0215             if(payload == NULL){
0055a5 f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
0055a6 e6e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
0055a7 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
0055a8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
0055a9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
0055aa 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
0055ac 940e bb67 	CALL SUBOPT_0x173
                 ; 0009 0218                 return;
0055ae c0c5      	RJMP _0x20E0079
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
0055af 940e bb6b 	CALL SUBOPT_0x174
0055b1 940e bb72 	CALL SUBOPT_0x175
0055b3 940e 5e7a 	CALL _statusRequestParser
0055b5 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
0055b6 2333      	TST  R19
0055b7 f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
0055b8 e9e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
0055b9 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
0055ba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
0055bb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
0055bc 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
0055be 940e bb7b 	CALL SUBOPT_0x176
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
0055c0 c0b3      	RJMP _0x20E0079
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
0055c1 ece7     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
0055c2 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
0055c3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
0055c4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
0055c5 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
0055c7 efe0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
0055c8 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
0055c9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
0055ca e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
0055cb 940e bb87 	CALL SUBOPT_0x178
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
0055cd e0eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
0055ce e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
0055cf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
0055d0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
0055d1 940e bb8d 	CALL SUBOPT_0x179
0055d3 940e bb8d 	CALL SUBOPT_0x179
0055d5 940e b300 	CALL SUBOPT_0x21
                 ; 0009 0226             printDebug("statusList      |");
                +
0055d7 e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
0055d8 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
0055d9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
0055da e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
0055db 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
0055dd e0e0      	LDI  R30,LOW(0)
0055de 83ee      	STD  Y+6,R30
0055df 83ef      	STD  Y+6+1,R30
                 _0x120064:
0055e0 01da      	MOVW R26,R20
0055e1 961b      	ADIW R26,11
0055e2 940e bb93 	CALL SUBOPT_0x17A
0055e4 f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
0055e5 e3ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
0055e6 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
0055e7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
0055e8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
0055e9 940e cec8 	CALL __PUTPARD1
0055eb 01fa      	MOVW R30,R20
0055ec 85a5      	LDD  R26,Z+13
0055ed 85b6      	LDD  R27,Z+14
0055ee 85ea      	LDD  R30,Y+10
0055ef 85fb      	LDD  R31,Y+10+1
0055f0 9631      	ADIW R30,1
0055f1 87ea      	STD  Y+10,R30
0055f2 87fb      	STD  Y+10+1,R31
0055f3 9731      	SBIW R30,1
0055f4 940e bb9a 	CALL SUBOPT_0x17B
                 ; 0009 022B             }
0055f6 81ee      	LDD  R30,Y+6
0055f7 81ff      	LDD  R31,Y+6+1
0055f8 9631      	ADIW R30,1
0055f9 83ee      	STD  Y+6,R30
0055fa 83ff      	STD  Y+6+1,R31
0055fb cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
0055fc e4e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
0055fd e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
0055fe e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
0055ff e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
005600 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
005602 940e bb9f 	CALL SUBOPT_0x17C
005604 e0a0      	LDI  R26,LOW(0)
005605 db24      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
005606 01fa      	MOVW R30,R20
005607 85a0      	LDD  R26,Z+8
005608 33a0      	CPI  R26,LOW(0x30)
005609 f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
00560a 01da      	MOVW R26,R20
00560b 940e 60bc 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
00560d 01da      	MOVW R26,R20
00560e 940e 9717 	CALL _free
                 ; 0009 0235             break;
005610 c461      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
005611 32eb      	CPI  R30,LOW(0x2B)
005612 e0a0      	LDI  R26,HIGH(0x2B)
005613 07fa      	CPC  R31,R26
005614 f011      	BREQ PC+3
005615 940c 565c 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
005617 940e bb4d 	CALL SUBOPT_0x16F
005619 971e      	SBIW R26,14
00561a f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
00561b e5e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
00561c e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
00561d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
00561e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
00561f c04a      	RJMP _0x20E0078
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
005620 e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
005621 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
005622 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
005623 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
005624 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
005626 ebe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
005627 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
005628 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
005629 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
00562a 940e cec8 	CALL __PUTPARD1
                +
00562c 01fe     +MOVW R30 , R28
00562d 5cee     +SUBI R30 , LOW ( - 562 )
00562e 4ffd     +SBCI R31 , HIGH ( - 562 )
00562f 9001     +LD R0 , Z +
005630 81f0     +LD R31 , Z
005631 2de0     +MOV R30 , R0
                 	__GETW1SX 562
005632 85e2      	LDD  R30,Z+10
005633 940e b4d5 	CALL SUBOPT_0x65
                +
005635 01fe     +MOVW R30 , R28
005636 5cea     +SUBI R30 , LOW ( - 566 )
005637 4ffd     +SBCI R31 , HIGH ( - 566 )
005638 9001     +LD R0 , Z +
005639 81f0     +LD R31 , Z
00563a 2de0     +MOV R30 , R0
                 	__GETW1SX 566
00563b 85e3      	LDD  R30,Z+11
00563c 940e b4d5 	CALL SUBOPT_0x65
                +
00563e 01fe     +MOVW R30 , R28
00563f 5ce6     +SUBI R30 , LOW ( - 570 )
005640 4ffd     +SBCI R31 , HIGH ( - 570 )
005641 9001     +LD R0 , Z +
005642 81f0     +LD R31 , Z
005643 2de0     +MOV R30 , R0
                 	__GETW1SX 570
005644 85e4      	LDD  R30,Z+12
005645 940e b4d5 	CALL SUBOPT_0x65
                +
005647 01fe     +MOVW R30 , R28
005648 5ce2     +SUBI R30 , LOW ( - 574 )
005649 4ffd     +SBCI R31 , HIGH ( - 574 )
00564a 9001     +LD R0 , Z +
00564b 81f0     +LD R31 , Z
00564c 2de0     +MOV R30 , R0
                 	__GETW1SX 574
00564d 85e5      	LDD  R30,Z+13
00564e 940e b4d5 	CALL SUBOPT_0x65
005650 940e bab6 	CALL SUBOPT_0x159
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
005652 940e bb46 	CALL SUBOPT_0x16E
005654 961a      	ADIW R26,10
005655 940e 66a9 	CALL _setTimeSyncSchema
005657 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
005658 2fa0      	MOV  R26,R16
005659 940e 678a 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
00565b c416      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
00565c 33eb      	CPI  R30,LOW(0x3B)
00565d e0a0      	LDI  R26,HIGH(0x3B)
00565e 07fa      	CPC  R31,R26
00565f f011      	BREQ PC+3
005660 940c 56c8 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
005662 940e bb4d 	CALL SUBOPT_0x16F
005664 971a      	SBIW R26,10
005665 f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
005666 eee9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
005667 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
005668 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
005669 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0078:
00566a 940e cec8 	CALL __PUTPARD1
                +
00566c 01fe     +MOVW R30 , R28
00566d 5de0     +SUBI R30 , LOW ( - 560 )
00566e 4ffd     +SBCI R31 , HIGH ( - 560 )
00566f 9001     +LD R0 , Z +
005670 81f0     +LD R31 , Z
005671 2de0     +MOV R30 , R0
                 	__GETW1SX 560
005672 940e b81b 	CALL SUBOPT_0xE6
                 ; 0009 0248                 return;
                 _0x20E0079:
005674 940e cf3f 	CALL __LOADLOCR6
005676 96e0      	ADIW R28,48
005677 5fde      	SUBI R29,-2
005678 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
005679 e2e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
00567a e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
00567b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
00567c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
00567d 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
00567f 91a0 142b 	LDS  R26,_logEventWait
005681 30a0      	CPI  R26,LOW(0x0)
005682 f021      	BREQ _0x12006D
005683 91e0 142b 	LDS  R30,_logEventWait
005685 17e0      	CP   R30,R16
005686 f009      	BREQ _0x12006E
                 _0x12006D:
005687 c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
005688 e4e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
005689 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
00568a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
00568b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
00568c 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
00568e 940e b491 	CALL SUBOPT_0x5A
005690 940e b4ea 	CALL SUBOPT_0x69
005692 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
005693 2333      	TST  R19
005694 f42a      	BRPL _0x12006F
                +
005695 e6ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005696 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005697 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005698 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005699 c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
00569a 940e b491 	CALL SUBOPT_0x5A
00569c 940e b53e 	CALL SUBOPT_0x72
00569e 940e bba4 	CALL SUBOPT_0x17D
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
0056a0 f41a      	BRPL _0x120071
0056a1 940e bbac 	CALL SUBOPT_0x17E
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
0056a3 c00c      	RJMP _0x120072
                 _0x120071:
                +
0056a4 ebef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
0056a5 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
0056a6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
0056a7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
0056a8 940e b4f5 	CALL SUBOPT_0x6A
0056aa 940e b53e 	CALL SUBOPT_0x72
0056ac 940e b79e 	CALL SUBOPT_0xD2
0056ae 940e b300 	CALL SUBOPT_0x21
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
0056b0 940e bbb2 	CALL SUBOPT_0x17F
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
0056b2 f462      	BRPL _0x120073
                +
0056b3 eee8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
0056b4 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
0056b5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
0056b6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
0056b7 940e cec8 	CALL __PUTPARD1
0056b9 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0056ba e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0056bb 940e b388 	CALL SUBOPT_0x34
0056bd 940e b29d 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
0056bf 940e b52e 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
0056c1 2fa0      	MOV  R26,R16
0056c2 940e 7d65 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
0056c4 2fa0      	MOV  R26,R16
0056c5 940e 678a 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
0056c7 c3aa      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
0056c8 34ea      	CPI  R30,LOW(0x4A)
0056c9 e0a0      	LDI  R26,HIGH(0x4A)
0056ca 07fa      	CPC  R31,R26
0056cb f011      	BREQ PC+3
0056cc 940c 57ff 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
0056ce e0ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
0056cf e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
0056d0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
0056d1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
0056d2 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
0056d4 940e bb6b 	CALL SUBOPT_0x174
0056d6 93fa      	ST   -Y,R31
0056d7 93ea      	ST   -Y,R30
0056d8 940e bb46 	CALL SUBOPT_0x16E
0056da 940e 92cc 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
0056dc 940e bb4d 	CALL SUBOPT_0x16F
0056de 971c      	SBIW R26,12
0056df f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
0056e0 e3e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
0056e1 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
0056e2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
0056e3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
0056e4 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
0056e6 940e bb5d 	CALL SUBOPT_0x171
                 ; 0009 0269                 return;
0056e8 c389      	RJMP _0x20E0077
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
0056e9 e0ae      	LDI  R26,LOW(14)
0056ea 940e bbbf 	CALL SUBOPT_0x180
                 ; 0009 026D             if(payload == NULL){
0056ec f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
0056ed 940e bbc1 	CALL SUBOPT_0x181
                +
0056ef e0ee     +LDI R30 , LOW ( 0xE )
0056f0 e0f0     +LDI R31 , HIGH ( 0xE )
0056f1 e060     +LDI R22 , BYTE3 ( 0xE )
0056f2 e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
0056f3 940e bbc8 	CALL SUBOPT_0x182
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
0056f5 940e bb67 	CALL SUBOPT_0x173
                 ; 0009 0270                 return;
0056f7 c37a      	RJMP _0x20E0077
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
0056f8 940e bbcc 	CALL SUBOPT_0x183
0056fa 940e 5ed6 	CALL _configManageParser
0056fc 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
0056fd 2333      	TST  R19
0056fe f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
0056ff eae6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
005700 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
005701 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
005702 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
005703 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
005705 940e bb7b 	CALL SUBOPT_0x176
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
005707 c36a      	RJMP _0x20E0077
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
005708 ede8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
005709 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
00570a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
00570b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
00570c 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
00570e 940e bbce 	CALL SUBOPT_0x184
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
005710 e1eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
005711 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
005712 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
005713 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
005714 940e bbd3 	CALL SUBOPT_0x185
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
005716 940e bbd9 	CALL SUBOPT_0x186
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
005718 f011      	BREQ PC+3
005719 940c 5788 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
00571b 01fa      	MOVW R30,R20
00571c 85a1      	LDD  R26,Z+9
00571d 940e 60d1 	CALL _getConfigLen
00571f 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
005720 2333      	TST  R19
005721 f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
005722 e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
005723 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
005724 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
005725 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
005726 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005728 c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
005729 01d9      	MOVW R26,R18
00572a 940e 96fc 	CALL _malloc
00572c 87ea      	STD  Y+10,R30
00572d 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
00572e 9730      	SBIW R30,0
00572f f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
005730 e6e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
005731 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
005732 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
005733 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
005734 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
005736 930a      	ST   -Y,R16
005737 e5a0      	LDI  R26,LOW(80)
005738 c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
005739 01fa      	MOVW R30,R20
00573a 85a1      	LDD  R26,Z+9
00573b 93aa      	ST   -Y,R26
00573c 85ab      	LDD  R26,Y+11
00573d 85bc      	LDD  R27,Y+11+1
00573e 940e 6123 	CALL _configRead
005740 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
005741 2400      	CLR  R0
005742 1602      	CP   R0,R18
005743 0603      	CPC  R0,R19
005744 f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
005745 e8ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
005746 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
005747 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
005748 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
005749 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
00574b efef      	LDI  R30,LOW(65535)
00574c efff      	LDI  R31,HIGH(65535)
00574d 17e2      	CP   R30,R18
00574e 07f3      	CPC  R31,R19
00574f f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005750 930a      	ST   -Y,R16
005751 e3a0      	LDI  R26,LOW(48)
005752 c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
005753 efee      	LDI  R30,LOW(65534)
005754 efff      	LDI  R31,HIGH(65534)
005755 17e2      	CP   R30,R18
005756 07f3      	CPC  R31,R19
005757 f021      	BREQ _0x120082
005758 2400      	CLR  R0
005759 1602      	CP   R0,R18
00575a 0603      	CPC  R0,R19
00575b f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
00575c 930a      	ST   -Y,R16
00575d e5a0      	LDI  R26,LOW(80)
00575e c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
00575f efed      	LDI  R30,LOW(65533)
005760 efff      	LDI  R31,HIGH(65533)
005761 17e2      	CP   R30,R18
005762 07f3      	CPC  R31,R19
005763 f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
005764 940e bb9f 	CALL SUBOPT_0x17C
005766 940e bbdd 	CALL SUBOPT_0x187
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
005768 c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
005769 930a      	ST   -Y,R16
00576a efaf      	LDI  R26,LOW(255)
                 _0x12011A:
00576b d999      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
00576c 85aa      	LDD  R26,Y+10
00576d 85bb      	LDD  R27,Y+10+1
00576e 940e 9717 	CALL _free
                 ; 0009 02A3                                             break;
005770 c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
005771 940e bb9f 	CALL SUBOPT_0x17C
005773 940e bbe3 	CALL SUBOPT_0x188
005775 85ee      	LDD  R30,Y+14
005776 85ff      	LDD  R31,Y+14+1
005777 93fa      	ST   -Y,R31
005778 93ea      	ST   -Y,R30
005779 01d9      	MOVW R26,R18
00577a 940e bbe9 	CALL SUBOPT_0x189
                 ; 0009 02AC                                         if(res < 0){
00577c f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
00577d ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
00577e e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
00577f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
005780 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
005781 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
005783 85aa      	LDD  R26,Y+10
005784 85bb      	LDD  R27,Y+10+1
005785 940e 9717 	CALL _free
                 ; 0009 02B1                                         break;
005787 c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
005788 32e0      	CPI  R30,LOW(0x20)
005789 e0a0      	LDI  R26,HIGH(0x20)
00578a 07fa      	CPC  R31,R26
00578b f011      	BREQ PC+3
00578c 940c 57d3 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
00578e 01fa      	MOVW R30,R20
00578f 85a2      	LDD  R26,Z+10
005790 85b3      	LDD  R27,Z+11
005791 940e 96fc 	CALL _malloc
005793 940e bbee 	CALL SUBOPT_0x18A
                 ; 0009 02B4                                         if(cnfgWr == NULL){
005795 9730      	SBIW R30,0
005796 f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
005797 efe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
005798 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
005799 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
00579a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
00579b 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
00579d 930a      	ST   -Y,R16
00579e e5a0      	LDI  R26,LOW(80)
00579f c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
0057a0 940e bbf1 	CALL SUBOPT_0x18B
0057a2 01fa      	MOVW R30,R20
0057a3 85a4      	LDD  R26,Z+12
0057a4 85b5      	LDD  R27,Z+13
0057a5 93ba      	ST   -Y,R27
0057a6 93aa      	ST   -Y,R26
0057a7 85a2      	LDD  R26,Z+10
0057a8 85b3      	LDD  R27,Z+11
0057a9 940e 9739 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
0057ab 01fa      	MOVW R30,R20
0057ac 85a1      	LDD  R26,Z+9
0057ad 93aa      	ST   -Y,R26
0057ae 940e bbf6 	CALL SUBOPT_0x18C
0057b0 01fa      	MOVW R30,R20
0057b1 85a2      	LDD  R26,Z+10
0057b2 85b3      	LDD  R27,Z+11
0057b3 940e 6553 	CALL _configWrite
0057b5 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
0057b6 85a8      	LDD  R26,Y+8
0057b7 85b9      	LDD  R27,Y+8+1
0057b8 940e 9717 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
0057ba 2333      	TST  R19
0057bb f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
0057bc e2e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
0057bd e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
0057be e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
0057bf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
0057c0 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
0057c2 940e bb9f 	CALL SUBOPT_0x17C
0057c4 940e bbdd 	CALL SUBOPT_0x187
                 ; 0009 02C7                                             break;
0057c6 c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
0057c7 940e bb9f 	CALL SUBOPT_0x17C
0057c9 940e bbe3 	CALL SUBOPT_0x188
0057cb 940e bbfb 	CALL SUBOPT_0x18D
0057cd 940e bbe9 	CALL SUBOPT_0x189
                 ; 0009 02D1                                         if(res < 0){
0057cf f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
0057d0 940e bc00 	CALL SUBOPT_0x18E
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
0057d2 c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
0057d3 33e0      	CPI  R30,LOW(0x30)
0057d4 e0a0      	LDI  R26,HIGH(0x30)
0057d5 07fa      	CPC  R31,R26
0057d6 f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
0057d7 940e 671e 	CALL _configConfirm
0057d9 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
0057da 2333      	TST  R19
0057db f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
0057dc e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
0057dd e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
0057de e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
0057df e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
0057e0 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
0057e2 940e bb9f 	CALL SUBOPT_0x17C
0057e4 940e bbdd 	CALL SUBOPT_0x187
                 ; 0009 02DE                                             break;
0057e6 c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
0057e7 940e bb9f 	CALL SUBOPT_0x17C
0057e9 940e bbe3 	CALL SUBOPT_0x188
0057eb 940e bbfb 	CALL SUBOPT_0x18D
0057ed 940e bbe9 	CALL SUBOPT_0x189
                 ; 0009 02E7                                         if(res < 0){
0057ef f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
0057f0 940e bc00 	CALL SUBOPT_0x18E
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
0057f2 c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
0057f3 940e bc06 	CALL SUBOPT_0x18F
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
0057f5 930a      	ST   -Y,R16
0057f6 e3a0      	LDI  R26,LOW(48)
                 _0x120119:
0057f7 d90d      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
0057f8 01da      	MOVW R26,R20
0057f9 940e 60c3 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
0057fb 01da      	MOVW R26,R20
0057fc 940e 9717 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
0057fe c273      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
0057ff 35eb      	CPI  R30,LOW(0x5B)
005800 e0a0      	LDI  R26,HIGH(0x5B)
005801 07fa      	CPC  R31,R26
005802 f011      	BREQ PC+3
005803 940c 585f 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
005805 940e bb4d 	CALL SUBOPT_0x16F
005807 971a      	SBIW R26,10
005808 f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005809 e0e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
00580a e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
00580b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
00580c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
00580d 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 02FA                 return;
00580f c262      	RJMP _0x20E0077
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005810 e3e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
005811 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
005812 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
005813 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
005814 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005816 91a0 1426 	LDS  R26,_logDataWait
005818 30a0      	CPI  R26,LOW(0x0)
005819 f021      	BREQ _0x120093
00581a 91e0 1426 	LDS  R30,_logDataWait
00581c 17e0      	CP   R30,R16
00581d f009      	BREQ _0x120094
                 _0x120093:
00581e c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
00581f e5ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005820 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
005821 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
005822 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
005823 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
005825 940e b491 	CALL SUBOPT_0x5A
005827 940e b4a3 	CALL SUBOPT_0x5E
005829 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
00582a 2333      	TST  R19
00582b f42a      	BRPL _0x120095
                +
00582c e6ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
00582d e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
00582e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
00582f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005830 c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
005831 940e b491 	CALL SUBOPT_0x5A
005833 940e b518 	CALL SUBOPT_0x6F
005835 940e bba4 	CALL SUBOPT_0x17D
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005837 f41a      	BRPL _0x120097
005838 940e bbac 	CALL SUBOPT_0x17E
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
00583a c00c      	RJMP _0x120098
                 _0x120097:
                +
00583b ebef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
00583c e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
00583d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
00583e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
00583f 940e b4ae 	CALL SUBOPT_0x5F
005841 940e b518 	CALL SUBOPT_0x6F
005843 940e b79e 	CALL SUBOPT_0xD2
005845 940e b300 	CALL SUBOPT_0x21
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
005847 940e bbb2 	CALL SUBOPT_0x17F
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
005849 f462      	BRPL _0x120099
                +
00584a eee8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
00584b e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
00584c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
00584d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
00584e 940e cec8 	CALL __PUTPARD1
005850 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
005851 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
005852 940e b388 	CALL SUBOPT_0x34
005854 940e b29d 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
005856 940e b508 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
005858 2fa0      	MOV  R26,R16
005859 940e 7c9e 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
00585b 2fa0      	MOV  R26,R16
00585c 940e 678a 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
00585e c213      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
00585f 36ea      	CPI  R30,LOW(0x6A)
005860 e0a0      	LDI  R26,HIGH(0x6A)
005861 07fa      	CPC  R31,R26
005862 f011      	BREQ PC+3
005863 940c 58cb 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
005865 940e bb4d 	CALL SUBOPT_0x16F
005867 9753      	SBIW R26,19
005868 f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
005869 e8e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
00586a e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
00586b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
00586c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
00586d 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
00586f 940e bb5d 	CALL SUBOPT_0x171
                 ; 0009 0318                 return;
005871 c200      	RJMP _0x20E0077
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
005872 e1a1      	LDI  R26,LOW(17)
005873 940e bbbf 	CALL SUBOPT_0x180
                 ; 0009 031C             if(payload == NULL){
005875 f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
005876 940e bbc1 	CALL SUBOPT_0x181
                +
005878 e1e1     +LDI R30 , LOW ( 0x11 )
005879 e0f0     +LDI R31 , HIGH ( 0x11 )
00587a e060     +LDI R22 , BYTE3 ( 0x11 )
00587b e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
00587c 940e bbc8 	CALL SUBOPT_0x182
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
00587e 940e bb67 	CALL SUBOPT_0x173
                 ; 0009 031F                 return;
005880 c1f1      	RJMP _0x20E0077
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
005881 940e bbcc 	CALL SUBOPT_0x183
005883 940e 5f5c 	CALL _logManipulationCmdParser
005885 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
005886 2333      	TST  R19
005887 f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005888 940e bc0b 	CALL SUBOPT_0x190
                 ; 0009 0325                 free( (void *) payload );
00588a 940e bb7b 	CALL SUBOPT_0x176
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
00588c c1e5      	RJMP _0x20E0077
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
00588d efee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
00588e e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
00588f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
005890 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
005891 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
005893 940e bbce 	CALL SUBOPT_0x184
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
005895 e2ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
005896 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
005897 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
005898 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
005899 940e bc11 	CALL SUBOPT_0x191
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
00589b e4e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
00589c e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
00589d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
00589e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
00589f 940e cec8 	CALL __PUTPARD1
0058a1 01fa      	MOVW R30,R20
                +
0058a2 85a5     +LDD R26 , Z + 13
0058a3 85b6     +LDD R27 , Z + 13 + 1
0058a4 8587     +LDD R24 , Z + 13 + 2
0058a5 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
0058a6 940e bc1c 	CALL SUBOPT_0x192
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
0058a8 01fa      	MOVW R30,R20
0058a9 85a0      	LDD  R26,Z+8
0058aa 93aa      	ST   -Y,R26
0058ab 940e bc20 	CALL SUBOPT_0x193
0058ad 940e cecd 	CALL __PUTPARD2
0058af 01fa      	MOVW R30,R20
                +
0058b0 85a5     +LDD R26 , Z + 13
0058b1 85b6     +LDD R27 , Z + 13 + 1
0058b2 8587     +LDD R24 , Z + 13 + 2
0058b3 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
0058b4 940e 6690 	CALL _setLogManipulateSchema
0058b6 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
0058b7 2333      	TST  R19
0058b8 f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
0058b9 e5ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
0058ba e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
0058bb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
0058bc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
0058bd 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
0058bf 940e bb9f 	CALL SUBOPT_0x17C
0058c1 e0a1      	LDI  R26,LOW(1)
0058c2 daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
0058c3 940e bb9f 	CALL SUBOPT_0x17C
0058c5 e0a0      	LDI  R26,LOW(0)
0058c6 daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
0058c7 01da      	MOVW R26,R20
0058c8 940e 9717 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
0058ca c1a7      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
0058cb 36eb      	CPI  R30,LOW(0x6B)
0058cc e0a0      	LDI  R26,HIGH(0x6B)
0058cd 07fa      	CPC  R31,R26
0058ce f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
0058cf 940e bb4d 	CALL SUBOPT_0x16F
0058d1 971c      	SBIW R26,12
0058d2 f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
0058d3 e9e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
0058d4 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
0058d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
0058d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
0058d7 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 033F                 return;
0058d9 c198      	RJMP _0x20E0077
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
0058da e0aa      	LDI  R26,LOW(10)
0058db 940e bbbf 	CALL SUBOPT_0x180
                 ; 0009 0343             if(payload == NULL){
0058dd f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
0058de 940e bbc1 	CALL SUBOPT_0x181
0058e0 940e bc25 	CALL SUBOPT_0x194
                 ; 0009 0345                 return;
0058e2 c18f      	RJMP _0x20E0077
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
0058e3 940e bc2a 	CALL SUBOPT_0x195
0058e5 940e 5fe4 	CALL _logManipulationAckParser
0058e7 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
0058e8 2333      	TST  R19
0058e9 f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
0058ea 940e bc0b 	CALL SUBOPT_0x190
                 ; 0009 034B                 free( (void *) payload );
0058ec 01da      	MOVW R26,R20
0058ed 940e 9717 	CALL _free
                 ; 0009 034C                 return;
0058ef c182      	RJMP _0x20E0077
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
0058f0 ede3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
0058f1 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
0058f2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
0058f3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
0058f4 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
0058f6 940e bbce 	CALL SUBOPT_0x184
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
0058f8 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
0058f9 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
0058fa e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
0058fb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
0058fc 940e bbd3 	CALL SUBOPT_0x185
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
0058fe 01da      	MOVW R26,R20
0058ff 940e 9717 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005901 2fa0      	MOV  R26,R16
005902 940e 678a 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005904 c16d      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005905 37ea      	CPI  R30,LOW(0x7A)
005906 e0a0      	LDI  R26,HIGH(0x7A)
005907 07fa      	CPC  R31,R26
005908 f011      	BREQ PC+3
005909 940c 5993 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
00590b 940e bb4d 	CALL SUBOPT_0x16F
00590d 971c      	SBIW R26,12
00590e f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
00590f e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005910 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005911 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005912 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005913 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005915 940e bb5d 	CALL SUBOPT_0x171
                 ; 0009 035A                 return;
005917 c15a      	RJMP _0x20E0077
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005918 e0ad      	LDI  R26,LOW(13)
005919 940e bbbf 	CALL SUBOPT_0x180
                 ; 0009 035E             if(payload == NULL){
00591b f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
00591c 940e bbc1 	CALL SUBOPT_0x181
00591e 940e bc30 	CALL SUBOPT_0x196
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005920 940e bb67 	CALL SUBOPT_0x173
                 ; 0009 0361                 return;
005922 c14f      	RJMP _0x20E0077
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005923 940e bbcc 	CALL SUBOPT_0x183
005925 940e 5ff5 	CALL _networkMaintenanceParser
005927 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005928 2333      	TST  R19
005929 f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
00592a e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
00592b e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
00592c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
00592d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
00592e 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005930 940e bb7b 	CALL SUBOPT_0x176
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005932 c13f      	RJMP _0x20E0077
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005933 e8ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005934 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005935 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005936 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005937 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005939 940e bc35 	CALL SUBOPT_0x197
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
00593b ede8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
00593c e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
00593d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
00593e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
00593f 940e bb8d 	CALL SUBOPT_0x179
005941 940e bbc8 	CALL SUBOPT_0x182
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005943 01fa      	MOVW R30,R20
005944 940e bc3a 	CALL SUBOPT_0x198
005946 f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005947 eeef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005948 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005949 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
00594a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
00594b 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
00594d 01fa      	MOVW R30,R20
00594e 85a3      	LDD  R26,Z+11
00594f 85b4      	LDD  R27,Z+12
005950 93ba      	ST   -Y,R27
005951 93aa      	ST   -Y,R26
005952 85a1      	LDD  R26,Z+9
005953 85b2      	LDD  R27,Z+10
005954 940e 92cc 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005956 e0e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005957 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005958 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005959 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
00595a 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
00595c 940e bbd9 	CALL SUBOPT_0x186
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
00595e f529      	BRNE _0x1200AE
00595f 01fa      	MOVW R30,R20
005960 85a3      	LDD  R26,Z+11
005961 85b4      	LDD  R27,Z+12
005962 940e 66a9 	CALL _setTimeSyncSchema
005964 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005965 2333      	TST  R19
005966 f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005967 e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005968 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005969 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
00596a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
00596b 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
00596d 940e bc3f 	CALL SUBOPT_0x199
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
00596f 01da      	MOVW R26,R20
005970 940e 60ca 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005972 01da      	MOVW R26,R20
005973 940e 9717 	CALL _free
                 ; 0009 037C                                             return;
005975 c0fc      	RJMP _0x20E0077
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005976 940e bb9f 	CALL SUBOPT_0x17C
005978 e0a0      	LDI  R26,LOW(0)
005979 da11      	RCALL _ETH_sendNetworkMaintenanceAck
00597a 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
00597b 2333      	TST  R19
00597c f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
00597d e3ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
00597e e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
00597f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005980 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005981 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005983 c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005984 940e bc06 	CALL SUBOPT_0x18F
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005986 940e bc3f 	CALL SUBOPT_0x199
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005988 01fa      	MOVW R30,R20
005989 940e bc3a 	CALL SUBOPT_0x198
00598b f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
00598c 01da      	MOVW R26,R20
00598d 940e 60ca 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
00598f 01da      	MOVW R26,R20
005990 940e 9717 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005992 c0df      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005993 38ea      	CPI  R30,LOW(0x8A)
005994 e0a0      	LDI  R26,HIGH(0x8A)
005995 07fa      	CPC  R31,R26
005996 f011      	BREQ PC+3
005997 940c 59fc 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005999 940e bb4d 	CALL SUBOPT_0x16F
00599b 971f      	SBIW R26,15
00599c f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
00599d e9e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
00599e e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
00599f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
0059a0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
0059a1 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
0059a3 940e bb5d 	CALL SUBOPT_0x171
                 ; 0009 0398                 return;
0059a5 c0cc      	RJMP _0x20E0077
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
0059a6 e0ad      	LDI  R26,LOW(13)
0059a7 940e bbbf 	CALL SUBOPT_0x180
                 ; 0009 039C             if(payload == NULL){
0059a9 f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
0059aa 940e bbc1 	CALL SUBOPT_0x181
0059ac 940e bc30 	CALL SUBOPT_0x196
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
0059ae 940e bb67 	CALL SUBOPT_0x173
                 ; 0009 039F                 return;
0059b0 c0c1      	RJMP _0x20E0077
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
0059b1 940e bc2a 	CALL SUBOPT_0x195
0059b3 940e 6050 	CALL _remoteDeviceControlParser
0059b5 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
0059b6 2333      	TST  R19
0059b7 f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
0059b8 ede3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
0059b9 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
0059ba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
0059bb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
0059bc 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
0059be 940e bb7b 	CALL SUBOPT_0x176
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
0059c0 c0b1      	RJMP _0x20E0077
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
0059c1 e0ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
0059c2 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
0059c3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
0059c4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
0059c5 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
0059c7 940e bc35 	CALL SUBOPT_0x197
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
0059c9 e3eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
0059ca e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
0059cb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
0059cc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
0059cd 940e bc11 	CALL SUBOPT_0x191
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
0059cf 940e bbd9 	CALL SUBOPT_0x186
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
0059d1 f511      	BRNE _0x1200BA
0059d2 01fa      	MOVW R30,R20
0059d3 940e bc20 	CALL SUBOPT_0x193
0059d5 940e 66db 	CALL _setMuteAlarm
0059d7 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
0059d8 2333      	TST  R19
0059d9 f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
0059da e5e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
0059db e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
0059dc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
0059dd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
0059de 940e bc11 	CALL SUBOPT_0x191
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
0059e0 940e bc3f 	CALL SUBOPT_0x199
                 ; 0009 03B3                                                 free( (void *) payload );
0059e2 01da      	MOVW R26,R20
0059e3 940e 9717 	CALL _free
                 ; 0009 03B4                                                 return;
0059e5 c08c      	RJMP _0x20E0077
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
0059e6 940e bb9f 	CALL SUBOPT_0x17C
0059e8 e0a0      	LDI  R26,LOW(0)
0059e9 d9bd      	RCALL _ETH_remoteDeviceControlAck
0059ea 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
0059eb 2333      	TST  R19
0059ec f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
0059ed e8e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
0059ee e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
0059ef e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
0059f0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
0059f1 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
0059f3 c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
0059f4 940e bc06 	CALL SUBOPT_0x18F
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
0059f6 940e bc3f 	CALL SUBOPT_0x199
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
0059f8 01da      	MOVW R26,R20
0059f9 940e 9717 	CALL _free
                 ; 0009 03C5             break;
0059fb c076      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
0059fc 39eb      	CPI  R30,LOW(0x9B)
0059fd e0a0      	LDI  R26,HIGH(0x9B)
0059fe 07fa      	CPC  R31,R26
0059ff f011      	BREQ PC+3
005a00 940c 5a5e 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005a02 940e bb4d 	CALL SUBOPT_0x16F
005a04 971c      	SBIW R26,12
005a05 f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005a06 eded     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005a07 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005a08 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005a09 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005a0a 940e bb54 	CALL SUBOPT_0x170
                 ; 0009 03C9                 return;
005a0c c065      	RJMP _0x20E0077
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005a0d e0aa      	LDI  R26,LOW(10)
005a0e 940e bbbf 	CALL SUBOPT_0x180
                 ; 0009 03CD             if(payload == NULL){
005a10 f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005a11 940e bbc1 	CALL SUBOPT_0x181
005a13 940e bc25 	CALL SUBOPT_0x194
                 ; 0009 03CF                 return;
005a15 c05c      	RJMP _0x20E0077
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005a16 940e bc2a 	CALL SUBOPT_0x195
005a18 940e 6099 	CALL _clearListParser
005a1a 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005a1b 2333      	TST  R19
005a1c f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005a1d e1e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005a1e e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005a1f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005a20 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005a21 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005a23 01da      	MOVW R26,R20
005a24 940e 9717 	CALL _free
                 ; 0009 03D6                 return;
005a26 c04b      	RJMP _0x20E0077
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005a27 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005a28 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005a29 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005a2a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005a2b 940e bb82 	CALL SUBOPT_0x177
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005a2d 940e bc35 	CALL SUBOPT_0x197
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005a2f e6ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005a30 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005a31 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005a32 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005a33 940e bbd3 	CALL SUBOPT_0x185
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005a35 01fa      	MOVW R30,R20
005a36 940e bc43 	CALL SUBOPT_0x19A
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005a38 30e1      	CPI  R30,LOW(0x1)
005a39 e0a0      	LDI  R26,HIGH(0x1)
005a3a 07fa      	CPC  R31,R26
005a3b f4c1      	BRNE _0x1200C5
005a3c 01fa      	MOVW R30,R20
005a3d 85e1      	LDD  R30,Z+9
005a3e 30e0      	CPI  R30,0
005a3f f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005a40 e8e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005a41 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005a42 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005a43 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005a44 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005a46 e0e1      	LDI  R30,LOW(1)
005a47 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005a49 01da      	MOVW R26,R20
005a4a 940e 9717 	CALL _free
                 ; 0009 03E3                                         return;
005a4c c025      	RJMP _0x20E0077
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005a4d ece3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005a4e e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005a4f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005a50 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005a51 940e bbd3 	CALL SUBOPT_0x185
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005a53 c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005a54 e0e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005a55 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005a56 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005a57 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005a58 940e bb87 	CALL SUBOPT_0x178
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005a5a 01da      	MOVW R26,R20
005a5b 940e 9717 	CALL _free
                 ; 0009 03F2             break;
005a5d c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005a5e 3fea      	CPI  R30,LOW(0xFA)
005a5f e0a0      	LDI  R26,HIGH(0xFA)
005a60 07fa      	CPC  R31,R26
005a61 f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005a62 e4e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005a63 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005a64 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005a65 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005a66 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005a68 c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005a69 e8e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005a6a e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005a6b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005a6c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005a6d 940e cec8 	CALL __PUTPARD1
005a6f 2fe1      	MOV  R30,R17
005a70 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E0077:
005a72 940e cf3f 	CALL __LOADLOCR6
005a74 96e0      	ADIW R28,48
005a75 5fde      	SUBI R29,-2
005a76 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005a77 940e bc46 	CALL SUBOPT_0x19B
005a79 940e cf38 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005a7b 940e b216 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005a7d efa4      	LDI  R26,LOW(500)
005a7e e0b1      	LDI  R27,HIGH(500)
005a7f 940e 96fc 	CALL _malloc
005a81 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005a82 2e00      	MOV  R0,R16
005a83 2a01      	OR   R0,R17
005a84 f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005a85 ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005a86 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005a87 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005a88 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005a89 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005a8b 2e00      	MOV  R0,R16
005a8c 2a01      	OR   R0,R17
005a8d f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005a8e 931a      	ST   -Y,R17
005a8f 930a      	ST   -Y,R16
005a90 efe3      	LDI  R30,LOW(499)
005a91 e0f1      	LDI  R31,HIGH(499)
005a92 940e bc4d 	CALL SUBOPT_0x19C
005a94 940e 3d9e 	CALL _read_uart0
005a96 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005a97 2400      	CLR  R0
005a98 1602      	CP   R0,R18
005a99 0603      	CPC  R0,R19
005a9a f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005a9b c070      	RJMP _0x20E0076
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B     printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 _0x1200CC:
                +
005a9c edea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4850 ) )
005a9d e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4850 ) )
005a9e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4850 ) )
005a9f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4850 ) )
                 	__POINTD1FN _0x120000,4850
005aa0 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 041C     print_payload(ptr,size);
005aa2 931a      	ST   -Y,R17
005aa3 930a      	ST   -Y,R16
005aa4 01d9      	MOVW R26,R18
005aa5 940e 92cc 	CALL _print_payload
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005aa7 01fa      	MOVW R30,R20
005aa8 940e bc52 	CALL SUBOPT_0x19D
                +
005aaa e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005aab e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005aac 940e 97af 	CALL _strcspn
                +
005aae 0f4e     +ADD R20 , R30
005aaf 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005ab0 1724     +CP R18 , R20
005ab1 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005ab2 f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005ab3 c058      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005ab4 01fa      	MOVW R30,R20
005ab5 9631      	ADIW R30,1
005ab6 0fe0      	ADD  R30,R16
005ab7 1ff1      	ADC  R31,R17
005ab8 81e0      	LD   R30,Z
005ab9 e0f0      	LDI  R31,0
005aba 2ffe      	MOV  R31,R30
005abb e0e0      	LDI  R30,0
005abc 87e8      	STD  Y+8,R30
005abd 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005abe 01fa      	MOVW R30,R20
005abf 940e b97b 	CALL SUBOPT_0x124
005ac1 85a8      	LDD  R26,Y+8
005ac2 85b9      	LDD  R27,Y+8+1
005ac3 940e bc57 	CALL SUBOPT_0x19E
005ac5 940e bbee 	CALL SUBOPT_0x18A
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005ac7 940e bc5b 	CALL SUBOPT_0x19F
005ac9 83ee      	STD  Y+6,R30
005aca 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005acb 81ae      	LDD  R26,Y+6
005acc 81bf      	LDD  R27,Y+6+1
005acd 172a      	CP   R18,R26
005ace 073b      	CPC  R19,R27
005acf f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005ad0 5f4f     +SUBI R20 , LOW ( - 1 )
005ad1 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005ad2 834e     +STD Y + 6 , R20
005ad3 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005ad4 efed     +LDI R30 , LOW ( 2 * _0x120000 + ( 4885 ) )
005ad5 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4885 ) )
005ad6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4885 ) )
005ad7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4885 ) )
                 	__POINTD1FN _0x120000,4885
005ad8 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005ada c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005adb 01fa      	MOVW R30,R20
005adc 9633      	ADIW R30,3
005add 940e bc52 	CALL SUBOPT_0x19D
005adf 85aa      	LDD  R26,Y+10
005ae0 85bb      	LDD  R27,Y+10+1
005ae1 d0d7      	RCALL _ETH_checksum
005ae2 010f      	MOVW R0,R30
005ae3 01fa      	MOVW R30,R20
005ae4 9633      	ADIW R30,3
005ae5 85a8      	LDD  R26,Y+8
005ae6 85b9      	LDD  R27,Y+8+1
005ae7 0fea      	ADD  R30,R26
005ae8 1ffb      	ADC  R31,R27
005ae9 0fe0      	ADD  R30,R16
005aea 1ff1      	ADC  R31,R17
005aeb 81e0      	LD   R30,Z
005aec 940e bc60 	CALL SUBOPT_0x1A0
005aee f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005aef e1e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4906 ) )
005af0 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4906 ) )
005af1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4906 ) )
005af2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4906 ) )
                 	__POINTD1FN _0x120000,4906
005af3 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005af5 5f4f     +SUBI R20 , LOW ( - 1 )
005af6 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005af7 834e     +STD Y + 6 , R20
005af8 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005af9 c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005afa 01fa      	MOVW R30,R20
005afb 9633      	ADIW R30,3
005afc 940e bc52 	CALL SUBOPT_0x19D
005afe 85aa      	LDD  R26,Y+10
005aff 85bb      	LDD  R27,Y+10+1
005b00 da72      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005b01 85e8      	LDD  R30,Y+8
005b02 85f9      	LDD  R31,Y+8+1
005b03 9633      	ADIW R30,3
                +
005b04 0f4e     +ADD R20 , R30
005b05 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005b06 81ae      	LDD  R26,Y+6
005b07 81bf      	LDD  R27,Y+6+1
005b08 17a2      	CP   R26,R18
005b09 07b3      	CPC  R27,R19
005b0a f40c      	BRGE _0x1200CF
005b0b cf9b      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E0076:
005b0c 01d8      	MOVW R26,R16
005b0d 940e 9717 	CALL _free
                 ; 0009 0445 }
005b0f 940e cf3f 	CALL __LOADLOCR6
005b11 962a      	ADIW R28,10
005b12 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005b13 940e bc65 	CALL SUBOPT_0x1A1
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005b15 e040     +LDI R20 , LOW ( 0 )
005b16 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005b17 85e9      	LDD  R30,Y+9
005b18 85fa      	LDD  R31,Y+9+1
005b19 9631      	ADIW R30,1
005b1a 87e9      	STD  Y+9,R30
005b1b 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005b1c 9634      	ADIW R30,4
005b1d 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005b1e 3f45     +CPI R20 , LOW ( 501 )
005b1f e0e1     +LDI R30 , HIGH ( 501 )
005b20 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005b21 f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005b22 e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4937 ) )
005b23 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4937 ) )
005b24 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4937 ) )
005b25 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4937 ) )
                 	__POINTD1FN _0x120000,4937
005b26 940e b41c 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005b28 efef      	LDI  R30,LOW(65535)
005b29 efff      	LDI  R31,HIGH(65535)
005b2a c08a      	RJMP _0x20E0075
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005b2b 01da      	MOVW R26,R20
005b2c 940e 96fc 	CALL _malloc
005b2e 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005b2f 2e02      	MOV  R0,R18
005b30 2a03      	OR   R0,R19
005b31 f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005b32 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4989 ) )
005b33 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4989 ) )
005b34 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4989 ) )
005b35 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4989 ) )
                 	__POINTD1FN _0x120000,4989
005b36 940e b41c 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005b38 efef      	LDI  R30,LOW(65535)
005b39 efff      	LDI  R31,HIGH(65535)
005b3a c07a      	RJMP _0x20E0075
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005b3b 933a      	ST   -Y,R19
005b3c 932a      	ST   -Y,R18
005b3d e0e0      	LDI  R30,LOW(0)
005b3e 93ea      	ST   -Y,R30
005b3f 01da      	MOVW R26,R20
005b40 940e 977e 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005b42 01d9      	MOVW R26,R18
005b43 e7ee      	LDI  R30,LOW(126)
005b44 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005b45 85e9      	LDD  R30,Y+9
005b46 85fa      	LDD  R31,Y+9+1
005b47 940e cda8 	CALL __ASRW8
                +
005b49 01d9     +MOVW R26 , R18
005b4a 9611     +ADIW R26 , 1
005b4b 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005b4c 85e9      	LDD  R30,Y+9
                +
005b4d 01d9     +MOVW R26 , R18
005b4e 9612     +ADIW R26 , 2
005b4f 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005b50 85e8      	LDD  R30,Y+8
005b51 30e0      	CPI  R30,0
005b52 f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005b53 940e 6811 	CALL _ETH_generateId
005b55 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005b56 85e8      	LDD  R30,Y+8
                +
005b57 01d9     +MOVW R26 , R18
005b58 9613     +ADIW R26 , 3
005b59 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005b5a 01f9      	MOVW R30,R18
005b5b 9634      	ADIW R30,4
005b5c 93fa      	ST   -Y,R31
005b5d 93ea      	ST   -Y,R30
005b5e 85ed      	LDD  R30,Y+13
005b5f 85fe      	LDD  R31,Y+13+1
005b60 93fa      	ST   -Y,R31
005b61 93ea      	ST   -Y,R30
005b62 85ad      	LDD  R26,Y+13
005b63 85be      	LDD  R27,Y+13+1
005b64 940e 9739 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005b66 01fa      	MOVW R30,R20
005b67 9731      	SBIW R30,1
005b68 0fe2      	ADD  R30,R18
005b69 1ff3      	ADC  R31,R19
005b6a 93ff      	PUSH R31
005b6b 93ef      	PUSH R30
005b6c 01f9      	MOVW R30,R18
005b6d 9633      	ADIW R30,3
005b6e 93fa      	ST   -Y,R31
005b6f 93ea      	ST   -Y,R30
005b70 85ab      	LDD  R26,Y+11
005b71 85bc      	LDD  R27,Y+11+1
005b72 d046      	RCALL _ETH_checksum
005b73 91af      	POP  R26
005b74 91bf      	POP  R27
005b75 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005b76 81ae      	LDD  R26,Y+6
005b77 81bf      	LDD  R27,Y+6+1
005b78 940e cf20 	CALL __CPW02
005b7a f41c      	BRGE _0x1200D9
005b7b 85a8      	LDD  R26,Y+8
005b7c 3faf      	CPI  R26,LOW(0xFF)
005b7d f409      	BRNE _0x1200DA
                 _0x1200D9:
005b7e c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005b7f 85e8      	LDD  R30,Y+8
005b80 93ea      	ST   -Y,R30
005b81 933a      	ST   -Y,R19
005b82 932a      	ST   -Y,R18
005b83 935a      	ST   -Y,R21
005b84 934a      	ST   -Y,R20
005b85 85ab      	LDD  R26,Y+11
005b86 85bc      	LDD  R27,Y+11+1
005b87 940e 6721 	CALL _ETH_addWaitQueue
005b89 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005b8a 2311      	TST  R17
005b8b f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005b8c e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5040 ) )
005b8d e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5040 ) )
005b8e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5040 ) )
005b8f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5040 ) )
                 	__POINTD1FN _0x120000,5040
005b90 940e cec8 	CALL __PUTPARD1
005b92 85ec      	LDD  R30,Y+12
005b93 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 0472             free(sendPacket);
005b95 01d9      	MOVW R26,R18
005b96 940e b424 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005b98 c01c      	RJMP _0x20E0075
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C     printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 _0x1200D8:
                +
005b99 eceb     +LDI R30 , LOW ( 2 * _0x120000 + ( 5091 ) )
005b9a e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5091 ) )
005b9b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5091 ) )
005b9c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5091 ) )
                 	__POINTD1FN _0x120000,5091
005b9d 940e cec8 	CALL __PUTPARD1
005b9f 85ec      	LDD  R30,Y+12
005ba0 940e b342 	CALL SUBOPT_0x2A
                 ; 0009 047D     print_payload(sendPacket,packetLen);
005ba2 933a      	ST   -Y,R19
005ba3 932a      	ST   -Y,R18
005ba4 01da      	MOVW R26,R20
005ba5 940e 92cc 	CALL _print_payload
                 ; 0009 047E 
                 ; 0009 047F     write_uart0(sendPacket,packetLen);
005ba7 933a      	ST   -Y,R19
005ba8 932a      	ST   -Y,R18
005ba9 01da      	MOVW R26,R20
005baa 940e 3def 	CALL _write_uart0
                 ; 0009 0480     free(sendPacket);
005bac 01d9      	MOVW R26,R18
005bad 940e 9717 	CALL _free
                 ; 0009 0481 
                 ; 0009 0482     //printDebug("-- Completed --\r\n");
                 ; 0009 0483     delay_ms(7);
005baf 940e b26a 	CALL SUBOPT_0xA
005bb1 940e cb81 	CALL _delay_ms
                 ; 0009 0484 
                 ; 0009 0485     return 0;
005bb3 e0e0      	LDI  R30,LOW(0)
005bb4 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0075:
005bb5 940e cf3f 	CALL __LOADLOCR6
005bb7 962d      	ADIW R28,13
005bb8 9508      	RET
                 ; 0009 0486 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0489 {
                 _ETH_checksum:
                 ; 0009 048A     int i;
                 ; 0009 048B     char sum = 0;
                 ; 0009 048C 
                 ; 0009 048D     //printDebug("<checksum> \r\n");
                 ; 0009 048E     for (i=0;i<len;i++){
005bb9 940e b589 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005bbb e030      	LDI  R19,0
                +
005bbc e000     +LDI R16 , LOW ( 0 )
005bbd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005bbe 81ec      	LDD  R30,Y+4
005bbf 81fd      	LDD  R31,Y+4+1
005bc0 170e      	CP   R16,R30
005bc1 071f      	CPC  R17,R31
005bc2 f43c      	BRGE _0x1200DE
                 ; 0009 048F         sum += buf[i];
005bc3 01f8      	MOVW R30,R16
005bc4 940e bc6a 	CALL SUBOPT_0x1A2
005bc6 0f3e      	ADD  R19,R30
                 ; 0009 0490         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0491     }
                +
005bc7 5f0f     +SUBI R16 , LOW ( - 1 )
005bc8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005bc9 cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0492     return (0xff - (sum & 0xff));
005bca 2fe3      	MOV  R30,R19
005bcb 940e b663 	CALL SUBOPT_0x9D
005bcd efaf      	LDI  R26,LOW(255)
005bce e0b0      	LDI  R27,HIGH(255)
005bcf 940e cee0 	CALL __SWAPW12
005bd1 1bea      	SUB  R30,R26
005bd2 0bfb      	SBC  R31,R27
005bd3 940e cf41 	CALL __LOADLOCR4
005bd5 9628      	ADIW R28,8
005bd6 9508      	RET
                 ; 0009 0493 
                 ; 0009 0494 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049D {
                 _ETH_switchMode:
                 ; 0009 049E     if(mode == MODE_CONF){
005bd7 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005bd8 81e8      	LD   R30,Y
005bd9 30e0      	CPI  R30,0
005bda f451      	BRNE _0x1200DF
                 ; 0009 049F         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005bdb eee7     +LDI R30 , LOW ( 2 * _0x120000 + ( 5119 ) )
005bdc e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5119 ) )
005bdd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5119 ) )
005bde e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5119 ) )
                 	__POINTD1FN _0x120000,5119
005bdf 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 04A0         ETH_CONF;
005be1 91e0 0102 	LDS  R30,258
005be3 68e0      	ORI  R30,0x80
005be4 c009      	RJMP _0x12011C
                 ; 0009 04A1     }
                 ; 0009 04A2     else{
                 _0x1200DF:
                 ; 0009 04A3         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005be5 e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5160 ) )
005be6 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5160 ) )
005be7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5160 ) )
005be8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5160 ) )
                 	__POINTD1FN _0x120000,5160
005be9 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 04A4         ETH_NORM;
005beb 91e0 0102 	LDS  R30,258
005bed 77ef      	ANDI R30,0x7F
                 _0x12011C:
005bee 93e0 0102 	STS  258,R30
                 ; 0009 04A5     }
                 ; 0009 04A6 
                 ; 0009 04A7     delay_ms(5);
005bf0 940e bc70 	CALL SUBOPT_0x1A3
                 ; 0009 04A8 
                 ; 0009 04A9     ETH_current_mode = mode;
005bf2 81e8      	LD   R30,Y
005bf3 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04AA 
                 ; 0009 04AB     delay_ms(5);
005bf5 940e bc70 	CALL SUBOPT_0x1A3
                 ; 0009 04AC     ETH_OFF;
005bf7 98a4      	CBI  0x14,4
                 ; 0009 04AD     delay_ms(1500);
005bf8 edac      	LDI  R26,LOW(1500)
005bf9 e0b5      	LDI  R27,HIGH(1500)
005bfa 940e cb81 	CALL _delay_ms
                 ; 0009 04AE     ETH_ON;
005bfc 9aa4      	SBI  0x14,4
                 ; 0009 04AF     #asm("wdr")
005bfd 95a8      	wdr
                 ; 0009 04B0     delay_ms(2000);
005bfe eda0      	LDI  R26,LOW(2000)
005bff e0b7      	LDI  R27,HIGH(2000)
005c00 940e cb81 	CALL _delay_ms
                 ; 0009 04B1 
                 ; 0009 04B2     return ETH_MODE;
005c02 91e0 0102 	LDS  R30,258
005c04 78e0      	ANDI R30,LOW(0x80)
005c05 9621      	ADIW R28,1
005c06 9508      	RET
                 ; 0009 04B3 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B6 {
                 _ETH_getConfig:
                 ; 0009 04B7     TIMER   timeout;
                 ; 0009 04B8     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B9     int     i=0;
                 ; 0009 04BA 
                 ; 0009 04BB     ETH_switchMode((unsigned char) MODE_CONF);
005c07 93ba      	ST   -Y,R27
005c08 93aa      	ST   -Y,R26
005c09 9728      	SBIW R28,8
005c0a e3ee      	LDI  R30,LOW(62)
005c0b 83e8      	ST   Y,R30
005c0c e5e2      	LDI  R30,LOW(82)
005c0d 83e9      	STD  Y+1,R30
005c0e e0ed      	LDI  R30,LOW(13)
005c0f 83ea      	STD  Y+2,R30
005c10 e0e0      	LDI  R30,LOW(0)
005c11 83eb      	STD  Y+3,R30
005c12 940e b65e 	CALL SUBOPT_0x9C
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005c14 e0a0      	LDI  R26,LOW(0)
005c15 dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BC     /*
                 ; 0009 04BD     if(mode != MODE_CONF){
                 ; 0009 04BE         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BF         return -1;
                 ; 0009 04C0     }
                 ; 0009 04C1     */
                 ; 0009 04C2 
                 ; 0009 04C3     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005c16 e000     +LDI R16 , LOW ( 0 )
005c17 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005c18 3405     +CPI R16 , LOW ( 325 )
005c19 e0e1     +LDI R30 , HIGH ( 325 )
005c1a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005c1b f42c      	BRGE _0x1200E3
                 ; 0009 04C4         configRd[i] = 0x00;
005c1c 940e bc74 	CALL SUBOPT_0x1A4
                 ; 0009 04C5     }
                +
005c1e 5f0f     +SUBI R16 , LOW ( - 1 )
005c1f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005c20 cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C6     configLen       = 0;
005c21 940e b583 	CALL SUBOPT_0x7E
                 ; 0009 04C7     config_start    = 0;
005c23 940e bc77 	CALL SUBOPT_0x1A5
                 ; 0009 04C8     config_ready    = 0;
                 ; 0009 04C9     config_end      = 0;
                 ; 0009 04CA     config_response = 0;
                 ; 0009 04CB 
                 ; 0009 04CC     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005c25 e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5201 ) )
005c26 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5201 ) )
005c27 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5201 ) )
005c28 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5201 ) )
                 	__POINTD1FN _0x120000,5201
005c29 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 04CD     for(i=0;i<strlen(getInfoCmd);i++){
                +
005c2b e000     +LDI R16 , LOW ( 0 )
005c2c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005c2d 940e bc81 	CALL SUBOPT_0x1A6
005c2f f440      	BRSH _0x1200E6
                 ; 0009 04CE         putchar3(getInfoCmd[i]);
005c30 940e b962 	CALL SUBOPT_0x11F
005c32 91ac      	LD   R26,X
005c33 940e 3e61 	CALL _putchar3
                 ; 0009 04CF     }
                +
005c35 5f0f     +SUBI R16 , LOW ( - 1 )
005c36 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005c37 cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04D0     printDebug("\r\n");
005c38 940e bc88 	CALL SUBOPT_0x1A7
                 ; 0009 04D1 
                 ; 0009 04D2     for(i=0;i<strlen(getInfoCmd);i++){
                +
005c3a e000     +LDI R16 , LOW ( 0 )
005c3b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005c3c 940e bc81 	CALL SUBOPT_0x1A6
005c3e f440      	BRSH _0x1200E9
                 ; 0009 04D3         putchar0(getInfoCmd[i]);
005c3f 940e b962 	CALL SUBOPT_0x11F
005c41 91ac      	LD   R26,X
005c42 940e 3d95 	CALL _putchar0
                 ; 0009 04D4     }
                +
005c44 5f0f     +SUBI R16 , LOW ( - 1 )
005c45 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005c46 cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D5 
                 ; 0009 04D6     TIMER_setTimer(&timeout, 7);
005c47 940e b471 	CALL SUBOPT_0x56
005c49 940e bc8e 	CALL SUBOPT_0x1A8
                 ; 0009 04D7 
                 ; 0009 04D8     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005c4b 91e0 10f1 	LDS  R30,_config_ready
005c4d 30e0      	CPI  R30,0
005c4e f431      	BRNE _0x1200ED
005c4f 940e b48c 	CALL SUBOPT_0x59
005c51 940e 3edb 	CALL _TIMER_checkTimerExceed
005c53 9730      	SBIW R30,0
005c54 f009      	BREQ _0x1200EE
                 _0x1200ED:
005c55 c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D9        delay_ms(50);
005c56 940e b560 	CALL SUBOPT_0x7A
                 ; 0009 04DA        #asm("wdr")
005c58 95a8      	wdr
                 ; 0009 04DB     }
005c59 cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DC 
                 ; 0009 04DD     memcpy(ptr,&configRd[0],configLen);
005c5a 940e bc94 	CALL SUBOPT_0x1A9
005c5c 940e bc99 	CALL SUBOPT_0x1AA
                 ; 0009 04DE 
                 ; 0009 04DF     *buflen    = configLen;
005c5e 91e0 10ee 	LDS  R30,_configLen
005c60 91f0 10ef 	LDS  R31,_configLen+1
005c62 85aa      	LDD  R26,Y+10
005c63 85bb      	LDD  R27,Y+10+1
005c64 93ed      	ST   X+,R30
005c65 93fc      	ST   X,R31
                 ; 0009 04E0 
                 ; 0009 04E1     ETH_switchMode(MODE_NORM);
005c66 e8a0      	LDI  R26,LOW(128)
005c67 df6f      	RCALL _ETH_switchMode
                 ; 0009 04E2 
                 ; 0009 04E3     /*
                 ; 0009 04E4     if(mode != MODE_NORM){
                 ; 0009 04E5         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E6         return -1;
                 ; 0009 04E7     }
                 ; 0009 04E8     */
                 ; 0009 04E9 
                 ; 0009 04EA     if(config_response == 'S'){
005c68 91a0 10f3 	LDS  R26,_config_response
005c6a 35a3      	CPI  R26,LOW(0x53)
005c6b f419      	BRNE _0x1200EF
                 ; 0009 04EB         return 0;
005c6c e0e0      	LDI  R30,LOW(0)
005c6d e0f0      	LDI  R31,HIGH(0)
005c6e c002      	RJMP _0x20E0074
                 ; 0009 04EC     }
                 ; 0009 04ED     else{
                 _0x1200EF:
                 ; 0009 04EE         return -1;
005c6f efef      	LDI  R30,LOW(65535)
005c70 efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EF     }
                 ; 0009 04F0 }
                 _0x20E0074:
005c71 8119      	LDD  R17,Y+1
005c72 8108      	LDD  R16,Y+0
005c73 962e      	ADIW R28,14
005c74 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F3 {
                 _ETH_setConfig:
                 ; 0009 04F4     TIMER   timeout;
                 ; 0009 04F5     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F6     char    setInfoCmd[] = ">W";
                 ; 0009 04F7     int     i=0;
                 ; 0009 04F8     char    setStr[30];
                 ; 0009 04F9     int     readLen=0;
                 ; 0009 04FA     char    *ptr;
                 ; 0009 04FB 
                 ; 0009 04FC     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005c75 93ba      	ST   -Y,R27
005c76 93aa      	ST   -Y,R26
005c77 97a9      	SBIW R28,41
005c78 e3ee      	LDI  R30,LOW(62)
005c79 8fee      	STD  Y+30,R30
005c7a e5e7      	LDI  R30,LOW(87)
005c7b 8fef      	STD  Y+31,R30
005c7c e0e0      	LDI  R30,LOW(0)
005c7d a3e8      	STD  Y+32,R30
005c7e e3ee      	LDI  R30,LOW(62)
005c7f a3e9      	STD  Y+33,R30
005c80 e5e2      	LDI  R30,LOW(82)
005c81 a3ea      	STD  Y+34,R30
005c82 e0ed      	LDI  R30,LOW(13)
005c83 a3eb      	STD  Y+35,R30
005c84 e0e0      	LDI  R30,LOW(0)
005c85 a3ec      	STD  Y+36,R30
005c86 940e b40f 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005c88 e020     +LDI R18 , LOW ( 0 )
005c89 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005c8a e4a5      	LDI  R26,LOW(325)
005c8b e0b1      	LDI  R27,HIGH(325)
005c8c 940e bb61 	CALL SUBOPT_0x172
                 ; 0009 04FD     if(ptr == NULL){
005c8e f449      	BRNE _0x1200F1
                 ; 0009 04FE         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005c8f e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 5235 ) )
005c90 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5235 ) )
005c91 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5235 ) )
005c92 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5235 ) )
                 	__POINTD1FN _0x120000,5235
005c93 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 04FF         return -1;
005c95 efef      	LDI  R30,LOW(65535)
005c96 efff      	LDI  R31,HIGH(65535)
005c97 c1c7      	RJMP _0x20E0073
                 ; 0009 0500     }
                 ; 0009 0501 
                 ; 0009 0502     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005c98 e0a0      	LDI  R26,LOW(0)
005c99 df3d      	RCALL _ETH_switchMode
                 ; 0009 0503 
                 ; 0009 0504     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0505     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005c9a e000     +LDI R16 , LOW ( 0 )
005c9b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005c9c 3405     +CPI R16 , LOW ( 325 )
005c9d e0e1     +LDI R30 , HIGH ( 325 )
005c9e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005c9f f42c      	BRGE _0x1200F4
                 ; 0009 0506         configRd[i] = 0x00;
005ca0 940e bc74 	CALL SUBOPT_0x1A4
                 ; 0009 0507     }
                +
005ca2 5f0f     +SUBI R16 , LOW ( - 1 )
005ca3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ca4 cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0508     configLen       = 0;
005ca5 940e b583 	CALL SUBOPT_0x7E
                 ; 0009 0509     config_start    = 0;
005ca7 940e bc77 	CALL SUBOPT_0x1A5
                 ; 0009 050A     config_ready    = 0;
                 ; 0009 050B     config_end      = 0;
                 ; 0009 050C     config_response = 0;
                 ; 0009 050D 
                 ; 0009 050E     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005ca9 e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 5285 ) )
005caa e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5285 ) )
005cab e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5285 ) )
005cac e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5285 ) )
                 	__POINTD1FN _0x120000,5285
005cad 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 050F     for(i=0;i<strlen(getInfoCmd);i++){
                +
005caf e000     +LDI R16 , LOW ( 0 )
005cb0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005cb1 940e bca0 	CALL SUBOPT_0x1AB
005cb3 f450      	BRSH _0x1200F7
                 ; 0009 0510         putchar3(getInfoCmd[i]);
005cb4 01de      	MOVW R26,R28
005cb5 9697      	ADIW R26,39
005cb6 0fa0      	ADD  R26,R16
005cb7 1fb1      	ADC  R27,R17
005cb8 91ac      	LD   R26,X
005cb9 940e 3e61 	CALL _putchar3
                 ; 0009 0511     }
                +
005cbb 5f0f     +SUBI R16 , LOW ( - 1 )
005cbc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005cbd cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0512     printDebug("\r\n");
005cbe 940e bc88 	CALL SUBOPT_0x1A7
                 ; 0009 0513 
                 ; 0009 0514     for(i=0;i<strlen(getInfoCmd);i++){
                +
005cc0 e000     +LDI R16 , LOW ( 0 )
005cc1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005cc2 940e bca0 	CALL SUBOPT_0x1AB
005cc4 f450      	BRSH _0x1200FA
                 ; 0009 0515         putchar0(getInfoCmd[i]);
005cc5 01de      	MOVW R26,R28
005cc6 9697      	ADIW R26,39
005cc7 0fa0      	ADD  R26,R16
005cc8 1fb1      	ADC  R27,R17
005cc9 91ac      	LD   R26,X
005cca 940e 3d95 	CALL _putchar0
                 ; 0009 0516     }
                +
005ccc 5f0f     +SUBI R16 , LOW ( - 1 )
005ccd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005cce cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0517 
                 ; 0009 0518     TIMER_setTimer(&timeout, 7);
005ccf 01fe      	MOVW R30,R28
005cd0 96bb      	ADIW R30,43
005cd1 93fa      	ST   -Y,R31
005cd2 93ea      	ST   -Y,R30
005cd3 940e bc8e 	CALL SUBOPT_0x1A8
                 ; 0009 0519 
                 ; 0009 051A     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005cd5 91e0 10f1 	LDS  R30,_config_ready
005cd7 30e0      	CPI  R30,0
005cd8 f419      	BRNE _0x1200FE
005cd9 940e bca7 	CALL SUBOPT_0x1AC
005cdb f009      	BREQ _0x1200FF
                 _0x1200FE:
005cdc c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051B        delay_ms(50);
005cdd 940e b560 	CALL SUBOPT_0x7A
                 ; 0009 051C        #asm("wdr")
005cdf 95a8      	wdr
                 ; 0009 051D     }
005ce0 cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051E 
                 ; 0009 051F     memcpy(ptr,&configRd[0],configLen);
005ce1 935a      	ST   -Y,R21
005ce2 934a      	ST   -Y,R20
005ce3 940e bc99 	CALL SUBOPT_0x1AA
                 ; 0009 0520     readLen = configLen;
                +
005ce5 9120 10ee+LDS R18 , 0 + ( _configLen )
005ce7 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0521 
                 ; 0009 0522     if(config_response != 'S'){
005ce9 91a0 10f3 	LDS  R26,_config_response
005ceb 35a3      	CPI  R26,LOW(0x53)
005cec f051      	BREQ _0x120100
                 ; 0009 0523         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005ced eaef     +LDI R30 , LOW ( 2 * _0x120000 + ( 5319 ) )
005cee e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5319 ) )
005cef e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5319 ) )
005cf0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5319 ) )
                 	__POINTD1FN _0x120000,5319
005cf1 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0524         free( ptr );
005cf3 01da      	MOVW R26,R20
005cf4 940e b424 	CALL SUBOPT_0x4A
                 ; 0009 0525         return -1;
005cf6 c168      	RJMP _0x20E0073
                 ; 0009 0526     }
                 ; 0009 0527 
                 ; 0009 0528     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0529     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 052A                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052B                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052C                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052D                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052E                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052F                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 0530                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0531                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0532                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0533                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0534                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0535                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005cf7 940e b471 	CALL SUBOPT_0x56
                +
005cf9 eee4     +LDI R30 , LOW ( 2 * _0x120000 + ( 5372 ) )
005cfa e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5372 ) )
005cfb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5372 ) )
005cfc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5372 ) )
                 	__POINTD1FN _0x120000,5372
005cfd 940e cec8 	CALL __PUTPARD1
005cff adab      	LDD  R26,Y+59
005d00 adbc      	LDD  R27,Y+59+1
005d01 940e bcaf 	CALL SUBOPT_0x1AD
005d03 adeb      	LDD  R30,Y+59
005d04 adfc      	LDD  R31,Y+59+1
005d05 940e bcb4 	CALL SUBOPT_0x1AE
005d07 adeb      	LDD  R30,Y+59
005d08 adfc      	LDD  R31,Y+59+1
005d09 940e bcbc 	CALL SUBOPT_0x1AF
005d0b 940e bcc5 	CALL SUBOPT_0x1B0
005d0d 940e bccc 	CALL SUBOPT_0x1B1
005d0f 940e bcc5 	CALL SUBOPT_0x1B0
005d11 940e bcd1 	CALL SUBOPT_0x1B2
005d13 940e bcc5 	CALL SUBOPT_0x1B0
005d15 940e bcd9 	CALL SUBOPT_0x1B3
005d17 940e bce2 	CALL SUBOPT_0x1B4
005d19 940e bce9 	CALL SUBOPT_0x1B5
005d1b 940e bce2 	CALL SUBOPT_0x1B4
005d1d 940e bcee 	CALL SUBOPT_0x1B6
005d1f 940e bce2 	CALL SUBOPT_0x1B4
005d21 940e bc43 	CALL SUBOPT_0x19A
005d23 940e bcf6 	CALL SUBOPT_0x1B7
005d25 940e bcfd 	CALL SUBOPT_0x1B8
005d27 940e bd04 	CALL SUBOPT_0x1B9
005d29 940e bcfd 	CALL SUBOPT_0x1B8
005d2b 940e bd09 	CALL SUBOPT_0x1BA
005d2d 940e bcfd 	CALL SUBOPT_0x1B8
005d2f 940e bd11 	CALL SUBOPT_0x1BB
                +
005d31 01de     +MOVW R26 , R28
005d32 5ba7     +SUBI R26 , LOW ( - 73 )
005d33 4fbf     +SBCI R27 , HIGH ( - 73 )
005d34 900d     +LD R0 , X +
005d35 91bc     +LD R27 , X
005d36 2da0     +MOV R26 , R0
                 	__GETW2SX 73
005d37 940e bcaf 	CALL SUBOPT_0x1AD
005d39 940e bd14 	CALL SUBOPT_0x1BC
005d3b 940e bcb4 	CALL SUBOPT_0x1AE
005d3d 940e bd14 	CALL SUBOPT_0x1BC
005d3f 940e bcbc 	CALL SUBOPT_0x1AF
005d41 940e bd1b 	CALL SUBOPT_0x1BD
005d43 940e bccc 	CALL SUBOPT_0x1B1
005d45 940e bd1b 	CALL SUBOPT_0x1BD
005d47 940e bcd1 	CALL SUBOPT_0x1B2
005d49 940e bd1b 	CALL SUBOPT_0x1BD
005d4b 940e bcd9 	CALL SUBOPT_0x1B3
005d4d 940e bd22 	CALL SUBOPT_0x1BE
005d4f 940e bce9 	CALL SUBOPT_0x1B5
005d51 940e bd22 	CALL SUBOPT_0x1BE
005d53 940e bcee 	CALL SUBOPT_0x1B6
005d55 940e bd22 	CALL SUBOPT_0x1BE
005d57 940e bc43 	CALL SUBOPT_0x19A
005d59 940e bcf6 	CALL SUBOPT_0x1B7
005d5b 940e bd29 	CALL SUBOPT_0x1BF
005d5d 940e bd04 	CALL SUBOPT_0x1B9
005d5f 940e bd29 	CALL SUBOPT_0x1BF
005d61 940e bd09 	CALL SUBOPT_0x1BA
005d63 940e bd29 	CALL SUBOPT_0x1BF
005d65 940e bd11 	CALL SUBOPT_0x1BB
                +
005d67 01de     +MOVW R26 , R28
005d68 5aa9     +SUBI R26 , LOW ( - 87 )
005d69 4fbf     +SBCI R27 , HIGH ( - 87 )
005d6a 900d     +LD R0 , X +
005d6b 91bc     +LD R27 , X
005d6c 2da0     +MOV R26 , R0
                 	__GETW2SX 87
005d6d 940e bcaf 	CALL SUBOPT_0x1AD
005d6f 940e b32a 	CALL SUBOPT_0x27
005d71 940e bcb4 	CALL SUBOPT_0x1AE
005d73 940e b32a 	CALL SUBOPT_0x27
005d75 940e bcbc 	CALL SUBOPT_0x1AF
005d77 940e bd30 	CALL SUBOPT_0x1C0
005d79 940e bccc 	CALL SUBOPT_0x1B1
005d7b 940e bd30 	CALL SUBOPT_0x1C0
005d7d 940e bcd1 	CALL SUBOPT_0x1B2
005d7f 940e bd30 	CALL SUBOPT_0x1C0
005d81 940e bcd9 	CALL SUBOPT_0x1B3
005d83 940e bd37 	CALL SUBOPT_0x1C1
005d85 940e bce9 	CALL SUBOPT_0x1B5
005d87 940e bd37 	CALL SUBOPT_0x1C1
005d89 940e bcee 	CALL SUBOPT_0x1B6
005d8b 940e bd37 	CALL SUBOPT_0x1C1
005d8d 940e bc43 	CALL SUBOPT_0x19A
005d8f 940e bcf6 	CALL SUBOPT_0x1B7
005d91 940e bd3e 	CALL SUBOPT_0x1C2
005d93 940e bd04 	CALL SUBOPT_0x1B9
005d95 940e bd3e 	CALL SUBOPT_0x1C2
005d97 940e bd09 	CALL SUBOPT_0x1BA
005d99 940e bd3e 	CALL SUBOPT_0x1C2
005d9b 940e bd11 	CALL SUBOPT_0x1BB
005d9d e380      	LDI  R24,48
005d9e 940e b13c 	CALL _sprintf
005da0 96e6      	ADIW R28,54
                 ; 0009 0536 
                 ; 0009 0537     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005da1 940e bd45 	CALL SUBOPT_0x1C3
005da3 940e b29d 	CALL SUBOPT_0x12
                 ; 0009 0538 
                 ; 0009 0539     memcpy((ptr+14),&setStr[0],24);
005da5 01fa      	MOVW R30,R20
005da6 963e      	ADIW R30,14
005da7 940e bd4f 	CALL SUBOPT_0x1C4
005da9 e1a8      	LDI  R26,LOW(24)
005daa 940e bd56 	CALL SUBOPT_0x1C5
                 ; 0009 053A 
                 ; 0009 053B     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053C                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053D                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053E                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053F                 (server[9]*100) + (server[10]*10) + server[11]);
005dac 940e b471 	CALL SUBOPT_0x56
                +
005dae e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 5404 ) )
005daf e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5404 ) )
005db0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5404 ) )
005db1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5404 ) )
                 	__POINTD1FN _0x120000,5404
005db2 940e cec8 	CALL __PUTPARD1
005db4 a9ad      	LDD  R26,Y+53
005db5 a9be      	LDD  R27,Y+53+1
005db6 940e bcaf 	CALL SUBOPT_0x1AD
005db8 a9ed      	LDD  R30,Y+53
005db9 a9fe      	LDD  R31,Y+53+1
005dba 940e bcb4 	CALL SUBOPT_0x1AE
005dbc a9ed      	LDD  R30,Y+53
005dbd a9fe      	LDD  R31,Y+53+1
005dbe 940e bcbc 	CALL SUBOPT_0x1AF
005dc0 ade9      	LDD  R30,Y+57
005dc1 adfa      	LDD  R31,Y+57+1
005dc2 940e bccc 	CALL SUBOPT_0x1B1
005dc4 ade9      	LDD  R30,Y+57
005dc5 adfa      	LDD  R31,Y+57+1
005dc6 940e bcd1 	CALL SUBOPT_0x1B2
005dc8 ade9      	LDD  R30,Y+57
005dc9 adfa      	LDD  R31,Y+57+1
005dca 940e bcd9 	CALL SUBOPT_0x1B3
005dcc aded      	LDD  R30,Y+61
005dcd adfe      	LDD  R31,Y+61+1
005dce 940e bce9 	CALL SUBOPT_0x1B5
005dd0 aded      	LDD  R30,Y+61
005dd1 adfe      	LDD  R31,Y+61+1
005dd2 940e bcee 	CALL SUBOPT_0x1B6
005dd4 aded      	LDD  R30,Y+61
005dd5 adfe      	LDD  R31,Y+61+1
005dd6 940e bc43 	CALL SUBOPT_0x19A
005dd8 940e bcf6 	CALL SUBOPT_0x1B7
005dda 940e bd59 	CALL SUBOPT_0x1C6
005ddc 940e bd04 	CALL SUBOPT_0x1B9
005dde 940e bd59 	CALL SUBOPT_0x1C6
005de0 940e bd09 	CALL SUBOPT_0x1BA
005de2 940e bd59 	CALL SUBOPT_0x1C6
005de4 940e bd11 	CALL SUBOPT_0x1BB
005de6 e180      	LDI  R24,16
005de7 940e b13c 	CALL _sprintf
005de9 9666      	ADIW R28,22
                 ; 0009 0540 
                 ; 0009 0541     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005dea 940e bd45 	CALL SUBOPT_0x1C3
005dec 940e b29d 	CALL SUBOPT_0x12
                 ; 0009 0542 
                 ; 0009 0543     memcpy((ptr+42),&setStr[0],8);
005dee 01fa      	MOVW R30,R20
005def 96ba      	ADIW R30,42
005df0 940e bd4f 	CALL SUBOPT_0x1C4
005df2 e0a8      	LDI  R26,LOW(8)
005df3 940e bd56 	CALL SUBOPT_0x1C5
                 ; 0009 0544 
                 ; 0009 0545 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0546 //    for(i=0;i<configLen;i++){
                 ; 0009 0547 //        putchar3(ptr[i]);
                 ; 0009 0548 //    }
                 ; 0009 0549 //    printDebug("\r\n\---\r\n");
                 ; 0009 054A 
                 ; 0009 054B     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054C     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005df5 e000     +LDI R16 , LOW ( 0 )
005df6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
005df7 3405     +CPI R16 , LOW ( 325 )
005df8 e0e1     +LDI R30 , HIGH ( 325 )
005df9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005dfa f42c      	BRGE _0x120103
                 ; 0009 054D         configRd[i] = 0x00;
005dfb 940e bc74 	CALL SUBOPT_0x1A4
                 ; 0009 054E     }
                +
005dfd 5f0f     +SUBI R16 , LOW ( - 1 )
005dfe 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005dff cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054F     configLen       = 0;
005e00 940e b583 	CALL SUBOPT_0x7E
                 ; 0009 0550     config_start    = 0;
005e02 940e bc77 	CALL SUBOPT_0x1A5
                 ; 0009 0551     config_ready    = 0;
                 ; 0009 0552     config_end      = 0;
                 ; 0009 0553     config_response = 0;
                 ; 0009 0554 
                 ; 0009 0555     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
005e04 e3e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 5455 ) )
005e05 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5455 ) )
005e06 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5455 ) )
005e07 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5455 ) )
                 	__POINTD1FN _0x120000,5455
005e08 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0556     for(i=0;i<strlen(setInfoCmd);i++){
                +
005e0a e000     +LDI R16 , LOW ( 0 )
005e0b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
005e0c 01de      	MOVW R26,R28
005e0d 9694      	ADIW R26,36
005e0e 940e 97c5 	CALL _strlen
005e10 170e      	CP   R16,R30
005e11 071f      	CPC  R17,R31
005e12 f488      	BRSH _0x120106
                 ; 0009 0557         putchar0(setInfoCmd[i]);
005e13 01de      	MOVW R26,R28
005e14 9694      	ADIW R26,36
005e15 0fa0      	ADD  R26,R16
005e16 1fb1      	ADC  R27,R17
005e17 91ac      	LD   R26,X
005e18 940e 3d95 	CALL _putchar0
                 ; 0009 0558         putchar3(setInfoCmd[i]);
005e1a 01de      	MOVW R26,R28
005e1b 9694      	ADIW R26,36
005e1c 0fa0      	ADD  R26,R16
005e1d 1fb1      	ADC  R27,R17
005e1e 91ac      	LD   R26,X
005e1f 940e 3e61 	CALL _putchar3
                 ; 0009 0559     }
                +
005e21 5f0f     +SUBI R16 , LOW ( - 1 )
005e22 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e23 cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 055A     for(i=12;i<readLen;i++){
                +
005e24 e00c     +LDI R16 , LOW ( 12 )
005e25 e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
005e26 1702     +CP R16 , R18
005e27 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
005e28 f47c      	BRGE _0x120109
                 ; 0009 055B         putchar0(ptr[i]);
005e29 01f8      	MOVW R30,R16
005e2a 0fe4      	ADD  R30,R20
005e2b 1ff5      	ADC  R31,R21
005e2c 81a0      	LD   R26,Z
005e2d 940e 3d95 	CALL _putchar0
                 ; 0009 055C         putchar3(ptr[i]);
005e2f 01f8      	MOVW R30,R16
005e30 0fe4      	ADD  R30,R20
005e31 1ff5      	ADC  R31,R21
005e32 81a0      	LD   R26,Z
005e33 940e 3e61 	CALL _putchar3
                 ; 0009 055D     }
                +
005e35 5f0f     +SUBI R16 , LOW ( - 1 )
005e36 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e37 cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055E     putchar0('\r');
005e38 e0ad      	LDI  R26,LOW(13)
005e39 940e 3d95 	CALL _putchar0
                 ; 0009 055F     printDebug("\r\n\---\r\n");
                +
005e3b e5e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5489 ) )
005e3c e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5489 ) )
005e3d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5489 ) )
005e3e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5489 ) )
                 	__POINTD1FN _0x120000,5489
005e3f 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0560 
                 ; 0009 0561     TIMER_setTimer(&timeout, 10);
005e41 01fe      	MOVW R30,R28
005e42 96bb      	ADIW R30,43
005e43 940e b331 	CALL SUBOPT_0x28
                 ; 0009 0562 
                 ; 0009 0563     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
005e45 91e0 10f1 	LDS  R30,_config_ready
005e47 30e0      	CPI  R30,0
005e48 f419      	BRNE _0x12010D
005e49 940e bca7 	CALL SUBOPT_0x1AC
005e4b f009      	BREQ _0x12010E
                 _0x12010D:
005e4c c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0564        delay_ms(50);
005e4d 940e b560 	CALL SUBOPT_0x7A
                 ; 0009 0565        #asm("wdr")
005e4f 95a8      	wdr
                 ; 0009 0566     }
005e50 cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0567 
                 ; 0009 0568     ETH_switchMode(MODE_NORM);
005e51 e8a0      	LDI  R26,LOW(128)
005e52 dd84      	RCALL _ETH_switchMode
                 ; 0009 0569 
                 ; 0009 056A     free( ptr );
005e53 01da      	MOVW R26,R20
005e54 940e 9717 	CALL _free
                 ; 0009 056B 
                 ; 0009 056C     if(config_response == 'S'){
005e56 91a0 10f3 	LDS  R26,_config_response
005e58 35a3      	CPI  R26,LOW(0x53)
005e59 f419      	BRNE _0x12010F
                 ; 0009 056D         return 0;
005e5a e0e0      	LDI  R30,LOW(0)
005e5b e0f0      	LDI  R31,HIGH(0)
005e5c c002      	RJMP _0x20E0073
                 ; 0009 056E     }
                 ; 0009 056F     else{
                 _0x12010F:
                 ; 0009 0570         return -1;
005e5d efef      	LDI  R30,LOW(65535)
005e5e efff      	LDI  R31,HIGH(65535)
                 ; 0009 0571     }
                 ; 0009 0572 }
                 _0x20E0073:
005e5f 940e cf3f 	CALL __LOADLOCR6
005e61 96e7      	ADIW R28,55
005e62 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0575 {
                 _ETH_reset:
                 ; 0009 0576     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
005e63 e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 5497 ) )
005e64 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5497 ) )
005e65 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5497 ) )
005e66 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5497 ) )
                 	__POINTD1FN _0x120000,5497
005e67 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 0577     ETH_RESET   = 0;
005e69 9872      	CBI  0xE,2
                 ; 0009 0578     delay_ms(3000);
005e6a eba8      	LDI  R26,LOW(3000)
005e6b e0bb      	LDI  R27,HIGH(3000)
005e6c 940e cb81 	CALL _delay_ms
                 ; 0009 0579     ETH_RESET   = 1;
005e6e 9a72      	SBI  0xE,2
                 ; 0009 057A     delay_ms(1);
005e6f 940e b54e 	CALL SUBOPT_0x75
005e71 940e cb81 	CALL _delay_ms
                 ; 0009 057B     printDebug("...Done\r\n");
                +
005e73 e9e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5549 ) )
005e74 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5549 ) )
005e75 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5549 ) )
005e76 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5549 ) )
                 	__POINTD1FN _0x120000,5549
005e77 940e b22a 	CALL SUBOPT_0x3
                 ; 0009 057C }
005e79 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
005e7a 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005e7c 940e bd60 	CALL SUBOPT_0x1C7
                 _0x140004:
                +
005e7e 3008     +CPI R16 , LOW ( 8 )
005e7f e0e0     +LDI R30 , HIGH ( 8 )
005e80 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005e81 f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
005e82 940e bd65 	CALL SUBOPT_0x1C8
005e84 81ac      	LDD  R26,Y+4
005e85 81bd      	LDD  R27,Y+4+1
005e86 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
005e87 5f0f     +SUBI R16 , LOW ( - 1 )
005e88 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e89 cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
005e8a 940e bd65 	CALL SUBOPT_0x1C8
005e8c 940e bd6e 	CALL SUBOPT_0x1C9
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
005e8e 940e b663 	CALL SUBOPT_0x9D
005e90 2ffe      	MOV  R31,R30
005e91 e0e0      	LDI  R30,0
005e92 010f      	MOVW R0,R30
005e93 940e bd65 	CALL SUBOPT_0x1C8
005e95 940e b663 	CALL SUBOPT_0x9D
005e97 29e0      	OR   R30,R0
005e98 29f1      	OR   R31,R1
005e99 940e bd73 	CALL SUBOPT_0x1CA
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
005e9b 85a0      	LDD  R26,Z+8
005e9c 33a0      	CPI  R26,LOW(0x30)
005e9d f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
005e9e c1ab      	RJMP _0x20E0072
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
005e9f 81ee      	LDD  R30,Y+6
005ea0 81ff      	LDD  R31,Y+6+1
005ea1 1be2      	SUB  R30,R18
005ea2 0bf3      	SBC  R31,R19
                +
005ea3 81ac     +LDD R26 , Y + 4
005ea4 81bd     +LDD R27 , Y + 4 + 1
005ea5 961b     +ADIW R26 , 11
005ea6 93ed     +ST X + , R30
005ea7 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
005ea8 81ec      	LDD  R30,Y+4
005ea9 81fd      	LDD  R31,Y+4+1
005eaa 85a3      	LDD  R26,Z+11
005eab 85b4      	LDD  R27,Z+12
005eac 940e bd7b 	CALL SUBOPT_0x1CB
                +
005eae 81ac     +LDD R26 , Y + 4
005eaf 81bd     +LDD R27 , Y + 4 + 1
005eb0 961d     +ADIW R26 , 13
005eb1 93ed     +ST X + , R30
005eb2 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
005eb3 81ac      	LDD  R26,Y+4
005eb4 81bd      	LDD  R27,Y+4+1
005eb5 961d      	ADIW R26,13
005eb6 940e ce94 	CALL __GETW1P
005eb8 9730      	SBIW R30,0
005eb9 f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
005eba eae0     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
005ebb e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
005ebc e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
005ebd e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
005ebe 940e b22a 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
005ec0 efef      	LDI  R30,LOW(65535)
005ec1 efff      	LDI  R31,HIGH(65535)
005ec2 c189      	RJMP _0x20E0071
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
005ec3 e000     +LDI R16 , LOW ( 0 )
005ec4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
005ec5 81ac      	LDD  R26,Y+4
005ec6 81bd      	LDD  R27,Y+4+1
005ec7 961b      	ADIW R26,11
005ec8 940e bd82 	CALL SUBOPT_0x1CC
005eca f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
005ecb 81ec      	LDD  R30,Y+4
005ecc 81fd      	LDD  R31,Y+4+1
005ecd 85a5      	LDD  R26,Z+13
005ece 85b6      	LDD  R27,Z+14
005ecf 940e bd87 	CALL SUBOPT_0x1CD
005ed1 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
005ed2 5f0f     +SUBI R16 , LOW ( - 1 )
005ed3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ed4 cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
005ed5 c174      	RJMP _0x20E0072
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
005ed6 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
005ed8 e020     +LDI R18 , LOW ( 0 )
005ed9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
005eda ece6     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
005edb e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
005edc e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
005edd e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
005ede 940e b22a 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
005ee0 940e bbf1 	CALL SUBOPT_0x18B
005ee2 85a8      	LDD  R26,Y+8
005ee3 85b9      	LDD  R27,Y+8+1
005ee4 940e 92cc 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
005ee6 e000     +LDI R16 , LOW ( 0 )
005ee7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
005ee8 3008     +CPI R16 , LOW ( 8 )
005ee9 e0e0     +LDI R30 , HIGH ( 8 )
005eea 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005eeb f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
005eec 940e bd65 	CALL SUBOPT_0x1C8
005eee 81ac      	LDD  R26,Y+4
005eef 81bd      	LDD  R27,Y+4+1
005ef0 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
005ef1 5f0f     +SUBI R16 , LOW ( - 1 )
005ef2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ef3 cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
005ef4 940e bd65 	CALL SUBOPT_0x1C8
005ef6 940e bd6e 	CALL SUBOPT_0x1C9
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
005ef8 81ac     +LDD R26 , Y + 4
005ef9 81bd     +LDD R27 , Y + 4 + 1
005efa 9619     +ADIW R26 , 9
005efb 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
005efc 81ec      	LDD  R30,Y+4
005efd 81fd      	LDD  R31,Y+4+1
005efe 85a0      	LDD  R26,Z+8
005eff 31a0      	CPI  R26,LOW(0x10)
005f00 f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
005f01 eded     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
005f02 e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
005f03 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
005f04 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
005f05 940e b22a 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
005f07 81ac      	LDD  R26,Y+4
005f08 81bd      	LDD  R27,Y+4+1
005f09 961a      	ADIW R26,10
005f0a 940e b8f4 	CALL SUBOPT_0x10D
                 ; 000A 0048         st->confSpec    =   NULL;
005f0c 81ac      	LDD  R26,Y+4
005f0d 81bd      	LDD  R27,Y+4+1
005f0e 961c      	ADIW R26,12
005f0f 940e b8f4 	CALL SUBOPT_0x10D
                 ; 000A 0049         return 0;
005f11 c138      	RJMP _0x20E0072
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
005f12 efec     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
005f13 e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
005f14 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
005f15 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
005f16 940e b22a 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
005f18 81ee      	LDD  R30,Y+6
005f19 81ff      	LDD  R31,Y+6+1
005f1a 1be2      	SUB  R30,R18
005f1b 0bf3      	SBC  R31,R19
                +
005f1c 81ac     +LDD R26 , Y + 4
005f1d 81bd     +LDD R27 , Y + 4 + 1
005f1e 961a     +ADIW R26 , 10
005f1f 93ed     +ST X + , R30
005f20 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
005f21 e1eb     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
005f22 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
005f23 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
005f24 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
005f25 940e cec8 	CALL __PUTPARD1
005f27 85a8      	LDD  R26,Y+8
005f28 85b9      	LDD  R27,Y+8+1
005f29 961a      	ADIW R26,10
005f2a 940e b2f1 	CALL SUBOPT_0x1E
005f2c 940e bbc8 	CALL SUBOPT_0x182
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
005f2e 81ec      	LDD  R30,Y+4
005f2f 81fd      	LDD  R31,Y+4+1
005f30 85a2      	LDD  R26,Z+10
005f31 85b3      	LDD  R27,Z+11
005f32 940e bd7b 	CALL SUBOPT_0x1CB
                +
005f34 81ac     +LDD R26 , Y + 4
005f35 81bd     +LDD R27 , Y + 4 + 1
005f36 961c     +ADIW R26 , 12
005f37 93ed     +ST X + , R30
005f38 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
005f39 81ac      	LDD  R26,Y+4
005f3a 81bd      	LDD  R27,Y+4+1
005f3b 961c      	ADIW R26,12
005f3c 940e ce94 	CALL __GETW1P
005f3e 9730      	SBIW R30,0
005f3f f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
005f40 e3ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
005f41 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
005f42 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
005f43 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
005f44 940e b22a 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
005f46 efef      	LDI  R30,LOW(65535)
005f47 efff      	LDI  R31,HIGH(65535)
005f48 c103      	RJMP _0x20E0071
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
005f49 e000     +LDI R16 , LOW ( 0 )
005f4a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
005f4b 81ac      	LDD  R26,Y+4
005f4c 81bd      	LDD  R27,Y+4+1
005f4d 961a      	ADIW R26,10
005f4e 940e bd82 	CALL SUBOPT_0x1CC
005f50 f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
005f51 81ec      	LDD  R30,Y+4
005f52 81fd      	LDD  R31,Y+4+1
005f53 85a4      	LDD  R26,Z+12
005f54 85b5      	LDD  R27,Z+13
005f55 940e bd87 	CALL SUBOPT_0x1CD
005f57 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
005f58 5f0f     +SUBI R16 , LOW ( - 1 )
005f59 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f5a cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
005f5b c0ee      	RJMP _0x20E0072
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
005f5c 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005f5e 940e bd60 	CALL SUBOPT_0x1C7
                 _0x140014:
                +
005f60 3008     +CPI R16 , LOW ( 8 )
005f61 e0e0     +LDI R30 , HIGH ( 8 )
005f62 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005f63 f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
005f64 940e bd65 	CALL SUBOPT_0x1C8
005f66 81ac      	LDD  R26,Y+4
005f67 81bd      	LDD  R27,Y+4+1
005f68 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
005f69 5f0f     +SUBI R16 , LOW ( - 1 )
005f6a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f6b cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
005f6c 940e bd65 	CALL SUBOPT_0x1C8
005f6e 940e bd91 	CALL SUBOPT_0x1CE
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
005f70 81ae      	LDD  R26,Y+6
005f71 81bf      	LDD  R27,Y+6+1
005f72 9717      	SBIW R26,7
005f73 f414      	BRGE PC+3
005f74 940c 5fe3 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
005f76 940e bd65 	CALL SUBOPT_0x1C8
005f78 940e bd96 	CALL SUBOPT_0x1CF
005f7a 940e bd9e 	CALL SUBOPT_0x1D0
005f7c 937f      	PUSH R23
005f7d 936f      	PUSH R22
005f7e 93ff      	PUSH R31
005f7f 93ef      	PUSH R30
005f80 940e bd65 	CALL SUBOPT_0x1C8
005f82 940e bd96 	CALL SUBOPT_0x1CF
005f84 940e cdb2 	CALL __LSLD16
005f86 91af      	POP  R26
005f87 91bf      	POP  R27
005f88 918f      	POP  R24
005f89 919f      	POP  R25
005f8a 940e cd51 	CALL __ORD12
005f8c 937f      	PUSH R23
005f8d 936f      	PUSH R22
005f8e 93ff      	PUSH R31
005f8f 93ef      	PUSH R30
005f90 940e bd65 	CALL SUBOPT_0x1C8
005f92 940e bd96 	CALL SUBOPT_0x1CF
005f94 940e bda4 	CALL SUBOPT_0x1D1
005f96 91af      	POP  R26
005f97 91bf      	POP  R27
005f98 918f      	POP  R24
005f99 919f      	POP  R25
005f9a 940e cd51 	CALL __ORD12
005f9c 937f      	PUSH R23
005f9d 936f      	PUSH R22
005f9e 93ff      	PUSH R31
005f9f 93ef      	PUSH R30
005fa0 940e bd65 	CALL SUBOPT_0x1C8
005fa2 940e bd96 	CALL SUBOPT_0x1CF
005fa4 91af      	POP  R26
005fa5 91bf      	POP  R27
005fa6 918f      	POP  R24
005fa7 919f      	POP  R25
005fa8 940e bdaa 	CALL SUBOPT_0x1D2
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
005faa 940e bd65 	CALL SUBOPT_0x1C8
005fac 940e bd96 	CALL SUBOPT_0x1CF
005fae 940e bd9e 	CALL SUBOPT_0x1D0
005fb0 937f      	PUSH R23
005fb1 936f      	PUSH R22
005fb2 93ff      	PUSH R31
005fb3 93ef      	PUSH R30
005fb4 940e bd65 	CALL SUBOPT_0x1C8
005fb6 940e bd96 	CALL SUBOPT_0x1CF
005fb8 940e cdb2 	CALL __LSLD16
005fba 91af      	POP  R26
005fbb 91bf      	POP  R27
005fbc 918f      	POP  R24
005fbd 919f      	POP  R25
005fbe 940e cd51 	CALL __ORD12
005fc0 937f      	PUSH R23
005fc1 936f      	PUSH R22
005fc2 93ff      	PUSH R31
005fc3 93ef      	PUSH R30
005fc4 940e bd65 	CALL SUBOPT_0x1C8
005fc6 940e bd96 	CALL SUBOPT_0x1CF
005fc8 940e bda4 	CALL SUBOPT_0x1D1
005fca 91af      	POP  R26
005fcb 91bf      	POP  R27
005fcc 918f      	POP  R24
005fcd 919f      	POP  R25
005fce 940e cd51 	CALL __ORD12
005fd0 937f      	PUSH R23
005fd1 936f      	PUSH R22
005fd2 93ff      	PUSH R31
005fd3 93ef      	PUSH R30
005fd4 940e bd65 	CALL SUBOPT_0x1C8
005fd6 940e bd96 	CALL SUBOPT_0x1CF
005fd8 91af      	POP  R26
005fd9 91bf      	POP  R27
005fda 918f      	POP  R24
005fdb 919f      	POP  R25
005fdc 940e cd51 	CALL __ORD12
                +
005fde 81ac     +LDD R26 , Y + 4
005fdf 81bd     +LDD R27 , Y + 4 + 1
005fe0 961d     +ADIW R26 , 13
005fe1 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
005fe3 c066      	RJMP _0x20E0072
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
005fe4 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005fe6 940e bd60 	CALL SUBOPT_0x1C7
                 _0x140018:
                +
005fe8 3008     +CPI R16 , LOW ( 8 )
005fe9 e0e0     +LDI R30 , HIGH ( 8 )
005fea 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005feb f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
005fec 940e bdb2 	CALL SUBOPT_0x1D3
005fee 81ac      	LDD  R26,Y+4
005fef 81bd      	LDD  R27,Y+4+1
005ff0 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
005ff1 5f0f     +SUBI R16 , LOW ( - 1 )
005ff2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ff3 cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
005ff4 c0b4      	RJMP _0x20E0070
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
005ff5 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005ff7 940e bd60 	CALL SUBOPT_0x1C7
                 _0x14001B:
                +
005ff9 3008     +CPI R16 , LOW ( 8 )
005ffa e0e0     +LDI R30 , HIGH ( 8 )
005ffb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005ffc f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
005ffd 940e bd65 	CALL SUBOPT_0x1C8
005fff 81ac      	LDD  R26,Y+4
006000 81bd      	LDD  R27,Y+4+1
006001 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
006002 5f0f     +SUBI R16 , LOW ( - 1 )
006003 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006004 cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
006005 940e bd65 	CALL SUBOPT_0x1C8
006007 940e bd91 	CALL SUBOPT_0x1CE
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
006009 81ee      	LDD  R30,Y+6
00600a 81ff      	LDD  R31,Y+6+1
00600b 9732      	SBIW R30,2
00600c 940e bd73 	CALL SUBOPT_0x1CA
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
00600e 940e bc3a 	CALL SUBOPT_0x198
006010 f5c8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
006011 81ec      	LDD  R30,Y+4
006012 81fd      	LDD  R31,Y+4+1
006013 85a1      	LDD  R26,Z+9
006014 85b2      	LDD  R27,Z+10
006015 940e bd7b 	CALL SUBOPT_0x1CB
                +
006017 81ac     +LDD R26 , Y + 4
006018 81bd     +LDD R27 , Y + 4 + 1
006019 961b     +ADIW R26 , 11
00601a 93ed     +ST X + , R30
00601b 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
00601c 81ac      	LDD  R26,Y+4
00601d 81bd      	LDD  R27,Y+4+1
00601e 961b      	ADIW R26,11
00601f 940e ce94 	CALL __GETW1P
006021 9730      	SBIW R30,0
006022 f4a9      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
006023 e6e4     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
006024 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
006025 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
006026 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
006027 940e cec8 	CALL __PUTPARD1
006029 85e8      	LDD  R30,Y+8
00602a 85f9      	LDD  R31,Y+8+1
00602b 85a1      	LDD  R26,Z+9
00602c 85b2      	LDD  R27,Z+10
00602d e0e1      	LDI  R30,LOW(1)
00602e e0f0      	LDI  R31,HIGH(1)
00602f 940e cdd6 	CALL __MULW12U
006031 940e b388 	CALL SUBOPT_0x34
006033 940e b29d 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
006035 efef      	LDI  R30,LOW(65535)
006036 efff      	LDI  R31,HIGH(65535)
006037 c014      	RJMP _0x20E0071
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
006038 e000     +LDI R16 , LOW ( 0 )
006039 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
00603a 81ac      	LDD  R26,Y+4
00603b 81bd      	LDD  R27,Y+4+1
00603c 9619      	ADIW R26,9
00603d 940e bd82 	CALL SUBOPT_0x1CC
00603f f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
006040 81ec      	LDD  R30,Y+4
006041 81fd      	LDD  R31,Y+4+1
006042 85a3      	LDD  R26,Z+11
006043 85b4      	LDD  R27,Z+12
006044 940e bd87 	CALL SUBOPT_0x1CD
006046 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
006047 5f0f     +SUBI R16 , LOW ( - 1 )
006048 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006049 cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E0072:
00604a e0e0      	LDI  R30,LOW(0)
00604b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0071:
00604c 940e cf41 	CALL __LOADLOCR4
00604e 962a      	ADIW R28,10
00604f 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
006050 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006052 940e bd60 	CALL SUBOPT_0x1C7
                 _0x140023:
                +
006054 3008     +CPI R16 , LOW ( 8 )
006055 e0e0     +LDI R30 , HIGH ( 8 )
006056 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006057 f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
006058 940e bdb2 	CALL SUBOPT_0x1D3
00605a 81ac      	LDD  R26,Y+4
00605b 81bd      	LDD  R27,Y+4+1
00605c 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
00605d 5f0f     +SUBI R16 , LOW ( - 1 )
00605e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00605f cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
006060 940e bdb2 	CALL SUBOPT_0x1D3
006062 940e bd91 	CALL SUBOPT_0x1CE
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
006064 940e bdb2 	CALL SUBOPT_0x1D3
006066 940e bd96 	CALL SUBOPT_0x1CF
006068 940e bd9e 	CALL SUBOPT_0x1D0
00606a 937f      	PUSH R23
00606b 936f      	PUSH R22
00606c 93ff      	PUSH R31
00606d 93ef      	PUSH R30
00606e 940e bdb2 	CALL SUBOPT_0x1D3
006070 940e bd96 	CALL SUBOPT_0x1CF
006072 940e cdb2 	CALL __LSLD16
006074 91af      	POP  R26
006075 91bf      	POP  R27
006076 918f      	POP  R24
006077 919f      	POP  R25
006078 940e cd51 	CALL __ORD12
00607a 937f      	PUSH R23
00607b 936f      	PUSH R22
00607c 93ff      	PUSH R31
00607d 93ef      	PUSH R30
00607e 940e bdb2 	CALL SUBOPT_0x1D3
006080 940e bd96 	CALL SUBOPT_0x1CF
006082 940e bda4 	CALL SUBOPT_0x1D1
006084 91af      	POP  R26
006085 91bf      	POP  R27
006086 918f      	POP  R24
006087 919f      	POP  R25
006088 940e cd51 	CALL __ORD12
00608a 937f      	PUSH R23
00608b 936f      	PUSH R22
00608c 93ff      	PUSH R31
00608d 93ef      	PUSH R30
00608e 940e bdb2 	CALL SUBOPT_0x1D3
006090 940e bd96 	CALL SUBOPT_0x1CF
006092 91af      	POP  R26
006093 91bf      	POP  R27
006094 918f      	POP  R24
006095 919f      	POP  R25
006096 940e bdaa 	CALL SUBOPT_0x1D2
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
006098 c01d      	RJMP _0x20E006F
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
006099 940e b589 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00609b 940e bd60 	CALL SUBOPT_0x1C7
                 _0x140026:
                +
00609d 3008     +CPI R16 , LOW ( 8 )
00609e e0e0     +LDI R30 , HIGH ( 8 )
00609f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0060a0 f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
0060a1 940e bdb2 	CALL SUBOPT_0x1D3
0060a3 81ac      	LDD  R26,Y+4
0060a4 81bd      	LDD  R27,Y+4+1
0060a5 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
0060a6 5f0f     +SUBI R16 , LOW ( - 1 )
0060a7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060a8 cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0070:
0060a9 01f9      	MOVW R30,R18
                +
0060aa 5f2f     +SUBI R18 , LOW ( - 1 )
0060ab 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0060ac 940e bc6a 	CALL SUBOPT_0x1A2
0060ae 940e bd91 	CALL SUBOPT_0x1CE
                 ; 000A 00CB     st->status      =   pkt[k++];
0060b0 940e bdb2 	CALL SUBOPT_0x1D3
                +
0060b2 81ac     +LDD R26 , Y + 4
0060b3 81bd     +LDD R27 , Y + 4 + 1
0060b4 9619     +ADIW R26 , 9
0060b5 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E006F:
0060b6 e0e0      	LDI  R30,LOW(0)
0060b7 e0f0      	LDI  R31,HIGH(0)
0060b8 940e cf41 	CALL __LOADLOCR4
0060ba 9628      	ADIW R28,8
0060bb 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
0060bc 940e b623 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
0060be 85a5      	LDD  R26,Z+13
0060bf 85b6      	LDD  R27,Z+14
0060c0 940e 9717 	CALL _free
                 ; 000A 00D3 }
0060c2 c05e      	RJMP _0x20E006E
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
0060c3 940e b623 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
0060c5 85a4      	LDD  R26,Z+12
0060c6 85b5      	LDD  R27,Z+13
0060c7 940e 9717 	CALL _free
                 ; 000A 00D8 }
0060c9 c057      	RJMP _0x20E006E
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
0060ca 940e b623 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
0060cc 85a3      	LDD  R26,Z+11
0060cd 85b4      	LDD  R27,Z+12
0060ce 940e 9717 	CALL _free
                 ; 000A 00DD }
0060d0 c050      	RJMP _0x20E006E
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
0060d1 93aa      	ST   -Y,R26
0060d2 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
0060d3 81e9      	LDD  R30,Y+1
0060d4 7fe0      	ANDI R30,LOW(0xF0)
0060d5 2f1e      	MOV  R17,R30
0060d6 2fe1      	MOV  R30,R17
0060d7 940e b414 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
0060d9 f419      	BRNE _0x160006
0060da eae1      	LDI  R30,LOW(161)
0060db e0f0      	LDI  R31,HIGH(161)
0060dc c043      	RJMP _0x20E006D
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
0060dd 32e0      	CPI  R30,LOW(0x20)
0060de e0a0      	LDI  R26,HIGH(0x20)
0060df 07fa      	CPC  R31,R26
0060e0 f419      	BRNE _0x160007
0060e1 e0e8      	LDI  R30,LOW(8)
0060e2 e0f0      	LDI  R31,HIGH(8)
0060e3 c03c      	RJMP _0x20E006D
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
0060e4 33e0      	CPI  R30,LOW(0x30)
0060e5 e0a0      	LDI  R26,HIGH(0x30)
0060e6 07fa      	CPC  R31,R26
0060e7 f419      	BRNE _0x160008
0060e8 e1ed      	LDI  R30,LOW(29)
0060e9 e0f0      	LDI  R31,HIGH(29)
0060ea c035      	RJMP _0x20E006D
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
0060eb 34e0      	CPI  R30,LOW(0x40)
0060ec e0a0      	LDI  R26,HIGH(0x40)
0060ed 07fa      	CPC  R31,R26
0060ee f419      	BRNE _0x160009
0060ef e0e3      	LDI  R30,LOW(3)
0060f0 e0f0      	LDI  R31,HIGH(3)
0060f1 c02e      	RJMP _0x20E006D
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
0060f2 35e0      	CPI  R30,LOW(0x50)
0060f3 e0a0      	LDI  R26,HIGH(0x50)
0060f4 07fa      	CPC  R31,R26
0060f5 f419      	BRNE _0x16000A
0060f6 e2e6      	LDI  R30,LOW(38)
0060f7 e0f0      	LDI  R31,HIGH(38)
0060f8 c027      	RJMP _0x20E006D
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
0060f9 36e0      	CPI  R30,LOW(0x60)
0060fa e0a0      	LDI  R26,HIGH(0x60)
0060fb 07fa      	CPC  R31,R26
0060fc f419      	BRNE _0x16000B
0060fd e0e5      	LDI  R30,LOW(5)
0060fe e0f0      	LDI  R31,HIGH(5)
0060ff c020      	RJMP _0x20E006D
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
006100 37e0      	CPI  R30,LOW(0x70)
006101 e0a0      	LDI  R26,HIGH(0x70)
006102 07fa      	CPC  R31,R26
006103 f419      	BRNE _0x16000C
006104 e2e9      	LDI  R30,LOW(41)
006105 e0f0      	LDI  R31,HIGH(41)
006106 c019      	RJMP _0x20E006D
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
006107 38e0      	CPI  R30,LOW(0x80)
006108 e0a0      	LDI  R26,HIGH(0x80)
006109 07fa      	CPC  R31,R26
00610a f419      	BRNE _0x16000D
00610b e2e5      	LDI  R30,LOW(37)
00610c e0f0      	LDI  R31,HIGH(37)
00610d c012      	RJMP _0x20E006D
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
00610e 39e0      	CPI  R30,LOW(0x90)
00610f e0a0      	LDI  R26,HIGH(0x90)
006110 07fa      	CPC  R31,R26
006111 f419      	BRNE _0x16000F
006112 e1e2      	LDI  R30,LOW(18)
006113 e0f0      	LDI  R31,HIGH(18)
006114 c00b      	RJMP _0x20E006D
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
006115 e9e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
006116 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
006117 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
006118 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
006119 940e cec8 	CALL __PUTPARD1
00611b 2fe1      	MOV  R30,R17
00611c 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0018                                     return -1;
00611e efef      	LDI  R30,LOW(65535)
00611f efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E006D:
006120 8118      	LDD  R17,Y+0
                 _0x20E006E:
006121 9622      	ADIW R28,2
006122 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
006123 940e bdb6 	CALL SUBOPT_0x1D4
006125 940e b40f 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
006127 e020     +LDI R18 , LOW ( 0 )
006128 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
006129 e050      	LDI  R21,0
00612a 85ec      	LDD  R30,Y+12
00612b 7fe0      	ANDI R30,LOW(0xF0)
00612c 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
00612d 2fe5      	MOV  R30,R21
00612e 940e b414 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
006130 f011      	BREQ PC+3
006131 940c 61a1 	JMP _0x160013
006133 940e b854 	CALL SUBOPT_0xF2
006135 940e bdb9 	CALL SUBOPT_0x1D5
                 ; 000B 0029                                     if(cnfgStrc == NULL){
006137 f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
006138 ece9     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
006139 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
00613a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
00613b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
00613c 940e cec8 	CALL __PUTPARD1
                +
00613e eae1     +LDI R30 , LOW ( 0xA1 )
00613f e0f0     +LDI R31 , HIGH ( 0xA1 )
006140 e060     +LDI R22 , BYTE3 ( 0xA1 )
006141 e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
006142 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 002B                                         return -2;
006144 efee      	LDI  R30,LOW(65534)
006145 efff      	LDI  R31,HIGH(65534)
006146 c408      	RJMP _0x20E006C
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
006147 81ae      	LDD  R26,Y+6
006148 81bf      	LDD  R27,Y+6+1
006149 940e 4665 	CALL _getPropertiesConfig
00614b 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
00614c 2333      	TST  R19
00614d f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
00614e e0e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
00614f e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
006150 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
006151 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
006152 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
006154 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0032                                         return -3;
006156 efed      	LDI  R30,LOW(65533)
006157 efff      	LDI  R31,HIGH(65533)
006158 c3f6      	RJMP _0x20E006C
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
006159 e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
00615a e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
00615b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
00615c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
00615d 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
00615f 940e bdbf 	CALL SUBOPT_0x1D6
006161 940e b388 	CALL SUBOPT_0x34
006163 940e b29d 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
006165 940e bdbf 	CALL SUBOPT_0x1D6
006167 9674      	ADIW R30,20
006168 940e b388 	CALL SUBOPT_0x34
00616a 940e b29d 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
00616c 940e bdbf 	CALL SUBOPT_0x1D6
00616e 96b8      	ADIW R30,40
00616f 940e b388 	CALL SUBOPT_0x34
006171 940e b29d 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
006173 940e bdbf 	CALL SUBOPT_0x1D6
006175 5be0      	SUBI R30,LOW(-80)
006176 4fff      	SBCI R31,HIGH(-80)
006177 940e b388 	CALL SUBOPT_0x34
006179 940e b29d 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
00617b 940e bdbf 	CALL SUBOPT_0x1D6
00617d 59ec      	SUBI R30,LOW(-100)
00617e 4fff      	SBCI R31,HIGH(-100)
00617f 940e b388 	CALL SUBOPT_0x34
006181 940e b29d 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
006183 940e bdbf 	CALL SUBOPT_0x1D6
006185 57e4      	SUBI R30,LOW(-140)
006186 4fff      	SBCI R31,HIGH(-140)
006187 940e b388 	CALL SUBOPT_0x34
006189 940e b29d 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
00618b e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
00618c e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
00618d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
00618e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
00618f 940e b96c 	CALL SUBOPT_0x121
006191 56a0      	SUBI R26,LOW(-160)
006192 4fbf      	SBCI R27,HIGH(-160)
006193 91ec      	LD   R30,X
006194 940e cdb7 	CALL __CBD1
006196 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
006198 940e bdc4 	CALL SUBOPT_0x1D7
00619a 940e b854 	CALL SUBOPT_0xF2
00619c 940e bdc9 	CALL SUBOPT_0x1D8
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
00619e eae1      	LDI  R30,LOW(161)
00619f e0f0      	LDI  R31,HIGH(161)
0061a0 c3ae      	RJMP _0x20E006C
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
0061a1 32e0      	CPI  R30,LOW(0x20)
0061a2 e0a0      	LDI  R26,HIGH(0x20)
0061a3 07fa      	CPC  R31,R26
0061a4 f011      	BREQ PC+3
0061a5 940c 620e 	JMP _0x160016
0061a7 940e bdcc 	CALL SUBOPT_0x1D9
0061a9 940e bdb9 	CALL SUBOPT_0x1D5
                 ; 000B 004A                                     if(cnfgStrc == NULL){
0061ab f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
0061ac e5e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
0061ad e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
0061ae e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
0061af e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
0061b0 940e cec8 	CALL __PUTPARD1
                +
0061b2 e0e8     +LDI R30 , LOW ( 0x8 )
0061b3 e0f0     +LDI R31 , HIGH ( 0x8 )
0061b4 e060     +LDI R22 , BYTE3 ( 0x8 )
0061b5 e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
0061b6 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 004C                                         return -2;
0061b8 efee      	LDI  R30,LOW(65534)
0061b9 efff      	LDI  R31,HIGH(65534)
0061ba c394      	RJMP _0x20E006C
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
0061bb 81ae      	LDD  R26,Y+6
0061bc 81bf      	LDD  R27,Y+6+1
0061bd 940e 46fa 	CALL _getOperatingConfig
0061bf 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
0061c0 2333      	TST  R19
0061c1 f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
0061c2 e8ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
0061c3 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
0061c4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
0061c5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
0061c6 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
0061c8 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0053                                         return -3;
0061ca efed      	LDI  R30,LOW(65533)
0061cb efff      	LDI  R31,HIGH(65533)
0061cc c382      	RJMP _0x20E006C
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
0061cd ebea     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
0061ce e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
0061cf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
0061d0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
0061d1 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
0061d3 ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
0061d4 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
0061d5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
0061d6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
0061d7 940e b96c 	CALL SUBOPT_0x121
0061d9 91ec      	LD   R30,X
0061da 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
0061dc efe3     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
0061dd e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
0061de e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
0061df e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
0061e0 940e b971 	CALL SUBOPT_0x122
0061e2 81e1      	LDD  R30,Z+1
0061e3 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
0061e5 940e bdcf 	CALL SUBOPT_0x1DA
0061e7 81e2      	LDD  R30,Z+2
0061e8 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
0061ea e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
0061eb e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
0061ec e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
0061ed e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
0061ee 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0061f0 e000     +LDI R16 , LOW ( 0 )
0061f1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
0061f2 3005     +CPI R16 , LOW ( 5 )
0061f3 e0e0     +LDI R30 , HIGH ( 5 )
0061f4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0061f5 f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
0061f6 940e bdd4 	CALL SUBOPT_0x1DB
0061f8 940e b8b1 	CALL SUBOPT_0x101
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
0061fa e0e4      	LDI  R30,LOW(4)
0061fb e0f0      	LDI  R31,HIGH(4)
0061fc 17e0      	CP   R30,R16
0061fd 07f1      	CPC  R31,R17
0061fe f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
0061ff 940e bdd9 	CALL SUBOPT_0x1DC
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
006201 5f0f     +SUBI R16 , LOW ( - 1 )
006202 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006203 cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
006204 940e bdc4 	CALL SUBOPT_0x1D7
006206 e0a8      	LDI  R26,LOW(8)
006207 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
006209 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
00620b e0e8      	LDI  R30,LOW(8)
00620c e0f0      	LDI  R31,HIGH(8)
00620d c341      	RJMP _0x20E006C
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
00620e 33e0      	CPI  R30,LOW(0x30)
00620f e0a0      	LDI  R26,HIGH(0x30)
006210 07fa      	CPC  R31,R26
006211 f011      	BREQ PC+3
006212 940c 62cf 	JMP _0x16001D
006214 940e bddf 	CALL SUBOPT_0x1DD
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
006216 e1ad      	LDI  R26,LOW(29)
006217 940e bde6 	CALL SUBOPT_0x1DE
                 ; 000B 0070                                     if(cnfgStrc == NULL){
006219 f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
00621a e4e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
00621b e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
00621c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
00621d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
00621e 940e cec8 	CALL __PUTPARD1
                +
006220 e1ed     +LDI R30 , LOW ( 0x1D )
006221 e0f0     +LDI R31 , HIGH ( 0x1D )
006222 e060     +LDI R22 , BYTE3 ( 0x1D )
006223 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
006224 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0072                                         return -2;
006226 efee      	LDI  R30,LOW(65534)
006227 efff      	LDI  R31,HIGH(65534)
006228 c326      	RJMP _0x20E006C
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
006229 940e bbf1 	CALL SUBOPT_0x18B
00622b 85a8      	LDD  R26,Y+8
00622c 85b9      	LDD  R27,Y+8+1
00622d 940e 4768 	CALL _getSensorConfig
00622f 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
006230 2333      	TST  R19
006231 f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
006232 e7e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
006233 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
006234 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
006235 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
006236 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
006238 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0079                                         return -3;
00623a efed      	LDI  R30,LOW(65533)
00623b efff      	LDI  R31,HIGH(65533)
00623c c312      	RJMP _0x20E006C
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
00623d eae0     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
00623e e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
00623f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
006240 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
006241 940e bde8 	CALL SUBOPT_0x1DF
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
006243 ece1     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
006244 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
006245 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
006246 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
006247 940e b96c 	CALL SUBOPT_0x121
006249 940e b2f1 	CALL SUBOPT_0x1E
00624b 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
00624d ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
00624e e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
00624f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
006250 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
006251 940e b96c 	CALL SUBOPT_0x121
006253 9612      	ADIW R26,2
006254 940e b2f1 	CALL SUBOPT_0x1E
006256 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
006258 efe3     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
006259 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
00625a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
00625b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
00625c 940e b971 	CALL SUBOPT_0x122
00625e 81e4      	LDD  R30,Z+4
00625f 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
006261 e0ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
006262 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
006263 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
006264 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
006265 940e b971 	CALL SUBOPT_0x122
006267 81e5      	LDD  R30,Z+5
006268 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
00626a e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
00626b e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
00626c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
00626d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
00626e 940e b971 	CALL SUBOPT_0x122
006270 81e6      	LDD  R30,Z+6
006271 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
006273 e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
006274 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
006275 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
006276 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
006277 940e b971 	CALL SUBOPT_0x122
006279 81e7      	LDD  R30,Z+7
00627a 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
00627c 940e bdcf 	CALL SUBOPT_0x1DA
00627e 85e0      	LDD  R30,Z+8
00627f 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
006281 e4ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
006282 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
006283 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
006284 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
006285 940e b971 	CALL SUBOPT_0x122
006287 940e bc20 	CALL SUBOPT_0x193
006289 940e bc1c 	CALL SUBOPT_0x192
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
00628b e6e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
00628c e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
00628d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
00628e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
00628f 940e b96c 	CALL SUBOPT_0x121
006291 961d      	ADIW R26,13
006292 940e b2f1 	CALL SUBOPT_0x1E
006294 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
006296 e7ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
006297 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
006298 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
006299 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
00629a 940e b971 	CALL SUBOPT_0x122
                +
00629c 85a7     +LDD R26 , Z + 15
00629d 89b0     +LDD R27 , Z + 15 + 1
00629e 8981     +LDD R24 , Z + 15 + 2
00629f 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
0062a0 940e bc1c 	CALL SUBOPT_0x192
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
0062a2 e9e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
0062a3 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
0062a4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
0062a5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
0062a6 940e b971 	CALL SUBOPT_0x122
                +
0062a8 89a3     +LDD R26 , Z + 19
0062a9 89b4     +LDD R27 , Z + 19 + 1
0062aa 8985     +LDD R24 , Z + 19 + 2
0062ab 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
0062ac 940e bc1c 	CALL SUBOPT_0x192
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
0062ae eaeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
0062af e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
0062b0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
0062b1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
0062b2 940e b96c 	CALL SUBOPT_0x121
0062b4 9657      	ADIW R26,23
0062b5 940e b2f1 	CALL SUBOPT_0x1E
0062b7 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
0062b9 ece2     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
0062ba e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
0062bb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
0062bc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
0062bd 940e b971 	CALL SUBOPT_0x122
                +
0062bf 8da1     +LDD R26 , Z + 25
0062c0 8db2     +LDD R27 , Z + 25 + 1
0062c1 8d83     +LDD R24 , Z + 25 + 2
0062c2 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
0062c3 940e bc1c 	CALL SUBOPT_0x192
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
0062c5 940e bdc4 	CALL SUBOPT_0x1D7
0062c7 e1ad      	LDI  R26,LOW(29)
0062c8 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
0062ca 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
0062cc e1ed      	LDI  R30,LOW(29)
0062cd e0f0      	LDI  R31,HIGH(29)
0062ce c280      	RJMP _0x20E006C
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
0062cf 34e0      	CPI  R30,LOW(0x40)
0062d0 e0a0      	LDI  R26,HIGH(0x40)
0062d1 07fa      	CPC  R31,R26
0062d2 f011      	BREQ PC+3
0062d3 940c 6318 	JMP _0x160020
0062d5 940e bddf 	CALL SUBOPT_0x1DD
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
0062d7 940e b551 	CALL SUBOPT_0x76
0062d9 940e bdb9 	CALL SUBOPT_0x1D5
                 ; 000B 0099                                     if(cnfgStrc == NULL){
0062db f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
0062dc ede9     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
0062dd e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
0062de e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
0062df e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
0062e0 940e bded 	CALL SUBOPT_0x1E0
                 ; 000B 009B                                         return -2;
0062e2 efee      	LDI  R30,LOW(65534)
0062e3 efff      	LDI  R31,HIGH(65534)
0062e4 c26a      	RJMP _0x20E006C
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
0062e5 940e bbf1 	CALL SUBOPT_0x18B
0062e7 85a8      	LDD  R26,Y+8
0062e8 85b9      	LDD  R27,Y+8+1
0062e9 940e 4850 	CALL _getAuxDinConfig
0062eb 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
0062ec 2333      	TST  R19
0062ed f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
0062ee e0ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
0062ef e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
0062f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
0062f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
0062f2 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
0062f4 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 00A2                                         return -3;
0062f6 efed      	LDI  R30,LOW(65533)
0062f7 efff      	LDI  R31,HIGH(65533)
0062f8 c256      	RJMP _0x20E006C
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
0062f9 e3e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
0062fa e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
0062fb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
0062fc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
0062fd 940e bde8 	CALL SUBOPT_0x1DF
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
0062ff 940e bdf4 	CALL SUBOPT_0x1E1
006301 91ec      	LD   R30,X
006302 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
006304 e7e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
006305 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
006306 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
006307 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
006308 940e b96c 	CALL SUBOPT_0x121
00630a 9611      	ADIW R26,1
00630b 940e b2f1 	CALL SUBOPT_0x1E
00630d 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
00630f 940e bdc4 	CALL SUBOPT_0x1D7
006311 940e b551 	CALL SUBOPT_0x76
006313 940e bdc9 	CALL SUBOPT_0x1D8
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
006315 e0e3      	LDI  R30,LOW(3)
006316 e0f0      	LDI  R31,HIGH(3)
006317 c237      	RJMP _0x20E006C
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
006318 35e0      	CPI  R30,LOW(0x50)
006319 e0a0      	LDI  R26,HIGH(0x50)
00631a 07fa      	CPC  R31,R26
00631b f011      	BREQ PC+3
00631c 940c 637e 	JMP _0x160023
00631e 940e bddf 	CALL SUBOPT_0x1DD
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
006320 e2a6      	LDI  R26,LOW(38)
006321 940e bde6 	CALL SUBOPT_0x1DE
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
006323 f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
006324 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
006325 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
006326 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
006327 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
006328 940e cec8 	CALL __PUTPARD1
                +
00632a e2e6     +LDI R30 , LOW ( 0x26 )
00632b e0f0     +LDI R31 , HIGH ( 0x26 )
00632c e060     +LDI R22 , BYTE3 ( 0x26 )
00632d e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
00632e 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 00B9                                         return -2;
006330 efee      	LDI  R30,LOW(65534)
006331 efff      	LDI  R31,HIGH(65534)
006332 c21c      	RJMP _0x20E006C
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
006333 940e bbf1 	CALL SUBOPT_0x18B
006335 85a8      	LDD  R26,Y+8
006336 85b9      	LDD  R27,Y+8+1
006337 940e 4886 	CALL _getAuxDoutConfig
006339 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
00633a 2333      	TST  R19
00633b f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
00633c ebed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
00633d e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
00633e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
00633f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
006340 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
006342 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 00C0                                         return -3;
006344 efed      	LDI  R30,LOW(65533)
006345 efff      	LDI  R31,HIGH(65533)
006346 c208      	RJMP _0x20E006C
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
006347 eee6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
006348 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
006349 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
00634a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
00634b 940e bde8 	CALL SUBOPT_0x1DF
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
00634d 940e bdf9 	CALL SUBOPT_0x1E2
00634f 91ec      	LD   R30,X
006350 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
006352 e2e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
006353 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
006354 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
006355 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
006356 940e b971 	CALL SUBOPT_0x122
006358 81e1      	LDD  R30,Z+1
006359 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
00635b 940e bdfe 	CALL SUBOPT_0x1E3
00635d 81e2      	LDD  R30,Z+2
00635e 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
006360 940e be03 	CALL SUBOPT_0x1E4
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006362 e000     +LDI R16 , LOW ( 0 )
006363 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
006364 3203     +CPI R16 , LOW ( 35 )
006365 e0e0     +LDI R30 , HIGH ( 35 )
006366 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006367 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
006368 940e bdd4 	CALL SUBOPT_0x1DB
00636a 940e b8b1 	CALL SUBOPT_0x101
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
00636c 940e be09 	CALL SUBOPT_0x1E5
00636e f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
00636f 940e bdd9 	CALL SUBOPT_0x1DC
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
006371 5f0f     +SUBI R16 , LOW ( - 1 )
006372 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006373 cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
006374 940e bdc4 	CALL SUBOPT_0x1D7
006376 e2a6      	LDI  R26,LOW(38)
006377 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
006379 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
00637b e2e6      	LDI  R30,LOW(38)
00637c e0f0      	LDI  R31,HIGH(38)
00637d c1d1      	RJMP _0x20E006C
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
00637e 36e0      	CPI  R30,LOW(0x60)
00637f e0a0      	LDI  R26,HIGH(0x60)
006380 07fa      	CPC  R31,R26
006381 f011      	BREQ PC+3
006382 940c 63ca 	JMP _0x16002A
006384 940e bddf 	CALL SUBOPT_0x1DD
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
006386 e0a5      	LDI  R26,LOW(5)
006387 940e bde6 	CALL SUBOPT_0x1DE
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
006389 f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
00638a e6e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
00638b e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
00638c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
00638d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
00638e 940e cec8 	CALL __PUTPARD1
                +
006390 e0e5     +LDI R30 , LOW ( 0x5 )
006391 e0f0     +LDI R31 , HIGH ( 0x5 )
006392 e060     +LDI R22 , BYTE3 ( 0x5 )
006393 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
006394 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 00E0                                         return -2;
006396 efee      	LDI  R30,LOW(65534)
006397 efff      	LDI  R31,HIGH(65534)
006398 c1b6      	RJMP _0x20E006C
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
006399 940e bbf1 	CALL SUBOPT_0x18B
00639b 85a8      	LDD  R26,Y+8
00639c 85b9      	LDD  R27,Y+8+1
00639d 940e 4920 	CALL _getAuxAinConfig
00639f 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
0063a0 2333      	TST  R19
0063a1 f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
0063a2 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
0063a3 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
0063a4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
0063a5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
0063a6 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
0063a8 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 00E7                                         return -3;
0063aa efed      	LDI  R30,LOW(65533)
0063ab efff      	LDI  R31,HIGH(65533)
0063ac c1a2      	RJMP _0x20E006C
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
0063ad ece4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
0063ae e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
0063af e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
0063b0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
0063b1 940e bde8 	CALL SUBOPT_0x1DF
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
0063b3 940e bdf4 	CALL SUBOPT_0x1E1
0063b5 91ec      	LD   R30,X
0063b6 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
0063b8 eee4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
0063b9 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
0063ba e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
0063bb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
0063bc 940e b971 	CALL SUBOPT_0x122
0063be 940e be0e 	CALL SUBOPT_0x1E6
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
0063c0 940e bdc4 	CALL SUBOPT_0x1D7
0063c2 e0a5      	LDI  R26,LOW(5)
0063c3 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
0063c5 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
0063c7 e0e5      	LDI  R30,LOW(5)
0063c8 e0f0      	LDI  R31,HIGH(5)
0063c9 c185      	RJMP _0x20E006C
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
0063ca 37e0      	CPI  R30,LOW(0x70)
0063cb e0a0      	LDI  R26,HIGH(0x70)
0063cc 07fa      	CPC  R31,R26
0063cd f011      	BREQ PC+3
0063ce 940c 6433 	JMP _0x16002D
0063d0 940e bddf 	CALL SUBOPT_0x1DD
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
0063d2 e2a9      	LDI  R26,LOW(41)
0063d3 940e bde6 	CALL SUBOPT_0x1DE
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
0063d5 f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
0063d6 efec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
0063d7 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
0063d8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
0063d9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
0063da 940e cec8 	CALL __PUTPARD1
                +
0063dc e2e9     +LDI R30 , LOW ( 0x29 )
0063dd e0f0     +LDI R31 , HIGH ( 0x29 )
0063de e060     +LDI R22 , BYTE3 ( 0x29 )
0063df e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
0063e0 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 00FE                                         return -2;
0063e2 efee      	LDI  R30,LOW(65534)
0063e3 efff      	LDI  R31,HIGH(65534)
0063e4 c16a      	RJMP _0x20E006C
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
0063e5 940e bbf1 	CALL SUBOPT_0x18B
0063e7 85a8      	LDD  R26,Y+8
0063e8 85b9      	LDD  R27,Y+8+1
0063e9 940e 495b 	CALL _getAuxAoutConfig
0063eb 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
0063ec 2333      	TST  R19
0063ed f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
0063ee e3e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
0063ef e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
0063f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
0063f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
0063f2 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
0063f4 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0105                                         return -3;
0063f6 efed      	LDI  R30,LOW(65533)
0063f7 efff      	LDI  R31,HIGH(65533)
0063f8 c156      	RJMP _0x20E006C
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
0063f9 e5e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
0063fa e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
0063fb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
0063fc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
0063fd 940e bde8 	CALL SUBOPT_0x1DF
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
0063ff 940e bdf9 	CALL SUBOPT_0x1E2
006401 91ec      	LD   R30,X
006402 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
006404 e7e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
006405 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
006406 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
006407 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
006408 940e b971 	CALL SUBOPT_0x122
00640a 940e be0e 	CALL SUBOPT_0x1E6
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
00640c 940e bdfe 	CALL SUBOPT_0x1E3
00640e 81e5      	LDD  R30,Z+5
00640f 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
006411 940e be03 	CALL SUBOPT_0x1E4
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006413 e000     +LDI R16 , LOW ( 0 )
006414 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
006415 3203     +CPI R16 , LOW ( 35 )
006416 e0e0     +LDI R30 , HIGH ( 35 )
006417 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006418 f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
006419 940e bdd4 	CALL SUBOPT_0x1DB
00641b 9636      	ADIW R30,6
00641c 0fe0      	ADD  R30,R16
00641d 1ff1      	ADC  R31,R17
00641e 81e0      	LD   R30,Z
00641f 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
006421 940e be09 	CALL SUBOPT_0x1E5
006423 f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
006424 940e bdd9 	CALL SUBOPT_0x1DC
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
006426 5f0f     +SUBI R16 , LOW ( - 1 )
006427 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006428 cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
006429 940e bdc4 	CALL SUBOPT_0x1D7
00642b e2a9      	LDI  R26,LOW(41)
00642c 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
00642e 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
006430 e2e9      	LDI  R30,LOW(41)
006431 e0f0      	LDI  R31,HIGH(41)
006432 c11c      	RJMP _0x20E006C
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
006433 38e0      	CPI  R30,LOW(0x80)
006434 e0a0      	LDI  R26,HIGH(0x80)
006435 07fa      	CPC  R31,R26
006436 f011      	BREQ PC+3
006437 940c 6492 	JMP _0x160034
006439 e2a5      	LDI  R26,LOW(37)
00643a 940e bde6 	CALL SUBOPT_0x1DE
                 ; 000B 0121                                     if(cnfgStrc == NULL){
00643c f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
00643d e9e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
00643e e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
00643f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
006440 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
006441 940e cec8 	CALL __PUTPARD1
                +
006443 e2e5     +LDI R30 , LOW ( 0x25 )
006444 e0f0     +LDI R31 , HIGH ( 0x25 )
006445 e060     +LDI R22 , BYTE3 ( 0x25 )
006446 e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
006447 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0123                                         return -2;
006449 efee      	LDI  R30,LOW(65534)
00644a efff      	LDI  R31,HIGH(65534)
00644b c103      	RJMP _0x20E006C
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
00644c 81ae      	LDD  R26,Y+6
00644d 81bf      	LDD  R27,Y+6+1
00644e 940e 49e0 	CALL _getBuzzerConfig
006450 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
006451 2333      	TST  R19
006452 f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
006453 ece7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
006454 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
006455 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
006456 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
006457 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
006459 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 012A                                         return -3;
00645b efed      	LDI  R30,LOW(65533)
00645c efff      	LDI  R31,HIGH(65533)
00645d c0f1      	RJMP _0x20E006C
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
00645e eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
00645f e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
006460 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
006461 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
006462 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
006464 e0ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
006465 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
006466 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
006467 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
006468 940e b96c 	CALL SUBOPT_0x121
00646a 91ec      	LD   R30,X
00646b 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
00646d 940e bdfe 	CALL SUBOPT_0x1E3
00646f 81e1      	LDD  R30,Z+1
006470 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
006472 940e be03 	CALL SUBOPT_0x1E4
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006474 e000     +LDI R16 , LOW ( 0 )
006475 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
006476 3203     +CPI R16 , LOW ( 35 )
006477 e0e0     +LDI R30 , HIGH ( 35 )
006478 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006479 f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
00647a 940e bdd4 	CALL SUBOPT_0x1DB
00647c 940e b97b 	CALL SUBOPT_0x124
00647e 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
006480 940e be09 	CALL SUBOPT_0x1E5
006482 f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
006483 940e bdd9 	CALL SUBOPT_0x1DC
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
006485 5f0f     +SUBI R16 , LOW ( - 1 )
006486 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006487 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
006488 940e bdc4 	CALL SUBOPT_0x1D7
00648a e2a5      	LDI  R26,LOW(37)
00648b 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
00648d 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
00648f e2e5      	LDI  R30,LOW(37)
006490 e0f0      	LDI  R31,HIGH(37)
006491 c0bd      	RJMP _0x20E006C
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
006492 39e0      	CPI  R30,LOW(0x90)
006493 e0a0      	LDI  R26,HIGH(0x90)
006494 07fa      	CPC  R31,R26
006495 f011      	BREQ PC+3
006496 940c 6502 	JMP _0x16003B
006498 e1a2      	LDI  R26,LOW(18)
006499 940e bde6 	CALL SUBOPT_0x1DE
                 ; 000B 0145                                     if(cnfgStrc == NULL){
00649b f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
00649c e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
00649d e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
00649e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
00649f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
0064a0 940e cec8 	CALL __PUTPARD1
                +
0064a2 e1e2     +LDI R30 , LOW ( 0x12 )
0064a3 e0f0     +LDI R31 , HIGH ( 0x12 )
0064a4 e060     +LDI R22 , BYTE3 ( 0x12 )
0064a5 e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
0064a6 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0147                                         return -2;
0064a8 efee      	LDI  R30,LOW(65534)
0064a9 efff      	LDI  R31,HIGH(65534)
0064aa c0a4      	RJMP _0x20E006C
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
0064ab 81ae      	LDD  R26,Y+6
0064ac 81bf      	LDD  R27,Y+6+1
0064ad 940e 4a77 	CALL _getEnvAlarmConfig
0064af 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
0064b0 2333      	TST  R19
0064b1 f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
0064b2 e6e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
0064b3 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
0064b4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
0064b5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
0064b6 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
0064b8 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 014E                                         return -3;
0064ba efed      	LDI  R30,LOW(65533)
0064bb efff      	LDI  R31,HIGH(65533)
0064bc c092      	RJMP _0x20E006C
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
0064bd e8ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
0064be e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
0064bf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
0064c0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
0064c1 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
0064c3 eae9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
0064c4 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
0064c5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
0064c6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
0064c7 940e b96c 	CALL SUBOPT_0x121
0064c9 940e b985 	CALL SUBOPT_0x126
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
0064cb ece2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
0064cc e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
0064cd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
0064ce e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
0064cf 940e b96c 	CALL SUBOPT_0x121
0064d1 9614      	ADIW R26,4
0064d2 940e b98a 	CALL SUBOPT_0x127
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
0064d4 edeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
0064d5 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
0064d6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
0064d7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
0064d8 940e b971 	CALL SUBOPT_0x122
0064da 940e b992 	CALL SUBOPT_0x129
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
0064dc efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
0064dd e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
0064de e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
0064df e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
0064e0 940e b971 	CALL SUBOPT_0x122
0064e2 940e b999 	CALL SUBOPT_0x12A
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
0064e4 e0ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
0064e5 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
0064e6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
0064e7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
0064e8 940e b96c 	CALL SUBOPT_0x121
0064ea 961e      	ADIW R26,14
0064eb 940e b98a 	CALL SUBOPT_0x127
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
0064ed e2e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
0064ee e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
0064ef e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
0064f0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
0064f1 940e b96c 	CALL SUBOPT_0x121
0064f3 9650      	ADIW R26,16
0064f4 940e b2f1 	CALL SUBOPT_0x1E
0064f6 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
0064f8 940e bdc4 	CALL SUBOPT_0x1D7
0064fa e1a2      	LDI  R26,LOW(18)
0064fb 940e bd56 	CALL SUBOPT_0x1C5
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
0064fd 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
0064ff e1e2      	LDI  R30,LOW(18)
006500 e0f0      	LDI  R31,HIGH(18)
006501 c04d      	RJMP _0x20E006C
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
006502 3ae0      	CPI  R30,LOW(0xA0)
006503 e0a0      	LDI  R26,HIGH(0xA0)
006504 07fa      	CPC  R31,R26
006505 f011      	BREQ PC+3
006506 940c 6548 	JMP _0x160041
006508 940e b551 	CALL SUBOPT_0x76
00650a 940e bdb9 	CALL SUBOPT_0x1D5
                 ; 000B 0164                                     if(cnfgStrc == NULL){
00650c f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
00650d e3ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
00650e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
00650f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
006510 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
006511 940e bded 	CALL SUBOPT_0x1E0
                 ; 000B 0166                                         return -2;
006513 efee      	LDI  R30,LOW(65534)
006514 efff      	LDI  R31,HIGH(65534)
006515 c039      	RJMP _0x20E006C
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
006516 81ae      	LDD  R26,Y+6
006517 81bf      	LDD  R27,Y+6+1
006518 940e 4b0a 	CALL _getStatusReportConfig
00651a 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
00651b 2333      	TST  R19
00651c f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
00651d e7e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
00651e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
00651f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
006520 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
006521 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
006523 940e baa5 	CALL SUBOPT_0x156
                 ; 000B 016D                                         return -3;
006525 efed      	LDI  R30,LOW(65533)
006526 efff      	LDI  R31,HIGH(65533)
006527 c027      	RJMP _0x20E006C
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
006528 eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
006529 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
00652a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
00652b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
00652c 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
00652e ece7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
00652f e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
006530 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
006531 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
006532 940e b96c 	CALL SUBOPT_0x121
006534 91ec      	LD   R30,X
006535 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
006537 edec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
006538 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
006539 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
00653a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
00653b 940e b96c 	CALL SUBOPT_0x121
00653d 9611      	ADIW R26,1
00653e 940e b2f1 	CALL SUBOPT_0x1E
006540 940e bbc8 	CALL SUBOPT_0x182
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
006542 940e bdc4 	CALL SUBOPT_0x1D7
006544 940e b551 	CALL SUBOPT_0x76
006546 940e bdc9 	CALL SUBOPT_0x1D8
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
006548 940e be13 	CALL SUBOPT_0x1E7
00654a 2fe5      	MOV  R30,R21
00654b 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 017D                                     return -1;
00654d efef      	LDI  R30,LOW(65535)
00654e efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E006C:
00654f 940e cf3f 	CALL __LOADLOCR6
006551 962d      	ADIW R28,13
006552 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
006553 93ba      	ST   -Y,R27
006554 93aa      	ST   -Y,R26
006555 940e b40f 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
006557 e030      	LDI  R19,0
                +
006558 e040     +LDI R20 , LOW ( 0 )
006559 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00655a 85ea      	LDD  R30,Y+10
00655b 7fe0      	ANDI R30,LOW(0xF0)
00655c 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
00655d e2e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
00655e e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
00655f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
006560 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
006561 940e b971 	CALL SUBOPT_0x122
006563 940e b81b 	CALL SUBOPT_0xE6
                 ; 000B 018D     print_payload(conf,len);
006565 940e bbf1 	CALL SUBOPT_0x18B
006567 85a8      	LDD  R26,Y+8
006568 85b9      	LDD  R27,Y+8+1
006569 940e 92cc 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
00656b 2fe3      	MOV  R30,R19
00656c 940e b414 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
00656e f4b9      	BRNE _0x160045
                +
00656f e4e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
006570 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
006571 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
006572 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
006573 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
006575 85a8      	LDD  R26,Y+8
006576 85b9      	LDD  R27,Y+8+1
006577 940e 4b47 	CALL _setPropertiesConfig
006579 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
00657a 2311      	TST  R17
00657b f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
00657c e6e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
00657d e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
00657e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
00657f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
006580 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
006582 efed      	LDI  R30,LOW(65533)
006583 efff      	LDI  R31,HIGH(65533)
006584 c107      	RJMP _0x20E006B
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
006585 c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
006586 32e0      	CPI  R30,LOW(0x20)
006587 e0a0      	LDI  R26,HIGH(0x20)
006588 07fa      	CPC  R31,R26
006589 f4b9      	BRNE _0x160047
                +
00658a e9e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
00658b e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
00658c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
00658d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
00658e 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
006590 85a8      	LDD  R26,Y+8
006591 85b9      	LDD  R27,Y+8+1
006592 940e 4bbe 	CALL _setOperatingConfig
006594 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
006595 2311      	TST  R17
006596 f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
006597 ebe0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
006598 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
006599 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
00659a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
00659b 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
00659d efed      	LDI  R30,LOW(65533)
00659e efff      	LDI  R31,HIGH(65533)
00659f c0ec      	RJMP _0x20E006B
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
0065a0 c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
0065a1 33e0      	CPI  R30,LOW(0x30)
0065a2 e0a0      	LDI  R26,HIGH(0x30)
0065a3 07fa      	CPC  R31,R26
0065a4 f4c9      	BRNE _0x160049
0065a5 940e be1a 	CALL SUBOPT_0x1E8
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
0065a7 edec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
0065a8 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
0065a9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
0065aa e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
0065ab 940e b41c 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
0065ad 940e be20 	CALL SUBOPT_0x1E9
0065af 940e 4c34 	CALL _setSensorConfig
0065b1 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
0065b2 2311      	TST  R17
0065b3 f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
0065b4 efed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
0065b5 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
0065b6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
0065b7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
0065b8 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
0065ba efed      	LDI  R30,LOW(65533)
0065bb efff      	LDI  R31,HIGH(65533)
0065bc c0cf      	RJMP _0x20E006B
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
0065bd c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
0065be 34e0      	CPI  R30,LOW(0x40)
0065bf e0a0      	LDI  R26,HIGH(0x40)
0065c0 07fa      	CPC  R31,R26
0065c1 f4c9      	BRNE _0x16004B
0065c2 940e be1a 	CALL SUBOPT_0x1E8
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
0065c4 e2e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
0065c5 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
0065c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
0065c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
0065c8 940e b41c 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
0065ca 940e be20 	CALL SUBOPT_0x1E9
0065cc 940e 4d8f 	CALL _setAuxDinConfig
0065ce 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
0065cf 2311      	TST  R17
0065d0 f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
0065d1 e4e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
0065d2 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
0065d3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
0065d4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
0065d5 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
0065d7 efed      	LDI  R30,LOW(65533)
0065d8 efff      	LDI  R31,HIGH(65533)
0065d9 c0b2      	RJMP _0x20E006B
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
0065da c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
0065db 35e0      	CPI  R30,LOW(0x50)
0065dc e0a0      	LDI  R26,HIGH(0x50)
0065dd 07fa      	CPC  R31,R26
0065de f4c9      	BRNE _0x16004D
0065df 940e be1a 	CALL SUBOPT_0x1E8
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
0065e1 e6ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
0065e2 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
0065e3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
0065e4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
0065e5 940e b41c 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
0065e7 940e be20 	CALL SUBOPT_0x1E9
0065e9 940e 4dd7 	CALL _setAuxDoutConfig
0065eb 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
0065ec 2311      	TST  R17
0065ed f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
0065ee e8ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
0065ef e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
0065f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
0065f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
0065f2 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
0065f4 efed      	LDI  R30,LOW(65533)
0065f5 efff      	LDI  R31,HIGH(65533)
0065f6 c095      	RJMP _0x20E006B
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
0065f7 c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
0065f8 36e0      	CPI  R30,LOW(0x60)
0065f9 e0a0      	LDI  R26,HIGH(0x60)
0065fa 07fa      	CPC  R31,R26
0065fb f4c9      	BRNE _0x16004F
0065fc 940e be1a 	CALL SUBOPT_0x1E8
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
0065fe ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
0065ff e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
006600 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
006601 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
006602 940e b41c 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
006604 940e be20 	CALL SUBOPT_0x1E9
006606 940e 4e5d 	CALL _setAuxAinConfig
006608 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
006609 2311      	TST  R17
00660a f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
00660b ede9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
00660c e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
00660d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
00660e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
00660f 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
006611 efed      	LDI  R30,LOW(65533)
006612 efff      	LDI  R31,HIGH(65533)
006613 c078      	RJMP _0x20E006B
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
006614 c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
006615 37e0      	CPI  R30,LOW(0x70)
006616 e0a0      	LDI  R26,HIGH(0x70)
006617 07fa      	CPC  R31,R26
006618 f4c9      	BRNE _0x160051
006619 940e be1a 	CALL SUBOPT_0x1E8
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
00661b e0e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
00661c e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
00661d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
00661e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
00661f 940e b41c 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
006621 940e be20 	CALL SUBOPT_0x1E9
006623 940e 4e9d 	CALL _setAuxAoutConfig
006625 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
006626 2311      	TST  R17
006627 f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
006628 e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
006629 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
00662a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
00662b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
00662c 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
00662e efed      	LDI  R30,LOW(65533)
00662f efff      	LDI  R31,HIGH(65533)
006630 c05b      	RJMP _0x20E006B
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
006631 c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
006632 38e0      	CPI  R30,LOW(0x80)
006633 e0a0      	LDI  R26,HIGH(0x80)
006634 07fa      	CPC  R31,R26
006635 f4b9      	BRNE _0x160053
                +
006636 e4ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
006637 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
006638 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
006639 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
00663a 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
00663c 85a8      	LDD  R26,Y+8
00663d 85b9      	LDD  R27,Y+8+1
00663e 940e 4f30 	CALL _setBuzzerConfig
006640 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
006641 2311      	TST  R17
006642 f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
006643 e6e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
006644 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
006645 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
006646 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
006647 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
006649 efed      	LDI  R30,LOW(65533)
00664a efff      	LDI  R31,HIGH(65533)
00664b c040      	RJMP _0x20E006B
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
00664c c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
00664d 39e0      	CPI  R30,LOW(0x90)
00664e e0a0      	LDI  R26,HIGH(0x90)
00664f 07fa      	CPC  R31,R26
006650 f4b9      	BRNE _0x160055
                +
006651 e9e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
006652 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
006653 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
006654 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
006655 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
006657 85a8      	LDD  R26,Y+8
006658 85b9      	LDD  R27,Y+8+1
006659 940e 4f96 	CALL _setEnvAlarmConfig
00665b 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
00665c 2311      	TST  R17
00665d f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
00665e eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
00665f e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
006660 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
006661 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
006662 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
006664 efed      	LDI  R30,LOW(65533)
006665 efff      	LDI  R31,HIGH(65533)
006666 c025      	RJMP _0x20E006B
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
006667 c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
006668 3ae0      	CPI  R30,LOW(0xA0)
006669 e0a0      	LDI  R26,HIGH(0xA0)
00666a 07fa      	CPC  R31,R26
00666b f4b1      	BRNE _0x160059
                +
00666c edea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
00666d e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
00666e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
00666f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
006670 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
006672 85a8      	LDD  R26,Y+8
006673 85b9      	LDD  R27,Y+8+1
006674 940e 5013 	CALL _setStatusReportConfig
006676 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
006677 2311      	TST  R17
006678 f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
006679 efea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
00667a e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
00667b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
00667c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
00667d 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
00667f efed      	LDI  R30,LOW(65533)
006680 efff      	LDI  R31,HIGH(65533)
006681 c00a      	RJMP _0x20E006B
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
006682 940e be13 	CALL SUBOPT_0x1E7
006684 2fe3      	MOV  R30,R19
006685 940e b342 	CALL SUBOPT_0x2A
                 ; 000B 01E6                                     return -1;
006687 efef      	LDI  R30,LOW(65535)
006688 efff      	LDI  R31,HIGH(65535)
006689 c002      	RJMP _0x20E006B
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
00668a e0e0      	LDI  R30,LOW(0)
00668b e0f0      	LDI  R31,HIGH(0)
                 _0x20E006B:
00668c 940e cf3f 	CALL __LOADLOCR6
00668e 962b      	ADIW R28,11
00668f 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
006690 940e cecd 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
006692 940e b5c7 	CALL SUBOPT_0x89
006694 940e b5da 	CALL SUBOPT_0x8C
006696 940e cf33 	CALL __CPD21
006698 f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
006699 e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
00669a e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
00669b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
00669c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
00669d 940e be25 	CALL SUBOPT_0x1EA
00669f 940e be25 	CALL SUBOPT_0x1EA
0066a1 940e b300 	CALL SUBOPT_0x21
                 ; 000B 01EF         return -1;
0066a3 efef      	LDI  R30,LOW(65535)
0066a4 efff      	LDI  R31,HIGH(65535)
0066a5 c0e2      	RJMP _0x20E006A
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
0066a6 e0e0      	LDI  R30,LOW(0)
0066a7 e0f0      	LDI  R31,HIGH(0)
0066a8 c0df      	RJMP _0x20E006A
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
0066a9 940e bdb6 	CALL SUBOPT_0x1D4
0066ab 931a      	ST   -Y,R17
0066ac 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
0066ad 940e be29 	CALL SUBOPT_0x1EB
0066af 85e8      	LDD  R30,Y+8
0066b0 85f9      	LDD  R31,Y+8+1
0066b1 940e b436 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
0066b3 940e be2e 	CALL SUBOPT_0x1EC
0066b5 f451      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
0066b6 e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
0066b7 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
0066b8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
0066b9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
0066ba 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
0066bc efef      	LDI  R30,LOW(65535)
0066bd efff      	LDI  R31,HIGH(65535)
0066be 940c 6a36 	JMP  _0x20E0066
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
0066c0 e9e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
0066c1 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
0066c2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
0066c3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
0066c4 940e be32 	CALL SUBOPT_0x1ED
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
0066c6 940e b6e0 	CALL SUBOPT_0xB5
0066c8 940e 4501 	CALL _RTC_setBinary
0066ca 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
0066cb 2311      	TST  R17
0066cc f452      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
0066cd ecee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
0066ce e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
0066cf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
0066d0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
0066d1 940e be32 	CALL SUBOPT_0x1ED
                 ; 000B 0206         return -1;
0066d3 efef      	LDI  R30,LOW(65535)
0066d4 efff      	LDI  R31,HIGH(65535)
0066d5 940c 6a36 	JMP  _0x20E0066
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
0066d7 e0e0      	LDI  R30,LOW(0)
0066d8 e0f0      	LDI  R31,HIGH(0)
0066d9 940c 6a36 	JMP  _0x20E0066
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
0066db 940e be36 	CALL SUBOPT_0x1EE
                 ;	period -> Y+2
                 ;	res -> R16,R17
0066dd 940e be2e 	CALL SUBOPT_0x1EC
0066df f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
0066e0 efee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
0066e1 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
0066e2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
0066e3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
0066e4 940e b22a 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
0066e6 c024      	RJMP _0x16005E
                 _0x16005D:
0066e7 940e b6e0 	CALL SUBOPT_0xB5
                +
0066e9 32ac     +CPI R26 , LOW ( 0x12C )
0066ea e0e1     +LDI R30 , HIGH ( 0x12C )
0066eb 07be     +CPC R27 , R30
0066ec e0e0     +LDI R30 , BYTE3 ( 0x12C )
0066ed 078e     +CPC R24 , R30
0066ee e0e0     +LDI R30 , BYTE4 ( 0x12C )
0066ef 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
0066f0 f050      	BRLO _0x160060
0066f1 940e b6e0 	CALL SUBOPT_0xB5
                +
0066f3 38a1     +CPI R26 , LOW ( 0x15181 )
0066f4 e5e1     +LDI R30 , HIGH ( 0x15181 )
0066f5 07be     +CPC R27 , R30
0066f6 e0e1     +LDI R30 , BYTE3 ( 0x15181 )
0066f7 078e     +CPC R24 , R30
0066f8 e0e0     +LDI R30 , BYTE4 ( 0x15181 )
0066f9 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
0066fa f050      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
0066fb e2e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
0066fc e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
0066fd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
0066fe e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
0066ff 940e be32 	CALL SUBOPT_0x1ED
                 ; 000B 0215         return -1;
006701 efef      	LDI  R30,LOW(65535)
006702 efff      	LDI  R31,HIGH(65535)
006703 940c 6884 	JMP  _0x20E0068
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
006705 e4ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
006706 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
006707 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
006708 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
006709 940e be32 	CALL SUBOPT_0x1ED
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
00670b 940e b6e0 	CALL SUBOPT_0xB5
00670d 940e 7346 	CALL _ALARM_mute
00670f 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
006710 2311      	TST  R17
006711 f452      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
006712 e7e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
006713 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
006714 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
006715 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
006716 940e be32 	CALL SUBOPT_0x1ED
                 ; 000B 021E         return -1;
006718 efef      	LDI  R30,LOW(65535)
006719 efff      	LDI  R31,HIGH(65535)
00671a 940c 6884 	JMP  _0x20E0068
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
00671c 940c 6882 	JMP  _0x20E0067
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
00671e e0e0      	LDI  R30,LOW(0)
00671f e0f0      	LDI  R31,HIGH(0)
006720 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
006721 940e b595 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
006723 d0d9      	RCALL _ETH_findFreeSlotWaitQueue
006724 2f0e      	MOV  R16,R30
006725 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
006726 2311      	TST  R17
006727 f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
006728 eae2     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
006729 e4f2     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
00672a e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
00672b e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
00672c 940e b22a 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
00672e efef      	LDI  R30,LOW(65535)
00672f efff      	LDI  R31,HIGH(65535)
006730 c055      	RJMP _0x20E0069
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
006731 940e bb03 	CALL SUBOPT_0x166
                +
006733 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
006734 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
006735 93ff      	PUSH R31
006736 93ef      	PUSH R30
006737 81ac      	LDD  R26,Y+4
006738 81bd      	LDD  R27,Y+4+1
006739 940e 96fc 	CALL _malloc
00673b 91af      	POP  R26
00673c 91bf      	POP  R27
00673d 93ed      	ST   X+,R30
00673e 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
00673f 940e bb03 	CALL SUBOPT_0x166
006741 940e bb40 	CALL SUBOPT_0x16D
006743 9730      	SBIW R30,0
006744 f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
006745 ede7     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
006746 e4f2     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
006747 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
006748 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
006749 940e b90e 	CALL SUBOPT_0x111
                 ; 000C 001F         return -1;
00674b efef      	LDI  R30,LOW(65535)
00674c efff      	LDI  R31,HIGH(65535)
00674d c038      	RJMP _0x20E0069
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
00674e 940e bb03 	CALL SUBOPT_0x166
006750 940e bb40 	CALL SUBOPT_0x16D
006752 93fa      	ST   -Y,R31
006753 93ea      	ST   -Y,R30
006754 940e bbf1 	CALL SUBOPT_0x18B
006756 85a8      	LDD  R26,Y+8
006757 85b9      	LDD  R27,Y+8+1
006758 940e 9739 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
00675a 940e bb03 	CALL SUBOPT_0x166
                +
00675c 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00675d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00675e 81ac      	LDD  R26,Y+4
00675f 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
006760 940e bb03 	CALL SUBOPT_0x166
                +
006762 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
006763 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
006764 85a8      	LDD  R26,Y+8
006765 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
006766 940e bb03 	CALL SUBOPT_0x166
006768 940e be3b 	CALL SUBOPT_0x1EF
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
00676a 940e bb03 	CALL SUBOPT_0x166
                +
00676c 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00676d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00676e 81aa      	LDD  R26,Y+2
00676f 81bb      	LDD  R27,Y+2+1
006770 83a0      	STD  Z+0,R26
006771 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
006772 940e bb03 	CALL SUBOPT_0x166
006774 940e bb32 	CALL SUBOPT_0x16B
006776 940e bb37 	CALL SUBOPT_0x16C
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
006778 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
006779 efee     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
00677a e4f2     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
00677b e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
00677c e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
00677d 940e be40 	CALL SUBOPT_0x1F0
00677f 01f8      	MOVW R30,R16
006780 940e cdbd 	CALL __CWD1
006782 940e b300 	CALL SUBOPT_0x21
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
006784 2de7      	MOV  R30,R7
006785 e0f0      	LDI  R31,0
                 _0x20E0069:
006786 8119      	LDD  R17,Y+1
006787 8108      	LDD  R16,Y+0
                 _0x20E006A:
006788 9629      	ADIW R28,9
006789 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
00678a 93aa      	ST   -Y,R26
00678b 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
00678c e010      	LDI  R17,LOW(0)
                 _0x180006:
00678d 301f      	CPI  R17,15
00678e f508      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
00678f 940e be45 	CALL SUBOPT_0x1F1
006791 81e0      	LD   R30,Z
006792 81a9      	LDD  R26,Y+1
006793 17ea      	CP   R30,R26
006794 f4c9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
006795 e0ab      	LDI  R26,LOW(11)
006796 9f1a      	MUL  R17,R26
006797 01f0      	MOVW R30,R0
006798 940e bb40 	CALL SUBOPT_0x16D
00679a 940e be4b 	CALL SUBOPT_0x1F2
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
00679c 940e be5f 	CALL SUBOPT_0x1F3
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
00679e 940e be65 	CALL SUBOPT_0x1F4
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
0067a0 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
0067a1 e4e9     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
0067a2 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
0067a3 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
0067a4 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
0067a5 940e be78 	CALL SUBOPT_0x1F5
0067a7 940e be7d 	CALL SUBOPT_0x1F6
                 ; 000C 0044             return ETH_waitQCount;
0067a9 2de7      	MOV  R30,R7
0067aa e0f0      	LDI  R31,0
0067ab 8118      	LDD  R17,Y+0
0067ac 940c 6bd9 	JMP  _0x20E0062
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
0067ae 5f1f      	SUBI R17,-1
0067af cfdd      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
0067b0 e9e6     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
0067b1 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
0067b2 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
0067b3 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
0067b4 940e cec8 	CALL __PUTPARD1
0067b6 81ed      	LDD  R30,Y+5
0067b7 940e b342 	CALL SUBOPT_0x2A
                 ; 000C 0048     return -1;
0067b9 efef      	LDI  R30,LOW(65535)
0067ba efff      	LDI  R31,HIGH(65535)
0067bb 8118      	LDD  R17,Y+0
0067bc 940c 6bd9 	JMP  _0x20E0062
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0067be 931a      	ST   -Y,R17
                 ;	i -> R17
0067bf e010      	LDI  R17,LOW(0)
                 _0x18000A:
0067c0 301f      	CPI  R17,15
0067c1 f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
0067c2 e0ab      	LDI  R26,LOW(11)
0067c3 9f1a      	MUL  R17,R26
0067c4 01f0      	MOVW R30,R0
0067c5 940e bb40 	CALL SUBOPT_0x16D
0067c7 940e be4b 	CALL SUBOPT_0x1F2
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
0067c9 940e be5f 	CALL SUBOPT_0x1F3
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
0067cb 940e be65 	CALL SUBOPT_0x1F4
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
0067cd 5f1f      	SUBI R17,-1
0067ce cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
0067cf 940c 6b1e 	JMP  _0x20E0064
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0067d1 93aa      	ST   -Y,R26
0067d2 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0067d3 e010      	LDI  R17,LOW(0)
                 _0x18000D:
0067d4 301f      	CPI  R17,15
0067d5 f460      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
0067d6 940e be45 	CALL SUBOPT_0x1F1
0067d8 81e0      	LD   R30,Z
0067d9 81a9      	LDD  R26,Y+1
0067da 17ea      	CP   R30,R26
0067db f421      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
0067dc e0e1      	LDI  R30,LOW(1)
0067dd 8118      	LDD  R17,Y+0
0067de 940c 6bd9 	JMP  _0x20E0062
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
0067e0 5f1f      	SUBI R17,-1
0067e1 cff2      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
0067e2 e0e0      	LDI  R30,LOW(0)
0067e3 8118      	LDD  R17,Y+0
0067e4 940c 6bd9 	JMP  _0x20E0062
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
0067e6 93aa      	ST   -Y,R26
0067e7 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0067e8 e010      	LDI  R17,LOW(0)
                 _0x180011:
0067e9 3614      	CPI  R17,100
0067ea f470      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
0067eb 940e b6b9 	CALL SUBOPT_0xAD
0067ed 51e4      	SUBI R30,LOW(-_sess_list)
0067ee 4efb      	SBCI R31,HIGH(-_sess_list)
0067ef 81e0      	LD   R30,Z
0067f0 81a9      	LDD  R26,Y+1
0067f1 17ea      	CP   R30,R26
0067f2 f421      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
0067f3 e0e1      	LDI  R30,LOW(1)
0067f4 8118      	LDD  R17,Y+0
0067f5 940c 6bd9 	JMP  _0x20E0062
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
0067f7 5f1f      	SUBI R17,-1
0067f8 cff0      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
0067f9 e0e0      	LDI  R30,LOW(0)
0067fa 8118      	LDD  R17,Y+0
0067fb 940c 6bd9 	JMP  _0x20E0062
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0067fd 931a      	ST   -Y,R17
                 ;	i -> R17
0067fe e010      	LDI  R17,LOW(0)
                 _0x180015:
0067ff 301f      	CPI  R17,15
006800 f468      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006801 e0ab      	LDI  R26,LOW(11)
006802 9f1a      	MUL  R17,R26
006803 01f0      	MOVW R30,R0
                +
006804 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006805 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006806 81e0      	LD   R30,Z
006807 30e0      	CPI  R30,0
006808 f419      	BRNE _0x180017
                 ; 000C 0079             return i;
006809 2fe1      	MOV  R30,R17
00680a 940c 6b1e 	JMP  _0x20E0064
                 ; 000C 007A         }
                 ; 000C 007B     }
                 _0x180017:
00680c 5f1f      	SUBI R17,-1
00680d cff1      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
00680e efef      	LDI  R30,LOW(255)
00680f 940c 6b1e 	JMP  _0x20E0064
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
006811 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
006812 940e 9647 	CALL _rand
006814 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006815 2fa1      	MOV  R26,R17
006816 dfba      	RCALL _ETH_isIdExist
006817 30e0      	CPI  R30,0
006818 f441      	BRNE _0x18001B
006819 3010      	CPI  R17,0
00681a f031      	BREQ _0x18001B
00681b 3f1f      	CPI  R17,255
00681c f021      	BREQ _0x18001B
00681d 2fa1      	MOV  R26,R17
00681e dfc7      	RCALL _ETH_isIdUsed
00681f 30e0      	CPI  R30,0
006820 f009      	BREQ _0x18001A
                 _0x18001B:
006821 cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
006822 01f4      	MOVW R30,R8
006823 51e4      	SUBI R30,LOW(-_sess_list)
006824 4efb      	SBCI R31,HIGH(-_sess_list)
006825 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006826 01d4      	MOVW R26,R8
006827 9611      	ADIW R26,1
006828 940e be83 	CALL SUBOPT_0x1F7
00682a 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
00682b 2fe1      	MOV  R30,R17
00682c 940c 6b1e 	JMP  _0x20E0064
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;#include "dht11.h"
                 ;
                 ;#define MAX(x, y) (((x) > (y)) ? (x) : (y))
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;extern ST_DHT11 dhtDevice;
                 ;ST_DHT11 dhtDevice;
                 ;
                 ;int sensorRead(int ch, struct sens_val_st *sensor){
                 ; 000D 0012 int sensorRead(int ch, struct sens_val_st *sensor){
                 
                 	.CSEG
                 _sensorRead:
                 ; 000D 0013     int dhtRet = 0;
                 ; 000D 0014 
                 ; 000D 0015     updateSensorADC(ch);
00682e 940e b595 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*sensor -> Y+2
                 ;	dhtRet -> R16,R17
                +
006830 e000     +LDI R16 , LOW ( 0 )
006831 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006832 81ac      	LDD  R26,Y+4
006833 81bd      	LDD  R27,Y+4+1
006834 d053      	RCALL _updateSensorADC
                 ; 000D 0016     if(ch==0){
006835 81ec      	LDD  R30,Y+4
006836 81fd      	LDD  R31,Y+4+1
006837 9730      	SBIW R30,0
006838 f439      	BRNE _0x1A0003
                 ; 000D 0017        sensor->value = adcData[ch];
006839 940e be88 	CALL SUBOPT_0x1F8
00683b 940e b2e1 	CALL SUBOPT_0x1B
00683d 940e be8c 	CALL SUBOPT_0x1F9
                 ; 000D 0018     }else if(ch==3){
00683f c03d      	RJMP _0x1A0004
                 _0x1A0003:
006840 81ac      	LDD  R26,Y+4
006841 81bd      	LDD  R27,Y+4+1
006842 9713      	SBIW R26,3
006843 f439      	BRNE _0x1A0005
                 ; 000D 0019        sensor->value = adcData[ch];
006844 940e be88 	CALL SUBOPT_0x1F8
006846 940e b2e1 	CALL SUBOPT_0x1B
006848 940e be8c 	CALL SUBOPT_0x1F9
                 ; 000D 001A     }else if(ch==4){
00684a c032      	RJMP _0x1A0006
                 _0x1A0005:
00684b 81ac      	LDD  R26,Y+4
00684c 81bd      	LDD  R27,Y+4+1
00684d 9714      	SBIW R26,4
00684e f439      	BRNE _0x1A0007
                 ; 000D 001B        sensor->value = adcData[ch];
00684f 940e be88 	CALL SUBOPT_0x1F8
006851 940e b2e1 	CALL SUBOPT_0x1B
006853 940e be8c 	CALL SUBOPT_0x1F9
                 ; 000D 001C     }else if((ch==1) || (ch==2)){
006855 c027      	RJMP _0x1A0008
                 _0x1A0007:
006856 81ac      	LDD  R26,Y+4
006857 81bd      	LDD  R27,Y+4+1
006858 9711      	SBIW R26,1
006859 f021      	BREQ _0x1A000A
00685a 81ac      	LDD  R26,Y+4
00685b 81bd      	LDD  R27,Y+4+1
00685c 9712      	SBIW R26,2
00685d f4f9      	BRNE _0x1A0009
                 _0x1A000A:
                 ; 000D 001D         dhtRet = dhtDevice.status;
                +
00685e 9100 1558+LDS R16 , _dhtDevice + ( 8 )
006860 9110 1559+LDS R17 , _dhtDevice + ( 8 ) + 1
                 	__GETWRMN 16,17,_dhtDevice,8
                 ; 000D 001E         if(dhtRet == DHT11_SUCCESS){
006862 e0e1      	LDI  R30,LOW(1)
006863 e0f0      	LDI  R31,HIGH(1)
006864 17e0      	CP   R30,R16
006865 07f1      	CPC  R31,R17
006866 f439      	BRNE _0x1A000C
                 ; 000D 001F            sensor->value = adcData[ch];
006867 940e be88 	CALL SUBOPT_0x1F8
006869 940e b2e1 	CALL SUBOPT_0x1B
00686b 940e be8c 	CALL SUBOPT_0x1F9
                 ; 000D 0020         }else if(dhtRet == DHT11_ERROR_TIMEOUT){
00686d c00f      	RJMP _0x1A000D
                 _0x1A000C:
00686e e0e3      	LDI  R30,LOW(3)
00686f e0f0      	LDI  R31,HIGH(3)
006870 17e0      	CP   R30,R16
006871 07f1      	CPC  R31,R17
006872 f029      	BREQ _0x1A003B
                 ; 000D 0021            sensor->status  = SENS_ERROR;
                 ; 000D 0022            //return -2;
                 ; 000D 0023         }else if(dhtRet == DHT11_ERROR_CHECKSUM){
006873 e0e2      	LDI  R30,LOW(2)
006874 e0f0      	LDI  R31,HIGH(2)
006875 17e0      	CP   R30,R16
006876 07f1      	CPC  R31,R17
006877 f429      	BRNE _0x1A0010
                 ; 000D 0024            sensor->status  = SENS_ERROR;
                 _0x1A003B:
006878 81aa      	LDD  R26,Y+2
006879 81bb      	LDD  R27,Y+2+1
00687a 9614      	ADIW R26,4
00687b e8e0      	LDI  R30,LOW(128)
00687c 93ec      	ST   X,R30
                 ; 000D 0025            //return -2;
                 ; 000D 0026         }
                 ; 000D 0027     }
                 _0x1A0010:
                 _0x1A000D:
                 ; 000D 0028 
                 ; 000D 0029     sensor->status  = SENS_NORMAL;
                 _0x1A0009:
                 _0x1A0008:
                 _0x1A0006:
                 _0x1A0004:
00687d 81aa      	LDD  R26,Y+2
00687e 81bb      	LDD  R27,Y+2+1
00687f 9614      	ADIW R26,4
006880 e0e0      	LDI  R30,LOW(0)
006881 93ec      	ST   X,R30
                 ; 000D 002A     return 0;
                 _0x20E0067:
006882 e0e0      	LDI  R30,LOW(0)
006883 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
006884 8119      	LDD  R17,Y+1
006885 8108      	LDD  R16,Y+0
006886 9626      	ADIW R28,6
006887 9508      	RET
                 ; 000D 002B }
                 ;
                 ;void updateSensorADC(int ch)
                 ; 000D 002E {
                 _updateSensorADC:
                 ; 000D 002F     int adc_raw = 0;
                 ; 000D 0030     int dhtRet = 0;
                 ; 000D 0031     float voltCutOff = 0.0;
                 ; 000D 0032     float ACS709offset = 18.5;
                 ; 000D 0033     float buffAmpSensor[60];
                 ; 000D 0034     float buffVoltSensor[50];
                 ; 000D 0035     float buff420Sensor[10];
                 ; 000D 0036     float bufferTemp[2] = {0,0};
                 ; 000D 0037     float bufferHumi[2] = {0,0};
                 ; 000D 0038     int i=0,j=0;
                 ; 000D 0039     int dht11Reread=0;
                 ; 000D 003A     float ampValue = 0.0;
                 ; 000D 003B     float voltValue = 0.0;
                 ; 000D 003C     float mA420Value = 0.0;
                 ; 000D 003D 
                 ; 000D 003E     adc_raw     = read_adc(8+ch);
006888 93ba      	ST   -Y,R27
006889 93aa      	ST   -Y,R26
00688a 9728      	SBIW R28,8
00688b 50d2      	SUBI R29,2
                +
00688c e088     +LDI R24 , LOW ( 520 )
00688d e092     +LDI R25 , HIGH ( 520 )
                 	__GETWRN 24,25,520
00688e e0a0      	LDI  R26,LOW(0)
00688f e0b0      	LDI  R27,HIGH(0)
006890 ecee      	LDI  R30,LOW(_0x1A0011*2)
006891 e4f3      	LDI  R31,HIGH(_0x1A0011*2)
006892 e060      	LDI  R22,BYTE3(_0x1A0011*2)
006893 940e cf47 	CALL __INITLOCW
006895 940e b396 	CALL SUBOPT_0x37
                 ;	ch -> Y+526
                 ;	adc_raw -> R16,R17
                 ;	dhtRet -> R18,R19
                 ;	voltCutOff -> Y+522
                 ;	ACS709offset -> Y+518
                 ;	buffAmpSensor -> Y+278
                 ;	buffVoltSensor -> Y+78
                 ;	buff420Sensor -> Y+38
                 ;	bufferTemp -> Y+30
                 ;	bufferHumi -> Y+22
                 ;	i -> R20,R21
                 ;	j -> Y+20
                 ;	dht11Reread -> Y+18
                 ;	ampValue -> Y+14
                 ;	voltValue -> Y+10
                 ;	mA420Value -> Y+6
006897 940e be91 	CALL SUBOPT_0x1FA
006899 018f      	MOVW R16,R30
                 ; 000D 003F     if(ch==0){
00689a 940e be98 	CALL SUBOPT_0x1FB
00689c 9730      	SBIW R30,0
00689d f581      	BRNE _0x1A0012
                 ; 000D 0040         //adcData[ch] =   adc_raw;
                 ; 000D 0041         //mA420Value = ((((adcData[ch]+5.0/1023.0)*3.30)/3.30)*20.0);
                 ; 000D 0042 
                 ; 000D 0043         for(i=0;i<10;i++){
                +
00689e e040     +LDI R20 , LOW ( 0 )
00689f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0014:
                +
0068a0 304a     +CPI R20 , LOW ( 10 )
0068a1 e0e0     +LDI R30 , HIGH ( 10 )
0068a2 075e     +CPC R21 , R30
                 	__CPWRN 20,21,10
0068a3 f49c      	BRGE _0x1A0015
                 ; 000D 0044             buff420Sensor[i] = read_adc(8+ch);
0068a4 01fa      	MOVW R30,R20
0068a5 01de      	MOVW R26,R28
0068a6 9696      	ADIW R26,38
0068a7 940e be9f 	CALL SUBOPT_0x1FC
0068a9 93ff      	PUSH R31
0068aa 93ef      	PUSH R30
0068ab 940e be91 	CALL SUBOPT_0x1FA
0068ad 91af      	POP  R26
0068ae 91bf      	POP  R27
0068af 940e b68e 	CALL SUBOPT_0xA5
                 ; 000D 0045             delay_us(10);
                +
0068b1 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0068b2 958a     +DEC R24
0068b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 000D 0046         }
                +
0068b4 5f4f     +SUBI R20 , LOW ( - 1 )
0068b5 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0068b6 cfe9      	RJMP _0x1A0014
                 _0x1A0015:
                 ; 000D 0047         mA420Value = ((average(buff420Sensor,10)+5.0)/1023.0)*20.0;
0068b7 01fe      	MOVW R30,R28
0068b8 96b6      	ADIW R30,38
0068b9 940e bc4d 	CALL SUBOPT_0x19C
0068bb 940e bea4 	CALL SUBOPT_0x1FD
0068bd 940e beac 	CALL SUBOPT_0x1FE
                +
0068bf e0a0     +LDI R26 , LOW ( 0x41A00000 )
0068c0 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
0068c1 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
0068c2 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
0068c3 940e cc81 	CALL __MULF12
0068c5 940e b6ea 	CALL SUBOPT_0xB7
                 ; 000D 0048         //mA420Value = (((adcData[ch]+5.0/1023.0)*3.30)/165.0);     //R=165 Ohm
                 ; 000D 0049        //printDebug("[%d]ADC: %f, mA: %f \r\n", ch, adcData[ch], mA420Value);
                 ; 000D 004A        //adcData[ch] = (adcData[ch]+5/1023.0)*3.30;
                 ; 000D 004B        adcData[ch] = mA420Value;
0068c7 940e beb3 	CALL SUBOPT_0x1FF
0068c9 0fea      	ADD  R30,R26
0068ca 1ffb      	ADC  R31,R27
0068cb 940e beb6 	CALL SUBOPT_0x200
                 ; 000D 004C     }else if(ch==3){
0068cd c143      	RJMP _0x1A0016
                 _0x1A0012:
0068ce 940e bebb 	CALL SUBOPT_0x201
0068d0 9713      	SBIW R26,3
0068d1 f591      	BRNE _0x1A0017
                 ; 000D 004D         //adcData[ch] =   adc_raw;
                 ; 000D 004E         //voltValue = ((((adcData[ch]+5.0)/1023.0)*3.30)/3.30)*1000.0;
                 ; 000D 004F         for(i=0;i<50;i++){
                +
0068d2 e040     +LDI R20 , LOW ( 0 )
0068d3 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0019:
                +
0068d4 3342     +CPI R20 , LOW ( 50 )
0068d5 e0e0     +LDI R30 , HIGH ( 50 )
0068d6 075e     +CPC R21 , R30
                 	__CPWRN 20,21,50
0068d7 f4a4      	BRGE _0x1A001A
                 ; 000D 0050             buffVoltSensor[i] = read_adc(8+ch);
0068d8 01fa      	MOVW R30,R20
0068d9 01de      	MOVW R26,R28
0068da 5ba2      	SUBI R26,LOW(-(78))
0068db 4fbf      	SBCI R27,HIGH(-(78))
0068dc 940e be9f 	CALL SUBOPT_0x1FC
0068de 93ff      	PUSH R31
0068df 93ef      	PUSH R30
0068e0 940e be91 	CALL SUBOPT_0x1FA
0068e2 91af      	POP  R26
0068e3 91bf      	POP  R27
0068e4 940e b68e 	CALL SUBOPT_0xA5
                 ; 000D 0051             delay_us(10);
                +
0068e6 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0068e7 958a     +DEC R24
0068e8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 000D 0052         }
                +
0068e9 5f4f     +SUBI R20 , LOW ( - 1 )
0068ea 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0068eb cfe8      	RJMP _0x1A0019
                 _0x1A001A:
                 ; 000D 0053 
                 ; 000D 0054 
                 ; 000D 0055         voltValue = ((average(buffVoltSensor,50)+5.0)/1023.0)*1000.0;
0068ec 01fe      	MOVW R30,R28
0068ed 5be2      	SUBI R30,LOW(-(78))
0068ee 4fff      	SBCI R31,HIGH(-(78))
0068ef 93fa      	ST   -Y,R31
0068f0 93ea      	ST   -Y,R30
0068f1 940e bec2 	CALL SUBOPT_0x202
0068f3 940e bea4 	CALL SUBOPT_0x1FD
0068f5 940e beac 	CALL SUBOPT_0x1FE
                +
0068f7 e0a0     +LDI R26 , LOW ( 0x447A0000 )
0068f8 e0b0     +LDI R27 , HIGH ( 0x447A0000 )
0068f9 e78a     +LDI R24 , BYTE3 ( 0x447A0000 )
0068fa e494     +LDI R25 , BYTE4 ( 0x447A0000 )
                 	__GETD2N 0x447A0000
0068fb 940e cc81 	CALL __MULF12
0068fd 940e bec5 	CALL SUBOPT_0x203
                 ; 000D 0056         //printDebug("[%d]ADC: %f, Volt(raw): %f, Volt(AC): %f \r\n", ch, adcData[ch], (adcData[ch]+5.0/1023.0)*3.30, voltValue);
                 ; 000D 0057 
                 ; 000D 0058        adcData[ch] = voltValue;
0068ff 940e beb3 	CALL SUBOPT_0x1FF
006901 940e beca 	CALL SUBOPT_0x204
                 ; 000D 0059        //adcData[ch] = (adcData[ch]+5/1023)*3.30;
                 ; 000D 005A     }else if(ch==4){
006903 c10d      	RJMP _0x1A001B
                 _0x1A0017:
006904 940e bebb 	CALL SUBOPT_0x201
006906 9714      	SBIW R26,4
006907 f011      	BREQ PC+3
006908 940c 6974 	JMP _0x1A001C
                 ; 000D 005B         memset(buffAmpSensor,0,sizeof(buffAmpSensor));
00690a 01fe      	MOVW R30,R28
00690b 5eea      	SUBI R30,LOW(-(278))
00690c 4ffe      	SBCI R31,HIGH(-(278))
00690d 940e b84f 	CALL SUBOPT_0xF1
00690f efa0      	LDI  R26,LOW(240)
006910 e0b0      	LDI  R27,0
006911 940e 977e 	CALL _memset
                 ; 000D 005C         for(i=0;i<60;i++){
                +
006913 e040     +LDI R20 , LOW ( 0 )
006914 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A001E:
                +
006915 334c     +CPI R20 , LOW ( 60 )
006916 e0e0     +LDI R30 , HIGH ( 60 )
006917 075e     +CPC R21 , R30
                 	__CPWRN 20,21,60
006918 f4ac      	BRGE _0x1A001F
                 ; 000D 005D           buffAmpSensor[i] =  read_adc(8+ch);
006919 01fa      	MOVW R30,R20
00691a 01de      	MOVW R26,R28
00691b 5eaa      	SUBI R26,LOW(-(278))
00691c 4fbe      	SBCI R27,HIGH(-(278))
00691d 940e be9f 	CALL SUBOPT_0x1FC
00691f 93ff      	PUSH R31
006920 93ef      	PUSH R30
006921 940e be91 	CALL SUBOPT_0x1FA
006923 91af      	POP  R26
006924 91bf      	POP  R27
006925 940e b68e 	CALL SUBOPT_0xA5
                 ; 000D 005E           delay_ms(1);
006927 940e b54e 	CALL SUBOPT_0x75
006929 940e cb81 	CALL _delay_ms
                 ; 000D 005F         }
                +
00692b 5f4f     +SUBI R20 , LOW ( - 1 )
00692c 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00692d cfe7      	RJMP _0x1A001E
                 _0x1A001F:
                 ; 000D 0060         //adcData[ch] = average(buffAmpSensor);
                 ; 000D 0061        // voltCutOff = fabs(((((adcData[ch]+5.0)/1023.0)*3.30)-1.65));
                 ; 000D 0062         voltCutOff = fabs(((((voltPeak(buffAmpSensor)+5.0)/1023.0)*3.30)-1.65));
00692e 01de      	MOVW R26,R28
00692f 5eaa      	SUBI R26,LOW(-(278))
006930 4fbe      	SBCI R27,HIGH(-(278))
006931 d0e4      	RCALL _voltPeak
                +
006932 e0a0     +LDI R26 , LOW ( 0x40A00000 )
006933 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
006934 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
006935 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
006936 940e b674 	CALL SUBOPT_0xA0
006938 940e beac 	CALL SUBOPT_0x1FE
                +
00693a e3a3     +LDI R26 , LOW ( 0x40533333 )
00693b e3b3     +LDI R27 , HIGH ( 0x40533333 )
00693c e583     +LDI R24 , BYTE3 ( 0x40533333 )
00693d e490     +LDI R25 , BYTE4 ( 0x40533333 )
                 	__GETD2N 0x40533333
00693e 940e cc81 	CALL __MULF12
006940 01df      	MOVW R26,R30
006941 01cb      	MOVW R24,R22
                +
006942 e3e3     +LDI R30 , LOW ( 0x3FD33333 )
006943 e3f3     +LDI R31 , HIGH ( 0x3FD33333 )
006944 ed63     +LDI R22 , BYTE3 ( 0x3FD33333 )
006945 e37f     +LDI R23 , BYTE4 ( 0x3FD33333 )
                 	__GETD1N 0x3FD33333
006946 940e bed1 	CALL SUBOPT_0x205
006948 01df      	MOVW R26,R30
006949 01cb      	MOVW R24,R22
00694a 940e 9412 	CALL _fabs
                +
00694c 01de     +MOVW R26 , R28
00694d 5fa6     +SUBI R26 , LOW ( - 522 )
00694e 4fbd     +SBCI R27 , HIGH ( - 522 )
00694f 93ed     +ST X + , R30
006950 93fd     +ST X + , R31
006951 936d     +ST X + , R22
006952 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 000D 0063         ampValue = (voltCutOff*1000.0)/18.5;
                +
006953 01de     +MOVW R26 , R28
006954 5fa6     +SUBI R26 , LOW ( - 522 )
006955 4fbd     +SBCI R27 , HIGH ( - 522 )
006956 900d     +LD R0 , X +
006957 901d     +LD R1 , X +
006958 918d     +LD R24 , X +
006959 919c     +LD R25 , X
00695a 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
                +
00695b e0e0     +LDI R30 , LOW ( 0x447A0000 )
00695c e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00695d e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00695e e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00695f 940e cc81 	CALL __MULF12
006961 01df      	MOVW R26,R30
006962 01cb      	MOVW R24,R22
                +
006963 e0e0     +LDI R30 , LOW ( 0x41940000 )
006964 e0f0     +LDI R31 , HIGH ( 0x41940000 )
006965 e964     +LDI R22 , BYTE3 ( 0x41940000 )
006966 e471     +LDI R23 , BYTE4 ( 0x41940000 )
                 	__GETD1N 0x41940000
006967 940e cccf 	CALL __DIVF21
006969 940e bed6 	CALL SUBOPT_0x206
                 ; 000D 0064         //printDebug("[%d]ADC: %f, Volt(raw): %f, Amp: %f\r\n", ch, adcData[ch], (adcData[ch]-511.0), ampValue);
                 ; 000D 0065 
                 ; 000D 0066        adcData[ch] =  ampValue;
00696b 940e beb3 	CALL SUBOPT_0x1FF
00696d 0fea      	ADD  R30,R26
00696e 1ffb      	ADC  R31,R27
00696f 940e bedb 	CALL SUBOPT_0x207
006971 940e bee0 	CALL SUBOPT_0x208
                 ; 000D 0067     }else if((ch==1) || (ch==2)){
006973 c09d      	RJMP _0x1A0020
                 _0x1A001C:
006974 940e bebb 	CALL SUBOPT_0x201
006976 9711      	SBIW R26,1
006977 f029      	BREQ _0x1A0022
006978 940e bebb 	CALL SUBOPT_0x201
00697a 9712      	SBIW R26,2
00697b f009      	BREQ _0x1A0022
00697c c094      	RJMP _0x1A0021
                 _0x1A0022:
                 ; 000D 0068 
                 ; 000D 0069         //dhtRet = DHT11Read(&dhtDevice);
                 ; 000D 006A 
                 ; 000D 006B         dht11Reread = 0;
00697d e0e0      	LDI  R30,LOW(0)
00697e 8bea      	STD  Y+18,R30
00697f 8beb      	STD  Y+18+1,R30
                 ; 000D 006C         //memset(&dhtDevice,0,sizeof(dhtDevice));
                 ; 000D 006D         for(i=0;i<20;i++){
                +
006980 e040     +LDI R20 , LOW ( 0 )
006981 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0025:
                +
006982 3144     +CPI R20 , LOW ( 20 )
006983 e0e0     +LDI R30 , HIGH ( 20 )
006984 075e     +CPC R21 , R30
                 	__CPWRN 20,21,20
006985 f5c4      	BRGE _0x1A0026
                 ; 000D 006E 
                 ; 000D 006F             dhtRet = DHT11Read(&dhtDevice);
006986 e5a0      	LDI  R26,LOW(_dhtDevice)
006987 e1b5      	LDI  R27,HIGH(_dhtDevice)
006988 940e 933d 	CALL _DHT11Read
00698a 019f      	MOVW R18,R30
                 ; 000D 0070             //delay_ms(4);
                 ; 000D 0071             //printDebug("[%d]ADC:DHT11:Return (%d). \r\n", ch,dhtRet);
                 ; 000D 0072             if(dhtRet == DHT11_SUCCESS){
00698b e0e1      	LDI  R30,LOW(1)
00698c e0f0      	LDI  R31,HIGH(1)
00698d 17e2      	CP   R30,R18
00698e 07f3      	CPC  R31,R19
00698f f539      	BRNE _0x1A0027
                 ; 000D 0073 //                if(ch==1){
                 ; 000D 0074 //                  bufferTemp[dht11Reread] = dhtDevice.temp;
                 ; 000D 0075 //                }else if(ch==2){
                 ; 000D 0076 //                  bufferHumi[dht11Reread] = dhtDevice.humi;
                 ; 000D 0077 //                }
                 ; 000D 0078 
                 ; 000D 0079                 bufferTemp[dht11Reread] = dhtDevice.temp;
006990 89ea      	LDD  R30,Y+18
006991 89fb      	LDD  R31,Y+18+1
006992 01de      	MOVW R26,R28
006993 965e      	ADIW R26,30
006994 940e be9f 	CALL SUBOPT_0x1FC
006996 91a0 1550 	LDS  R26,_dhtDevice
006998 91b0 1551 	LDS  R27,_dhtDevice+1
00699a 9180 1552 	LDS  R24,_dhtDevice+2
00699c 9190 1553 	LDS  R25,_dhtDevice+3
00699e 940e bee0 	CALL SUBOPT_0x208
                 ; 000D 007A                 bufferHumi[dht11Reread] = dhtDevice.humi;
0069a0 89ea      	LDD  R30,Y+18
0069a1 89fb      	LDD  R31,Y+18+1
0069a2 01de      	MOVW R26,R28
0069a3 9656      	ADIW R26,22
0069a4 940e cd87 	CALL __LSLW2
0069a6 0fae      	ADD  R26,R30
0069a7 1fbf      	ADC  R27,R31
                +
0069a8 91e0 1554+LDS R30 , _dhtDevice + ( 4 )
0069aa 91f0 1555+LDS R31 , _dhtDevice + ( 4 ) + 1
0069ac 9160 1556+LDS R22 , _dhtDevice + ( 4 ) + 2
0069ae 9170 1557+LDS R23 , _dhtDevice + ( 4 ) + 3
                 	__GETD1MN _dhtDevice,4
0069b0 940e cea3 	CALL __PUTDP1
                 ; 000D 007B 
                 ; 000D 007C                 ++dht11Reread;
0069b2 89ea      	LDD  R30,Y+18
0069b3 89fb      	LDD  R31,Y+18+1
0069b4 9631      	ADIW R30,1
0069b5 8bea      	STD  Y+18,R30
0069b6 8bfb      	STD  Y+18+1,R31
                 ; 000D 007D             }
                 ; 000D 007E             if(dht11Reread>=2){
                 _0x1A0027:
0069b7 89aa      	LDD  R26,Y+18
0069b8 89bb      	LDD  R27,Y+18+1
0069b9 9712      	SBIW R26,2
0069ba f41c      	BRGE _0x1A0026
                 ; 000D 007F                break;
                 ; 000D 0080             }
                 ; 000D 0081         }
                +
0069bb 5f4f     +SUBI R20 , LOW ( - 1 )
0069bc 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0069bd cfc4      	RJMP _0x1A0025
                 _0x1A0026:
                 ; 000D 0082 
                 ; 000D 0083         if(dht11Reread>=2){
0069be 89aa      	LDD  R26,Y+18
0069bf 89bb      	LDD  R27,Y+18+1
0069c0 9712      	SBIW R26,2
0069c1 f134      	BRLT _0x1A0029
                 ; 000D 0084             if(ch==1){
0069c2 940e bebb 	CALL SUBOPT_0x201
0069c4 9711      	SBIW R26,1
0069c5 f471      	BRNE _0x1A002A
                 ; 000D 0085                adcData[ch] = average(bufferTemp,2);
0069c6 940e beb3 	CALL SUBOPT_0x1FF
0069c8 0fea      	ADD  R30,R26
0069c9 1ffb      	ADC  R31,R27
0069ca 93ff      	PUSH R31
0069cb 93ef      	PUSH R30
0069cc 01fe      	MOVW R30,R28
0069cd 967e      	ADIW R30,30
0069ce 940e bee3 	CALL SUBOPT_0x209
0069d0 d069      	RCALL _average
0069d1 91af      	POP  R26
0069d2 91bf      	POP  R27
0069d3 c011      	RJMP _0x1A003C
                 ; 000D 0086             }else if(ch==2){
                 _0x1A002A:
0069d4 940e bebb 	CALL SUBOPT_0x201
0069d6 9712      	SBIW R26,2
0069d7 f479      	BRNE _0x1A002C
                 ; 000D 0087                adcData[ch] = average(bufferHumi,2);
0069d8 940e beb3 	CALL SUBOPT_0x1FF
0069da 0fea      	ADD  R30,R26
0069db 1ffb      	ADC  R31,R27
0069dc 93ff      	PUSH R31
0069dd 93ef      	PUSH R30
0069de 01fe      	MOVW R30,R28
0069df 9676      	ADIW R30,22
0069e0 940e bee3 	CALL SUBOPT_0x209
0069e2 d057      	RCALL _average
0069e3 91af      	POP  R26
0069e4 91bf      	POP  R27
                 _0x1A003C:
0069e5 940e cea3 	CALL __PUTDP1
                 ; 000D 0088             }
                 ; 000D 0089         }else if(dht11Reread>=1){
                 _0x1A002C:
0069e7 c029      	RJMP _0x1A002D
                 _0x1A0029:
0069e8 89aa      	LDD  R26,Y+18
0069e9 89bb      	LDD  R27,Y+18+1
0069ea 9711      	SBIW R26,1
0069eb f12c      	BRLT _0x1A002E
                 ; 000D 008A             if(ch==1){
0069ec 940e bebb 	CALL SUBOPT_0x201
0069ee 9711      	SBIW R26,1
0069ef f471      	BRNE _0x1A002F
                 ; 000D 008B                adcData[ch] = average(bufferTemp,1);
0069f0 940e beb3 	CALL SUBOPT_0x1FF
0069f2 0fea      	ADD  R30,R26
0069f3 1ffb      	ADC  R31,R27
0069f4 93ff      	PUSH R31
0069f5 93ef      	PUSH R30
0069f6 01fe      	MOVW R30,R28
0069f7 967e      	ADIW R30,30
0069f8 940e bee7 	CALL SUBOPT_0x20A
0069fa d03f      	RCALL _average
0069fb 91af      	POP  R26
0069fc 91bf      	POP  R27
0069fd c011      	RJMP _0x1A003D
                 ; 000D 008C             }else if(ch==2){
                 _0x1A002F:
0069fe 940e bebb 	CALL SUBOPT_0x201
006a00 9712      	SBIW R26,2
006a01 f479      	BRNE _0x1A0031
                 ; 000D 008D                adcData[ch] = average(bufferHumi,1);
006a02 940e beb3 	CALL SUBOPT_0x1FF
006a04 0fea      	ADD  R30,R26
006a05 1ffb      	ADC  R31,R27
006a06 93ff      	PUSH R31
006a07 93ef      	PUSH R30
006a08 01fe      	MOVW R30,R28
006a09 9676      	ADIW R30,22
006a0a 940e bee7 	CALL SUBOPT_0x20A
006a0c d02d      	RCALL _average
006a0d 91af      	POP  R26
006a0e 91bf      	POP  R27
                 _0x1A003D:
006a0f 940e cea3 	CALL __PUTDP1
                 ; 000D 008E             }
                 ; 000D 008F         }
                 _0x1A0031:
                 ; 000D 0090 
                 ; 000D 0091 //        if(ch==1){
                 ; 000D 0092 //
                 ; 000D 0093 //            //dhtRet = DHT11Read(&dhtDevice);
                 ; 000D 0094 //            if(dhtRet == DHT11_SUCCESS){
                 ; 000D 0095 //
                 ; 000D 0096 //               //sensor->value = dhtDevice.temp;
                 ; 000D 0097 //               //adcData[ch] = dhtDevice.temp;
                 ; 000D 0098 //               adcData[ch] = average(bufferTemp,2);
                 ; 000D 0099 //               //printDebug("[%d]ADC:DHT11: Temp(%f)\r\n", ch,adcData[ch]);
                 ; 000D 009A //            }else if(dhtRet == DHT11_ERROR_TIMEOUT){
                 ; 000D 009B //          //      sensor->status  = SENS_ERR_UNKNOWN;
                 ; 000D 009C //               //printDebug("[%d]ADC:DHT11:Time out. \r\n", ch);
                 ; 000D 009D //            }else if(dhtRet == DHT11_ERROR_CHECKSUM){
                 ; 000D 009E //               //printDebug("[%d]ADC:DHT11:Check sum error. \r\n", ch);
                 ; 000D 009F //            }
                 ; 000D 00A0 //        }else if(ch==2){
                 ; 000D 00A1 //
                 ; 000D 00A2 //            //dhtRet = DHT11Read(&dhtDevice);
                 ; 000D 00A3 //            if(dhtRet == DHT11_SUCCESS){
                 ; 000D 00A4 //              //printDebug("[%d]ADC:DHT11: Humi(%f) \r\n", ch,dhtDevice.humi);
                 ; 000D 00A5 //               //sensor->value = dhtDevice.humi;
                 ; 000D 00A6 //               //adcData[ch] = dhtDevice.humi;
                 ; 000D 00A7 //               adcData[ch] = average(bufferHumi,2);
                 ; 000D 00A8 //               //printDebug("[%d]ADC:DHT11: Humip(%f)\r\n", ch,adcData[ch]);
                 ; 000D 00A9 //            }else if(dhtRet == DHT11_ERROR_TIMEOUT){
                 ; 000D 00AA //             //   sensor->status  = SENS_ERR_UNKNOWN;
                 ; 000D 00AB //               //printDebug("[%d]ADC:DHT11:Time out. \r\n", ch);
                 ; 000D 00AC //            }else if(dhtRet == DHT11_ERROR_CHECKSUM){
                 ; 000D 00AD //               //printDebug("[%d]ADC:DHT11:Check sum error. \r\n", ch);
                 ; 000D 00AE //            }
                 ; 000D 00AF //        }
                 ; 000D 00B0     }
                 _0x1A002E:
                 _0x1A002D:
                 ; 000D 00B1     return;
                 _0x1A0021:
                 _0x1A0020:
                 _0x1A001B:
                 _0x1A0016:
006a11 940e cf3f 	CALL __LOADLOCR6
006a13 9660      	ADIW R28,16
006a14 5fde      	SUBI R29,-2
006a15 9508      	RET
                 ; 000D 00B2 }
                 ;
                 ;float voltPeak(float data[]){       //Amp value
                 ; 000D 00B4 float voltPeak(float data[]){
                 _voltPeak:
                 ; 000D 00B5      int i = 0;
                 ; 000D 00B6      float sum=0.0;
                 ; 000D 00B7 
                 ; 000D 00B8      for(i=0;i<60;i++){
006a16 940e bdb6 	CALL SUBOPT_0x1D4
006a18 940e b65e 	CALL SUBOPT_0x9C
                 ;	data -> Y+6
                 ;	i -> R16,R17
                 ;	sum -> Y+2
                +
006a1a e000     +LDI R16 , LOW ( 0 )
006a1b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A0033:
                +
006a1c 330c     +CPI R16 , LOW ( 60 )
006a1d e0e0     +LDI R30 , HIGH ( 60 )
006a1e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,60
006a1f f4a4      	BRGE _0x1A0034
                 ; 000D 00B9        sum = MAX(sum,data[i]);
006a20 940e beeb 	CALL SUBOPT_0x20B
006a22 940e b6e0 	CALL SUBOPT_0xB5
006a24 940e cd14 	CALL __CMPF12
006a26 f009      	BREQ PC+2
006a27 f410      	BRCC PC+3
006a28 940c 6a2d 	JMP  _0x1A0035
006a2a 940e b6db 	CALL SUBOPT_0xB4
006a2c c002      	RJMP _0x1A0036
                 _0x1A0035:
006a2d 940e beeb 	CALL SUBOPT_0x20B
                 _0x1A0036:
006a2f 940e b6d6 	CALL SUBOPT_0xB3
                 ; 000D 00BA      }
                +
006a31 5f0f     +SUBI R16 , LOW ( - 1 )
006a32 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006a33 cfe8      	RJMP _0x1A0033
                 _0x1A0034:
                 ; 000D 00BB      return sum;
006a34 940e b6db 	CALL SUBOPT_0xB4
                 _0x20E0066:
006a36 8119      	LDD  R17,Y+1
006a37 8108      	LDD  R16,Y+0
006a38 9628      	ADIW R28,8
006a39 9508      	RET
                 ; 000D 00BC }
                 ;float average(float data[],int count){      //Volt value
                 ; 000D 00BD float average(float data[],int count){
                 _average:
                 ; 000D 00BE      int i = 0;
                 ; 000D 00BF      float avg = 0.0, sum=0.0;
                 ; 000D 00C0 
                 ; 000D 00C1      //printDebug("raw data.\r\n");
                 ; 000D 00C2      for(i=0;i<count;i++){
006a3a 93ba      	ST   -Y,R27
006a3b 93aa      	ST   -Y,R26
006a3c 9728      	SBIW R28,8
006a3d 940e bef2 	CALL SUBOPT_0x20C
006a3f e0e0      	LDI  R30,LOW(0)
006a40 83eb      	STD  Y+3,R30
006a41 83ec      	STD  Y+4,R30
006a42 83ed      	STD  Y+5,R30
006a43 83ee      	STD  Y+6,R30
006a44 83ef      	STD  Y+7,R30
006a45 940e b65e 	CALL SUBOPT_0x9C
                 ;	data -> Y+12
                 ;	count -> Y+10
                 ;	i -> R16,R17
                 ;	avg -> Y+6
                 ;	sum -> Y+2
                +
006a47 e000     +LDI R16 , LOW ( 0 )
006a48 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A0039:
006a49 85ea      	LDD  R30,Y+10
006a4a 85fb      	LDD  R31,Y+10+1
006a4b 170e      	CP   R16,R30
006a4c 071f      	CPC  R17,R31
006a4d f474      	BRGE _0x1A003A
                 ; 000D 00C3        //printDebug("%.2f ", data[i]);
                 ; 000D 00C4        sum += data[i];
006a4e 01f8      	MOVW R30,R16
006a4f 85ac      	LDD  R26,Y+12
006a50 85bd      	LDD  R27,Y+12+1
006a51 940e bef7 	CALL SUBOPT_0x20D
006a53 940e b6e0 	CALL SUBOPT_0xB5
006a55 940e cc31 	CALL __ADDF12
006a57 940e b6d6 	CALL SUBOPT_0xB3
                 ; 000D 00C5      }
                +
006a59 5f0f     +SUBI R16 , LOW ( - 1 )
006a5a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006a5b cfed      	RJMP _0x1A0039
                 _0x1A003A:
                 ; 000D 00C6      //printDebug("\r\nMax(%.2f) ", sum);
                 ; 000D 00C7      //printDebug("\r\n");
                 ; 000D 00C8      //return sum;
                 ; 000D 00C9 
                 ; 000D 00CA 
                 ; 000D 00CB      avg =(sum/count);
006a5c 85ea      	LDD  R30,Y+10
006a5d 85fb      	LDD  R31,Y+10+1
006a5e 940e befb 	CALL SUBOPT_0x20E
006a60 940e cccf 	CALL __DIVF21
006a62 940e b6ca 	CALL SUBOPT_0xB1
                 ; 000D 00CC      return avg;
006a64 8119      	LDD  R17,Y+1
006a65 8108      	LDD  R16,Y+0
006a66 962e      	ADIW R28,14
006a67 9508      	RET
                 ; 000D 00CD }
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
006a68 940e cecd 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
006a6a 91a0 15be 	LDS  R26,_dataQ_len
006a6c 91b0 15bf 	LDS  R27,_dataQ_len+1
006a6e 971a      	SBIW R26,10
006a6f f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
006a70 efef      	LDI  R30,LOW(65535)
006a71 efff      	LDI  R31,HIGH(65535)
006a72 940c 6e4c 	JMP  _0x20E005C
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
006a74 940e bf02 	CALL SUBOPT_0x20F
006a76 5ae6      	SUBI R30,LOW(-_dataQ)
006a77 4efa      	SBCI R31,HIGH(-_dataQ)
006a78 940e beb6 	CALL SUBOPT_0x200
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
006a7a 940e bf02 	CALL SUBOPT_0x20F
                +
006a7c 5ae2     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
006a7d 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
006a7e 81ac      	LDD  R26,Y+4
006a7f 81bd      	LDD  R27,Y+4+1
006a80 83a0      	STD  Z+0,R26
006a81 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
006a82 940e bf02 	CALL SUBOPT_0x20F
                +
006a84 5ae0     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
006a85 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
006a86 940e b5da 	CALL SUBOPT_0x8C
006a88 940e bee0 	CALL SUBOPT_0x208
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
006a8a 01d5      	MOVW R26,R10
006a8b 9611      	ADIW R26,1
006a8c 940e bf08 	CALL SUBOPT_0x210
006a8e 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
006a8f ebae      	LDI  R26,LOW(_dataQ_len)
006a90 e1b5      	LDI  R27,HIGH(_dataQ_len)
006a91 940e b578 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
006a93 e0e0      	LDI  R30,LOW(0)
006a94 e0f0      	LDI  R31,HIGH(0)
006a95 940c 6e4c 	JMP  _0x20E005C
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
006a97 93ba      	ST   -Y,R27
006a98 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
006a99 91e0 15be 	LDS  R30,_dataQ_len
006a9b 91f0 15bf 	LDS  R31,_dataQ_len+1
006a9d 9730      	SBIW R30,0
006a9e f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
006a9f efef      	LDI  R30,LOW(65535)
006aa0 efff      	LDI  R31,HIGH(65535)
006aa1 940c 6e2f 	JMP  _0x20E005D
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
006aa3 940e bf0d 	CALL SUBOPT_0x211
006aa5 5ae6      	SUBI R30,LOW(-_dataQ)
006aa6 4efa      	SBCI R31,HIGH(-_dataQ)
006aa7 940e bf13 	CALL SUBOPT_0x212
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
006aa9 940e bf0d 	CALL SUBOPT_0x211
                +
006aab 5ae2     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
006aac 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
006aad 01df      	MOVW R26,R30
006aae 940e ce94 	CALL __GETW1P
006ab0 81aa      	LDD  R26,Y+2
006ab1 81bb      	LDD  R27,Y+2+1
006ab2 93ed      	ST   X+,R30
006ab3 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
006ab4 940e bf0d 	CALL SUBOPT_0x211
                +
006ab6 5ae0     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
006ab7 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
006ab8 01df      	MOVW R26,R30
006ab9 940e ce98 	CALL __GETD1P
006abb 81a8      	LD   R26,Y
006abc 81b9      	LDD  R27,Y+1
006abd 940e cea3 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
006abf 01d6      	MOVW R26,R12
006ac0 9611      	ADIW R26,1
006ac1 940e bf08 	CALL SUBOPT_0x210
006ac3 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
006ac4 ebae      	LDI  R26,LOW(_dataQ_len)
006ac5 e1b5      	LDI  R27,HIGH(_dataQ_len)
006ac6 940c 6e28 	JMP  _0x20E005F
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
006ac8 931a      	ST   -Y,R17
                 ;	current_status -> R17
006ac9 e010      	LDI  R17,0
006aca 91e0 0103 	LDS  R30,259
006acc 940e b656 	CALL SUBOPT_0x9B
006ace f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
006acf e0e0      	LDI  R30,LOW(0)
006ad0 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
006ad2 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
006ad4 e6e6     +LDI R30 , LOW ( 0x40866666 )
006ad5 e6f6     +LDI R31 , HIGH ( 0x40866666 )
006ad6 e866     +LDI R22 , BYTE3 ( 0x40866666 )
006ad7 e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
006ad8 940e bf1b 	CALL SUBOPT_0x213
                 ; 000F 0035         return 0;
006ada c041      	RJMP _0x20E0065
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
006adb e0e1      	LDI  R30,LOW(1)
006adc 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
006ade 940e 41a1 	CALL _readBattery
006ae0 940e bf1b 	CALL SUBOPT_0x213
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
006ae2 940e bf24 	CALL SUBOPT_0x214
006ae4 940e cf1c 	CALL __CPD10
006ae6 f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
006ae7 e0e0      	LDI  R30,LOW(0)
006ae8 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
006aea c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
006aeb 940e bf24 	CALL SUBOPT_0x214
006aed 940e b355 	CALL SUBOPT_0x2E
006aef 940e cd14 	CALL __CMPF12
006af1 f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
006af2 e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
006af3 c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
006af4 e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
006af5 91a0 15c5 	LDS  R26,_lastCheck_S00F0001000
006af7 171a      	CP   R17,R26
006af8 f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
006af9 e0e0      	LDI  R30,LOW(0)
006afa 93e0 15c4 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
006afc 9310 15c5 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
006afe 91e0 15c4 	LDS  R30,_t_flag_S00F0001000
006b00 30e0      	CPI  R30,0
006b01 f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
006b02 ece0      	LDI  R30,LOW(_t_S00F0001000)
006b03 e1f5      	LDI  R31,HIGH(_t_S00F0001000)
006b04 940e b331 	CALL SUBOPT_0x28
                 ; 000F 0053                 t_flag              = 1;
006b06 e0e1      	LDI  R30,LOW(1)
006b07 c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
006b08 91a0 15c0 	LDS  R26,_t_S00F0001000
006b0a 91b0 15c1 	LDS  R27,_t_S00F0001000+1
006b0c 9180 15c2 	LDS  R24,_t_S00F0001000+2
006b0e 9190 15c3 	LDS  R25,_t_S00F0001000+3
006b10 940e 3edb 	CALL _TIMER_checkTimerExceed
006b12 9730      	SBIW R30,0
006b13 f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
006b14 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
006b16 e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
006b17 93e0 15c4 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
006b19 e0e1      	LDI  R30,LOW(1)
006b1a e0f0      	LDI  R31,HIGH(1)
006b1b c002      	RJMP _0x20E0064
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0065:
006b1c e0e0      	LDI  R30,LOW(0)
006b1d e0f0      	LDI  R31,HIGH(0)
                 _0x20E0064:
006b1e 9119      	LD   R17,Y+
006b1f 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
006b20 931a      	ST   -Y,R17
006b21 930a      	ST   -Y,R16
                 ;	res -> R16,R17
006b22 91e0 0100 	LDS  R30,256
006b24 940e bf2d 	CALL SUBOPT_0x215
006b26 9730      	SBIW R30,0
006b27 f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
006b28 e0e1      	LDI  R30,LOW(1)
006b29 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
006b2b efef      	LDI  R30,LOW(255)
006b2c 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
006b2e e0e0      	LDI  R30,LOW(0)
006b2f 93e0 1421 	STS  _commLostTimer,R30
006b31 93e0 1422 	STS  _commLostTimer+1,R30
006b33 93e0 1423 	STS  _commLostTimer+2,R30
006b35 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
006b37 e0e1      	LDI  R30,LOW(1)
006b38 e0f0      	LDI  R31,HIGH(1)
006b39 c047      	RJMP _0x20E0063
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
006b3a e0e0      	LDI  R30,LOW(0)
006b3b 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
006b3d 940e bb14 	CALL SUBOPT_0x168
006b3f 940e b3ae 	CALL SUBOPT_0x3A
006b41 f029      	BREQ _0x1E0013
006b42 940e bb14 	CALL SUBOPT_0x168
006b44 940e cf28 	CALL __CPD02
006b46 f409      	BRNE _0x1E0014
                 _0x1E0013:
006b47 c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
006b48 eee2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
006b49 e4f5     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
006b4a e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
006b4b e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
006b4c 940e bb24 	CALL SUBOPT_0x16A
006b4e 940e bb24 	CALL SUBOPT_0x16A
006b50 940e b300 	CALL SUBOPT_0x21
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
006b52 940e bb14 	CALL SUBOPT_0x168
006b54 940e 3edb 	CALL _TIMER_checkTimerExceed
006b56 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
006b57 2311      	TST  R17
006b58 f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
006b59 efef      	LDI  R30,LOW(255)
006b5a 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
006b5c e0e0      	LDI  R30,LOW(0)
006b5d e0f0      	LDI  R31,HIGH(0)
006b5e c022      	RJMP _0x20E0063
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
006b5f 2e00      	MOV  R0,R16
006b60 2a01      	OR   R0,R17
006b61 f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
006b62 91a0 1480 	LDS  R26,_serverCommStatus
006b64 30a2      	CPI  R26,LOW(0x2)
006b65 f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
006b66 e1e6     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
006b67 e4f6     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
006b68 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
006b69 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
006b6a 940e b22a 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
006b6c e0e2      	LDI  R30,LOW(2)
006b6d 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
006b6f e0e1      	LDI  R30,LOW(1)
006b70 e0f0      	LDI  R31,HIGH(1)
006b71 c00f      	RJMP _0x20E0063
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
006b72 91e0 1480 	LDS  R30,_serverCommStatus
006b74 30e0      	CPI  R30,0
006b75 f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
006b76 e3ea     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
006b77 e4f6     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
006b78 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
006b79 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
006b7a 940e b22a 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
006b7c e0e0      	LDI  R30,LOW(0)
006b7d 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
006b7f e0e0      	LDI  R30,LOW(0)
006b80 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0063:
006b81 9109      	LD   R16,Y+
006b82 9119      	LD   R17,Y+
006b83 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
006b84 940e bf32 	CALL SUBOPT_0x216
006b86 f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
006b87 e0e2      	LDI  R30,LOW(2)
006b88 c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
006b89 940e b339 	CALL SUBOPT_0x29
                +
006b8b e0e0     +LDI R30 , LOW ( 0x400 )
006b8c e0f4     +LDI R31 , HIGH ( 0x400 )
006b8d e060     +LDI R22 , BYTE3 ( 0x400 )
006b8e e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
006b8f 940e ce34 	CALL __DIVD21U
006b91 01df      	MOVW R26,R30
                +
006b92 91e0 1375+LDS R30 , _env_config + ( 16 )
006b94 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
006b96 17ae      	CP   R26,R30
006b97 07bf      	CPC  R27,R31
006b98 f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
006b99 e0e1      	LDI  R30,LOW(1)
006b9a c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
006b9b e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
006b9c 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
006b9e 30e0      	CPI  R30,0
006b9f f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
006ba0 e0e1      	LDI  R30,LOW(1)
006ba1 e0f0      	LDI  R31,HIGH(1)
006ba2 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
006ba3 c1ae      	RJMP _0x20E0060
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
006ba4 93ba      	ST   -Y,R27
006ba5 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
006ba6 81a9      	LDD  R26,Y+1
006ba7 23aa      	TST  R26
006ba8 f022      	BRMI _0x1E0022
006ba9 81a8      	LD   R26,Y
006baa 81b9      	LDD  R27,Y+1
006bab 9715      	SBIW R26,5
006bac f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
006bad e5ec     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
006bae e4f6     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
006baf e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
006bb0 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
006bb1 940e b98d 	CALL SUBOPT_0x128
006bb3 940e b81b 	CALL SUBOPT_0xE6
                 ; 000F 00B1         return 0;
006bb5 e0e0      	LDI  R30,LOW(0)
006bb6 e0f0      	LDI  R31,HIGH(0)
006bb7 c021      	RJMP _0x20E0062
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
006bb8 940e bf3d 	CALL SUBOPT_0x217
                +
006bba 2f7e     +MOV R23 , R30
006bbb 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
006bbc 81a8      	LD   R26,Y
006bbd 81b9      	LDD  R27,Y+1
006bbe e0e5      	LDI  R30,LOW(5)
006bbf 940e cdfe 	CALL __MULB1W2U
                +
006bc1 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
006bc2 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
006bc3 81e0      	LD   R30,Z
                +
006bc4 2fa7     +MOV R26 , R23
006bc5 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
006bc6 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
006bc7 940e bf3d 	CALL SUBOPT_0x217
006bc9 81a0      	LD   R26,Z
006bca 3faf      	CPI  R26,LOW(0xFF)
006bcb f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
006bcc e0e0      	LDI  R30,LOW(0)
006bcd e0f0      	LDI  R31,HIGH(0)
006bce c00a      	RJMP _0x20E0062
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
006bcf 940e bf3d 	CALL SUBOPT_0x217
006bd1 81e0      	LD   R30,Z
006bd2 30e0      	CPI  R30,0
006bd3 f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
006bd4 e0e1      	LDI  R30,LOW(1)
006bd5 e0f0      	LDI  R31,HIGH(1)
006bd6 c002      	RJMP _0x20E0062
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
006bd7 e0e0      	LDI  R30,LOW(0)
006bd8 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0062:
006bd9 9622      	ADIW R28,2
006bda 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
006bdb 940e b595 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
006bdd e000     +LDI R16 , LOW ( 0 )
006bde e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006bdf 81ab      	LDD  R26,Y+3
006be0 23aa      	TST  R26
006be1 f022      	BRMI _0x1E0029
006be2 81aa      	LDD  R26,Y+2
006be3 81bb      	LDD  R27,Y+2+1
006be4 9715      	SBIW R26,5
006be5 f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
006be6 e9e1     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
006be7 e4f6     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
006be8 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
006be9 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
006bea 940e b8a7 	CALL SUBOPT_0xFF
006bec 940e b81b 	CALL SUBOPT_0xE6
                 ; 000F 00CC         return 0;
006bee e0e0      	LDI  R30,LOW(0)
006bef e0f0      	LDI  R31,HIGH(0)
006bf0 c0cf      	RJMP _0x20E0061
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
006bf1 940e b93e 	CALL SUBOPT_0x119
                +
006bf3 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
006bf4 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
006bf5 81e0      	LD   R30,Z
006bf6 30e0      	CPI  R30,0
006bf7 f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
006bf8 e0e0      	LDI  R30,LOW(0)
006bf9 e0f0      	LDI  R31,HIGH(0)
006bfa c0c5      	RJMP _0x20E0061
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
006bfb 940e b93e 	CALL SUBOPT_0x119
006bfd 940e b2fa 	CALL SUBOPT_0x20
006bff 937f      	PUSH R23
006c00 936f      	PUSH R22
006c01 93ff      	PUSH R31
006c02 93ef      	PUSH R30
006c03 940e b8ca 	CALL SUBOPT_0x106
                +
006c05 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
006c06 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
006c07 01df      	MOVW R26,R30
006c08 940e ce98 	CALL __GETD1P
006c0a 91af      	POP  R26
006c0b 91bf      	POP  R27
006c0c 918f      	POP  R24
006c0d 919f      	POP  R25
006c0e 940e cd14 	CALL __CMPF12
006c10 f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
006c11 940e bf42 	CALL SUBOPT_0x218
006c13 81e0      	LD   R30,Z
006c14 30e0      	CPI  R30,0
006c15 f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
006c16 940e bf47 	CALL SUBOPT_0x219
006c18 940e bf4c 	CALL SUBOPT_0x21A
006c1a 81ac      	LDD  R26,Y+4
006c1b 81bd      	LDD  R27,Y+4+1
006c1c 940e bf50 	CALL SUBOPT_0x21B
006c1e 940e b2f6 	CALL SUBOPT_0x1F
                 ; 000F 00D9             flag_lower[ch] = 1;
006c20 940e bf42 	CALL SUBOPT_0x218
006c22 e0a1      	LDI  R26,LOW(1)
006c23 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
006c24 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
006c25 940e bf47 	CALL SUBOPT_0x219
006c27 940e bef7 	CALL SUBOPT_0x20D
006c29 940e b2e6 	CALL SUBOPT_0x1C
006c2b f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
006c2c 940e bf58 	CALL SUBOPT_0x21C
006c2e 60e1      	ORI  R30,1
006c2f 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
006c30 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
006c31 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
006c32 940e bf42 	CALL SUBOPT_0x218
006c34 e0a0      	LDI  R26,LOW(0)
006c35 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
006c36 940e bf58 	CALL SUBOPT_0x21C
006c38 7fee      	ANDI R30,0xFE
006c39 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
006c3a 940e b93e 	CALL SUBOPT_0x119
006c3c 940e b2fa 	CALL SUBOPT_0x20
006c3e 937f      	PUSH R23
006c3f 936f      	PUSH R22
006c40 93ff      	PUSH R31
006c41 93ef      	PUSH R30
006c42 940e b8ca 	CALL SUBOPT_0x106
                +
006c44 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
006c45 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
006c46 01df      	MOVW R26,R30
006c47 940e ce98 	CALL __GETD1P
006c49 91af      	POP  R26
006c4a 91bf      	POP  R27
006c4b 918f      	POP  R24
006c4c 919f      	POP  R25
006c4d 940e cd14 	CALL __CMPF12
006c4f f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
006c50 940e bf58 	CALL SUBOPT_0x21C
006c52 60e2      	ORI  R30,2
006c53 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
006c54 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
006c55 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
006c56 940e bf58 	CALL SUBOPT_0x21C
006c58 7fed      	ANDI R30,0xFD
006c59 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
006c5a 940e b93e 	CALL SUBOPT_0x119
006c5c 940e b2fa 	CALL SUBOPT_0x20
006c5e 937f      	PUSH R23
006c5f 936f      	PUSH R22
006c60 93ff      	PUSH R31
006c61 93ef      	PUSH R30
006c62 940e b8ca 	CALL SUBOPT_0x106
                +
006c64 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
006c65 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
006c66 01df      	MOVW R26,R30
006c67 940e ce98 	CALL __GETD1P
006c69 91af      	POP  R26
006c6a 91bf      	POP  R27
006c6b 918f      	POP  R24
006c6c 919f      	POP  R25
006c6d 940e cd14 	CALL __CMPF12
006c6f f009      	BREQ PC+2
006c70 f410      	BRCC PC+3
006c71 940c 6c94 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
006c73 940e bf5e 	CALL SUBOPT_0x21D
006c75 81e0      	LD   R30,Z
006c76 30e0      	CPI  R30,0
006c77 f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
006c78 940e bf47 	CALL SUBOPT_0x219
006c7a 940e bf4c 	CALL SUBOPT_0x21A
006c7c 81ac      	LDD  R26,Y+4
006c7d 81bd      	LDD  R27,Y+4+1
006c7e 940e bf63 	CALL SUBOPT_0x21E
006c80 940e b2f6 	CALL SUBOPT_0x1F
                 ; 000F 0101             flag_upper[ch] = 1;
006c82 940e bf5e 	CALL SUBOPT_0x21D
006c84 e0a1      	LDI  R26,LOW(1)
006c85 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
006c86 c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
006c87 940e bf47 	CALL SUBOPT_0x219
006c89 940e bef7 	CALL SUBOPT_0x20D
006c8b 940e b2e6 	CALL SUBOPT_0x1C
006c8d f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
006c8e 940e bf58 	CALL SUBOPT_0x21C
006c90 60e4      	ORI  R30,4
006c91 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
006c92 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
006c93 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
006c94 940e bf5e 	CALL SUBOPT_0x21D
006c96 e0a0      	LDI  R26,LOW(0)
006c97 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
006c98 940e bf58 	CALL SUBOPT_0x21C
006c9a 7feb      	ANDI R30,0xFB
006c9b 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
006c9c 940e b93e 	CALL SUBOPT_0x119
006c9e 940e b2fa 	CALL SUBOPT_0x20
006ca0 937f      	PUSH R23
006ca1 936f      	PUSH R22
006ca2 93ff      	PUSH R31
006ca3 93ef      	PUSH R30
006ca4 940e b8ca 	CALL SUBOPT_0x106
                +
006ca6 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
006ca7 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
006ca8 01df      	MOVW R26,R30
006ca9 940e ce98 	CALL __GETD1P
006cab 91af      	POP  R26
006cac 91bf      	POP  R27
006cad 918f      	POP  R24
006cae 919f      	POP  R25
006caf 940e cd14 	CALL __CMPF12
006cb1 f009      	BREQ PC+2
006cb2 f410      	BRCC PC+3
006cb3 940c 6cbb 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
006cb5 940e bf58 	CALL SUBOPT_0x21C
006cb7 60e8      	ORI  R30,8
006cb8 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
006cb9 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
006cba c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
006cbb 940e bf58 	CALL SUBOPT_0x21C
006cbd 7fe7      	ANDI R30,0XF7
006cbe 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
006cbf 01f8      	MOVW R30,R16
                 _0x20E0061:
006cc0 8119      	LDD  R17,Y+1
006cc1 8108      	LDD  R16,Y+0
006cc2 9624      	ADIW R28,4
006cc3 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
006cc4 940e cf38 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
006cc6 ef1f      	LDI  R17,255
006cc7 940e b216 	CALL SUBOPT_0x0
                +
006cc9 e020     +LDI R18 , LOW ( 0 )
006cca e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
006ccb 3022     +CPI R18 , LOW ( 2 )
006ccc e0e0     +LDI R30 , HIGH ( 2 )
006ccd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
006cce f014      	BRLT PC+3
006ccf 940c 6d3c 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
006cd1 940e b2af 	CALL SUBOPT_0x15
006cd3 81a0      	LD   R26,Z
006cd4 30a1      	CPI  R26,LOW(0x1)
006cd5 f011      	BREQ PC+3
006cd6 940c 6d39 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
006cd8 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
006cd9 9730      	SBIW R30,0
006cda f441      	BRNE _0x1E0042
006cdb 91e0 0103 	LDS  R30,259
006cdd 940e bf2d 	CALL SUBOPT_0x215
006cdf 940e cdd1 	CALL __LNEGW1
006ce1 2f1e      	MOV  R17,R30
006ce2 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
006ce3 30e1      	CPI  R30,LOW(0x1)
006ce4 e0a0      	LDI  R26,HIGH(0x1)
006ce5 07fa      	CPC  R31,R26
006ce6 f451      	BRNE _0x1E0044
006ce7 91e0 0103 	LDS  R30,259
006ce9 70e8      	ANDI R30,LOW(0x8)
006cea e0f0      	LDI  R31,0
006ceb 940e cd8e 	CALL __ASRW3
006ced 940e cdd1 	CALL __LNEGW1
006cef 2f1e      	MOV  R17,R30
006cf0 c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
006cf1 ecee     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
006cf2 e4f6     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
006cf3 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
006cf4 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
006cf5 940e b295 	CALL SUBOPT_0x11
006cf7 940e b29d 	CALL SUBOPT_0x12
006cf9 e0e0      	LDI  R30,LOW(0)
006cfa e0f0      	LDI  R31,HIGH(0)
006cfb 940e cf3f 	CALL __LOADLOCR6
006cfd c131      	RJMP _0x20E005D
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
006cfe eeac      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
006cff e1b5      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
006d00 0fa2      	ADD  R26,R18
006d01 1fb3      	ADC  R27,R19
006d02 91ec      	LD   R30,X
006d03 17e1      	CP   R30,R17
006d04 f081      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
006d05 01f9      	MOVW R30,R18
006d06 eea4      	LDI  R26,LOW(_t_S00F0006000)
006d07 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
006d08 940e bf4c 	CALL SUBOPT_0x21A
                +
006d0a e0a1     +LDI R26 , LOW ( 0x1 )
006d0b e0b0     +LDI R27 , HIGH ( 0x1 )
006d0c e080     +LDI R24 , BYTE3 ( 0x1 )
006d0d e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
006d0e 940e 3ef1 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
006d10 01f9      	MOVW R30,R18
006d11 51e4      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
006d12 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
006d13 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
006d14 c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
006d15 eeae      	LDI  R26,LOW(_steadyState_S00F0006000)
006d16 e1b5      	LDI  R27,HIGH(_steadyState_S00F0006000)
006d17 940e b287 	CALL SUBOPT_0xF
006d19 f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
006d1a 01f9      	MOVW R30,R18
006d1b eea4      	LDI  R26,LOW(_t_S00F0006000)
006d1c e1b5      	LDI  R27,HIGH(_t_S00F0006000)
006d1d 940e bef7 	CALL SUBOPT_0x20D
006d1f 940e b2e6 	CALL SUBOPT_0x1C
006d21 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
006d22 eeae      	LDI  R26,LOW(_steadyState_S00F0006000)
006d23 e1b5      	LDI  R27,HIGH(_steadyState_S00F0006000)
006d24 0fa2      	ADD  R26,R18
006d25 1fb3      	ADC  R27,R19
006d26 e0e1      	LDI  R30,LOW(1)
006d27 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
006d28 3010      	CPI  R17,0
006d29 f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
006d2a 940e b348 	CALL SUBOPT_0x2B
006d2c e0e1      	LDI  R30,LOW(1)
006d2d c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
006d2e 940e b348 	CALL SUBOPT_0x2B
006d30 e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
006d31 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
006d32 5f4f     +SUBI R20 , LOW ( - 1 )
006d33 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
006d34 c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
006d35 eeae      	LDI  R26,LOW(_steadyState_S00F0006000)
006d36 e1b5      	LDI  R27,HIGH(_steadyState_S00F0006000)
006d37 940e b2a2 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
006d39 5f2f     +SUBI R18 , LOW ( - 1 )
006d3a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006d3b cf8f      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
006d3c 01fa      	MOVW R30,R20
006d3d 940e cf3f 	CALL __LOADLOCR6
006d3f c0ef      	RJMP _0x20E005D
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
006d40 91e0 1434 	LDS  R30,_d_out
006d42 30e0      	CPI  R30,0
006d43 f011      	BREQ _0x1E004C
006d44 e0e1      	LDI  R30,LOW(1)
006d45 c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
006d46 e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
006d47 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
006d49 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
006d4b 30e0      	CPI  R30,0
006d4c f011      	BREQ _0x1E004E
006d4d e0e1      	LDI  R30,LOW(1)
006d4e c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
006d4f e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
006d50 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E0060:
006d52 e0e0      	LDI  R30,LOW(0)
006d53 e0f0      	LDI  R31,HIGH(0)
006d54 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
006d55 940e b595 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
006d57 e000     +LDI R16 , LOW ( 0 )
006d58 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006d59 81aa      	LDD  R26,Y+2
006d5a 81bb      	LDD  R27,Y+2+1
006d5b 940e b8f4 	CALL SUBOPT_0x10D
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
006d5d 940e 5044 	CALL _isDeviceConfig
006d5f 9730      	SBIW R30,0
006d60 f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
006d61 81aa      	LDD  R26,Y+2
006d62 81bb      	LDD  R27,Y+2+1
006d63 91ed      	LD   R30,X+
006d64 91fd      	LD   R31,X+
006d65 68f0      	ORI  R31,HIGH(0x8000)
006d66 c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
006d67 81aa      	LDD  R26,Y+2
006d68 81bb      	LDD  R27,Y+2+1
006d69 91ed      	LD   R30,X+
006d6a 91fd      	LD   R31,X+
006d6b 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
006d6c 93fe      	ST   -X,R31
006d6d 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
006d6e 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
006d70 30e0      	CPI  R30,0
006d71 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
006d72 81aa      	LDD  R26,Y+2
006d73 81bb      	LDD  R27,Y+2+1
006d74 91ed      	LD   R30,X+
006d75 91fd      	LD   R31,X+
006d76 64f0      	ORI  R31,HIGH(0x4000)
006d77 c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
006d78 81aa      	LDD  R26,Y+2
006d79 81bb      	LDD  R27,Y+2+1
006d7a 91ed      	LD   R30,X+
006d7b 91fd      	LD   R31,X+
006d7c 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
006d7d 93fe      	ST   -X,R31
006d7e 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
006d7f 91a0 11b6 	LDS  R26,_operating_config
006d81 31a0      	CPI  R26,LOW(0x10)
006d82 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
006d83 81aa      	LDD  R26,Y+2
006d84 81bb      	LDD  R27,Y+2+1
006d85 91ed      	LD   R30,X+
006d86 91fd      	LD   R31,X+
006d87 60f8      	ORI  R31,HIGH(0x800)
006d88 c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
006d89 81aa      	LDD  R26,Y+2
006d8a 81bb      	LDD  R27,Y+2+1
006d8b 91ed      	LD   R30,X+
006d8c 91fd      	LD   R31,X+
006d8d 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
006d8e 93fe      	ST   -X,R31
006d8f 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
006d90 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
006d92 30e0      	CPI  R30,0
006d93 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
006d94 81aa      	LDD  R26,Y+2
006d95 81bb      	LDD  R27,Y+2+1
006d96 91ed      	LD   R30,X+
006d97 91fd      	LD   R31,X+
006d98 60f2      	ORI  R31,HIGH(0x200)
006d99 c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
006d9a 81aa      	LDD  R26,Y+2
006d9b 81bb      	LDD  R27,Y+2+1
006d9c 91ed      	LD   R30,X+
006d9d 91fd      	LD   R31,X+
006d9e 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
006d9f 93fe      	ST   -X,R31
006da0 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
006da1 e000     +LDI R16 , LOW ( 0 )
006da2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
006da3 3005     +CPI R16 , LOW ( 5 )
006da4 e0e0     +LDI R30 , HIGH ( 5 )
006da5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
006da6 f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
006da7 940e bf6b 	CALL SUBOPT_0x21F
006da9 f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
006daa 940e bf72 	CALL SUBOPT_0x220
006dac 2be6      	OR   R30,R22
006dad 2bf7      	OR   R31,R23
006dae c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
006daf 940e bf72 	CALL SUBOPT_0x220
006db1 95e0      	COM  R30
006db2 95f0      	COM  R31
006db3 23e6      	AND  R30,R22
006db4 23f7      	AND  R31,R23
                 _0x1E0067:
006db5 01dc      	MOVW R26,R24
006db6 93ed      	ST   X+,R30
006db7 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
006db8 5f0f     +SUBI R16 , LOW ( - 1 )
006db9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006dba cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
006dbb efeb     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
006dbc e4f6     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
006dbd e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
006dbe e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
006dbf 940e b9fb 	CALL SUBOPT_0x13D
006dc1 940e b2f1 	CALL SUBOPT_0x1E
006dc3 940e bbc8 	CALL SUBOPT_0x182
                 ; 000F 0191 
                 ; 000F 0192     return 0;
006dc5 940e b7a8 	CALL SUBOPT_0xD4
006dc7 940c 7344 	JMP  _0x20E0058
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
006dc9 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
006dca 91a0 166c 	LDS  R26,_eventQ_len
006dcc 91b0 166d 	LDS  R27,_eventQ_len+1
006dce 9754      	SBIW R26,20
006dcf f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
006dd0 efef      	LDI  R30,LOW(65535)
006dd1 efff      	LDI  R31,HIGH(65535)
006dd2 c05c      	RJMP _0x20E005D
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
006dd3 940e bf80 	CALL SUBOPT_0x221
006dd5 51e0      	SUBI R30,LOW(-_eventQ)
006dd6 4efa      	SBCI R31,HIGH(-_eventQ)
006dd7 940e b6e0 	CALL SUBOPT_0xB5
006dd9 940e bee0 	CALL SUBOPT_0x208
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
006ddb 940e bf80 	CALL SUBOPT_0x221
                +
006ddd 50ec     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
006dde 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
006ddf 81a9      	LDD  R26,Y+1
006de0 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
006de1 940e bf80 	CALL SUBOPT_0x221
                +
006de3 50eb     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
006de4 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
006de5 81a8      	LD   R26,Y
006de6 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
006de7 91a0 1668 	LDS  R26,_last_wr_eventQ
006de9 91b0 1669 	LDS  R27,_last_wr_eventQ+1
006deb 9611      	ADIW R26,1
006dec e1e4      	LDI  R30,LOW(20)
006ded e0f0      	LDI  R31,HIGH(20)
006dee 940e ce68 	CALL __MODW21
006df0 93e0 1668 	STS  _last_wr_eventQ,R30
006df2 93f0 1669 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
006df4 e6ac      	LDI  R26,LOW(_eventQ_len)
006df5 e1b6      	LDI  R27,HIGH(_eventQ_len)
006df6 91ed      	LD   R30,X+
006df7 91fd      	LD   R31,X+
006df8 9631      	ADIW R30,1
006df9 c031      	RJMP _0x20E005E
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
006dfa 93ba      	ST   -Y,R27
006dfb 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
006dfc 91e0 166c 	LDS  R30,_eventQ_len
006dfe 91f0 166d 	LDS  R31,_eventQ_len+1
006e00 9730      	SBIW R30,0
006e01 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
006e02 efef      	LDI  R30,LOW(65535)
006e03 efff      	LDI  R31,HIGH(65535)
006e04 c02a      	RJMP _0x20E005D
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
006e05 940e bf88 	CALL SUBOPT_0x222
006e07 51e0      	SUBI R30,LOW(-_eventQ)
006e08 4efa      	SBCI R31,HIGH(-_eventQ)
006e09 940e bf13 	CALL SUBOPT_0x212
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
006e0b 940e bf88 	CALL SUBOPT_0x222
                +
006e0d 50ec     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
006e0e 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
006e0f 81e0      	LD   R30,Z
006e10 81aa      	LDD  R26,Y+2
006e11 81bb      	LDD  R27,Y+2+1
006e12 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
006e13 940e bf88 	CALL SUBOPT_0x222
                +
006e15 50eb     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
006e16 4efa     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
006e17 940e bf90 	CALL SUBOPT_0x223
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
006e19 91a0 166a 	LDS  R26,_last_rd_eventQ
006e1b 91b0 166b 	LDS  R27,_last_rd_eventQ+1
006e1d 9611      	ADIW R26,1
006e1e e1e4      	LDI  R30,LOW(20)
006e1f e0f0      	LDI  R31,HIGH(20)
006e20 940e ce68 	CALL __MODW21
006e22 93e0 166a 	STS  _last_rd_eventQ,R30
006e24 93f0 166b 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
006e26 e6ac      	LDI  R26,LOW(_eventQ_len)
006e27 e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005F:
006e28 91ed      	LD   R30,X+
006e29 91fd      	LD   R31,X+
006e2a 9731      	SBIW R30,1
                 _0x20E005E:
006e2b 93fe      	ST   -X,R31
006e2c 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
006e2d e0e0      	LDI  R30,LOW(0)
006e2e e0f0      	LDI  R31,HIGH(0)
                 _0x20E005D:
006e2f 9626      	ADIW R28,6
006e30 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
006e31 93ba      	ST   -Y,R27
006e32 93aa      	ST   -Y,R26
006e33 940e b396 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
006e35 e000     +LDI R16 , LOW ( 0 )
006e36 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
006e37 81ee      	LDD  R30,Y+6
006e38 81ff      	LDD  R31,Y+6+1
006e39 170e      	CP   R16,R30
006e3a 071f      	CPC  R17,R31
006e3b f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
006e3c 01f8      	MOVW R30,R16
006e3d 85a8      	LDD  R26,Y+8
006e3e 85b9      	LDD  R27,Y+8+1
006e3f 0fae      	ADD  R26,R30
006e40 1fbf      	ADC  R27,R31
006e41 91ac      	LD   R26,X
006e42 d00b      	RCALL _checkAlarmFromSrc
006e43 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
006e44 2b24     +OR R18 , R20
006e45 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
006e46 5f0f     +SUBI R16 , LOW ( - 1 )
006e47 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006e48 cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
006e49 01f9      	MOVW R30,R18
006e4a 940e cf3f 	CALL __LOADLOCR6
                 _0x20E005C:
006e4c 962a      	ADIW R28,10
006e4d 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
006e4e 93aa      	ST   -Y,R26
006e4f 940e bf95 	CALL SUBOPT_0x224
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
006e51 e020     +LDI R18 , LOW ( 0 )
006e52 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
006e53 81ec      	LDD  R30,Y+4
006e54 e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
006e55 3ce0      	CPI  R30,LOW(0xC0)
006e56 e0a0      	LDI  R26,HIGH(0xC0)
006e57 07fa      	CPC  R31,R26
006e58 f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
006e59 91a0 146f 	LDS  R26,_sensorStatus
006e5b 30a0      	CPI  R26,LOW(0x0)
006e5c f011      	BREQ _0x22000D
006e5d 3faf      	CPI  R26,LOW(0xFF)
006e5e f421      	BRNE _0x22000F
                 _0x22000D:
006e5f 91a0 1474 	LDS  R26,_dataStatus
006e61 30a0      	CPI  R26,LOW(0x0)
006e62 f011      	BREQ _0x22000C
                 _0x22000F:
                +
006e63 e021     +LDI R18 , LOW ( 1 )
006e64 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
006e65 c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
006e66 3ce1      	CPI  R30,LOW(0xC1)
006e67 e0a0      	LDI  R26,HIGH(0xC1)
006e68 07fa      	CPC  R31,R26
006e69 f439      	BRNE _0x220011
006e6a 91e0 1474 	LDS  R30,_dataStatus
006e6c 70e1      	ANDI R30,LOW(0x1)
006e6d f011      	BREQ _0x220012
                +
006e6e e021     +LDI R18 , LOW ( 1 )
006e6f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
006e70 c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
006e71 3ce2      	CPI  R30,LOW(0xC2)
006e72 e0a0      	LDI  R26,HIGH(0xC2)
006e73 07fa      	CPC  R31,R26
006e74 f439      	BRNE _0x220013
006e75 91e0 1474 	LDS  R30,_dataStatus
006e77 71e1      	ANDI R30,LOW(0x11)
006e78 f011      	BREQ _0x220014
                +
006e79 e021     +LDI R18 , LOW ( 1 )
006e7a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
006e7b c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
006e7c 3ce3      	CPI  R30,LOW(0xC3)
006e7d e0a0      	LDI  R26,HIGH(0xC3)
006e7e 07fa      	CPC  R31,R26
006e7f f439      	BRNE _0x220015
006e80 91e0 1474 	LDS  R30,_dataStatus
006e82 70e2      	ANDI R30,LOW(0x2)
006e83 f011      	BREQ _0x220016
                +
006e84 e021     +LDI R18 , LOW ( 1 )
006e85 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
006e86 c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
006e87 3ce4      	CPI  R30,LOW(0xC4)
006e88 e0a0      	LDI  R26,HIGH(0xC4)
006e89 07fa      	CPC  R31,R26
006e8a f439      	BRNE _0x220017
006e8b 91e0 1474 	LDS  R30,_dataStatus
006e8d 70e4      	ANDI R30,LOW(0x4)
006e8e f011      	BREQ _0x220018
                +
006e8f e021     +LDI R18 , LOW ( 1 )
006e90 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
006e91 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
006e92 3ce5      	CPI  R30,LOW(0xC5)
006e93 e0a0      	LDI  R26,HIGH(0xC5)
006e94 07fa      	CPC  R31,R26
006e95 f439      	BRNE _0x220019
006e96 91e0 1474 	LDS  R30,_dataStatus
006e98 71e4      	ANDI R30,LOW(0x14)
006e99 f011      	BREQ _0x22001A
                +
006e9a e021     +LDI R18 , LOW ( 1 )
006e9b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
006e9c c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
006e9d 3ce6      	CPI  R30,LOW(0xC6)
006e9e e0a0      	LDI  R26,HIGH(0xC6)
006e9f 07fa      	CPC  R31,R26
006ea0 f439      	BRNE _0x22001B
006ea1 91e0 1474 	LDS  R30,_dataStatus
006ea3 70e8      	ANDI R30,LOW(0x8)
006ea4 f011      	BREQ _0x22001C
                +
006ea5 e021     +LDI R18 , LOW ( 1 )
006ea6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
006ea7 c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
006ea8 3ce7      	CPI  R30,LOW(0xC7)
006ea9 e0a0      	LDI  R26,HIGH(0xC7)
006eaa 07fa      	CPC  R31,R26
006eab f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
006eac 91a0 146f 	LDS  R26,_sensorStatus
006eae 30a0      	CPI  R26,LOW(0x0)
006eaf f011      	BREQ _0x22001F
006eb0 3faf      	CPI  R26,LOW(0xFF)
006eb1 f409      	BRNE _0x220020
                 _0x22001F:
006eb2 c002      	RJMP _0x22001E
                 _0x220020:
                +
006eb3 e021     +LDI R18 , LOW ( 1 )
006eb4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
006eb5 c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
006eb6 3ce8      	CPI  R30,LOW(0xC8)
006eb7 e0a0      	LDI  R26,HIGH(0xC8)
006eb8 07fa      	CPC  R31,R26
006eb9 f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
006eba 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006ebc 30a0      	CPI  R26,LOW(0x0)
006ebd f021      	BREQ _0x220023
                +
006ebe 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006ec0 3faf      	CPI  R26,LOW(0xFF)
006ec1 f421      	BRNE _0x220025
                 _0x220023:
                +
006ec2 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
006ec4 30a0      	CPI  R26,LOW(0x0)
006ec5 f011      	BREQ _0x220022
                 _0x220025:
                +
006ec6 e021     +LDI R18 , LOW ( 1 )
006ec7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
006ec8 c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
006ec9 3ce9      	CPI  R30,LOW(0xC9)
006eca e0a0      	LDI  R26,HIGH(0xC9)
006ecb 07fa      	CPC  R31,R26
006ecc f439      	BRNE _0x220027
                +
006ecd 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006ecf 70e1      	ANDI R30,LOW(0x1)
006ed0 f011      	BREQ _0x220028
                +
006ed1 e021     +LDI R18 , LOW ( 1 )
006ed2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
006ed3 c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
006ed4 3cea      	CPI  R30,LOW(0xCA)
006ed5 e0a0      	LDI  R26,HIGH(0xCA)
006ed6 07fa      	CPC  R31,R26
006ed7 f439      	BRNE _0x220029
                +
006ed8 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006eda 71e1      	ANDI R30,LOW(0x11)
006edb f011      	BREQ _0x22002A
                +
006edc e021     +LDI R18 , LOW ( 1 )
006edd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
006ede c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
006edf 3ceb      	CPI  R30,LOW(0xCB)
006ee0 e0a0      	LDI  R26,HIGH(0xCB)
006ee1 07fa      	CPC  R31,R26
006ee2 f439      	BRNE _0x22002B
                +
006ee3 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006ee5 70e2      	ANDI R30,LOW(0x2)
006ee6 f011      	BREQ _0x22002C
                +
006ee7 e021     +LDI R18 , LOW ( 1 )
006ee8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
006ee9 c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
006eea 3cec      	CPI  R30,LOW(0xCC)
006eeb e0a0      	LDI  R26,HIGH(0xCC)
006eec 07fa      	CPC  R31,R26
006eed f439      	BRNE _0x22002D
                +
006eee 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006ef0 70e4      	ANDI R30,LOW(0x4)
006ef1 f011      	BREQ _0x22002E
                +
006ef2 e021     +LDI R18 , LOW ( 1 )
006ef3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
006ef4 c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
006ef5 3ced      	CPI  R30,LOW(0xCD)
006ef6 e0a0      	LDI  R26,HIGH(0xCD)
006ef7 07fa      	CPC  R31,R26
006ef8 f439      	BRNE _0x22002F
                +
006ef9 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006efb 71e4      	ANDI R30,LOW(0x14)
006efc f011      	BREQ _0x220030
                +
006efd e021     +LDI R18 , LOW ( 1 )
006efe e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
006eff c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
006f00 3cee      	CPI  R30,LOW(0xCE)
006f01 e0a0      	LDI  R26,HIGH(0xCE)
006f02 07fa      	CPC  R31,R26
006f03 f439      	BRNE _0x220031
                +
006f04 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
006f06 70e8      	ANDI R30,LOW(0x8)
006f07 f011      	BREQ _0x220032
                +
006f08 e021     +LDI R18 , LOW ( 1 )
006f09 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
006f0a c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
006f0b 3cef      	CPI  R30,LOW(0xCF)
006f0c e0a0      	LDI  R26,HIGH(0xCF)
006f0d 07fa      	CPC  R31,R26
006f0e f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006f0f 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006f11 30a0      	CPI  R26,LOW(0x0)
006f12 f021      	BREQ _0x220035
                +
006f13 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
006f15 3faf      	CPI  R26,LOW(0xFF)
006f16 f409      	BRNE _0x220036
                 _0x220035:
006f17 c002      	RJMP _0x220034
                 _0x220036:
                +
006f18 e021     +LDI R18 , LOW ( 1 )
006f19 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
006f1a c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
006f1b 3de0      	CPI  R30,LOW(0xD0)
006f1c e0a0      	LDI  R26,HIGH(0xD0)
006f1d 07fa      	CPC  R31,R26
006f1e f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
006f1f 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006f21 30a0      	CPI  R26,LOW(0x0)
006f22 f021      	BREQ _0x220039
                +
006f23 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006f25 3faf      	CPI  R26,LOW(0xFF)
006f26 f421      	BRNE _0x22003B
                 _0x220039:
                +
006f27 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
006f29 30a0      	CPI  R26,LOW(0x0)
006f2a f011      	BREQ _0x220038
                 _0x22003B:
                +
006f2b e021     +LDI R18 , LOW ( 1 )
006f2c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
006f2d c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
006f2e 3de1      	CPI  R30,LOW(0xD1)
006f2f e0a0      	LDI  R26,HIGH(0xD1)
006f30 07fa      	CPC  R31,R26
006f31 f439      	BRNE _0x22003D
                +
006f32 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006f34 70e1      	ANDI R30,LOW(0x1)
006f35 f011      	BREQ _0x22003E
                +
006f36 e021     +LDI R18 , LOW ( 1 )
006f37 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
006f38 c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
006f39 3de2      	CPI  R30,LOW(0xD2)
006f3a e0a0      	LDI  R26,HIGH(0xD2)
006f3b 07fa      	CPC  R31,R26
006f3c f439      	BRNE _0x22003F
                +
006f3d 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006f3f 71e1      	ANDI R30,LOW(0x11)
006f40 f011      	BREQ _0x220040
                +
006f41 e021     +LDI R18 , LOW ( 1 )
006f42 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
006f43 c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
006f44 3de3      	CPI  R30,LOW(0xD3)
006f45 e0a0      	LDI  R26,HIGH(0xD3)
006f46 07fa      	CPC  R31,R26
006f47 f439      	BRNE _0x220041
                +
006f48 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006f4a 70e2      	ANDI R30,LOW(0x2)
006f4b f011      	BREQ _0x220042
                +
006f4c e021     +LDI R18 , LOW ( 1 )
006f4d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
006f4e c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
006f4f 3de4      	CPI  R30,LOW(0xD4)
006f50 e0a0      	LDI  R26,HIGH(0xD4)
006f51 07fa      	CPC  R31,R26
006f52 f439      	BRNE _0x220043
                +
006f53 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006f55 70e4      	ANDI R30,LOW(0x4)
006f56 f011      	BREQ _0x220044
                +
006f57 e021     +LDI R18 , LOW ( 1 )
006f58 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
006f59 c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
006f5a 3de5      	CPI  R30,LOW(0xD5)
006f5b e0a0      	LDI  R26,HIGH(0xD5)
006f5c 07fa      	CPC  R31,R26
006f5d f439      	BRNE _0x220045
                +
006f5e 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006f60 71e4      	ANDI R30,LOW(0x14)
006f61 f011      	BREQ _0x220046
                +
006f62 e021     +LDI R18 , LOW ( 1 )
006f63 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
006f64 c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
006f65 3de6      	CPI  R30,LOW(0xD6)
006f66 e0a0      	LDI  R26,HIGH(0xD6)
006f67 07fa      	CPC  R31,R26
006f68 f439      	BRNE _0x220047
                +
006f69 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
006f6b 70e8      	ANDI R30,LOW(0x8)
006f6c f011      	BREQ _0x220048
                +
006f6d e021     +LDI R18 , LOW ( 1 )
006f6e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
006f6f c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
006f70 3de7      	CPI  R30,LOW(0xD7)
006f71 e0a0      	LDI  R26,HIGH(0xD7)
006f72 07fa      	CPC  R31,R26
006f73 f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006f74 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006f76 30a0      	CPI  R26,LOW(0x0)
006f77 f021      	BREQ _0x22004B
                +
006f78 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
006f7a 3faf      	CPI  R26,LOW(0xFF)
006f7b f409      	BRNE _0x22004C
                 _0x22004B:
006f7c c002      	RJMP _0x22004A
                 _0x22004C:
                +
006f7d e021     +LDI R18 , LOW ( 1 )
006f7e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
006f7f c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
006f80 3de8      	CPI  R30,LOW(0xD8)
006f81 e0a0      	LDI  R26,HIGH(0xD8)
006f82 07fa      	CPC  R31,R26
006f83 f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
006f84 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006f86 30a0      	CPI  R26,LOW(0x0)
006f87 f021      	BREQ _0x22004F
                +
006f88 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006f8a 3faf      	CPI  R26,LOW(0xFF)
006f8b f421      	BRNE _0x220051
                 _0x22004F:
                +
006f8c 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
006f8e 30a0      	CPI  R26,LOW(0x0)
006f8f f011      	BREQ _0x22004E
                 _0x220051:
                +
006f90 e021     +LDI R18 , LOW ( 1 )
006f91 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
006f92 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
006f93 3de9      	CPI  R30,LOW(0xD9)
006f94 e0a0      	LDI  R26,HIGH(0xD9)
006f95 07fa      	CPC  R31,R26
006f96 f439      	BRNE _0x220053
                +
006f97 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006f99 70e1      	ANDI R30,LOW(0x1)
006f9a f011      	BREQ _0x220054
                +
006f9b e021     +LDI R18 , LOW ( 1 )
006f9c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
006f9d c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
006f9e 3dea      	CPI  R30,LOW(0xDA)
006f9f e0a0      	LDI  R26,HIGH(0xDA)
006fa0 07fa      	CPC  R31,R26
006fa1 f439      	BRNE _0x220055
                +
006fa2 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006fa4 71e1      	ANDI R30,LOW(0x11)
006fa5 f011      	BREQ _0x220056
                +
006fa6 e021     +LDI R18 , LOW ( 1 )
006fa7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
006fa8 c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
006fa9 3deb      	CPI  R30,LOW(0xDB)
006faa e0a0      	LDI  R26,HIGH(0xDB)
006fab 07fa      	CPC  R31,R26
006fac f439      	BRNE _0x220057
                +
006fad 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006faf 70e2      	ANDI R30,LOW(0x2)
006fb0 f011      	BREQ _0x220058
                +
006fb1 e021     +LDI R18 , LOW ( 1 )
006fb2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
006fb3 c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
006fb4 3dec      	CPI  R30,LOW(0xDC)
006fb5 e0a0      	LDI  R26,HIGH(0xDC)
006fb6 07fa      	CPC  R31,R26
006fb7 f439      	BRNE _0x220059
                +
006fb8 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006fba 70e4      	ANDI R30,LOW(0x4)
006fbb f011      	BREQ _0x22005A
                +
006fbc e021     +LDI R18 , LOW ( 1 )
006fbd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
006fbe c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
006fbf 3ded      	CPI  R30,LOW(0xDD)
006fc0 e0a0      	LDI  R26,HIGH(0xDD)
006fc1 07fa      	CPC  R31,R26
006fc2 f439      	BRNE _0x22005B
                +
006fc3 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006fc5 71e4      	ANDI R30,LOW(0x14)
006fc6 f011      	BREQ _0x22005C
                +
006fc7 e021     +LDI R18 , LOW ( 1 )
006fc8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
006fc9 c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
006fca 3dee      	CPI  R30,LOW(0xDE)
006fcb e0a0      	LDI  R26,HIGH(0xDE)
006fcc 07fa      	CPC  R31,R26
006fcd f439      	BRNE _0x22005D
                +
006fce 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
006fd0 70e8      	ANDI R30,LOW(0x8)
006fd1 f011      	BREQ _0x22005E
                +
006fd2 e021     +LDI R18 , LOW ( 1 )
006fd3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
006fd4 c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
006fd5 3def      	CPI  R30,LOW(0xDF)
006fd6 e0a0      	LDI  R26,HIGH(0xDF)
006fd7 07fa      	CPC  R31,R26
006fd8 f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
006fd9 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006fdb 30a0      	CPI  R26,LOW(0x0)
006fdc f021      	BREQ _0x220061
                +
006fdd 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
006fdf 3faf      	CPI  R26,LOW(0xFF)
006fe0 f409      	BRNE _0x220062
                 _0x220061:
006fe1 c002      	RJMP _0x220060
                 _0x220062:
                +
006fe2 e021     +LDI R18 , LOW ( 1 )
006fe3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
006fe4 c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
006fe5 3ee0      	CPI  R30,LOW(0xE0)
006fe6 e0a0      	LDI  R26,HIGH(0xE0)
006fe7 07fa      	CPC  R31,R26
006fe8 f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
006fe9 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
006feb 30a0      	CPI  R26,LOW(0x0)
006fec f021      	BREQ _0x220065
                +
006fed 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
006fef 3faf      	CPI  R26,LOW(0xFF)
006ff0 f421      	BRNE _0x220067
                 _0x220065:
                +
006ff1 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
006ff3 30a0      	CPI  R26,LOW(0x0)
006ff4 f011      	BREQ _0x220064
                 _0x220067:
                +
006ff5 e021     +LDI R18 , LOW ( 1 )
006ff6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
006ff7 c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
006ff8 3ee1      	CPI  R30,LOW(0xE1)
006ff9 e0a0      	LDI  R26,HIGH(0xE1)
006ffa 07fa      	CPC  R31,R26
006ffb f439      	BRNE _0x220069
                +
006ffc 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
006ffe 70e1      	ANDI R30,LOW(0x1)
006fff f011      	BREQ _0x22006A
                +
007000 e021     +LDI R18 , LOW ( 1 )
007001 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
007002 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
007003 3ee2      	CPI  R30,LOW(0xE2)
007004 e0a0      	LDI  R26,HIGH(0xE2)
007005 07fa      	CPC  R31,R26
007006 f439      	BRNE _0x22006B
                +
007007 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007009 71e1      	ANDI R30,LOW(0x11)
00700a f011      	BREQ _0x22006C
                +
00700b e021     +LDI R18 , LOW ( 1 )
00700c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
00700d c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
00700e 3ee3      	CPI  R30,LOW(0xE3)
00700f e0a0      	LDI  R26,HIGH(0xE3)
007010 07fa      	CPC  R31,R26
007011 f439      	BRNE _0x22006D
                +
007012 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007014 70e2      	ANDI R30,LOW(0x2)
007015 f011      	BREQ _0x22006E
                +
007016 e021     +LDI R18 , LOW ( 1 )
007017 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
007018 c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
007019 3ee4      	CPI  R30,LOW(0xE4)
00701a e0a0      	LDI  R26,HIGH(0xE4)
00701b 07fa      	CPC  R31,R26
00701c f439      	BRNE _0x22006F
                +
00701d 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
00701f 70e4      	ANDI R30,LOW(0x4)
007020 f011      	BREQ _0x220070
                +
007021 e021     +LDI R18 , LOW ( 1 )
007022 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
007023 c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
007024 3ee5      	CPI  R30,LOW(0xE5)
007025 e0a0      	LDI  R26,HIGH(0xE5)
007026 07fa      	CPC  R31,R26
007027 f439      	BRNE _0x220071
                +
007028 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
00702a 71e4      	ANDI R30,LOW(0x14)
00702b f011      	BREQ _0x220072
                +
00702c e021     +LDI R18 , LOW ( 1 )
00702d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
00702e c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
00702f 3ee6      	CPI  R30,LOW(0xE6)
007030 e0a0      	LDI  R26,HIGH(0xE6)
007031 07fa      	CPC  R31,R26
007032 f439      	BRNE _0x220073
                +
007033 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007035 70e8      	ANDI R30,LOW(0x8)
007036 f011      	BREQ _0x220074
                +
007037 e021     +LDI R18 , LOW ( 1 )
007038 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
007039 c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
00703a 3ee7      	CPI  R30,LOW(0xE7)
00703b e0a0      	LDI  R26,HIGH(0xE7)
00703c 07fa      	CPC  R31,R26
00703d f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
00703e 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007040 30a0      	CPI  R26,LOW(0x0)
007041 f021      	BREQ _0x220077
                +
007042 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007044 3faf      	CPI  R26,LOW(0xFF)
007045 f409      	BRNE _0x220078
                 _0x220077:
007046 c002      	RJMP _0x220076
                 _0x220078:
                +
007047 e021     +LDI R18 , LOW ( 1 )
007048 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
007049 c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
00704a 37e1      	CPI  R30,LOW(0x71)
00704b e0a0      	LDI  R26,HIGH(0x71)
00704c 07fa      	CPC  R31,R26
00704d f409      	BRNE _0x220079
00704e c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
00704f 37e2      	CPI  R30,LOW(0x72)
007050 e0a0      	LDI  R26,HIGH(0x72)
007051 07fa      	CPC  R31,R26
007052 f481      	BRNE _0x22007A
                +
007053 e000     +LDI R16 , LOW ( 0 )
007054 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007055 3002     +CPI R16 , LOW ( 2 )
007056 e0e0     +LDI R30 , HIGH ( 2 )
007057 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007058 f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
007059 e7ac      	LDI  R26,LOW(_dinStatus)
00705a e1b4      	LDI  R27,HIGH(_dinStatus)
00705b 0fa0      	ADD  R26,R16
00705c 1fb1      	ADC  R27,R17
00705d 91ac      	LD   R26,X
00705e 30a1      	CPI  R26,LOW(0x1)
00705f f411      	BRNE _0x22007E
                +
007060 e021     +LDI R18 , LOW ( 1 )
007061 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007062 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007063 37e3      	CPI  R30,LOW(0x73)
007064 e0a0      	LDI  R26,HIGH(0x73)
007065 07fa      	CPC  R31,R26
007066 f471      	BRNE _0x22007F
                +
007067 e000     +LDI R16 , LOW ( 0 )
007068 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007069 3002     +CPI R16 , LOW ( 2 )
00706a e0e0     +LDI R30 , HIGH ( 2 )
00706b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00706c f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
00706d e7ac      	LDI  R26,LOW(_dinStatus)
00706e e1b4      	LDI  R27,HIGH(_dinStatus)
00706f 940e bf9a 	CALL SUBOPT_0x225
007071 f411      	BRNE _0x220083
                +
007072 e021     +LDI R18 , LOW ( 1 )
007073 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
007074 c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
007075 34e0      	CPI  R30,LOW(0x40)
007076 e0a0      	LDI  R26,HIGH(0x40)
007077 07fa      	CPC  R31,R26
007078 f409      	BRNE _0x220084
007079 c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
00707a 35e0      	CPI  R30,LOW(0x50)
00707b e0a0      	LDI  R26,HIGH(0x50)
00707c 07fa      	CPC  R31,R26
00707d f439      	BRNE _0x220085
00707e 91a0 147c 	LDS  R26,_dinStatus
007080 30a1      	CPI  R26,LOW(0x1)
007081 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007082 e021     +LDI R18 , LOW ( 1 )
007083 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
007084 c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
007085 36e0      	CPI  R30,LOW(0x60)
007086 e0a0      	LDI  R26,HIGH(0x60)
007087 07fa      	CPC  R31,R26
007088 f439      	BRNE _0x220087
007089 91e0 147c 	LDS  R30,_dinStatus
00708b 30e0      	CPI  R30,0
00708c f411      	BRNE _0x220088
                +
00708d e021     +LDI R18 , LOW ( 1 )
00708e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
00708f c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007090 34e1      	CPI  R30,LOW(0x41)
007091 e0a0      	LDI  R26,HIGH(0x41)
007092 07fa      	CPC  R31,R26
007093 f409      	BRNE _0x220089
007094 c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
007095 35e1      	CPI  R30,LOW(0x51)
007096 e0a0      	LDI  R26,HIGH(0x51)
007097 07fa      	CPC  R31,R26
007098 f439      	BRNE _0x22008A
                +
007099 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
00709b 30a1      	CPI  R26,LOW(0x1)
00709c f411      	BRNE _0x22008B
                +
00709d e021     +LDI R18 , LOW ( 1 )
00709e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
00709f c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
0070a0 36e1      	CPI  R30,LOW(0x61)
0070a1 e0a0      	LDI  R26,HIGH(0x61)
0070a2 07fa      	CPC  R31,R26
0070a3 f439      	BRNE _0x22008C
                +
0070a4 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
0070a6 30e0      	CPI  R30,0
0070a7 f411      	BRNE _0x22008D
                +
0070a8 e021     +LDI R18 , LOW ( 1 )
0070a9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
0070aa c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
0070ab 38e0      	CPI  R30,LOW(0x80)
0070ac e0a0      	LDI  R26,HIGH(0x80)
0070ad 07fa      	CPC  R31,R26
0070ae f409      	BRNE _0x22008E
0070af c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
0070b0 38e1      	CPI  R30,LOW(0x81)
0070b1 e0a0      	LDI  R26,HIGH(0x81)
0070b2 07fa      	CPC  R31,R26
0070b3 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
0070b4 c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
0070b5 38e2      	CPI  R30,LOW(0x82)
0070b6 e0a0      	LDI  R26,HIGH(0x82)
0070b7 07fa      	CPC  R31,R26
0070b8 f439      	BRNE _0x220090
0070b9 91a0 147a 	LDS  R26,_powerSrcStatus
0070bb 30a1      	CPI  R26,LOW(0x1)
0070bc f411      	BRNE _0x220091
                +
0070bd e021     +LDI R18 , LOW ( 1 )
0070be e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
0070bf c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
0070c0 38e3      	CPI  R30,LOW(0x83)
0070c1 e0a0      	LDI  R26,HIGH(0x83)
0070c2 07fa      	CPC  R31,R26
0070c3 f439      	BRNE _0x220092
0070c4 91a0 147b 	LDS  R26,_batteryStatus
0070c6 30a1      	CPI  R26,LOW(0x1)
0070c7 f411      	BRNE _0x220093
                +
0070c8 e021     +LDI R18 , LOW ( 1 )
0070c9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
0070ca c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
0070cb 38e4      	CPI  R30,LOW(0x84)
0070cc e0a0      	LDI  R26,HIGH(0x84)
0070cd 07fa      	CPC  R31,R26
0070ce f409      	BRNE _0x220094
0070cf c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
0070d0 38e5      	CPI  R30,LOW(0x85)
0070d1 e0a0      	LDI  R26,HIGH(0x85)
0070d2 07fa      	CPC  R31,R26
0070d3 f439      	BRNE _0x220095
0070d4 91a0 14a7 	LDS  R26,_memoryAlarm
0070d6 30a1      	CPI  R26,LOW(0x1)
0070d7 f411      	BRNE _0x220096
                +
0070d8 e021     +LDI R18 , LOW ( 1 )
0070d9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
0070da c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
0070db 38e6      	CPI  R30,LOW(0x86)
0070dc e0a0      	LDI  R26,HIGH(0x86)
0070dd 07fa      	CPC  R31,R26
0070de f439      	BRNE _0x220097
0070df 91a0 14a7 	LDS  R26,_memoryAlarm
0070e1 30a2      	CPI  R26,LOW(0x2)
0070e2 f411      	BRNE _0x220098
                +
0070e3 e021     +LDI R18 , LOW ( 1 )
0070e4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
0070e5 c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
0070e6 38e7      	CPI  R30,LOW(0x87)
0070e7 e0a0      	LDI  R26,HIGH(0x87)
0070e8 07fa      	CPC  R31,R26
0070e9 f439      	BRNE _0x220099
0070ea 91a0 1480 	LDS  R26,_serverCommStatus
0070ec 30a2      	CPI  R26,LOW(0x2)
0070ed f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
0070ee e021     +LDI R18 , LOW ( 1 )
0070ef e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
0070f0 c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
0070f1 39e0      	CPI  R30,LOW(0x90)
0070f2 e0a0      	LDI  R26,HIGH(0x90)
0070f3 07fa      	CPC  R31,R26
0070f4 f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
0070f5 39e1      	CPI  R30,LOW(0x91)
0070f6 e0a0      	LDI  R26,HIGH(0x91)
0070f7 07fa      	CPC  R31,R26
0070f8 f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
0070f9 c004      	RJMP _0x22009E
                 _0x22009D:
0070fa 39e2      	CPI  R30,LOW(0x92)
0070fb e0a0      	LDI  R26,HIGH(0x92)
0070fc 07fa      	CPC  R31,R26
0070fd f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
0070fe c004      	RJMP _0x2200A0
                 _0x22009F:
0070ff 39e3      	CPI  R30,LOW(0x93)
007100 e0a0      	LDI  R26,HIGH(0x93)
007101 07fa      	CPC  R31,R26
007102 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
007103 c004      	RJMP _0x2200A2
                 _0x2200A1:
007104 39e4      	CPI  R30,LOW(0x94)
007105 e0a0      	LDI  R26,HIGH(0x94)
007106 07fa      	CPC  R31,R26
007107 f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
007108 c004      	RJMP _0x2200A4
                 _0x2200A3:
007109 39ef      	CPI  R30,LOW(0x9F)
00710a e0a0      	LDI  R26,HIGH(0x9F)
00710b 07fa      	CPC  R31,R26
00710c f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
00710d e5e2     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
00710e e4f7     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
00710f e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
007110 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
007111 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
007112 e8e5     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
007113 e4f7     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
007114 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
007115 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
007116 940e cec8 	CALL __PUTPARD1
007118 85e8      	LDD  R30,Y+8
007119 940e b342 	CALL SUBOPT_0x2A
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
00711b 01f9      	MOVW R30,R18
00711c 940e cf41 	CALL __LOADLOCR4
00711e 940c 74a8 	JMP  _0x20E0055
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
007120 93ba      	ST   -Y,R27
007121 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007122 91e0 167e 	LDS  R30,_mtncAlarm
007124 91a0 1479 	LDS  R26,_mtncStatus
007126 17ea      	CP   R30,R26
007127 f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
007128 91e0 1479 	LDS  R30,_mtncStatus
00712a 93e0 167e 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
00712c 91e0 1479 	LDS  R30,_mtncStatus
00712e 81a8      	LD   R26,Y
00712f 81b9      	LDD  R27,Y+1
007130 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
007131 e0e1      	LDI  R30,LOW(1)
007132 e0f0      	LDI  R31,HIGH(1)
007133 c0ee      	RJMP _0x20E005A
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
007134 c0eb      	RJMP _0x20E005B
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
007135 93ba      	ST   -Y,R27
007136 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007137 91e0 167f 	LDS  R30,_powerSrcAlarm
007139 91a0 147a 	LDS  R26,_powerSrcStatus
00713b 17ea      	CP   R30,R26
00713c f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
00713d 91e0 1688 	LDS  R30,_lastCheck_S0110003000
00713f 17ea      	CP   R30,R26
007140 f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
007141 e0e0      	LDI  R30,LOW(0)
007142 93e0 1687 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
007144 91e0 147a 	LDS  R30,_powerSrcStatus
007146 93e0 1688 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
007148 91e0 1687 	LDS  R30,_t_flag_S0110003000
00714a 30e0      	CPI  R30,0
00714b f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
00714c 91a0 147a 	LDS  R26,_powerSrcStatus
00714e 30a1      	CPI  R26,LOW(0x1)
00714f f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007150 e8e3      	LDI  R30,LOW(_t_S0110003000)
007151 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007152 940e bb1d 	CALL SUBOPT_0x169
007154 c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
007155 e8e3      	LDI  R30,LOW(_t_S0110003000)
007156 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007157 940e bf9f 	CALL SUBOPT_0x226
                 _0x2200F2:
007159 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
00715b e0e1      	LDI  R30,LOW(1)
00715c 93e0 1687 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
00715e c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
00715f 91a0 1683 	LDS  R26,_t_S0110003000
007161 91b0 1684 	LDS  R27,_t_S0110003000+1
007163 9180 1685 	LDS  R24,_t_S0110003000+2
007165 9190 1686 	LDS  R25,_t_S0110003000+3
007167 940e 3edb 	CALL _TIMER_checkTimerExceed
007169 9730      	SBIW R30,0
00716a f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
00716b 91e0 147a 	LDS  R30,_powerSrcStatus
00716d 93e0 167f 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
00716f 91e0 147a 	LDS  R30,_powerSrcStatus
007171 940e bfa6 	CALL SUBOPT_0x227
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007173 93e0 1687 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
007175 e0e1      	LDI  R30,LOW(1)
007176 e0f0      	LDI  R31,HIGH(1)
007177 c0aa      	RJMP _0x20E005A
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
007178 c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
007179 e0e0      	LDI  R30,LOW(0)
00717a 93e0 1687 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
00717c c0a3      	RJMP _0x20E005B
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
00717d 93ba      	ST   -Y,R27
00717e 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
00717f 940e bfab 	CALL SUBOPT_0x228
007181 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007182 91e0 14a6 	LDS  R30,_batteryAlarm
007184 91a0 147b 	LDS  R26,_batteryStatus
007186 17ea      	CP   R30,R26
007187 f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
007188 91e0 168e 	LDS  R30,_lastCheck_S0110004000
00718a 17ea      	CP   R30,R26
00718b f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
00718c e0e0      	LDI  R30,LOW(0)
00718d 93e0 168d 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
00718f 91e0 147b 	LDS  R30,_batteryStatus
007191 93e0 168e 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007193 91e0 168d 	LDS  R30,_t_flag_S0110004000
007195 30e0      	CPI  R30,0
007196 f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
007197 e8e9      	LDI  R30,LOW(_t_S0110004000)
007198 e1f6      	LDI  R31,HIGH(_t_S0110004000)
007199 940e b331 	CALL SUBOPT_0x28
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
00719b e0e1      	LDI  R30,LOW(1)
00719c 93e0 168d 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
00719e c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
00719f 91a0 1689 	LDS  R26,_t_S0110004000
0071a1 91b0 168a 	LDS  R27,_t_S0110004000+1
0071a3 9180 168b 	LDS  R24,_t_S0110004000+2
0071a5 9190 168c 	LDS  R25,_t_S0110004000+3
0071a7 940e 3edb 	CALL _TIMER_checkTimerExceed
0071a9 9730      	SBIW R30,0
0071aa f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
0071ab 91e0 147b 	LDS  R30,_batteryStatus
0071ad 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
0071af 91e0 147b 	LDS  R30,_batteryStatus
0071b1 940e bfa6 	CALL SUBOPT_0x227
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
0071b3 93e0 168d 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
0071b5 e0e1      	LDI  R30,LOW(1)
0071b6 e0f0      	LDI  R31,HIGH(1)
0071b7 c06a      	RJMP _0x20E005A
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
0071b8 c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
0071b9 e0e0      	LDI  R30,LOW(0)
0071ba 93e0 168d 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
0071bc c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
0071bd e0e0      	LDI  R30,LOW(0)
0071be 93e0 1689 	STS  _t_S0110004000,R30
0071c0 93e0 168a 	STS  _t_S0110004000+1,R30
0071c2 93e0 168b 	STS  _t_S0110004000+2,R30
0071c4 93e0 168c 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
0071c6 93e0 168d 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
0071c8 e6e9      	LDI  R30,LOW(105)
0071c9 93e0 168e 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
0071cb 91e0 14a6 	LDS  R30,_batteryAlarm
0071cd 30e0      	CPI  R30,0
0071ce f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
0071cf e0e0      	LDI  R30,LOW(0)
0071d0 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
0071d2 940e bfb6 	CALL SUBOPT_0x229
                 ; 0011 0109             return 1;
0071d4 c04d      	RJMP _0x20E005A
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
0071d5 c04a      	RJMP _0x20E005B
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
0071d6 93ba      	ST   -Y,R27
0071d7 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
0071d8 940e bfbd 	CALL SUBOPT_0x22A
0071da f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
0071db 91e0 14a7 	LDS  R30,_memoryAlarm
0071dd 91a0 1482 	LDS  R26,_memoryStatus
0071df 17ea      	CP   R30,R26
0071e0 f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
0071e1 91e0 1693 	LDS  R30,_t_flag_S0110005000
0071e3 30e0      	CPI  R30,0
0071e4 f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
0071e5 e8ef      	LDI  R30,LOW(_t_S0110005000)
0071e6 e1f6      	LDI  R31,HIGH(_t_S0110005000)
0071e7 940e b3b6 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
0071e9 e0e1      	LDI  R30,LOW(1)
0071ea 93e0 1693 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
0071ec c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
0071ed 91a0 168f 	LDS  R26,_t_S0110005000
0071ef 91b0 1690 	LDS  R27,_t_S0110005000+1
0071f1 9180 1691 	LDS  R24,_t_S0110005000+2
0071f3 9190 1692 	LDS  R25,_t_S0110005000+3
0071f5 940e 3edb 	CALL _TIMER_checkTimerExceed
0071f7 9730      	SBIW R30,0
0071f8 f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
0071f9 91e0 1482 	LDS  R30,_memoryStatus
0071fb 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
0071fd 91e0 1482 	LDS  R30,_memoryStatus
0071ff 940e bfa6 	CALL SUBOPT_0x227
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
007201 93e0 1693 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
007203 e0e1      	LDI  R30,LOW(1)
007204 e0f0      	LDI  R31,HIGH(1)
007205 c01c      	RJMP _0x20E005A
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
007206 c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
007207 e0e0      	LDI  R30,LOW(0)
007208 93e0 1693 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
00720a c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
00720b e0e0      	LDI  R30,LOW(0)
00720c 93e0 168f 	STS  _t_S0110005000,R30
00720e 93e0 1690 	STS  _t_S0110005000+1,R30
007210 93e0 1691 	STS  _t_S0110005000+2,R30
007212 93e0 1692 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
007214 93e0 1693 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
007216 91e0 14a6 	LDS  R30,_batteryAlarm
007218 30e0      	CPI  R30,0
007219 f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
00721a e0e0      	LDI  R30,LOW(0)
00721b 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
00721d 940e bfb6 	CALL SUBOPT_0x229
                 ; 0011 0136             return 1;
00721f c002      	RJMP _0x20E005A
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005B:
007220 e0e0      	LDI  R30,LOW(0)
007221 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005A:
007222 9622      	ADIW R28,2
007223 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
007224 940e b8bb 	CALL SUBOPT_0x103
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007226 f022      	BRMI _0x2200C7
007227 81aa      	LDD  R26,Y+2
007228 81bb      	LDD  R27,Y+2+1
007229 9712      	SBIW R26,2
00722a f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
00722b ebe5     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
00722c e4f7     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
00722d e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
00722e e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
00722f 940e b8a7 	CALL SUBOPT_0xFF
007231 940e b81b 	CALL SUBOPT_0xE6
                 ; 0011 0145         return 0;
007233 c10e      	RJMP _0x20E0059
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
007234 940e bfc4 	CALL SUBOPT_0x22B
007236 56ea      	SUBI R30,LOW(-_dinAlarm)
007237 4efb      	SBCI R31,HIGH(-_dinAlarm)
007238 81e0      	LD   R30,Z
007239 17ea      	CP   R30,R26
00723a f411      	BRNE PC+3
00723b 940c 7281 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
00723d 940e bfc4 	CALL SUBOPT_0x22B
00723f 56e2      	SUBI R30,LOW(-_lastCheck_S0110006000)
007240 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
007241 81e0      	LD   R30,Z
007242 17ea      	CP   R30,R26
007243 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
007244 940e bfcc 	CALL SUBOPT_0x22C
007246 e0a0      	LDI  R26,LOW(0)
007247 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
007248 81aa      	LDD  R26,Y+2
007249 81bb      	LDD  R27,Y+2+1
00724a 56a2      	SUBI R26,LOW(-_lastCheck_S0110006000)
00724b 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
00724c 940e bfd1 	CALL SUBOPT_0x22D
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
00724e 940e bfcc 	CALL SUBOPT_0x22C
007250 81e0      	LD   R30,Z
007251 30e0      	CPI  R30,0
007252 f489      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007253 81ea      	LDD  R30,Y+2
007254 81fb      	LDD  R31,Y+2+1
007255 e9a4      	LDI  R26,LOW(_t_S0110006000)
007256 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007257 940e bf4c 	CALL SUBOPT_0x21A
                +
007259 e0a5     +LDI R26 , LOW ( 0x5 )
00725a e0b0     +LDI R27 , HIGH ( 0x5 )
00725b e080     +LDI R24 , BYTE3 ( 0x5 )
00725c e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00725d 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0011 0151             t_flag[ch]          = 1;
00725f 940e bfcc 	CALL SUBOPT_0x22C
007261 e0a1      	LDI  R26,LOW(1)
007262 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007263 c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007264 81ea      	LDD  R30,Y+2
007265 81fb      	LDD  R31,Y+2+1
007266 e9a4      	LDI  R26,LOW(_t_S0110006000)
007267 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007268 940e bef7 	CALL SUBOPT_0x20D
00726a 940e b2e6 	CALL SUBOPT_0x1C
00726c f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
00726d 81aa      	LDD  R26,Y+2
00726e 81bb      	LDD  R27,Y+2+1
00726f 56aa      	SUBI R26,LOW(-_dinAlarm)
007270 4ebb      	SBCI R27,HIGH(-_dinAlarm)
007271 940e bfd1 	CALL SUBOPT_0x22D
                 ; 0011 0157                 *code           = dinStatus[ch];
007273 81ea      	LDD  R30,Y+2
007274 81fb      	LDD  R31,Y+2+1
007275 58e4      	SUBI R30,LOW(-_dinStatus)
007276 4efb      	SBCI R31,HIGH(-_dinStatus)
007277 940e bf90 	CALL SUBOPT_0x223
                 ; 0011 0158                 t_flag[ch]      = 0;
007279 940e bfcc 	CALL SUBOPT_0x22C
00727b e0a0      	LDI  R26,LOW(0)
00727c 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
00727d e0e1      	LDI  R30,LOW(1)
00727e e0f0      	LDI  R31,HIGH(1)
00727f c0c4      	RJMP _0x20E0058
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
007280 c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
007281 940e bfcc 	CALL SUBOPT_0x22C
007283 e0a0      	LDI  R26,LOW(0)
007284 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007285 c0bc      	RJMP _0x20E0059
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007286 940e bfd8 	CALL SUBOPT_0x22E
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007288 59e1      	SUBI R30,LOW(-_sensorStatus)
007289 4efb      	SBCI R31,HIGH(-_sensorStatus)
00728a 81a0      	LD   R26,Z
00728b 81ea      	LDD  R30,Y+2
00728c 81fb      	LDD  R31,Y+2+1
00728d 57e4      	SUBI R30,LOW(-_sensorAlarm)
00728e 4efb      	SBCI R31,HIGH(-_sensorAlarm)
00728f 81e0      	LD   R30,Z
007290 17ea      	CP   R30,R26
007291 f411      	BRNE PC+3
007292 940c 72e5 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007294 940e bfdd 	CALL SUBOPT_0x22F
007296 81a0      	LD   R26,Z
007297 81ea      	LDD  R30,Y+2
007298 81fb      	LDD  R31,Y+2+1
007299 54e7      	SUBI R30,LOW(-_lastCheck_S0110007000)
00729a 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
00729b 81e0      	LD   R30,Z
00729c 17ea      	CP   R30,R26
00729d f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
00729e 940e bfe2 	CALL SUBOPT_0x230
0072a0 e0a0      	LDI  R26,LOW(0)
0072a1 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
0072a2 81aa      	LDD  R26,Y+2
0072a3 81bb      	LDD  R27,Y+2+1
0072a4 54a7      	SUBI R26,LOW(-_lastCheck_S0110007000)
0072a5 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
0072a6 940e bfdd 	CALL SUBOPT_0x22F
0072a8 81e0      	LD   R30,Z
0072a9 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
0072aa 940e bfe2 	CALL SUBOPT_0x230
0072ac 81e0      	LD   R30,Z
0072ad 30e0      	CPI  R30,0
0072ae f4c9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
0072af 940e bfdd 	CALL SUBOPT_0x22F
0072b1 81a0      	LD   R26,Z
0072b2 3faf      	CPI  R26,LOW(0xFF)
0072b3 f439      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
0072b4 940e bfe7 	CALL SUBOPT_0x231
                +
0072b6 e1ae     +LDI R26 , LOW ( 0x1E )
0072b7 e0b0     +LDI R27 , HIGH ( 0x1E )
0072b8 e080     +LDI R24 , BYTE3 ( 0x1E )
0072b9 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
0072ba c006      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
0072bb 940e bfe7 	CALL SUBOPT_0x231
                +
0072bd e0a3     +LDI R26 , LOW ( 0x3 )
0072be e0b0     +LDI R27 , HIGH ( 0x3 )
0072bf e080     +LDI R24 , BYTE3 ( 0x3 )
0072c0 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
                 _0x2200F4:
0072c1 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
0072c3 940e bfe2 	CALL SUBOPT_0x230
0072c5 e0a1      	LDI  R26,LOW(1)
0072c6 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
0072c7 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
0072c8 81ea      	LDD  R30,Y+2
0072c9 81fb      	LDD  R31,Y+2+1
0072ca eaa0      	LDI  R26,LOW(_t_S0110007000)
0072cb e1b6      	LDI  R27,HIGH(_t_S0110007000)
0072cc 940e bef7 	CALL SUBOPT_0x20D
0072ce 940e b2e6 	CALL SUBOPT_0x1C
0072d0 f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
0072d1 81aa      	LDD  R26,Y+2
0072d2 81bb      	LDD  R27,Y+2+1
0072d3 57a4      	SUBI R26,LOW(-_sensorAlarm)
0072d4 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
0072d5 940e bfdd 	CALL SUBOPT_0x22F
0072d7 81e0      	LD   R30,Z
0072d8 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
0072d9 940e bfdd 	CALL SUBOPT_0x22F
0072db 940e bf90 	CALL SUBOPT_0x223
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
0072dd 940e bfe2 	CALL SUBOPT_0x230
0072df e0a0      	LDI  R26,LOW(0)
0072e0 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
0072e1 e0e1      	LDI  R30,LOW(1)
0072e2 e0f0      	LDI  R31,HIGH(1)
0072e3 c060      	RJMP _0x20E0058
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
0072e4 c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
0072e5 940e bfe2 	CALL SUBOPT_0x230
0072e7 e0a0      	LDI  R26,LOW(0)
0072e8 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
0072e9 c058      	RJMP _0x20E0059
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
0072ea 940e bfd8 	CALL SUBOPT_0x22E
                 ;	ch -> Y+2
                 ;	*code -> Y+0
0072ec 58ec      	SUBI R30,LOW(-_dataStatus)
0072ed 4efb      	SBCI R31,HIGH(-_dataStatus)
0072ee 81a0      	LD   R26,Z
0072ef 81ea      	LDD  R30,Y+2
0072f0 81fb      	LDD  R31,Y+2+1
0072f1 56ef      	SUBI R30,LOW(-_dataAlarm)
0072f2 4efb      	SBCI R31,HIGH(-_dataAlarm)
0072f3 81e0      	LD   R30,Z
0072f4 17ea      	CP   R30,R26
0072f5 f411      	BRNE PC+3
0072f6 940c 733e 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
0072f8 940e bfec 	CALL SUBOPT_0x232
0072fa 81e0      	LD   R30,Z
0072fb 30e0      	CPI  R30,0
0072fc f489      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
0072fd 81ea      	LDD  R30,Y+2
0072fe 81fb      	LDD  R31,Y+2+1
0072ff ebae      	LDI  R26,LOW(_t_S0110008000)
007300 e1b6      	LDI  R27,HIGH(_t_S0110008000)
007301 940e bf4c 	CALL SUBOPT_0x21A
                +
007303 e0a3     +LDI R26 , LOW ( 0x3 )
007304 e0b0     +LDI R27 , HIGH ( 0x3 )
007305 e080     +LDI R24 , BYTE3 ( 0x3 )
007306 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
007307 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
007309 940e bfec 	CALL SUBOPT_0x232
00730b e0a1      	LDI  R26,LOW(1)
00730c 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
00730d c02f      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
00730e 81ea      	LDD  R30,Y+2
00730f 81fb      	LDD  R31,Y+2+1
007310 ebae      	LDI  R26,LOW(_t_S0110008000)
007311 e1b6      	LDI  R27,HIGH(_t_S0110008000)
007312 940e bef7 	CALL SUBOPT_0x20D
007314 940e b2e6 	CALL SUBOPT_0x1C
007316 f131      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
007317 81aa      	LDD  R26,Y+2
007318 81bb      	LDD  R27,Y+2+1
007319 56af      	SUBI R26,LOW(-_dataAlarm)
00731a 4ebb      	SBCI R27,HIGH(-_dataAlarm)
00731b 81ea      	LDD  R30,Y+2
00731c 81fb      	LDD  R31,Y+2+1
00731d 58ec      	SUBI R30,LOW(-_dataStatus)
00731e 4efb      	SBCI R31,HIGH(-_dataStatus)
00731f 81e0      	LD   R30,Z
007320 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
007321 81ea      	LDD  R30,Y+2
007322 81fb      	LDD  R31,Y+2+1
007323 58ec      	SUBI R30,LOW(-_dataStatus)
007324 4efb      	SBCI R31,HIGH(-_dataStatus)
007325 940e bf90 	CALL SUBOPT_0x223
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
007327 940e bfec 	CALL SUBOPT_0x232
007329 e0a0      	LDI  R26,LOW(0)
00732a 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
00732b eee5     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
00732c e4f7     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
00732d e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
00732e e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
00732f 940e b8a7 	CALL SUBOPT_0xFF
007331 9631      	ADIW R30,1
007332 940e cdbd 	CALL __CWD1
007334 940e b971 	CALL SUBOPT_0x122
007336 56ef      	SUBI R30,LOW(-_dataAlarm)
007337 4efb      	SBCI R31,HIGH(-_dataAlarm)
007338 940e bff1 	CALL SUBOPT_0x233
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
00733a e0e1      	LDI  R30,LOW(1)
00733b e0f0      	LDI  R31,HIGH(1)
00733c c007      	RJMP _0x20E0058
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
00733d c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
00733e 940e bfec 	CALL SUBOPT_0x232
007340 e0a0      	LDI  R26,LOW(0)
007341 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0059:
007342 e0e0      	LDI  R30,LOW(0)
007343 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0058:
007344 9624      	ADIW R28,4
007345 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
007346 940e b5b4 	CALL SUBOPT_0x86
                 ;	period -> Y+0
007348 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
007349 940e b31c 	CALL SUBOPT_0x25
00734b 940e b321 	CALL SUBOPT_0x26
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
00734d e0e1      	LDI  R30,LOW(1)
00734e c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
00734f e8e7      	LDI  R30,LOW(_muteAlarmExpired)
007350 e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
007351 93fa      	ST   -Y,R31
007352 93ea      	ST   -Y,R30
007353 940e b6e0 	CALL SUBOPT_0xB5
007355 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
007357 e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007358 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
00735a e0e0      	LDI  R30,LOW(0)
00735b e0f0      	LDI  R31,HIGH(0)
00735c 940c 77f6 	JMP  _0x20E004B
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
00735e 91e0 148b 	LDS  R30,_muteMode
007360 940e bff7 	CALL SUBOPT_0x234
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007362 f0f1      	BREQ _0x20E0056
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007363 30e2      	CPI  R30,LOW(0x2)
007364 e0a0      	LDI  R26,HIGH(0x2)
007365 07fa      	CPC  R31,R26
007366 f469      	BRNE _0x2200E7
007367 91a0 1487 	LDS  R26,_muteAlarmExpired
007369 91b0 1488 	LDS  R27,_muteAlarmExpired+1
00736b 9180 1489 	LDS  R24,_muteAlarmExpired+2
00736d 9190 148a 	LDS  R25,_muteAlarmExpired+3
00736f 940e 3edb 	CALL _TIMER_checkTimerExceed
007371 9730      	SBIW R30,0
007372 f459      	BRNE _0x20E0057
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007373 c00d      	RJMP _0x20E0056
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007374 e1e7     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007375 e4f8     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007376 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007377 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007378 940e cec8 	CALL __PUTPARD1
00737a 91e0 148b 	LDS  R30,_muteMode
00737c 940e b342 	CALL SUBOPT_0x2A
                 ; 0011 01FF                                 return 1;
                 _0x20E0057:
00737e e0e1      	LDI  R30,LOW(1)
00737f e0f0      	LDI  R31,HIGH(1)
007380 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0056:
007381 e0e0      	LDI  R30,LOW(0)
007382 e0f0      	LDI  R31,HIGH(0)
007383 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007384 940e b65e 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007386 3005     +CPI R16 , LOW ( 5 )
007387 e0e0     +LDI R30 , HIGH ( 5 )
007388 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007389 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
00738a e8ac      	LDI  R26,LOW(_sensorAlarm)
00738b e1b4      	LDI  R27,HIGH(_sensorAlarm)
00738c 940e ba2e 	CALL SUBOPT_0x146
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
00738e e9a1      	LDI  R26,LOW(_dataAlarm)
00738f e1b4      	LDI  R27,HIGH(_dataAlarm)
007390 940e ba2e 	CALL SUBOPT_0x146
                 ; 0011 0210     }
                +
007392 5f0f     +SUBI R16 , LOW ( - 1 )
007393 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007394 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007395 e000     +LDI R16 , LOW ( 0 )
007396 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007397 3100     +CPI R16 , LOW ( 16 )
007398 e0e0     +LDI R30 , HIGH ( 16 )
007399 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
00739a f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
00739b e9a6      	LDI  R26,LOW(_dinAlarm)
00739c e1b4      	LDI  R27,HIGH(_dinAlarm)
00739d 0fa0      	ADD  R26,R16
00739e 1fb1      	ADC  R27,R17
00739f efef      	LDI  R30,LOW(255)
0073a0 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
0073a1 5f0f     +SUBI R16 , LOW ( - 1 )
0073a2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0073a3 cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
0073a4 e000     +LDI R16 , LOW ( 0 )
0073a5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
0073a6 3100     +CPI R16 , LOW ( 16 )
0073a7 e0e0     +LDI R30 , HIGH ( 16 )
0073a8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
0073a9 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
0073aa e6ae      	LDI  R26,LOW(_ainAlarm)
0073ab e1b6      	LDI  R27,HIGH(_ainAlarm)
0073ac 0fa0      	ADD  R26,R16
0073ad 1fb1      	ADC  R27,R17
0073ae efef      	LDI  R30,LOW(255)
0073af 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
0073b0 5f0f     +SUBI R16 , LOW ( - 1 )
0073b1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0073b2 cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
0073b3 efef      	LDI  R30,LOW(255)
0073b4 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
0073b5 e0e0      	LDI  R30,LOW(0)
0073b6 93e0 167e 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
0073b8 93e0 167f 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
0073ba 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
0073bc 93e0 1680 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
0073be 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
0073c0 93e0 1681 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
0073c2 93e0 1682 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
0073c4 940c 7848 	JMP  _0x20E0049
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
0073c6 93ba      	ST   -Y,R27
0073c7 93aa      	ST   -Y,R26
0073c8 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
0073c9 940e b266 	CALL SUBOPT_0x9
0073cb 8dac      	LDD  R26,Y+28
0073cc 8dbd      	LDD  R27,Y+28+1
0073cd 940e 45a5 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
0073cf e4e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
0073d0 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
0073d1 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
0073d2 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
0073d3 940e b5dd 	CALL SUBOPT_0x8D
0073d5 940e b5dd 	CALL SUBOPT_0x8D
0073d7 940e b5dd 	CALL SUBOPT_0x8D
0073d9 940e cec8 	CALL __PUTPARD1
0073db e08c      	LDI  R24,12
0073dc d1dd      	RCALL _printOLED
0073dd 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
0073de e5e9     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
0073df e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
0073e0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
0073e1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
0073e2 940e b496 	CALL SUBOPT_0x5B
0073e4 940e b841 	CALL SUBOPT_0xEE
0073e6 940e bffc 	CALL SUBOPT_0x235
                 ; 0012 0019 
                 ; 0012 001A }
0073e8 966c      	ADIW R28,28
0073e9 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
0073ea 940e b65e 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x240004:
                +
0073ec 3005     +CPI R16 , LOW ( 5 )
0073ed e0e0     +LDI R30 , HIGH ( 5 )
0073ee 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0073ef f014      	BRLT PC+3
0073f0 940c 7466 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
0073f2 940e bf6b 	CALL SUBOPT_0x21F
0073f4 f411      	BRNE PC+3
0073f5 940c 745b 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
0073f7 940e c001 	CALL SUBOPT_0x236
                +
0073f9 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0073fa 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0073fb 81e0      	LD   R30,Z
0073fc 940e b34d 	CALL SUBOPT_0x2C
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
0073fe f469      	BRNE _0x24000A
                +
0073ff e6e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007400 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007401 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007402 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007403 940e c007 	CALL SUBOPT_0x237
007405 940e c001 	CALL SUBOPT_0x236
007407 940e b2fa 	CALL SUBOPT_0x20
007409 940e c010 	CALL SUBOPT_0x238
                 ; 0012 0028                                                 break;
00740b c04e      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
00740c 38e1      	CPI  R30,LOW(0x81)
00740d e0a0      	LDI  R26,HIGH(0x81)
00740e 07fa      	CPC  R31,R26
00740f f449      	BRNE _0x24000B
                +
007410 e6ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007411 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007412 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007413 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007414 940e c007 	CALL SUBOPT_0x237
007416 940e c013 	CALL SUBOPT_0x239
                 ; 0012 002A                                                 break;
007418 c041      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007419 38e2      	CPI  R30,LOW(0x82)
00741a e0a0      	LDI  R26,HIGH(0x82)
00741b 07fa      	CPC  R31,R26
00741c f449      	BRNE _0x24000C
                +
00741d e7ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
00741e e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
00741f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007420 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007421 940e c007 	CALL SUBOPT_0x237
007423 940e c013 	CALL SUBOPT_0x239
                 ; 0012 002C                                                 break;
007425 c034      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007426 38e4      	CPI  R30,LOW(0x84)
007427 e0a0      	LDI  R26,HIGH(0x84)
007428 07fa      	CPC  R31,R26
007429 f449      	BRNE _0x24000D
                +
00742a e8e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
00742b e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
00742c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
00742d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
00742e 940e c007 	CALL SUBOPT_0x237
007430 940e c013 	CALL SUBOPT_0x239
                 ; 0012 002E                                                 break;
007432 c027      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007433 39e0      	CPI  R30,LOW(0x90)
007434 e0a0      	LDI  R26,HIGH(0x90)
007435 07fa      	CPC  R31,R26
007436 f449      	BRNE _0x24000E
                +
007437 e9e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007438 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007439 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
00743a e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
00743b 940e c007 	CALL SUBOPT_0x237
00743d 940e c013 	CALL SUBOPT_0x239
                 ; 0012 0030                                                 break;
00743f c01a      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007440 3fef      	CPI  R30,LOW(0xFF)
007441 e0a0      	LDI  R26,HIGH(0xFF)
007442 07fa      	CPC  R31,R26
007443 f449      	BRNE _0x240010
                +
007444 e9eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007445 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007446 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007447 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007448 940e c007 	CALL SUBOPT_0x237
00744a 940e c013 	CALL SUBOPT_0x239
                 ; 0012 0032                                                 break;
00744c c00d      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
00744d eaea     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
00744e e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
00744f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007450 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007451 940e c007 	CALL SUBOPT_0x237
007453 940e c001 	CALL SUBOPT_0x236
                +
007455 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007456 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007457 940e bff1 	CALL SUBOPT_0x233
                 ; 0012 0034                                                 return;
007459 c3ee      	RJMP _0x20E0049
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
00745a c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
00745b eee6     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
00745c e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
00745d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
00745e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
00745f 940e c007 	CALL SUBOPT_0x237
007461 940e c013 	CALL SUBOPT_0x239
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007463 5f0f     +SUBI R16 , LOW ( - 1 )
007464 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007465 cf86      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007466 c3e1      	RJMP _0x20E0049
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007467 940e cecd 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007469 81ec      	LDD  R30,Y+4
00746a 30e0      	CPI  R30,0
00746b f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
00746c eeef     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
00746d e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
00746e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
00746f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007470 c033      	RJMP _0x240058
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007471 940e c018 	CALL SUBOPT_0x23A
007473 f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007474 efe3     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007475 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007476 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007477 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007478 c02b      	RJMP _0x240058
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007479 940e c018 	CALL SUBOPT_0x23A
00747b f018      	BRLO _0x240017
00747c 940e c021 	CALL SUBOPT_0x23B
00747e f008      	BRLO _0x240018
                 _0x240017:
00747f c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007480 efe7     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007481 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007482 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007483 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007484 c01f      	RJMP _0x240058
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007485 940e c021 	CALL SUBOPT_0x23B
007487 f018      	BRLO _0x24001B
007488 940e c02a 	CALL SUBOPT_0x23C
00748a f008      	BRLO _0x24001C
                 _0x24001B:
00748b c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
00748c efeb     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
00748d e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
00748e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
00748f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007490 c013      	RJMP _0x240058
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007491 940e c02a 	CALL SUBOPT_0x23C
007493 f018      	BRLO _0x24001F
007494 940e c033 	CALL SUBOPT_0x23D
007496 f008      	BRLO _0x240020
                 _0x24001F:
007497 c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007498 efef     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007499 e4f8     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
00749a e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
00749b e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
00749c c007      	RJMP _0x240058
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
00749d 940e c033 	CALL SUBOPT_0x23D
00749f f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
0074a0 e0e3     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
0074a1 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
0074a2 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
0074a3 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240058:
0074a4 940e cec8 	CALL __PUTPARD1
0074a6 940e c03c 	CALL SUBOPT_0x23E
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0055:
0074a8 9625      	ADIW R28,5
0074a9 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
0074aa 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
0074ab 81aa      	LDD  R26,Y+2
0074ac 23aa      	TST  R26
0074ad f022      	BRMI _0x240024
0074ae 81a9      	LDD  R26,Y+1
0074af 81ba      	LDD  R27,Y+1+1
0074b0 9718      	SBIW R26,8
0074b1 f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
0074b2 e0e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
0074b3 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
0074b4 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
0074b5 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
0074b6 940e b22a 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
0074b8 c045      	RJMP _0x20E0053
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
0074b9 81a9      	LDD  R26,Y+1
0074ba 81ba      	LDD  R27,Y+1+1
0074bb e0e3      	LDI  R30,LOW(3)
0074bc 940e cdfe 	CALL __MULB1W2U
0074be 5be1      	SUBI R30,LOW(-_din_config)
0074bf 4efd      	SBCI R31,HIGH(-_din_config)
0074c0 81a0      	LD   R26,Z
0074c1 30a1      	CPI  R26,LOW(0x1)
0074c2 f5d9      	BRNE _0x20E0053
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
0074c3 81a8      	LD   R26,Y
0074c4 30a0      	CPI  R26,LOW(0x0)
0074c5 f011      	BREQ _0x240028
0074c6 30a1      	CPI  R26,LOW(0x1)
0074c7 f409      	BRNE _0x240029
                 _0x240028:
0074c8 c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
0074c9 c034      	RJMP _0x20E0053
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
0074ca e3ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
0074cb e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
0074cc e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
0074cd e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
0074ce c024      	RJMP _0x20E0054
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
0074cf 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
0074d0 81aa      	LDD  R26,Y+2
0074d1 23aa      	TST  R26
0074d2 f022      	BRMI _0x24002B
0074d3 81a9      	LDD  R26,Y+1
0074d4 81ba      	LDD  R27,Y+1+1
0074d5 9718      	SBIW R26,8
0074d6 f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
0074d7 e4e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
0074d8 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
0074d9 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
0074da e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
0074db 940e b22a 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
0074dd c020      	RJMP _0x20E0053
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
0074de 81a9      	LDD  R26,Y+1
0074df 81ba      	LDD  R27,Y+1+1
0074e0 e2e6      	LDI  R30,LOW(38)
0074e1 940e cdfe 	CALL __MULB1W2U
0074e3 58e1      	SUBI R30,LOW(-_dout_config)
0074e4 4efd      	SBCI R31,HIGH(-_dout_config)
0074e5 81a0      	LD   R26,Z
0074e6 30a1      	CPI  R26,LOW(0x1)
0074e7 f4b1      	BRNE _0x20E0053
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
0074e8 81a8      	LD   R26,Y
0074e9 30a0      	CPI  R26,LOW(0x0)
0074ea f011      	BREQ _0x24002F
0074eb 30a1      	CPI  R26,LOW(0x1)
0074ec f409      	BRNE _0x240030
                 _0x24002F:
0074ed c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
0074ee c00f      	RJMP _0x20E0053
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
0074ef e7ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
0074f0 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
0074f1 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
0074f2 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0054:
0074f3 940e cec8 	CALL __PUTPARD1
0074f5 81ed      	LDD  R30,Y+5
0074f6 81fe      	LDD  R31,Y+5+1
0074f7 940e c041 	CALL SUBOPT_0x23F
0074f9 85e8      	LDD  R30,Y+8
0074fa 940e b4d5 	CALL SUBOPT_0x65
0074fc 940e bffc 	CALL SUBOPT_0x235
                 ; 0012 007E }
                 _0x20E0053:
0074fe 9623      	ADIW R28,3
0074ff 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007500 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007501 e8e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007502 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007503 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007504 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007505 940e c046 	CALL SUBOPT_0x240
007507 940e c013 	CALL SUBOPT_0x239
                 ; 0012 0083 }
007509 c12f      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
00750a 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
00750b e8ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
00750c e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
00750d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
00750e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
00750f 940e c046 	CALL SUBOPT_0x240
007511 940e c013 	CALL SUBOPT_0x239
                 ; 0012 0088 }
007513 c125      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007514 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007515 e9e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007516 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007517 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007518 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007519 940e c046 	CALL SUBOPT_0x240
00751b 940e c013 	CALL SUBOPT_0x239
                 ; 0012 008D }
00751d c11b      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
00751e 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
00751f e9ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007520 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007521 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007522 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007523 940e c046 	CALL SUBOPT_0x240
007525 940e c013 	CALL SUBOPT_0x239
                 ; 0012 0092 }
007527 c111      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007528 972a      	SBIW R28,10
007529 940e bf95 	CALL SUBOPT_0x224
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
00752b e000     +LDI R16 , LOW ( 0 )
00752c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
00752d 3005     +CPI R16 , LOW ( 5 )
00752e e0e0     +LDI R30 , HIGH ( 5 )
00752f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007530 f014      	BRLT PC+3
007531 940c 7572 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007533 940e bf6b 	CALL SUBOPT_0x21F
007535 f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007536 01f8      	MOVW R30,R16
007537 01de      	MOVW R26,R28
007538 9619      	ADIW R26,9
007539 0fea      	ADD  R30,R26
00753a 1ffb      	ADC  R31,R27
00753b 010f      	MOVW R0,R30
00753c e8ac      	LDI  R26,LOW(_sensorAlarm)
00753d e1b4      	LDI  R27,HIGH(_sensorAlarm)
00753e 940e bf9a 	CALL SUBOPT_0x225
007540 f011      	BREQ _0x240035
007541 e0e1      	LDI  R30,LOW(1)
007542 c001      	RJMP _0x240036
                 _0x240035:
007543 e0e0      	LDI  R30,LOW(0)
                 _0x240036:
007544 01d0      	MOVW R26,R0
007545 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
007546 e1ad     +LDI R26 , 29
007547 9fa0     +MUL R26 , R16
007548 01f0     +MOVW R30 , R0
007549 9fa1     +MUL R26 , R17
00754a 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
00754b 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00754c 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00754d 81e0      	LD   R30,Z
00754e 30e0      	CPI  R30,0
00754f f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
007550 01f8      	MOVW R30,R16
007551 01de      	MOVW R26,R28
007552 9614      	ADIW R26,4
007553 0fea      	ADD  R30,R26
007554 1ffb      	ADC  R31,R27
007555 010f      	MOVW R0,R30
007556 e9a1      	LDI  R26,LOW(_dataAlarm)
007557 e1b4      	LDI  R27,HIGH(_dataAlarm)
007558 940e bf9a 	CALL SUBOPT_0x225
00755a f011      	BREQ _0x240039
00755b e0e1      	LDI  R30,LOW(1)
00755c c001      	RJMP _0x24003A
                 _0x240039:
00755d e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
00755e 01d0      	MOVW R26,R0
00755f c005      	RJMP _0x240059
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
007560 01de      	MOVW R26,R28
007561 9614      	ADIW R26,4
007562 0fa0      	ADD  R26,R16
007563 1fb1      	ADC  R27,R17
007564 e0e0      	LDI  R30,LOW(0)
                 _0x240059:
007565 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
007566 c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
007567 01de      	MOVW R26,R28
007568 9619      	ADIW R26,9
007569 940e ba2e 	CALL SUBOPT_0x146
                 ; 0012 00A8             flagData[i]         = 0;
00756b 01de      	MOVW R26,R28
00756c 9614      	ADIW R26,4
00756d 940e ba2e 	CALL SUBOPT_0x146
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
00756f 5f0f     +SUBI R16 , LOW ( - 1 )
007570 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007571 cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
007572 940e bfab 	CALL SUBOPT_0x228
007574 f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
007575 91e0 14a6 	LDS  R30,_batteryAlarm
007577 30e0      	CPI  R30,0
007578 f011      	BREQ _0x24003F
007579 e0e1      	LDI  R30,LOW(1)
00757a c001      	RJMP _0x240040
                 _0x24003F:
00757b e0e0      	LDI  R30,LOW(0)
                 _0x240040:
00757c 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
00757d c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
00757e e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
00757f 940e bfbd 	CALL SUBOPT_0x22A
007581 f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
007582 91e0 14a7 	LDS  R30,_memoryAlarm
007584 30e0      	CPI  R30,0
007585 f011      	BREQ _0x240044
007586 e0e1      	LDI  R30,LOW(1)
007587 c001      	RJMP _0x240045
                 _0x240044:
007588 e0e0      	LDI  R30,LOW(0)
                 _0x240045:
007589 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
00758a c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
00758b e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
00758c eae0     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
00758d e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
00758e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
00758f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
007590 940e cec8 	CALL __PUTPARD1
007592 85ed      	LDD  R30,Y+13
007593 940e b4d5 	CALL SUBOPT_0x65
007595 89ea      	LDD  R30,Y+18
007596 940e b4d5 	CALL SUBOPT_0x65
007598 89ef      	LDD  R30,Y+23
007599 940e b4d5 	CALL SUBOPT_0x65
00759b 8dec      	LDD  R30,Y+28
00759c 940e b4d5 	CALL SUBOPT_0x65
00759e a1e9      	LDD  R30,Y+33
00759f 940e b4d5 	CALL SUBOPT_0x65
0075a1 8dec      	LDD  R30,Y+28
0075a2 940e b4d5 	CALL SUBOPT_0x65
0075a4 a1e9      	LDD  R30,Y+33
0075a5 940e b4d5 	CALL SUBOPT_0x65
0075a7 a1ee      	LDD  R30,Y+38
0075a8 940e b4d5 	CALL SUBOPT_0x65
0075aa a5eb      	LDD  R30,Y+43
0075ab 940e b4d5 	CALL SUBOPT_0x65
0075ad a9e8      	LDD  R30,Y+48
0075ae 940e b4d5 	CALL SUBOPT_0x65
0075b0 2fe3      	MOV  R30,R19
0075b1 940e b4d5 	CALL SUBOPT_0x65
0075b3 2fe2      	MOV  R30,R18
0075b4 940e b4d5 	CALL SUBOPT_0x65
0075b6 e380      	LDI  R24,48
0075b7 d002      	RCALL _printOLED
0075b8 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
0075b9 c12a      	RJMP _0x20E0050
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
0075ba 92ff      	PUSH R15
0075bb 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
0075bc 97ef      	SBIW R28,63
0075bd 9721      	SBIW R28,1
0075be 931a      	ST   -Y,R17
0075bf 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
0075c0 01de      	MOVW R26,R28
0075c1 96de      	ADIW R26,62
0075c2 940e cd34 	CALL __ADDW2R15
0075c4 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
0075c5 940e be29 	CALL SUBOPT_0x1EB
0075c7 01de      	MOVW R26,R28
0075c8 5bac      	SUBI R26,LOW(-(68))
0075c9 4fbf      	SBCI R27,HIGH(-(68))
0075ca 940e c04b 	CALL SUBOPT_0x241
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
0075cc 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
0075cd e0a1      	LDI  R26,LOW(1)
0075ce 940e 3e23 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
0075d0 e0e2      	LDI  R30,LOW(2)
0075d1 93ea      	ST   -Y,R30
0075d2 01de      	MOVW R26,R28
0075d3 9613      	ADIW R26,3
0075d4 940e 3e6b 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
0075d6 e0a4      	LDI  R26,LOW(4)
0075d7 940e 3e23 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
0075d9 01fe      	MOVW R30,R28
0075da 96fe      	ADIW R30,62
0075db 940e bf9f 	CALL SUBOPT_0x226
0075dd 940e 3ef1 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     /*bongkot OLED assume flag_oled_ack = 1(OLED has connect and ack);*/
                 ; 0012 00E1     flag_oled_ack = 1;
0075df 9af0      	SBI  0x1E,0
                 ; 0012 00E2     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004C:
0075e0 99f0      	SBIC 0x1E,0
0075e1 c00c      	RJMP _0x24004F
                +
0075e2 01de     +MOVW R26 , R28
0075e3 5ca2     +SUBI R26 , LOW ( - 62 )
0075e4 4fbf     +SBCI R27 , HIGH ( - 62 )
0075e5 900d     +LD R0 , X +
0075e6 901d     +LD R1 , X +
0075e7 918d     +LD R24 , X +
0075e8 919c     +LD R25 , X
0075e9 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
0075ea 940e 3edb 	CALL _TIMER_checkTimerExceed
0075ec 9730      	SBIW R30,0
0075ed f009      	BREQ _0x240050
                 _0x24004F:
0075ee c001      	RJMP _0x24004E
                 _0x240050:
0075ef cff0      	RJMP _0x24004C
                 _0x24004E:
                 ; 0012 00E3 
                 ; 0012 00E4     if(!flag_oled_ack){
0075f0 99f0      	SBIC 0x1E,0
0075f1 c006      	RJMP _0x240051
                 ; 0012 00E5         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
0075f2 ece7     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
0075f3 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
0075f4 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
0075f5 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
0075f6 940e b22a 	CALL SUBOPT_0x3
                 ; 0012 00E6     }
                 ; 0012 00E7 
                 ; 0012 00E8 }
                 _0x240051:
0075f8 8119      	LDD  R17,Y+1
0075f9 8108      	LDD  R16,Y+0
0075fa 96ef      	ADIW R28,63
0075fb 9623      	ADIW R28,3
0075fc 90ff      	POP  R15
0075fd 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00F0 {
                 _OLED_reset:
                 ; 0012 00F1     OLED_RESET = 0;            // Active SOLED Reset
0075fe 98a5      	CBI  0x14,5
                 ; 0012 00F2     delay_ms(1);
0075ff 940e b54e 	CALL SUBOPT_0x75
007601 940e cb81 	CALL _delay_ms
                 ; 0012 00F3     OLED_RESET = 1;            // Dective SOLED Reset for start use.
007603 9aa5      	SBI  0x14,5
                 ; 0012 00F4     delay_ms(1);
007604 940e b54e 	CALL SUBOPT_0x75
007606 940e cb81 	CALL _delay_ms
                 ; 0012 00F5 
                 ; 0012 00F6 }
007608 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00F9 {
                 _init_oled:
                 ; 0012 00FA     printDebug("Initializing OLED.. ");
                +
007609 eee0     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
00760a e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
00760b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
00760c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
00760d 940e b22a 	CALL SUBOPT_0x3
                 ; 0012 00FB     flag_oled_ack = 0;
00760f 98f0      	CBI  0x1E,0
                 ; 0012 00FC     OLED_reset();
007610 dfed      	RCALL _OLED_reset
                 ; 0012 00FD     printDebug("OK\r\n");
                +
007611 efe5     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
007612 e4f9     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
007613 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
007614 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
007615 940e cec8 	CALL __PUTPARD1
007617 e080      	LDI  R24,0
007618 940e 9245 	CALL _printDebug
00761a c1db      	RJMP _0x20E004B
                 ; 0012 00FE }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
00761b 93aa      	ST   -Y,R26
                 ;	res -> Y+0
00761c 81a8      	LD   R26,Y
00761d 30a1      	CPI  R26,LOW(0x1)
00761e f010      	BRLO _0x260005
00761f 31a0      	CPI  R26,LOW(0x10)
007620 f008      	BRLO _0x260006
                 _0x260005:
007621 c017      	RJMP _0x260004
                 _0x260006:
                +
007622 eced     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
007623 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
007624 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
007625 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
007626 940e cec8 	CALL __PUTPARD1
007628 81ec      	LDD  R30,Y+4
007629 efa6      	LDI  R26,LOW(_error_msg*2)
00762a e0b0      	LDI  R27,HIGH(_error_msg*2)
00762b e080      	LDI  R24,BYTE3(_error_msg*2)
00762c 27ff      	CLR  R31
00762d 2766      	CLR  R22
00762e 2777      	CLR  R23
00762f 940e cda3 	CALL __LSLD1
007631 940e cda3 	CALL __LSLD1
007633 940e cd38 	CALL __ADDD12
007635 940e cead 	CALL __GETD1PF
007637 940e bbc8 	CALL SUBOPT_0x182
                 _0x260004:
                 _0x20E0052:
007639 9621      	ADIW R28,1
00763a 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
00763b 940e b589 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
00763d 940e bf32 	CALL SUBOPT_0x216
00763f f449      	BRNE _0x260007
                +
007640 ede9     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
007641 e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
007642 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
007643 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
007644 940e b22a 	CALL SUBOPT_0x3
007646 efef      	LDI  R30,LOW(65535)
007647 efff      	LDI  R31,HIGH(65535)
007648 c09b      	RJMP _0x20E0050
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
007649 940e bc94 	CALL SUBOPT_0x1A9
00764b 940e c054 	CALL SUBOPT_0x242
                 ; 0013 002F     if(res != FR_OK){
00764d f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
00764e efec     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
00764f e4fa     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
007650 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
007651 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
007652 940e b5dd 	CALL SUBOPT_0x8D
007654 940e bbc8 	CALL SUBOPT_0x182
                 ; 0013 0031         error(res);
007656 940e c05b 	CALL SUBOPT_0x243
                 ; 0013 0032         return -1;
007658 c08b      	RJMP _0x20E0050
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
007659 940e bc94 	CALL SUBOPT_0x1A9
00765b 940e bbf1 	CALL SUBOPT_0x18B
00765d 940e bbf1 	CALL SUBOPT_0x18B
00765f b7ad      	IN   R26,SPL
007660 b7be      	IN   R27,SPH
007661 9711      	SBIW R26,1
007662 933f      	PUSH R19
007663 932f      	PUSH R18
007664 940e a93e 	CALL _f_write
007666 912f      	POP  R18
007667 913f      	POP  R19
007668 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
007669 3010      	CPI  R17,0
00766a f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
00766b e2e2     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
00766c e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
00766d e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
00766e e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
00766f 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
007671 940e ba9b 	CALL SUBOPT_0x154
007673 81ae      	LDD  R26,Y+6
007674 81bf      	LDD  R27,Y+6+1
007675 940e 92cc 	CALL _print_payload
                 ; 0013 0039         error(res);
007677 2fa1      	MOV  R26,R17
007678 dfa2      	RCALL _error
                 ; 0013 003A         return -2;
007679 efee      	LDI  R30,LOW(65534)
00767a efff      	LDI  R31,HIGH(65534)
00767b c068      	RJMP _0x20E0050
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
00767c 81ec      	LDD  R30,Y+4
00767d 81fd      	LDD  R31,Y+4+1
00767e 17e2      	CP   R30,R18
00767f 07f3      	CPC  R31,R19
007680 f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
007681 e4e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
007682 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
007683 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
007684 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
007685 940e cec8 	CALL __PUTPARD1
007687 01f9      	MOVW R30,R18
007688 940e b388 	CALL SUBOPT_0x34
00768a 85ec      	LDD  R30,Y+12
00768b 85fd      	LDD  R31,Y+12+1
00768c 940e b9df 	CALL SUBOPT_0x138
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
00768e efed      	LDI  R30,LOW(65533)
00768f efff      	LDI  R31,HIGH(65533)
007690 c053      	RJMP _0x20E0050
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
007691 c050      	RJMP _0x20E0051
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
007692 940e b589 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
007694 940e bf32 	CALL SUBOPT_0x216
007696 f449      	BRNE _0x26000B
                +
007697 e7e1     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
007698 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
007699 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
00769a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
00769b 940e b22a 	CALL SUBOPT_0x3
00769d efef      	LDI  R30,LOW(65535)
00769e efff      	LDI  R31,HIGH(65535)
00769f c044      	RJMP _0x20E0050
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
0076a0 940e bc94 	CALL SUBOPT_0x1A9
0076a2 940e c054 	CALL SUBOPT_0x242
                 ; 0013 004D     if(res != FR_OK){
0076a4 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
0076a5 e9e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
0076a6 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
0076a7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
0076a8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
0076a9 940e b5dd 	CALL SUBOPT_0x8D
0076ab 940e bbc8 	CALL SUBOPT_0x182
                 ; 0013 004F         error(res);
0076ad 940e c05b 	CALL SUBOPT_0x243
                 ; 0013 0050         return -1;
0076af c034      	RJMP _0x20E0050
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
0076b0 940e bc94 	CALL SUBOPT_0x1A9
0076b2 940e bbf1 	CALL SUBOPT_0x18B
0076b4 940e bbf1 	CALL SUBOPT_0x18B
0076b6 b7ad      	IN   R26,SPL
0076b7 b7be      	IN   R27,SPH
0076b8 9711      	SBIW R26,1
0076b9 933f      	PUSH R19
0076ba 932f      	PUSH R18
0076bb 940e a7d9 	CALL _f_read
0076bd 912f      	POP  R18
0076be 913f      	POP  R19
0076bf 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
0076c0 3010      	CPI  R17,0
0076c1 f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
0076c2 ebe8     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
0076c3 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
0076c4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
0076c5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
0076c6 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
0076c8 2fa1      	MOV  R26,R17
0076c9 df51      	RCALL _error
                 ; 0013 0057         return -2;
0076ca efee      	LDI  R30,LOW(65534)
0076cb efff      	LDI  R31,HIGH(65534)
0076cc c017      	RJMP _0x20E0050
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
0076cd 81ec      	LDD  R30,Y+4
0076ce 81fd      	LDD  R31,Y+4+1
0076cf 17e2      	CP   R30,R18
0076d0 07f3      	CPC  R31,R19
0076d1 f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
0076d2 ede8     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
0076d3 e4fb     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
0076d4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
0076d5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
0076d6 940e cec8 	CALL __PUTPARD1
0076d8 01f9      	MOVW R30,R18
0076d9 940e b388 	CALL SUBOPT_0x34
0076db 85ec      	LDD  R30,Y+12
0076dc 85fd      	LDD  R31,Y+12+1
0076dd 940e b9df 	CALL SUBOPT_0x138
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
0076df efed      	LDI  R30,LOW(65533)
0076e0 efff      	LDI  R31,HIGH(65533)
0076e1 c002      	RJMP _0x20E0050
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0051:
0076e2 e0e0      	LDI  R30,LOW(0)
0076e3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0050:
0076e4 940e cf41 	CALL __LOADLOCR4
0076e6 962e      	ADIW R28,14
0076e7 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
0076e8 940e b835 	CALL SUBOPT_0xEB
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
0076ea e0eb      	LDI  R30,LOW(_root_path)
0076eb e1f9      	LDI  R31,HIGH(_root_path)
0076ec 940e c061 	CALL SUBOPT_0x244
0076ee e0a9      	LDI  R26,LOW(_pfat)
0076ef e1b9      	LDI  R27,HIGH(_pfat)
0076f0 940e ad06 	CALL _f_getfree
0076f2 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
0076f3 3010      	CPI  R17,0
0076f4 f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
0076f5 e0e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
0076f6 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
0076f7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
0076f8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
0076f9 940e c068 	CALL SUBOPT_0x245
0076fb 940e b29d 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
0076fd 2fa1      	MOV  R26,R17
0076fe 940e c06e 	CALL SUBOPT_0x246
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
007700 c012      	RJMP _0x20E004F
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
007701 91e0 1909 	LDS  R30,_pfat
007703 91f0 190a 	LDS  R31,_pfat+1
007705 940e c07c 	CALL SUBOPT_0x247
007707 940e c07f 	CALL SUBOPT_0x248
007709 940e c084 	CALL SUBOPT_0x249
00770b 940e cd9e 	CALL __LSRD1
00770d 81ad      	LDD  R26,Y+5
00770e 81be      	LDD  R27,Y+5+1
00770f 940e cea3 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
007711 e0e0      	LDI  R30,LOW(0)
007712 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
007713 8118      	LDD  R17,Y+0
007714 9627      	ADIW R28,7
007715 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
007716 931a      	ST   -Y,R17
                 ;	res -> R17
007717 e0e0      	LDI  R30,LOW(0)
007718 93ea      	ST   -Y,R30
007719 eda7      	LDI  R26,LOW(_fat)
00771a e1b6      	LDI  R27,HIGH(_fat)
00771b 940e a682 	CALL _f_mount
00771d 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
00771e 3010      	CPI  R17,0
00771f f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
007720 e3e2     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
007721 e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
007722 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
007723 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
007724 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
007726 940e c05b 	CALL SUBOPT_0x243
                 ; 0013 0083         return -1;
007728 c008      	RJMP _0x20E004E
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
007729 e5e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
00772a e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
00772b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
00772c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
00772d 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
00772f e0e0      	LDI  R30,LOW(0)
007730 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
007731 9119      	LD   R17,Y+
007732 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
007733 93aa      	ST   -Y,R26
007734 97ef      	SBIW R28,63
007735 9763      	SBIW R28,19
007736 50d2      	SUBI R29,2
007737 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
007738 940e bf32 	CALL SUBOPT_0x216
00773a f449      	BRNE _0x260014
                +
00773b efe8     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
00773c e4fc     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
00773d e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
00773e e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
00773f 940e b22a 	CALL SUBOPT_0x3
007741 efef      	LDI  R30,LOW(65535)
007742 efff      	LDI  R31,HIGH(65535)
007743 c048      	RJMP _0x20E004D
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
007744 01fe      	MOVW R30,R28
007745 9631      	ADIW R30,1
007746 93fa      	ST   -Y,R31
007747 93ea      	ST   -Y,R30
007748 940e c089 	CALL SUBOPT_0x24A
                +
00774a 01fe     +MOVW R30 , R28
00774b 5ae2     +SUBI R30 , LOW ( - 606 )
00774c 4ffd     +SBCI R31 , HIGH ( - 606 )
00774d 9001     +LD R0 , Z +
00774e 81f0     +LD R31 , Z
00774f 2de0     +MOV R30 , R0
                 	__GETW1SX 606
007750 940e b388 	CALL SUBOPT_0x34
007752 e088      	LDI  R24,8
007753 940e b13c 	CALL _sprintf
007755 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
007756 01de     +MOVW R26 , R28
007757 5aad     +SUBI R26 , LOW ( - 595 )
007758 4fbd     +SBCI R27 , HIGH ( - 595 )
007759 91ac     +LD R26 , X
                 	__GETB2SX 595
00775a 30a1      	CPI  R26,LOW(0x1)
00775b f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
00775c 01fe      	MOVW R30,R28
00775d 96f3      	ADIW R30,51
00775e 940e c061 	CALL SUBOPT_0x244
007760 e0aa      	LDI  R26,LOW(10)
007761 c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
007762 01fe      	MOVW R30,R28
007763 96f3      	ADIW R30,51
007764 940e c061 	CALL SUBOPT_0x244
007766 e0a6      	LDI  R26,LOW(6)
                 _0x260021:
007767 940e a6ac 	CALL _f_open
007769 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
00776a 3018      	CPI  R17,8
00776b f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
00776c e0e0      	LDI  R30,LOW(0)
00776d e0f0      	LDI  R31,HIGH(0)
00776e c01d      	RJMP _0x20E004D
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
00776f 3010      	CPI  R17,0
007770 f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
007771 e2e1     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
007772 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
007773 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
007774 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
007775 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
007777 940e c05b 	CALL SUBOPT_0x243
                 ; 0013 00DB         return -1;
007779 c012      	RJMP _0x20E004D
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
00777a 01de      	MOVW R26,R28
00777b 96d3      	ADIW R26,51
00777c 940e ab5b 	CALL _f_close
00777e 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
00777f 3010      	CPI  R17,0
007780 f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
007781 e4e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
007782 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
007783 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
007784 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
007785 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
007787 940e c05b 	CALL SUBOPT_0x243
                 ; 0013 00E4         return -1;
007789 c002      	RJMP _0x20E004D
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
00778a e0e1      	LDI  R30,LOW(1)
00778b e0f0      	LDI  R31,HIGH(1)
                 _0x20E004D:
00778c 8118      	LDD  R17,Y+0
00778d 96ef      	ADIW R28,63
00778e 9667      	ADIW R28,23
00778f 5fde      	SUBI R29,-2
007790 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
007791 93ba      	ST   -Y,R27
007792 93aa      	ST   -Y,R26
007793 97e2      	SBIW R28,50
007794 931a      	ST   -Y,R17
007795 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
007796 940e bf32 	CALL SUBOPT_0x216
007798 f449      	BRNE _0x26001B
                +
007799 e6e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
00779a e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
00779b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
00779c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
00779d 940e b22a 	CALL SUBOPT_0x3
00779f efef      	LDI  R30,LOW(65535)
0077a0 efff      	LDI  R31,HIGH(65535)
0077a1 c02a      	RJMP _0x20E004C
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
0077a2 940e be29 	CALL SUBOPT_0x1EB
0077a4 940e c089 	CALL SUBOPT_0x24A
0077a6 adee      	LDD  R30,Y+62
0077a7 adff      	LDD  R31,Y+62+1
0077a8 940e b388 	CALL SUBOPT_0x34
0077aa e088      	LDI  R24,8
0077ab 940e b13c 	CALL _sprintf
0077ad 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
0077ae a9ee      	LDD  R30,Y+54
0077af a9ff      	LDD  R31,Y+54+1
0077b0 940e c08e 	CALL SUBOPT_0x24B
0077b2 e0a3      	LDI  R26,LOW(3)
0077b3 940e a6ac 	CALL _f_open
0077b5 2f0e      	MOV  R16,R30
0077b6 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
0077b7 2e00      	MOV  R0,R16
0077b8 2a01      	OR   R0,R17
0077b9 f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
0077ba e8e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
0077bb e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
0077bc e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
0077bd e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
0077be 940e cec8 	CALL __PUTPARD1
0077c0 ade8      	LDD  R30,Y+56
0077c1 adf9      	LDD  R31,Y+56+1
0077c2 940e b388 	CALL SUBOPT_0x34
0077c4 940e b29d 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
0077c6 2fa0      	MOV  R26,R16
0077c7 940e c06e 	CALL SUBOPT_0x246
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
0077c9 c002      	RJMP _0x20E004C
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
0077ca e0e0      	LDI  R30,LOW(0)
0077cb e0f0      	LDI  R31,HIGH(0)
                 _0x20E004C:
0077cc 8119      	LDD  R17,Y+1
0077cd 8108      	LDD  R16,Y+0
0077ce 96e8      	ADIW R28,56
0077cf 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
0077d0 940e b595 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
0077d2 940e bf32 	CALL SUBOPT_0x216
0077d4 f449      	BRNE _0x26001D
                +
0077d5 eaed     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
0077d6 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
0077d7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
0077d8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
0077d9 940e b22a 	CALL SUBOPT_0x3
0077db efef      	LDI  R30,LOW(65535)
0077dc efff      	LDI  R31,HIGH(65535)
0077dd c016      	RJMP _0x20E004A
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
0077de 81aa      	LDD  R26,Y+2
0077df 81bb      	LDD  R27,Y+2+1
0077e0 940e ab5b 	CALL _f_close
0077e2 2f0e      	MOV  R16,R30
0077e3 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
0077e4 2e00      	MOV  R0,R16
0077e5 2a01      	OR   R0,R17
0077e6 f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
0077e7 ede0     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
0077e8 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
0077e9 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
0077ea e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
0077eb 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
0077ed 2fa0      	MOV  R26,R16
0077ee de2c      	RCALL _error
                 ; 0013 0108         return -1;
0077ef efef      	LDI  R30,LOW(65535)
0077f0 efff      	LDI  R31,HIGH(65535)
0077f1 c002      	RJMP _0x20E004A
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
0077f2 e0e0      	LDI  R30,LOW(0)
0077f3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004A:
0077f4 8119      	LDD  R17,Y+1
0077f5 8108      	LDD  R16,Y+0
                 _0x20E004B:
0077f6 9624      	ADIW R28,4
0077f7 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
0077f8 931a      	ST   -Y,R17
0077f9 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
0077fa efe2     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
0077fb e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
0077fc e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
0077fd e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
0077fe 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
007800 ede7      	LDI  R30,LOW(_fat)
007801 e1f6      	LDI  R31,HIGH(_fat)
007802 93e0 1909 	STS  _pfat,R30
007804 93f0 190a 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
007806 eea8      	LDI  R26,LOW(1000)
007807 e0b3      	LDI  R27,HIGH(1000)
007808 940e cb81 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
00780a e1e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
00780b e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
00780c e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
00780d e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
00780e 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
007810 df05      	RCALL _SD_mount
007811 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
007812 2311      	TST  R17
007813 f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
007814 e3e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
007815 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
007816 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
007817 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
007818 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
00781a efef      	LDI  R30,LOW(65535)
00781b efff      	LDI  R31,HIGH(65535)
00781c c02b      	RJMP _0x20E0049
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
00781d e5e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
00781e e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
00781f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
007820 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
007821 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
007823 eea8      	LDI  R26,LOW(1000)
007824 e0b3      	LDI  R27,HIGH(1000)
007825 940e cb81 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
007827 e6ab      	LDI  R26,LOW(_sdFreeSpace)
007828 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
007829 debe      	RCALL _SD_readMemoryRemain
00782a 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
00782b 2311      	TST  R17
00782c f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
00782d e7e5     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
00782e e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
00782f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
007830 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
007831 940e b22a 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
007833 efef      	LDI  R30,LOW(65535)
007834 efff      	LDI  R31,HIGH(65535)
007835 c012      	RJMP _0x20E0049
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
007836 e9ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
007837 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
007838 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
007839 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
00783a 940e cec8 	CALL __PUTPARD1
00783c 91e0 146b 	LDS  R30,_sdFreeSpace
00783e 91f0 146c 	LDS  R31,_sdFreeSpace+1
007840 9160 146d 	LDS  R22,_sdFreeSpace+2
007842 9170 146e 	LDS  R23,_sdFreeSpace+3
007844 940e bbc8 	CALL SUBOPT_0x182
                 ; 0013 012D 
                 ; 0013 012E     return 0;
007846 e0e0      	LDI  R30,LOW(0)
007847 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
007848 9109      	LD   R16,Y+
007849 9119      	LD   R17,Y+
00784a 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
00784b 940e cecd 	CALL __PUTPARD2
00784d 9728      	SBIW R28,8
00784e 940e cf3a 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
007850 940e c095 	CALL SUBOPT_0x24C
007852 940e c09a 	CALL SUBOPT_0x24D
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
007854 f44a      	BRPL _0x280009
                +
007855 e0e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
007856 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
007857 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
007858 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
007859 940e b22a 	CALL SUBOPT_0x3
00785b efef      	LDI  R30,LOW(65535)
00785c efff      	LDI  R31,HIGH(65535)
00785d c074      	RJMP _0x20E0048
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
00785e e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
00785f 940e c0a1 	CALL SUBOPT_0x24E
007861 940e c0a7 	CALL SUBOPT_0x24F
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
007863 940e c095 	CALL SUBOPT_0x24C
007865 940e c0ab 	CALL SUBOPT_0x250
007867 b7ed      	IN   R30,SPL
007868 b7fe      	IN   R31,SPH
007869 9731      	SBIW R30,1
00786a 93fa      	ST   -Y,R31
00786b 93ea      	ST   -Y,R30
00786c 934f      	PUSH R20
00786d 933f      	PUSH R19
00786e 940e b54e 	CALL SUBOPT_0x75
007870 ddca      	RCALL _SD_writeData
007871 913f      	POP  R19
007872 914f      	POP  R20
007873 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
007874 2311      	TST  R17
007875 f44a      	BRPL _0x28000A
                +
007876 e3e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
007877 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
007878 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
007879 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
00787a 940e b22a 	CALL SUBOPT_0x3
00787c efef      	LDI  R30,LOW(65535)
00787d efff      	LDI  R31,HIGH(65535)
00787e c053      	RJMP _0x20E0048
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
00787f 940e c095 	CALL SUBOPT_0x24C
007881 940e c0b0 	CALL SUBOPT_0x251
007883 940e cec8 	CALL __PUTPARD1
007885 01fe      	MOVW R30,R28
007886 9678      	ADIW R30,24
007887 940e c0b4 	CALL SUBOPT_0x252
007889 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
00788b f44a      	BRPL _0x28000B
                +
00788c e6e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
00788d e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
00788e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
00788f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
007890 940e b22a 	CALL SUBOPT_0x3
007892 efef      	LDI  R30,LOW(65535)
007893 efff      	LDI  R31,HIGH(65535)
007894 c03d      	RJMP _0x20E0048
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
007895 940e c095 	CALL SUBOPT_0x24C
007897 940e c0bd 	CALL SUBOPT_0x254
007899 01fe      	MOVW R30,R28
00789a 9676      	ADIW R30,22
00789b 940e bee3 	CALL SUBOPT_0x209
00789d 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
00789f f44a      	BRPL _0x28000C
                +
0078a0 e9e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
0078a1 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
0078a2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
0078a3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
0078a4 940e b22a 	CALL SUBOPT_0x3
0078a6 efef      	LDI  R30,LOW(65535)
0078a7 efff      	LDI  R31,HIGH(65535)
0078a8 c029      	RJMP _0x20E0048
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
0078a9 940e c095 	CALL SUBOPT_0x24C
0078ab 940e c0c6 	CALL SUBOPT_0x255
0078ad 940e b4ff 	CALL SUBOPT_0x6C
0078af 940e b554 	CALL SUBOPT_0x77
0078b1 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
0078b3 f44a      	BRPL _0x28000D
                +
0078b4 ece5     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
0078b5 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
0078b6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
0078b7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
0078b8 940e b22a 	CALL SUBOPT_0x3
0078ba efef      	LDI  R30,LOW(65535)
0078bb efff      	LDI  R31,HIGH(65535)
0078bc c015      	RJMP _0x20E0048
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
0078bd 940e c095 	CALL SUBOPT_0x24C
0078bf 940e c0cf 	CALL SUBOPT_0x256
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
0078c1 f45a      	BRPL _0x28000E
                +
0078c2 efe3     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
0078c3 e4ff     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
0078c4 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
0078c5 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
0078c6 940e b5dd 	CALL SUBOPT_0x8D
0078c8 940e bbc8 	CALL SUBOPT_0x182
0078ca efef      	LDI  R30,LOW(65535)
0078cb efff      	LDI  R31,HIGH(65535)
0078cc c005      	RJMP _0x20E0048
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
0078cd e0e0      	LDI  R30,LOW(0)
0078ce 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
0078d0 85e8      	LDD  R30,Y+8
0078d1 85f9      	LDD  R31,Y+8+1
                 _0x20E0048:
0078d2 940e cf41 	CALL __LOADLOCR4
0078d4 9668      	ADIW R28,24
0078d5 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
0078d6 940e b815 	CALL SUBOPT_0xE5
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0078d8 940e c0db 	CALL SUBOPT_0x257
0078da 940e c0e0 	CALL SUBOPT_0x258
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
0078dc f44a      	BRPL _0x28000F
                +
0078dd e2e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
0078de e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
0078df e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
0078e0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
0078e1 940e b22a 	CALL SUBOPT_0x3
0078e3 efef      	LDI  R30,LOW(65535)
0078e4 efff      	LDI  R31,HIGH(65535)
0078e5 c1b5      	RJMP _0x20E0045
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
0078e6 940e c0db 	CALL SUBOPT_0x257
0078e8 940e c0e7 	CALL SUBOPT_0x259
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
0078ea f44a      	BRPL _0x280010
                +
0078eb e5e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
0078ec e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
0078ed e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
0078ee e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
0078ef 940e b22a 	CALL SUBOPT_0x3
0078f1 efef      	LDI  R30,LOW(65535)
0078f2 efff      	LDI  R31,HIGH(65535)
0078f3 c1a7      	RJMP _0x20E0045
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
0078f4 940e c0ee 	CALL SUBOPT_0x25A
0078f6 940e c0f4 	CALL SUBOPT_0x25B
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
0078f8 940e c0fa 	CALL SUBOPT_0x25C
0078fa f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
0078fb eaed     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
0078fc e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
0078fd e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
0078fe e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
0078ff 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
007901 940e c101 	CALL SUBOPT_0x25D
                 ; 0014 0050         if(res < 0)
007903 f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
007904 ecec     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
007905 e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
007906 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
007907 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
007908 940e b4ae 	CALL SUBOPT_0x5F
00790a 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
00790c e0e1      	LDI  R30,LOW(1)
00790d 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
00790f e0e0      	LDI  R30,LOW(0)
007910 e0f0      	LDI  R31,HIGH(0)
007911 c189      	RJMP _0x20E0045
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
007912 940e c0a1 	CALL SUBOPT_0x24E
007914 940e c0a7 	CALL SUBOPT_0x24F
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
007916 940e c0db 	CALL SUBOPT_0x257
007918 940e c0ab 	CALL SUBOPT_0x250
00791a b7ed      	IN   R30,SPL
00791b b7fe      	IN   R31,SPH
00791c 9731      	SBIW R30,1
00791d 93fa      	ST   -Y,R31
00791e 93ea      	ST   -Y,R30
00791f 934f      	PUSH R20
007920 933f      	PUSH R19
007921 940e b54e 	CALL SUBOPT_0x75
007923 dd6e      	RCALL _SD_readData
007924 913f      	POP  R19
007925 914f      	POP  R20
007926 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
007927 2311      	TST  R17
007928 f44a      	BRPL _0x280013
                +
007929 efed     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
00792a e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
00792b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
00792c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
00792d 940e b22a 	CALL SUBOPT_0x3
00792f efef      	LDI  R30,LOW(65535)
007930 efff      	LDI  R31,HIGH(65535)
007931 c169      	RJMP _0x20E0045
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
007932 940e c0db 	CALL SUBOPT_0x257
007934 940e c0b0 	CALL SUBOPT_0x251
007936 940e b83c 	CALL SUBOPT_0xED
007938 940e c0b4 	CALL SUBOPT_0x252
00793a 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
00793c f44a      	BRPL _0x280014
                +
00793d e2e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
00793e e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
00793f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
007940 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
007941 940e b22a 	CALL SUBOPT_0x3
007943 efef      	LDI  R30,LOW(65535)
007944 efff      	LDI  R31,HIGH(65535)
007945 c155      	RJMP _0x20E0045
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
007946 940e c0db 	CALL SUBOPT_0x257
007948 940e c0bd 	CALL SUBOPT_0x254
00794a 8dea      	LDD  R30,Y+26
00794b 8dfb      	LDD  R31,Y+26+1
00794c 940e bee3 	CALL SUBOPT_0x209
00794e 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
007950 f44a      	BRPL _0x280015
                +
007951 e5e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
007952 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
007953 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
007954 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
007955 940e b22a 	CALL SUBOPT_0x3
007957 efef      	LDI  R30,LOW(65535)
007958 efff      	LDI  R31,HIGH(65535)
007959 c141      	RJMP _0x20E0045
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
00795a 940e c0db 	CALL SUBOPT_0x257
00795c 940e c0c6 	CALL SUBOPT_0x255
00795e 8de8      	LDD  R30,Y+24
00795f 8df9      	LDD  R31,Y+24+1
007960 940e c0b4 	CALL SUBOPT_0x252
007962 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
007964 f44a      	BRPL _0x280016
                +
007965 e8e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
007966 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
007967 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
007968 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
007969 940e b22a 	CALL SUBOPT_0x3
00796b efef      	LDI  R30,LOW(65535)
00796c efff      	LDI  R31,HIGH(65535)
00796d c12d      	RJMP _0x20E0045
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
00796e c122      	RJMP _0x20E0046
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
00796f 93aa      	ST   -Y,R26
007970 9728      	SBIW R28,8
007971 940e cf3a 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
007973 940e c117 	CALL SUBOPT_0x25F
007975 940e c09a 	CALL SUBOPT_0x24D
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
007977 f44a      	BRPL _0x280017
                +
007978 eaee     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
007979 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
00797a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
00797b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
00797c 940e b22a 	CALL SUBOPT_0x3
00797e efef      	LDI  R30,LOW(65535)
00797f efff      	LDI  R31,HIGH(65535)
007980 c074      	RJMP _0x20E0047
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
007981 e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
007982 940e c11c 	CALL SUBOPT_0x260
007984 940e c0a7 	CALL SUBOPT_0x24F
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
007986 940e c117 	CALL SUBOPT_0x25F
007988 940e c0ab 	CALL SUBOPT_0x250
00798a b7ed      	IN   R30,SPL
00798b b7fe      	IN   R31,SPH
00798c 9731      	SBIW R30,1
00798d 93fa      	ST   -Y,R31
00798e 93ea      	ST   -Y,R30
00798f 934f      	PUSH R20
007990 933f      	PUSH R19
007991 940e b54e 	CALL SUBOPT_0x75
007993 dca7      	RCALL _SD_writeData
007994 913f      	POP  R19
007995 914f      	POP  R20
007996 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
007997 2311      	TST  R17
007998 f44a      	BRPL _0x280018
                +
007999 eded     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
00799a e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
00799b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
00799c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
00799d 940e b22a 	CALL SUBOPT_0x3
00799f efef      	LDI  R30,LOW(65535)
0079a0 efff      	LDI  R31,HIGH(65535)
0079a1 c053      	RJMP _0x20E0047
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
0079a2 940e c117 	CALL SUBOPT_0x25F
0079a4 940e c0b0 	CALL SUBOPT_0x251
0079a6 940e cec8 	CALL __PUTPARD1
0079a8 01fe      	MOVW R30,R28
0079a9 9674      	ADIW R30,20
0079aa 940e c0b4 	CALL SUBOPT_0x252
0079ac 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
0079ae f44a      	BRPL _0x280019
                +
0079af e0eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
0079b0 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
0079b1 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
0079b2 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
0079b3 940e b22a 	CALL SUBOPT_0x3
0079b5 efef      	LDI  R30,LOW(65535)
0079b6 efff      	LDI  R31,HIGH(65535)
0079b7 c03d      	RJMP _0x20E0047
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
0079b8 940e c117 	CALL SUBOPT_0x25F
0079ba 940e c0bd 	CALL SUBOPT_0x254
0079bc 01fe      	MOVW R30,R28
0079bd 9673      	ADIW R30,19
0079be 940e bee7 	CALL SUBOPT_0x20A
0079c0 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
0079c2 f44a      	BRPL _0x28001A
                +
0079c3 e3ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
0079c4 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
0079c5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
0079c6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
0079c7 940e b22a 	CALL SUBOPT_0x3
0079c9 efef      	LDI  R30,LOW(65535)
0079ca efff      	LDI  R31,HIGH(65535)
0079cb c029      	RJMP _0x20E0047
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
0079cc 940e c117 	CALL SUBOPT_0x25F
0079ce 940e c122 	CALL SUBOPT_0x261
0079d0 940e b4ff 	CALL SUBOPT_0x6C
0079d2 940e b54e 	CALL SUBOPT_0x75
0079d4 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
0079d6 f44a      	BRPL _0x28001B
                +
0079d7 e6ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
0079d8 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
0079d9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
0079da e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
0079db 940e b22a 	CALL SUBOPT_0x3
0079dd efef      	LDI  R30,LOW(65535)
0079de efff      	LDI  R31,HIGH(65535)
0079df c015      	RJMP _0x20E0047
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
0079e0 940e c117 	CALL SUBOPT_0x25F
0079e2 940e c0cf 	CALL SUBOPT_0x256
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
0079e4 f45a      	BRPL _0x28001C
                +
0079e5 e9ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
0079e6 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
0079e7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
0079e8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
0079e9 940e b5dd 	CALL SUBOPT_0x8D
0079eb 940e bbc8 	CALL SUBOPT_0x182
0079ed efef      	LDI  R30,LOW(65535)
0079ee efff      	LDI  R31,HIGH(65535)
0079ef c005      	RJMP _0x20E0047
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0079f0 e0e0      	LDI  R30,LOW(0)
0079f1 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0079f3 85e8      	LDD  R30,Y+8
0079f4 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
0079f5 940e cf41 	CALL __LOADLOCR4
0079f7 9664      	ADIW R28,20
0079f8 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0079f9 940e b815 	CALL SUBOPT_0xE5
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0079fb 940e c0db 	CALL SUBOPT_0x257
0079fd 940e c0e0 	CALL SUBOPT_0x258
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0079ff f44a      	BRPL _0x28001D
                +
007a00 ecec     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
007a01 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
007a02 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
007a03 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
007a04 940e b22a 	CALL SUBOPT_0x3
007a06 efef      	LDI  R30,LOW(65535)
007a07 efff      	LDI  R31,HIGH(65535)
007a08 c092      	RJMP _0x20E0045
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
007a09 940e c0db 	CALL SUBOPT_0x257
007a0b 940e c0e7 	CALL SUBOPT_0x259
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
007a0d f44a      	BRPL _0x28001E
                +
007a0e efe9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
007a0f e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
007a10 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
007a11 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
007a12 940e b22a 	CALL SUBOPT_0x3
007a14 efef      	LDI  R30,LOW(65535)
007a15 efff      	LDI  R31,HIGH(65535)
007a16 c084      	RJMP _0x20E0045
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
007a17 940e c0ee 	CALL SUBOPT_0x25A
007a19 940e c0f4 	CALL SUBOPT_0x25B
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
007a1b 940e c0fa 	CALL SUBOPT_0x25C
007a1d f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
007a1e e2e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
007a1f e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
007a20 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
007a21 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
007a22 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
007a24 940e c12b 	CALL SUBOPT_0x262
                 ; 0014 00A9         if(res < 0)
007a26 f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
007a27 ecec     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
007a28 e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
007a29 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
007a2a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
007a2b 940e b4f5 	CALL SUBOPT_0x6A
007a2d 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
007a2f e0e1      	LDI  R30,LOW(1)
007a30 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
007a32 e0e0      	LDI  R30,LOW(0)
007a33 e0f0      	LDI  R31,HIGH(0)
007a34 c066      	RJMP _0x20E0045
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
007a35 940e c11c 	CALL SUBOPT_0x260
007a37 940e c0a7 	CALL SUBOPT_0x24F
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
007a39 940e c0db 	CALL SUBOPT_0x257
007a3b 940e c0ab 	CALL SUBOPT_0x250
007a3d b7ed      	IN   R30,SPL
007a3e b7fe      	IN   R31,SPH
007a3f 9731      	SBIW R30,1
007a40 93fa      	ST   -Y,R31
007a41 93ea      	ST   -Y,R30
007a42 934f      	PUSH R20
007a43 933f      	PUSH R19
007a44 940e b54e 	CALL SUBOPT_0x75
007a46 dc4b      	RCALL _SD_readData
007a47 913f      	POP  R19
007a48 914f      	POP  R20
007a49 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
007a4a 2311      	TST  R17
007a4b f44a      	BRPL _0x280021
                +
007a4c e4e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
007a4d e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
007a4e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
007a4f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
007a50 940e b22a 	CALL SUBOPT_0x3
007a52 efef      	LDI  R30,LOW(65535)
007a53 efff      	LDI  R31,HIGH(65535)
007a54 c046      	RJMP _0x20E0045
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
007a55 940e c0db 	CALL SUBOPT_0x257
007a57 940e c0b0 	CALL SUBOPT_0x251
007a59 940e b83c 	CALL SUBOPT_0xED
007a5b 940e c0b4 	CALL SUBOPT_0x252
007a5d 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
007a5f f44a      	BRPL _0x280022
                +
007a60 e6ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
007a61 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
007a62 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
007a63 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
007a64 940e b22a 	CALL SUBOPT_0x3
007a66 efef      	LDI  R30,LOW(65535)
007a67 efff      	LDI  R31,HIGH(65535)
007a68 c032      	RJMP _0x20E0045
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
007a69 940e c0db 	CALL SUBOPT_0x257
007a6b 940e c0bd 	CALL SUBOPT_0x254
007a6d 8dea      	LDD  R30,Y+26
007a6e 8dfb      	LDD  R31,Y+26+1
007a6f 940e bee7 	CALL SUBOPT_0x20A
007a71 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
007a73 f44a      	BRPL _0x280023
                +
007a74 e9ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
007a75 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
007a76 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
007a77 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
007a78 940e b22a 	CALL SUBOPT_0x3
007a7a efef      	LDI  R30,LOW(65535)
007a7b efff      	LDI  R31,HIGH(65535)
007a7c c01e      	RJMP _0x20E0045
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
007a7d 940e c0db 	CALL SUBOPT_0x257
007a7f 940e c122 	CALL SUBOPT_0x261
007a81 8de8      	LDD  R30,Y+24
007a82 8df9      	LDD  R31,Y+24+1
007a83 940e bee7 	CALL SUBOPT_0x20A
007a85 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
007a87 f44a      	BRPL _0x280024
                +
007a88 ece8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
007a89 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
007a8a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
007a8b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
007a8c 940e b22a 	CALL SUBOPT_0x3
007a8e efef      	LDI  R30,LOW(65535)
007a8f efff      	LDI  R31,HIGH(65535)
007a90 c00a      	RJMP _0x20E0045
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0046:
                +
007a91 85e8     +LDD R30 , Y + 8
007a92 85f9     +LDD R31 , Y + 8 + 1
007a93 856a     +LDD R22 , Y + 8 + 2
007a94 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
007a95 89a8      	LDD  R26,Y+16
007a96 89b9      	LDD  R27,Y+16+1
007a97 940e cea3 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
007a99 e0e1      	LDI  R30,LOW(1)
007a9a e0f0      	LDI  R31,HIGH(1)
                 _0x20E0045:
007a9b 940e cf41 	CALL __LOADLOCR4
007a9d 966a      	ADIW R28,26
007a9e 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
007a9f 940e b595 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
007aa1 940e c13c 	CALL SUBOPT_0x263
007aa3 940e c141 	CALL SUBOPT_0x264
007aa5 940e bbf1 	CALL SUBOPT_0x18B
007aa7 940e b554 	CALL SUBOPT_0x77
007aa9 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 00CE     if(res < 0)
007aab f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
007aac efe5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
007aad e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
007aae e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
007aaf e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
007ab0 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
007ab2 efef      	LDI  R30,LOW(65535)
007ab3 efff      	LDI  R31,HIGH(65535)
007ab4 c048      	RJMP _0x20E0043
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
007ab5 e2e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
007ab6 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
007ab7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
007ab8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
007ab9 c03b      	RJMP _0x20E0044
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
007aba 940e be36 	CALL SUBOPT_0x1EE
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
007abc e3ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
007abd e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
007abe e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
007abf e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
007ac0 940e be32 	CALL SUBOPT_0x1ED
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
007ac2 940e be29 	CALL SUBOPT_0x1EB
007ac4 940e b554 	CALL SUBOPT_0x77
007ac6 940e bac7 	CALL SUBOPT_0x15B
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
007ac8 940e c141 	CALL SUBOPT_0x264
007aca 01fe      	MOVW R30,R28
007acb 9638      	ADIW R30,8
007acc 940e c0b4 	CALL SUBOPT_0x252
007ace 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 00E1     if(res < 0)
007ad0 f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
007ad1 e6e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
007ad2 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
007ad3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
007ad4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
007ad5 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
007ad7 efef      	LDI  R30,LOW(65535)
007ad8 efff      	LDI  R31,HIGH(65535)
007ad9 c049      	RJMP _0x20E0041
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
007ada c046      	RJMP _0x20E0042
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
007adb 940e b595 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
007add 940e c13c 	CALL SUBOPT_0x263
007adf 940e c148 	CALL SUBOPT_0x265
007ae1 940e bbf1 	CALL SUBOPT_0x18B
007ae3 940e b554 	CALL SUBOPT_0x77
007ae5 940e c112 	CALL SUBOPT_0x25E
                 ; 0014 00EF     if(res < 0)
007ae7 f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
007ae8 e8eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
007ae9 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
007aea e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
007aeb e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
007aec 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
007aee efef      	LDI  R30,LOW(65535)
007aef efff      	LDI  R31,HIGH(65535)
007af0 c00c      	RJMP _0x20E0043
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
007af1 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
007af2 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
007af3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
007af4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0044:
007af5 940e cec8 	CALL __PUTPARD1
007af7 81ae      	LDD  R26,Y+6
007af8 81bf      	LDD  R27,Y+6+1
007af9 940e b985 	CALL SUBOPT_0x126
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
007afb e0e0      	LDI  R30,LOW(0)
007afc e0f0      	LDI  R31,HIGH(0)
                 _0x20E0043:
007afd 8119      	LDD  R17,Y+1
007afe 8108      	LDD  R16,Y+0
007aff 9626      	ADIW R28,6
007b00 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
007b01 940e be36 	CALL SUBOPT_0x1EE
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
007b03 ede0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
007b04 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
007b05 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
007b06 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
007b07 940e be32 	CALL SUBOPT_0x1ED
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
007b09 940e be29 	CALL SUBOPT_0x1EB
007b0b 940e b554 	CALL SUBOPT_0x77
007b0d 940e bac7 	CALL SUBOPT_0x15B
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
007b0f 940e c148 	CALL SUBOPT_0x265
007b11 01fe      	MOVW R30,R28
007b12 9638      	ADIW R30,8
007b13 940e c0b4 	CALL SUBOPT_0x252
007b15 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 0102     if(res < 0)
007b17 f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
007b18 efe0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
007b19 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
007b1a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
007b1b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
007b1c 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
007b1e efef      	LDI  R30,LOW(65535)
007b1f efff      	LDI  R31,HIGH(65535)
007b20 c002      	RJMP _0x20E0041
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0042:
007b21 e0e0      	LDI  R30,LOW(0)
007b22 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0041:
007b23 8119      	LDD  R17,Y+1
007b24 8108      	LDD  R16,Y+0
007b25 9628      	ADIW R28,8
007b26 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
007b27 940e bdb6 	CALL SUBOPT_0x1D4
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
007b29 81ec      	LDD  R30,Y+4
007b2a 81fd      	LDD  R31,Y+4+1
007b2b 940e b48c 	CALL SUBOPT_0x59
007b2d 940e c084 	CALL SUBOPT_0x249
                +
007b2f 5fe0     +SUBI R30 , LOW ( - 16 )
007b30 4fff     +SBCI R31 , HIGH ( - 16 )
007b31 4f6f     +SBCI R22 , BYTE3 ( - 16 )
007b32 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
007b33 940e b67e 	CALL SUBOPT_0xA2
                 ; 0014 0115 
                 ; 0014 0116     return address;
007b35 940e b5bb 	CALL SUBOPT_0x87
007b37 962a      	ADIW R28,10
007b38 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
007b39 93ba      	ST   -Y,R27
007b3a 93aa      	ST   -Y,R26
007b3b 97a0      	SBIW R28,32
007b3c 50d2      	SUBI R29,2
007b3d 931a      	ST   -Y,R17
007b3e 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
007b3f 01fe     +MOVW R30 , R28
007b40 5de9     +SUBI R30 , LOW ( - 551 )
007b41 4ffd     +SBCI R31 , HIGH ( - 551 )
007b42 9001     +LD R0 , Z +
007b43 81f0     +LD R31 , Z
007b44 2de0     +MOV R30 , R0
                 	__GETW1SX 551
007b45 93fa      	ST   -Y,R31
007b46 93ea      	ST   -Y,R30
                +
007b47 01de     +MOVW R26 , R28
007b48 5da8     +SUBI R26 , LOW ( - 552 )
007b49 4fbd     +SBCI R27 , HIGH ( - 552 )
007b4a 91ac     +LD R26 , X
                 	__GETB2SX 552
007b4b dbe7      	RCALL _SD_createFile
007b4c 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
007b4d 2311      	TST  R17
007b4e f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
007b4f e1e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
007b50 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
007b51 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
007b52 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
007b53 940e c14f 	CALL SUBOPT_0x266
007b55 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
007b57 efef      	LDI  R30,LOW(65535)
007b58 efff      	LDI  R31,HIGH(65535)
007b59 c075      	RJMP _0x20E003F
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
007b5a 2e00      	MOV  R0,R16
007b5b 2a01      	OR   R0,R17
007b5c f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
007b5d e4e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
007b5e e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
007b5f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
007b60 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
007b61 940e c14f 	CALL SUBOPT_0x266
007b63 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
007b65 e0e0      	LDI  R30,LOW(0)
007b66 e0f0      	LDI  R31,HIGH(0)
007b67 c067      	RJMP _0x20E003F
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
007b68 e6e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
007b69 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
007b6a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
007b6b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
007b6c 940e c14f 	CALL SUBOPT_0x266
007b6e 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
007b70 01fe     +MOVW R30 , R28
007b71 5dee     +SUBI R30 , LOW ( - 546 )
007b72 4ffd     +SBCI R31 , HIGH ( - 546 )
007b73 9001     +LD R0 , Z +
007b74 81f0     +LD R31 , Z
007b75 2de0     +MOV R30 , R0
                 	__GETW1SX 546
007b76 9730      	SBIW R30,0
007b77 f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
007b78 e8e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
007b79 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
007b7a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
007b7b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
007b7c 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
007b7e c04e      	RJMP _0x20E0040
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
007b7f 940e be29 	CALL SUBOPT_0x1EB
                +
007b81 01de     +MOVW R26 , R28
007b82 5da7     +SUBI R26 , LOW ( - 553 )
007b83 4fbd     +SBCI R27 , HIGH ( - 553 )
007b84 900d     +LD R0 , X +
007b85 91bc     +LD R27 , X
007b86 2da0     +MOV R26 , R0
                 	__GETW2SX 553
007b87 dc09      	RCALL _SD_openFile
007b88 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
007b89 2311      	TST  R17
007b8a f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
007b8b ebe7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
007b8c e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
007b8d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
007b8e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
007b8f 940e c14f 	CALL SUBOPT_0x266
007b91 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
007b93 efef      	LDI  R30,LOW(65535)
007b94 efff      	LDI  R31,HIGH(65535)
007b95 c039      	RJMP _0x20E003F
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
007b96 eee1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
007b97 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
007b98 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
007b99 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
007b9a 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
007b9c 940e c159 	CALL SUBOPT_0x267
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
007b9e 940e be29 	CALL SUBOPT_0x1EB
007ba0 940e c141 	CALL SUBOPT_0x264
                +
007ba2 01fe     +MOVW R30 , R28
007ba3 5de6     +SUBI R30 , LOW ( - 554 )
007ba4 4ffd     +SBCI R31 , HIGH ( - 554 )
007ba5 9001     +LD R0 , Z +
007ba6 81f0     +LD R31 , Z
007ba7 2de0     +MOV R30 , R0
                 	__GETW1SX 554
007ba8 93fa      	ST   -Y,R31
007ba9 93ea      	ST   -Y,R30
                +
007baa 01de     +MOVW R26 , R28
007bab 5da6     +SUBI R26 , LOW ( - 554 )
007bac 4fbd     +SBCI R27 , HIGH ( - 554 )
007bad 900d     +LD R0 , X +
007bae 91bc     +LD R27 , X
007baf 2da0     +MOV R26 , R0
                 	__GETW2SX 554
007bb0 940e c0b8 	CALL SUBOPT_0x253
                 ; 0014 013D             if(res < 0)
007bb2 f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
007bb3 e0e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
007bb4 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
007bb5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
007bb6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
007bb7 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
007bb9 940e c159 	CALL SUBOPT_0x267
                 ; 0014 0141                 return -1;
007bbb efef      	LDI  R30,LOW(65535)
007bbc efff      	LDI  R31,HIGH(65535)
007bbd c011      	RJMP _0x20E003F
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
007bbe 01de      	MOVW R26,R28
007bbf 9612      	ADIW R26,2
007bc0 dc0f      	RCALL _SD_closeFile
007bc1 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
007bc2 2311      	TST  R17
007bc3 f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
007bc4 e3ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
007bc5 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
007bc6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
007bc7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
007bc8 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
007bca efef      	LDI  R30,LOW(65535)
007bcb efff      	LDI  R31,HIGH(65535)
007bcc c002      	RJMP _0x20E003F
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E0040:
007bcd e0e1      	LDI  R30,LOW(1)
007bce e0f0      	LDI  R31,HIGH(1)
                 _0x20E003F:
007bcf 8119      	LDD  R17,Y+1
007bd0 8108      	LDD  R16,Y+0
007bd1 96a9      	ADIW R28,41
007bd2 5fde      	SUBI R29,-2
007bd3 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
007bd4 940e cf3a 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
007bd6 e020     +LDI R18 , LOW ( 0 )
007bd7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
007bd8 e6e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
007bd9 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
007bda e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
007bdb e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
007bdc 940e b22a 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
007bde eae8      	LDI  R30,LOW(_LOGFILE_DATA)
007bdf e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
007be0 940e b84f 	CALL SUBOPT_0xF1
007be2 940e c169 	CALL SUBOPT_0x268
                 ; 0014 0159     if(res < 0)
007be4 f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
007be5 940e c174 	CALL SUBOPT_0x269
007be7 940e b4ae 	CALL SUBOPT_0x5F
007be9 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
007beb 5021     +SUBI R18 , LOW ( 1 )
007bec 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
007bed ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
007bee e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
007bef 940e b84f 	CALL SUBOPT_0xF1
007bf1 940e c169 	CALL SUBOPT_0x268
                 ; 0014 0160     if(res < 0)
007bf3 f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
007bf4 940e c174 	CALL SUBOPT_0x269
007bf6 940e b4f5 	CALL SUBOPT_0x6A
007bf8 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
007bfa 5021     +SUBI R18 , LOW ( 1 )
007bfb 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
007bfc ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
007bfd e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
007bfe 940e b84f 	CALL SUBOPT_0xF1
007c00 940e bbfb 	CALL SUBOPT_0x18D
007c02 df36      	RCALL _LOG_createFile
007c03 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
007c04 2311      	TST  R17
007c05 f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
007c06 940e c174 	CALL SUBOPT_0x269
007c08 940e c179 	CALL SUBOPT_0x26A
007c0a 940e b29d 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
007c0c 5021     +SUBI R18 , LOW ( 1 )
007c0d 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
007c0e 01f9      	MOVW R30,R18
007c0f 940e cf41 	CALL __LOADLOCR4
007c11 9624      	ADIW R28,4
007c12 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
007c13 940e be36 	CALL SUBOPT_0x1EE
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
007c15 d0af      	RCALL _findFreeSlotDataLogQueue
007c16 2f0e      	MOV  R16,R30
007c17 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
007c18 2311      	TST  R17
007c19 f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
007c1a eaec     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
007c1b e5f6     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
007c1c e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
007c1d e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
007c1e 940e b22a 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
007c20 efef      	LDI  R30,LOW(65535)
007c21 efff      	LDI  R31,HIGH(65535)
007c22 c038      	RJMP _0x20E003E
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
007c23 940e bb03 	CALL SUBOPT_0x166
007c25 56e4      	SUBI R30,LOW(-_dataLogQueue)
007c26 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
007c27 85ac      	LDD  R26,Y+12
007c28 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
007c29 940e bb03 	CALL SUBOPT_0x166
                +
007c2b 56e3     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
007c2c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
007c2d 940e b7af 	CALL SUBOPT_0xD6
007c2f 940e bee0 	CALL SUBOPT_0x208
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
007c31 940e bb03 	CALL SUBOPT_0x166
                +
007c33 55ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
007c34 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
007c35 81ae      	LDD  R26,Y+6
007c36 81bf      	LDD  R27,Y+6+1
007c37 83a0      	STD  Z+0,R26
007c38 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
007c39 940e bb03 	CALL SUBOPT_0x166
                +
007c3b 55ed     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
007c3c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
007c3d 940e b6e0 	CALL SUBOPT_0xB5
007c3f 940e bee0 	CALL SUBOPT_0x208
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
007c41 91e0 1a0a 	LDS  R30,_dataLogQCount
007c43 5fef      	SUBI R30,-LOW(1)
007c44 93e0 1a0a 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
007c46 eee2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
007c47 e5f6     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
007c48 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
007c49 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
007c4a 940e cec8 	CALL __PUTPARD1
007c4c 89e8      	LDD  R30,Y+16
007c4d 940e b4d5 	CALL SUBOPT_0x65
007c4f 01f8      	MOVW R30,R16
007c50 940e c041 	CALL SUBOPT_0x23F
007c52 91e0 1a0a 	LDS  R30,_dataLogQCount
007c54 940e b4d5 	CALL SUBOPT_0x65
007c56 940e b4db 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
007c58 91e0 1a0a 	LDS  R30,_dataLogQCount
007c5a e0f0      	LDI  R31,0
                 _0x20E003E:
007c5b 8119      	LDD  R17,Y+1
007c5c 8108      	LDD  R16,Y+0
007c5d 962d      	ADIW R28,13
007c5e 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
007c5f 940e b595 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
007c61 91e0 1a0a 	LDS  R30,_dataLogQCount
007c63 30e0      	CPI  R30,0
007c64 f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
007c65 e3ee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
007c66 e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
007c67 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
007c68 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
007c69 940e b22a 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
007c6b c0f3      	RJMP _0x20E003C
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
007c6c e000     +LDI R16 , LOW ( 0 )
007c6d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
007c6e 300a     +CPI R16 , LOW ( 10 )
007c6f e0e0     +LDI R30 , HIGH ( 10 )
007c70 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
007c71 f53c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
007c72 940e bb03 	CALL SUBOPT_0x166
007c74 56e4      	SUBI R30,LOW(-_dataLogQueue)
007c75 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
007c76 81e0      	LD   R30,Z
007c77 85a8      	LDD  R26,Y+8
007c78 17ea      	CP   R30,R26
007c79 f4e1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
007c7a 940e bb03 	CALL SUBOPT_0x166
                +
007c7c 56e3     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
007c7d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
007c7e 940e c17f 	CALL SUBOPT_0x26B
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
007c80 940e bb03 	CALL SUBOPT_0x166
                +
007c82 55ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
007c83 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
007c84 01df      	MOVW R26,R30
007c85 940e ce94 	CALL __GETW1P
007c87 81ac      	LDD  R26,Y+4
007c88 81bd      	LDD  R27,Y+4+1
007c89 93ed      	ST   X+,R30
007c8a 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
007c8b 940e bb03 	CALL SUBOPT_0x166
                +
007c8d 55ed     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
007c8e 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
007c8f 01df      	MOVW R26,R30
007c90 940e ce98 	CALL __GETD1P
007c92 940e be8c 	CALL SUBOPT_0x1F9
                 ; 0015 0034 
                 ; 0015 0035             return i;
007c94 01f8      	MOVW R30,R16
007c95 c0cb      	RJMP _0x20E003B
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
007c96 5f0f     +SUBI R16 , LOW ( - 1 )
007c97 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007c98 cfd5      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
007c99 e6ee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
007c9a e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
007c9b e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
007c9c e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
007c9d c0bc      	RJMP _0x20E003D
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
007c9e 93aa      	ST   -Y,R26
007c9f 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
007ca0 e010      	LDI  R17,LOW(0)
                 _0x2A000A:
007ca1 301a      	CPI  R17,10
007ca2 f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
007ca3 940e c187 	CALL SUBOPT_0x26C
007ca5 81e0      	LD   R30,Z
007ca6 81a9      	LDD  R26,Y+1
007ca7 17ea      	CP   R30,R26
007ca8 f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
007ca9 940e c187 	CALL SUBOPT_0x26C
007cab 940e c18d 	CALL SUBOPT_0x26D
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
007cad 91e0 1a0a 	LDS  R30,_dataLogQCount
007caf 50e1      	SUBI R30,LOW(1)
007cb0 93e0 1a0a 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
007cb2 eaee     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
007cb3 e5f7     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
007cb4 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
007cb5 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
007cb6 940e be78 	CALL SUBOPT_0x1F5
007cb8 940e be7d 	CALL SUBOPT_0x1F6
                 ; 0015 004B             return dataLogQCount;
007cba 91e0 1a0a 	LDS  R30,_dataLogQCount
007cbc e0f0      	LDI  R31,0
007cbd c0da      	RJMP _0x20E0039
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
007cbe 5f1f      	SUBI R17,-1
007cbf cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
007cc0 e0e3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
007cc1 e5f8     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
007cc2 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
007cc3 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
007cc4 c0cc      	RJMP _0x20E003A
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
007cc5 931a      	ST   -Y,R17
                 ;	i -> R17
007cc6 e010      	LDI  R17,LOW(0)
                 _0x2A000E:
007cc7 301a      	CPI  R17,10
007cc8 f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
007cc9 940e c187 	CALL SUBOPT_0x26C
007ccb 81e0      	LD   R30,Z
007ccc 30e0      	CPI  R30,0
007ccd f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
007cce 2fe1      	MOV  R30,R17
007ccf c0ea      	RJMP _0x20E0038
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
007cd0 5f1f      	SUBI R17,-1
007cd1 cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
007cd2 efef      	LDI  R30,LOW(255)
007cd3 c0e6      	RJMP _0x20E0038
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
007cd4 931a      	ST   -Y,R17
                 ;	i -> R17
007cd5 e010      	LDI  R17,LOW(0)
                 _0x2A0012:
007cd6 301a      	CPI  R17,10
007cd7 f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
007cd8 940e c187 	CALL SUBOPT_0x26C
007cda 940e c18d 	CALL SUBOPT_0x26D
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
007cdc 5f1f      	SUBI R17,-1
007cdd cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
007cde c0db      	RJMP _0x20E0038
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
007cdf 93aa      	ST   -Y,R26
007ce0 931a      	ST   -Y,R17
007ce1 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
007ce2 d0b8      	RCALL _findFreeSlotEventLogQueue
007ce3 2f0e      	MOV  R16,R30
007ce4 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
007ce5 2311      	TST  R17
007ce6 f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
007ce7 e4e5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
007ce8 e5f8     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
007ce9 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
007cea e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
007ceb 940e b22a 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
007ced c071      	RJMP _0x20E003C
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
007cee 940e c1a8 	CALL SUBOPT_0x26E
007cf0 5fe1      	SUBI R30,LOW(-_eventLogQueue)
007cf1 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
007cf2 85a8      	LDD  R26,Y+8
007cf3 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
007cf4 940e c1a8 	CALL SUBOPT_0x26E
                +
007cf6 5fe0     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
007cf7 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
007cf8 940e b6a7 	CALL SUBOPT_0xAA
007cfa 940e bee0 	CALL SUBOPT_0x208
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
007cfc 940e c1a8 	CALL SUBOPT_0x26E
                +
007cfe 5eec     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
007cff 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
007d00 81ab      	LDD  R26,Y+3
007d01 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
007d02 940e c1a8 	CALL SUBOPT_0x26E
                +
007d04 5eeb     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
007d05 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
007d06 81aa      	LDD  R26,Y+2
007d07 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
007d08 91e0 199b 	LDS  R30,_eventLogQCount
007d0a 5fef      	SUBI R30,-LOW(1)
007d0b 93e0 199b 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
007d0d e7ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
007d0e e5f8     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
007d0f e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
007d10 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
007d11 940e be40 	CALL SUBOPT_0x1F0
007d13 01f8      	MOVW R30,R16
007d14 940e c041 	CALL SUBOPT_0x23F
007d16 91e0 199b 	LDS  R30,_eventLogQCount
007d18 940e b4d5 	CALL SUBOPT_0x65
007d1a 940e b4db 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
007d1c 91e0 199b 	LDS  R30,_eventLogQCount
007d1e e0f0      	LDI  R31,0
007d1f c041      	RJMP _0x20E003B
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
007d20 940e b595 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
007d22 91e0 199b 	LDS  R30,_eventLogQCount
007d24 30e0      	CPI  R30,0
007d25 f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
007d26 ede9     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
007d27 e5f8     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
007d28 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
007d29 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
007d2a 940e b22a 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
007d2c c032      	RJMP _0x20E003C
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
007d2d e000     +LDI R16 , LOW ( 0 )
007d2e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
007d2f 3104     +CPI R16 , LOW ( 20 )
007d30 e0e0     +LDI R30 , HIGH ( 20 )
007d31 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
007d32 f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
007d33 940e c1a8 	CALL SUBOPT_0x26E
007d35 5fe1      	SUBI R30,LOW(-_eventLogQueue)
007d36 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
007d37 81e0      	LD   R30,Z
007d38 85a8      	LDD  R26,Y+8
007d39 17ea      	CP   R30,R26
007d3a f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
007d3b 940e c1a8 	CALL SUBOPT_0x26E
                +
007d3d 5fe0     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
007d3e 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
007d3f 940e c17f 	CALL SUBOPT_0x26B
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
007d41 940e c1a8 	CALL SUBOPT_0x26E
                +
007d43 5eec     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
007d44 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
007d45 81e0      	LD   R30,Z
007d46 81ac      	LDD  R26,Y+4
007d47 81bd      	LDD  R27,Y+4+1
007d48 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
007d49 940e c1a8 	CALL SUBOPT_0x26E
                +
007d4b 5eeb     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
007d4c 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
007d4d 81e0      	LD   R30,Z
007d4e 81aa      	LDD  R26,Y+2
007d4f 81bb      	LDD  R27,Y+2+1
007d50 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
007d51 01f8      	MOVW R30,R16
007d52 c00e      	RJMP _0x20E003B
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
007d53 5f0f     +SUBI R16 , LOW ( - 1 )
007d54 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d55 cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
007d56 e0eb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
007d57 e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
007d58 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
007d59 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003D:
007d5a 940e cec8 	CALL __PUTPARD1
007d5c 85ec      	LDD  R30,Y+12
007d5d 940e b342 	CALL SUBOPT_0x2A
                 ; 0015 0099     return -1;
                 _0x20E003C:
007d5f efef      	LDI  R30,LOW(65535)
007d60 efff      	LDI  R31,HIGH(65535)
                 _0x20E003B:
007d61 8119      	LDD  R17,Y+1
007d62 8108      	LDD  R16,Y+0
007d63 9629      	ADIW R28,9
007d64 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
007d65 93aa      	ST   -Y,R26
007d66 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
007d67 e010      	LDI  R17,LOW(0)
                 _0x2A001B:
007d68 3114      	CPI  R17,20
007d69 f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
007d6a 940e c1ae 	CALL SUBOPT_0x26F
007d6c 81e0      	LD   R30,Z
007d6d 81a9      	LDD  R26,Y+1
007d6e 17ea      	CP   R30,R26
007d6f f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
007d70 940e c1ae 	CALL SUBOPT_0x26F
007d72 940e c1b4 	CALL SUBOPT_0x270
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
007d74 940e c1ba 	CALL SUBOPT_0x271
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
007d76 5eeb     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
007d77 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
007d78 e0a0      	LDI  R26,LOW(0)
007d79 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
007d7a 91e0 199b 	LDS  R30,_eventLogQCount
007d7c 50e1      	SUBI R30,LOW(1)
007d7d 93e0 199b 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
007d7f e4ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
007d80 e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
007d81 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
007d82 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
007d83 940e be78 	CALL SUBOPT_0x1F5
007d85 940e be7d 	CALL SUBOPT_0x1F6
                 ; 0015 00AA             return eventLogQCount;
007d87 91e0 199b 	LDS  R30,_eventLogQCount
007d89 e0f0      	LDI  R31,0
007d8a c00d      	RJMP _0x20E0039
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
007d8b 5f1f      	SUBI R17,-1
007d8c cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
007d8d eae2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
007d8e e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
007d8f e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
007d90 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E003A:
007d91 940e cec8 	CALL __PUTPARD1
007d93 81ed      	LDD  R30,Y+5
007d94 940e b342 	CALL SUBOPT_0x2A
                 ; 0015 00AE     return -1;
007d96 efef      	LDI  R30,LOW(65535)
007d97 efff      	LDI  R31,HIGH(65535)
                 _0x20E0039:
007d98 8118      	LDD  R17,Y+0
007d99 9622      	ADIW R28,2
007d9a 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
007d9b 931a      	ST   -Y,R17
                 ;	i -> R17
007d9c e010      	LDI  R17,LOW(0)
                 _0x2A001F:
007d9d 3114      	CPI  R17,20
007d9e f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
007d9f 940e c1ae 	CALL SUBOPT_0x26F
007da1 81e0      	LD   R30,Z
007da2 30e0      	CPI  R30,0
007da3 f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
007da4 2fe1      	MOV  R30,R17
007da5 c014      	RJMP _0x20E0038
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
007da6 5f1f      	SUBI R17,-1
007da7 cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
007da8 efef      	LDI  R30,LOW(255)
007da9 c010      	RJMP _0x20E0038
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
007daa 931a      	ST   -Y,R17
                 ;	i -> R17
007dab e010      	LDI  R17,LOW(0)
                 _0x2A0023:
007dac 3114      	CPI  R17,20
007dad f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
007dae 940e c1ae 	CALL SUBOPT_0x26F
007db0 940e c1b4 	CALL SUBOPT_0x270
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
007db2 940e c1ba 	CALL SUBOPT_0x271
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
007db4 5eeb     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
007db5 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
007db6 e0a0      	LDI  R26,LOW(0)
007db7 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
007db8 5f1f      	SUBI R17,-1
007db9 cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0038:
007dba 9119      	LD   R17,Y+
007dbb 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
007dbc 93aa      	ST   -Y,R26
007dbd 97ef      	SBIW R28,63
007dbe 9761      	SBIW R28,17
007dbf e48e      	LDI  R24,78
007dc0 e0a0      	LDI  R26,LOW(0)
007dc1 e0b0      	LDI  R27,HIGH(0)
007dc2 eee6      	LDI  R30,LOW(_0x2C0003*2)
007dc3 e5f9      	LDI  R31,HIGH(_0x2C0003*2)
007dc4 e060      	LDI  R22,BYTE3(_0x2C0003*2)
007dc5 940e cf46 	CALL __INITLOCB
007dc7 940e cf38 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
007dc9 91e0 14df 	LDS  R30,_currentPage
007dcb 30e0      	CPI  R30,0
007dcc f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
007dcd 01de     +MOVW R26 , R28
007dce 5aaa     +SUBI R26 , LOW ( - 86 )
007dcf 4fbf     +SBCI R27 , HIGH ( - 86 )
007dd0 91ac     +LD R26 , X
                 	__GETB2SX 86
007dd1 30a1      	CPI  R26,LOW(0x1)
007dd2 f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
007dd3 940e c1c5 	CALL SUBOPT_0x272
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
007dd5 940c 8b56 	JMP  _0x2C0006
                 _0x2C0004:
007dd7 91a0 14df 	LDS  R26,_currentPage
007dd9 30a1      	CPI  R26,LOW(0x1)
007dda f011      	BREQ PC+3
007ddb 940c 7e37 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
007ddd 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
007ddf f409      	BRNE _0x2C000B
007de0 c04b      	RJMP _0x2C0264
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
007de1 30e2      	CPI  R30,LOW(0x2)
007de2 e0a0      	LDI  R26,HIGH(0x2)
007de3 07fa      	CPC  R31,R26
007de4 f449      	BRNE _0x2C000C
007de5 940e c1dd 	CALL SUBOPT_0x274
007de7 f41c      	BRGE _0x2C000D
007de8 e0e3      	LDI  R30,LOW(3)
007de9 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
007deb 940e c1e4 	CALL SUBOPT_0x275
007ded c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
007dee 30e3      	CPI  R30,LOW(0x3)
007def e0a0      	LDI  R26,HIGH(0x3)
007df0 07fa      	CPC  R31,R26
007df1 f451      	BRNE _0x2C000E
007df2 940e c1f1 	CALL SUBOPT_0x276
007df4 30a4      	CPI  R26,LOW(0x4)
007df5 f01c      	BRLT _0x2C000F
007df6 e0e0      	LDI  R30,LOW(0)
007df7 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
007df9 940e c1e4 	CALL SUBOPT_0x275
007dfb c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
007dfc 30e4      	CPI  R30,LOW(0x4)
007dfd e0a0      	LDI  R26,HIGH(0x4)
007dfe 07fa      	CPC  R31,R26
007dff f5a9      	BRNE _0x2C000A
007e00 91e0 1a0b 	LDS  R30,_cursor_S0160000000
007e02 30e0      	CPI  R30,0
007e03 f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
007e04 940e c1f7 	CALL SUBOPT_0x277
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
007e06 c02e      	RJMP _0x2C0012
                 _0x2C0011:
007e07 91a0 1a0b 	LDS  R26,_cursor_S0160000000
007e09 30a1      	CPI  R26,LOW(0x1)
007e0a f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
007e0b e0ee      	LDI  R30,LOW(14)
007e0c 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
007e0e 940e c210 	CALL SUBOPT_0x279
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
007e10 c024      	RJMP _0x2C0014
                 _0x2C0013:
007e11 91a0 1a0b 	LDS  R26,_cursor_S0160000000
007e13 30a2      	CPI  R26,LOW(0x2)
007e14 f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
007e15 e1e1      	LDI  R30,LOW(17)
007e16 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
007e18 940e c21d 	CALL SUBOPT_0x27A
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
007e1a c01a      	RJMP _0x2C0016
                 _0x2C0015:
007e1b 91a0 1a0b 	LDS  R26,_cursor_S0160000000
007e1d 30a3      	CPI  R26,LOW(0x3)
007e1e f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
007e1f e2e2      	LDI  R30,LOW(34)
007e20 940e c22a 	CALL SUBOPT_0x27B
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
007e22 e0e1      	LDI  R30,LOW(1)
007e23 940e c230 	CALL SUBOPT_0x27C
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
007e25 940e c23a 	CALL SUBOPT_0x27D
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
007e27 e6e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
007e28 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
007e29 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
007e2a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
007e2b c005      	RJMP _0x2C0265
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C0264:
007e2c e0e0      	LDI  R30,LOW(0)
007e2d 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
007e2f 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0265:
007e31 940e cec8 	CALL __PUTPARD1
007e33 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
007e35 940c 8b56 	JMP  _0x2C0019
                 _0x2C0007:
007e37 91a0 14df 	LDS  R26,_currentPage
007e39 30a2      	CPI  R26,LOW(0x2)
007e3a f011      	BREQ PC+3
007e3b 940c 7e86 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
007e3d 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
007e3f f419      	BRNE _0x2C001E
007e40 940e c1c5 	CALL SUBOPT_0x272
007e42 c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
007e43 30e2      	CPI  R30,LOW(0x2)
007e44 e0a0      	LDI  R26,HIGH(0x2)
007e45 07fa      	CPC  R31,R26
007e46 f449      	BRNE _0x2C001F
007e47 940e c1dd 	CALL SUBOPT_0x274
007e49 f41c      	BRGE _0x2C0020
007e4a e0e1      	LDI  R30,LOW(1)
007e4b 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
007e4d 940e c1e4 	CALL SUBOPT_0x275
007e4f c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
007e50 30e3      	CPI  R30,LOW(0x3)
007e51 e0a0      	LDI  R26,HIGH(0x3)
007e52 07fa      	CPC  R31,R26
007e53 f451      	BRNE _0x2C0021
007e54 940e c1f1 	CALL SUBOPT_0x276
007e56 30a2      	CPI  R26,LOW(0x2)
007e57 f01c      	BRLT _0x2C0022
007e58 e0e0      	LDI  R30,LOW(0)
007e59 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
007e5b 940e c1e4 	CALL SUBOPT_0x275
007e5d c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
007e5e 30e4      	CPI  R30,LOW(0x4)
007e5f e0a0      	LDI  R26,HIGH(0x4)
007e60 07fa      	CPC  R31,R26
007e61 f511      	BRNE _0x2C001D
007e62 91e0 1a0b 	LDS  R30,_cursor_S0160000000
007e64 30e0      	CPI  R30,0
007e65 f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
007e66 e0e3      	LDI  R30,LOW(3)
007e67 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
007e69 940e c245 	CALL SUBOPT_0x27F
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
007e6b c018      	RJMP _0x2C0025
                 _0x2C0024:
007e6c 91a0 1a0b 	LDS  R26,_cursor_S0160000000
007e6e 30a1      	CPI  R26,LOW(0x1)
007e6f f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
007e70 e2e1      	LDI  R30,LOW(33)
007e71 940e c252 	CALL SUBOPT_0x280
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
007e73 e0e2      	LDI  R30,LOW(2)
007e74 940e c230 	CALL SUBOPT_0x27C
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
007e76 940e c23a 	CALL SUBOPT_0x27D
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
007e78 940e c258 	CALL SUBOPT_0x281
007e7a c005      	RJMP _0x2C0266
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
007e7b e0e0      	LDI  R30,LOW(0)
007e7c 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
007e7e 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0266:
007e80 940e cec8 	CALL __PUTPARD1
007e82 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
007e84 940c 8b56 	JMP  _0x2C0028
                 _0x2C001A:
007e86 91a0 14df 	LDS  R26,_currentPage
007e88 30a3      	CPI  R26,LOW(0x3)
007e89 f011      	BREQ PC+3
007e8a 940c 806f 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
007e8c 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
007e8e f419      	BRNE _0x2C002D
007e8f 940e c1f7 	CALL SUBOPT_0x277
007e91 c1db      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
007e92 30e2      	CPI  R30,LOW(0x2)
007e93 e0a0      	LDI  R26,HIGH(0x2)
007e94 07fa      	CPC  R31,R26
007e95 f449      	BRNE _0x2C002E
007e96 940e c1dd 	CALL SUBOPT_0x274
007e98 f41c      	BRGE _0x2C002F
007e99 e0e2      	LDI  R30,LOW(2)
007e9a 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
007e9c 940e c1e4 	CALL SUBOPT_0x275
007e9e c1ce      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
007e9f 30e3      	CPI  R30,LOW(0x3)
007ea0 e0a0      	LDI  R26,HIGH(0x3)
007ea1 07fa      	CPC  R31,R26
007ea2 f451      	BRNE _0x2C0030
007ea3 940e c1f1 	CALL SUBOPT_0x276
007ea5 30a3      	CPI  R26,LOW(0x3)
007ea6 f01c      	BRLT _0x2C0031
007ea7 e0e0      	LDI  R30,LOW(0)
007ea8 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
007eaa 940e c1e4 	CALL SUBOPT_0x275
007eac c1c0      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
007ead 30e4      	CPI  R30,LOW(0x4)
007eae e0a0      	LDI  R26,HIGH(0x4)
007eaf 07fa      	CPC  R31,R26
007eb0 f011      	BREQ PC+3
007eb1 940c 806d 	JMP _0x2C002C
007eb3 91e0 1a0b 	LDS  R30,_cursor_S0160000000
007eb5 30e0      	CPI  R30,0
007eb6 f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
007eb7 e0e4      	LDI  R30,LOW(4)
007eb8 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
007eba e7e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
007ebb e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
007ebc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
007ebd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
007ebe 940e c25d 	CALL SUBOPT_0x282
                +
007ec0 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
007ec1 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
007ec2 940e b388 	CALL SUBOPT_0x34
                +
007ec4 e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
007ec5 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
007ec6 940e b388 	CALL SUBOPT_0x34
007ec8 940e b4db 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
007eca e8e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
007ecb e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
007ecc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
007ecd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
007ece 940e c25d 	CALL SUBOPT_0x282
                +
007ed0 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
007ed1 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
007ed2 940e b388 	CALL SUBOPT_0x34
                +
007ed4 e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
007ed5 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
007ed6 940e b388 	CALL SUBOPT_0x34
007ed8 e08c      	LDI  R24,12
007ed9 940e 75ba 	CALL _printOLED
007edb 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
007edc c190      	RJMP _0x2C0034
                 _0x2C0033:
007edd 91a0 1a0b 	LDS  R26,_cursor_S0160000000
007edf 30a1      	CPI  R26,LOW(0x1)
007ee0 f011      	BREQ PC+3
007ee1 940c 7f91 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
007ee3 e0e5      	LDI  R30,LOW(5)
007ee4 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
007ee6 01fe      	MOVW R30,R28
007ee7 9638      	ADIW R30,8
007ee8 940e b84f 	CALL SUBOPT_0xF1
007eea 940e bec2 	CALL SUBOPT_0x202
007eec 940e c263 	CALL SUBOPT_0x283
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
007eee 940e c274 	CALL SUBOPT_0x284
007ef0 940e b68b 	CALL SUBOPT_0xA4
007ef2 940e 977e 	CALL _memset
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
007ef4 91a0 11b6 	LDS  R26,_operating_config
007ef6 31a0      	CPI  R26,LOW(0x10)
007ef7 f439      	BRNE _0x2C0036
007ef8 940e c278 	CALL SUBOPT_0x285
                +
007efa e9e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
007efb e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
007efc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
007efd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
007efe c011      	RJMP _0x2C0267
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
007eff 91a0 11b6 	LDS  R26,_operating_config
007f01 32a0      	CPI  R26,LOW(0x20)
007f02 f439      	BRNE _0x2C0038
007f03 940e c278 	CALL SUBOPT_0x285
                +
007f05 e9ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
007f06 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
007f07 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
007f08 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
007f09 c006      	RJMP _0x2C0267
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
007f0a 940e c278 	CALL SUBOPT_0x285
                +
007f0c eae9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
007f0d e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
007f0e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
007f0f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C0267:
007f10 940e cec8 	CALL __PUTPARD1
007f12 940e c27d 	CALL SUBOPT_0x286
                 ; 0016 00A0                                 strcat(cmd,str);
007f14 940e c282 	CALL SUBOPT_0x287
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
007f16 940e b68b 	CALL SUBOPT_0xA4
007f18 940e 977e 	CALL _memset
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
007f1a 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
007f1c 30a1      	CPI  R26,LOW(0x1)
007f1d f439      	BRNE _0x2C003A
007f1e 940e c278 	CALL SUBOPT_0x285
                +
007f20 ebe2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
007f21 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
007f22 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
007f23 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
007f24 c006      	RJMP _0x2C0268
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
007f25 940e c278 	CALL SUBOPT_0x285
                +
007f27 ebea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
007f28 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
007f29 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
007f2a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C0268:
007f2b 940e cec8 	CALL __PUTPARD1
007f2d 940e c27d 	CALL SUBOPT_0x286
                 ; 0016 00A5                                 strcat(cmd,str);
007f2f 940e c282 	CALL SUBOPT_0x287
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
007f31 940e b68b 	CALL SUBOPT_0xA4
007f33 940e 977e 	CALL _memset
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
007f35 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
007f37 30a1      	CPI  R26,LOW(0x1)
007f38 f439      	BRNE _0x2C003C
007f39 940e c278 	CALL SUBOPT_0x285
                +
007f3b ebe2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
007f3c e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
007f3d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
007f3e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
007f3f c006      	RJMP _0x2C0269
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
007f40 940e c278 	CALL SUBOPT_0x285
                +
007f42 ebea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
007f43 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
007f44 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
007f45 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C0269:
007f46 940e cec8 	CALL __PUTPARD1
007f48 940e c27d 	CALL SUBOPT_0x286
                 ; 0016 00AA                                 strcat(cmd,str);
007f4a 940e c282 	CALL SUBOPT_0x287
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
007f4c 940e b68b 	CALL SUBOPT_0xA4
007f4e 940e 977e 	CALL _memset
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
007f50 e000     +LDI R16 , LOW ( 0 )
007f51 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007f52 e020     +LDI R18 , LOW ( 0 )
007f53 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
007f54 3005     +CPI R16 , LOW ( 5 )
007f55 e0e0     +LDI R30 , HIGH ( 5 )
007f56 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007f57 f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
007f58 940e c28b 	CALL SUBOPT_0x288
007f5a 81a0      	LD   R26,Z
007f5b 30a1      	CPI  R26,LOW(0x1)
007f5c f421      	BRNE _0x2C0041
007f5d 940e c290 	CALL SUBOPT_0x289
007f5f e4e5      	LDI  R30,LOW(69)
007f60 c003      	RJMP _0x2C026A
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
007f61 940e c290 	CALL SUBOPT_0x289
007f63 e4e4      	LDI  R30,LOW(68)
                 _0x2C026A:
007f64 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
007f65 3004     +CPI R16 , LOW ( 4 )
007f66 e0e0     +LDI R30 , HIGH ( 4 )
007f67 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
007f68 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
007f69 940e c290 	CALL SUBOPT_0x289
007f6b e2ef      	LDI  R30,LOW(47)
007f6c 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
007f6d 5f0f     +SUBI R16 , LOW ( - 1 )
007f6e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007f6f cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
007f70 940e c290 	CALL SUBOPT_0x289
007f72 e2ec      	LDI  R30,LOW(44)
007f73 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
007f74 940e c290 	CALL SUBOPT_0x289
007f76 e0e0      	LDI  R30,LOW(0)
007f77 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
007f78 01fe      	MOVW R30,R28
007f79 9638      	ADIW R30,8
007f7a 93fa      	ST   -Y,R31
007f7b 93ea      	ST   -Y,R30
007f7c 01de      	MOVW R26,R28
007f7d 96dc      	ADIW R26,60
007f7e 940e 978e 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
007f80 ece3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
007f81 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
007f82 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
007f83 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
007f84 940e c298 	CALL SUBOPT_0x28A
007f86 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
007f88 ede5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
007f89 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
007f8a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
007f8b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
007f8c 940e c298 	CALL SUBOPT_0x28A
007f8e 940e c013 	CALL SUBOPT_0x239
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
007f90 c0dc      	RJMP _0x2C0044
                 _0x2C0035:
007f91 91a0 1a0b 	LDS  R26,_cursor_S0160000000
007f93 30a2      	CPI  R26,LOW(0x2)
007f94 f011      	BREQ PC+3
007f95 940c 8066 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
007f97 01fe      	MOVW R30,R28
007f98 9638      	ADIW R30,8
007f99 940e b84f 	CALL SUBOPT_0xF1
007f9b 940e bec2 	CALL SUBOPT_0x202
007f9d 940e c263 	CALL SUBOPT_0x283
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
007f9f e4a5      	LDI  R26,LOW(325)
007fa0 e0b1      	LDI  R27,HIGH(325)
007fa1 940e 96fc 	CALL _malloc
                +
007fa3 01de     +MOVW R26 , R28
007fa4 5aac     +SUBI R26 , LOW ( - 84 )
007fa5 4fbf     +SBCI R27 , HIGH ( - 84 )
007fa6 93ed     +ST X + , R30
007fa7 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
007fa8 940e c29e 	CALL SUBOPT_0x28B
007faa 9730      	SBIW R30,0
007fab f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
007fac edea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
007fad e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
007fae e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
007faf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
007fb0 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
007fb2 940e c1f7 	CALL SUBOPT_0x277
007fb4 c0b8      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
007fb5 940e c29e 	CALL SUBOPT_0x28B
007fb7 93fa      	ST   -Y,R31
007fb8 93ea      	ST   -Y,R30
007fb9 01de      	MOVW R26,R28
007fba 5aac      	SUBI R26,LOW(-(84))
007fbb 4fbf      	SBCI R27,HIGH(-(84))
007fbc 940e 5c07 	CALL _ETH_getConfig
007fbe 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
007fbf 2355      	TST  R21
007fc0 f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
007fc1 e0ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
007fc2 e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
007fc3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
007fc4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
007fc5 c02c      	RJMP _0x2C026B
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
007fc6 e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
007fc7 e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
007fc8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
007fc9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
007fca 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
007fcc e6e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
007fcd e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
007fce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
007fcf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
007fd0 940e cec8 	CALL __PUTPARD1
                +
007fd2 01fe     +MOVW R30 , R28
007fd3 5aea     +SUBI R30 , LOW ( - 86 )
007fd4 4fff     +SBCI R31 , HIGH ( - 86 )
007fd5 9001     +LD R0 , Z +
007fd6 81f0     +LD R31 , Z
007fd7 2de0     +MOV R30 , R0
                 	__GETW1SX 86
007fd8 940e b388 	CALL SUBOPT_0x34
007fda 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
007fdc e000     +LDI R16 , LOW ( 0 )
007fdd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
007fde 940e c2a5 	CALL SUBOPT_0x28C
007fe0 170e      	CP   R16,R30
007fe1 071f      	CPC  R17,R31
007fe2 f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
007fe3 01f8      	MOVW R30,R16
007fe4 940e c2ac 	CALL SUBOPT_0x28D
007fe6 0fae      	ADD  R26,R30
007fe7 1fbf      	ADC  R27,R31
007fe8 91ac      	LD   R26,X
007fe9 940e 3e61 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
007feb 5f0f     +SUBI R16 , LOW ( - 1 )
007fec 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007fed cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
007fee e0eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
007fef e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
007ff0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
007ff1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C026B:
007ff2 940e cec8 	CALL __PUTPARD1
007ff4 940e b391 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
007ff6 940e c29e 	CALL SUBOPT_0x28B
007ff8 93fa      	ST   -Y,R31
007ff9 93ea      	ST   -Y,R30
007ffa 940e c2b3 	CALL SUBOPT_0x28E
007ffc 940e 8d82 	CALL _getNetworkInfo
007ffe 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
007fff 2355      	TST  R21
008000 f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
008001 e8ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
008002 e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
008003 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
008004 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
008005 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
008007 940e cf3f 	CALL __LOADLOCR6
008009 96ef      	ADIW R28,63
00800a 9668      	ADIW R28,24
00800b 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
00800c e0e6      	LDI  R30,LOW(6)
00800d 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
00800f ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
008010 e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
008011 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
008012 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
008013 940e c2c2 	CALL SUBOPT_0x28F
008015 940e c2d5 	CALL SUBOPT_0x290
008017 940e c2e6 	CALL SUBOPT_0x291
008019 940e c2f7 	CALL SUBOPT_0x292
00801b 940e c308 	CALL SUBOPT_0x293
00801d 940e c319 	CALL SUBOPT_0x294
00801f 940e c32a 	CALL SUBOPT_0x295
008021 940e c33b 	CALL SUBOPT_0x296
008023 940e c34c 	CALL SUBOPT_0x297
008025 940e c35d 	CALL SUBOPT_0x298
008027 940e c36e 	CALL SUBOPT_0x299
008029 940e c37f 	CALL SUBOPT_0x29A
00802b 940e c390 	CALL SUBOPT_0x29B
00802d 940e c3a1 	CALL SUBOPT_0x29C
00802f 940e c3b2 	CALL SUBOPT_0x29D
008031 940e c3c3 	CALL SUBOPT_0x29E
008033 e480      	LDI  R24,64
008034 940e 9245 	CALL _printDebug
008036 96ef      	ADIW R28,63
008037 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008038 efed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
008039 e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
00803a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
00803b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
00803c 940e c2c2 	CALL SUBOPT_0x28F
00803e 940e c2d5 	CALL SUBOPT_0x290
008040 940e c2e6 	CALL SUBOPT_0x291
008042 940e c2f7 	CALL SUBOPT_0x292
008044 940e c308 	CALL SUBOPT_0x293
008046 940e c319 	CALL SUBOPT_0x294
008048 940e c32a 	CALL SUBOPT_0x295
00804a 940e c33b 	CALL SUBOPT_0x296
00804c 940e c34c 	CALL SUBOPT_0x297
00804e 940e c35d 	CALL SUBOPT_0x298
008050 940e c36e 	CALL SUBOPT_0x299
008052 940e c37f 	CALL SUBOPT_0x29A
008054 940e c390 	CALL SUBOPT_0x29B
008056 940e c3a1 	CALL SUBOPT_0x29C
008058 940e c3b2 	CALL SUBOPT_0x29D
00805a 940e c3c3 	CALL SUBOPT_0x29E
00805c e480      	LDI  R24,64
00805d 940e 75ba 	CALL _printOLED
00805f 96ef      	ADIW R28,63
008060 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008061 940e c2ac 	CALL SUBOPT_0x28D
008063 940e 9717 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
008065 c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
008066 e0e0      	LDI  R30,LOW(0)
008067 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
008069 940e c240 	CALL SUBOPT_0x27E
00806b 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
00806d 940c 8b56 	JMP  _0x2C004E
                 _0x2C0029:
00806f 91a0 14df 	LDS  R26,_currentPage
008071 30a4      	CPI  R26,LOW(0x4)
008072 f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008073 940e c3d7 	CALL SUBOPT_0x2A0
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
008075 f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
008076 30e3      	CPI  R30,LOW(0x3)
008077 e0a0      	LDI  R26,HIGH(0x3)
008078 07fa      	CPC  R31,R26
008079 f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
00807a 30e1      	CPI  R30,LOW(0x1)
00807b e0a0      	LDI  R26,HIGH(0x1)
00807c 07fa      	CPC  R31,R26
00807d f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
00807e 30e4      	CPI  R30,LOW(0x4)
00807f e0a0      	LDI  R26,HIGH(0x4)
008080 07fa      	CPC  R31,R26
008081 f429      	BRNE _0x2C0052
                 _0x2C0056:
008082 e0e3      	LDI  R30,LOW(3)
008083 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
008085 940e c245 	CALL SUBOPT_0x27F
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
008087 940c 8b56 	JMP  _0x2C0058
                 _0x2C004F:
008089 91a0 14df 	LDS  R26,_currentPage
00808b 30a5      	CPI  R26,LOW(0x5)
00808c f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
00808d 940e c3d7 	CALL SUBOPT_0x2A0
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
00808f f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
008090 30e3      	CPI  R30,LOW(0x3)
008091 e0a0      	LDI  R26,HIGH(0x3)
008092 07fa      	CPC  R31,R26
008093 f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
008094 30e1      	CPI  R30,LOW(0x1)
008095 e0a0      	LDI  R26,HIGH(0x1)
008096 07fa      	CPC  R31,R26
008097 f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008098 30e4      	CPI  R30,LOW(0x4)
008099 e0a0      	LDI  R26,HIGH(0x4)
00809a 07fa      	CPC  R31,R26
00809b f429      	BRNE _0x2C005C
                 _0x2C0060:
00809c e0e3      	LDI  R30,LOW(3)
00809d 940e c3e0 	CALL SUBOPT_0x2A1
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
00809f 940e c245 	CALL SUBOPT_0x27F
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
0080a1 940c 8b56 	JMP  _0x2C0062
                 _0x2C0059:
0080a3 91a0 14df 	LDS  R26,_currentPage
0080a5 30a6      	CPI  R26,LOW(0x6)
0080a6 f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
0080a7 940e c3d7 	CALL SUBOPT_0x2A0
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
0080a9 f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
0080aa 30e3      	CPI  R30,LOW(0x3)
0080ab e0a0      	LDI  R26,HIGH(0x3)
0080ac 07fa      	CPC  R31,R26
0080ad f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
0080ae 30e1      	CPI  R30,LOW(0x1)
0080af e0a0      	LDI  R26,HIGH(0x1)
0080b0 07fa      	CPC  R31,R26
0080b1 f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
0080b2 30e4      	CPI  R30,LOW(0x4)
0080b3 e0a0      	LDI  R26,HIGH(0x4)
0080b4 07fa      	CPC  R31,R26
0080b5 f429      	BRNE _0x2C0066
                 _0x2C006A:
0080b6 e0e3      	LDI  R30,LOW(3)
0080b7 940e c3e6 	CALL SUBOPT_0x2A2
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
0080b9 940e c245 	CALL SUBOPT_0x27F
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
0080bb 940c 8b56 	JMP  _0x2C006C
                 _0x2C0063:
0080bd 91a0 14df 	LDS  R26,_currentPage
0080bf 30a7      	CPI  R26,LOW(0x7)
0080c0 f011      	BREQ PC+3
0080c1 940c 8145 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
0080c3 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
0080c5 f441      	BRNE _0x2C0071
0080c6 e0e2      	LDI  R30,LOW(2)
0080c7 940e c3e0 	CALL SUBOPT_0x2A1
0080c9 940e c3ec 	CALL SUBOPT_0x2A3
0080cb 940e c3f1 	CALL SUBOPT_0x2A4
0080cd c075      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
0080ce 30e2      	CPI  R30,LOW(0x2)
0080cf e0a0      	LDI  R26,HIGH(0x2)
0080d0 07fa      	CPC  R31,R26
0080d1 f449      	BRNE _0x2C0072
0080d2 940e c1dd 	CALL SUBOPT_0x274
0080d4 f41c      	BRGE _0x2C0073
0080d5 e0e1      	LDI  R30,LOW(1)
0080d6 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
0080d8 940e c1e4 	CALL SUBOPT_0x275
0080da c068      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
0080db 30e3      	CPI  R30,LOW(0x3)
0080dc e0a0      	LDI  R26,HIGH(0x3)
0080dd 07fa      	CPC  R31,R26
0080de f451      	BRNE _0x2C0074
0080df 940e c1f1 	CALL SUBOPT_0x276
0080e1 30a2      	CPI  R26,LOW(0x2)
0080e2 f01c      	BRLT _0x2C0075
0080e3 e0e0      	LDI  R30,LOW(0)
0080e4 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
0080e6 940e c1e4 	CALL SUBOPT_0x275
0080e8 c05a      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
0080e9 30e4      	CPI  R30,LOW(0x4)
0080ea e0a0      	LDI  R26,HIGH(0x4)
0080eb 07fa      	CPC  R31,R26
0080ec f011      	BREQ PC+3
0080ed 940c 8143 	JMP _0x2C0070
0080ef 91e0 1a0b 	LDS  R30,_cursor_S0160000000
0080f1 30e0      	CPI  R30,0
0080f2 f551      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
0080f3 e0e8      	LDI  R30,LOW(8)
0080f4 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
0080f6 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0080f8 93e0 1a4a 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
0080fa 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0080fc 93e0 1a4b 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
0080fe e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
0080ff e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
008100 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
008101 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
008102 940e c3fa 	CALL SUBOPT_0x2A5
008104 940e c400 	CALL SUBOPT_0x2A6
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
008106 940e c407 	CALL SUBOPT_0x2A7
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
008108 e5ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
008109 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
00810a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
00810b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
00810c 940e c3fa 	CALL SUBOPT_0x2A5
00810e 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
008110 e6e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
008111 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
008112 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
008113 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
008114 940e cec8 	CALL __PUTPARD1
008116 91e0 1a4b 	LDS  R30,_almEn_S0160000000
008118 940e b4d5 	CALL SUBOPT_0x65
00811a 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
00811c c026      	RJMP _0x2C0078
                 _0x2C0077:
00811d 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00811f 30a1      	CPI  R26,LOW(0x1)
008120 f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
008121 e0e9      	LDI  R30,LOW(9)
008122 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
008124 e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008125 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008126 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008127 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008128 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
00812a e000     +LDI R16 , LOW ( 0 )
00812b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
00812c 300c     +CPI R16 , LOW ( 12 )
00812d e0e0     +LDI R30 , HIGH ( 12 )
00812e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
00812f f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
008130 940e c40c 	CALL SUBOPT_0x2A8
008132 e1aa      	LDI  R26,LOW(_setIp_S0160000000)
008133 e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
008134 940e c414 	CALL SUBOPT_0x2A9
008136 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0148                                 }
                +
008138 5f0f     +SUBI R16 , LOW ( - 1 )
008139 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00813a cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
00813b c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
00813c e0e0      	LDI  R30,LOW(0)
00813d 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
00813f 940e c240 	CALL SUBOPT_0x27E
008141 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
008143 940c 8b56 	JMP  _0x2C007E
                 _0x2C006D:
008145 91a0 14df 	LDS  R26,_currentPage
008147 30a8      	CPI  R26,LOW(0x8)
008148 f011      	BREQ PC+3
008149 940c 81de 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
00814b 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
00814d f431      	BRNE _0x2C0083
00814e e0e7      	LDI  R30,LOW(7)
00814f 940e c20a 	CALL SUBOPT_0x278
008151 940e c419 	CALL SUBOPT_0x2AA
008153 c088      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
008154 30e2      	CPI  R30,LOW(0x2)
008155 e0a0      	LDI  R26,HIGH(0x2)
008156 07fa      	CPC  R31,R26
008157 f449      	BRNE _0x2C0084
008158 940e c1dd 	CALL SUBOPT_0x274
00815a f41c      	BRGE _0x2C0085
00815b e0e2      	LDI  R30,LOW(2)
00815c 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
00815e 940e c407 	CALL SUBOPT_0x2A7
008160 c07b      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008161 30e3      	CPI  R30,LOW(0x3)
008162 e0a0      	LDI  R26,HIGH(0x3)
008163 07fa      	CPC  R31,R26
008164 f451      	BRNE _0x2C0086
008165 940e c1f1 	CALL SUBOPT_0x276
008167 30a3      	CPI  R26,LOW(0x3)
008168 f01c      	BRLT _0x2C0087
008169 e0e0      	LDI  R30,LOW(0)
00816a 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
00816c 940e c407 	CALL SUBOPT_0x2A7
00816e c06d      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
00816f 30e4      	CPI  R30,LOW(0x4)
008170 e0a0      	LDI  R26,HIGH(0x4)
008171 07fa      	CPC  R31,R26
008172 f011      	BREQ PC+3
008173 940c 81dc 	JMP _0x2C0082
008175 91e0 1a0b 	LDS  R30,_cursor_S0160000000
008177 30e0      	CPI  R30,0
008178 f4e1      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
008179 91e0 1a4a 	LDS  R30,_devEn_S0160000000
00817b 940e cdcc 	CALL __LNEGB1
00817d 93e0 1a4a 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
00817f e7ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008180 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008181 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
008182 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
008183 940e c41e 	CALL SUBOPT_0x2AB
008185 91e0 1a4a 	LDS  R30,_devEn_S0160000000
008187 27ff      	CLR  R31
008188 2766      	CLR  R22
008189 2777      	CLR  R23
00818a 940e b300 	CALL SUBOPT_0x21
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
00818c 940e c427 	CALL SUBOPT_0x2AC
00818e 91e0 1a4a 	LDS  R30,_devEn_S0160000000
008190 940e b4d5 	CALL SUBOPT_0x65
008192 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008194 c047      	RJMP _0x2C008A
                 _0x2C0089:
008195 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008197 30a1      	CPI  R26,LOW(0x1)
008198 f4b9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
008199 91e0 1a4b 	LDS  R30,_almEn_S0160000000
00819b 940e cdcc 	CALL __LNEGB1
00819d 93e0 1a4b 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
00819f eae0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
0081a0 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
0081a1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
0081a2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
0081a3 940e c41e 	CALL SUBOPT_0x2AB
0081a5 940e c400 	CALL SUBOPT_0x2A6
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
0081a7 940e c427 	CALL SUBOPT_0x2AC
0081a9 91e0 1a4b 	LDS  R30,_almEn_S0160000000
0081ab 940e b4d5 	CALL SUBOPT_0x65
0081ad 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
0081af c02c      	RJMP _0x2C008C
                 _0x2C008B:
0081b0 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0081b2 30a2      	CPI  R26,LOW(0x2)
0081b3 f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
0081b4 91e0 1a4a 	LDS  R30,_devEn_S0160000000
                +
0081b6 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
0081b8 91e0 1a4b 	LDS  R30,_almEn_S0160000000
                +
0081ba 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
0081bc 940e c42c 	CALL SUBOPT_0x2AD
                 ; 0016 0167                                 if(res < 0){
0081be f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
0081bf 940e c433 	CALL SUBOPT_0x2AE
                 ; 0016 0169                                     currentPage = P_FAILED;
0081c1 e2e5      	LDI  R30,LOW(37)
0081c2 940e c252 	CALL SUBOPT_0x280
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
0081c4 940e c439 	CALL SUBOPT_0x2AF
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
0081c6 940e c440 	CALL SUBOPT_0x2B0
0081c8 c007      	RJMP _0x2C026C
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
0081c9 e2e4      	LDI  R30,LOW(36)
0081ca 940e c252 	CALL SUBOPT_0x280
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
0081cc 940e c439 	CALL SUBOPT_0x2AF
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
0081ce 940e c445 	CALL SUBOPT_0x2B1
                 _0x2C026C:
0081d0 940e cec8 	CALL __PUTPARD1
0081d2 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
0081d4 c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
0081d5 e0e0      	LDI  R30,LOW(0)
0081d6 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
0081d8 940e c240 	CALL SUBOPT_0x27E
0081da 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
0081dc 940c 8b56 	JMP  _0x2C0091
                 _0x2C007F:
0081de 91a0 14df 	LDS  R26,_currentPage
0081e0 30a9      	CPI  R26,LOW(0x9)
0081e1 f011      	BREQ PC+3
0081e2 940c 8257 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
0081e4 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
0081e6 f431      	BRNE _0x2C0096
0081e7 e0e7      	LDI  R30,LOW(7)
0081e8 940e c3e0 	CALL SUBOPT_0x2A1
0081ea 940e c419 	CALL SUBOPT_0x2AA
0081ec c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
0081ed 30e2      	CPI  R30,LOW(0x2)
0081ee e0a0      	LDI  R26,HIGH(0x2)
0081ef 07fa      	CPC  R31,R26
0081f0 f451      	BRNE _0x2C0097
0081f1 940e c1f1 	CALL SUBOPT_0x276
0081f3 30ad      	CPI  R26,LOW(0xD)
0081f4 f01c      	BRLT _0x2C0098
0081f5 e0e0      	LDI  R30,LOW(0)
0081f6 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
0081f8 940e c44a 	CALL SUBOPT_0x2B2
0081fa c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
0081fb 30e3      	CPI  R30,LOW(0x3)
0081fc e0a0      	LDI  R26,HIGH(0x3)
0081fd 07fa      	CPC  R31,R26
0081fe f449      	BRNE _0x2C0099
0081ff 940e c1dd 	CALL SUBOPT_0x274
008201 f41c      	BRGE _0x2C009A
008202 e0ec      	LDI  R30,LOW(12)
008203 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
008205 940e c44a 	CALL SUBOPT_0x2B2
008207 c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
008208 30e4      	CPI  R30,LOW(0x4)
008209 e0a0      	LDI  R26,HIGH(0x4)
00820a 07fa      	CPC  R31,R26
00820b f011      	BREQ PC+3
00820c 940c 8255 	JMP _0x2C0095
00820e 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008210 30ac      	CPI  R26,LOW(0xC)
008211 f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
008212 e0e0      	LDI  R30,LOW(0)
008213 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
008215 e0ea      	LDI  R30,LOW(10)
008216 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
008218 e0e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008219 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
00821a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
00821b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
00821c 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
00821e e000     +LDI R16 , LOW ( 0 )
00821f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
008220 300c     +CPI R16 , LOW ( 12 )
008221 e0e0     +LDI R30 , HIGH ( 12 )
008222 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008223 f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
008224 940e c40c 	CALL SUBOPT_0x2A8
008226 e2a6      	LDI  R26,LOW(_setMask_S0160000000)
008227 e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
008228 940e c414 	CALL SUBOPT_0x2A9
00822a 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 018B                                 }
                +
00822c 5f0f     +SUBI R16 , LOW ( - 1 )
00822d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00822e cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
00822f c025      	RJMP _0x2C00A0
                 _0x2C009C:
008230 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008232 30ac      	CPI  R26,LOW(0xC)
008233 f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
008234 940e c44f 	CALL SUBOPT_0x2B3
008236 f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
008237 940e c45a 	CALL SUBOPT_0x2B4
008239 30e3      	CPI  R30,LOW(0x3)
00823a f010      	BRLO _0x2C00A3
00823b 940e c463 	CALL SUBOPT_0x2B5
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
00823d c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
00823e 940e c45a 	CALL SUBOPT_0x2B4
008240 30ea      	CPI  R30,LOW(0xA)
008241 f010      	BRLO _0x2C00A5
008242 940e c463 	CALL SUBOPT_0x2B5
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
008244 940e c46b 	CALL SUBOPT_0x2B6
008246 5ee6      	SUBI R30,LOW(-_setIp_S0160000000)
008247 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
008248 81e0      	LD   R30,Z
008249 940e b4d5 	CALL SUBOPT_0x65
00824b 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
00824d c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
00824e e0e0      	LDI  R30,LOW(0)
00824f 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
008251 940e c240 	CALL SUBOPT_0x27E
008253 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
008255 940c 8b56 	JMP  _0x2C00A7
                 _0x2C0092:
008257 91a0 14df 	LDS  R26,_currentPage
008259 30aa      	CPI  R26,LOW(0xA)
00825a f011      	BREQ PC+3
00825b 940c 82d4 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
00825d 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
00825f f441      	BRNE _0x2C00AC
008260 e0e9      	LDI  R30,LOW(9)
008261 940e c20a 	CALL SUBOPT_0x278
                +
008263 e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008264 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008265 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008266 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008267 c066      	RJMP _0x2C026D
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
008268 30e2      	CPI  R30,LOW(0x2)
008269 e0a0      	LDI  R26,HIGH(0x2)
00826a 07fa      	CPC  R31,R26
00826b f451      	BRNE _0x2C00AD
00826c 940e c1f1 	CALL SUBOPT_0x276
00826e 30ad      	CPI  R26,LOW(0xD)
00826f f01c      	BRLT _0x2C00AE
008270 e0e0      	LDI  R30,LOW(0)
008271 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
008273 940e c44a 	CALL SUBOPT_0x2B2
008275 c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
008276 30e3      	CPI  R30,LOW(0x3)
008277 e0a0      	LDI  R26,HIGH(0x3)
008278 07fa      	CPC  R31,R26
008279 f449      	BRNE _0x2C00AF
00827a 940e c1dd 	CALL SUBOPT_0x274
00827c f41c      	BRGE _0x2C00B0
00827d e0ec      	LDI  R30,LOW(12)
00827e 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008280 940e c44a 	CALL SUBOPT_0x2B2
008282 c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
008283 30e4      	CPI  R30,LOW(0x4)
008284 e0a0      	LDI  R26,HIGH(0x4)
008285 07fa      	CPC  R31,R26
008286 f011      	BREQ PC+3
008287 940c 82d2 	JMP _0x2C00AB
008289 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00828b 30ac      	CPI  R26,LOW(0xC)
00828c f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
00828d e0e0      	LDI  R30,LOW(0)
00828e 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008290 e0eb      	LDI  R30,LOW(11)
008291 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
008293 e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008294 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008295 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008296 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008297 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008299 e000     +LDI R16 , LOW ( 0 )
00829a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
00829b 300c     +CPI R16 , LOW ( 12 )
00829c e0e0     +LDI R30 , HIGH ( 12 )
00829d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
00829e f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
00829f 940e c40c 	CALL SUBOPT_0x2A8
0082a1 e3a2      	LDI  R26,LOW(_setGw_S0160000000)
0082a2 e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
0082a3 940e c414 	CALL SUBOPT_0x2A9
0082a5 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 01AB                                 }
                +
0082a7 5f0f     +SUBI R16 , LOW ( - 1 )
0082a8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0082a9 cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
0082aa c027      	RJMP _0x2C00B6
                 _0x2C00B2:
0082ab 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0082ad 30ac      	CPI  R26,LOW(0xC)
0082ae f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
0082af 940e c44f 	CALL SUBOPT_0x2B3
0082b1 f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
0082b2 940e c47b 	CALL SUBOPT_0x2B7
0082b4 30e3      	CPI  R30,LOW(0x3)
0082b5 f010      	BRLO _0x2C00B9
0082b6 940e c484 	CALL SUBOPT_0x2B8
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
0082b8 c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
0082b9 940e c47b 	CALL SUBOPT_0x2B7
0082bb 30ea      	CPI  R30,LOW(0xA)
0082bc f010      	BRLO _0x2C00BB
0082bd 940e c484 	CALL SUBOPT_0x2B8
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
0082bf 940e c46b 	CALL SUBOPT_0x2B6
0082c1 5dea      	SUBI R30,LOW(-_setMask_S0160000000)
0082c2 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
0082c3 81e0      	LD   R30,Z
0082c4 940e b4d5 	CALL SUBOPT_0x65
0082c6 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
0082c8 c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
0082c9 e0e0      	LDI  R30,LOW(0)
0082ca 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
0082cc 940e c240 	CALL SUBOPT_0x27E
                 _0x2C026D:
0082ce 940e cec8 	CALL __PUTPARD1
0082d0 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
0082d2 940c 8b56 	JMP  _0x2C00BD
                 _0x2C00A8:
0082d4 91a0 14df 	LDS  R26,_currentPage
0082d6 30ab      	CPI  R26,LOW(0xB)
0082d7 f011      	BREQ PC+3
0082d8 940c 8351 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
0082da 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
0082dc f441      	BRNE _0x2C00C2
0082dd e0ea      	LDI  R30,LOW(10)
0082de 940e c20a 	CALL SUBOPT_0x278
                +
0082e0 e0e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
0082e1 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
0082e2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
0082e3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
0082e4 c066      	RJMP _0x2C026E
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
0082e5 30e2      	CPI  R30,LOW(0x2)
0082e6 e0a0      	LDI  R26,HIGH(0x2)
0082e7 07fa      	CPC  R31,R26
0082e8 f451      	BRNE _0x2C00C3
0082e9 940e c1f1 	CALL SUBOPT_0x276
0082eb 30ad      	CPI  R26,LOW(0xD)
0082ec f01c      	BRLT _0x2C00C4
0082ed e0e0      	LDI  R30,LOW(0)
0082ee 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
0082f0 940e c44a 	CALL SUBOPT_0x2B2
0082f2 c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
0082f3 30e3      	CPI  R30,LOW(0x3)
0082f4 e0a0      	LDI  R26,HIGH(0x3)
0082f5 07fa      	CPC  R31,R26
0082f6 f449      	BRNE _0x2C00C5
0082f7 940e c1dd 	CALL SUBOPT_0x274
0082f9 f41c      	BRGE _0x2C00C6
0082fa e0ec      	LDI  R30,LOW(12)
0082fb 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
0082fd 940e c44a 	CALL SUBOPT_0x2B2
0082ff c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
008300 30e4      	CPI  R30,LOW(0x4)
008301 e0a0      	LDI  R26,HIGH(0x4)
008302 07fa      	CPC  R31,R26
008303 f011      	BREQ PC+3
008304 940c 834f 	JMP _0x2C00C1
008306 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008308 30ac      	CPI  R26,LOW(0xC)
008309 f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
00830a e0e0      	LDI  R30,LOW(0)
00830b 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
00830d e0ec      	LDI  R30,LOW(12)
00830e 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
008310 e0e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
008311 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
008312 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
008313 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
008314 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
008316 e000     +LDI R16 , LOW ( 0 )
008317 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
008318 300c     +CPI R16 , LOW ( 12 )
008319 e0e0     +LDI R30 , HIGH ( 12 )
00831a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
00831b f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
00831c 940e c40c 	CALL SUBOPT_0x2A8
00831e e3ae      	LDI  R26,LOW(_setServer_S0160000000)
00831f e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
008320 940e c414 	CALL SUBOPT_0x2A9
008322 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 01CB                                 }
                +
008324 5f0f     +SUBI R16 , LOW ( - 1 )
008325 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008326 cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
008327 c027      	RJMP _0x2C00CC
                 _0x2C00C8:
008328 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00832a 30ac      	CPI  R26,LOW(0xC)
00832b f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
00832c 940e c44f 	CALL SUBOPT_0x2B3
00832e f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
00832f 940e c48c 	CALL SUBOPT_0x2B9
008331 30e3      	CPI  R30,LOW(0x3)
008332 f010      	BRLO _0x2C00CF
008333 940e c495 	CALL SUBOPT_0x2BA
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
008335 c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
008336 940e c48c 	CALL SUBOPT_0x2B9
008338 30ea      	CPI  R30,LOW(0xA)
008339 f010      	BRLO _0x2C00D1
00833a 940e c495 	CALL SUBOPT_0x2BA
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
00833c 940e c46b 	CALL SUBOPT_0x2B6
00833e 5cee      	SUBI R30,LOW(-_setGw_S0160000000)
00833f 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
008340 81e0      	LD   R30,Z
008341 940e b4d5 	CALL SUBOPT_0x65
008343 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
008345 c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
008346 e0e0      	LDI  R30,LOW(0)
008347 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
008349 940e c240 	CALL SUBOPT_0x27E
                 _0x2C026E:
00834b 940e cec8 	CALL __PUTPARD1
00834d 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
00834f 940c 8b56 	JMP  _0x2C00D3
                 _0x2C00BE:
008351 91a0 14df 	LDS  R26,_currentPage
008353 30ac      	CPI  R26,LOW(0xC)
008354 f011      	BREQ PC+3
008355 940c 83dc 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
008357 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008359 f441      	BRNE _0x2C00D8
00835a e0eb      	LDI  R30,LOW(11)
00835b 940e c20a 	CALL SUBOPT_0x278
                +
00835d e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
00835e e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
00835f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008360 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008361 c075      	RJMP _0x2C026F
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008362 30e2      	CPI  R30,LOW(0x2)
008363 e0a0      	LDI  R26,HIGH(0x2)
008364 07fa      	CPC  R31,R26
008365 f451      	BRNE _0x2C00D9
008366 940e c1f1 	CALL SUBOPT_0x276
008368 30ad      	CPI  R26,LOW(0xD)
008369 f01c      	BRLT _0x2C00DA
00836a e0e0      	LDI  R30,LOW(0)
00836b 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
00836d 940e c44a 	CALL SUBOPT_0x2B2
00836f c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008370 30e3      	CPI  R30,LOW(0x3)
008371 e0a0      	LDI  R26,HIGH(0x3)
008372 07fa      	CPC  R31,R26
008373 f449      	BRNE _0x2C00DB
008374 940e c1dd 	CALL SUBOPT_0x274
008376 f41c      	BRGE _0x2C00DC
008377 e0ec      	LDI  R30,LOW(12)
008378 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
00837a 940e c44a 	CALL SUBOPT_0x2B2
00837c c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
00837d 30e4      	CPI  R30,LOW(0x4)
00837e e0a0      	LDI  R26,HIGH(0x4)
00837f 07fa      	CPC  R31,R26
008380 f011      	BREQ PC+3
008381 940c 83db 	JMP _0x2C00D7
008383 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008385 30ac      	CPI  R26,LOW(0xC)
008386 f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008387 e0ed      	LDI  R30,LOW(13)
008388 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
00838a e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
00838b e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
00838c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
00838d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
00838e 940e c2c2 	CALL SUBOPT_0x28F
008390 940e c2d5 	CALL SUBOPT_0x290
008392 940e c2e6 	CALL SUBOPT_0x291
008394 940e c2f7 	CALL SUBOPT_0x292
008396 940e c308 	CALL SUBOPT_0x293
008398 940e c319 	CALL SUBOPT_0x294
00839a 940e c32a 	CALL SUBOPT_0x295
00839c 940e c33b 	CALL SUBOPT_0x296
00839e 940e c34c 	CALL SUBOPT_0x297
0083a0 940e c35d 	CALL SUBOPT_0x298
0083a2 940e c36e 	CALL SUBOPT_0x299
0083a4 940e c37f 	CALL SUBOPT_0x29A
0083a6 940e c390 	CALL SUBOPT_0x29B
0083a8 940e c3a1 	CALL SUBOPT_0x29C
0083aa 940e c3b2 	CALL SUBOPT_0x29D
0083ac 940e c3c3 	CALL SUBOPT_0x29E
0083ae e480      	LDI  R24,64
0083af 940e 75ba 	CALL _printOLED
0083b1 96ef      	ADIW R28,63
0083b2 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
0083b3 c027      	RJMP _0x2C00DF
                 _0x2C00DE:
0083b4 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0083b6 30ac      	CPI  R26,LOW(0xC)
0083b7 f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
0083b8 940e c44f 	CALL SUBOPT_0x2B3
0083ba f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
0083bb 940e c49d 	CALL SUBOPT_0x2BB
0083bd 30e3      	CPI  R30,LOW(0x3)
0083be f010      	BRLO _0x2C00E2
0083bf 940e c4a6 	CALL SUBOPT_0x2BC
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
0083c1 c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
0083c2 940e c49d 	CALL SUBOPT_0x2BB
0083c4 30ea      	CPI  R30,LOW(0xA)
0083c5 f010      	BRLO _0x2C00E4
0083c6 940e c4a6 	CALL SUBOPT_0x2BC
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
0083c8 940e c46b 	CALL SUBOPT_0x2B6
0083ca 5ce2      	SUBI R30,LOW(-_setServer_S0160000000)
0083cb 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
0083cc 81e0      	LD   R30,Z
0083cd 940e b4d5 	CALL SUBOPT_0x65
0083cf 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
0083d1 c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
0083d2 e0e0      	LDI  R30,LOW(0)
0083d3 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
0083d5 940e c240 	CALL SUBOPT_0x27E
                 _0x2C026F:
0083d7 940e cec8 	CALL __PUTPARD1
0083d9 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
0083db c77a      	RJMP _0x2C00E6
                 _0x2C00D4:
0083dc 91a0 14df 	LDS  R26,_currentPage
0083de 30ad      	CPI  R26,LOW(0xD)
0083df f569      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
0083e0 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
0083e2 f431      	BRNE _0x2C00EB
0083e3 e0e7      	LDI  R30,LOW(7)
0083e4 940e c3e0 	CALL SUBOPT_0x2A1
0083e6 940e c419 	CALL SUBOPT_0x2AA
0083e8 c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
0083e9 30e2      	CPI  R30,LOW(0x2)
0083ea e0a0      	LDI  R26,HIGH(0x2)
0083eb 07fa      	CPC  R31,R26
0083ec f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
0083ed 30e3      	CPI  R30,LOW(0x3)
0083ee e0a0      	LDI  R26,HIGH(0x3)
0083ef 07fa      	CPC  R31,R26
0083f0 f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
0083f1 30e4      	CPI  R30,LOW(0x4)
0083f2 e0a0      	LDI  R26,HIGH(0x4)
0083f3 07fa      	CPC  R31,R26
0083f4 f4b9      	BRNE _0x2C00EA
0083f5 e2e4      	LDI  R30,LOW(36)
0083f6 940e c252 	CALL SUBOPT_0x280
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
0083f8 e0ed      	LDI  R30,LOW(13)
0083f9 940e c4ae 	CALL SUBOPT_0x2BD
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
0083fb 940e c2b3 	CALL SUBOPT_0x28E
0083fd 940e 5c75 	CALL _ETH_setConfig
0083ff 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008400 2355      	TST  R21
008401 f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008402 e3ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008403 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008404 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008405 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008406 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008408 940e c445 	CALL SUBOPT_0x2B1
00840a 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
00840c c749      	RJMP _0x2C00F0
                 _0x2C00E7:
00840d 91a0 14df 	LDS  R26,_currentPage
00840f 30ae      	CPI  R26,LOW(0xE)
008410 f011      	BREQ PC+3
008411 940c 8461 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008413 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008415 f431      	BRNE _0x2C00F5
008416 e0e1      	LDI  R30,LOW(1)
008417 940e c3e0 	CALL SUBOPT_0x2A1
008419 940e c4b4 	CALL SUBOPT_0x2BE
00841b c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
00841c 30e2      	CPI  R30,LOW(0x2)
00841d e0a0      	LDI  R26,HIGH(0x2)
00841e 07fa      	CPC  R31,R26
00841f f449      	BRNE _0x2C00F6
008420 940e c1dd 	CALL SUBOPT_0x274
008422 f41c      	BRGE _0x2C00F7
008423 e0e1      	LDI  R30,LOW(1)
008424 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008426 940e c1e4 	CALL SUBOPT_0x275
008428 c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008429 30e3      	CPI  R30,LOW(0x3)
00842a e0a0      	LDI  R26,HIGH(0x3)
00842b 07fa      	CPC  R31,R26
00842c f451      	BRNE _0x2C00F8
00842d 940e c1f1 	CALL SUBOPT_0x276
00842f 30a2      	CPI  R26,LOW(0x2)
008430 f01c      	BRLT _0x2C00F9
008431 e0e0      	LDI  R30,LOW(0)
008432 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008434 940e c1e4 	CALL SUBOPT_0x275
008436 c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008437 30e4      	CPI  R30,LOW(0x4)
008438 e0a0      	LDI  R26,HIGH(0x4)
008439 07fa      	CPC  R31,R26
00843a f529      	BRNE _0x2C00F4
00843b 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00843d 30e0      	CPI  R30,0
00843e f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
00843f e0ef      	LDI  R30,LOW(15)
008440 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008442 940e c4b9 	CALL SUBOPT_0x2BF
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008444 c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008445 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008447 30a1      	CPI  R26,LOW(0x1)
008448 f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008449 e2e1      	LDI  R30,LOW(33)
00844a 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
00844c e1e0      	LDI  R30,LOW(16)
00844d 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
00844f e0ee      	LDI  R30,LOW(14)
008450 940e c230 	CALL SUBOPT_0x27C
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008452 940e c23a 	CALL SUBOPT_0x27D
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008454 940e c258 	CALL SUBOPT_0x281
008456 c005      	RJMP _0x2C0270
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008457 e0e0      	LDI  R30,LOW(0)
008458 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
00845a 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0270:
00845c 940e cec8 	CALL __PUTPARD1
00845e 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008460 c6f5      	RJMP _0x2C00FF
                 _0x2C00F1:
008461 91a0 14df 	LDS  R26,_currentPage
008463 30af      	CPI  R26,LOW(0xF)
008464 f541      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008465 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008467 f0f9      	BREQ _0x2C0271
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008468 30e2      	CPI  R30,LOW(0x2)
008469 e0a0      	LDI  R26,HIGH(0x2)
00846a 07fa      	CPC  R31,R26
00846b f451      	BRNE _0x2C0105
00846c 940e c1f1 	CALL SUBOPT_0x276
00846e 30a5      	CPI  R26,LOW(0x5)
00846f f01c      	BRLT _0x2C0106
008470 e0e0      	LDI  R30,LOW(0)
008471 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008473 940e c4b9 	CALL SUBOPT_0x2BF
008475 c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008476 30e3      	CPI  R30,LOW(0x3)
008477 e0a0      	LDI  R26,HIGH(0x3)
008478 07fa      	CPC  R31,R26
008479 f449      	BRNE _0x2C0107
00847a 940e c1dd 	CALL SUBOPT_0x274
00847c f41c      	BRGE _0x2C0108
00847d e0e4      	LDI  R30,LOW(4)
00847e 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008480 940e c4b9 	CALL SUBOPT_0x2BF
008482 c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008483 30e4      	CPI  R30,LOW(0x4)
008484 e0a0      	LDI  R26,HIGH(0x4)
008485 07fa      	CPC  R31,R26
008486 f429      	BRNE _0x2C0103
                 _0x2C0271:
008487 e0ee      	LDI  R30,LOW(14)
008488 940e c20a 	CALL SUBOPT_0x278
00848a 940e c210 	CALL SUBOPT_0x279
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
00848c c6c9      	RJMP _0x2C010A
                 _0x2C0100:
00848d 91a0 14df 	LDS  R26,_currentPage
00848f 31a0      	CPI  R26,LOW(0x10)
008490 f011      	BREQ PC+3
008491 940c 8515 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008493 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008495 f431      	BRNE _0x2C010F
008496 e0ee      	LDI  R30,LOW(14)
008497 940e c3e0 	CALL SUBOPT_0x2A1
008499 940e c210 	CALL SUBOPT_0x279
00849b c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
00849c 30e2      	CPI  R30,LOW(0x2)
00849d e0a0      	LDI  R26,HIGH(0x2)
00849e 07fa      	CPC  R31,R26
00849f f449      	BRNE _0x2C0110
0084a0 940e c1dd 	CALL SUBOPT_0x274
0084a2 f41c      	BRGE _0x2C0111
0084a3 e0e5      	LDI  R30,LOW(5)
0084a4 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
0084a6 940e c1e4 	CALL SUBOPT_0x275
0084a8 c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
0084a9 30e3      	CPI  R30,LOW(0x3)
0084aa e0a0      	LDI  R26,HIGH(0x3)
0084ab 07fa      	CPC  R31,R26
0084ac f451      	BRNE _0x2C0112
0084ad 940e c1f1 	CALL SUBOPT_0x276
0084af 30a6      	CPI  R26,LOW(0x6)
0084b0 f01c      	BRLT _0x2C0113
0084b1 e0e0      	LDI  R30,LOW(0)
0084b2 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
0084b4 940e c1e4 	CALL SUBOPT_0x275
0084b6 c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
0084b7 30e4      	CPI  R30,LOW(0x4)
0084b8 e0a0      	LDI  R26,HIGH(0x4)
0084b9 07fa      	CPC  R31,R26
0084ba f011      	BREQ PC+3
0084bb 940c 8514 	JMP _0x2C010E
0084bd 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0084bf 30a5      	CPI  R26,LOW(0x5)
0084c0 f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
0084c1 940e c4c0 	CALL SUBOPT_0x2C0
0084c3 5ba4      	SUBI R26,LOW(-_prbEn_S0160000000)
0084c4 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
0084c5 940e c4c4 	CALL SUBOPT_0x2C1
0084c7 940e cdcc 	CALL __LNEGB1
0084c9 940e c4cb 	CALL SUBOPT_0x2C2
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
0084cb 940e c4d3 	CALL SUBOPT_0x2C3
0084cd 940e c4c4 	CALL SUBOPT_0x2C1
0084cf 940e b4d5 	CALL SUBOPT_0x65
0084d1 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
0084d3 c040      	RJMP _0x2C0116
                 _0x2C0115:
0084d4 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0084d6 30a5      	CPI  R26,LOW(0x5)
0084d7 f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
0084d8 940e c4da 	CALL SUBOPT_0x2C4
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
0084da e0e0      	LDI  R30,LOW(0)
0084db 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0084dd e000     +LDI R16 , LOW ( 0 )
0084de e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
0084df 3005     +CPI R16 , LOW ( 5 )
0084e0 e0e0     +LDI R30 , HIGH ( 5 )
0084e1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0084e2 f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
0084e3 940e c28b 	CALL SUBOPT_0x288
0084e5 010f      	MOVW R0,R30
0084e6 e4ac      	LDI  R26,LOW(_prbEn_S0160000000)
0084e7 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
0084e8 0fa0      	ADD  R26,R16
0084e9 1fb1      	ADC  R27,R17
0084ea 91ec      	LD   R30,X
0084eb 01d0      	MOVW R26,R0
0084ec 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
0084ed 5f0f     +SUBI R16 , LOW ( - 1 )
0084ee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0084ef cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
0084f0 940e c42c 	CALL SUBOPT_0x2AD
                 ; 0016 025A                                 if(res < 0){
0084f2 f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
0084f3 940e c433 	CALL SUBOPT_0x2AE
                 ; 0016 025C                                     currentPage = P_FAILED;
0084f5 e2e5      	LDI  R30,LOW(37)
0084f6 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
0084f8 e0ee      	LDI  R30,LOW(14)
0084f9 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
0084fb e1e0      	LDI  R30,LOW(16)
0084fc 940e c4ae 	CALL SUBOPT_0x2BD
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
0084fe 940e c440 	CALL SUBOPT_0x2B0
008500 c007      	RJMP _0x2C0272
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008501 940e c4da 	CALL SUBOPT_0x2C4
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008503 e1e0      	LDI  R30,LOW(16)
008504 940e c4ae 	CALL SUBOPT_0x2BD
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008506 940e c445 	CALL SUBOPT_0x2B1
                 _0x2C0272:
008508 940e cec8 	CALL __PUTPARD1
00850a 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
00850c c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
00850d e0e0      	LDI  R30,LOW(0)
00850e 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008510 940e c240 	CALL SUBOPT_0x27E
008512 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008514 c641      	RJMP _0x2C011E
                 _0x2C010B:
008515 91a0 14df 	LDS  R26,_currentPage
008517 31a1      	CPI  R26,LOW(0x11)
008518 f011      	BREQ PC+3
008519 940c 8575 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
00851b 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
00851d f431      	BRNE _0x2C0123
00851e e0e1      	LDI  R30,LOW(1)
00851f 940e c3e6 	CALL SUBOPT_0x2A2
008521 940e c4b4 	CALL SUBOPT_0x2BE
008523 c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008524 30e2      	CPI  R30,LOW(0x2)
008525 e0a0      	LDI  R26,HIGH(0x2)
008526 07fa      	CPC  R31,R26
008527 f449      	BRNE _0x2C0124
008528 940e c1dd 	CALL SUBOPT_0x274
00852a f41c      	BRGE _0x2C0125
00852b e0e1      	LDI  R30,LOW(1)
00852c 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
00852e 940e c1e4 	CALL SUBOPT_0x275
008530 c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008531 30e3      	CPI  R30,LOW(0x3)
008532 e0a0      	LDI  R26,HIGH(0x3)
008533 07fa      	CPC  R31,R26
008534 f451      	BRNE _0x2C0126
008535 940e c1f1 	CALL SUBOPT_0x276
008537 30a2      	CPI  R26,LOW(0x2)
008538 f01c      	BRLT _0x2C0127
008539 e0e0      	LDI  R30,LOW(0)
00853a 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
00853c 940e c1e4 	CALL SUBOPT_0x275
00853e c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
00853f 30e4      	CPI  R30,LOW(0x4)
008540 e0a0      	LDI  R26,HIGH(0x4)
008541 07fa      	CPC  R31,R26
008542 f589      	BRNE _0x2C0122
008543 91e0 1a0b 	LDS  R30,_cursor_S0160000000
008545 30e0      	CPI  R30,0
008546 f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
008547 e1e2      	LDI  R30,LOW(18)
008548 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
00854a 91e0 148b 	LDS  R30,_muteMode
00854c 93e0 1a51 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
00854e 940e c4e1 	CALL SUBOPT_0x2C5
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
008550 940e c427 	CALL SUBOPT_0x2AC
008552 91e0 1a51 	LDS  R30,_mute_S0160000000
008554 940e b4d5 	CALL SUBOPT_0x65
008556 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
008558 c01b      	RJMP _0x2C012A
                 _0x2C0129:
008559 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00855b 30a1      	CPI  R26,LOW(0x1)
00855c f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
00855d e2e1      	LDI  R30,LOW(33)
00855e 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
008560 e1e3      	LDI  R30,LOW(19)
008561 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
008563 e1e1      	LDI  R30,LOW(17)
008564 940e c230 	CALL SUBOPT_0x27C
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
008566 940e c23a 	CALL SUBOPT_0x27D
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
008568 940e c258 	CALL SUBOPT_0x281
00856a c005      	RJMP _0x2C0273
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
00856b e0e0      	LDI  R30,LOW(0)
00856c 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
00856e 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0273:
008570 940e cec8 	CALL __PUTPARD1
008572 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
008574 c5e1      	RJMP _0x2C012D
                 _0x2C011F:
008575 91a0 14df 	LDS  R26,_currentPage
008577 31a2      	CPI  R26,LOW(0x12)
008578 f011      	BREQ PC+3
008579 940c 85d3 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
00857b 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
00857d f431      	BRNE _0x2C0132
00857e e1e1      	LDI  R30,LOW(17)
00857f 940e c20a 	CALL SUBOPT_0x278
008581 940e c21d 	CALL SUBOPT_0x27A
008583 c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
008584 30e2      	CPI  R30,LOW(0x2)
008585 e0a0      	LDI  R26,HIGH(0x2)
008586 07fa      	CPC  R31,R26
008587 f449      	BRNE _0x2C0133
008588 940e c1dd 	CALL SUBOPT_0x274
00858a f41c      	BRGE _0x2C0134
00858b e0e1      	LDI  R30,LOW(1)
00858c 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
00858e 940e c4e1 	CALL SUBOPT_0x2C5
008590 c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
008591 30e3      	CPI  R30,LOW(0x3)
008592 e0a0      	LDI  R26,HIGH(0x3)
008593 07fa      	CPC  R31,R26
008594 f451      	BRNE _0x2C0135
008595 940e c1f1 	CALL SUBOPT_0x276
008597 30a2      	CPI  R26,LOW(0x2)
008598 f01c      	BRLT _0x2C0136
008599 e0e0      	LDI  R30,LOW(0)
00859a 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
00859c 940e c4e1 	CALL SUBOPT_0x2C5
00859e c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
00859f 30e4      	CPI  R30,LOW(0x4)
0085a0 e0a0      	LDI  R26,HIGH(0x4)
0085a1 07fa      	CPC  R31,R26
0085a2 f579      	BRNE _0x2C0131
0085a3 91e0 1a0b 	LDS  R30,_cursor_S0160000000
0085a5 30e0      	CPI  R30,0
0085a6 f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
0085a7 91e0 1a51 	LDS  R30,_mute_S0160000000
0085a9 940e cdcc 	CALL __LNEGB1
0085ab 93e0 1a51 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
0085ad 940e c427 	CALL SUBOPT_0x2AC
0085af 91e0 1a51 	LDS  R30,_mute_S0160000000
0085b1 940e b4d5 	CALL SUBOPT_0x65
0085b3 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
0085b5 c01c      	RJMP _0x2C0139
                 _0x2C0138:
0085b6 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0085b8 30a1      	CPI  R26,LOW(0x1)
0085b9 f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
0085ba 940e c4e6 	CALL SUBOPT_0x2C6
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
0085bc e1e2      	LDI  R30,LOW(18)
0085bd 93e0 1a0d 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
0085bf 91e0 1a51 	LDS  R30,_mute_S0160000000
0085c1 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
0085c3 e0e0      	LDI  R30,LOW(0)
0085c4 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
0085c6 940e c445 	CALL SUBOPT_0x2B1
0085c8 c005      	RJMP _0x2C0274
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
0085c9 e0e0      	LDI  R30,LOW(0)
0085ca 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
0085cc 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0274:
0085ce 940e cec8 	CALL __PUTPARD1
0085d0 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
0085d2 c583      	RJMP _0x2C013C
                 _0x2C012E:
0085d3 91a0 14df 	LDS  R26,_currentPage
0085d5 31a3      	CPI  R26,LOW(0x13)
0085d6 f011      	BREQ PC+3
0085d7 940c 8635 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
0085d9 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
0085db f431      	BRNE _0x2C0141
0085dc e1e1      	LDI  R30,LOW(17)
0085dd 940e c3e0 	CALL SUBOPT_0x2A1
0085df 940e c21d 	CALL SUBOPT_0x27A
0085e1 c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
0085e2 30e2      	CPI  R30,LOW(0x2)
0085e3 e0a0      	LDI  R26,HIGH(0x2)
0085e4 07fa      	CPC  R31,R26
0085e5 f481      	BRNE _0x2C0142
0085e6 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0085e8 30a4      	CPI  R26,LOW(0x4)
0085e9 f414      	BRGE _0x2C0143
0085ea 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
0085ec 940e c1f1 	CALL SUBOPT_0x276
0085ee 30a5      	CPI  R26,LOW(0x5)
0085ef f01c      	BRLT _0x2C0144
0085f0 e0e0      	LDI  R30,LOW(0)
0085f1 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
0085f3 940e c4f2 	CALL SUBOPT_0x2C8
0085f5 c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
0085f6 30e3      	CPI  R30,LOW(0x3)
0085f7 e0a0      	LDI  R26,HIGH(0x3)
0085f8 07fa      	CPC  R31,R26
0085f9 f479      	BRNE _0x2C0145
0085fa 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0085fc 30a4      	CPI  R26,LOW(0x4)
0085fd f414      	BRGE _0x2C0146
0085fe 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
008600 940e c1dd 	CALL SUBOPT_0x274
008602 f41c      	BRGE _0x2C0147
008603 e0e4      	LDI  R30,LOW(4)
008604 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
008606 940e c4f2 	CALL SUBOPT_0x2C8
008608 c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
008609 30e4      	CPI  R30,LOW(0x4)
00860a e0a0      	LDI  R26,HIGH(0x4)
00860b 07fa      	CPC  R31,R26
00860c f539      	BRNE _0x2C0140
00860d 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00860f 30a4      	CPI  R26,LOW(0x4)
008610 f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
008611 e1e4      	LDI  R30,LOW(20)
008612 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
008614 940e c4f7 	CALL SUBOPT_0x2C9
008616 940e c23a 	CALL SUBOPT_0x27D
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
008618 e7eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
008619 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
00861a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
00861b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
00861c 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
00861e c015      	RJMP _0x2C014A
                 _0x2C0149:
00861f 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008621 30a4      	CPI  R26,LOW(0x4)
008622 f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
008623 940e c4c0 	CALL SUBOPT_0x2C0
008625 5eae      	SUBI R26,LOW(-_newPwd_S0160000000)
008626 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
008627 940e c4ff 	CALL SUBOPT_0x2CA
008629 f024      	BRLT _0x2C014C
00862a 940e c504 	CALL SUBOPT_0x2CB
00862c e0a0      	LDI  R26,LOW(0)
00862d 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
00862e 940e c50a 	CALL SUBOPT_0x2CC
008630 940e c504 	CALL SUBOPT_0x2CB
008632 940e c511 	CALL SUBOPT_0x2CD
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
008634 c521      	RJMP _0x2C014D
                 _0x2C013D:
008635 91a0 14df 	LDS  R26,_currentPage
008637 31a4      	CPI  R26,LOW(0x14)
008638 f011      	BREQ PC+3
008639 940c 86c5 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
00863b 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
00863d f431      	BRNE _0x2C0152
00863e e1e1      	LDI  R30,LOW(17)
00863f 940e c3e0 	CALL SUBOPT_0x2A1
008641 940e c21d 	CALL SUBOPT_0x27A
008643 c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
008644 30e2      	CPI  R30,LOW(0x2)
008645 e0a0      	LDI  R26,HIGH(0x2)
008646 07fa      	CPC  R31,R26
008647 f481      	BRNE _0x2C0153
008648 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00864a 30a4      	CPI  R26,LOW(0x4)
00864b f414      	BRGE _0x2C0154
00864c 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
00864e 940e c1f1 	CALL SUBOPT_0x276
008650 30a5      	CPI  R26,LOW(0x5)
008651 f01c      	BRLT _0x2C0155
008652 e0e0      	LDI  R30,LOW(0)
008653 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
008655 940e c4f2 	CALL SUBOPT_0x2C8
008657 c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
008658 30e3      	CPI  R30,LOW(0x3)
008659 e0a0      	LDI  R26,HIGH(0x3)
00865a 07fa      	CPC  R31,R26
00865b f479      	BRNE _0x2C0156
00865c 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00865e 30a4      	CPI  R26,LOW(0x4)
00865f f414      	BRGE _0x2C0157
008660 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
008662 940e c1dd 	CALL SUBOPT_0x274
008664 f41c      	BRGE _0x2C0158
008665 e0e4      	LDI  R30,LOW(4)
008666 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
008668 940e c4f2 	CALL SUBOPT_0x2C8
00866a c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
00866b 30e4      	CPI  R30,LOW(0x4)
00866c e0a0      	LDI  R26,HIGH(0x4)
00866d 07fa      	CPC  R31,R26
00866e f011      	BREQ PC+3
00866f 940c 86c4 	JMP _0x2C0151
008671 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008673 30a4      	CPI  R26,LOW(0x4)
008674 f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
008675 940e c515 	CALL SUBOPT_0x2CE
008677 e1e6      	LDI  R30,LOW(_confPwd_S0160000000)
008678 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
008679 940e c0b4 	CALL SUBOPT_0x252
00867b 940e 9720 	CALL _memcmp
00867d 30e0      	CPI  R30,0
00867e f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
00867f e8e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
008680 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
008681 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
008682 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
008683 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
008685 940e c515 	CALL SUBOPT_0x2CE
008687 940e c51a 	CALL SUBOPT_0x2CF
008689 940e 977e 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
00868b 940e c4f7 	CALL SUBOPT_0x2C9
00868d 940e 977e 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
00868f e2e5      	LDI  R30,LOW(37)
008690 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
008692 e1e1      	LDI  R30,LOW(17)
008693 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
008695 e1e4      	LDI  R30,LOW(20)
008696 940e c4ae 	CALL SUBOPT_0x2BD
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
008698 940e c440 	CALL SUBOPT_0x2B0
00869a c00f      	RJMP _0x2C0275
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
00869b 940e c51e 	CALL SUBOPT_0x2D0
00869d e1e6      	LDI  R30,LOW(_confPwd_S0160000000)
00869e e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00869f 940e c0b4 	CALL SUBOPT_0x252
0086a1 940e 8f0a 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
0086a3 940e c4e6 	CALL SUBOPT_0x2C6
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
0086a5 e1e4      	LDI  R30,LOW(20)
0086a6 940e c4ae 	CALL SUBOPT_0x2BD
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
0086a8 940e c445 	CALL SUBOPT_0x2B1
                 _0x2C0275:
0086aa 940e cec8 	CALL __PUTPARD1
0086ac 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
0086ae c015      	RJMP _0x2C015D
                 _0x2C015A:
0086af 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0086b1 30a4      	CPI  R26,LOW(0x4)
0086b2 f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
0086b3 940e c4c0 	CALL SUBOPT_0x2C0
0086b5 5eaa      	SUBI R26,LOW(-_confPwd_S0160000000)
0086b6 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
0086b7 940e c4ff 	CALL SUBOPT_0x2CA
0086b9 f024      	BRLT _0x2C015F
0086ba 940e c527 	CALL SUBOPT_0x2D1
0086bc e0a0      	LDI  R26,LOW(0)
0086bd 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
0086be 940e c50a 	CALL SUBOPT_0x2CC
0086c0 940e c527 	CALL SUBOPT_0x2D1
0086c2 940e c511 	CALL SUBOPT_0x2CD
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
0086c4 c491      	RJMP _0x2C0160
                 _0x2C014E:
0086c5 91a0 14df 	LDS  R26,_currentPage
0086c7 31a5      	CPI  R26,LOW(0x15)
0086c8 f011      	BREQ PC+3
0086c9 940c 8759 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
0086cb 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
0086cd f419      	BRNE _0x2C0165
0086ce 940e c52d 	CALL SUBOPT_0x2D2
0086d0 c087      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
0086d1 30e2      	CPI  R30,LOW(0x2)
0086d2 e0a0      	LDI  R26,HIGH(0x2)
0086d3 07fa      	CPC  R31,R26
0086d4 f449      	BRNE _0x2C0166
0086d5 940e c1dd 	CALL SUBOPT_0x274
0086d7 f41c      	BRGE _0x2C0167
0086d8 e0e3      	LDI  R30,LOW(3)
0086d9 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
0086db 940e c1e4 	CALL SUBOPT_0x275
0086dd c07a      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
0086de 30e3      	CPI  R30,LOW(0x3)
0086df e0a0      	LDI  R26,HIGH(0x3)
0086e0 07fa      	CPC  R31,R26
0086e1 f451      	BRNE _0x2C0168
0086e2 940e c1f1 	CALL SUBOPT_0x276
0086e4 30a4      	CPI  R26,LOW(0x4)
0086e5 f01c      	BRLT _0x2C0169
0086e6 e0e0      	LDI  R30,LOW(0)
0086e7 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
0086e9 940e c1e4 	CALL SUBOPT_0x275
0086eb c06c      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
0086ec 30e4      	CPI  R30,LOW(0x4)
0086ed e0a0      	LDI  R26,HIGH(0x4)
0086ee 07fa      	CPC  R31,R26
0086ef f011      	BREQ PC+3
0086f0 940c 8758 	JMP _0x2C0164
0086f2 91e0 1a0b 	LDS  R30,_cursor_S0160000000
0086f4 30e0      	CPI  R30,0
0086f5 f569      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
0086f6 e1e6      	LDI  R30,LOW(22)
0086f7 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
0086f9 e5a2      	LDI  R26,LOW(_vRef_S0160000000)
0086fa e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0086fb d616      	RCALL _get_current_vref
0086fc 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
0086fd 2355      	TST  R21
0086fe f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
0086ff e0e2      	LDI  R30,LOW(2)
008700 93e0 1a52 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
008702 e0e5      	LDI  R30,LOW(5)
                +
008703 93e0 1a53+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
008705 e0e6      	LDI  R30,LOW(6)
                +
008706 93e0 1a54+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
008708 ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
008709 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
00870a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
00870b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
00870c 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
00870e e000     +LDI R16 , LOW ( 0 )
00870f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
008710 3003     +CPI R16 , LOW ( 3 )
008711 e0e0     +LDI R30 , HIGH ( 3 )
008712 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
008713 f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
008714 940e c534 	CALL SUBOPT_0x2D3
008716 01f8      	MOVW R30,R16
008717 940e c041 	CALL SUBOPT_0x23F
008719 e5a2      	LDI  R26,LOW(_vRef_S0160000000)
00871a e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
00871b 940e c414 	CALL SUBOPT_0x2A9
00871d 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 02F5                                 }
                +
00871f 5f0f     +SUBI R16 , LOW ( - 1 )
008720 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008721 cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
008722 c035      	RJMP _0x2C0170
                 _0x2C016B:
008723 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008725 30a1      	CPI  R26,LOW(0x1)
008726 f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
008727 e1e7      	LDI  R30,LOW(23)
008728 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
00872a e0e0      	LDI  R30,LOW(0)
00872b 93e0 1a55 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
00872d 940e c53b 	CALL SUBOPT_0x2D4
00872f 940e c013 	CALL SUBOPT_0x239
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
008731 c026      	RJMP _0x2C0172
                 _0x2C0171:
008732 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008734 30a2      	CPI  R26,LOW(0x2)
008735 f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
008736 e1ea      	LDI  R30,LOW(26)
008737 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
008739 e0e0      	LDI  R30,LOW(0)
00873a 93e0 1a55 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
00873c 940e c546 	CALL SUBOPT_0x2D5
00873e 940e c54d 	CALL SUBOPT_0x2D6
008740 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
008742 c015      	RJMP _0x2C0174
                 _0x2C0173:
008743 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008745 30a3      	CPI  R26,LOW(0x3)
008746 f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
008747 e2e0      	LDI  R30,LOW(32)
008748 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
00874a ecee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
00874b e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
00874c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
00874d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
00874e c005      	RJMP _0x2C0276
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
00874f e0e0      	LDI  R30,LOW(0)
008750 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
008752 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0276:
008754 940e cec8 	CALL __PUTPARD1
008756 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
008758 c3fd      	RJMP _0x2C0177
                 _0x2C0161:
008759 91a0 14df 	LDS  R26,_currentPage
00875b 31a6      	CPI  R26,LOW(0x16)
00875c f011      	BREQ PC+3
00875d 940c 87bf 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
00875f 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
008761 f431      	BRNE _0x2C017C
008762 e1e5      	LDI  R30,LOW(21)
008763 940e c20a 	CALL SUBOPT_0x278
008765 940e c552 	CALL SUBOPT_0x2D7
008767 c056      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
008768 30e2      	CPI  R30,LOW(0x2)
008769 e0a0      	LDI  R26,HIGH(0x2)
00876a 07fa      	CPC  R31,R26
00876b f451      	BRNE _0x2C017D
00876c 940e c1f1 	CALL SUBOPT_0x276
00876e 30a4      	CPI  R26,LOW(0x4)
00876f f01c      	BRLT _0x2C017E
008770 e0e0      	LDI  R30,LOW(0)
008771 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
008773 940e c557 	CALL SUBOPT_0x2D8
008775 c048      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
008776 30e3      	CPI  R30,LOW(0x3)
008777 e0a0      	LDI  R26,HIGH(0x3)
008778 07fa      	CPC  R31,R26
008779 f449      	BRNE _0x2C017F
00877a 940e c1dd 	CALL SUBOPT_0x274
00877c f41c      	BRGE _0x2C0180
00877d e0e3      	LDI  R30,LOW(3)
00877e 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
008780 940e c557 	CALL SUBOPT_0x2D8
008782 c03b      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
008783 30e4      	CPI  R30,LOW(0x4)
008784 e0a0      	LDI  R26,HIGH(0x4)
008785 07fa      	CPC  R31,R26
008786 f5b9      	BRNE _0x2C017B
008787 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008789 30a3      	CPI  R26,LOW(0x3)
00878a f479      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
00878b e2e4      	LDI  R30,LOW(36)
00878c 940e c22a 	CALL SUBOPT_0x27B
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
00878e e1e6      	LDI  R30,LOW(22)
00878f 93e0 1a0d 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
008791 e5a2      	LDI  R26,LOW(_vRef_S0160000000)
008792 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008793 d70f      	RCALL _set_vref
                 ; 0016 031B                                 cursor = 0;
008794 e0e0      	LDI  R30,LOW(0)
008795 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
008797 940e c445 	CALL SUBOPT_0x2B1
008799 c020      	RJMP _0x2C0277
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
00879a 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00879c 30a3      	CPI  R26,LOW(0x3)
00879d f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
00879e 940e c4c0 	CALL SUBOPT_0x2C0
0087a0 5aae      	SUBI R26,LOW(-_vRef_S0160000000)
0087a1 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
0087a2 940e c4ff 	CALL SUBOPT_0x2CA
0087a4 f020      	BRLO _0x2C0185
0087a5 940e c55c 	CALL SUBOPT_0x2D9
0087a7 e0a0      	LDI  R26,LOW(0)
0087a8 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
0087a9 940e c534 	CALL SUBOPT_0x2D3
0087ab 940e c4d3 	CALL SUBOPT_0x2C3
0087ad 940e c55c 	CALL SUBOPT_0x2D9
0087af 81e0      	LD   R30,Z
0087b0 940e b4d5 	CALL SUBOPT_0x65
0087b2 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
0087b4 c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
0087b5 e0e0      	LDI  R30,LOW(0)
0087b6 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
0087b8 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0277:
0087ba 940e cec8 	CALL __PUTPARD1
0087bc 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
0087be c397      	RJMP _0x2C0187
                 _0x2C0178:
0087bf 91a0 14df 	LDS  R26,_currentPage
0087c1 31a7      	CPI  R26,LOW(0x17)
0087c2 f011      	BREQ PC+3
0087c3 940c 881a 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
0087c5 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
0087c7 f449      	BRNE _0x2C018C
0087c8 e1e5      	LDI  R30,LOW(21)
0087c9 940e c3e0 	CALL SUBOPT_0x2A1
0087cb e0e0      	LDI  R30,LOW(0)
0087cc 93e0 1a55 	STS  _prb1_S0160000000,R30
0087ce 940e c552 	CALL SUBOPT_0x2D7
0087d0 c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
0087d1 30e2      	CPI  R30,LOW(0x2)
0087d2 e0a0      	LDI  R26,HIGH(0x2)
0087d3 07fa      	CPC  R31,R26
0087d4 f451      	BRNE _0x2C018D
0087d5 940e c1f1 	CALL SUBOPT_0x276
0087d7 30a2      	CPI  R26,LOW(0x2)
0087d8 f01c      	BRLT _0x2C018E
0087d9 e0e0      	LDI  R30,LOW(0)
0087da 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
0087dc 940e c562 	CALL SUBOPT_0x2DA
0087de c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
0087df 30e3      	CPI  R30,LOW(0x3)
0087e0 e0a0      	LDI  R26,HIGH(0x3)
0087e1 07fa      	CPC  R31,R26
0087e2 f449      	BRNE _0x2C018F
0087e3 940e c1dd 	CALL SUBOPT_0x274
0087e5 f41c      	BRGE _0x2C0190
0087e6 e0e1      	LDI  R30,LOW(1)
0087e7 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
0087e9 940e c562 	CALL SUBOPT_0x2DA
0087eb c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
0087ec 30e4      	CPI  R30,LOW(0x4)
0087ed e0a0      	LDI  R26,HIGH(0x4)
0087ee 07fa      	CPC  R31,R26
0087ef f549      	BRNE _0x2C018B
0087f0 91e0 1a0b 	LDS  R30,_cursor_S0160000000
0087f2 30e0      	CPI  R30,0
0087f3 f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
0087f4 940e c567 	CALL SUBOPT_0x2DB
0087f6 f018      	BRLO _0x2C0193
0087f7 e0e0      	LDI  R30,LOW(0)
0087f8 93e0 1a55 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
0087fa 940e c56e 	CALL SUBOPT_0x2DC
0087fc 940e c54d 	CALL SUBOPT_0x2D6
0087fe 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
008800 c018      	RJMP _0x2C0194
                 _0x2C0192:
008801 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008803 30a1      	CPI  R26,LOW(0x1)
008804 f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
008805 e1e8      	LDI  R30,LOW(24)
008806 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
008808 e0e0      	LDI  R30,LOW(0)
008809 93e0 1a56 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
00880b 940e c546 	CALL SUBOPT_0x2D5
00880d 940e c575 	CALL SUBOPT_0x2DD
00880f 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
008811 c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
008812 e0e0      	LDI  R30,LOW(0)
008813 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
008815 940e c240 	CALL SUBOPT_0x27E
008817 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
008819 c33c      	RJMP _0x2C0197
                 _0x2C0188:
00881a 91a0 14df 	LDS  R26,_currentPage
00881c 31a8      	CPI  R26,LOW(0x18)
00881d f011      	BREQ PC+3
00881e 940c 887c 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
008820 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
008822 f459      	BRNE _0x2C019C
008823 e1e7      	LDI  R30,LOW(23)
008824 940e c20a 	CALL SUBOPT_0x278
008826 e0e0      	LDI  R30,LOW(0)
008827 93e0 1a56 	STS  _prb2_S0160000000,R30
008829 940e c53b 	CALL SUBOPT_0x2D4
00882b 940e c013 	CALL SUBOPT_0x239
00882d c04d      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
00882e 30e2      	CPI  R30,LOW(0x2)
00882f e0a0      	LDI  R26,HIGH(0x2)
008830 07fa      	CPC  R31,R26
008831 f451      	BRNE _0x2C019D
008832 940e c1f1 	CALL SUBOPT_0x276
008834 30a2      	CPI  R26,LOW(0x2)
008835 f01c      	BRLT _0x2C019E
008836 e0e0      	LDI  R30,LOW(0)
008837 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
008839 940e c562 	CALL SUBOPT_0x2DA
00883b c03f      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
00883c 30e3      	CPI  R30,LOW(0x3)
00883d e0a0      	LDI  R26,HIGH(0x3)
00883e 07fa      	CPC  R31,R26
00883f f449      	BRNE _0x2C019F
008840 940e c1dd 	CALL SUBOPT_0x274
008842 f41c      	BRGE _0x2C01A0
008843 e0e1      	LDI  R30,LOW(1)
008844 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
008846 940e c562 	CALL SUBOPT_0x2DA
008848 c032      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
008849 30e4      	CPI  R30,LOW(0x4)
00884a e0a0      	LDI  R26,HIGH(0x4)
00884b 07fa      	CPC  R31,R26
00884c f571      	BRNE _0x2C019B
00884d 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00884f 30e0      	CPI  R30,0
008850 f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
008851 91a0 1a56 	LDS  R26,_prb2_S0160000000
008853 5faf      	SUBI R26,-LOW(1)
008854 93a0 1a56 	STS  _prb2_S0160000000,R26
008856 30a5      	CPI  R26,LOW(0x5)
008857 f018      	BRLO _0x2C01A3
008858 e0e0      	LDI  R30,LOW(0)
008859 93e0 1a56 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
00885b 940e c56e 	CALL SUBOPT_0x2DC
00885d 940e c575 	CALL SUBOPT_0x2DD
00885f 940e c013 	CALL SUBOPT_0x239
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
008861 c019      	RJMP _0x2C01A4
                 _0x2C01A2:
008862 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008864 30a1      	CPI  R26,LOW(0x1)
008865 f471      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
008866 e1e9      	LDI  R30,LOW(25)
008867 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
                +
008869 eee9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00886a e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00886b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00886c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00886d 940e cec8 	CALL __PUTPARD1
00886f 940e c575 	CALL SUBOPT_0x2DD
008871 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
008873 c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
008874 e0e0      	LDI  R30,LOW(0)
008875 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
008877 940e c240 	CALL SUBOPT_0x27E
008879 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359 //    else if ( currentPage == P_CAL1_CONFIRM )
                 ; 0016 035A //    {
                 ; 0016 035B //        switch(key){
                 ; 0016 035C //        case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
                 ; 0016 035D //        case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 035E //        case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 035F //        case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
                 ; 0016 0360 //                            if(res < 0){
                 ; 0016 0361 //                                currentPage = P_FAILED;
                 ; 0016 0362 //                                tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363 //                                tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364 //                                cursor      = 0;
                 ; 0016 0365 //                                printOLED("FL");
                 ; 0016 0366 //                            }
                 ; 0016 0367 //                            else{
                 ; 0016 0368 //                                currentPage = P_FINISH;
                 ; 0016 0369 //                                tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A //                                tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B //                                cursor      = 0;
                 ; 0016 036C //                                printOLED("FI");
                 ; 0016 036D //                            }
                 ; 0016 036E //                            break;
                 ; 0016 036F //        }
                 ; 0016 0370 //    }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
00887b c2da      	RJMP _0x2C01A7
                 _0x2C0198:
00887c 91a0 14df 	LDS  R26,_currentPage
00887e 31aa      	CPI  R26,LOW(0x1A)
00887f f011      	BREQ PC+3
008880 940c 88d1 	JMP _0x2C01A8
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
008882 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
008884 f431      	BRNE _0x2C01AC
008885 e1e5      	LDI  R30,LOW(21)
008886 940e c3e6 	CALL SUBOPT_0x2A2
008888 940e c552 	CALL SUBOPT_0x2D7
00888a c045      	RJMP _0x2C01AB
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01AC:
00888b 30e2      	CPI  R30,LOW(0x2)
00888c e0a0      	LDI  R26,HIGH(0x2)
00888d 07fa      	CPC  R31,R26
00888e f451      	BRNE _0x2C01AD
00888f 940e c1f1 	CALL SUBOPT_0x276
008891 30a2      	CPI  R26,LOW(0x2)
008892 f01c      	BRLT _0x2C01AE
008893 e0e0      	LDI  R30,LOW(0)
008894 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01AE:
008896 940e c562 	CALL SUBOPT_0x2DA
008898 c037      	RJMP _0x2C01AB
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01AD:
008899 30e3      	CPI  R30,LOW(0x3)
00889a e0a0      	LDI  R26,HIGH(0x3)
00889b 07fa      	CPC  R31,R26
00889c f449      	BRNE _0x2C01AF
00889d 940e c1dd 	CALL SUBOPT_0x274
00889f f41c      	BRGE _0x2C01B0
0088a0 e0e1      	LDI  R30,LOW(1)
0088a1 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01B0:
0088a3 940e c562 	CALL SUBOPT_0x2DA
0088a5 c02a      	RJMP _0x2C01AB
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01AF:
0088a6 30e4      	CPI  R30,LOW(0x4)
0088a7 e0a0      	LDI  R26,HIGH(0x4)
0088a8 07fa      	CPC  R31,R26
0088a9 f531      	BRNE _0x2C01AB
0088aa 91e0 1a0b 	LDS  R30,_cursor_S0160000000
0088ac 30e0      	CPI  R30,0
0088ad f469      	BRNE _0x2C01B2
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
0088ae 940e c567 	CALL SUBOPT_0x2DB
0088b0 f018      	BRLO _0x2C01B3
0088b1 e0e0      	LDI  R30,LOW(0)
0088b2 93e0 1a55 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01B3:
0088b4 940e c56e 	CALL SUBOPT_0x2DC
0088b6 940e c54d 	CALL SUBOPT_0x2D6
0088b8 940e c013 	CALL SUBOPT_0x239
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
0088ba c015      	RJMP _0x2C01B4
                 _0x2C01B2:
0088bb 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0088bd 30a1      	CPI  R26,LOW(0x1)
0088be f451      	BRNE _0x2C01B5
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
0088bf e1eb      	LDI  R30,LOW(27)
0088c0 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
                +
0088c2 eeef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
0088c3 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
0088c4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
0088c5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
0088c6 940e c3f1 	CALL SUBOPT_0x2A4
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
0088c8 c007      	RJMP _0x2C01B6
                 _0x2C01B5:
                 ; 0016 0381                                 currentPage = P_MONITOR;
0088c9 e0e0      	LDI  R30,LOW(0)
0088ca 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
0088cc 940e c240 	CALL SUBOPT_0x27E
0088ce 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0384                             }
                 _0x2C01B6:
                 _0x2C01B4:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01AB:
                 ; 0016 0387     }
                 ; 0016 0388 //    else if ( currentPage == P_CAL2_MENU )
                 ; 0016 0389 //    {
                 ; 0016 038A //        switch(key){
                 ; 0016 038B //        case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
                 ; 0016 038C //        case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 ; 0016 038D //        case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 ; 0016 038E //        case KEY_OK     :   if(cursor < 3){
                 ; 0016 038F //                                if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
                 ; 0016 0390 //                                else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 ; 0016 0391 //                                else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 ; 0016 0392 //
                 ; 0016 0393 //                                printOLED("CP%1d%1d",cursor+1,prb1+1);
                 ; 0016 0394 //
                 ; 0016 0395 //                                res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
                 ; 0016 0396 //                                if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
                 ; 0016 0397 //                                for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 ; 0016 0398 //                                                    printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                 ; 0016 0399 //                                cursor      = 0;
                 ; 0016 039A //                            }
                 ; 0016 039B //                            else if(cursor == 3){       // -- Calculate
                 ; 0016 039C //                                currentPage = P_CAL2_CONFIRM;
                 ; 0016 039D //                                cursor      = 0;
                 ; 0016 039E //                                printOLED("CC%1d",prb1+1);
                 ; 0016 039F //                            }
                 ; 0016 03A0 //                            else{                       // -- Exit -- should not occur
                 ; 0016 03A1 //                                currentPage = P_MONITOR;
                 ; 0016 03A2 //                                cursor      = 0;
                 ; 0016 03A3 //                                printOLED("M0");
                 ; 0016 03A4 //                            }
                 ; 0016 03A5 //            break;
                 ; 0016 03A6 //        }
                 ; 0016 03A7 //    }
                 ; 0016 03A8 //    else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
                 ; 0016 03A9 //    {
                 ; 0016 03AA //        switch(key){
                 ; 0016 03AB //        case KEY_MODE   :   currentPage = P_CAL2_MENU;
                 ; 0016 03AC //                            if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
                 ; 0016 03AD //                            else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 ; 0016 03AE //                            else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 ; 0016 03AF //                            printOLED("M8%1d",cursor);                                                                      break;
                 ; 0016 03B0 //        case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 ; 0016 03B1 //        case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 ; 0016 03B2 //        case KEY_OK     :   if(cursor == 6){
                 ; 0016 03B3 //
                 ; 0016 03B4 //                                if(currentPage == P_CAL2_SPT1){
                 ; 0016 03B5 //                                    res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
                 ; 0016 03B6 //                                }
                 ; 0016 03B7 //                                else if(currentPage == P_CAL2_SPT2){
                 ; 0016 03B8 //                                    res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
                 ; 0016 03B9 //                                }
                 ; 0016 03BA //                                else if(currentPage == P_CAL2_SPT3){
                 ; 0016 03BB //                                    res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
                 ; 0016 03BC //                                }
                 ; 0016 03BD //                                else{
                 ; 0016 03BE //                                    // -- should not occur -- //
                 ; 0016 03BF //                                    res = -1;
                 ; 0016 03C0 //                                }
                 ; 0016 03C1 //
                 ; 0016 03C2 //                                if(res < 0){
                 ; 0016 03C3 //                                    currentPage = P_FAILED;
                 ; 0016 03C4 //                                    tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5 //                                    tmpPrevPage = currentPage;
                 ; 0016 03C6 //                                    cursor      = 0;
                 ; 0016 03C7 //                                    printOLED("FL");
                 ; 0016 03C8 //                                }
                 ; 0016 03C9 //                                else{
                 ; 0016 03CA //                                    currentPage = P_FINISH;
                 ; 0016 03CB //                                    tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC //                                    tmpPrevPage = currentPage;
                 ; 0016 03CD //                                    cursor      = 0;
                 ; 0016 03CE //                                    printOLED("FI");
                 ; 0016 03CF //                                }
                 ; 0016 03D0 //                            }
                 ; 0016 03D1 //                            else if(cursor == 0){   // toggle '+' & '-'
                 ; 0016 03D2 //                                if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
                 ; 0016 03D3 //                                printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 ; 0016 03D4 //                            }
                 ; 0016 03D5 //                            else if(cursor < 6){
                 ; 0016 03D6 //                                if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
                 ; 0016 03D7 //                                printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 ; 0016 03D8 //                            }
                 ; 0016 03D9 //                            else{                       // -- Exit -- should not occur
                 ; 0016 03DA //                                currentPage = P_MONITOR;
                 ; 0016 03DB //                                cursor      = 0;
                 ; 0016 03DC //                                printOLED("M0");
                 ; 0016 03DD //                            }
                 ; 0016 03DE //            break;
                 ; 0016 03DF //        }
                 ; 0016 03E0 //    }
                 ; 0016 03E1 //    else if ( currentPage == P_CAL2_CONFIRM )
                 ; 0016 03E2 //    {
                 ; 0016 03E3 //        switch(key){
                 ; 0016 03E4 //        case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
                 ; 0016 03E5 //        case KEY_UP     :   /* no operation */                                                                  break;
                 ; 0016 03E6 //        case KEY_DOWN   :   /* no operation */                                                                  break;
                 ; 0016 03E7 //        case KEY_OK     :   res = sensorCalibrate2(prb1);
                 ; 0016 03E8 //                            if(res < 0){
                 ; 0016 03E9 //                                currentPage = P_FAILED;
                 ; 0016 03EA //                                tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB //                                tmpPrevPage = P_CAL2_CONFIRM;
                 ; 0016 03EC //                                cursor      = 0;
                 ; 0016 03ED //                                printOLED("FL");
                 ; 0016 03EE //                            }
                 ; 0016 03EF //                            else{
                 ; 0016 03F0 //                                currentPage = P_FINISH;
                 ; 0016 03F1 //                                tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2 //                                tmpPrevPage = P_CAL2_CONFIRM;
                 ; 0016 03F3 //                                cursor      = 0;
                 ; 0016 03F4 //                                printOLED("FI");
                 ; 0016 03F5 //                            }
                 ; 0016 03F6 //                            break;
                 ; 0016 03F7 //        }
                 ; 0016 03F8 //    }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
0088d0 c285      	RJMP _0x2C01B7
                 _0x2C01A8:
0088d1 91a0 14df 	LDS  R26,_currentPage
0088d3 32a0      	CPI  R26,LOW(0x20)
0088d4 f591      	BRNE _0x2C01B8
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
0088d5 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
0088d7 f449      	BRNE _0x2C01BC
0088d8 e1e5      	LDI  R30,LOW(21)
0088d9 93e0 14df 	STS  _currentPage,R30
0088db e0e3      	LDI  R30,LOW(3)
0088dc 93e0 1a0b 	STS  _cursor_S0160000000,R30
0088de 940e c552 	CALL SUBOPT_0x2D7
0088e0 c025      	RJMP _0x2C01BB
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01BC:
0088e1 30e2      	CPI  R30,LOW(0x2)
0088e2 e0a0      	LDI  R26,HIGH(0x2)
0088e3 07fa      	CPC  R31,R26
0088e4 f109      	BREQ _0x2C01BB
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
0088e5 30e3      	CPI  R30,LOW(0x3)
0088e6 e0a0      	LDI  R26,HIGH(0x3)
0088e7 07fa      	CPC  R31,R26
0088e8 f0e9      	BREQ _0x2C01BB
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
0088e9 30e4      	CPI  R30,LOW(0x4)
0088ea e0a0      	LDI  R26,HIGH(0x4)
0088eb 07fa      	CPC  R31,R26
0088ec f4c9      	BRNE _0x2C01BB
0088ed e1e2      	LDI  R30,LOW(_newPwd_S0160000000)
0088ee e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0088ef 940e b84f 	CALL SUBOPT_0xF1
0088f1 940e b554 	CALL SUBOPT_0x77
0088f3 940e 977e 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
0088f5 940e c51e 	CALL SUBOPT_0x2D0
0088f7 e1e2      	LDI  R30,LOW(_newPwd_S0160000000)
0088f8 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0088f9 940e c0b4 	CALL SUBOPT_0x252
0088fb d60e      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
0088fc e2e4      	LDI  R30,LOW(36)
0088fd 940e c22a 	CALL SUBOPT_0x27B
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
0088ff e2e0      	LDI  R30,LOW(32)
008900 940e c4ae 	CALL SUBOPT_0x2BD
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
008902 940e c445 	CALL SUBOPT_0x2B1
008904 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C01BB:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
008906 c24f      	RJMP _0x2C01C0
                 _0x2C01B8:
008907 91a0 14df 	LDS  R26,_currentPage
008909 32a1      	CPI  R26,LOW(0x21)
00890a f011      	BREQ PC+3
00890b 940c 89e8 	JMP _0x2C01C1
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
00890d 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
00890f f569      	BRNE _0x2C01C5
008910 91e0 1a0d 	LDS  R30,_tmpPrevPage_S0160000000
008912 e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
008913 30e2      	CPI  R30,LOW(0x2)
008914 e0a0      	LDI  R26,HIGH(0x2)
008915 07fa      	CPC  R31,R26
008916 f431      	BRNE _0x2C01C9
008917 e0e2      	LDI  R30,LOW(2)
008918 940e c3e0 	CALL SUBOPT_0x2A1
00891a 940e c3ec 	CALL SUBOPT_0x2A3
00891c c013      	RJMP _0x2C0278
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C01C9:
00891d 30ee      	CPI  R30,LOW(0xE)
00891e e0a0      	LDI  R26,HIGH(0xE)
00891f 07fa      	CPC  R31,R26
008920 f431      	BRNE _0x2C01CA
008921 e0ee      	LDI  R30,LOW(14)
008922 940e c3e0 	CALL SUBOPT_0x2A1
008924 940e c57a 	CALL SUBOPT_0x2DE
008926 c009      	RJMP _0x2C0278
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C01CA:
008927 31e1      	CPI  R30,LOW(0x11)
008928 e0a0      	LDI  R26,HIGH(0x11)
008929 07fa      	CPC  R31,R26
00892a f459      	BRNE _0x2C01C8
00892b e1e1      	LDI  R30,LOW(17)
00892c 940e c3e0 	CALL SUBOPT_0x2A1
00892e 940e c57f 	CALL SUBOPT_0x2DF
                 _0x2C0278:
008930 940e cec8 	CALL __PUTPARD1
008932 940e c4d3 	CALL SUBOPT_0x2C3
008934 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0410                             }
                 _0x2C01C8:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
008936 940e c584 	CALL SUBOPT_0x2E0
008938 940e c51a 	CALL SUBOPT_0x2CF
00893a 940e 977e 	CALL _memset
00893c c0aa      	RJMP _0x2C01C4
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C01C5:
00893d 30e2      	CPI  R30,LOW(0x2)
00893e e0a0      	LDI  R26,HIGH(0x2)
00893f 07fa      	CPC  R31,R26
008940 f481      	BRNE _0x2C01CC
008941 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008943 30a4      	CPI  R26,LOW(0x4)
008944 f414      	BRGE _0x2C01CD
008945 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C01CD:
008947 940e c1f1 	CALL SUBOPT_0x276
008949 30a5      	CPI  R26,LOW(0x5)
00894a f01c      	BRLT _0x2C01CE
00894b e0e0      	LDI  R30,LOW(0)
00894c 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01CE:
00894e 940e c4f2 	CALL SUBOPT_0x2C8
008950 c096      	RJMP _0x2C01C4
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C01CC:
008951 30e3      	CPI  R30,LOW(0x3)
008952 e0a0      	LDI  R26,HIGH(0x3)
008953 07fa      	CPC  R31,R26
008954 f479      	BRNE _0x2C01CF
008955 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008957 30a4      	CPI  R26,LOW(0x4)
008958 f414      	BRGE _0x2C01D0
008959 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C01D0:
00895b 940e c1dd 	CALL SUBOPT_0x274
00895d f41c      	BRGE _0x2C01D1
00895e e0e4      	LDI  R30,LOW(4)
00895f 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01D1:
008961 940e c4f2 	CALL SUBOPT_0x2C8
008963 c083      	RJMP _0x2C01C4
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C01CF:
008964 30e4      	CPI  R30,LOW(0x4)
008965 e0a0      	LDI  R26,HIGH(0x4)
008966 07fa      	CPC  R31,R26
008967 f011      	BREQ PC+3
008968 940c 89e7 	JMP _0x2C01C4
00896a 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00896c 30a4      	CPI  R26,LOW(0x4)
00896d f011      	BREQ PC+3
00896e 940c 89d2 	JMP _0x2C01D3
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
008970 940e c584 	CALL SUBOPT_0x2E0
008972 940e c2a5 	CALL SUBOPT_0x28C
008974 940e c0b4 	CALL SUBOPT_0x252
008976 d5a6      	RCALL _recmp
008977 9730      	SBIW R30,0
008978 f061      	BREQ _0x2C01D4
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
008979 e2e3      	LDI  R30,LOW(35)
00897a 940e c20a 	CALL SUBOPT_0x278
00897c 940e c589 	CALL SUBOPT_0x2E1
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
00897e 940e c584 	CALL SUBOPT_0x2E0
008980 940e c51a 	CALL SUBOPT_0x2CF
008982 940e 977e 	CALL _memset
                 ; 0016 041D                                     break;
008984 c062      	RJMP _0x2C01C4
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C01D4:
008985 940e c58e 	CALL SUBOPT_0x2E2
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
008987 f431      	BRNE _0x2C01D8
008988 e0e7      	LDI  R30,LOW(7)
008989 940e c20a 	CALL SUBOPT_0x278
00898b 940e c419 	CALL SUBOPT_0x2AA
00898d c043      	RJMP _0x2C01D7
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C01D8:
00898e 31e0      	CPI  R30,LOW(0x10)
00898f e0a0      	LDI  R26,HIGH(0x10)
008990 07fa      	CPC  R31,R26
008991 f521      	BRNE _0x2C01D9
008992 e1e0      	LDI  R30,LOW(16)
008993 940e c20a 	CALL SUBOPT_0x278
                +
008995 efe8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 944 ) )
008996 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 944 ) )
008997 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 944 ) )
008998 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 944 ) )
                 	__POINTD1FN _0x2C0000,944
008999 940e c3d4 	CALL SUBOPT_0x29F
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
00899b e000     +LDI R16 , LOW ( 0 )
00899c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01DB:
                +
00899d 3005     +CPI R16 , LOW ( 5 )
00899e e0e0     +LDI R30 , HIGH ( 5 )
00899f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0089a0 f4a4      	BRGE _0x2C01DC
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
0089a1 01d8      	MOVW R26,R16
0089a2 5ba4      	SUBI R26,LOW(-_prbEn_S0160000000)
0089a3 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
0089a4 940e c28b 	CALL SUBOPT_0x288
0089a6 81e0      	LD   R30,Z
0089a7 940e c4cb 	CALL SUBOPT_0x2C2
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
0089a9 01f8      	MOVW R30,R16
0089aa 940e c041 	CALL SUBOPT_0x23F
0089ac e4ac      	LDI  R26,LOW(_prbEn_S0160000000)
0089ad e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
0089ae 940e c414 	CALL SUBOPT_0x2A9
0089b0 940e bffc 	CALL SUBOPT_0x235
                 ; 0016 0427                                                       }
                +
0089b2 5f0f     +SUBI R16 , LOW ( - 1 )
0089b3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0089b4 cfe8      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 0428                                                       break;
0089b5 c01b      	RJMP _0x2C01D7
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C01D9:
0089b6 31e3      	CPI  R30,LOW(0x13)
0089b7 e0a0      	LDI  R26,HIGH(0x13)
0089b8 07fa      	CPC  R31,R26
0089b9 f471      	BRNE _0x2C01DE
0089ba e1e3      	LDI  R30,LOW(19)
0089bb 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
0089bd 940e c515 	CALL SUBOPT_0x2CE
0089bf 940e c51a 	CALL SUBOPT_0x2CF
0089c1 940e c23a 	CALL SUBOPT_0x27D
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
0089c3 efeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 947 ) )
0089c4 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 947 ) )
0089c5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 947 ) )
0089c6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 947 ) )
                 	__POINTD1FN _0x2C0000,947
0089c7 c005      	RJMP _0x2C0279
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C01DE:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
0089c8 e0e0      	LDI  R30,LOW(0)
0089c9 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
0089cb 940e c240 	CALL SUBOPT_0x27E
                 _0x2C0279:
0089cd 940e cec8 	CALL __PUTPARD1
0089cf 940e c03c 	CALL SUBOPT_0x23E
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C01D7:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
0089d1 c015      	RJMP _0x2C01DF
                 _0x2C01D3:
0089d2 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0089d4 30a4      	CPI  R26,LOW(0x4)
0089d5 f48c      	BRGE _0x2C01E0
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
0089d6 940e c4c0 	CALL SUBOPT_0x2C0
0089d8 5fa2      	SUBI R26,LOW(-_entPwd_S0160000000)
0089d9 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
0089da 940e c4ff 	CALL SUBOPT_0x2CA
0089dc f024      	BRLT _0x2C01E1
0089dd 940e c595 	CALL SUBOPT_0x2E3
0089df e0a0      	LDI  R26,LOW(0)
0089e0 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C01E1:
0089e1 940e c50a 	CALL SUBOPT_0x2CC
0089e3 940e c595 	CALL SUBOPT_0x2E3
0089e5 940e c511 	CALL SUBOPT_0x2CD
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C01E0:
                 _0x2C01DF:
                 ; 0016 043A         }
                 _0x2C01C4:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
0089e7 c16e      	RJMP _0x2C01E2
                 _0x2C01C1:
0089e8 91a0 14df 	LDS  R26,_currentPage
0089ea 32a2      	CPI  R26,LOW(0x22)
0089eb f011      	BREQ PC+3
0089ec 940c 8a63 	JMP _0x2C01E3
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
0089ee 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
0089f0 f419      	BRNE _0x2C01E7
0089f1 940e c52d 	CALL SUBOPT_0x2D2
0089f3 c06e      	RJMP _0x2C01E6
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C01E7:
0089f4 30e2      	CPI  R30,LOW(0x2)
0089f5 e0a0      	LDI  R26,HIGH(0x2)
0089f6 07fa      	CPC  R31,R26
0089f7 f481      	BRNE _0x2C01E8
0089f8 91a0 1a0b 	LDS  R26,_cursor_S0160000000
0089fa 30a4      	CPI  R26,LOW(0x4)
0089fb f414      	BRGE _0x2C01E9
0089fc 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C01E9:
0089fe 940e c1f1 	CALL SUBOPT_0x276
008a00 30a5      	CPI  R26,LOW(0x5)
008a01 f01c      	BRLT _0x2C01EA
008a02 e0e0      	LDI  R30,LOW(0)
008a03 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
008a05 940e c4f2 	CALL SUBOPT_0x2C8
008a07 c05a      	RJMP _0x2C01E6
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C01E8:
008a08 30e3      	CPI  R30,LOW(0x3)
008a09 e0a0      	LDI  R26,HIGH(0x3)
008a0a 07fa      	CPC  R31,R26
008a0b f479      	BRNE _0x2C01EB
008a0c 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008a0e 30a4      	CPI  R26,LOW(0x4)
008a0f f414      	BRGE _0x2C01EC
008a10 940e c4ed 	CALL SUBOPT_0x2C7
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C01EC:
008a12 940e c1dd 	CALL SUBOPT_0x274
008a14 f41c      	BRGE _0x2C01ED
008a15 e0e4      	LDI  R30,LOW(4)
008a16 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 _0x2C01ED:
008a18 940e c4f2 	CALL SUBOPT_0x2C8
008a1a c047      	RJMP _0x2C01E6
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C01EB:
008a1b 30e4      	CPI  R30,LOW(0x4)
008a1c e0a0      	LDI  R26,HIGH(0x4)
008a1d 07fa      	CPC  R31,R26
008a1e f011      	BREQ PC+3
008a1f 940c 8a62 	JMP _0x2C01E6
008a21 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008a23 30a4      	CPI  R26,LOW(0x4)
008a24 f541      	BRNE _0x2C01EF
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
008a25 940e c584 	CALL SUBOPT_0x2E0
                +
008a27 01fe     +MOVW R30 , R28
008a28 5be0     +SUBI R30 , LOW ( - 80 )
008a29 4fff     +SBCI R31 , HIGH ( - 80 )
008a2a 9001     +LD R0 , Z +
008a2b 81f0     +LD R31 , Z
008a2c 2de0     +MOV R30 , R0
                 	__GETW1SX 80
008a2d 940e c0b4 	CALL SUBOPT_0x252
008a2f d4ed      	RCALL _recmp
008a30 9730      	SBIW R30,0
008a31 f079      	BREQ _0x2C01F0
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
008a32 e0e1      	LDI  R30,LOW(1)
008a33 93e0 1a0d 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
008a35 e2e3      	LDI  R30,LOW(35)
008a36 940e c20a 	CALL SUBOPT_0x278
008a38 940e c589 	CALL SUBOPT_0x2E1
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
008a3a 940e c584 	CALL SUBOPT_0x2E0
008a3c 940e c51a 	CALL SUBOPT_0x2CF
008a3e 940e 977e 	CALL _memset
                 ; 0016 044B                                     break;
008a40 c021      	RJMP _0x2C01E6
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C01F0:
008a41 e1e5      	LDI  R30,LOW(21)
008a42 940e c20a 	CALL SUBOPT_0x278
008a44 940e c552 	CALL SUBOPT_0x2D7
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
008a46 940e c584 	CALL SUBOPT_0x2E0
008a48 940e c51a 	CALL SUBOPT_0x2CF
008a4a 940e 977e 	CALL _memset
                 ; 0016 0451                                 break;
008a4c c015      	RJMP _0x2C01E6
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C01EF:
008a4d 91a0 1a0b 	LDS  R26,_cursor_S0160000000
008a4f 30a4      	CPI  R26,LOW(0x4)
008a50 f48c      	BRGE _0x2C01F2
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
008a51 940e c4c0 	CALL SUBOPT_0x2C0
008a53 5fa2      	SUBI R26,LOW(-_entPwd_S0160000000)
008a54 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
008a55 940e c4ff 	CALL SUBOPT_0x2CA
008a57 f024      	BRLT _0x2C01F3
008a58 940e c595 	CALL SUBOPT_0x2E3
008a5a e0a0      	LDI  R26,LOW(0)
008a5b 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C01F3:
008a5c 940e c50a 	CALL SUBOPT_0x2CC
008a5e 940e c595 	CALL SUBOPT_0x2E3
008a60 940e c511 	CALL SUBOPT_0x2CD
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C01F2:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C01E6:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
008a62 c0f3      	RJMP _0x2C01F4
                 _0x2C01E3:
008a63 91a0 14df 	LDS  R26,_currentPage
008a65 32a3      	CPI  R26,LOW(0x23)
008a66 f011      	BREQ PC+3
008a67 940c 8aad 	JMP _0x2C01F5
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
008a69 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
008a6b f409      	BRNE _0x2C01F9
008a6c c03f      	RJMP _0x2C01F8
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C01F9:
008a6d 30e2      	CPI  R30,LOW(0x2)
008a6e e0a0      	LDI  R26,HIGH(0x2)
008a6f 07fa      	CPC  R31,R26
008a70 f1d9      	BREQ _0x2C01F8
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
008a71 30e3      	CPI  R30,LOW(0x3)
008a72 e0a0      	LDI  R26,HIGH(0x3)
008a73 07fa      	CPC  R31,R26
008a74 f1b9      	BREQ _0x2C01F8
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
008a75 30e4      	CPI  R30,LOW(0x4)
008a76 e0a0      	LDI  R26,HIGH(0x4)
008a77 07fa      	CPC  R31,R26
008a78 f599      	BRNE _0x2C01F8
008a79 91e0 1a0d 	LDS  R30,_tmpPrevPage_S0160000000
008a7b 940e bff7 	CALL SUBOPT_0x234
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
008a7d f459      	BRNE _0x2C0200
008a7e e0e1      	LDI  R30,LOW(1)
008a7f 93e0 14df 	STS  _currentPage,R30
008a81 e0e3      	LDI  R30,LOW(3)
008a82 93e0 1a0b 	STS  _cursor_S0160000000,R30
                +
008a84 e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
008a85 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
008a86 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
008a87 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
008a88 c01d      	RJMP _0x2C027A
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0200:
008a89 30e2      	CPI  R30,LOW(0x2)
008a8a e0a0      	LDI  R26,HIGH(0x2)
008a8b 07fa      	CPC  R31,R26
008a8c f431      	BRNE _0x2C0201
008a8d e0e2      	LDI  R30,LOW(2)
008a8e 940e c3e0 	CALL SUBOPT_0x2A1
008a90 940e c3ec 	CALL SUBOPT_0x2A3
008a92 c013      	RJMP _0x2C027A
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0201:
008a93 30ee      	CPI  R30,LOW(0xE)
008a94 e0a0      	LDI  R26,HIGH(0xE)
008a95 07fa      	CPC  R31,R26
008a96 f431      	BRNE _0x2C0202
008a97 e0ee      	LDI  R30,LOW(14)
008a98 940e c3e0 	CALL SUBOPT_0x2A1
008a9a 940e c57a 	CALL SUBOPT_0x2DE
008a9c c009      	RJMP _0x2C027A
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0202:
008a9d 31e1      	CPI  R30,LOW(0x11)
008a9e e0a0      	LDI  R26,HIGH(0x11)
008a9f 07fa      	CPC  R31,R26
008aa0 f459      	BRNE _0x2C01FF
008aa1 e1e1      	LDI  R30,LOW(17)
008aa2 940e c3e0 	CALL SUBOPT_0x2A1
008aa4 940e c57f 	CALL SUBOPT_0x2DF
                 _0x2C027A:
008aa6 940e cec8 	CALL __PUTPARD1
008aa8 940e c4d3 	CALL SUBOPT_0x2C3
008aaa 940e c013 	CALL SUBOPT_0x239
                 ; 0016 0469                             }
                 _0x2C01FF:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C01F8:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
008aac c0a9      	RJMP _0x2C0204
                 _0x2C01F5:
008aad 91a0 14df 	LDS  R26,_currentPage
008aaf 32a4      	CPI  R26,LOW(0x24)
008ab0 f019      	BREQ _0x2C0206
008ab1 32a5      	CPI  R26,LOW(0x25)
008ab2 f009      	BREQ _0x2C0206
008ab3 c0a2      	RJMP _0x2C0205
                 _0x2C0206:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
008ab4 940e c1d8 	CALL SUBOPT_0x273
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
008ab6 f409      	BRNE _0x2C020B
008ab7 c09e      	RJMP _0x2C020A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C020B:
008ab8 30e2      	CPI  R30,LOW(0x2)
008ab9 e0a0      	LDI  R26,HIGH(0x2)
008aba 07fa      	CPC  R31,R26
008abb f409      	BRNE _0x2C020C
008abc c099      	RJMP _0x2C020A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C020C:
008abd 30e3      	CPI  R30,LOW(0x3)
008abe e0a0      	LDI  R26,HIGH(0x3)
008abf 07fa      	CPC  R31,R26
008ac0 f409      	BRNE _0x2C020D
008ac1 c094      	RJMP _0x2C020A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C020D:
008ac2 30e4      	CPI  R30,LOW(0x4)
008ac3 e0a0      	LDI  R26,HIGH(0x4)
008ac4 07fa      	CPC  R31,R26
008ac5 f011      	BREQ PC+3
008ac6 940c 8b56 	JMP _0x2C020A
008ac8 940e c58e 	CALL SUBOPT_0x2E2
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
008aca f499      	BRNE _0x2C0212
008acb e0e7      	LDI  R30,LOW(7)
008acc 940e c59b 	CALL SUBOPT_0x2E4
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
008ace 30a8      	CPI  R26,LOW(0x8)
008acf f411      	BRNE _0x2C0213
008ad0 e0e0      	LDI  R30,LOW(0)
008ad1 c005      	RJMP _0x2C027B
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0213:
008ad2 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008ad4 30ad      	CPI  R26,LOW(0xD)
008ad5 f419      	BRNE _0x2C0215
008ad6 e0e1      	LDI  R30,LOW(1)
                 _0x2C027B:
008ad7 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0215:
                +
008ad9 e7e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
008ada e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
008adb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
008adc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
008add c06e      	RJMP _0x2C027C
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0212:
008ade 30ee      	CPI  R30,LOW(0xE)
008adf e0a0      	LDI  R26,HIGH(0xE)
008ae0 07fa      	CPC  R31,R26
008ae1 f431      	BRNE _0x2C0216
008ae2 e0ee      	LDI  R30,LOW(14)
008ae3 940e c3e0 	CALL SUBOPT_0x2A1
008ae5 940e c57a 	CALL SUBOPT_0x2DE
008ae7 c064      	RJMP _0x2C027C
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0216:
008ae8 31e1      	CPI  R30,LOW(0x11)
008ae9 e0a0      	LDI  R26,HIGH(0x11)
008aea 07fa      	CPC  R31,R26
008aeb f489      	BRNE _0x2C0217
008aec e1e1      	LDI  R30,LOW(17)
008aed 940e c59b 	CALL SUBOPT_0x2E4
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
008aef 31a2      	CPI  R26,LOW(0x12)
008af0 f411      	BRNE _0x2C0218
008af1 e0e0      	LDI  R30,LOW(0)
008af2 c005      	RJMP _0x2C027D
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0218:
008af3 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008af5 31a4      	CPI  R26,LOW(0x14)
008af6 f419      	BRNE _0x2C021A
008af7 e0e1      	LDI  R30,LOW(1)
                 _0x2C027D:
008af8 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C021A:
008afa 940e c57f 	CALL SUBOPT_0x2DF
008afc c04f      	RJMP _0x2C027C
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0217:
008afd 31e5      	CPI  R30,LOW(0x15)
008afe e0a0      	LDI  R26,HIGH(0x15)
008aff 07fa      	CPC  R31,R26
008b00 f4c9      	BRNE _0x2C021B
008b01 e1e5      	LDI  R30,LOW(21)
008b02 940e c59b 	CALL SUBOPT_0x2E4
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
008b04 31a6      	CPI  R26,LOW(0x16)
008b05 f411      	BRNE _0x2C021C
008b06 e0e0      	LDI  R30,LOW(0)
008b07 c00b      	RJMP _0x2C027E
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C021C:
008b08 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008b0a 31ab      	CPI  R26,LOW(0x1B)
008b0b f411      	BRNE _0x2C021E
008b0c e0e2      	LDI  R30,LOW(2)
008b0d c005      	RJMP _0x2C027E
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C021E:
008b0e 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008b10 32a0      	CPI  R26,LOW(0x20)
008b11 f419      	BRNE _0x2C0220
008b12 e0e3      	LDI  R30,LOW(3)
                 _0x2C027E:
008b13 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0220:
                +
008b15 ede1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
008b16 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
008b17 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
008b18 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
008b19 c032      	RJMP _0x2C027C
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C021B:
008b1a 31e8      	CPI  R30,LOW(0x18)
008b1b e0a0      	LDI  R26,HIGH(0x18)
008b1c 07fa      	CPC  R31,R26
008b1d f461      	BRNE _0x2C0221
008b1e e1e8      	LDI  R30,LOW(24)
008b1f 940e c20a 	CALL SUBOPT_0x278
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
008b21 940e c546 	CALL SUBOPT_0x2D5
008b23 91e0 1a56 	LDS  R30,_prb2_S0160000000
008b25 e0f0      	LDI  R31,0
008b26 9631      	ADIW R30,1
008b27 940e cdbd 	CALL __CWD1
008b29 c028      	RJMP _0x2C027F
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0221:
008b2a 31eb      	CPI  R30,LOW(0x1B)
008b2b e0a0      	LDI  R26,HIGH(0x1B)
008b2c 07fa      	CPC  R31,R26
008b2d f541      	BRNE _0x2C0211
008b2e e1eb      	LDI  R30,LOW(27)
008b2f 940e c59b 	CALL SUBOPT_0x2E4
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
008b31 31ac      	CPI  R26,LOW(0x1C)
008b32 f411      	BRNE _0x2C0223
008b33 e0e0      	LDI  R30,LOW(0)
008b34 c011      	RJMP _0x2C0280
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0223:
008b35 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008b37 31ad      	CPI  R26,LOW(0x1D)
008b38 f411      	BRNE _0x2C0225
008b39 e0e1      	LDI  R30,LOW(1)
008b3a c00b      	RJMP _0x2C0280
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0225:
008b3b 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008b3d 31ae      	CPI  R26,LOW(0x1E)
008b3e f411      	BRNE _0x2C0227
008b3f e0e2      	LDI  R30,LOW(2)
008b40 c005      	RJMP _0x2C0280
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0227:
008b41 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
008b43 31af      	CPI  R26,LOW(0x1F)
008b44 f419      	BRNE _0x2C0229
008b45 e0e3      	LDI  R30,LOW(3)
                 _0x2C0280:
008b46 93e0 1a0b 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0229:
                +
008b48 eeef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
008b49 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
008b4a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
008b4b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C027C:
008b4c 940e cec8 	CALL __PUTPARD1
008b4e 91e0 1a0b 	LDS  R30,_cursor_S0160000000
008b50 940e cdb7 	CALL __CBD1
                 _0x2C027F:
008b52 940e cec8 	CALL __PUTPARD1
008b54 940e c013 	CALL SUBOPT_0x239
                 ; 0016 048D                             }
                 _0x2C0211:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C020A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0205:
                 _0x2C0204:
                 _0x2C01F4:
                 _0x2C01E2:
                 _0x2C01C0:
                 _0x2C01B7:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
008b56 940e cf3f 	CALL __LOADLOCR6
008b58 96ef      	ADIW R28,63
008b59 9668      	ADIW R28,24
008b5a 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
008b5b 93ba      	ST   -Y,R27
008b5c 93aa      	ST   -Y,R26
008b5d 9764      	SBIW R28,20
008b5e e184      	LDI  R24,20
008b5f e0a0      	LDI  R26,LOW(0)
008b60 e0b0      	LDI  R27,HIGH(0)
008b61 e3e4      	LDI  R30,LOW(_0x2C022A*2)
008b62 e5fa      	LDI  R31,HIGH(_0x2C022A*2)
008b63 e060      	LDI  R22,BYTE3(_0x2C022A*2)
008b64 940e cf46 	CALL __INITLOCB
008b66 940e bf95 	CALL SUBOPT_0x224
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
008b68 e020     +LDI R18 , LOW ( 0 )
008b69 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
008b6a 8da8      	LDD  R26,Y+24
008b6b 8db9      	LDD  R27,Y+24+1
008b6c e1ed      	LDI  R30,LOW(29)
008b6d 940e cdfe 	CALL __MULB1W2U
008b6f 54e2      	SUBI R30,LOW(-_sensor_config)
008b70 4efe      	SBCI R31,HIGH(-_sensor_config)
008b71 01df      	MOVW R26,R30
008b72 940e c5a0 	CALL SUBOPT_0x2E5
008b74 01de      	MOVW R26,R28
008b75 9656      	ADIW R26,22
008b76 d0b0      	RCALL _get_current_sampling
008b77 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
008b78 2311      	TST  R17
008b79 f42a      	BRPL _0x2C022B
                 ; 0016 04A8         val[0] = 0;
008b7a e0e0      	LDI  R30,LOW(0)
008b7b 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
008b7c 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
008b7d 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
008b7e 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C022B:
                +
008b7f e020     +LDI R18 , LOW ( 0 )
008b80 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
008b81 89ac      	LDD  R26,Y+20
008b82 e6e4      	LDI  R30,LOW(100)
008b83 02ea      	MULS R30,R26
008b84 01f0      	MOVW R30,R0
                +
008b85 0f2e     +ADD R18 , R30
008b86 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
008b87 89ad      	LDD  R26,Y+21
008b88 e0ea      	LDI  R30,LOW(10)
008b89 02ea      	MULS R30,R26
008b8a 01f0      	MOVW R30,R0
                +
008b8b 0f2e     +ADD R18 , R30
008b8c 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
008b8d 89ee      	LDD  R30,Y+22
008b8e e0f0      	LDI  R31,0
008b8f fde7      	SBRC R30,7
008b90 efff      	SER  R31
                +
008b91 0f2e     +ADD R18 , R30
008b92 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
008b93 940e b491 	CALL SUBOPT_0x5A
008b95 e0e0      	LDI  R30,LOW(0)
008b96 93ea      	ST   -Y,R30
008b97 940e bdcc 	CALL SUBOPT_0x1D9
008b99 940e 977e 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
008b9b ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
008b9c e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
008b9d 8da8      	LDD  R26,Y+24
008b9e 8db9      	LDD  R27,Y+24+1
008b9f 0fae      	ADD  R26,R30
008ba0 1fbf      	ADC  R27,R31
008ba1 91ac      	LD   R26,X
008ba2 30a1      	CPI  R26,LOW(0x1)
008ba3 f439      	BRNE _0x2C022C
008ba4 940e b491 	CALL SUBOPT_0x5A
                +
008ba6 efee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
008ba7 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
008ba8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
008ba9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
008baa c006      	RJMP _0x2C0281
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C022C:
008bab 940e b491 	CALL SUBOPT_0x5A
                +
008bad e0e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 954 ) )
008bae e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 954 ) )
008baf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 954 ) )
008bb0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 954 ) )
                 	__POINTD1FN _0x2C0000,954
                 _0x2C0281:
008bb1 940e cec8 	CALL __PUTPARD1
008bb3 940e c27d 	CALL SUBOPT_0x286
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
008bb5 01fe      	MOVW R30,R28
008bb6 9634      	ADIW R30,4
008bb7 940e b84f 	CALL SUBOPT_0xF1
008bb9 940e bdcc 	CALL SUBOPT_0x1D9
008bbb 940e 977e 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
008bbd 8da8      	LDD  R26,Y+24
008bbe 8db9      	LDD  R27,Y+24+1
008bbf e1ed      	LDI  R30,LOW(29)
008bc0 940e cdfe 	CALL __MULB1W2U
                +
008bc2 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
008bc3 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
008bc4 81a0      	LD   R26,Z
008bc5 30a1      	CPI  R26,LOW(0x1)
008bc6 f449      	BRNE _0x2C022E
008bc7 01fe      	MOVW R30,R28
008bc8 9634      	ADIW R30,4
008bc9 93fa      	ST   -Y,R31
008bca 93ea      	ST   -Y,R30
                +
008bcb e0e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 958 ) )
008bcc e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 958 ) )
008bcd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 958 ) )
008bce e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 958 ) )
                 	__POINTD1FN _0x2C0000,958
008bcf c008      	RJMP _0x2C0282
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C022E:
008bd0 01fe      	MOVW R30,R28
008bd1 9634      	ADIW R30,4
008bd2 93fa      	ST   -Y,R31
008bd3 93ea      	ST   -Y,R30
                +
008bd4 e0ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 965 ) )
008bd5 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 965 ) )
008bd6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 965 ) )
008bd7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 965 ) )
                 	__POINTD1FN _0x2C0000,965
                 _0x2C0282:
008bd8 940e cec8 	CALL __PUTPARD1
008bda 940e c27d 	CALL SUBOPT_0x286
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
008bdc e1e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 973 ) )
008bdd e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 973 ) )
008bde e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 973 ) )
008bdf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 973 ) )
                 	__POINTD1FN _0x2C0000,973
008be0 940e b83c 	CALL SUBOPT_0xED
008be2 940e c041 	CALL SUBOPT_0x23F
008be4 940e c5a5 	CALL SUBOPT_0x2E6
008be6 01fe      	MOVW R30,R28
008be7 967c      	ADIW R30,28
008be8 940e b388 	CALL SUBOPT_0x34
008bea 01fe      	MOVW R30,R28
008beb 9678      	ADIW R30,24
008bec 940e b388 	CALL SUBOPT_0x34
008bee 940e c5aa 	CALL SUBOPT_0x2E7
008bf0 a9ac      	LDD  R26,Y+52
008bf1 a9bd      	LDD  R27,Y+52+1
008bf2 940e bf50 	CALL SUBOPT_0x21B
008bf4 940e c5b3 	CALL SUBOPT_0x2E8
008bf6 940e c5be 	CALL SUBOPT_0x2E9
008bf8 940e c5c7 	CALL SUBOPT_0x2EA
008bfa 940e c5ce 	CALL SUBOPT_0x2EB
008bfc e28c      	LDI  R24,44
008bfd 940e 9245 	CALL _printDebug
008bff 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
008c00 e2e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
008c01 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
008c02 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
008c03 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
008c04 940e b83c 	CALL SUBOPT_0xED
008c06 940e c041 	CALL SUBOPT_0x23F
008c08 940e c5a5 	CALL SUBOPT_0x2E6
008c0a 01fe      	MOVW R30,R28
008c0b 967c      	ADIW R30,28
008c0c 940e b388 	CALL SUBOPT_0x34
008c0e 01fe      	MOVW R30,R28
008c0f 9678      	ADIW R30,24
008c10 940e b388 	CALL SUBOPT_0x34
008c12 940e c5aa 	CALL SUBOPT_0x2E7
008c14 a9ac      	LDD  R26,Y+52
008c15 a9bd      	LDD  R27,Y+52+1
008c16 940e bf50 	CALL SUBOPT_0x21B
008c18 940e c5b3 	CALL SUBOPT_0x2E8
008c1a 940e c5be 	CALL SUBOPT_0x2E9
008c1c 940e c5c7 	CALL SUBOPT_0x2EA
008c1e 940e c5ce 	CALL SUBOPT_0x2EB
008c20 e28c      	LDI  R24,44
008c21 940e 75ba 	CALL _printOLED
008c23 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
008c24 940e cf41 	CALL __LOADLOCR4
008c26 c159      	RJMP _0x20E0036
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
008c27 940e c5dd 	CALL SUBOPT_0x2EC
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
008c29 e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1034 ) )
008c2a e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1034 ) )
008c2b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1034 ) )
008c2c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1034 ) )
                 	__POINTD1FN _0x2C0000,1034
008c2d 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
008c2f 85aa      	LDD  R26,Y+10
008c30 85bb      	LDD  R27,Y+10+1
008c31 e1e0      	LDI  R30,LOW(3600)
008c32 e0fe      	LDI  R31,HIGH(3600)
008c33 940e ce1c 	CALL __DIVW21U
008c35 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
008c36 85aa      	LDD  R26,Y+10
008c37 85bb      	LDD  R27,Y+10+1
008c38 e1e0      	LDI  R30,LOW(3600)
008c39 e0fe      	LDI  R31,HIGH(3600)
008c3a 940e ce65 	CALL __MODW21U
008c3c 83ee      	STD  Y+6,R30
008c3d 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
008c3e 2400      	CLR  R0
008c3f 1604      	CP   R0,R20
008c40 0605      	CPC  R0,R21
008c41 f440      	BRSH _0x2C0231
                +
008c42 3e48     +CPI R20 , LOW ( 1000 )
008c43 e0e3     +LDI R30 , HIGH ( 1000 )
008c44 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
008c45 f420      	BRSH _0x2C0231
008c46 81ae      	LDD  R26,Y+6
008c47 81bf      	LDD  R27,Y+6+1
008c48 9710      	SBIW R26,0
008c49 f009      	BREQ _0x2C0232
                 _0x2C0231:
008c4a c00b      	RJMP _0x2C0230
                 _0x2C0232:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
008c4b e8e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1082 ) )
008c4c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1082 ) )
008c4d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1082 ) )
008c4e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1082 ) )
                 	__POINTD1FN _0x2C0000,1082
008c4f 940e c5e3 	CALL SUBOPT_0x2ED
008c51 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
008c53 940e c5e8 	CALL SUBOPT_0x2EE
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
008c55 c0b8      	RJMP _0x20E0037
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0230:
008c56 85aa      	LDD  R26,Y+10
008c57 85bb      	LDD  R27,Y+10+1
008c58 e3ec      	LDI  R30,LOW(60)
008c59 e0f0      	LDI  R31,HIGH(60)
008c5a 940e ce1c 	CALL __DIVW21U
008c5c 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
008c5d 85aa      	LDD  R26,Y+10
008c5e 85bb      	LDD  R27,Y+10+1
008c5f e3ec      	LDI  R30,LOW(60)
008c60 e0f0      	LDI  R31,HIGH(60)
008c61 940e ce65 	CALL __MODW21U
008c63 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
008c64 2400      	CLR  R0
008c65 1600      	CP   R0,R16
008c66 0601      	CPC  R0,R17
008c67 f440      	BRSH _0x2C0234
                +
008c68 3e08     +CPI R16 , LOW ( 1000 )
008c69 e0e3     +LDI R30 , HIGH ( 1000 )
008c6a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
008c6b f420      	BRSH _0x2C0234
008c6c 2400      	CLR  R0
008c6d 1602      	CP   R0,R18
008c6e 0603      	CPC  R0,R19
008c6f f009      	BREQ _0x2C0235
                 _0x2C0234:
008c70 c00b      	RJMP _0x2C0233
                 _0x2C0235:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
008c71 eae2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1114 ) )
008c72 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1114 ) )
008c73 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1114 ) )
008c74 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1114 ) )
                 	__POINTD1FN _0x2C0000,1114
008c75 940e c614 	CALL SUBOPT_0x2EF
008c77 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
008c79 940e c619 	CALL SUBOPT_0x2F0
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
008c7b c092      	RJMP _0x20E0037
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0233:
008c7c 85aa      	LDD  R26,Y+10
008c7d 85bb      	LDD  R27,Y+10+1
008c7e 3ea8      	CPI  R26,LOW(0x3E8)
008c7f e0e3      	LDI  R30,HIGH(0x3E8)
008c80 07be      	CPC  R27,R30
008c81 f5a8      	BRSH _0x2C0236
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
008c82 ece3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1147 ) )
008c83 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1147 ) )
008c84 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1147 ) )
008c85 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1147 ) )
                 	__POINTD1FN _0x2C0000,1147
008c86 940e cec8 	CALL __PUTPARD1
008c88 85ee      	LDD  R30,Y+14
008c89 85ff      	LDD  R31,Y+14+1
008c8a 940e b388 	CALL SUBOPT_0x34
008c8c 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
008c8e 940e c645 	CALL SUBOPT_0x2F1
008c90 940e ce1c 	CALL __DIVW21U
008c92 85a8      	LDD  R26,Y+8
008c93 85b9      	LDD  R27,Y+8+1
008c94 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
008c95 940e c645 	CALL SUBOPT_0x2F1
008c97 940e ce65 	CALL __MODW21U
008c99 01df      	MOVW R26,R30
008c9a e0ea      	LDI  R30,LOW(10)
008c9b e0f0      	LDI  R31,HIGH(10)
008c9c 940e ce1c 	CALL __DIVW21U
                +
008c9e 85a8     +LDD R26 , Y + 8
008c9f 85b9     +LDD R27 , Y + 8 + 1
008ca0 9611     +ADIW R26 , 1
008ca1 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
008ca2 940e c645 	CALL SUBOPT_0x2F1
008ca4 940e ce65 	CALL __MODW21U
008ca6 01df      	MOVW R26,R30
008ca7 e0ea      	LDI  R30,LOW(10)
008ca8 e0f0      	LDI  R31,HIGH(10)
008ca9 940e ce65 	CALL __MODW21U
                +
008cab 85a8     +LDD R26 , Y + 8
008cac 85b9     +LDD R27 , Y + 8 + 1
008cad 9612     +ADIW R26 , 2
008cae 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
008caf 85a8      	LDD  R26,Y+8
008cb0 85b9      	LDD  R27,Y+8+1
008cb1 9613      	ADIW R26,3
008cb2 e0e0      	LDI  R30,LOW(0)
008cb3 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
008cb4 e0e0      	LDI  R30,LOW(0)
008cb5 e0f0      	LDI  R31,HIGH(0)
008cb6 c057      	RJMP _0x20E0037
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0236:
                +
008cb7 3e08     +CPI R16 , LOW ( 1000 )
008cb8 e0e3     +LDI R30 , HIGH ( 1000 )
008cb9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
008cba f4d0      	BRSH _0x2C0237
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
008cbb eee4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1180 ) )
008cbc e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1180 ) )
008cbd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1180 ) )
008cbe e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1180 ) )
                 	__POINTD1FN _0x2C0000,1180
008cbf 940e c614 	CALL SUBOPT_0x2EF
008cc1 01f9      	MOVW R30,R18
008cc2 940e b9df 	CALL SUBOPT_0x138
                 ; 0016 04FC         if(min_c > 30){
                +
008cc4 312f     +CPI R18 , LOW ( 31 )
008cc5 e0e0     +LDI R30 , HIGH ( 31 )
008cc6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
008cc7 f010      	BRLO _0x2C0238
                 ; 0016 04FD             min++;
                +
008cc8 5f0f     +SUBI R16 , LOW ( - 1 )
008cc9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0238:
                +
008cca e0ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1220 ) )
008ccb e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1220 ) )
008ccc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1220 ) )
008ccd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1220 ) )
                 	__POINTD1FN _0x2C0000,1220
008cce 940e c614 	CALL SUBOPT_0x2EF
008cd0 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
008cd2 940e c619 	CALL SUBOPT_0x2F0
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
008cd4 c039      	RJMP _0x20E0037
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0237:
                +
008cd5 3e48     +CPI R20 , LOW ( 1000 )
008cd6 e0e3     +LDI R30 , HIGH ( 1000 )
008cd7 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
008cd8 f568      	BRSH _0x2C0239
                 ; 0016 0508         min   = hr_c / 60;
008cd9 81ae      	LDD  R26,Y+6
008cda 81bf      	LDD  R27,Y+6+1
008cdb e3ec      	LDI  R30,LOW(60)
008cdc e0f0      	LDI  R31,HIGH(60)
008cdd 940e ce1c 	CALL __DIVW21U
008cdf 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
008ce0 81ae      	LDD  R26,Y+6
008ce1 81bf      	LDD  R27,Y+6+1
008ce2 e3ec      	LDI  R30,LOW(60)
008ce3 e0f0      	LDI  R31,HIGH(60)
008ce4 940e ce65 	CALL __MODW21U
008ce6 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
008ce7 e1ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1234 ) )
008ce8 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1234 ) )
008ce9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1234 ) )
008cea e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1234 ) )
                 	__POINTD1FN _0x2C0000,1234
008ceb 940e c5e3 	CALL SUBOPT_0x2ED
008ced 01f8      	MOVW R30,R16
008cee 940e b388 	CALL SUBOPT_0x34
008cf0 01f9      	MOVW R30,R18
008cf1 940e b388 	CALL SUBOPT_0x34
008cf3 940e b4db 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
008cf5 310f     +CPI R16 , LOW ( 31 )
008cf6 e0e0     +LDI R30 , HIGH ( 31 )
008cf7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
008cf8 f010      	BRLO _0x2C023A
                 ; 0016 050C             hr++;
                +
008cf9 5f4f     +SUBI R20 , LOW ( - 1 )
008cfa 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C023A:
                +
008cfb e4e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1281 ) )
008cfc e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1281 ) )
008cfd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1281 ) )
008cfe e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1281 ) )
                 	__POINTD1FN _0x2C0000,1281
008cff 940e c5e3 	CALL SUBOPT_0x2ED
008d01 940e b29d 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
008d03 940e c5e8 	CALL SUBOPT_0x2EE
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
008d05 c008      	RJMP _0x20E0037
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0239:
                +
008d06 e5e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1294 ) )
008d07 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1294 ) )
008d08 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1294 ) )
008d09 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1294 ) )
                 	__POINTD1FN _0x2C0000,1294
008d0a 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
008d0c efef      	LDI  R30,LOW(65535)
008d0d efff      	LDI  R31,HIGH(65535)
                 _0x20E0037:
008d0e 940e cf3f 	CALL __LOADLOCR6
008d10 962c      	ADIW R28,12
008d11 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
008d12 93ba      	ST   -Y,R27
008d13 93aa      	ST   -Y,R26
008d14 9762      	SBIW R28,18
008d15 940e cf38 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
008d17 940e c64a 	CALL SUBOPT_0x2F2
008d19 01df      	MOVW R26,R30
008d1a 01cb      	MOVW R24,R22
008d1b 940e b679 	CALL SUBOPT_0xA1
008d1d 940e cd14 	CALL __CMPF12
008d1f f009      	BREQ PC+2
008d20 f410      	BRCC PC+3
008d21 940c 8d26 	JMP  _0x2C023B
                 ; 0016 0526         return -1;
008d23 efef      	LDI  R30,LOW(65535)
008d24 efff      	LDI  R31,HIGH(65535)
008d25 c058      	RJMP _0x20E0035
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C023B:
008d26 940e c64a 	CALL SUBOPT_0x2F2
008d28 940e bec5 	CALL SUBOPT_0x203
                 ; 0016 052A     ftoa(vref,2,valTmp);
008d2a 940e c64f 	CALL SUBOPT_0x2F3
008d2c e0e2      	LDI  R30,LOW(2)
008d2d 93ea      	ST   -Y,R30
008d2e 01de      	MOVW R26,R28
008d2f 9653      	ADIW R26,19
008d30 940e 9497 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
008d32 01de      	MOVW R26,R28
008d33 961e      	ADIW R26,14
008d34 940e 97c5 	CALL _strlen
008d36 30e4      	CPI  R30,LOW(0x4)
008d37 e0a0      	LDI  R26,HIGH(0x4)
008d38 07fa      	CPC  R31,R26
008d39 f019      	BREQ _0x2C023C
008d3a efef      	LDI  R30,LOW(65535)
008d3b efff      	LDI  R31,HIGH(65535)
008d3c c041      	RJMP _0x20E0035
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C023C:
                +
008d3d e7eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1331 ) )
008d3e e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1331 ) )
008d3f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1331 ) )
008d40 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1331 ) )
                 	__POINTD1FN _0x2C0000,1331
008d41 940e cec8 	CALL __PUTPARD1
008d43 940e c64a 	CALL SUBOPT_0x2F2
008d45 940e cec8 	CALL __PUTPARD1
008d47 01fe      	MOVW R30,R28
008d48 9676      	ADIW R30,22
008d49 940e b9df 	CALL SUBOPT_0x138
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
008d4b 85ee      	LDD  R30,Y+14
008d4c 53e0      	SUBI R30,LOW(48)
008d4d 8da8      	LDD  R26,Y+24
008d4e 8db9      	LDD  R27,Y+24+1
008d4f 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
008d50 89e8      	LDD  R30,Y+16
008d51 53e0      	SUBI R30,LOW(48)
                +
008d52 8da8     +LDD R26 , Y + 24
008d53 8db9     +LDD R27 , Y + 24 + 1
008d54 9611     +ADIW R26 , 1
008d55 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
008d56 89e9      	LDD  R30,Y+17
008d57 53e0      	SUBI R30,LOW(48)
                +
008d58 8da8     +LDD R26 , Y + 24
008d59 8db9     +LDD R27 , Y + 24 + 1
008d5a 9612     +ADIW R26 , 2
008d5b 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
008d5c eae5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1373 ) )
008d5d e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1373 ) )
008d5e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1373 ) )
008d5f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1373 ) )
                 	__POINTD1FN _0x2C0000,1373
008d60 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
008d62 e000     +LDI R16 , LOW ( 0 )
008d63 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C023E:
                +
008d64 3003     +CPI R16 , LOW ( 3 )
008d65 e0e0     +LDI R30 , HIGH ( 3 )
008d66 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
008d67 f474      	BRGE _0x2C023F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
008d68 ece0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1400 ) )
008d69 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1400 ) )
008d6a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1400 ) )
008d6b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1400 ) )
                 	__POINTD1FN _0x2C0000,1400
008d6c 940e cec8 	CALL __PUTPARD1
008d6e 01f8      	MOVW R30,R16
008d6f 8dac      	LDD  R26,Y+28
008d70 8dbd      	LDD  R27,Y+28+1
008d71 940e bb9a 	CALL SUBOPT_0x17B
                 ; 0016 0542     }
                +
008d73 5f0f     +SUBI R16 , LOW ( - 1 )
008d74 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008d75 cfee      	RJMP _0x2C023E
                 _0x2C023F:
                 ; 0016 0543     printDebug("\r\n");
                +
008d76 e0eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
008d77 e5fb     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
008d78 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
008d79 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
008d7a 940e b22a 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
008d7c e0e0      	LDI  R30,LOW(0)
008d7d e0f0      	LDI  R31,HIGH(0)
                 _0x20E0035:
008d7e 940e cf3f 	CALL __LOADLOCR6
                 _0x20E0036:
008d80 966a      	ADIW R28,26
008d81 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
008d82 93ba      ; 0016 0551     offset = 7;
008d83 93aa      	ST   -Y,R27
008d84 9760      	ST   -Y,R26
008d85 940e cf3a 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
008d87 e027     +LDI R18 , LOW ( 7 )
008d88 e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
008d89 0189      	MOVW R16,R18
                 _0x2C0241:
008d8a 940e c654 	CALL SUBOPT_0x2F4
008d8c f554      	BRGE _0x2C0242
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
008d8d 940e c659 	CALL SUBOPT_0x2F5
008d8f 0fea      	ADD  R30,R26
008d90 1ffb      	ADC  R31,R27
008d91 93ff      	PUSH R31
008d92 93ef      	PUSH R30
008d93 940e c65f 	CALL SUBOPT_0x2F6
008d95 93ef      	PUSH R30
008d96 940e c66d 	CALL SUBOPT_0x2F7
008d98 91af      	POP  R26
008d99 0fea      	ADD  R30,R26
008d9a 91af      	POP  R26
008d9b 91bf      	POP  R27
008d9c 940e c678 	CALL SUBOPT_0x2F8
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
008d9e 940e c681 	CALL SUBOPT_0x2F9
008da0 940e c687 	CALL SUBOPT_0x2FA
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
008da2 9631      	ADIW R30,1
008da3 940e c681 	CALL SUBOPT_0x2F9
008da5 940e c692 	CALL SUBOPT_0x2FB
008da7 940e be83 	CALL SUBOPT_0x1F7
008da9 940e c697 	CALL SUBOPT_0x2FC
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
008dab 9632      	ADIW R30,2
008dac 940e c681 	CALL SUBOPT_0x2F9
008dae 940e c692 	CALL SUBOPT_0x2FB
008db0 940e bf08 	CALL SUBOPT_0x210
008db2 01db      	MOVW R26,R22
008db3 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
008db4 5f0f     +SUBI R16 , LOW ( - 1 )
008db5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008db6 cfd3      	RJMP _0x2C0241
                 _0x2C0242:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
008db7 e02b     +LDI R18 , LOW ( 11 )
008db8 e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
008db9 0189      	MOVW R16,R18
                 _0x2C0244:
008dba 940e c654 	CALL SUBOPT_0x2F4
008dbc f554      	BRGE _0x2C0245
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
008dbd 940e c69e 	CALL SUBOPT_0x2FD
008dbf 0fea      	ADD  R30,R26
008dc0 1ffb      	ADC  R31,R27
008dc1 93ff      	PUSH R31
008dc2 93ef      	PUSH R30
008dc3 940e c65f 	CALL SUBOPT_0x2F6
008dc5 93ef      	PUSH R30
008dc6 940e c66d 	CALL SUBOPT_0x2F7
008dc8 91af      	POP  R26
008dc9 0fea      	ADD  R30,R26
008dca 91af      	POP  R26
008dcb 91bf      	POP  R27
008dcc 940e c678 	CALL SUBOPT_0x2F8
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
008dce 940e c6a4 	CALL SUBOPT_0x2FE
008dd0 940e c687 	CALL SUBOPT_0x2FA
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
008dd2 9631      	ADIW R30,1
008dd3 940e c6a4 	CALL SUBOPT_0x2FE
008dd5 940e c692 	CALL SUBOPT_0x2FB
008dd7 940e be83 	CALL SUBOPT_0x1F7
008dd9 940e c697 	CALL SUBOPT_0x2FC
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
008ddb 9632      	ADIW R30,2
008ddc 940e c6a4 	CALL SUBOPT_0x2FE
008dde 940e c692 	CALL SUBOPT_0x2FB
008de0 940e bf08 	CALL SUBOPT_0x210
008de2 01db      	MOVW R26,R22
008de3 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
008de4 5f0f     +SUBI R16 , LOW ( - 1 )
008de5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008de6 cfd3      	RJMP _0x2C0244
                 _0x2C0245:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
008de7 e02f     +LDI R18 , LOW ( 15 )
008de8 e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
008de9 0189      	MOVW R16,R18
                 _0x2C0247:
008dea 940e c654 	CALL SUBOPT_0x2F4
008dec f554      	BRGE _0x2C0248
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
008ded 940e c6aa 	CALL SUBOPT_0x2FF
008def 0fea      	ADD  R30,R26
008df0 1ffb      	ADC  R31,R27
008df1 93ff      	PUSH R31
008df2 93ef      	PUSH R30
008df3 940e c65f 	CALL SUBOPT_0x2F6
008df5 93ef      	PUSH R30
008df6 940e c66d 	CALL SUBOPT_0x2F7
008df8 91af      	POP  R26
008df9 0fea      	ADD  R30,R26
008dfa 91af      	POP  R26
008dfb 91bf      	POP  R27
008dfc 940e c678 	CALL SUBOPT_0x2F8
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
008dfe 940e c6b0 	CALL SUBOPT_0x300
008e00 940e c687 	CALL SUBOPT_0x2FA
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
008e02 9631      	ADIW R30,1
008e03 940e c6b0 	CALL SUBOPT_0x300
008e05 940e c692 	CALL SUBOPT_0x2FB
008e07 940e be83 	CALL SUBOPT_0x1F7
008e09 940e c697 	CALL SUBOPT_0x2FC
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
008e0b 9632      	ADIW R30,2
008e0c 940e c6b0 	CALL SUBOPT_0x300
008e0e 940e c692 	CALL SUBOPT_0x2FB
008e10 940e bf08 	CALL SUBOPT_0x210
008e12 01db      	MOVW R26,R22
008e13 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
008e14 5f0f     +SUBI R16 , LOW ( - 1 )
008e15 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008e16 cfd3      	RJMP _0x2C0247
                 _0x2C0248:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
008e17 e125     +LDI R18 , LOW ( 21 )
008e18 e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
008e19 0189      	MOVW R16,R18
                 _0x2C024A:
008e1a 940e c654 	CALL SUBOPT_0x2F4
008e1c f5ac      	BRGE _0x2C024B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
008e1d 01f8      	MOVW R30,R16
008e1e 1be2      	SUB  R30,R18
008e1f 0bf3      	SBC  R31,R19
008e20 01de      	MOVW R26,R28
008e21 9614      	ADIW R26,4
008e22 0fea      	ADD  R30,R26
008e23 1ffb      	ADC  R31,R27
008e24 93ff      	PUSH R31
008e25 93ef      	PUSH R30
008e26 940e c65f 	CALL SUBOPT_0x2F6
008e28 93ef      	PUSH R30
008e29 940e c66d 	CALL SUBOPT_0x2F7
008e2b 91af      	POP  R26
008e2c 0fea      	ADD  R30,R26
008e2d 91af      	POP  R26
008e2e 91bf      	POP  R27
008e2f 940e c678 	CALL SUBOPT_0x2F8
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
008e31 940e c6b6 	CALL SUBOPT_0x301
008e33 940e c6c0 	CALL SUBOPT_0x302
008e35 01df      	MOVW R26,R30
008e36 e6e4      	LDI  R30,LOW(100)
008e37 e0f0      	LDI  R31,HIGH(100)
008e38 940e ce2f 	CALL __DIVW21
008e3a 01db      	MOVW R26,R22
008e3b 940e c678 	CALL SUBOPT_0x2F8
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
008e3d 9631      	ADIW R30,1
008e3e 940e c6b6 	CALL SUBOPT_0x301
008e40 91ac      	LD   R26,X
008e41 27bb      	CLR  R27
008e42 940e be83 	CALL SUBOPT_0x1F7
008e44 940e c697 	CALL SUBOPT_0x2FC
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
008e46 9632      	ADIW R30,2
008e47 940e c6b6 	CALL SUBOPT_0x301
008e49 91ac      	LD   R26,X
008e4a 27bb      	CLR  R27
008e4b 940e bf08 	CALL SUBOPT_0x210
008e4d 01db      	MOVW R26,R22
008e4e 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
008e4f 5f0f     +SUBI R16 , LOW ( - 1 )
008e50 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008e51 cfc8      	RJMP _0x2C024A
                 _0x2C024B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
008e52 ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1405 ) )
008e53 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1405 ) )
008e54 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1405 ) )
008e55 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1405 ) )
                 	__POINTD1FN _0x2C0000,1405
008e56 940e cec8 	CALL __PUTPARD1
008e58 89ec      	LDD  R30,Y+20
008e59 940e b4d5 	CALL SUBOPT_0x65
008e5b 8de9      	LDD  R30,Y+25
008e5c 940e b4d5 	CALL SUBOPT_0x65
008e5e 8dee      	LDD  R30,Y+30
008e5f 940e b4d5 	CALL SUBOPT_0x65
008e61 a1eb      	LDD  R30,Y+35
008e62 940e b4d5 	CALL SUBOPT_0x65
008e64 940e bab6 	CALL SUBOPT_0x159
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
008e66 eeea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1442 ) )
008e67 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1442 ) )
008e68 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1442 ) )
008e69 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1442 ) )
                 	__POINTD1FN _0x2C0000,1442
008e6a 940e cec8 	CALL __PUTPARD1
008e6c 89e8      	LDD  R30,Y+16
008e6d 940e b4d5 	CALL SUBOPT_0x65
008e6f 89ed      	LDD  R30,Y+21
008e70 940e b4d5 	CALL SUBOPT_0x65
008e72 8dea      	LDD  R30,Y+26
008e73 940e b4d5 	CALL SUBOPT_0x65
008e75 8def      	LDD  R30,Y+31
008e76 940e b4d5 	CALL SUBOPT_0x65
008e78 940e bab6 	CALL SUBOPT_0x159
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
008e7a e0ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1479 ) )
008e7b e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1479 ) )
008e7c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1479 ) )
008e7d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1479 ) )
                 	__POINTD1FN _0x2C0000,1479
008e7e 940e be40 	CALL SUBOPT_0x1F0
008e80 89e9      	LDD  R30,Y+17
008e81 940e b4d5 	CALL SUBOPT_0x65
008e83 89ee      	LDD  R30,Y+22
008e84 940e b4d5 	CALL SUBOPT_0x65
008e86 8deb      	LDD  R30,Y+27
008e87 940e b4d5 	CALL SUBOPT_0x65
008e89 940e bab6 	CALL SUBOPT_0x159
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
008e8b e3e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1516 ) )
008e8c e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1516 ) )
008e8d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1516 ) )
008e8e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1516 ) )
                 	__POINTD1FN _0x2C0000,1516
008e8f 940e cec8 	CALL __PUTPARD1
008e91 85e8      	LDD  R30,Y+8
008e92 940e b4d5 	CALL SUBOPT_0x65
008e94 85ed      	LDD  R30,Y+13
008e95 940e b4d5 	CALL SUBOPT_0x65
008e97 89ea      	LDD  R30,Y+18
008e98 940e b4d5 	CALL SUBOPT_0x65
008e9a 89ef      	LDD  R30,Y+23
008e9b 940e b4d5 	CALL SUBOPT_0x65
008e9d 940e bab6 	CALL SUBOPT_0x159
                 ; 0016 0575 
                 ; 0016 0576     return 0;
008e9f 940e ba33 	CALL SUBOPT_0x147
008ea1 966e      	ADIW R28,30
008ea2 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
008ea3 940e b835 ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
008ea5 930a      	CALL SUBOPT_0xEB
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
008ea6 81ae      ;	tmpf -> Y+2
008ea7 81bf      	LDD  R26,Y+6
008ea8 940e bcaf 	LDD  R27,Y+6+1
008eaa 81ee      	CALL SUBOPT_0x1AD
008eab 81ff      	LDD  R30,Y+6
008eac 940e bcb4 	LDD  R31,Y+6+1
008eae 81ee      	CALL SUBOPT_0x1AE
008eaf 81ff      	LDD  R30,Y+6
008eb0 940e c07c 	LDD  R31,Y+6+1
008eb2 0fea      	CALL SUBOPT_0x247
008eb3 1ffb      	ADD  R30,R26
008eb4 018f      	ADC  R31,R27
                 	MOVW R16,R30
008eb5 01f8      ; 0016 05D9     tmpf = (float) (tmp / 100.0);
008eb6 940e c6c3 	MOVW R30,R16
008eb8 01df      	CALL SUBOPT_0x303
008eb9 01cb      	MOVW R26,R30
                +
008eba e0e0     +LDI R30 , LOW ( 0x42C80000 )
008ebb e0f0     +LDI R31 , HIGH ( 0x42C80000 )
008ebc ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
008ebd e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
008ebe 940e cccf 	CALL __DIVF21
008ec0 940e b6d6 	CALL SUBOPT_0xB3
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
008ec2 e5e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1553 ) )
008ec3 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1553 ) )
008ec4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1553 ) )
008ec5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1553 ) )
                 	__POINTD1FN _0x2C0000,1553
008ec6 940e b96c 	CALL SUBOPT_0x121
008ec8 91ec      	LD   R30,X
008ec9 940e b4d5 	CALL SUBOPT_0x65
008ecb 85ee      	LDD  R30,Y+14
008ecc 85ff      	LDD  R31,Y+14+1
008ecd 81e1      	LDD  R30,Z+1
008ece 940e b4d5 	CALL SUBOPT_0x65
008ed0 89ea      	LDD  R30,Y+18
008ed1 89fb      	LDD  R31,Y+18+1
008ed2 81e2      	LDD  R30,Z+2
008ed3 940e b4d5 	CALL SUBOPT_0x65
008ed5 01f8      	MOVW R30,R16
008ed6 940e c041 	CALL SUBOPT_0x23F
008ed8 940e b722 	CALL SUBOPT_0xC1
008eda 940e cec8 	CALL __PUTPARD1
008edc e184      	LDI  R24,20
008edd 940e 9245 	CALL _printDebug
008edf 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
008ee0 940e b6db 	CALL SUBOPT_0xB4
008ee2 e8a9      	LDI  R26,LOW(_eep_vref_val)
008ee3 e0b5      	LDI  R27,HIGH(_eep_vref_val)
008ee4 940e cefb 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
008ee6 c07a      	RJMP _0x20E0034
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
008ee7 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
008ee8 81a8      	LD   R26,Y
008ee9 34a1      	CPI  R26,LOW(0x41)
008eea f010      	BRLO _0x2C024D
008eeb 34a7      	CPI  R26,LOW(0x47)
008eec f008      	BRLO _0x2C024E
                 _0x2C024D:
008eed c004      	RJMP _0x2C024C
                 _0x2C024E:
008eee 940e c6c8 	CALL SUBOPT_0x304
008ef0 97f7      	SBIW R30,55
008ef1 c20e      	RJMP _0x20E0031
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C024C:
008ef2 81a8      	LD   R26,Y
008ef3 36a1      	CPI  R26,LOW(0x61)
008ef4 f010      	BRLO _0x2C0251
008ef5 36a7      	CPI  R26,LOW(0x67)
008ef6 f008      	BRLO _0x2C0252
                 _0x2C0251:
008ef7 c005      	RJMP _0x2C0250
                 _0x2C0252:
008ef8 940e c6c8 	CALL SUBOPT_0x304
008efa 55e7      	SUBI R30,LOW(87)
008efb 40f0      	SBCI R31,HIGH(87)
008efc c203      	RJMP _0x20E0031
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C0250:
008efd 81a8      	LD   R26,Y
008efe 33a0      	CPI  R26,LOW(0x30)
008eff f010      	BRLO _0x2C0255
008f00 33aa      	CPI  R26,LOW(0x3A)
008f01 f008      	BRLO _0x2C0256
                 _0x2C0255:
008f02 c004      	RJMP _0x2C0254
                 _0x2C0256:
008f03 940e c6c8 	CALL SUBOPT_0x304
008f05 97f0      	SBIW R30,48
008f06 c1f9      	RJMP _0x20E0031
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C0254:
008f07 e0e0      	LDI  R30,LOW(0)
008f08 e0f0      	LDI  R31,HIGH(0)
008f09 c1f6      	RJMP _0x20E0031
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
008f0a 940e b595 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
008f0c e000     +LDI R16 , LOW ( 0 )
008f0d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C025B:
008f0e 940e b59a 	CALL SUBOPT_0x82
008f10 f45c      	BRGE _0x2C025C
                 ; 0016 05FE         dest[i] = src[i];
008f11 01f8      	MOVW R30,R16
008f12 940e bc5b 	CALL SUBOPT_0x19F
008f14 010f      	MOVW R0,R30
008f15 940e b59f 	CALL SUBOPT_0x83
008f17 940e b9a5 	CALL SUBOPT_0x12C
                 ; 0016 05FF     }
                +
008f19 5f0f     +SUBI R16 , LOW ( - 1 )
008f1a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008f1b cff2      	RJMP _0x2C025B
                 _0x2C025C:
                 ; 0016 0600     return 0;
008f1c c044      	RJMP _0x20E0034
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
008f1d 940e b595 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
008f1f e000     +LDI R16 , LOW ( 0 )
008f20 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C025E:
008f21 940e b59a 	CALL SUBOPT_0x82
008f23 f544      	BRGE _0x2C025F
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
008f24 e7ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1591 ) )
008f25 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1591 ) )
008f26 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1591 ) )
008f27 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1591 ) )
                 	__POINTD1FN _0x2C0000,1591
008f28 940e cec8 	CALL __PUTPARD1
008f2a 01f8      	MOVW R30,R16
008f2b 85aa      	LDD  R26,Y+10
008f2c 85bb      	LDD  R27,Y+10+1
008f2d 0fae      	ADD  R26,R30
008f2e 1fbf      	ADC  R27,R31
008f2f 91ec      	LD   R30,X
008f30 940e b4d5 	CALL SUBOPT_0x65
008f32 01f8      	MOVW R30,R16
008f33 85ac      	LDD  R26,Y+12
008f34 85bd      	LDD  R27,Y+12+1
008f35 0fae      	ADD  R26,R30
008f36 1fbf      	ADC  R27,R31
008f37 940e ceef 	CALL __EEPROMRDB
008f39 940e b4d5 	CALL SUBOPT_0x65
008f3b e8ad      	LDI  R26,LOW(_userPwd)
008f3c e0b5      	LDI  R27,HIGH(_userPwd)
008f3d 940e b857 	CALL SUBOPT_0xF3
008f3f 940e b4d5 	CALL SUBOPT_0x65
008f41 e9a1      	LDI  R26,LOW(_servicePwd)
008f42 e0b5      	LDI  R27,HIGH(_servicePwd)
008f43 940e b857 	CALL SUBOPT_0xF3
008f45 940e b4d5 	CALL SUBOPT_0x65
008f47 940e bab6 	CALL SUBOPT_0x159
                 ; 0016 0609     }
                +
008f49 5f0f     +SUBI R16 , LOW ( - 1 )
008f4a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008f4b cfd5      	RJMP _0x2C025E
                 _0x2C025F:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
008f4c e000     +LDI R16 , LOW ( 0 )
008f4d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0261:
008f4e 940e b59a 	CALL SUBOPT_0x82
008f50 f484      	BRGE _0x2C0262
                 ; 0016 060C         if(src1[i] != src2[i]){
008f51 01f8      	MOVW R30,R16
008f52 940e c6cb 	CALL SUBOPT_0x305
008f54 900c      	LD   R0,X
008f55 940e b59f 	CALL SUBOPT_0x83
008f57 940e ceef 	CALL __EEPROMRDB
008f59 15e0      	CP   R30,R0
008f5a f019      	BREQ _0x2C0263
                 ; 0016 060D             return -1;
008f5b efef      	LDI  R30,LOW(65535)
008f5c efff      	LDI  R31,HIGH(65535)
008f5d c005      	RJMP _0x20E0033
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C0263:
                +
008f5e 5f0f     +SUBI R16 , LOW ( - 1 )
008f5f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008f60 cfed      	RJMP _0x2C0261
                 _0x2C0262:
                 ; 0016 0610     return 0;
                 _0x20E0034:
008f61 e0e0      	LDI  R30,LOW(0)
008f62 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0033:
008f63 8119      	LDD  R17,Y+1
008f64 8108      	LDD  R16,Y+0
008f65 9628      	ADIW R28,8
008f66 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0021 {
                 
                 	.CSEG
                 _DEBUG_setDateTime:
                 ; 0017 0022     unsigned char   i;
                 ; 0017 0023     unsigned char   buffer[32];
                 ; 0017 0024     int             tz;
                 ; 0017 0025 
                 ; 0017 0026     struct rtc_structure rtcSet;
                 ; 0017 0027 
                 ; 0017 0028     for(i=0;i<4;i++)
008f67 97ea      	SBIW R28,58
008f68 940e cf3a 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
008f6a e010      	LDI  R17,LOW(0)
                 _0x2E0005:
008f6b 3014      	CPI  R17,4
008f6c f450      	BRSH _0x2E0006
                 ; 0017 0029     {
                 ; 0017 002A         buffer[i] = rxPackage3[i+8];
008f6d 940e b6b9 	CALL SUBOPT_0xAD
008f6f 940e c6d0 	CALL SUBOPT_0x306
                +
008f71 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
008f72 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
008f73 81e0      	LD   R30,Z
008f74 93ec      	ST   X,R30
                 ; 0017 002B     }
008f75 5f1f      	SUBI R17,-1
008f76 cff4      	RJMP _0x2E0005
                 _0x2E0006:
                 ; 0017 002C     buffer[4] = 0;
008f77 940e c6d5 	CALL SUBOPT_0x307
                 ; 0017 002D 
                 ; 0017 002E     rtcSet.year = atol(buffer);
008f79 940e b6a2 	CALL SUBOPT_0xA9
                 ; 0017 002F 
                 ; 0017 0030     printDebug("get year = %d\r\n",rtcSet.year);
                +
008f7b ebea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
008f7c e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
008f7d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
008f7e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
008f7f 940e be25 	CALL SUBOPT_0x1EA
008f81 940e bbc8 	CALL SUBOPT_0x182
                 ; 0017 0031 
                 ; 0017 0032     for(i=0;i<2;i++)
008f83 e010      	LDI  R17,LOW(0)
                 _0x2E0008:
008f84 3012      	CPI  R17,2
008f85 f450      	BRSH _0x2E0009
                 ; 0017 0033     {
                 ; 0017 0034         buffer[i] = rxPackage3[i+13];
008f86 940e b6b9 	CALL SUBOPT_0xAD
008f88 940e c6d0 	CALL SUBOPT_0x306
                +
008f8a 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
008f8b 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
008f8c 81e0      	LD   R30,Z
008f8d 93ec      	ST   X,R30
                 ; 0017 0035     }
008f8e 5f1f      	SUBI R17,-1
008f8f cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 0036     buffer[2] = 0;
008f90 940e c6db 	CALL SUBOPT_0x308
                 ; 0017 0037 
                 ; 0017 0038     rtcSet.month = atol(buffer);
008f92 940e c6e1 	CALL SUBOPT_0x309
                 ; 0017 0039 
                 ; 0017 003A     printDebug("get month = %d\r\n",rtcSet.month);
                +
008f94 ecea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 16 ) )
008f95 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 16 ) )
008f96 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 16 ) )
008f97 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 16 ) )
                 	__POINTD1FN _0x2E0000,16
008f98 940e b5dd 	CALL SUBOPT_0x8D
008f9a 940e bbc8 	CALL SUBOPT_0x182
                 ; 0017 003B 
                 ; 0017 003C     for(i=0;i<2;i++)
008f9c e010      	LDI  R17,LOW(0)
                 _0x2E000B:
008f9d 3012      	CPI  R17,2
008f9e f450      	BRSH _0x2E000C
                 ; 0017 003D     {
                 ; 0017 003E         buffer[i] = rxPackage3[i+16];
008f9f 940e b6b9 	CALL SUBOPT_0xAD
008fa1 940e c6d0 	CALL SUBOPT_0x306
                +
008fa3 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
008fa4 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
008fa5 81e0      	LD   R30,Z
008fa6 93ec      	ST   X,R30
                 ; 0017 003F     }
008fa7 5f1f      	SUBI R17,-1
008fa8 cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0040     buffer[2] = 0;
008fa9 940e c6db 	CALL SUBOPT_0x308
                 ; 0017 0041 
                 ; 0017 0042     rtcSet.date = atol(buffer);
008fab 940e b820 	CALL SUBOPT_0xE7
                 ; 0017 0043 
                 ; 0017 0044     printDebug("get date = %d\r\n",rtcSet.date);
                +
008fad edeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 33 ) )
008fae e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 33 ) )
008faf e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 33 ) )
008fb0 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 33 ) )
                 	__POINTD1FN _0x2E0000,33
008fb1 940e b496 	CALL SUBOPT_0x5B
008fb3 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 0045 
                 ; 0017 0046     for(i=0;i<2;i++)
008fb5 e010      	LDI  R17,LOW(0)
                 _0x2E000E:
008fb6 3012      	CPI  R17,2
008fb7 f450      	BRSH _0x2E000F
                 ; 0017 0047     {
                 ; 0017 0048         buffer[i] = rxPackage3[i+19];
008fb8 940e b6b9 	CALL SUBOPT_0xAD
008fba 940e c6d0 	CALL SUBOPT_0x306
                +
008fbc 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
008fbd 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
008fbe 81e0      	LD   R30,Z
008fbf 93ec      	ST   X,R30
                 ; 0017 0049     }
008fc0 5f1f      	SUBI R17,-1
008fc1 cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 004A     buffer[2] = 0;
008fc2 940e c6db 	CALL SUBOPT_0x308
                 ; 0017 004B 
                 ; 0017 004C     rtcSet.hour = atol(buffer);
008fc4 940e c6e6 	CALL SUBOPT_0x30A
                 ; 0017 004D 
                 ; 0017 004E     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
008fc6 eeeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 49 ) )
008fc7 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 49 ) )
008fc8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 49 ) )
008fc9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 49 ) )
                 	__POINTD1FN _0x2E0000,49
008fca 940e cec8 	CALL __PUTPARD1
008fcc 940e b7c6 	CALL SUBOPT_0xDA
008fce 940e bbc8 	CALL SUBOPT_0x182
                 ; 0017 004F 
                 ; 0017 0050     for(i=0;i<2;i++)
008fd0 e010      	LDI  R17,LOW(0)
                 _0x2E0011:
008fd1 3012      	CPI  R17,2
008fd2 f450      	BRSH _0x2E0012
                 ; 0017 0051     {
                 ; 0017 0052         buffer[i] = rxPackage3[i+22];
008fd3 940e b6b9 	CALL SUBOPT_0xAD
008fd5 940e c6d0 	CALL SUBOPT_0x306
                +
008fd7 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
008fd8 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
008fd9 81e0      	LD   R30,Z
008fda 93ec      	ST   X,R30
                 ; 0017 0053     }
008fdb 5f1f      	SUBI R17,-1
008fdc cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0054     buffer[2] = 0;
008fdd 940e c6db 	CALL SUBOPT_0x308
                 ; 0017 0055 
                 ; 0017 0056     rtcSet.min = atol(buffer);
008fdf 940e c6eb 	CALL SUBOPT_0x30B
                 ; 0017 0057 
                 ; 0017 0058     printDebug("get min = %d\r\n",rtcSet.min);
                +
008fe1 efeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 65 ) )
008fe2 e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 65 ) )
008fe3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 65 ) )
008fe4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 65 ) )
                 	__POINTD1FN _0x2E0000,65
008fe5 940e cec8 	CALL __PUTPARD1
008fe7 940e b841 	CALL SUBOPT_0xEE
008fe9 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 0059 
                 ; 0017 005A     for(i=0;i<2;i++)
008feb e010      	LDI  R17,LOW(0)
                 _0x2E0014:
008fec 3012      	CPI  R17,2
008fed f450      	BRSH _0x2E0015
                 ; 0017 005B     {
                 ; 0017 005C         buffer[i] = rxPackage3[i+25];
008fee 940e b6b9 	CALL SUBOPT_0xAD
008ff0 940e c6d0 	CALL SUBOPT_0x306
                +
008ff2 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
008ff3 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
008ff4 81e0      	LD   R30,Z
008ff5 93ec      	ST   X,R30
                 ; 0017 005D     }
008ff6 5f1f      	SUBI R17,-1
008ff7 cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 005E     buffer[2] = 0;
008ff8 940e c6db 	CALL SUBOPT_0x308
                 ; 0017 005F 
                 ; 0017 0060     rtcSet.sec = atol(buffer);
                +
008ffa 8fe8     +STD Y + 24 , R30
008ffb 8ff9     +STD Y + 24 + 1 , R31
008ffc 8f6a     +STD Y + 24 + 2 , R22
008ffd 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0017 0061 
                 ; 0017 0062     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
008ffe e0ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 80 ) )
008fff e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 80 ) )
009000 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 80 ) )
009001 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 80 ) )
                 	__POINTD1FN _0x2E0000,80
009002 940e cec8 	CALL __PUTPARD1
                +
009004 8dec     +LDD R30 , Y + 28
009005 8dfd     +LDD R31 , Y + 28 + 1
009006 8d6e     +LDD R22 , Y + 28 + 2
009007 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
009008 940e bbc8 	CALL SUBOPT_0x182
                 ; 0017 0063 
                 ; 0017 0064     for(i=0;i<3;i++)
00900a e010      	LDI  R17,LOW(0)
                 _0x2E0017:
00900b 3013      	CPI  R17,3
00900c f450      	BRSH _0x2E0018
                 ; 0017 0065     {
                 ; 0017 0066         buffer[i] = rxPackage3[i+28];
00900d 940e b6b9 	CALL SUBOPT_0xAD
00900f 940e c6d0 	CALL SUBOPT_0x306
                +
009011 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
009012 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
009013 81e0      	LD   R30,Z
009014 93ec      	ST   X,R30
                 ; 0017 0067     }
009015 5f1f      	SUBI R17,-1
009016 cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 0068     buffer[4] = 0;
009017 940e c6d5 	CALL SUBOPT_0x307
                 ; 0017 0069 
                 ; 0017 006A     tz = atol(buffer);
009019 019f      	MOVW R18,R30
                 ; 0017 006B 
                 ; 0017 006C     printDebug("get timezone = %+d\r\n",tz);
                +
00901a e1e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 95 ) )
00901b e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 95 ) )
00901c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 95 ) )
00901d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 95 ) )
                 	__POINTD1FN _0x2E0000,95
00901e 940e b295 	CALL SUBOPT_0x11
009020 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 006D 
                 ; 0017 006E     RTC_setDateTime(rtcSet,tz);
009022 01fe      	MOVW R30,R28
009023 9634      	ADIW R30,4
009024 e1aa      	LDI  R26,26
009025 940e ced2 	CALL __PUTPARL
009027 01d9      	MOVW R26,R18
009028 940e 453f 	CALL _RTC_setDateTime
                 ; 0017 006F 
                 ; 0017 0070     return 0;
00902a 940e ba33 	CALL SUBOPT_0x147
00902c 96ee      	ADIW R28,62
00902d 9508      	RET
                 ; 0017 0071 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0074 {
                 _DEBUG_resetAlarm:
                 ; 0017 0075     resetAlarm();
00902e 940e 7384 	CALL _resetAlarm
                 ; 0017 0076 
                 ; 0017 0077     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
009030 e2ee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 116 ) )
009031 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 116 ) )
009032 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 116 ) )
009033 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 116 ) )
                 	__POINTD1FN _0x2E0000,116
009034 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 0078 }
009036 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 007B {
                 _DEBUG_ClearLogFile:
                 ; 0017 007C     int         res;
                 ; 0017 007D 
                 ; 0017 007E     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
009037 931a      	ST   -Y,R17
009038 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
009039 e5e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 151 ) )
00903a e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 151 ) )
00903b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 151 ) )
00903c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 151 ) )
                 	__POINTD1FN _0x2E0000,151
00903d 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 007F 
                 ; 0017 0080     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
00903f 940e c101 	CALL SUBOPT_0x25D
                 ; 0017 0081     if(res < 0)
009041 f432      	BRPL _0x2E0019
                 ; 0017 0082     {
                 ; 0017 0083         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
009042 940e c6f0 	CALL SUBOPT_0x30C
009044 940e b4ae 	CALL SUBOPT_0x5F
009046 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 0084     }
                 ; 0017 0085 
                 ; 0017 0086     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E0019:
009048 940e c12b 	CALL SUBOPT_0x262
                 ; 0017 0087     if(res < 0)
00904a f432      	BRPL _0x2E001A
                 ; 0017 0088     {
                 ; 0017 0089         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
00904b 940e c6f0 	CALL SUBOPT_0x30C
00904d 940e b4f5 	CALL SUBOPT_0x6A
00904f 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 008A     }
                 ; 0017 008B 
                 ; 0017 008C     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001A:
009051 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
009052 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
009053 93fa      	ST   -Y,R31
009054 93ea      	ST   -Y,R30
009055 e0e1      	LDI  R30,LOW(1)
009056 93ea      	ST   -Y,R30
009057 940e bbfb 	CALL SUBOPT_0x18D
009059 940e 7b39 	CALL _LOG_createFile
00905b 018f      	MOVW R16,R30
                 ; 0017 008D     if(res < 0)
00905c 2311      	TST  R17
00905d f432      	BRPL _0x2E001B
                 ; 0017 008E     {
                 ; 0017 008F         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
00905e 940e c6f0 	CALL SUBOPT_0x30C
009060 940e c179 	CALL SUBOPT_0x26A
009062 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 0090     }
                 ; 0017 0091 
                 ; 0017 0092     return;
                 _0x2E001B:
009064 9109      	LD   R16,Y+
009065 9119      	LD   R17,Y+
009066 9508      	RET
                 ; 0017 0093 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 0096 {
                 _DEBUG_setRealVref:
                 ; 0017 0097     unsigned char i;
                 ; 0017 0098     unsigned char rxStrSetVREF[6];
                 ; 0017 0099 
                 ; 0017 009A     for(i=0;i<=5;i++)
009067 9726      	SBIW R28,6
009068 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
009069 e010      	LDI  R17,LOW(0)
                 _0x2E001D:
00906a 3016      	CPI  R17,6
00906b f450      	BRSH _0x2E001E
                 ; 0017 009B     {
                 ; 0017 009C         rxStrSetVREF[i] = rxPackage3[i+8];
00906c 940e b6b9 	CALL SUBOPT_0xAD
00906e 940e c6f5 	CALL SUBOPT_0x30D
                +
009070 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009071 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009072 81e0      	LD   R30,Z
009073 93ec      	ST   X,R30
                 ; 0017 009D     }
009074 5f1f      	SUBI R17,-1
009075 cff4      	RJMP _0x2E001D
                 _0x2E001E:
                 ; 0017 009E     rxStrSetVREF[5] = '\0';
009076 e0e0      	LDI  R30,LOW(0)
009077 83ee      	STD  Y+6,R30
                 ; 0017 009F     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009078 eaee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 244 ) )
009079 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 244 ) )
00907a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 244 ) )
00907b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 244 ) )
                 	__POINTD1FN _0x2E0000,244
00907c 940e cec8 	CALL __PUTPARD1
00907e 01fe      	MOVW R30,R28
00907f 9635      	ADIW R30,5
009080 940e b388 	CALL SUBOPT_0x34
009082 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 00A0     eep_vref_val = (atof(rxStrSetVREF));
009084 01de      	MOVW R26,R28
009085 9611      	ADIW R26,1
009086 940e 9552 	CALL _atof
009088 e8a9      	LDI  R26,LOW(_eep_vref_val)
009089 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00908a 940e cefb 	CALL __EEPROMWRD
                 ; 0017 00A1     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
00908c edec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 290 ) )
00908d e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 290 ) )
00908e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 290 ) )
00908f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 290 ) )
                 	__POINTD1FN _0x2E0000,290
009090 940e cec8 	CALL __PUTPARD1
009092 e8a9      	LDI  R26,LOW(_eep_vref_val)
009093 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009094 940e ba29 	CALL SUBOPT_0x145
                 ; 0017 00A2 }
009096 8118      	LDD  R17,Y+0
009097 9627      	ADIW R28,7
009098 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00A5 {
                 _DEBUG_sensorSelect:
                 ; 0017 00A6     unsigned char ch[2];
                 ; 0017 00A7 
                 ; 0017 00A8     if(TEMP_SEL != TEMP_TYPE_K){
009099 9722      	SBIW R28,2
                 ;	ch -> Y+0
00909a 940e b35e 	CALL SUBOPT_0x2F
00909c f039      	BREQ _0x2E001F
                 ; 0017 00A9         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
00909d e0e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 331 ) )
00909e e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 331 ) )
00909f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 331 ) )
0090a0 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 331 ) )
                 	__POINTD1FN _0x2E0000,331
0090a1 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 00AA         return;
0090a3 c047      	RJMP _0x20E0032
                 ; 0017 00AB     }
                 ; 0017 00AC 
                 ; 0017 00AD     if(rxPackage3[8] == 'N'){
                 _0x2E001F:
                +
0090a4 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
0090a6 34ae      	CPI  R26,LOW(0x4E)
0090a7 f449      	BRNE _0x2E0020
                 ; 0017 00AE         hwCalId     = 9;
0090a8 940e c6fa 	CALL SUBOPT_0x30E
                 ; 0017 00AF         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
0090aa e3e8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 382 ) )
0090ab e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 382 ) )
0090ac e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 382 ) )
0090ad e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 382 ) )
                 	__POINTD1FN _0x2E0000,382
0090ae 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 00B0     }
                 ; 0017 00B1     else if(isdigit(rxPackage3[8])){
0090b0 c03a      	RJMP _0x2E0021
                 _0x2E0020:
                +
0090b1 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
0090b3 940e b19a 	CALL _isdigit
0090b5 30e0      	CPI  R30,0
0090b6 f109      	BREQ _0x2E0022
                 ; 0017 00B2         ch[0]       = rxPackage3[8];
                +
0090b7 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
0090b9 83e8      	ST   Y,R30
                 ; 0017 00B3         ch[1]       = '\0';
0090ba e0e0      	LDI  R30,LOW(0)
0090bb 83e9      	STD  Y+1,R30
                 ; 0017 00B4         hwCalId     = atoi(ch);
0090bc 01de      	MOVW R26,R28
0090bd 940e 941a 	CALL _atoi
0090bf 93e0 10f4 	STS  _hwCalId,R30
0090c1 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00B5 
                 ; 0017 00B6         SENSOR_SELECT(hwCalId);
0090c3 940e b681 	CALL SUBOPT_0xA3
0090c5 91e0 10f4 	LDS  R30,_hwCalId
0090c7 0fee      	LSL  R30
0090c8 2bea      	OR   R30,R26
0090c9 2da0      	MOV  R26,R0
0090ca 93ec      	ST   X,R30
                 ; 0017 00B7         delay_ms(50);           // -- for multiplex stable -- //
0090cb 940e b560 	CALL SUBOPT_0x7A
                 ; 0017 00B8 
                 ; 0017 00B9         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
0090cd e6e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 423 ) )
0090ce e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 423 ) )
0090cf e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 423 ) )
0090d0 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 423 ) )
                 	__POINTD1FN _0x2E0000,423
0090d1 940e b36f 	CALL SUBOPT_0x31
0090d3 940e b388 	CALL SUBOPT_0x34
0090d5 940e b29d 	CALL SUBOPT_0x12
                 ; 0017 00BA     }
                 ; 0017 00BB     else{
0090d7 c013      	RJMP _0x2E0023
                 _0x2E0022:
                 ; 0017 00BC         hwCalId     = 9;
0090d8 940e c6fa 	CALL SUBOPT_0x30E
                 ; 0017 00BD         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
0090da e8ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 467 ) )
0090db e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 467 ) )
0090dc e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 467 ) )
0090dd e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 467 ) )
                 	__POINTD1FN _0x2E0000,467
0090de 940e cec8 	CALL __PUTPARD1
                +
0090e0 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
0090e2 940e b4d5 	CALL SUBOPT_0x65
                +
0090e4 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
0090e6 27ff      	CLR  R31
0090e7 2766      	CLR  R22
0090e8 2777      	CLR  R23
0090e9 940e b300 	CALL SUBOPT_0x21
                 ; 0017 00BE     }
                 _0x2E0023:
                 _0x2E0021:
                 ; 0017 00BF 
                 ; 0017 00C0     return;
                 _0x20E0032:
0090eb 9622      	ADIW R28,2
0090ec 9508      	RET
                 ; 0017 00C1 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00C4 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00C5     if(flag){
0090ed 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
0090ee 81e8      	LD   R30,Y
0090ef 30e0      	CPI  R30,0
0090f0 f021      	BREQ _0x2E0024
                 ; 0017 00C6         config_oper.deviceEnable        =   0x01;
                +
0090f1 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
0090f2 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
0090f3 e0e1      	LDI  R30,LOW(1)
0090f4 c003      	RJMP _0x2E0063
                 ; 0017 00C7     }
                 ; 0017 00C8     else{
                 _0x2E0024:
                 ; 0017 00C9         config_oper.deviceEnable        =   0x00;
                +
0090f5 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
0090f6 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
0090f7 e0e0      	LDI  R30,LOW(0)
                 _0x2E0063:
0090f8 940e cf0b 	CALL __EEPROMWRB
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     config_oper_flag                    =   0x01;
0090fa e4a3      	LDI  R26,LOW(_config_oper_flag)
0090fb e0b5      	LDI  R27,HIGH(_config_oper_flag)
0090fc 940e b9aa 	CALL SUBOPT_0x12D
                 ; 0017 00CD     is_operating_config_update          =   1;
0090fe 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00CE 
                 ; 0017 00CF     return;
                 _0x20E0031:
009100 9621      	ADIW R28,1
009101 9508      	RET
                 ; 0017 00D0 }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00D3 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00D4     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00D5     unsigned char i;
                 ; 0017 00D6     unsigned char set_str[24];
                 ; 0017 00D7 
                 ; 0017 00D8     for(i=0;i<24;i++){
009102 9768      	SBIW R28,24
009103 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
009104 e010      	LDI  R17,LOW(0)
                 _0x2E0027:
009105 3118      	CPI  R17,24
009106 f590      	BRSH _0x2E0028
                 ; 0017 00D9         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
009107 940e b6b9 	CALL SUBOPT_0xAD
                +
009109 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
00910a 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
00910b 81a0      	LD   R26,Z
00910c 32ac      	CPI  R26,LOW(0x2C)
00910d f021      	BREQ _0x2E002A
00910e 940e b1b7 	CALL _isxdigit
009110 30e0      	CPI  R30,0
009111 f009      	BREQ _0x2E002B
                 _0x2E002A:
009112 c012      	RJMP _0x2E0029
                 _0x2E002B:
                 ; 0017 00DA             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
009113 ecec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 530 ) )
009114 e6f2     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 530 ) )
009115 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 530 ) )
009116 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 530 ) )
                 	__POINTD1FN _0x2E0000,530
009117 940e c701 	CALL SUBOPT_0x30F
                +
009119 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
00911a 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
00911b 81e0      	LD   R30,Z
00911c 940e b4d5 	CALL SUBOPT_0x65
00911e 940e b6b9 	CALL SUBOPT_0xAD
                +
009120 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009121 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009122 940e bff1 	CALL SUBOPT_0x233
                 ; 0017 00DB             return;
009124 c09d      	RJMP _0x20E0030
                 ; 0017 00DC         }
                 ; 0017 00DD         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E0029:
009125 940e b6b9 	CALL SUBOPT_0xAD
009127 010f      	MOVW R0,R30
009128 01de      	MOVW R26,R28
009129 9611      	ADIW R26,1
00912a 0fea      	ADD  R30,R26
00912b 1ffb      	ADC  R31,R27
00912c 93ff      	PUSH R31
00912d 93ef      	PUSH R30
00912e 01f0      	MOVW R30,R0
                +
00912f 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009130 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009131 81a0      	LD   R26,Z
009132 940e b1c6 	CALL _tolower
009134 91af      	POP  R26
009135 91bf      	POP  R27
009136 93ec      	ST   X,R30
                 ; 0017 00DE     }
009137 5f1f      	SUBI R17,-1
009138 cfcc      	RJMP _0x2E0027
                 _0x2E0028:
                 ; 0017 00DF 
                 ; 0017 00E0     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
009139 e0e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 591 ) )
00913a e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 591 ) )
00913b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 591 ) )
00913c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 591 ) )
                 	__POINTD1FN _0x2E0000,591
00913d 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 00E1 
                 ; 0017 00E2     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
00913f e3ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 643 ) )
009140 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 643 ) )
009141 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 643 ) )
009142 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 643 ) )
                 	__POINTD1FN _0x2E0000,643
009143 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 00E3     for(i=0;i<24;i++){
009145 e010      	LDI  R17,LOW(0)
                 _0x2E002D:
009146 3118      	CPI  R17,24
009147 f010      	BRLO PC+3
009148 940c 91b3 	JMP _0x2E002E
                 ; 0017 00E4         if((i%3) == 0)      {   continue;                       }
00914a 940e c705 	CALL SUBOPT_0x310
00914c 9730      	SBIW R30,0
00914d f409      	BRNE _0x2E002F
00914e c062      	RJMP _0x2E002C
                 ; 0017 00E5         else if((i%3) == 1) {
                 _0x2E002F:
00914f 940e c705 	CALL SUBOPT_0x310
009151 30e1      	CPI  R30,LOW(0x1)
009152 e0a0      	LDI  R26,HIGH(0x1)
009153 07fa      	CPC  R31,R26
009154 f581      	BRNE _0x2E0031
                 ; 0017 00E6 
                 ; 0017 00E7             printDebug("[%c",set_str[i]);
                +
009155 e6e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 683 ) )
009156 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 683 ) )
009157 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 683 ) )
009158 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 683 ) )
                 	__POINTD1FN _0x2E0000,683
009159 940e c701 	CALL SUBOPT_0x30F
00915b 01de      	MOVW R26,R28
00915c 9615      	ADIW R26,5
00915d 940e bb9a 	CALL SUBOPT_0x17B
                 ; 0017 00E8 
                 ; 0017 00E9             DEVICE_SERIAL[i/3]      = 0x00;
00915f 940e c70c 	CALL SUBOPT_0x311
009161 01df      	MOVW R26,R30
009162 e0e0      	LDI  R30,LOW(0)
009163 940e cf0b 	CALL __EEPROMWRB
                 ; 0017 00EA 
                 ; 0017 00EB             if(isdigit(set_str[i])){
009165 940e b6b9 	CALL SUBOPT_0xAD
009167 940e c6f5 	CALL SUBOPT_0x30D
009169 940e c715 	CALL SUBOPT_0x312
00916b f051      	BREQ _0x2E0032
                 ; 0017 00EC                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
00916c 940e c70c 	CALL SUBOPT_0x311
00916e 010f      	MOVW R0,R30
00916f 940e b6b9 	CALL SUBOPT_0xAD
009171 940e c6f5 	CALL SUBOPT_0x30D
009173 91ec      	LD   R30,X
009174 53e0      	SUBI R30,LOW(48)
009175 c009      	RJMP _0x2E0064
                 ; 0017 00ED             }
                 ; 0017 00EE             else{
                 _0x2E0032:
                 ; 0017 00EF                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009176 940e c70c 	CALL SUBOPT_0x311
009178 010f      	MOVW R0,R30
009179 940e b6b9 	CALL SUBOPT_0xAD
00917b 940e c6f5 	CALL SUBOPT_0x30D
00917d 91ec      	LD   R30,X
00917e 55e7      	SUBI R30,LOW(87)
                 _0x2E0064:
00917f 95e2      	SWAP R30
009180 7fe0      	ANDI R30,0xF0
009181 01d0      	MOVW R26,R0
009182 940e cf0b 	CALL __EEPROMWRB
                 ; 0017 00F0             }
                 ; 0017 00F1         }
                 ; 0017 00F2         else if((i%3) == 2) {
009184 c02c      	RJMP _0x2E0034
                 _0x2E0031:
009185 940e c705 	CALL SUBOPT_0x310
009187 30e2      	CPI  R30,LOW(0x2)
009188 e0a0      	LDI  R26,HIGH(0x2)
009189 07fa      	CPC  R31,R26
00918a f531      	BRNE _0x2E0035
                 ; 0017 00F3 
                 ; 0017 00F4             printDebug("%c]",set_str[i]);
                +
00918b e6e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 687 ) )
00918c e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 687 ) )
00918d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 687 ) )
00918e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 687 ) )
                 	__POINTD1FN _0x2E0000,687
00918f 940e c701 	CALL SUBOPT_0x30F
009191 01de      	MOVW R26,R28
009192 9615      	ADIW R26,5
009193 940e bb9a 	CALL SUBOPT_0x17B
                 ; 0017 00F5 
                 ; 0017 00F6             if(isdigit(set_str[i])){
009195 940e b6b9 	CALL SUBOPT_0xAD
009197 940e c6f5 	CALL SUBOPT_0x30D
009199 940e c715 	CALL SUBOPT_0x312
00919b f049      	BREQ _0x2E0036
                 ; 0017 00F7                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
00919c 940e c70c 	CALL SUBOPT_0x311
00919e 940e c71a 	CALL SUBOPT_0x313
0091a0 940e c6f5 	CALL SUBOPT_0x30D
0091a2 91ec      	LD   R30,X
0091a3 53e0      	SUBI R30,LOW(48)
0091a4 c008      	RJMP _0x2E0065
                 ; 0017 00F8             }
                 ; 0017 00F9             else{
                 _0x2E0036:
                 ; 0017 00FA                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
0091a5 940e c70c 	CALL SUBOPT_0x311
0091a7 940e c71a 	CALL SUBOPT_0x313
0091a9 940e c6f5 	CALL SUBOPT_0x30D
0091ab 91ec      	LD   R30,X
0091ac 55e7      	SUBI R30,LOW(87)
                 _0x2E0065:
0091ad 29e0      	OR   R30,R0
0091ae 01db      	MOVW R26,R22
0091af 940e cf0b 	CALL __EEPROMWRB
                 ; 0017 00FB             }
                 ; 0017 00FC         }
                 ; 0017 00FD     }
                 _0x2E0035:
                 _0x2E0034:
                 _0x2E002C:
0091b1 5f1f      	SUBI R17,-1
0091b2 cf93      	RJMP _0x2E002D
                 _0x2E002E:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
0091b3 e6ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 691 ) )
0091b4 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 691 ) )
0091b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 691 ) )
0091b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 691 ) )
                 	__POINTD1FN _0x2E0000,691
0091b7 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 0100     for(i=0;i<8;i++){
0091b9 e010      	LDI  R17,LOW(0)
                 _0x2E0039:
0091ba 3018      	CPI  R17,8
0091bb f420      	BRSH _0x2E003A
                 ; 0017 0101         printDebug("[%02X]",DEVICE_SERIAL[i]);
0091bc 940e c721 	CALL SUBOPT_0x314
                 ; 0017 0102     }
0091be 5f1f      	SUBI R17,-1
0091bf cffa      	RJMP _0x2E0039
                 _0x2E003A:
                 ; 0017 0103     printDebug("\r\n");
0091c0 940e c72d 	CALL SUBOPT_0x315
                 ; 0017 0104 
                 ; 0017 0105     return;
                 _0x20E0030:
0091c2 8118      	LDD  R17,Y+0
0091c3 9669      	ADIW R28,25
0091c4 9508      	RET
                 ; 0017 0106 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0109 {
                 _DEBUG_readSerialNumber:
                 ; 0017 010A     unsigned char i;
                 ; 0017 010B 
                 ; 0017 010C     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
0091c5 931a      	ST   -Y,R17
                 ;	i -> R17
                +
0091c6 eae6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 748 ) )
0091c7 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 748 ) )
0091c8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 748 ) )
0091c9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 748 ) )
                 	__POINTD1FN _0x2E0000,748
0091ca 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 010D     for(i=0;i<8;i++){
0091cc e010      	LDI  R17,LOW(0)
                 _0x2E003C:
0091cd 3018      	CPI  R17,8
0091ce f420      	BRSH _0x2E003D
                 ; 0017 010E         printDebug("[%02X]",DEVICE_SERIAL[i]);
0091cf 940e c721 	CALL SUBOPT_0x314
                 ; 0017 010F     }
0091d1 5f1f      	SUBI R17,-1
0091d2 cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0110     printDebug("\r\n");
0091d3 940e c72d 	CALL SUBOPT_0x315
                 ; 0017 0111 
                 ; 0017 0112     return;
0091d5 940c 9815 	JMP  _0x20E0026
                 ; 0017 0113 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 011B {
                 _debug_req:
                 ; 0017 011C     flag_PackageTerminate3 = 0;
0091d7 e0e0      	LDI  R30,LOW(0)
0091d8 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 011D 
                 ; 0017 011E     printDebug("Get Debug Req.:");
                +
0091da ecef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 789 ) )
0091db e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 789 ) )
0091dc e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 789 ) )
0091dd e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 789 ) )
                 	__POINTD1FN _0x2E0000,789
0091de 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 011F 
                 ; 0017 0120 
                 ; 0017 0121     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
0091e0 940e c733 	CALL SUBOPT_0x316
                +
0091e2 e3e6     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
0091e3 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
0091e4 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
0091e5 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
0091e6 940e c738 	CALL SUBOPT_0x317
0091e8 f411      	BRNE _0x2E003E
                 ; 0017 0122         DEBUG_setDateTime();
0091e9 dd7d      	RCALL _DEBUG_setDateTime
                 ; 0017 0123     }
                 ; 0017 0124     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
0091ea c059      	RJMP _0x2E003F
                 _0x2E003E:
0091eb 940e c733 	CALL SUBOPT_0x316
                +
0091ed e3ee     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
0091ee e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
0091ef e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
0091f0 e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
0091f1 940e c738 	CALL SUBOPT_0x317
0091f3 f411      	BRNE _0x2E0040
                 ; 0017 0125         DEBUG_resetAlarm();
0091f4 de39      	RCALL _DEBUG_resetAlarm
                 ; 0017 0126     }
                 ; 0017 0127     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
0091f5 c04e      	RJMP _0x2E0041
                 _0x2E0040:
0091f6 940e c733 	CALL SUBOPT_0x316
                +
0091f8 e4e6     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
0091f9 e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
0091fa e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
0091fb e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
0091fc 940e c738 	CALL SUBOPT_0x317
0091fe f411      	BRNE _0x2E0042
                 ; 0017 0128         DEBUG_ClearLogFile();
0091ff de37      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0129     }
                 ; 0017 012A     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009200 c043      	RJMP _0x2E0043
                 _0x2E0042:
009201 940e c733 	CALL SUBOPT_0x316
                +
009203 e4ee     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009204 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009205 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009206 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009207 940e c738 	CALL SUBOPT_0x317
009209 f411      	BRNE _0x2E0044
                 ; 0017 012B         DEBUG_setRealVref();
00920a de5c      	RCALL _DEBUG_setRealVref
                 ; 0017 012C     }
                 ; 0017 012D     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
00920b c038      	RJMP _0x2E0045
                 _0x2E0044:
00920c 940e c733 	CALL SUBOPT_0x316
                +
00920e e5e6     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
00920f e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009210 e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009211 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009212 940e c738 	CALL SUBOPT_0x317
009214 f411      	BRNE _0x2E0046
                 ; 0017 012E         DEBUG_sensorSelect();
009215 de83      	RCALL _DEBUG_sensorSelect
                 ; 0017 012F     }
                 ; 0017 0130     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009216 c02d      	RJMP _0x2E0047
                 _0x2E0046:
009217 940e c733 	CALL SUBOPT_0x316
                +
009219 e5ee     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
00921a e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
00921b e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
00921c e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
00921d 940e c738 	CALL SUBOPT_0x317
00921f f419      	BRNE _0x2E0048
                 ; 0017 0131         DEBUG_setDeviceEnable(1);
009220 e0a1      	LDI  R26,LOW(1)
009221 decb      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0132     }
                 ; 0017 0133     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009222 c021      	RJMP _0x2E0049
                 _0x2E0048:
009223 940e c733 	CALL SUBOPT_0x316
                +
009225 e6e6     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009226 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009227 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009228 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009229 940e c738 	CALL SUBOPT_0x317
00922b f419      	BRNE _0x2E004A
                 ; 0017 0134         DEBUG_setDeviceEnable(0);
00922c e0a0      	LDI  R26,LOW(0)
00922d debf      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0135     }
                 ; 0017 0136     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
00922e c015      	RJMP _0x2E004B
                 _0x2E004A:
00922f 940e c733 	CALL SUBOPT_0x316
                +
009231 e6ee     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009232 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009233 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009234 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009235 940e c738 	CALL SUBOPT_0x317
009237 f411      	BRNE _0x2E004C
                 ; 0017 0137         DEBUG_setSerialNumber();
009238 dec9      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0138     }
                 ; 0017 0139     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009239 c00a      	RJMP _0x2E004D
                 _0x2E004C:
00923a 940e c733 	CALL SUBOPT_0x316
                +
00923c e7e6     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
00923d e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
00923e e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
00923f e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009240 940e c738 	CALL SUBOPT_0x317
009242 f409      	BRNE _0x2E004E
                 ; 0017 013A         DEBUG_readSerialNumber();
009243 df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 013B     }
                 ; 0017 013C 
                 ; 0017 013D     return;
                 _0x2E004E:
                 _0x2E004D:
                 _0x2E004B:
                 _0x2E0049:
                 _0x2E0047:
                 _0x2E0045:
                 _0x2E0043:
                 _0x2E0041:
                 _0x2E003F:
009244 9508      	RET
                 ; 0017 013E }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0141 {
                 _printDebug:
009245 92ff      	PUSH R15
009246 2ef8      	MOV  R15,R24
                 ; 0017 0142     char textBuffer[256];
                 ; 0017 0143     va_list argptr;
                 ; 0017 0144 
                 ; 0017 0145     va_start(argptr, fmtstr);
009247 50d1      	SUBI R29,1
009248 931a      	ST   -Y,R17
009249 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
00924a 01de      	MOVW R26,R28
00924b 50a2      	SUBI R26,LOW(-(254))
00924c 4fbf      	SBCI R27,HIGH(-(254))
00924d 940e cd34 	CALL __ADDW2R15
00924f 018d      	MOVW R16,R26
                 ; 0017 0146     vsprintf(textBuffer,fmtstr,argptr);
009250 940e be29 	CALL SUBOPT_0x1EB
009252 01de      	MOVW R26,R28
009253 5fac      	SUBI R26,LOW(-(260))
009254 4fbe      	SBCI R27,HIGH(-(260))
009255 940e c04b 	CALL SUBOPT_0x241
                 ; 0017 0147     send_uart(3,textBuffer);
009257 e0e3      	LDI  R30,LOW(3)
009258 93ea      	ST   -Y,R30
009259 01de      	MOVW R26,R28
00925a 9613      	ADIW R26,3
00925b 940e 3e6b 	CALL _send_uart
                 ; 0017 0148     va_end(argptr);
                 ; 0017 0149 
                 ; 0017 014A     return;
00925d 8119      	LDD  R17,Y+1
00925e 8108      	LDD  R16,Y+0
00925f 9622      	ADIW R28,2
009260 5fdf      	SUBI R29,-1
009261 90ff      	POP  R15
009262 9508      	RET
                 ; 0017 014B }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 014E {
                 _print_hex_ascii_line:
                 ; 0017 014F 
                 ; 0017 0150     int i;
                 ; 0017 0151     int gap;
                 ; 0017 0152     const unsigned char *ch;
                 ; 0017 0153 
                 ; 0017 0154     // offset //
                 ; 0017 0155     printDebug("%05d   ", offset);
009263 940e bc65 	CALL SUBOPT_0x1A1
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009265 edef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 805 ) )
009266 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 805 ) )
009267 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 805 ) )
009268 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 805 ) )
                 	__POINTD1FN _0x2E0000,805
009269 940e b971 	CALL SUBOPT_0x122
00926b 940e b81b 	CALL SUBOPT_0xE6
                 ; 0017 0156 
                 ; 0017 0157 
                 ; 0017 0158     // hex //
                 ; 0017 0159     ch = payload;
                +
00926d 854a     +LDD R20 , Y + 10
00926e 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 015A     for(i = 0; i < len; i++) {
                +
00926f e000     +LDI R16 , LOW ( 0 )
009270 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0050:
009271 85e8      	LDD  R30,Y+8
009272 85f9      	LDD  R31,Y+8+1
009273 170e      	CP   R16,R30
009274 071f      	CPC  R17,R31
009275 f494      	BRGE _0x2E0051
                 ; 0017 015B         printDebug("%02x ", *ch);
                +
009276 eee7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 813 ) )
009277 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 813 ) )
009278 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 813 ) )
009279 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 813 ) )
                 	__POINTD1FN _0x2E0000,813
00927a 940e c73f 	CALL SUBOPT_0x318
                 ; 0017 015C 
                 ; 0017 015D         ch++;
                +
00927c 5f4f     +SUBI R20 , LOW ( - 1 )
00927d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 015E         // print extra space after 8th byte for visual aid //
                 ; 0017 015F         if (i == 7){
00927e e0e7      	LDI  R30,LOW(7)
00927f e0f0      	LDI  R31,HIGH(7)
009280 17e0      	CP   R30,R16
009281 07f1      	CPC  R31,R17
009282 f411      	BRNE _0x2E0052
                 ; 0017 0160             printDebug(" ");
009283 940e c745 	CALL SUBOPT_0x319
                 ; 0017 0161 
                 ; 0017 0162         }
                 ; 0017 0163     }
                 _0x2E0052:
                +
009285 5f0f     +SUBI R16 , LOW ( - 1 )
009286 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009287 cfe9      	RJMP _0x2E0050
                 _0x2E0051:
                 ; 0017 0164     // print space to handle line less than 8 bytes //
                 ; 0017 0165     if (len < 8){
009288 85a8      	LDD  R26,Y+8
009289 85b9      	LDD  R27,Y+8+1
00928a 9718      	SBIW R26,8
00928b f414      	BRGE _0x2E0053
                 ; 0017 0166         printDebug(" ");
00928c 940e c745 	CALL SUBOPT_0x319
                 ; 0017 0167 
                 ; 0017 0168     }
                 ; 0017 0169 
                 ; 0017 016A     // fill hex gap with spaces if not full line //
                 ; 0017 016B     if (len < 16) {
                 _0x2E0053:
00928e 85a8      	LDD  R26,Y+8
00928f 85b9      	LDD  R27,Y+8+1
009290 9750      	SBIW R26,16
009291 f48c      	BRGE _0x2E0054
                 ; 0017 016C         gap = 16 - len;
009292 85a8      	LDD  R26,Y+8
009293 85b9      	LDD  R27,Y+8+1
009294 e1e0      	LDI  R30,LOW(16)
009295 e0f0      	LDI  R31,HIGH(16)
009296 1bea      	SUB  R30,R26
009297 0bfb      	SBC  R31,R27
009298 019f      	MOVW R18,R30
                 ; 0017 016D         for (i = 0; i < gap; i++) {
                +
009299 e000     +LDI R16 , LOW ( 0 )
00929a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0056:
                +
00929b 1702     +CP R16 , R18
00929c 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
00929d f42c      	BRGE _0x2E0057
                 ; 0017 016E             printDebug("   ");
00929e 940e c74b 	CALL SUBOPT_0x31A
                 ; 0017 016F 
                 ; 0017 0170         }
                +
0092a0 5f0f     +SUBI R16 , LOW ( - 1 )
0092a1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0092a2 cff8      	RJMP _0x2E0056
                 _0x2E0057:
                 ; 0017 0171     }
                 ; 0017 0172     printDebug("   ");
                 _0x2E0054:
0092a3 940e c74b 	CALL SUBOPT_0x31A
                 ; 0017 0173 
                 ; 0017 0174 
                 ; 0017 0175     // ascii (if printable) //
                 ; 0017 0176     ch = payload;
                +
0092a5 854a     +LDD R20 , Y + 10
0092a6 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0177     for(i = 0; i < len; i++) {
                +
0092a7 e000     +LDI R16 , LOW ( 0 )
0092a8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0059:
0092a9 85e8      	LDD  R30,Y+8
0092aa 85f9      	LDD  R31,Y+8+1
0092ab 170e      	CP   R16,R30
0092ac 071f      	CPC  R17,R31
0092ad f4c4      	BRGE _0x2E005A
                 ; 0017 0178         if (isprint(*ch)){
0092ae 01da      	MOVW R26,R20
0092af 91ac      	LD   R26,X
0092b0 940e b1a3 	CALL _isprint
0092b2 30e0      	CPI  R30,0
0092b3 f039      	BREQ _0x2E005B
                 ; 0017 0179             printDebug("%c", *ch);
                +
0092b4 e6e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 684 ) )
0092b5 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 684 ) )
0092b6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 684 ) )
0092b7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 684 ) )
                 	__POINTD1FN _0x2E0000,684
0092b8 940e c73f 	CALL SUBOPT_0x318
                 ; 0017 017A 
                 ; 0017 017B         }
                 ; 0017 017C         else{
0092ba c006      	RJMP _0x2E005C
                 _0x2E005B:
                 ; 0017 017D             printDebug(".");
                +
0092bb eeed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 819 ) )
0092bc e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 819 ) )
0092bd e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 819 ) )
0092be e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 819 ) )
                 	__POINTD1FN _0x2E0000,819
0092bf 940e b22a 	CALL SUBOPT_0x3
                 ; 0017 017E 
                 ; 0017 017F         }
                 _0x2E005C:
                 ; 0017 0180         ch++;
                +
0092c1 5f4f     +SUBI R20 , LOW ( - 1 )
0092c2 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0181     }
                +
0092c3 5f0f     +SUBI R16 , LOW ( - 1 )
0092c4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0092c5 cfe3      	RJMP _0x2E0059
                 _0x2E005A:
                 ; 0017 0182 
                 ; 0017 0183     printDebug("\r\n");
0092c6 940e c72d 	CALL SUBOPT_0x315
                 ; 0017 0184 
                 ; 0017 0185 
                 ; 0017 0186 return;
0092c8 940e cf3f 	CALL __LOADLOCR6
0092ca 962c      	ADIW R28,12
0092cb 9508      	RET
                 ; 0017 0187 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 018A {
                 _print_payload:
                 ; 0017 018B 
                 ; 0017 018C     int len_rem = len;
                 ; 0017 018D     int line_width = 16;            // number of bytes per line //
                 ; 0017 018E     int line_len;
                 ; 0017 018F     int offset = 0;                    // zero-based offset counter //
                 ; 0017 0190     const unsigned char *ch = payload;
                 ; 0017 0191 
                 ; 0017 0192     if (len <= 0)
0092cc 93ba      	ST   -Y,R27
0092cd 93aa      	ST   -Y,R26
0092ce 9724      	SBIW R28,4
0092cf e0e0      	LDI  R30,LOW(0)
0092d0 83ea      	STD  Y+2,R30
0092d1 83eb      	STD  Y+3,R30
0092d2 940e cf38 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
0092d4 850a     +LDD R16 , Y + 10
0092d5 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
0092d6 e120     +LDI R18 , LOW ( 16 )
0092d7 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
0092d8 85ec      	LDD  R30,Y+12
0092d9 85fd      	LDD  R31,Y+12+1
0092da 83ee      	STD  Y+6,R30
0092db 83ff      	STD  Y+6+1,R31
0092dc 85aa      	LDD  R26,Y+10
0092dd 85bb      	LDD  R27,Y+10+1
0092de 940e cf20 	CALL __CPW02
0092e0 f574      	BRGE _0x20E002F
                 ; 0017 0193         return;
                 ; 0017 0194 
                 ; 0017 0195     // data fits on one line //
                 ; 0017 0196     if (len <= line_width) {
0092e1 172a      	CP   R18,R26
0092e2 073b      	CPC  R19,R27
0092e3 f03c      	BRLT _0x2E005E
                 ; 0017 0197         print_hex_ascii_line(ch, len, offset);
0092e4 940e ba9b 	CALL SUBOPT_0x154
0092e6 940e bc94 	CALL SUBOPT_0x1A9
0092e8 940e c751 	CALL SUBOPT_0x31B
                 ; 0017 0198         return;
0092ea c024      	RJMP _0x20E002F
                 ; 0017 0199     }
                 ; 0017 019A     // data spans multiple lines //
                 ; 0017 019B     for ( ;; ) {
                 _0x2E005E:
                 _0x2E0060:
                 ; 0017 019C         // compute current line length //
                 ; 0017 019D         line_len = line_width % len_rem;
0092eb 01f8      	MOVW R30,R16
0092ec 01d9      	MOVW R26,R18
0092ed 940e ce68 	CALL __MODW21
0092ef 01af      	MOVW R20,R30
                 ; 0017 019E         // print line //
                 ; 0017 019F         print_hex_ascii_line(ch, line_len, offset);
0092f0 940e ba9b 	CALL SUBOPT_0x154
0092f2 935a      	ST   -Y,R21
0092f3 934a      	ST   -Y,R20
0092f4 940e c751 	CALL SUBOPT_0x31B
                 ; 0017 01A0         // compute total remaining //
                 ; 0017 01A1         len_rem = len_rem - line_len;
                +
0092f6 1b04     +SUB R16 , R20
0092f7 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01A2         // shift pointer to remaining bytes to print //
                 ; 0017 01A3         ch = ch + line_len;
0092f8 01fa      	MOVW R30,R20
0092f9 940e bc5b 	CALL SUBOPT_0x19F
0092fb 83ee      	STD  Y+6,R30
0092fc 83ff      	STD  Y+6+1,R31
                 ; 0017 01A4         // add offset //
                 ; 0017 01A5         offset = offset + line_width;
0092fd 01f9      	MOVW R30,R18
0092fe 85a8      	LDD  R26,Y+8
0092ff 85b9      	LDD  R27,Y+8+1
009300 0fea      	ADD  R30,R26
009301 1ffb      	ADC  R31,R27
009302 87e8      	STD  Y+8,R30
009303 87f9      	STD  Y+8+1,R31
                 ; 0017 01A6         // check if we have line width chars or less //
                 ; 0017 01A7         if (len_rem <= line_width) {
                +
009304 1720     +CP R18 , R16
009305 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009306 f03c      	BRLT _0x2E0062
                 ; 0017 01A8             // print last line and get out //
                 ; 0017 01A9             print_hex_ascii_line(ch, len_rem, offset);
009307 940e ba9b 	CALL SUBOPT_0x154
009309 931a      	ST   -Y,R17
00930a 930a      	ST   -Y,R16
00930b 940e c751 	CALL SUBOPT_0x31B
                 ; 0017 01AA             break;
00930d c001      	RJMP _0x2E0061
                 ; 0017 01AB         }
                 ; 0017 01AC     }
                 _0x2E0062:
00930e cfdc      	RJMP _0x2E0060
                 _0x2E0061:
                 ; 0017 01AD 
                 ; 0017 01AE     return;
                 _0x20E002F:
00930f 940e cf3f 	CALL __LOADLOCR6
009311 962e      	ADIW R28,14
009312 9508      	RET
                 ; 0017 01AF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
                 ; 0018 0011             if (a[j][i] > a[max][i])
                 ; 0018 0012                 max = j;
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 ; 0018 0015             t = a[max][j];
                 ; 0018 0016             a[max][j] = a[i][j];
                 ; 0018 0017             a[i][j] = t;
                 ; 0018 0018         }
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                 ; 0018 002B         }
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                 ; 0018 003A }
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
                 ; 0018 0041         a[i][i] = 1;
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
                 ; 0018 0044             a[j][i] = 0;
                 ; 0018 0045         }
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                 ; 0018 0052 }
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                 ; 0018 005C 
                 ; 0018 005D 
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                 ; 0018 0060         printDebug("\t\t");
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
                 ; 0018 0063 printDebug("\r\n");
                 ; 0018 0064     }
                 ; 0018 0065 
                 ; 0018 0066     forwardSubstitution();
                 ; 0018 0067     reverseElimination();
                 ; 0018 0068 
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                 ; 0018 006B         printDebug("\t\t");
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
                 ; 0018 006E printDebug("\r\n");
                 ; 0018 006F     }
                 ; 0018 0070 
                 ; 0018 0071     *resA = a[2][3];
                 ; 0018 0072     *resB = a[1][3];
                 ; 0018 0073     *resC = a[0][3];
                 ; 0018 0074 
                 ; 0018 0075     printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                 ; 0018 0076 
                 ; 0018 0077     return;
                 ; 0018 0078 }
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "dht11.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**
                 ;*
                 ;//Brif use timer5
                 ;**/
                 ;void MCUSignalOut(int status){
                 ; 0019 000E void MCUSignalOut(int status){
                 
                 	.CSEG
                 _MCUSignalOut:
                 ; 0019 000F //    DDRL.0  = 1;   //set output
                 ; 0019 0010     char tempRegister = 0;
                 ; 0019 0011     DDRJ |= 0x04;    //oboooo o10o
009313 93ba      	ST   -Y,R27
009314 93aa      	ST   -Y,R26
009315 931a      	ST   -Y,R17
                 ;	status -> Y+1
                 ;	tempRegister -> R17
009316 e010      	LDI  R17,0
009317 91e0 0104 	LDS  R30,260
009319 60e4      	ORI  R30,4
00931a 93e0 0104 	STS  260,R30
                 ; 0019 0012     if(status==1){
00931c 81a9      	LDD  R26,Y+1
00931d 81ba      	LDD  R27,Y+1+1
00931e 9711      	SBIW R26,1
00931f f421      	BRNE _0x320003
                 ; 0019 0013        PORTJ |= 0x04; //0b0000 0100
009320 91e0 0105 	LDS  R30,261
009322 60e4      	ORI  R30,4
009323 c003      	RJMP _0x320020
                 ; 0019 0014     }else{
                 _0x320003:
                 ; 0019 0015         PORTJ &= 0xFB;//0b1111 1011
009324 91e0 0105 	LDS  R30,261
009326 7feb      	ANDI R30,0xFB
                 _0x320020:
009327 93e0 0105 	STS  261,R30
                 ; 0019 0016     }
                 ; 0019 0017 }
009329 8118      	LDD  R17,Y+0
00932a 9623      	ADIW R28,3
00932b 9508      	RET
                 ;int DHT11SignalIn(){
                 ; 0019 0018 int DHT11SignalIn(){
                 _DHT11SignalIn:
                 ; 0019 0019 //    DDRL.0   = 0;   //set input
                 ; 0019 001A //    return DHT11_TO_MCU_PIN;
                 ; 0019 001B     DDRJ &= 0xFB;
00932c 91e0 0104 	LDS  R30,260
00932e 7feb      	ANDI R30,0xFB
00932f 93e0 0104 	STS  260,R30
                 ; 0019 001C     if((PINJ & 0x04)==0x04){
009331 91e0 0103 	LDS  R30,259
009333 70e4      	ANDI R30,LOW(0x4)
009334 30e4      	CPI  R30,LOW(0x4)
009335 f419      	BRNE _0x320005
                 ; 0019 001D        return 0x01;
009336 e0e1      	LDI  R30,LOW(1)
009337 e0f0      	LDI  R31,HIGH(1)
009338 9508      	RET
                 ; 0019 001E     }else{
                 _0x320005:
                 ; 0019 001F        return 0x00;
009339 e0e0      	LDI  R30,LOW(0)
00933a e0f0      	LDI  R31,HIGH(0)
00933b 9508      	RET
                 ; 0019 0020     }
                 ; 0019 0021 
                 ; 0019 0022 }
00933c 9508      	RET
                 ;int DHT11Read(ST_DHT11 *dhtDevice){
                 ; 0019 0023 int DHT11Read(ST_DHT11 *dhtDevice){
                 _DHT11Read:
                 ; 0019 0024     int i, j, temp;
                 ; 0019 0025     int buffer = 0;
                 ; 0019 0026     int count = 0;
                 ; 0019 0027 	int data[5] = {0x00, 0x00, 0x00, 0x00, 0x00};
                 ; 0019 0028 
                 ; 0019 0029     /*start condition*/
                 ; 0019 002A     dhtDevice->status = DHT11_ERROR_TIMEOUT;
00933d 93ba      	ST   -Y,R27
00933e 93aa      	ST   -Y,R26
00933f 972e      	SBIW R28,14
009340 e08e      	LDI  R24,14
009341 e0a0      	LDI  R26,LOW(0)
009342 e0b0      	LDI  R27,HIGH(0)
009343 e5ee      	LDI  R30,LOW(_0x320007*2)
009344 e6f4      	LDI  R31,HIGH(_0x320007*2)
009345 e060      	LDI  R22,BYTE3(_0x320007*2)
009346 940e cf46 	CALL __INITLOCB
009348 940e cf38 	CALL __SAVELOCR6
                 ;	*dhtDevice -> Y+20
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	temp -> R20,R21
                 ;	buffer -> Y+18
                 ;	count -> Y+16
                 ;	data -> Y+6
00934a 940e c755 	CALL SUBOPT_0x31C
                 ; 0019 002B     //MCUSignalOut(MCU_SIGNAL_LOW);
                 ; 0019 002C     //delay_ms(4);
                 ; 0019 002D     MCUSignalOut(MCU_SIGNAL_HIGH);
00934c 940e b54e 	CALL SUBOPT_0x75
00934e dfc4      	RCALL _MCUSignalOut
                 ; 0019 002E     delay_ms(4);
00934f 940e b554 	CALL SUBOPT_0x77
009351 940e cb81 	CALL _delay_ms
                 ; 0019 002F 
                 ; 0019 0030 //    TCCR5A=0x00;
                 ; 0019 0031 //    TCCR5B=0x05;     //count = 128 microsec , 128 * 7812 = about 1sec
                 ; 0019 0032 //
                 ; 0019 0033 //    TCNT5H=0x00;     //timer count clearing
                 ; 0019 0034 //    TCNT5L=0x00;
                 ; 0019 0035 
                 ; 0019 0036     MCUSignalOut(MCU_SIGNAL_LOW);
009353 940e b84c 	CALL SUBOPT_0xF0
009355 dfbd      	RCALL _MCUSignalOut
                 ; 0019 0037     //while((TCNT5H <<8 | TCNT5L)<160);           //about 20 ms
                 ; 0019 0038     delay_ms(20);
009356 940e b68b 	CALL SUBOPT_0xA4
009358 940e cb81 	CALL _delay_ms
                 ; 0019 0039 
                 ; 0019 003A     /*set clk/8
                 ; 0019 003B     *clk@8Mhz/prescaling 8
                 ; 0019 003C     *get count every 1 us
                 ; 0019 003D     */
                 ; 0019 003E //    TCCR5A=0x00;
                 ; 0019 003F //    TCCR5B=0x02;     //count = 1 microsec
                 ; 0019 0040 //
                 ; 0019 0041 //    TCNT5H=0x00;     //timer count clearing
                 ; 0019 0042 //    TCNT5L=0x00;
                 ; 0019 0043 
                 ; 0019 0044     MCUSignalOut(MCU_SIGNAL_HIGH);
00935a 940e b54e 	CALL SUBOPT_0x75
00935c dfb6      	RCALL _MCUSignalOut
                 ; 0019 0045     delay_us(40);
                +
00935d e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
00935e 958a     +DEC R24
00935f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
                 ; 0019 0046     /*end start condition*/
                 ; 0019 0047    // printDebug("DHT11: end Condition \r\n");
                 ; 0019 0048 
                 ; 0019 0049     TCCR5A=0x00;
009360 e0e0      	LDI  R30,LOW(0)
009361 93e0 0120 	STS  288,R30
                 ; 0019 004A     TCCR5B=0x02;     //count = 1 microsec
009363 e0e2      	LDI  R30,LOW(2)
009364 940e b61b 	CALL SUBOPT_0x94
                 ; 0019 004B     TCNT5H=0x00;     //timer count clearing
                 ; 0019 004C     TCNT5L=0x00;
                 ; 0019 004D     while(DHT11SignalIn()==0){
                 _0x320008:
009366 dfc5      	RCALL _DHT11SignalIn
009367 9730      	SBIW R30,0
009368 f461      	BRNE _0x32000A
                 ; 0019 004E         if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us      //if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us
009369 940e c75d 	CALL SUBOPT_0x31D
00936b 36e5      	CPI  R30,LOW(0x65)
00936c e0a0      	LDI  R26,HIGH(0x65)
00936d 07fa      	CPC  R31,R26
00936e f02c      	BRLT _0x32000B
                 ; 0019 004F             dhtDevice->status = DHT11_ERROR_TIMEOUT;
00936f 940e c755 	CALL SUBOPT_0x31C
                 ; 0019 0050            return DHT11_ERROR_TIMEOUT;
009371 e0e3      	LDI  R30,LOW(3)
009372 e0f0      	LDI  R31,HIGH(3)
009373 c09a      	RJMP _0x20E002E
                 ; 0019 0051         }
                 ; 0019 0052     }
                 _0x32000B:
009374 cff1      	RJMP _0x320008
                 _0x32000A:
                 ; 0019 0053 
                 ; 0019 0054     TCNT5H=0x00;     //timer count clearing
009375 940e c766 	CALL SUBOPT_0x31E
                 ; 0019 0055     TCNT5L=0x00;
                 ; 0019 0056     while(DHT11SignalIn()==1){
                 _0x32000C:
009377 dfb4      	RCALL _DHT11SignalIn
009378 30e1      	CPI  R30,LOW(0x1)
009379 e0a0      	LDI  R26,HIGH(0x1)
00937a 07fa      	CPC  R31,R26
00937b f461      	BRNE _0x32000E
                 ; 0019 0057         if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us        //if((TCNT5H <<8 | TCNT5L)>100){       //about 80 us
00937c 940e c75d 	CALL SUBOPT_0x31D
00937e 36e5      	CPI  R30,LOW(0x65)
00937f e0a0      	LDI  R26,HIGH(0x65)
009380 07fa      	CPC  R31,R26
009381 f02c      	BRLT _0x32000F
                 ; 0019 0058             dhtDevice->status = DHT11_ERROR_TIMEOUT;
009382 940e c755 	CALL SUBOPT_0x31C
                 ; 0019 0059            return DHT11_ERROR_TIMEOUT;
009384 e0e3      	LDI  R30,LOW(3)
009385 e0f0      	LDI  R31,HIGH(3)
009386 c087      	RJMP _0x20E002E
                 ; 0019 005A         }
                 ; 0019 005B     }
                 _0x32000F:
009387 cfef      	RJMP _0x32000C
                 _0x32000E:
                 ; 0019 005C 
                 ; 0019 005D     //Read 40 bits (8*5)
                 ; 0019 005E 	for(j = 0; j < 5; ++j) {
                +
009388 e020     +LDI R18 , LOW ( 0 )
009389 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x320011:
                +
00938a 3025     +CPI R18 , LOW ( 5 )
00938b e0e0     +LDI R30 , HIGH ( 5 )
00938c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00938d f014      	BRLT PC+3
00938e 940c 93e5 	JMP _0x320012
                 ; 0019 005F 		for(i = 0; i < 8; ++i) {
                +
009390 e000     +LDI R16 , LOW ( 0 )
009391 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x320014:
                +
009392 3008     +CPI R16 , LOW ( 8 )
009393 e0e0     +LDI R30 , HIGH ( 8 )
009394 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
009395 f014      	BRLT PC+3
009396 940c 93e2 	JMP _0x320015
                 ; 0019 0060 
                 ; 0019 0061 			//LOW for 50us
                 ; 0019 0062 			TCNT5H=0x00;     //timer count clearing
009398 940e c766 	CALL SUBOPT_0x31E
                 ; 0019 0063             TCNT5L=0x00;
                 ; 0019 0064             while(DHT11SignalIn()==0){
                 _0x320016:
00939a df91      	RCALL _DHT11SignalIn
00939b 9730      	SBIW R30,0
00939c f461      	BRNE _0x320018
                 ; 0019 0065                 if((TCNT5H <<8 | TCNT5L)>70){       //about 50 us            //if((TCNT5H <<8 | TCNT5L)>70){
00939d 940e c75d 	CALL SUBOPT_0x31D
00939f 34e7      	CPI  R30,LOW(0x47)
0093a0 e0a0      	LDI  R26,HIGH(0x47)
0093a1 07fa      	CPC  R31,R26
0093a2 f02c      	BRLT _0x320019
                 ; 0019 0066                     dhtDevice->status = DHT11_ERROR_TIMEOUT;
0093a3 940e c755 	CALL SUBOPT_0x31C
                 ; 0019 0067                    return DHT11_ERROR_TIMEOUT;
0093a5 e0e3      	LDI  R30,LOW(3)
0093a6 e0f0      	LDI  R31,HIGH(3)
0093a7 c066      	RJMP _0x20E002E
                 ; 0019 0068                 }
                 ; 0019 0069             }
                 _0x320019:
0093a8 cff1      	RJMP _0x320016
                 _0x320018:
                 ; 0019 006A 
                 ; 0019 006B 			//Start counter
                 ; 0019 006C 			//buffer = 0;
                 ; 0019 006D 			//HIGH for 26-28us = 0 / 70us = 1
                 ; 0019 006E 
                 ; 0019 006F 			TCNT5H=0x00;     //timer count clearing
0093a9 940e c766 	CALL SUBOPT_0x31E
                 ; 0019 0070             TCNT5L=0x00;
                 ; 0019 0071             while(DHT11SignalIn()==1){
                 _0x32001A:
0093ab df80      	RCALL _DHT11SignalIn
0093ac 30e1      	CPI  R30,LOW(0x1)
0093ad e0a0      	LDI  R26,HIGH(0x1)
0093ae 07fa      	CPC  R31,R26
0093af f471      	BRNE _0x32001C
                 ; 0019 0072                 count = (TCNT5H <<8 | TCNT5L);
0093b0 940e c75d 	CALL SUBOPT_0x31D
0093b2 940e c76c 	CALL SUBOPT_0x31F
                 ; 0019 0073                 if(count>90){       //about 70 us                //if(count>90){
0093b4 35ab      	CPI  R26,LOW(0x5B)
0093b5 e0e0      	LDI  R30,HIGH(0x5B)
0093b6 07be      	CPC  R27,R30
0093b7 f02c      	BRLT _0x32001D
                 ; 0019 0074                     dhtDevice->status = DHT11_ERROR_TIMEOUT;
0093b8 940e c755 	CALL SUBOPT_0x31C
                 ; 0019 0075                    return DHT11_ERROR_TIMEOUT;
0093ba e0e3      	LDI  R30,LOW(3)
0093bb e0f0      	LDI  R31,HIGH(3)
0093bc c051      	RJMP _0x20E002E
                 ; 0019 0076                 }
                 ; 0019 0077 
                 ; 0019 0078             }
                 _0x32001D:
0093bd cfed      	RJMP _0x32001A
                 _0x32001C:
                 ; 0019 0079 
                 ; 0019 007A //            if(count > 40){
                 ; 0019 007B //               buffer = 1;
                 ; 0019 007C //            }
                 ; 0019 007D 			//Calc amount of time passed
                 ; 0019 007E 			temp = count;
                +
0093be 8948     +LDD R20 , Y + 16
0093bf 8959     +LDD R21 , Y + 16 + 1
                 	__GETWRS 20,21,16
                 ; 0019 007F 
                 ; 0019 0080 			//shift 0
                 ; 0019 0081 			data[j] = data[j] << 1;
0093c0 940e c771 	CALL SUBOPT_0x320
0093c2 0fea      	ADD  R30,R26
0093c3 1ffb      	ADC  R31,R27
0093c4 010f      	MOVW R0,R30
0093c5 940e c771 	CALL SUBOPT_0x320
0093c7 940e c777 	CALL SUBOPT_0x321
0093c9 0fee      	LSL  R30
0093ca 1fff      	ROL  R31
0093cb 01d0      	MOVW R26,R0
0093cc 93ed      	ST   X+,R30
0093cd 93fc      	ST   X,R31
                 ; 0019 0082 
                 ; 0019 0083 			//if > 30us it's 1
                 ; 0019 0084 			if(temp > 40)
                +
0093ce 3249     +CPI R20 , LOW ( 41 )
0093cf e0e0     +LDI R30 , HIGH ( 41 )
0093d0 075e     +CPC R21 , R30
                 	__CPWRN 20,21,41
0093d1 f06c      	BRLT _0x32001E
                 ; 0019 0085 				data[j] = data[j]+1;
0093d2 940e c771 	CALL SUBOPT_0x320
0093d4 0fea      	ADD  R30,R26
0093d5 1ffb      	ADC  R31,R27
0093d6 010f      	MOVW R0,R30
0093d7 940e c771 	CALL SUBOPT_0x320
0093d9 940e c777 	CALL SUBOPT_0x321
0093db 9631      	ADIW R30,1
0093dc 01d0      	MOVW R26,R0
0093dd 93ed      	ST   X+,R30
0093de 93fc      	ST   X,R31
                 ; 0019 0086 		}
                 _0x32001E:
                +
0093df 5f0f     +SUBI R16 , LOW ( - 1 )
0093e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0093e1 cfb0      	RJMP _0x320014
                 _0x320015:
                 ; 0019 0087 	}
                +
0093e2 5f2f     +SUBI R18 , LOW ( - 1 )
0093e3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0093e4 cfa5      	RJMP _0x320011
                 _0x320012:
                 ; 0019 0088 
                 ; 0019 0089     //MCUSignalOut(MCU_SIGNAL_HIGH);
                 ; 0019 008A 
                 ; 0019 008B     //verify the Checksum
                 ; 0019 008C 	if(data[4] != (data[0] + data[2])){
0093e5 85ea      	LDD  R30,Y+10
0093e6 85fb      	LDD  R31,Y+10+1
0093e7 940e bc5b 	CALL SUBOPT_0x19F
0093e9 85ae      	LDD  R26,Y+14
0093ea 85bf      	LDD  R27,Y+14+1
0093eb 17ea      	CP   R30,R26
0093ec 07fb      	CPC  R31,R27
0093ed f041      	BREQ _0x32001F
                 ; 0019 008D         dhtDevice->status = DHT11_ERROR_CHECKSUM;
0093ee 89ac      	LDD  R26,Y+20
0093ef 89bd      	LDD  R27,Y+20+1
0093f0 9618      	ADIW R26,8
0093f1 e0e2      	LDI  R30,LOW(2)
0093f2 e0f0      	LDI  R31,HIGH(2)
0093f3 93ed      	ST   X+,R30
0093f4 93fc      	ST   X,R31
                 ; 0019 008E         return DHT11_ERROR_CHECKSUM;
0093f5 c018      	RJMP _0x20E002E
                 ; 0019 008F     }
                 ; 0019 0090 
                 ; 0019 0091 
                 ; 0019 0092 
                 ; 0019 0093     dhtDevice->temp = (float)data[2];
                 _0x32001F:
0093f6 85ea      	LDD  R30,Y+10
0093f7 85fb      	LDD  R31,Y+10+1
0093f8 940e c6c3 	CALL SUBOPT_0x303
0093fa 89ac      	LDD  R26,Y+20
0093fb 89bd      	LDD  R27,Y+20+1
0093fc 940e cea3 	CALL __PUTDP1
                 ; 0019 0094     dhtDevice->humi = (float)data[0];
0093fe 81ee      	LDD  R30,Y+6
0093ff 81ff      	LDD  R31,Y+6+1
009400 940e c6c3 	CALL SUBOPT_0x303
                +
009402 89ac     +LDD R26 , Y + 20
009403 89bd     +LDD R27 , Y + 20 + 1
009404 9614     +ADIW R26 , 4
009405 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 20,4
                 ; 0019 0095     dhtDevice->status = DHT11_SUCCESS;
009407 89ac      	LDD  R26,Y+20
009408 89bd      	LDD  R27,Y+20+1
009409 9618      	ADIW R26,8
00940a e0e1      	LDI  R30,LOW(1)
00940b e0f0      	LDI  R31,HIGH(1)
00940c 93ed      	ST   X+,R30
00940d 93fc      	ST   X,R31
                 ; 0019 0096     return DHT11_SUCCESS;
                 _0x20E002E:
00940e 940e cf3f 	CALL __LOADLOCR6
009410 9666      	ADIW R28,22
009411 9508      	RET
                 ; 0019 0097 }
                 
                 	.CSEG
                 _fabs:
009412 940e cecd 	CALL __PUTPARD2
009414 91e9          ld   r30,y+
009415 91f9          ld   r31,y+
009416 9169          ld   r22,y+
009417 9179          ld   r23,y+
009418 777f          cbr  r23,0x80
009419 9508          ret
                 _atoi:
00941a 93ba      	ST   -Y,R27
00941b 93aa      	ST   -Y,R26
00941c 81b9         	ldd  r27,y+1
00941d 81a8         	ld   r26,y
                 __atoi0:
00941e 91ec         	ld   r30,x
00941f 2f8a              mov  r24,r26
009420 2fae      	MOV  R26,R30
009421 940e b1ac 	CALL _isspace
009423 2fa8              mov  r26,r24
009424 23ee         	tst  r30
009425 f011         	breq __atoi1
009426 9611         	adiw r26,1
009427 cff6         	rjmp __atoi0
                 __atoi1:
009428 94e8         	clt
009429 91ec         	ld   r30,x
00942a 32ed         	cpi  r30,'-'
00942b f411         	brne __atoi2
00942c 9468         	set
00942d c002         	rjmp __atoi3
                 __atoi2:
00942e 32eb         	cpi  r30,'+'
00942f f409         	brne __atoi4
                 __atoi3:
009430 9611         	adiw r26,1
                 __atoi4:
009431 2766         	clr  r22
009432 2777         	clr  r23
                 __atoi5:
009433 91ec         	ld   r30,x
009434 2f8a              mov  r24,r26
009435 2fae      	MOV  R26,R30
009436 940e b19a 	CALL _isdigit
009438 2fa8              mov  r26,r24
009439 23ee         	tst  r30
00943a f079         	breq __atoi6
00943b 01fb         	movw r30,r22
00943c 0f66         	lsl  r22
00943d 1f77         	rol  r23
00943e 0f66         	lsl  r22
00943f 1f77         	rol  r23
009440 0f6e         	add  r22,r30
009441 1f7f         	adc  r23,r31
009442 0f66         	lsl  r22
009443 1f77         	rol  r23
009444 91ed         	ld   r30,x+
009445 27ff         	clr  r31
009446 53e0         	subi r30,'0'
009447 0f6e         	add  r22,r30
009448 1f7f         	adc  r23,r31
009449 cfe9         	rjmp __atoi5
                 __atoi6:
00944a 01fb         	movw r30,r22
00944b f41e         	brtc __atoi7
00944c 95e0         	com  r30
00944d 95f0         	com  r31
00944e 9631         	adiw r30,1
                 __atoi7:
00944f 9622         	adiw r28,2
009450 9508         	ret
                 _atol:
009451 93ba      	ST   -Y,R27
009452 93aa      	ST   -Y,R26
009453 81b9          ldd  r27,y+1
009454 81a8          ld   r26,y
                 __atol0:
009455 91ec          ld   r30,x
009456 93af          push r26
009457 2fae      	MOV  R26,R30
009458 940e b1ac 	CALL _isspace
00945a 91af          pop  r26
00945b 23ee          tst  r30
00945c f011          breq __atol1
00945d 9611          adiw r26,1
00945e cff6          rjmp __atol0
                 __atol1:
00945f 94e8          clt
009460 91ec          ld   r30,x
009461 32ed          cpi  r30,'-'
009462 f411          brne __atol2
009463 9468          set
009464 c002          rjmp __atol3
                 __atol2:
009465 32eb          cpi  r30,'+'
009466 f409          brne __atol4
                 __atol3:
009467 9611          adiw r26,1
                 __atol4:
009468 2400          clr  r0
009469 2411          clr  r1
00946a 2788          clr  r24
00946b 2799          clr  r25
                 __atol5:
00946c 91ec          ld   r30,x
00946d 93af          push r26
00946e 2fae      	MOV  R26,R30
00946f 940e b19a 	CALL _isdigit
009471 91af          pop  r26
009472 23ee          tst  r30
009473 f089          breq __atol6
009474 01f0          movw r30,r0
009475 01bc          movw r22,r24
009476 d01b          rcall __atol8
009477 d01a          rcall __atol8
009478 0e0e          add  r0,r30
009479 1e1f          adc  r1,r31
00947a 1f86          adc  r24,r22
00947b 1f97          adc  r25,r23
00947c d015          rcall __atol8
00947d 91ed          ld   r30,x+
00947e 27ff          clr  r31
00947f 53e0          subi r30,'0'
009480 0e0e          add  r0,r30
009481 1e1f          adc  r1,r31
009482 1f8f          adc  r24,r31
009483 1f9f          adc  r25,r31
009484 cfe7          rjmp __atol5
                 __atol6:
009485 01f0          movw r30,r0
009486 01bc          movw r22,r24
009487 f446          brtc __atol7
009488 95e0          com  r30
009489 95f0          com  r31
00948a 9560          com  r22
00948b 9570          com  r23
00948c 2788          clr  r24
00948d 9631          adiw r30,1
00948e 1f68          adc  r22,r24
00948f 1f78          adc  r23,r24
                 __atol7:
009490 9622          adiw r28,2
009491 9508          ret
                 
                 __atol8:
009492 0c00          lsl  r0
009493 1c11          rol  r1
009494 1f88          rol  r24
009495 1f99          rol  r25
009496 9508          ret
                 _ftoa:
009497 93ba      	ST   -Y,R27
009498 93aa      	ST   -Y,R26
009499 9724      	SBIW R28,4
00949a 940e bef2 	CALL SUBOPT_0x20C
00949c e3ef      	LDI  R30,LOW(63)
00949d 83eb      	STD  Y+3,R30
00949e 931a      	ST   -Y,R17
00949f 930a      	ST   -Y,R16
0094a0 85eb      	LDD  R30,Y+11
0094a1 85fc      	LDD  R31,Y+11+1
0094a2 3fef      	CPI  R30,LOW(0xFFFF)
0094a3 efaf      	LDI  R26,HIGH(0xFFFF)
0094a4 07fa      	CPC  R31,R26
0094a5 f449      	BRNE _0x200000D
0094a6 940e ba9b 	CALL SUBOPT_0x154
                +
0094a8 e6ae     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0094a9 e6b4     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
0094aa e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
0094ab e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
0094ac 940e 979f 	CALL _strcpyf
0094ae c09f      	RJMP _0x20E002D
                 _0x200000D:
0094af 3fef      	CPI  R30,LOW(0x7FFF)
0094b0 e7af      	LDI  R26,HIGH(0x7FFF)
0094b1 07fa      	CPC  R31,R26
0094b2 f449      	BRNE _0x200000C
0094b3 940e ba9b 	CALL SUBOPT_0x154
                +
0094b5 e6af     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0094b6 e6b4     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
0094b7 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
0094b8 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
0094b9 940e 979f 	CALL _strcpyf
0094bb c092      	RJMP _0x20E002D
                 _0x200000C:
0094bc 85ac      	LDD  R26,Y+12
0094bd 23aa      	TST  R26
0094be f452      	BRPL _0x200000F
0094bf 940e b4fa 	CALL SUBOPT_0x6B
0094c1 940e cb8b 	CALL __ANEGF1
0094c3 940e c77c 	CALL SUBOPT_0x322
0094c5 940e c781 	CALL SUBOPT_0x323
0094c7 e2ed      	LDI  R30,LOW(45)
0094c8 93ec      	ST   X,R30
                 _0x200000F:
0094c9 85a8      	LDD  R26,Y+8
0094ca 30a7      	CPI  R26,LOW(0x7)
0094cb f010      	BRLO _0x2000010
0094cc e0e6      	LDI  R30,LOW(6)
0094cd 87e8      	STD  Y+8,R30
                 _0x2000010:
0094ce 8518      	LDD  R17,Y+8
                 _0x2000011:
0094cf 2fe1      	MOV  R30,R17
0094d0 5011      	SUBI R17,1
0094d1 30e0      	CPI  R30,0
0094d2 f029      	BREQ _0x2000013
0094d3 940e c788 	CALL SUBOPT_0x324
0094d5 940e b6d6 	CALL SUBOPT_0xB3
0094d7 cff7      	RJMP _0x2000011
                 _0x2000013:
0094d8 940e c791 	CALL SUBOPT_0x325
0094da 940e cc31 	CALL __ADDF12
0094dc 940e c77c 	CALL SUBOPT_0x322
0094de e010      	LDI  R17,LOW(0)
0094df 940e c798 	CALL SUBOPT_0x326
0094e1 940e b6d6 	CALL SUBOPT_0xB3
                 _0x2000014:
0094e3 940e c791 	CALL SUBOPT_0x325
0094e5 940e cd14 	CALL __CMPF12
0094e7 f098      	BRLO _0x2000016
0094e8 940e b6e0 	CALL SUBOPT_0xB5
0094ea 940e c79d 	CALL SUBOPT_0x327
0094ec 940e b6d6 	CALL SUBOPT_0xB3
0094ee 5f1f      	SUBI R17,-LOW(1)
0094ef 3217      	CPI  R17,39
0094f0 f048      	BRLO _0x2000017
0094f1 940e ba9b 	CALL SUBOPT_0x154
                +
0094f3 e7a3     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
0094f4 e6b4     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
0094f5 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
0094f6 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
0094f7 940e 979f 	CALL _strcpyf
0094f9 c054      	RJMP _0x20E002D
                 _0x2000017:
0094fa cfe8      	RJMP _0x2000014
                 _0x2000016:
0094fb 3010      	CPI  R17,0
0094fc f429      	BRNE _0x2000018
0094fd 940e c781 	CALL SUBOPT_0x323
0094ff e3e0      	LDI  R30,LOW(48)
009500 93ec      	ST   X,R30
009501 c024      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
009502 2fe1      	MOV  R30,R17
009503 5011      	SUBI R17,1
009504 30e0      	CPI  R30,0
009505 f101      	BREQ _0x200001C
009506 940e c788 	CALL SUBOPT_0x324
009508 940e c7a2 	CALL SUBOPT_0x328
00950a 940e b674 	CALL SUBOPT_0xA0
00950c 940e b1ff 	CALL _floor
00950e 940e b6d6 	CALL SUBOPT_0xB3
009510 940e c791 	CALL SUBOPT_0x325
009512 940e cccf 	CALL __DIVF21
009514 940e cbbe 	CALL __CFD1U
009516 2f0e      	MOV  R16,R30
009517 940e c781 	CALL SUBOPT_0x323
009519 940e c7a7 	CALL SUBOPT_0x329
00951b 940e befb 	CALL SUBOPT_0x20E
00951d 940e cc81 	CALL __MULF12
00951f 940e c7ad 	CALL SUBOPT_0x32A
009521 940e bed1 	CALL SUBOPT_0x205
009523 940e c77c 	CALL SUBOPT_0x322
009525 cfdc      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
009526 85e8      	LDD  R30,Y+8
009527 30e0      	CPI  R30,0
009528 f109      	BREQ _0x20E002C
009529 940e c781 	CALL SUBOPT_0x323
00952b e2ee      	LDI  R30,LOW(46)
00952c 93ec      	ST   X,R30
                 _0x200001E:
00952d 85e8      	LDD  R30,Y+8
00952e 50e1      	SUBI R30,LOW(1)
00952f 87e8      	STD  Y+8,R30
009530 5fef      	SUBI R30,-LOW(1)
009531 f0c1      	BREQ _0x2000020
009532 940e c7ad 	CALL SUBOPT_0x32A
009534 940e c79d 	CALL SUBOPT_0x327
009536 940e c77c 	CALL SUBOPT_0x322
009538 940e b4fa 	CALL SUBOPT_0x6B
00953a 940e cbbe 	CALL __CFD1U
00953c 2f0e      	MOV  R16,R30
00953d 940e c781 	CALL SUBOPT_0x323
00953f 940e c7a7 	CALL SUBOPT_0x329
009541 940e c7ad 	CALL SUBOPT_0x32A
009543 940e c6c3 	CALL SUBOPT_0x303
009545 940e bed1 	CALL SUBOPT_0x205
009547 940e c77c 	CALL SUBOPT_0x322
009549 cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002C:
00954a 81ae      	LDD  R26,Y+6
00954b 81bf      	LDD  R27,Y+6+1
00954c e0e0      	LDI  R30,LOW(0)
00954d 93ec      	ST   X,R30
                 _0x20E002D:
00954e 8119      	LDD  R17,Y+1
00954f 8108      	LDD  R16,Y+0
009550 962d      	ADIW R28,13
009551 9508      	RET
                 _atof:
009552 93ba      	ST   -Y,R27
009553 93aa      	ST   -Y,R26
009554 972a      	SBIW R28,10
009555 940e cf38 	CALL __SAVELOCR6
009557 e0e0      	LDI  R30,LOW(0)
                +
009558 87e8     +STD Y + 8 , R30
009559 87e9     +STD Y + 8 + 1 , R30
00955a 87ea     +STD Y + 8 + 2 , R30
00955b 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
00955c 89a8      	LDD  R26,Y+16
00955d 89b9      	LDD  R27,Y+16+1
00955e 91ec      	LD   R30,X
00955f 2f5e      	MOV  R21,R30
009560 2fae      	MOV  R26,R30
009561 940e b1ac 	CALL _isspace
009563 30e0      	CPI  R30,0
009564 f019      	BREQ _0x200003E
009565 940e c7b2 	CALL SUBOPT_0x32B
009567 cff4      	RJMP _0x200003C
                 _0x200003E:
009568 e0e0      	LDI  R30,LOW(0)
009569 83ef      	STD  Y+7,R30
00956a 325b      	CPI  R21,43
00956b f021      	BREQ _0x2000073
00956c 325d      	CPI  R21,45
00956d f439      	BRNE _0x2000041
00956e e0e1      	LDI  R30,LOW(1)
00956f 83ef      	STD  Y+7,R30
                 _0x2000073:
009570 89e8      	LDD  R30,Y+16
009571 89f9      	LDD  R31,Y+16+1
009572 9631      	ADIW R30,1
009573 8be8      	STD  Y+16,R30
009574 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
009575 e0e0      	LDI  R30,LOW(0)
009576 2f4e      	MOV  R20,R30
009577 2f5e      	MOV  R21,R30
                +
009578 8908     +LDD R16 , Y + 16
009579 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
00957a 89a8      	LDD  R26,Y+16
00957b 89b9      	LDD  R27,Y+16+1
00957c 940e c715 	CALL SUBOPT_0x312
00957e f449      	BRNE _0x2000045
00957f 89a8      	LDD  R26,Y+16
009580 89b9      	LDD  R27,Y+16+1
009581 91ac      	LD   R26,X
009582 e2ee      	LDI  R30,LOW(46)
009583 940e cdc7 	CALL __EQB12
009585 2f5e      	MOV  R21,R30
009586 30e0      	CPI  R30,0
009587 f021      	BREQ _0x2000044
                 _0x2000045:
009588 2b45      	OR   R20,R21
009589 940e c7b2 	CALL SUBOPT_0x32B
00958b cfee      	RJMP _0x2000042
                 _0x2000044:
                +
00958c 8928     +LDD R18 , Y + 16
00958d 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
00958e 3040      	CPI  R20,0
00958f f109      	BREQ _0x2000047
009590 89e8      	LDD  R30,Y+16
009591 89f9      	LDD  R31,Y+16+1
009592 9731      	SBIW R30,1
009593 8be8      	STD  Y+16,R30
009594 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
009595 89a8      	LDD  R26,Y+16
009596 89b9      	LDD  R27,Y+16+1
009597 91ac      	LD   R26,X
009598 32ae      	CPI  R26,LOW(0x2E)
009599 f0b9      	BREQ _0x200004A
00959a 89a8      	LDD  R26,Y+16
00959b 89b9      	LDD  R27,Y+16+1
00959c 940e c6c0 	CALL SUBOPT_0x302
00959e 97f0      	SBIW R30,48
00959f 940e b7af 	CALL SUBOPT_0xD6
0095a1 940e c6c3 	CALL SUBOPT_0x303
0095a3 940e b674 	CALL SUBOPT_0xA0
0095a5 940e b679 	CALL SUBOPT_0xA1
0095a7 940e cccf 	CALL __DIVF21
0095a9 940e c6e1 	CALL SUBOPT_0x309
0095ab 89e8      	LDD  R30,Y+16
0095ac 89f9      	LDD  R31,Y+16+1
0095ad 9731      	SBIW R30,1
0095ae 8be8      	STD  Y+16,R30
0095af 8bf9      	STD  Y+16+1,R31
0095b0 cfe4      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0095b1 940e c798 	CALL SUBOPT_0x326
0095b3 940e b820 	CALL SUBOPT_0xE7
                 _0x200004B:
0095b5 89a8      	LDD  R26,Y+16
0095b6 89b9      	LDD  R27,Y+16+1
0095b7 9711      	SBIW R26,1
0095b8 8ba8      	STD  Y+16,R26
0095b9 8bb9      	STD  Y+16+1,R27
0095ba 17a0      	CP   R26,R16
0095bb 07b1      	CPC  R27,R17
0095bc f0a0      	BRLO _0x200004D
0095bd 940e c6c0 	CALL SUBOPT_0x302
0095bf 97f0      	SBIW R30,48
0095c0 940e b26d 	CALL SUBOPT_0xB
0095c2 940e c6c3 	CALL SUBOPT_0x303
0095c4 940e cc81 	CALL __MULF12
0095c6 940e b7af 	CALL SUBOPT_0xD6
0095c8 940e cc31 	CALL __ADDF12
0095ca 940e c6e1 	CALL SUBOPT_0x309
0095cc 940e c7b8 	CALL SUBOPT_0x32C
0095ce 940e b820 	CALL SUBOPT_0xE7
0095d0 cfe4      	RJMP _0x200004B
                 _0x200004D:
0095d1 01d9      	MOVW R26,R18
                +
0095d2 5f2f     +SUBI R18 , LOW ( - 1 )
0095d3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0095d4 915c      	LD   R21,X
0095d5 3655      	CPI  R21,101
0095d6 f019      	BREQ _0x200004F
0095d7 3455      	CPI  R21,69
0095d8 f009      	BREQ _0x200004F
0095d9 c057      	RJMP _0x200004E
                 _0x200004F:
0095da e0e0      	LDI  R30,LOW(0)
0095db 2f4e      	MOV  R20,R30
0095dc 83ee      	STD  Y+6,R30
0095dd 01d9      	MOVW R26,R18
0095de 915c      	LD   R21,X
0095df 325b      	CPI  R21,43
0095e0 f021      	BREQ _0x2000074
0095e1 325d      	CPI  R21,45
0095e2 f421      	BRNE _0x2000053
0095e3 e0e1      	LDI  R30,LOW(1)
0095e4 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
0095e5 5f2f     +SUBI R18 , LOW ( - 1 )
0095e6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
0095e7 01d9      	MOVW R26,R18
                +
0095e8 5f2f     +SUBI R18 , LOW ( - 1 )
0095e9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0095ea 91ec      	LD   R30,X
0095eb 2f5e      	MOV  R21,R30
0095ec 2fae      	MOV  R26,R30
0095ed 940e b19a 	CALL _isdigit
0095ef 30e0      	CPI  R30,0
0095f0 f039      	BREQ _0x2000056
0095f1 e0aa      	LDI  R26,LOW(10)
0095f2 024a      	MULS R20,R26
0095f3 01f0      	MOVW R30,R0
0095f4 0fe5      	ADD  R30,R21
0095f5 53e0      	SUBI R30,LOW(48)
0095f6 2f4e      	MOV  R20,R30
0095f7 cfef      	RJMP _0x2000054
                 _0x2000056:
0095f8 3247      	CPI  R20,39
0095f9 f068      	BRLO _0x2000057
0095fa 81ef      	LDD  R30,Y+7
0095fb 30e0      	CPI  R30,0
0095fc f029      	BREQ _0x2000058
                +
0095fd efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0095fe efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0095ff e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
009600 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
009601 c03a      	RJMP _0x20E002B
                 _0x2000058:
                +
009602 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
009603 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
009604 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
009605 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
009606 c035      	RJMP _0x20E002B
                 _0x2000057:
009607 e250      	LDI  R21,LOW(32)
009608 940e c798 	CALL SUBOPT_0x326
00960a 940e b820 	CALL SUBOPT_0xE7
                 _0x2000059:
00960c 3050      	CPI  R21,0
00960d f079      	BREQ _0x200005B
00960e 940e b7b4 	CALL SUBOPT_0xD7
009610 940e b26d 	CALL SUBOPT_0xB
009612 940e c7bb 	CALL SUBOPT_0x32D
009614 2fe4      	MOV  R30,R20
009615 23e5      	AND  R30,R21
009616 f021      	BREQ _0x200005C
009617 940e c7b8 	CALL SUBOPT_0x32C
009619 940e b820 	CALL SUBOPT_0xE7
                 _0x200005C:
00961b 9556      	LSR  R21
00961c cfef      	RJMP _0x2000059
                 _0x200005B:
00961d 81ee      	LDD  R30,Y+6
00961e 30e0      	CPI  R30,0
00961f f039      	BREQ _0x200005D
009620 940e b7b4 	CALL SUBOPT_0xD7
009622 940e b7af 	CALL SUBOPT_0xD6
009624 940e cccf 	CALL __DIVF21
009626 c006      	RJMP _0x2000075
                 _0x200005D:
009627 940e b7b4 	CALL SUBOPT_0xD7
009629 940e b7af 	CALL SUBOPT_0xD6
00962b 940e cc81 	CALL __MULF12
                 _0x2000075:
                +
00962d 87e8     +STD Y + 8 , R30
00962e 87f9     +STD Y + 8 + 1 , R31
00962f 876a     +STD Y + 8 + 2 , R22
009630 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
009631 81ef      	LDD  R30,Y+7
009632 30e0      	CPI  R30,0
009633 f031      	BREQ _0x200005F
009634 940e b443 	CALL SUBOPT_0x4F
009636 940e cb8b 	CALL __ANEGF1
009638 940e c6e1 	CALL SUBOPT_0x309
                 _0x200005F:
00963a 940e b443 	CALL SUBOPT_0x4F
                 _0x20E002B:
00963c 940e cf3f 	CALL __LOADLOCR6
00963e 9662      	ADIW R28,18
00963f 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
009640 940e b623 	CALL SUBOPT_0x95
009642 940e cdbd 	CALL __CWD1
009644 940e c7bf 	CALL SUBOPT_0x32E
009646 c0d7      	RJMP _0x20E0028
                 _rand:
009647 91e0 1a89 	LDS  R30,__seed_G100
009649 91f0 1a8a 	LDS  R31,__seed_G100+1
00964b 9160 1a8b 	LDS  R22,__seed_G100+2
00964d 9170 1a8c 	LDS  R23,__seed_G100+3
                +
00964f e6ad     +LDI R26 , LOW ( 0x41C64E6D )
009650 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
009651 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
009652 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
009653 940e cdde 	CALL __MULD12U
                +
009655 59ee     +SUBI R30 , LOW ( - 30562 )
009656 48f8     +SBCI R31 , HIGH ( - 30562 )
009657 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
009658 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
009659 940e c7bf 	CALL SUBOPT_0x32E
00965b 01fb      	movw r30,r22
00965c 77ff      	andi r31,0x7F
00965d 9508      	RET
                 _allocate_block_G100:
00965e 940e c5dd 	CALL SUBOPT_0x2EC
                +
009660 e80a     +LDI R16 , LOW ( 7562 )
009661 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
009662 01d8      	MOVW R26,R16
009663 940e b8f4 	CALL SUBOPT_0x10D
                 _0x2000061:
009665 2e00      	MOV  R0,R16
009666 2a01      	OR   R0,R17
009667 f199      	BREQ _0x2000063
009668 01d8      	MOVW R26,R16
009669 940e ce94 	CALL __GETW1P
00966b 0fe0      	ADD  R30,R16
00966c 1ff1      	ADC  R31,R17
00966d 9634      	ADIW R30,4
00966e 01af      	MOVW R20,R30
00966f 9612      	ADIW R26,2
009670 940e ce94 	CALL __GETW1P
009672 019f      	MOVW R18,R30
009673 9730      	SBIW R30,0
009674 f019      	BREQ _0x2000064
                +
009675 832e     +STD Y + 6 , R18
009676 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
009677 c004      	RJMP _0x2000065
                 _0x2000064:
009678 e0e0      	LDI  R30,LOW(8704)
009679 e2f2      	LDI  R31,HIGH(8704)
00967a 83ee      	STD  Y+6,R30
00967b 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00967c 81ae      	LDD  R26,Y+6
00967d 81bf      	LDD  R27,Y+6+1
00967e 1ba4      	SUB  R26,R20
00967f 0bb5      	SBC  R27,R21
009680 85e8      	LDD  R30,Y+8
009681 85f9      	LDD  R31,Y+8+1
009682 9634      	ADIW R30,4
009683 17ae      	CP   R26,R30
009684 07bf      	CPC  R27,R31
009685 f098      	BRLO _0x2000066
009686 01fa      	MOVW R30,R20
                +
009687 01d8     +MOVW R26 , R16
009688 9612     +ADIW R26 , 2
009689 93ed     +ST X + , R30
00968a 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00968b 01f9      	MOVW R30,R18
                +
00968c 01da     +MOVW R26 , R20
00968d 9612     +ADIW R26 , 2
00968e 93ed     +ST X + , R30
00968f 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
009690 85e8      	LDD  R30,Y+8
009691 85f9      	LDD  R31,Y+8+1
009692 01da      	MOVW R26,R20
009693 93ed      	ST   X+,R30
009694 93fc      	ST   X,R31
                +
009695 5f4c     +SUBI R20 , LOW ( - 4 )
009696 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
009697 01fa      	MOVW R30,R20
009698 c004      	RJMP _0x20E002A
                 _0x2000066:
009699 0189      	MOVW R16,R18
00969a cfca      	RJMP _0x2000061
                 _0x2000063:
00969b e0e0      	LDI  R30,LOW(0)
00969c e0f0      	LDI  R31,HIGH(0)
                 _0x20E002A:
00969d 940e cf3f 	CALL __LOADLOCR6
00969f 962a      	ADIW R28,10
0096a0 9508      	RET
                 _find_prev_block_G100:
0096a1 940e b589 	CALL SUBOPT_0x7F
                +
0096a3 e80a     +LDI R16 , LOW ( 7562 )
0096a4 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
0096a5 2e00      	MOV  R0,R16
0096a6 2a01      	OR   R0,R17
0096a7 f079      	BREQ _0x2000069
0096a8 01d8      	MOVW R26,R16
0096a9 9612      	ADIW R26,2
0096aa 940e ce94 	CALL __GETW1P
0096ac 019f      	MOVW R18,R30
0096ad 01df      	MOVW R26,R30
0096ae 81ec      	LDD  R30,Y+4
0096af 81fd      	LDD  R31,Y+4+1
0096b0 17ea      	CP   R30,R26
0096b1 07fb      	CPC  R31,R27
0096b2 f411      	BRNE _0x200006A
0096b3 01f8      	MOVW R30,R16
0096b4 c004      	RJMP _0x20E0029
                 _0x200006A:
0096b5 0189      	MOVW R16,R18
0096b6 cfee      	RJMP _0x2000067
                 _0x2000069:
0096b7 e0e0      	LDI  R30,LOW(0)
0096b8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0029:
0096b9 940e cf41 	CALL __LOADLOCR4
0096bb 9626      	ADIW R28,6
0096bc 9508      	RET
                 _realloc:
0096bd 940e c5dd 	CALL SUBOPT_0x2EC
0096bf 85ea      	LDD  R30,Y+10
0096c0 85fb      	LDD  R31,Y+10+1
0096c1 9730      	SBIW R30,0
0096c2 f1a9      	BREQ _0x200006B
0096c3 9734      	SBIW R30,4
0096c4 018f      	MOVW R16,R30
0096c5 01d8      	MOVW R26,R16
0096c6 dfda      	RCALL _find_prev_block_G100
0096c7 019f      	MOVW R18,R30
0096c8 9730      	SBIW R30,0
0096c9 f171      	BREQ _0x200006C
0096ca 01d8      	MOVW R26,R16
0096cb 9612      	ADIW R26,2
0096cc 940e ce94 	CALL __GETW1P
                +
0096ce 01d9     +MOVW R26 , R18
0096cf 9612     +ADIW R26 , 2
0096d0 93ed     +ST X + , R30
0096d1 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
0096d2 85e8      	LDD  R30,Y+8
0096d3 85f9      	LDD  R31,Y+8+1
0096d4 9730      	SBIW R30,0
0096d5 f111      	BREQ _0x200006D
0096d6 85a8      	LDD  R26,Y+8
0096d7 85b9      	LDD  R27,Y+8+1
0096d8 df85      	RCALL _allocate_block_G100
0096d9 01af      	MOVW R20,R30
0096da 9730      	SBIW R30,0
0096db f0b9      	BREQ _0x200006E
0096dc 01d8      	MOVW R26,R16
0096dd 940e c7c8 	CALL SUBOPT_0x32F
0096df 01df      	MOVW R26,R30
0096e0 85e8      	LDD  R30,Y+8
0096e1 85f9      	LDD  R31,Y+8+1
0096e2 17ae      	CP   R26,R30
0096e3 07bf      	CPC  R27,R31
0096e4 f420      	BRSH _0x200006F
0096e5 81ee      	LDD  R30,Y+6
0096e6 81ff      	LDD  R31,Y+6+1
0096e7 87e8      	STD  Y+8,R30
0096e8 87f9      	STD  Y+8+1,R31
                 _0x200006F:
0096e9 935a      	ST   -Y,R21
0096ea 934a      	ST   -Y,R20
0096eb 940e bc94 	CALL SUBOPT_0x1A9
0096ed 85ac      	LDD  R26,Y+12
0096ee 85bd      	LDD  R27,Y+12+1
0096ef 940e 975f 	CALL _memmove
0096f1 940c 9d97 	JMP  _0x20E001F
                 _0x200006E:
0096f3 01f8      	MOVW R30,R16
                +
0096f4 01d9     +MOVW R26 , R18
0096f5 9612     +ADIW R26 , 2
0096f6 93ed     +ST X + , R30
0096f7 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
0096f8 e0e0      	LDI  R30,LOW(0)
0096f9 e0f0      	LDI  R31,HIGH(0)
0096fa 940c 9d98 	JMP  _0x20E001E
                 _malloc:
0096fc 940e b595 	CALL SUBOPT_0x81
                +
0096fe e000     +LDI R16 , LOW ( 0 )
0096ff e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
009700 81ea      	LDD  R30,Y+2
009701 81fb      	LDD  R31,Y+2+1
009702 9730      	SBIW R30,0
009703 f071      	BREQ _0x2000070
009704 81aa      	LDD  R26,Y+2
009705 81bb      	LDD  R27,Y+2+1
009706 df57      	RCALL _allocate_block_G100
009707 018f      	MOVW R16,R30
009708 9730      	SBIW R30,0
009709 f041      	BREQ _0x2000071
00970a 931a      	ST   -Y,R17
00970b 930a      	ST   -Y,R16
00970c e0e0      	LDI  R30,LOW(0)
00970d 93ea      	ST   -Y,R30
00970e 81ad      	LDD  R26,Y+5
00970f 81be      	LDD  R27,Y+5+1
009710 940e 977e 	CALL _memset
                 _0x2000071:
                 _0x2000070:
009712 01f8      	MOVW R30,R16
009713 8119      	LDD  R17,Y+1
009714 8108      	LDD  R16,Y+0
009715 940c 97c3 	JMP  _0x20E0027
                 _free:
009717 940e b623 	CALL SUBOPT_0x95
009719 93fa      	ST   -Y,R31
00971a 93ea      	ST   -Y,R30
00971b 940e b84c 	CALL SUBOPT_0xF0
00971d df9f      	RCALL _realloc
                 _0x20E0028:
00971e 9622      	ADIW R28,2
00971f 9508      	RET
                 
                 	.CSEG
                 _memcmp:
009720 93ba      	ST   -Y,R27
009721 93aa      	ST   -Y,R26
009722 2766          clr  r22
009723 2777          clr  r23
009724 9189          ld   r24,y+
009725 9199          ld   r25,y+
009726 91e9          ld   r30,y+
009727 91f9          ld   r31,y+
009728 91a9          ld   r26,y+
009729 91b9          ld   r27,y+
                 memcmp0:
00972a 9600          adiw r24,0
00972b f029          breq memcmp1
00972c 9701          sbiw r24,1
00972d 916d          ld   r22,x+
00972e 9171          ld   r23,z+
00972f 1767          cp   r22,r23
009730 f3c9          breq memcmp0
                 memcmp1:
009731 1b67          sub  r22,r23
009732 f410          brcc memcmp2
009733 efef          ldi  r30,-1
009734 9508          ret
                 memcmp2:
009735 e0e0          ldi  r30,0
009736 f009          breq memcmp3
009737 95e3          inc  r30
                 memcmp3:
009738 9508          ret
                 _memcpy:
009739 93ba      	ST   -Y,R27
00973a 93aa      	ST   -Y,R26
00973b 8199          ldd  r25,y+1
00973c 8188          ld   r24,y
00973d 9600          adiw r24,0
00973e f041          breq memcpy1
00973f 81bd          ldd  r27,y+5
009740 81ac          ldd  r26,y+4
009741 81fb          ldd  r31,y+3
009742 81ea          ldd  r30,y+2
                 memcpy0:
009743 9161          ld   r22,z+
009744 936d          st   x+,r22
009745 9701          sbiw r24,1
009746 f7e1          brne memcpy0
                 memcpy1:
009747 81fd          ldd  r31,y+5
009748 81ec          ldd  r30,y+4
009749 940c 9db9 	JMP  _0x20E001D
                 _memcpyf:
00974b 93ba      	ST   -Y,R27
00974c 93aa      	ST   -Y,R26
00974d 8199          ldd  r25,y+1
00974e 8188          ld   r24,y
00974f 9600          adiw r24,0
009750 f051          breq memcpyf1
009751 81bf          ldd  r27,y+7
009752 81ae          ldd  r26,y+6
009753 816c          ldd  r22,y+4
009754 81fb          ldd  r31,y+3
009755 81ea          ldd  r30,y+2
009756 bf6b          out  rampz,r22
                 memcpyf0:
009757 9007          elpm r0,z+
009758 920d          st   x+,r0
009759 9701          sbiw r24,1
00975a f7e1          brne memcpyf0
                 memcpyf1:
00975b 81ff          ldd  r31,y+7
00975c 81ee          ldd  r30,y+6
00975d 940c 9d74 	JMP  _0x20E0020
                 _memmove:
00975f 93ba      	ST   -Y,R27
009760 93aa      	ST   -Y,R26
009761 8199          ldd  r25,y+1
009762 8188          ld   r24,y
009763 9600          adiw r24,0
009764 f0a9          breq memmove3
009765 81bd          ldd  r27,y+5
009766 81ac          ldd  r26,y+4
009767 81fb          ldd  r31,y+3
009768 81ea          ldd  r30,y+2
009769 17ea          cp   r30,r26
00976a 07fb          cpc  r31,r27
00976b f071          breq memmove3
00976c f02c          brlt memmove1
                 memmove0:
00976d 9161          ld   r22,z+
00976e 936d          st   x+,r22
00976f 9701          sbiw r24,1
009770 f7e1          brne memmove0
009771 c008          rjmp memmove3
                 memmove1:
009772 0fa8          add  r26,r24
009773 1fb9          adc  r27,r25
009774 0fe8          add  r30,r24
009775 1ff9          adc  r31,r25
                 memmove2:
009776 9162          ld   r22,-z
009777 936e          st   -x,r22
009778 9701          sbiw r24,1
009779 f7e1          brne memmove2
                 memmove3:
00977a 81fd          ldd  r31,y+5
00977b 81ec          ldd  r30,y+4
00977c 940c 9db9 	JMP  _0x20E001D
                 _memset:
00977e 93ba      	ST   -Y,R27
00977f 93aa      	ST   -Y,R26
009780 81b9          ldd  r27,y+1
009781 81a8          ld   r26,y
009782 9610          adiw r26,0
009783 f031          breq memset1
009784 81fc          ldd  r31,y+4
009785 81eb          ldd  r30,y+3
009786 816a          ldd  r22,y+2
                 memset0:
009787 9361          st   z+,r22
009788 9711          sbiw r26,1
009789 f7e9          brne memset0
                 memset1:
00978a 81eb          ldd  r30,y+3
00978b 81fc          ldd  r31,y+4
00978c 9625      	ADIW R28,5
00978d 9508      	RET
                 _strcat:
00978e 93ba      	ST   -Y,R27
00978f 93aa      	ST   -Y,R26
009790 91e9          ld   r30,y+
009791 91f9          ld   r31,y+
009792 91a9          ld   r26,y+
009793 91b9          ld   r27,y+
009794 01cd          movw r24,r26
                 strcat0:
009795 916d          ld   r22,x+
009796 2366          tst  r22
009797 f7e9          brne strcat0
009798 9711          sbiw r26,1
                 strcat1:
009799 9161          ld   r22,z+
00979a 936d          st   x+,r22
00979b 2366          tst  r22
00979c f7e1          brne strcat1
00979d 01fc          movw r30,r24
00979e 9508          ret
                 _strcpyf:
00979f 940e cecd 	CALL __PUTPARD2
0097a1 91e9          ld   r30,y+
0097a2 91f9          ld   r31,y+
0097a3 9169          ld   r22,y+
0097a4 9179          ld   r23,y+
0097a5 91a9          ld   r26,y+
0097a6 91b9          ld   r27,y+
0097a7 01cd          movw r24,r26
0097a8 bf6b          out  rampz,r22
                 strcpyf0:
0097a9 9007          elpm r0,z+
0097aa 920d          st   x+,r0
0097ab 2000          tst  r0
0097ac f7e1          brne strcpyf0
0097ad 01fc          movw r30,r24
0097ae 9508          ret
                 _strcspn:
0097af 93ba      	ST   -Y,R27
0097b0 93aa      	ST   -Y,R26
0097b1 81bb          ldd  r27,y+3
0097b2 81aa          ldd  r26,y+2
0097b3 2788          clr  r24
0097b4 2799          clr  r25
                 strcspn0:
0097b5 916d          ld   r22,x+
0097b6 2366          tst  r22
0097b7 f051          breq strcspn2
0097b8 81f9          ldd  r31,y+1
0097b9 81e8          ld   r30,y
                 strcspn1:
0097ba 9171          ld   r23,z+
0097bb 2377          tst  r23
0097bc f019          breq strcspn3
0097bd 1767          cp   r22,r23
0097be f019          breq strcspn2
0097bf cffa          rjmp strcspn1
                 strcspn3:
0097c0 9601          adiw r24,1
0097c1 cff3          rjmp strcspn0
                 strcspn2:
0097c2 01fc          movw r30,r24
                 _0x20E0027:
0097c3 9624      	ADIW R28,4
0097c4 9508      	RET
                 _strlen:
0097c5 93ba      	ST   -Y,R27
0097c6 93aa      	ST   -Y,R26
0097c7 91a9          ld   r26,y+
0097c8 91b9          ld   r27,y+
0097c9 27ee          clr  r30
0097ca 27ff          clr  r31
                 strlen0:
0097cb 916d          ld   r22,x+
0097cc 2366          tst  r22
0097cd f011          breq strlen1
0097ce 9631          adiw r30,1
0097cf cffb          rjmp strlen0
                 strlen1:
0097d0 9508          ret
                 _strlenf:
0097d1 940e cecd 	CALL __PUTPARD2
0097d3 27aa          clr  r26
0097d4 27bb          clr  r27
0097d5 91e9          ld   r30,y+
0097d6 91f9          ld   r31,y+
0097d7 9169          ld   r22,y+
0097d8 9179          ld   r23,y+
0097d9 bf6b          out  rampz,r22
                 strlenf0:
0097da 9007          elpm r0,z+
0097db 2000          tst  r0
0097dc f011          breq strlenf1
0097dd 9611          adiw r26,1
0097de cffb          rjmp strlenf0
                 strlenf1:
0097df 01fd          movw r30,r26
0097e0 9508          ret
                 _strncmpf:
0097e1 93aa      	ST   -Y,R26
0097e2 9179          ld   r23,y+
0097e3 91e9          ld   r30,y+
0097e4 91f9          ld   r31,y+
0097e5 9169          ld   r22,y+
0097e6 9009          ld   r0,y+
0097e7 91a9          ld   r26,y+
0097e8 91b9          ld   r27,y+
0097e9 2400          clr  r0
0097ea 2411          clr  r1
0097eb bf6b          out  rampz,r22
                 strncmpf0:
0097ec 2377          tst  r23
0097ed f049          breq strncmpf1
0097ee 957a          dec  r23
0097ef 901d          ld   r1,x+
0097f0 9007          elpm r0,z+
0097f1 1401          cp   r0,r1
0097f2 f421          brne strncmpf1
0097f3 2000          tst  r0
0097f4 f7b9          brne strncmpf0
                 strncmpf3:
0097f5 27ee          clr  r30
0097f6 c005          rjmp strncmpf2
                 strncmpf1:
0097f7 1810          sub  r1,r0
0097f8 f3e1          breq strncmpf3
0097f9 e0e1          ldi  r30,1
0097fa f408          brcc strncmpf2
0097fb 50e2          subi r30,2
                 strncmpf2:
0097fc 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
0097fd 931a      	ST   -Y,R17
0097fe e3e2      	LDI  R30,LOW(50)
0097ff 93e0 1a8f 	STS  _timer2_G102,R30
009801 efef      	LDI  R30,LOW(255)
009802 bdee      	OUT  0x2E,R30
                 _0x2040004:
009803 b5ed      	IN   R30,0x2D
009804 ffe7      	SBRS R30,7
009805 cffd      	RJMP _0x2040004
                 _0x2040008:
009806 efef      	LDI  R30,LOW(255)
009807 bdee      	OUT  0x2E,R30
                 _0x204000A:
009808 b5ed      	IN   R30,0x2D
009809 ffe7      	SBRS R30,7
00980a cffd      	RJMP _0x204000A
00980b b51e      	IN   R17,46
00980c 3f1f      	CPI  R17,255
00980d f021      	BREQ _0x204000D
00980e 91e0 1a8f 	LDS  R30,_timer2_G102
009810 30e0      	CPI  R30,0
009811 f409      	BRNE _0x204000E
                 _0x204000D:
009812 c001      	RJMP _0x2040009
                 _0x204000E:
009813 cff2      	RJMP _0x2040008
                 _0x2040009:
009814 2fe1      	MOV  R30,R17
                 _0x20E0026:
009815 9119      	LD   R17,Y+
009816 9508      	RET
                 _release_spi_G102:
009817 9a28      	SBI  0x5,0
009818 efef      	LDI  R30,LOW(255)
009819 bdee      	OUT  0x2E,R30
                 _0x204000F:
00981a b5ed      	IN   R30,0x2D
00981b ffe7      	SBRS R30,7
00981c cffd      	RJMP _0x204000F
00981d 9508      	RET
                 _rx_datablock_G102:
00981e 93ba      	ST   -Y,R27
00981f 93aa      	ST   -Y,R26
009820 940e cf3a 	CALL __SAVELOCR4
009822 e0ea      	LDI  R30,LOW(10)
009823 93e0 1a8e 	STS  _timer1_G102,R30
                 _0x2040013:
009825 efef      	LDI  R30,LOW(255)
009826 bdee      	OUT  0x2E,R30
                 _0x2040015:
009827 b5ed      	IN   R30,0x2D
009828 ffe7      	SBRS R30,7
009829 cffd      	RJMP _0x2040015
00982a b51e      	IN   R17,46
00982b 3f1f      	CPI  R17,255
00982c f421      	BRNE _0x2040018
00982d 91e0 1a8e 	LDS  R30,_timer1_G102
00982f 30e0      	CPI  R30,0
009830 f409      	BRNE _0x2040019
                 _0x2040018:
009831 c001      	RJMP _0x2040014
                 _0x2040019:
009832 cff2      	RJMP _0x2040013
                 _0x2040014:
009833 3f1e      	CPI  R17,254
009834 f021      	BREQ _0x204001A
009835 e0e0      	LDI  R30,LOW(0)
009836 940e cf41 	CALL __LOADLOCR4
009838 c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
009839 812e     +LDD R18 , Y + 6
00983a 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00983b efef      	LDI  R30,LOW(255)
00983c bdee      	OUT  0x2E,R30
                 _0x204001E:
00983d b5ed      	IN   R30,0x2D
00983e ffe7      	SBRS R30,7
00983f cffd      	RJMP _0x204001E
009840 933f      	PUSH R19
009841 932f      	PUSH R18
                +
009842 5f2f     +SUBI R18 , LOW ( - 1 )
009843 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009844 b5ee      	IN   R30,0x2E
009845 91af      	POP  R26
009846 91bf      	POP  R27
009847 93ec      	ST   X,R30
009848 efef      	LDI  R30,LOW(255)
009849 bdee      	OUT  0x2E,R30
                 _0x2040021:
00984a b5ed      	IN   R30,0x2D
00984b ffe7      	SBRS R30,7
00984c cffd      	RJMP _0x2040021
00984d 933f      	PUSH R19
00984e 932f      	PUSH R18
                +
00984f 5f2f     +SUBI R18 , LOW ( - 1 )
009850 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009851 b5ee      	IN   R30,0x2E
009852 91af      	POP  R26
009853 91bf      	POP  R27
009854 93ec      	ST   X,R30
009855 efef      	LDI  R30,LOW(255)
009856 bdee      	OUT  0x2E,R30
                 _0x2040024:
009857 b5ed      	IN   R30,0x2D
009858 ffe7      	SBRS R30,7
009859 cffd      	RJMP _0x2040024
00985a 933f      	PUSH R19
00985b 932f      	PUSH R18
                +
00985c 5f2f     +SUBI R18 , LOW ( - 1 )
00985d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00985e b5ee      	IN   R30,0x2E
00985f 91af      	POP  R26
009860 91bf      	POP  R27
009861 93ec      	ST   X,R30
009862 efef      	LDI  R30,LOW(255)
009863 bdee      	OUT  0x2E,R30
                 _0x2040027:
009864 b5ed      	IN   R30,0x2D
009865 ffe7      	SBRS R30,7
009866 cffd      	RJMP _0x2040027
009867 933f      	PUSH R19
009868 932f      	PUSH R18
                +
009869 5f2f     +SUBI R18 , LOW ( - 1 )
00986a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00986b b5ee      	IN   R30,0x2E
00986c 91af      	POP  R26
00986d 91bf      	POP  R27
00986e 93ec      	ST   X,R30
00986f 81ec      	LDD  R30,Y+4
009870 81fd      	LDD  R31,Y+4+1
009871 9734      	SBIW R30,4
009872 83ec      	STD  Y+4,R30
009873 83fd      	STD  Y+4+1,R31
009874 f631      	BRNE _0x204001C
009875 efef      	LDI  R30,LOW(255)
009876 bdee      	OUT  0x2E,R30
                 _0x204002A:
009877 b5ed      	IN   R30,0x2D
009878 ffe7      	SBRS R30,7
009879 cffd      	RJMP _0x204002A
00987a efef      	LDI  R30,LOW(255)
00987b bdee      	OUT  0x2E,R30
                 _0x204002D:
00987c b5ed      	IN   R30,0x2D
00987d ffe7      	SBRS R30,7
00987e cffd      	RJMP _0x204002D
00987f e0e1      	LDI  R30,LOW(1)
009880 940e cf41 	CALL __LOADLOCR4
009882 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
009883 93aa      	ST   -Y,R26
009884 940e cf3a 	CALL __SAVELOCR4
009886 df76      	RCALL _wait_ready_G102
009887 3fef      	CPI  R30,LOW(0xFF)
009888 f021      	BREQ _0x2040030
009889 e0e0      	LDI  R30,LOW(0)
00988a 940e cf41 	CALL __LOADLOCR4
00988c c4b3      	RJMP _0x20E0021
                 _0x2040030:
00988d 81ec      	LDD  R30,Y+4
00988e bdee      	OUT  0x2E,R30
                 _0x2040031:
00988f b5ed      	IN   R30,0x2D
009890 ffe7      	SBRS R30,7
009891 cffd      	RJMP _0x2040031
009892 81ac      	LDD  R26,Y+4
009893 3fad      	CPI  R26,LOW(0xFD)
009894 f171      	BREQ _0x2040034
009895 e000      	LDI  R16,LOW(0)
                +
009896 812d     +LDD R18 , Y + 5
009897 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
009898 01d9      	MOVW R26,R18
                +
009899 5f2f     +SUBI R18 , LOW ( - 1 )
00989a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00989b 91ec      	LD   R30,X
00989c bdee      	OUT  0x2E,R30
                 _0x2040038:
00989d b5ed      	IN   R30,0x2D
00989e ffe7      	SBRS R30,7
00989f cffd      	RJMP _0x2040038
0098a0 01d9      	MOVW R26,R18
                +
0098a1 5f2f     +SUBI R18 , LOW ( - 1 )
0098a2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0098a3 91ec      	LD   R30,X
0098a4 bdee      	OUT  0x2E,R30
                 _0x204003B:
0098a5 b5ed      	IN   R30,0x2D
0098a6 ffe7      	SBRS R30,7
0098a7 cffd      	RJMP _0x204003B
0098a8 5001      	SUBI R16,LOW(1)
0098a9 3000      	CPI  R16,0
0098aa f769      	BRNE _0x2040036
0098ab efef      	LDI  R30,LOW(255)
0098ac bdee      	OUT  0x2E,R30
                 _0x204003E:
0098ad b5ed      	IN   R30,0x2D
0098ae ffe7      	SBRS R30,7
0098af cffd      	RJMP _0x204003E
0098b0 efef      	LDI  R30,LOW(255)
0098b1 bdee      	OUT  0x2E,R30
                 _0x2040041:
0098b2 b5ed      	IN   R30,0x2D
0098b3 ffe7      	SBRS R30,7
0098b4 cffd      	RJMP _0x2040041
0098b5 efef      	LDI  R30,LOW(255)
0098b6 bdee      	OUT  0x2E,R30
                 _0x2040044:
0098b7 b5ed      	IN   R30,0x2D
0098b8 ffe7      	SBRS R30,7
0098b9 cffd      	RJMP _0x2040044
0098ba b51e      	IN   R17,46
0098bb 2fe1      	MOV  R30,R17
0098bc 71ef      	ANDI R30,LOW(0x1F)
0098bd 30e5      	CPI  R30,LOW(0x5)
0098be f021      	BREQ _0x2040047
0098bf e0e0      	LDI  R30,LOW(0)
0098c0 940e cf41 	CALL __LOADLOCR4
0098c2 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
0098c3 e0e1      	LDI  R30,LOW(1)
0098c4 940e cf41 	CALL __LOADLOCR4
0098c6 c479      	RJMP _0x20E0021
                 _send_cmd_G102:
0098c7 940e cecd 	CALL __PUTPARD2
0098c9 931a      	ST   -Y,R17
0098ca 930a      	ST   -Y,R16
0098cb 81ee      	LDD  R30,Y+6
0098cc 78e0      	ANDI R30,LOW(0x80)
0098cd f089      	BREQ _0x2040048
0098ce 81ee      	LDD  R30,Y+6
0098cf 77ef      	ANDI R30,0x7F
0098d0 83ee      	STD  Y+6,R30
0098d1 e7e7      	LDI  R30,LOW(119)
0098d2 93ea      	ST   -Y,R30
                +
0098d3 e0a0     +LDI R26 , LOW ( 0x0 )
0098d4 e0b0     +LDI R27 , HIGH ( 0x0 )
0098d5 e080     +LDI R24 , BYTE3 ( 0x0 )
0098d6 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0098d7 dfef      	RCALL _send_cmd_G102
0098d8 2f0e      	MOV  R16,R30
0098d9 3002      	CPI  R16,2
0098da f020      	BRLO _0x2040049
0098db 2fe0      	MOV  R30,R16
0098dc 8119      	LDD  R17,Y+1
0098dd 8108      	LDD  R16,Y+0
0098de c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
0098df 9a28      	SBI  0x5,0
0098e0 9828      	CBI  0x5,0
0098e1 df1b      	RCALL _wait_ready_G102
0098e2 3fef      	CPI  R30,LOW(0xFF)
0098e3 f021      	BREQ _0x204004A
0098e4 efef      	LDI  R30,LOW(255)
0098e5 8119      	LDD  R17,Y+1
0098e6 8108      	LDD  R16,Y+0
0098e7 c458      	RJMP _0x20E0021
                 _0x204004A:
0098e8 81ee      	LDD  R30,Y+6
0098e9 bdee      	OUT  0x2E,R30
                 _0x204004B:
0098ea b5ed      	IN   R30,0x2D
0098eb ffe7      	SBRS R30,7
0098ec cffd      	RJMP _0x204004B
0098ed 81ed      	LDD  R30,Y+5
0098ee bdee      	OUT  0x2E,R30
                 _0x204004E:
0098ef b5ed      	IN   R30,0x2D
0098f0 ffe7      	SBRS R30,7
0098f1 cffd      	RJMP _0x204004E
0098f2 81ec      	LDD  R30,Y+4
0098f3 bdee      	OUT  0x2E,R30
                 _0x2040051:
0098f4 b5ed      	IN   R30,0x2D
0098f5 ffe7      	SBRS R30,7
0098f6 cffd      	RJMP _0x2040051
0098f7 81eb      	LDD  R30,Y+3
0098f8 bdee      	OUT  0x2E,R30
                 _0x2040054:
0098f9 b5ed      	IN   R30,0x2D
0098fa ffe7      	SBRS R30,7
0098fb cffd      	RJMP _0x2040054
0098fc 81ea      	LDD  R30,Y+2
0098fd bdee      	OUT  0x2E,R30
                 _0x2040057:
0098fe b5ed      	IN   R30,0x2D
0098ff ffe7      	SBRS R30,7
009900 cffd      	RJMP _0x2040057
009901 e011      	LDI  R17,LOW(1)
009902 81ae      	LDD  R26,Y+6
009903 34a0      	CPI  R26,LOW(0x40)
009904 f411      	BRNE _0x204005A
009905 e915      	LDI  R17,LOW(149)
009906 c004      	RJMP _0x204005B
                 _0x204005A:
009907 81ae      	LDD  R26,Y+6
009908 34a8      	CPI  R26,LOW(0x48)
009909 f409      	BRNE _0x204005C
00990a e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00990b bd1e      	OUT  0x2E,R17
                 _0x204005D:
00990c b5ed      	IN   R30,0x2D
00990d ffe7      	SBRS R30,7
00990e cffd      	RJMP _0x204005D
00990f 81ae      	LDD  R26,Y+6
009910 34ac      	CPI  R26,LOW(0x4C)
009911 f429      	BRNE _0x2040060
009912 efef      	LDI  R30,LOW(255)
009913 bdee      	OUT  0x2E,R30
                 _0x2040061:
009914 b5ed      	IN   R30,0x2D
009915 ffe7      	SBRS R30,7
009916 cffd      	RJMP _0x2040061
                 _0x2040060:
009917 ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
009918 efef      	LDI  R30,LOW(255)
009919 bdee      	OUT  0x2E,R30
                 _0x2040067:
00991a b5ed      	IN   R30,0x2D
00991b ffe7      	SBRS R30,7
00991c cffd      	RJMP _0x2040067
00991d b50e      	IN   R16,46
00991e ff07      	SBRS R16,7
00991f c003      	RJMP _0x204006A
009920 5011      	SUBI R17,LOW(1)
009921 3010      	CPI  R17,0
009922 f409      	BRNE _0x204006B
                 _0x204006A:
009923 c001      	RJMP _0x2040066
                 _0x204006B:
009924 cff3      	RJMP _0x2040065
                 _0x2040066:
009925 2fe0      	MOV  R30,R16
009926 8119      	LDD  R17,Y+1
009927 8108      	LDD  R16,Y+0
009928 c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
009929 93ba      	ST   -Y,R27
00992a 93aa      	ST   -Y,R26
00992b 931a      	ST   -Y,R17
00992c e014      	LDI  R17,4
                 _0x204006D:
00992d efef      	LDI  R30,LOW(255)
00992e bdee      	OUT  0x2E,R30
                 _0x204006F:
00992f b5ed      	IN   R30,0x2D
009930 ffe7      	SBRS R30,7
009931 cffd      	RJMP _0x204006F
009932 81a9      	LDD  R26,Y+1
009933 81ba      	LDD  R27,Y+1+1
009934 9611      	ADIW R26,1
009935 83a9      	STD  Y+1,R26
009936 83ba      	STD  Y+1+1,R27
009937 9711      	SBIW R26,1
009938 b5ee      	IN   R30,0x2E
009939 93ec      	ST   X,R30
00993a 5011      	SUBI R17,LOW(1)
00993b 3010      	CPI  R17,0
00993c f781      	BRNE _0x204006D
00993d c554      	RJMP _0x20E001B
                 _disk_initialize:
00993e 93aa      	ST   -Y,R26
00993f 9724      	SBIW R28,4
009940 940e cf3a 	CALL __SAVELOCR4
009942 85e8      	LDD  R30,Y+8
009943 30e0      	CPI  R30,0
009944 f011      	BREQ _0x2040072
009945 e0e1      	LDI  R30,LOW(1)
009946 c0c4      	RJMP _0x20E0025
                 _0x2040072:
009947 9808      	CBI  0x1,0
009948 9809      	CBI  0x1,1
009949 e0ea      	LDI  R30,LOW(10)
00994a 93e0 1a8e 	STS  _timer1_G102,R30
                 _0x2040073:
00994c 91e0 1a8e 	LDS  R30,_timer1_G102
00994e 30e0      	CPI  R30,0
00994f f7e1      	BRNE _0x2040073
009950 91e0 1a8d 	LDS  R30,_status_G102
009952 70e2      	ANDI R30,LOW(0x2)
009953 f009      	BREQ _0x2040076
009954 c0b4      	RJMP _0x20E0024
                 _0x2040076:
009955 9a20      	SBI  0x4,0
009956 9a28      	SBI  0x5,0
009957 b1e5      	IN   R30,0x5
009958 7fe9      	ANDI R30,LOW(0xF9)
009959 b9e5      	OUT  0x5,R30
00995a 9a2b      	SBI  0x5,3
00995b 9823      	CBI  0x4,3
00995c b1e4      	IN   R30,0x4
00995d 60e7      	ORI  R30,LOW(0x7)
00995e b9e4      	OUT  0x4,R30
00995f e5e2      	LDI  R30,LOW(82)
009960 bdec      	OUT  0x2C,R30
009961 e0e0      	LDI  R30,LOW(0)
009962 bded      	OUT  0x2D,R30
009963 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
009964 e01a      	LDI  R17,LOW(10)
                 _0x204007B:
009965 efef      	LDI  R30,LOW(255)
009966 bdee      	OUT  0x2E,R30
                 _0x204007D:
009967 b5ed      	IN   R30,0x2D
009968 ffe7      	SBRS R30,7
009969 cffd      	RJMP _0x204007D
00996a 5011      	SUBI R17,LOW(1)
00996b 3010      	CPI  R17,0
00996c f7c1      	BRNE _0x204007B
00996d e4e0      	LDI  R30,LOW(64)
00996e 93ea      	ST   -Y,R30
                +
00996f e0a0     +LDI R26 , LOW ( 0x0 )
009970 e0b0     +LDI R27 , HIGH ( 0x0 )
009971 e080     +LDI R24 , BYTE3 ( 0x0 )
009972 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009973 df53      	RCALL _send_cmd_G102
009974 2f0e      	MOV  R16,R30
009975 5031      	SUBI R19,LOW(1)
009976 3001      	CPI  R16,1
009977 f011      	BREQ _0x2040080
009978 3030      	CPI  R19,0
009979 f409      	BRNE _0x2040081
                 _0x2040080:
00997a c001      	RJMP _0x2040079
                 _0x2040081:
00997b cfe8      	RJMP _0x2040078
                 _0x2040079:
00997c e030      	LDI  R19,LOW(0)
00997d 3001      	CPI  R16,1
00997e f011      	BREQ PC+3
00997f 940c 99e9 	JMP _0x2040082
009981 e6e4      	LDI  R30,LOW(100)
009982 93e0 1a8e 	STS  _timer1_G102,R30
009984 e4e8      	LDI  R30,LOW(72)
009985 93ea      	ST   -Y,R30
                +
009986 eaaa     +LDI R26 , LOW ( 0x1AA )
009987 e0b1     +LDI R27 , HIGH ( 0x1AA )
009988 e080     +LDI R24 , BYTE3 ( 0x1AA )
009989 e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00998a df3c      	RCALL _send_cmd_G102
00998b 30e1      	CPI  R30,LOW(0x1)
00998c f591      	BRNE _0x2040083
00998d 01de      	MOVW R26,R28
00998e 9614      	ADIW R26,4
00998f df99      	RCALL _rx_spi4_G102
009990 81ae      	LDD  R26,Y+6
009991 30a1      	CPI  R26,LOW(0x1)
009992 f419      	BRNE _0x2040085
009993 81af      	LDD  R26,Y+7
009994 3aaa      	CPI  R26,LOW(0xAA)
009995 f009      	BREQ _0x2040086
                 _0x2040085:
009996 c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
009997 91e0 1a8e 	LDS  R30,_timer1_G102
009999 30e0      	CPI  R30,0
00999a f049      	BREQ _0x204008A
00999b eee9      	LDI  R30,LOW(233)
00999c 93ea      	ST   -Y,R30
                +
00999d e0a0     +LDI R26 , LOW ( 0x40000000 )
00999e e0b0     +LDI R27 , HIGH ( 0x40000000 )
00999f e080     +LDI R24 , BYTE3 ( 0x40000000 )
0099a0 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0099a1 df25      	RCALL _send_cmd_G102
0099a2 30e0      	CPI  R30,0
0099a3 f409      	BRNE _0x204008B
                 _0x204008A:
0099a4 c001      	RJMP _0x2040089
                 _0x204008B:
0099a5 cff1      	RJMP _0x2040087
                 _0x2040089:
0099a6 91e0 1a8e 	LDS  R30,_timer1_G102
0099a8 30e0      	CPI  R30,0
0099a9 f049      	BREQ _0x204008D
0099aa e7ea      	LDI  R30,LOW(122)
0099ab 93ea      	ST   -Y,R30
                +
0099ac e0a0     +LDI R26 , LOW ( 0x0 )
0099ad e0b0     +LDI R27 , HIGH ( 0x0 )
0099ae e080     +LDI R24 , BYTE3 ( 0x0 )
0099af e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0099b0 df16      	RCALL _send_cmd_G102
0099b1 30e0      	CPI  R30,0
0099b2 f009      	BREQ _0x204008E
                 _0x204008D:
0099b3 c00a      	RJMP _0x204008C
                 _0x204008E:
0099b4 01de      	MOVW R26,R28
0099b5 9614      	ADIW R26,4
0099b6 df72      	RCALL _rx_spi4_G102
0099b7 81ec      	LDD  R30,Y+4
0099b8 74e0      	ANDI R30,LOW(0x40)
0099b9 f011      	BREQ _0x204008F
0099ba e0ec      	LDI  R30,LOW(12)
0099bb c001      	RJMP _0x2040090
                 _0x204008F:
0099bc e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
0099bd 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
0099be c02a      	RJMP _0x2040092
                 _0x2040083:
0099bf eee9      	LDI  R30,LOW(233)
0099c0 93ea      	ST   -Y,R30
                +
0099c1 e0a0     +LDI R26 , LOW ( 0x0 )
0099c2 e0b0     +LDI R27 , HIGH ( 0x0 )
0099c3 e080     +LDI R24 , BYTE3 ( 0x0 )
0099c4 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0099c5 df01      	RCALL _send_cmd_G102
0099c6 30e2      	CPI  R30,LOW(0x2)
0099c7 f418      	BRSH _0x2040093
0099c8 e032      	LDI  R19,LOW(2)
0099c9 ee09      	LDI  R16,LOW(233)
0099ca c002      	RJMP _0x2040094
                 _0x2040093:
0099cb e031      	LDI  R19,LOW(1)
0099cc e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
0099cd 91e0 1a8e 	LDS  R30,_timer1_G102
0099cf 30e0      	CPI  R30,0
0099d0 f041      	BREQ _0x2040098
0099d1 930a      	ST   -Y,R16
                +
0099d2 e0a0     +LDI R26 , LOW ( 0x0 )
0099d3 e0b0     +LDI R27 , HIGH ( 0x0 )
0099d4 e080     +LDI R24 , BYTE3 ( 0x0 )
0099d5 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0099d6 def0      	RCALL _send_cmd_G102
0099d7 30e0      	CPI  R30,0
0099d8 f409      	BRNE _0x2040099
                 _0x2040098:
0099d9 c001      	RJMP _0x2040097
                 _0x2040099:
0099da cff2      	RJMP _0x2040095
                 _0x2040097:
0099db 91e0 1a8e 	LDS  R30,_timer1_G102
0099dd 30e0      	CPI  R30,0
0099de f049      	BREQ _0x204009B
0099df e5e0      	LDI  R30,LOW(80)
0099e0 93ea      	ST   -Y,R30
                +
0099e1 e0a0     +LDI R26 , LOW ( 0x200 )
0099e2 e0b2     +LDI R27 , HIGH ( 0x200 )
0099e3 e080     +LDI R24 , BYTE3 ( 0x200 )
0099e4 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
0099e5 dee1      	RCALL _send_cmd_G102
0099e6 30e0      	CPI  R30,0
0099e7 f009      	BREQ _0x204009A
                 _0x204009B:
0099e8 e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
0099e9 9330 1a90 	STS  _card_type_G102,R19
0099eb de2b      	RCALL _release_spi_G102
0099ec 3030      	CPI  R19,0
0099ed f051      	BREQ _0x204009D
0099ee 91e0 1a8d 	LDS  R30,_status_G102
0099f0 7fee      	ANDI R30,0xFE
0099f1 93e0 1a8d 	STS  _status_G102,R30
0099f3 e5e0      	LDI  R30,LOW(80)
0099f4 bdec      	OUT  0x2C,R30
0099f5 e0e1      	LDI  R30,LOW(1)
0099f6 bded      	OUT  0x2D,R30
0099f7 c011      	RJMP _0x204009E
                 _0x204009D:
0099f8 9828      	CBI  0x5,0
0099f9 de03      	RCALL _wait_ready_G102
0099fa de1c      	RCALL _release_spi_G102
0099fb e0e0      	LDI  R30,LOW(0)
0099fc bdec      	OUT  0x2C,R30
0099fd b1e4      	IN   R30,0x4
0099fe 7fe0      	ANDI R30,LOW(0xF0)
0099ff b9e4      	OUT  0x4,R30
009a00 b1e5      	IN   R30,0x5
009a01 7fe0      	ANDI R30,LOW(0xF0)
009a02 b9e5      	OUT  0x5,R30
009a03 9820      	CBI  0x4,0
009a04 91e0 1a8d 	LDS  R30,_status_G102
009a06 60e1      	ORI  R30,1
009a07 93e0 1a8d 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
009a09 91e0 1a8d 	LDS  R30,_status_G102
                 _0x20E0025:
009a0b 940e cf41 	CALL __LOADLOCR4
009a0d 9629      	ADIW R28,9
009a0e 9508      	RET
                 _disk_status:
009a0f 93aa      	ST   -Y,R26
009a10 81e8      	LD   R30,Y
009a11 30e0      	CPI  R30,0
009a12 f011      	BREQ _0x204009F
009a13 e0e1      	LDI  R30,LOW(1)
009a14 c002      	RJMP _0x20E0023
                 _0x204009F:
009a15 91e0 1a8d 	LDS  R30,_status_G102
                 _0x20E0023:
009a17 9621      	ADIW R28,1
009a18 9508      	RET
                 _disk_read:
009a19 93aa      	ST   -Y,R26
009a1a 81ef      	LDD  R30,Y+7
009a1b 30e0      	CPI  R30,0
009a1c f419      	BRNE _0x20400A1
009a1d 81e8      	LD   R30,Y
009a1e 30e0      	CPI  R30,0
009a1f f411      	BRNE _0x20400A0
                 _0x20400A1:
009a20 e0e4      	LDI  R30,LOW(4)
009a21 c352      	RJMP _0x20E0020
                 _0x20400A0:
009a22 91e0 1a8d 	LDS  R30,_status_G102
009a24 70e1      	ANDI R30,LOW(0x1)
009a25 f011      	BREQ _0x20400A3
009a26 e0e3      	LDI  R30,LOW(3)
009a27 c34c      	RJMP _0x20E0020
                 _0x20400A3:
009a28 91e0 1a90 	LDS  R30,_card_type_G102
009a2a 70e8      	ANDI R30,LOW(0x8)
009a2b f471      	BRNE _0x20400A4
                +
009a2c 81e9     +LDD R30 , Y + 1
009a2d 81fa     +LDD R31 , Y + 1 + 1
009a2e 816b     +LDD R22 , Y + 1 + 2
009a2f 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
009a30 e0a0     +LDI R26 , LOW ( 0x200 )
009a31 e0b2     +LDI R27 , HIGH ( 0x200 )
009a32 e080     +LDI R24 , BYTE3 ( 0x200 )
009a33 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
009a34 940e cdde 	CALL __MULD12U
                +
009a36 83e9     +STD Y + 1 , R30
009a37 83fa     +STD Y + 1 + 1 , R31
009a38 836b     +STD Y + 1 + 2 , R22
009a39 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
009a3a 81a8      	LD   R26,Y
009a3b 30a1      	CPI  R26,LOW(0x1)
009a3c f4b1      	BRNE _0x20400A5
009a3d e5e1      	LDI  R30,LOW(81)
009a3e 93ea      	ST   -Y,R30
                +
009a3f 81aa     +LDD R26 , Y + 2
009a40 81bb     +LDD R27 , Y + 2 + 1
009a41 818c     +LDD R24 , Y + 2 + 2
009a42 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
009a43 de83      	RCALL _send_cmd_G102
009a44 30e0      	CPI  R30,0
009a45 f449      	BRNE _0x20400A7
009a46 81ed      	LDD  R30,Y+5
009a47 81fe      	LDD  R31,Y+5+1
009a48 93fa      	ST   -Y,R31
009a49 93ea      	ST   -Y,R30
009a4a e0a0      	LDI  R26,LOW(512)
009a4b e0b2      	LDI  R27,HIGH(512)
009a4c ddd1      	RCALL _rx_datablock_G102
009a4d 30e0      	CPI  R30,0
009a4e f409      	BRNE _0x20400A8
                 _0x20400A7:
009a4f c002      	RJMP _0x20400A6
                 _0x20400A8:
009a50 e0e0      	LDI  R30,LOW(0)
009a51 83e8      	ST   Y,R30
                 _0x20400A6:
009a52 c023      	RJMP _0x20400A9
                 _0x20400A5:
009a53 e5e2      	LDI  R30,LOW(82)
009a54 93ea      	ST   -Y,R30
                +
009a55 81aa     +LDD R26 , Y + 2
009a56 81bb     +LDD R27 , Y + 2 + 1
009a57 818c     +LDD R24 , Y + 2 + 2
009a58 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
009a59 de6d      	RCALL _send_cmd_G102
009a5a 30e0      	CPI  R30,0
009a5b f4d1      	BRNE _0x20400AA
                 _0x20400AC:
009a5c 81ed      	LDD  R30,Y+5
009a5d 81fe      	LDD  R31,Y+5+1
009a5e 93fa      	ST   -Y,R31
009a5f 93ea      	ST   -Y,R30
009a60 e0a0      	LDI  R26,LOW(512)
009a61 e0b2      	LDI  R27,HIGH(512)
009a62 ddbb      	RCALL _rx_datablock_G102
009a63 30e0      	CPI  R30,0
009a64 f051      	BREQ _0x20400AD
009a65 81ed      	LDD  R30,Y+5
009a66 81fe      	LDD  R31,Y+5+1
009a67 50e0      	SUBI R30,LOW(-512)
009a68 4ffe      	SBCI R31,HIGH(-512)
009a69 83ed      	STD  Y+5,R30
009a6a 83fe      	STD  Y+5+1,R31
009a6b 81e8      	LD   R30,Y
009a6c 50e1      	SUBI R30,LOW(1)
009a6d 83e8      	ST   Y,R30
009a6e f769      	BRNE _0x20400AC
                 _0x20400AD:
009a6f e4ec      	LDI  R30,LOW(76)
009a70 93ea      	ST   -Y,R30
                +
009a71 e0a0     +LDI R26 , LOW ( 0x0 )
009a72 e0b0     +LDI R27 , HIGH ( 0x0 )
009a73 e080     +LDI R24 , BYTE3 ( 0x0 )
009a74 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009a75 de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
009a76 dda0      	RCALL _release_spi_G102
009a77 81e8      	LD   R30,Y
009a78 30e0      	CPI  R30,0
009a79 f011      	BREQ _0x20400AF
009a7a e0e1      	LDI  R30,LOW(1)
009a7b c001      	RJMP _0x20400B0
                 _0x20400AF:
009a7c e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
009a7d c2f6      	RJMP _0x20E0020
                 _disk_write:
009a7e 93aa      	ST   -Y,R26
009a7f 81ef      	LDD  R30,Y+7
009a80 30e0      	CPI  R30,0
009a81 f419      	BRNE _0x20400B3
009a82 81e8      	LD   R30,Y
009a83 30e0      	CPI  R30,0
009a84 f411      	BRNE _0x20400B2
                 _0x20400B3:
009a85 e0e4      	LDI  R30,LOW(4)
009a86 c2ed      	RJMP _0x20E0020
                 _0x20400B2:
009a87 91e0 1a8d 	LDS  R30,_status_G102
009a89 70e1      	ANDI R30,LOW(0x1)
009a8a f011      	BREQ _0x20400B5
009a8b e0e3      	LDI  R30,LOW(3)
009a8c c2e7      	RJMP _0x20E0020
                 _0x20400B5:
009a8d 91e0 1a8d 	LDS  R30,_status_G102
009a8f 70e4      	ANDI R30,LOW(0x4)
009a90 f011      	BREQ _0x20400B6
009a91 e0e2      	LDI  R30,LOW(2)
009a92 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
009a93 91e0 1a90 	LDS  R30,_card_type_G102
009a95 70e8      	ANDI R30,LOW(0x8)
009a96 f471      	BRNE _0x20400B7
                +
009a97 81e9     +LDD R30 , Y + 1
009a98 81fa     +LDD R31 , Y + 1 + 1
009a99 816b     +LDD R22 , Y + 1 + 2
009a9a 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
009a9b e0a0     +LDI R26 , LOW ( 0x200 )
009a9c e0b2     +LDI R27 , HIGH ( 0x200 )
009a9d e080     +LDI R24 , BYTE3 ( 0x200 )
009a9e e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
009a9f 940e cdde 	CALL __MULD12U
                +
009aa1 83e9     +STD Y + 1 , R30
009aa2 83fa     +STD Y + 1 + 1 , R31
009aa3 836b     +STD Y + 1 + 2 , R22
009aa4 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
009aa5 81a8      	LD   R26,Y
009aa6 30a1      	CPI  R26,LOW(0x1)
009aa7 f4a9      	BRNE _0x20400B8
009aa8 e5e8      	LDI  R30,LOW(88)
009aa9 93ea      	ST   -Y,R30
                +
009aaa 81aa     +LDD R26 , Y + 2
009aab 81bb     +LDD R27 , Y + 2 + 1
009aac 818c     +LDD R24 , Y + 2 + 2
009aad 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
009aae de18      	RCALL _send_cmd_G102
009aaf 30e0      	CPI  R30,0
009ab0 f441      	BRNE _0x20400BA
009ab1 81ed      	LDD  R30,Y+5
009ab2 81fe      	LDD  R31,Y+5+1
009ab3 93fa      	ST   -Y,R31
009ab4 93ea      	ST   -Y,R30
009ab5 efae      	LDI  R26,LOW(254)
009ab6 ddcc      	RCALL _tx_datablock_G102
009ab7 30e0      	CPI  R30,0
009ab8 f409      	BRNE _0x20400BB
                 _0x20400BA:
009ab9 c002      	RJMP _0x20400B9
                 _0x20400BB:
009aba e0e0      	LDI  R30,LOW(0)
009abb 83e8      	ST   Y,R30
                 _0x20400B9:
009abc c030      	RJMP _0x20400BC
                 _0x20400B8:
009abd 91e0 1a90 	LDS  R30,_card_type_G102
009abf 70e6      	ANDI R30,LOW(0x6)
009ac0 f039      	BREQ _0x20400BD
009ac1 ede7      	LDI  R30,LOW(215)
009ac2 93ea      	ST   -Y,R30
009ac3 81a9      	LDD  R26,Y+1
009ac4 27bb      	CLR  R27
009ac5 2788      	CLR  R24
009ac6 2799      	CLR  R25
009ac7 ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
009ac8 e5e9      	LDI  R30,LOW(89)
009ac9 93ea      	ST   -Y,R30
                +
009aca 81aa     +LDD R26 , Y + 2
009acb 81bb     +LDD R27 , Y + 2 + 1
009acc 818c     +LDD R24 , Y + 2 + 2
009acd 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
009ace ddf8      	RCALL _send_cmd_G102
009acf 30e0      	CPI  R30,0
009ad0 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
009ad1 81ed      	LDD  R30,Y+5
009ad2 81fe      	LDD  R31,Y+5+1
009ad3 93fa      	ST   -Y,R31
009ad4 93ea      	ST   -Y,R30
009ad5 efac      	LDI  R26,LOW(252)
009ad6 ddac      	RCALL _tx_datablock_G102
009ad7 30e0      	CPI  R30,0
009ad8 f051      	BREQ _0x20400C1
009ad9 81ed      	LDD  R30,Y+5
009ada 81fe      	LDD  R31,Y+5+1
009adb 50e0      	SUBI R30,LOW(-512)
009adc 4ffe      	SBCI R31,HIGH(-512)
009add 83ed      	STD  Y+5,R30
009ade 83fe      	STD  Y+5+1,R31
009adf 81e8      	LD   R30,Y
009ae0 50e1      	SUBI R30,LOW(1)
009ae1 83e8      	ST   Y,R30
009ae2 f771      	BRNE _0x20400C0
                 _0x20400C1:
009ae3 e0e0      	LDI  R30,LOW(0)
009ae4 e0f0      	LDI  R31,HIGH(0)
009ae5 93fa      	ST   -Y,R31
009ae6 93ea      	ST   -Y,R30
009ae7 efad      	LDI  R26,LOW(253)
009ae8 dd9a      	RCALL _tx_datablock_G102
009ae9 30e0      	CPI  R30,0
009aea f411      	BRNE _0x20400C3
009aeb e0e1      	LDI  R30,LOW(1)
009aec 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
009aed dd29      	RCALL _release_spi_G102
009aee 81e8      	LD   R30,Y
009aef 30e0      	CPI  R30,0
009af0 f011      	BREQ _0x20400C4
009af1 e0e1      	LDI  R30,LOW(1)
009af2 c001      	RJMP _0x20400C5
                 _0x20400C4:
009af3 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
009af4 c27f      	RJMP _0x20E0020
                 _disk_ioctl:
009af5 93ba      	ST   -Y,R27
009af6 93aa      	ST   -Y,R26
009af7 9760      	SBIW R28,16
009af8 940e cf38 	CALL __SAVELOCR6
009afa 8de9      	LDD  R30,Y+25
009afb 30e0      	CPI  R30,0
009afc f011      	BREQ _0x20400C7
009afd e0e4      	LDI  R30,LOW(4)
009afe c182      	RJMP _0x20E0022
                 _0x20400C7:
009aff e011      	LDI  R17,LOW(1)
009b00 91e0 1a8d 	LDS  R30,_status_G102
009b02 70e1      	ANDI R30,LOW(0x1)
009b03 f011      	BREQ _0x20400C8
009b04 e0e3      	LDI  R30,LOW(3)
009b05 c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
009b06 894e     +LDD R20 , Y + 22
009b07 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
009b08 8de8      	LDD  R30,Y+24
009b09 30e0      	CPI  R30,0
009b0a f431      	BRNE _0x20400CC
009b0b 9828      	CBI  0x5,0
009b0c dcf0      	RCALL _wait_ready_G102
009b0d 3fef      	CPI  R30,LOW(0xFF)
009b0e f409      	BRNE _0x20400CD
009b0f e010      	LDI  R17,LOW(0)
                 _0x20400CD:
009b10 c16e      	RJMP _0x20400CB
                 _0x20400CC:
009b11 30e1      	CPI  R30,LOW(0x1)
009b12 f011      	BREQ PC+3
009b13 940c 9b6f 	JMP _0x20400CE
009b15 e4e9      	LDI  R30,LOW(73)
009b16 93ea      	ST   -Y,R30
                +
009b17 e0a0     +LDI R26 , LOW ( 0x0 )
009b18 e0b0     +LDI R27 , HIGH ( 0x0 )
009b19 e080     +LDI R24 , BYTE3 ( 0x0 )
009b1a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009b1b ddab      	RCALL _send_cmd_G102
009b1c 30e0      	CPI  R30,0
009b1d f449      	BRNE _0x20400D0
009b1e 01fe      	MOVW R30,R28
009b1f 9636      	ADIW R30,6
009b20 93fa      	ST   -Y,R31
009b21 93ea      	ST   -Y,R30
009b22 e1a0      	LDI  R26,LOW(16)
009b23 e0b0      	LDI  R27,0
009b24 dcf9      	RCALL _rx_datablock_G102
009b25 30e0      	CPI  R30,0
009b26 f409      	BRNE _0x20400D1
                 _0x20400D0:
009b27 c046      	RJMP _0x20400CF
                 _0x20400D1:
009b28 81ee      	LDD  R30,Y+6
009b29 95e2      	SWAP R30
009b2a 70ef      	ANDI R30,0xF
009b2b 95e6      	LSR  R30
009b2c 95e6      	LSR  R30
009b2d 30e1      	CPI  R30,LOW(0x1)
009b2e f469      	BRNE _0x20400D2
009b2f e0e0      	LDI  R30,0
009b30 85fe      	LDD  R31,Y+14
009b31 85af      	LDD  R26,Y+15
009b32 e0b0      	LDI  R27,0
009b33 0fea      	ADD  R30,R26
009b34 1ffb      	ADC  R31,R27
009b35 9631      	ADIW R30,1
009b36 019f      	MOVW R18,R30
009b37 01d9      	MOVW R26,R18
009b38 2788      	CLR  R24
009b39 2799      	CLR  R25
009b3a e0ea      	LDI  R30,LOW(10)
009b3b c02c      	RJMP _0x2040101
                 _0x20400D2:
009b3c 85eb      	LDD  R30,Y+11
009b3d 70ef      	ANDI R30,LOW(0xF)
009b3e 2fae      	MOV  R26,R30
009b3f 89e8      	LDD  R30,Y+16
009b40 78e0      	ANDI R30,LOW(0x80)
009b41 1fee      	ROL  R30
009b42 e0e0      	LDI  R30,0
009b43 1fee      	ROL  R30
009b44 0fae      	ADD  R26,R30
009b45 85ef      	LDD  R30,Y+15
009b46 70e3      	ANDI R30,LOW(0x3)
009b47 0fee      	LSL  R30
009b48 0fea      	ADD  R30,R26
009b49 5fee      	SUBI R30,-LOW(2)
009b4a 2f0e      	MOV  R16,R30
009b4b 85ee      	LDD  R30,Y+14
009b4c 95e2      	SWAP R30
009b4d 70ef      	ANDI R30,0xF
009b4e 95e6      	LSR  R30
009b4f 95e6      	LSR  R30
009b50 2fae      	MOV  R26,R30
009b51 85ed      	LDD  R30,Y+13
009b52 e0f0      	LDI  R31,0
009b53 940e cd87 	CALL __LSLW2
009b55 e0b0      	LDI  R27,0
009b56 0fae      	ADD  R26,R30
009b57 1fbf      	ADC  R27,R31
009b58 85ec      	LDD  R30,Y+12
009b59 70e3      	ANDI R30,LOW(0x3)
009b5a e0f0      	LDI  R31,0
009b5b 940e cd87 	CALL __LSLW2
009b5d 2ffe      	MOV  R31,R30
009b5e e0e0      	LDI  R30,0
009b5f 0fea      	ADD  R30,R26
009b60 1ffb      	ADC  R31,R27
009b61 9631      	ADIW R30,1
009b62 019f      	MOVW R18,R30
009b63 01d9      	MOVW R26,R18
009b64 2788      	CLR  R24
009b65 2799      	CLR  R25
009b66 2fe0      	MOV  R30,R16
009b67 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
009b68 940e cd6b 	CALL __LSLD12
009b6a 01da      	MOVW R26,R20
009b6b 940e cea3 	CALL __PUTDP1
009b6d e010      	LDI  R17,LOW(0)
                 _0x20400CF:
009b6e c110      	RJMP _0x20400CB
                 _0x20400CE:
009b6f 30e2      	CPI  R30,LOW(0x2)
009b70 f439      	BRNE _0x20400D4
009b71 01da      	MOVW R26,R20
009b72 e0e0      	LDI  R30,LOW(512)
009b73 e0f2      	LDI  R31,HIGH(512)
009b74 93ed      	ST   X+,R30
009b75 93fc      	ST   X,R31
009b76 e010      	LDI  R17,LOW(0)
009b77 c107      	RJMP _0x20400CB
                 _0x20400D4:
009b78 30e3      	CPI  R30,LOW(0x3)
009b79 f011      	BREQ PC+3
009b7a 940c 9c24 	JMP _0x20400D5
009b7c 91e0 1a90 	LDS  R30,_card_type_G102
009b7e 70e4      	ANDI R30,LOW(0x4)
009b7f f179      	BREQ _0x20400D6
009b80 eced      	LDI  R30,LOW(205)
009b81 93ea      	ST   -Y,R30
                +
009b82 e0a0     +LDI R26 , LOW ( 0x0 )
009b83 e0b0     +LDI R27 , HIGH ( 0x0 )
009b84 e080     +LDI R24 , BYTE3 ( 0x0 )
009b85 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009b86 dd40      	RCALL _send_cmd_G102
009b87 30e0      	CPI  R30,0
009b88 f529      	BRNE _0x20400D7
009b89 efef      	LDI  R30,LOW(255)
009b8a bdee      	OUT  0x2E,R30
                 _0x20400D8:
009b8b b5ed      	IN   R30,0x2D
009b8c ffe7      	SBRS R30,7
009b8d cffd      	RJMP _0x20400D8
009b8e 01fe      	MOVW R30,R28
009b8f 9636      	ADIW R30,6
009b90 93fa      	ST   -Y,R31
009b91 93ea      	ST   -Y,R30
009b92 e1a0      	LDI  R26,LOW(16)
009b93 e0b0      	LDI  R27,0
009b94 dc89      	RCALL _rx_datablock_G102
009b95 30e0      	CPI  R30,0
009b96 f0b9      	BREQ _0x20400DB
009b97 e300      	LDI  R16,LOW(48)
                 _0x20400DD:
009b98 3000      	CPI  R16,0
009b99 f039      	BREQ _0x20400DE
009b9a efef      	LDI  R30,LOW(255)
009b9b bdee      	OUT  0x2E,R30
                 _0x20400DF:
009b9c b5ed      	IN   R30,0x2D
009b9d ffe7      	SBRS R30,7
009b9e cffd      	RJMP _0x20400DF
009b9f 5001      	SUBI R16,1
009ba0 cff7      	RJMP _0x20400DD
                 _0x20400DE:
009ba1 89e8      	LDD  R30,Y+16
009ba2 95e2      	SWAP R30
009ba3 70ef      	ANDI R30,0xF
                +
009ba4 e1a0     +LDI R26 , LOW ( 0x10 )
009ba5 e0b0     +LDI R27 , HIGH ( 0x10 )
009ba6 e080     +LDI R24 , BYTE3 ( 0x10 )
009ba7 e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
009ba8 940e cd6b 	CALL __LSLD12
009baa 01da      	MOVW R26,R20
009bab 940e cea3 	CALL __PUTDP1
009bad e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
009bae c074      	RJMP _0x20400E2
                 _0x20400D6:
009baf e4e9      	LDI  R30,LOW(73)
009bb0 93ea      	ST   -Y,R30
                +
009bb1 e0a0     +LDI R26 , LOW ( 0x0 )
009bb2 e0b0     +LDI R27 , HIGH ( 0x0 )
009bb3 e080     +LDI R24 , BYTE3 ( 0x0 )
009bb4 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009bb5 dd11      	RCALL _send_cmd_G102
009bb6 30e0      	CPI  R30,0
009bb7 f449      	BRNE _0x20400E4
009bb8 01fe      	MOVW R30,R28
009bb9 9636      	ADIW R30,6
009bba 93fa      	ST   -Y,R31
009bbb 93ea      	ST   -Y,R30
009bbc e1a0      	LDI  R26,LOW(16)
009bbd e0b0      	LDI  R27,0
009bbe dc5f      	RCALL _rx_datablock_G102
009bbf 30e0      	CPI  R30,0
009bc0 f409      	BRNE _0x20400E5
                 _0x20400E4:
009bc1 c061      	RJMP _0x20400E3
                 _0x20400E5:
009bc2 91e0 1a90 	LDS  R30,_card_type_G102
009bc4 70e2      	ANDI R30,LOW(0x2)
009bc5 f151      	BREQ _0x20400E6
009bc6 89e8      	LDD  R30,Y+16
009bc7 73ef      	ANDI R30,LOW(0x3F)
009bc8 27ff      	CLR  R31
009bc9 2766      	CLR  R22
009bca 2777      	CLR  R23
009bcb 940e cda3 	CALL __LSLD1
009bcd 937f      	PUSH R23
009bce 936f      	PUSH R22
009bcf 93ff      	PUSH R31
009bd0 93ef      	PUSH R30
009bd1 89e9      	LDD  R30,Y+17
009bd2 78e0      	ANDI R30,LOW(0x80)
009bd3 27ff      	CLR  R31
009bd4 2766      	CLR  R22
009bd5 2777      	CLR  R23
009bd6 01df      	MOVW R26,R30
009bd7 01cb      	MOVW R24,R22
009bd8 e0e7      	LDI  R30,LOW(7)
009bd9 940e cd77 	CALL __LSRD12
009bdb 91af      	POP  R26
009bdc 91bf      	POP  R27
009bdd 918f      	POP  R24
009bde 919f      	POP  R25
009bdf 940e cd38 	CALL __ADDD12
                +
009be1 5fef     +SUBI R30 , LOW ( - 1 )
009be2 4fff     +SBCI R31 , HIGH ( - 1 )
009be3 4f6f     +SBCI R22 , BYTE3 ( - 1 )
009be4 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
009be5 01df      	MOVW R26,R30
009be6 01cb      	MOVW R24,R22
009be7 89eb      	LDD  R30,Y+19
009be8 95e2      	SWAP R30
009be9 70ef      	ANDI R30,0xF
009bea 95e6      	LSR  R30
009beb 95e6      	LSR  R30
009bec 50e1      	SUBI R30,LOW(1)
009bed 940e cd6b 	CALL __LSLD12
009bef c02f      	RJMP _0x2040102
                 _0x20400E6:
009bf0 89e8      	LDD  R30,Y+16
009bf1 77ec      	ANDI R30,LOW(0x7C)
009bf2 95e6      	LSR  R30
009bf3 95e6      	LSR  R30
009bf4 27ff      	CLR  R31
009bf5 2766      	CLR  R22
009bf6 2777      	CLR  R23
                +
009bf7 5fef     +SUBI R30 , LOW ( - 1 )
009bf8 4fff     +SBCI R31 , HIGH ( - 1 )
009bf9 4f6f     +SBCI R22 , BYTE3 ( - 1 )
009bfa 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
009bfb 937f      	PUSH R23
009bfc 936f      	PUSH R22
009bfd 93ff      	PUSH R31
009bfe 93ef      	PUSH R30
009bff 89e9      	LDD  R30,Y+17
009c00 70e3      	ANDI R30,LOW(0x3)
009c01 27ff      	CLR  R31
009c02 2766      	CLR  R22
009c03 2777      	CLR  R23
009c04 01df      	MOVW R26,R30
009c05 01cb      	MOVW R24,R22
009c06 e0e3      	LDI  R30,LOW(3)
009c07 940e cd6b 	CALL __LSLD12
009c09 01df      	MOVW R26,R30
009c0a 01cb      	MOVW R24,R22
009c0b 89e9      	LDD  R30,Y+17
009c0c 7ee0      	ANDI R30,LOW(0xE0)
009c0d 95e2      	SWAP R30
009c0e 70ef      	ANDI R30,0xF
009c0f 95e6      	LSR  R30
009c10 27ff      	CLR  R31
009c11 2766      	CLR  R22
009c12 2777      	CLR  R23
009c13 940e cd38 	CALL __ADDD12
                +
009c15 5fef     +SUBI R30 , LOW ( - 1 )
009c16 4fff     +SBCI R31 , HIGH ( - 1 )
009c17 4f6f     +SBCI R22 , BYTE3 ( - 1 )
009c18 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
009c19 91af      	POP  R26
009c1a 91bf      	POP  R27
009c1b 918f      	POP  R24
009c1c 919f      	POP  R25
009c1d 940e cdde 	CALL __MULD12U
                 _0x2040102:
009c1f 01da      	MOVW R26,R20
009c20 940e cea3 	CALL __PUTDP1
009c22 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
009c23 c05b      	RJMP _0x20400CB
                 _0x20400D5:
009c24 30ea      	CPI  R30,LOW(0xA)
009c25 f431      	BRNE _0x20400E8
009c26 91e0 1a90 	LDS  R30,_card_type_G102
009c28 01da      	MOVW R26,R20
009c29 93ec      	ST   X,R30
009c2a e010      	LDI  R17,LOW(0)
009c2b c053      	RJMP _0x20400CB
                 _0x20400E8:
009c2c 30eb      	CPI  R30,LOW(0xB)
009c2d f499      	BRNE _0x20400E9
009c2e e4e9      	LDI  R30,LOW(73)
009c2f 93ea      	ST   -Y,R30
                +
009c30 e0a0     +LDI R26 , LOW ( 0x0 )
009c31 e0b0     +LDI R27 , HIGH ( 0x0 )
009c32 e080     +LDI R24 , BYTE3 ( 0x0 )
009c33 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009c34 dc92      	RCALL _send_cmd_G102
009c35 30e0      	CPI  R30,0
009c36 f439      	BRNE _0x20400EB
009c37 935a      	ST   -Y,R21
009c38 934a      	ST   -Y,R20
009c39 e1a0      	LDI  R26,LOW(16)
009c3a e0b0      	LDI  R27,0
009c3b dbe2      	RCALL _rx_datablock_G102
009c3c 30e0      	CPI  R30,0
009c3d f409      	BRNE _0x20400EC
                 _0x20400EB:
009c3e c001      	RJMP _0x20400EA
                 _0x20400EC:
009c3f e010      	LDI  R17,LOW(0)
                 _0x20400EA:
009c40 c03e      	RJMP _0x20400CB
                 _0x20400E9:
009c41 30ec      	CPI  R30,LOW(0xC)
009c42 f499      	BRNE _0x20400ED
009c43 e4ea      	LDI  R30,LOW(74)
009c44 93ea      	ST   -Y,R30
                +
009c45 e0a0     +LDI R26 , LOW ( 0x0 )
009c46 e0b0     +LDI R27 , HIGH ( 0x0 )
009c47 e080     +LDI R24 , BYTE3 ( 0x0 )
009c48 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009c49 dc7d      	RCALL _send_cmd_G102
009c4a 30e0      	CPI  R30,0
009c4b f439      	BRNE _0x20400EF
009c4c 935a      	ST   -Y,R21
009c4d 934a      	ST   -Y,R20
009c4e e1a0      	LDI  R26,LOW(16)
009c4f e0b0      	LDI  R27,0
009c50 dbcd      	RCALL _rx_datablock_G102
009c51 30e0      	CPI  R30,0
009c52 f409      	BRNE _0x20400F0
                 _0x20400EF:
009c53 c001      	RJMP _0x20400EE
                 _0x20400F0:
009c54 e010      	LDI  R17,LOW(0)
                 _0x20400EE:
009c55 c029      	RJMP _0x20400CB
                 _0x20400ED:
009c56 30ed      	CPI  R30,LOW(0xD)
009c57 f469      	BRNE _0x20400F1
009c58 e7ea      	LDI  R30,LOW(122)
009c59 93ea      	ST   -Y,R30
                +
009c5a e0a0     +LDI R26 , LOW ( 0x0 )
009c5b e0b0     +LDI R27 , HIGH ( 0x0 )
009c5c e080     +LDI R24 , BYTE3 ( 0x0 )
009c5d e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009c5e dc68      	RCALL _send_cmd_G102
009c5f 30e0      	CPI  R30,0
009c60 f419      	BRNE _0x20400F2
009c61 01da      	MOVW R26,R20
009c62 dcc6      	RCALL _rx_spi4_G102
009c63 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
009c64 c01a      	RJMP _0x20400CB
                 _0x20400F1:
009c65 30ee      	CPI  R30,LOW(0xE)
009c66 f4b9      	BRNE _0x20400F9
009c67 eced      	LDI  R30,LOW(205)
009c68 93ea      	ST   -Y,R30
                +
009c69 e0a0     +LDI R26 , LOW ( 0x0 )
009c6a e0b0     +LDI R27 , HIGH ( 0x0 )
009c6b e080     +LDI R24 , BYTE3 ( 0x0 )
009c6c e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
009c6d dc59      	RCALL _send_cmd_G102
009c6e 30e0      	CPI  R30,0
009c6f f469      	BRNE _0x20400F4
009c70 efef      	LDI  R30,LOW(255)
009c71 bdee      	OUT  0x2E,R30
                 _0x20400F5:
009c72 b5ed      	IN   R30,0x2D
009c73 ffe7      	SBRS R30,7
009c74 cffd      	RJMP _0x20400F5
009c75 935a      	ST   -Y,R21
009c76 934a      	ST   -Y,R20
009c77 e4a0      	LDI  R26,LOW(64)
009c78 e0b0      	LDI  R27,0
009c79 dba4      	RCALL _rx_datablock_G102
009c7a 30e0      	CPI  R30,0
009c7b f009      	BREQ _0x20400F8
009c7c e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
009c7d c001      	RJMP _0x20400CB
                 _0x20400F9:
009c7e e014      	LDI  R17,LOW(4)
                 _0x20400CB:
009c7f db97      	RCALL _release_spi_G102
009c80 2fe1      	MOV  R30,R17
                 _0x20E0022:
009c81 940e cf3f 	CALL __LOADLOCR6
009c83 966a      	ADIW R28,26
009c84 9508      	RET
                 _disk_timerproc:
009c85 931a      	ST   -Y,R17
009c86 930a      	ST   -Y,R16
009c87 9110 1a8e 	LDS  R17,_timer1_G102
009c89 3010      	CPI  R17,0
009c8a f019      	BREQ _0x20400FA
009c8b 5011      	SUBI R17,LOW(1)
009c8c 9310 1a8e 	STS  _timer1_G102,R17
                 _0x20400FA:
009c8e 9110 1a8f 	LDS  R17,_timer2_G102
009c90 3010      	CPI  R17,0
009c91 f019      	BREQ _0x20400FB
009c92 5011      	SUBI R17,LOW(1)
009c93 9310 1a8f 	STS  _timer2_G102,R17
                 _0x20400FB:
009c95 9110 1a91 	LDS  R17,_pv_S102000B000
009c97 b1e0      	IN   R30,0x0
009c98 70e2      	ANDI R30,LOW(0x2)
009c99 2fae      	MOV  R26,R30
009c9a b1e0      	IN   R30,0x0
009c9b 70e1      	ANDI R30,LOW(0x1)
009c9c 2bea      	OR   R30,R26
009c9d 93e0 1a91 	STS  _pv_S102000B000,R30
009c9f 17e1      	CP   R30,R17
009ca0 f481      	BRNE _0x20400FC
009ca1 9100 1a8d 	LDS  R16,_status_G102
009ca3 70e2      	ANDI R30,LOW(0x2)
009ca4 f011      	BREQ _0x20400FD
009ca5 6004      	ORI  R16,LOW(4)
009ca6 c001      	RJMP _0x20400FE
                 _0x20400FD:
009ca7 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
009ca8 91e0 1a91 	LDS  R30,_pv_S102000B000
009caa 70e1      	ANDI R30,LOW(0x1)
009cab f011      	BREQ _0x20400FF
009cac 6003      	ORI  R16,LOW(3)
009cad c001      	RJMP _0x2040100
                 _0x20400FF:
009cae 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
009caf 9300 1a8d 	STS  _status_G102,R16
                 _0x20400FC:
009cb1 9109      	LD   R16,Y+
009cb2 9119      	LD   R17,Y+
009cb3 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
009cb4 9727      	SBIW R28,7
009cb5 91a0 1463 	LDS  R26,_prtc_get_time
009cb7 91b0 1464 	LDS  R27,_prtc_get_time+1
009cb9 9180 1465 	LDS  R24,_prtc_get_time+2
009cbb 9190 1466 	LDS  R25,_prtc_get_time+3
009cbd 940e cf28 	CALL __CPD02
009cbf f059      	BREQ _0x2060004
009cc0 91a0 1467 	LDS  R26,_prtc_get_date
009cc2 91b0 1468 	LDS  R27,_prtc_get_date+1
009cc4 9180 1469 	LDS  R24,_prtc_get_date+2
009cc6 9190 146a 	LDS  R25,_prtc_get_date+3
009cc8 940e cf28 	CALL __CPD02
009cca f429      	BRNE _0x2060003
                 _0x2060004:
                +
009ccb e0e0     +LDI R30 , LOW ( 0x3A210000 )
009ccc e0f0     +LDI R31 , HIGH ( 0x3A210000 )
009ccd e261     +LDI R22 , BYTE3 ( 0x3A210000 )
009cce e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
009ccf c070      	RJMP _0x20E0021
                 _0x2060003:
009cd0 940e b471 	CALL SUBOPT_0x56
009cd2 940e b4c9 	CALL SUBOPT_0x63
009cd4 01de      	MOVW R26,R28
009cd5 9618      	ADIW R26,8
                +
009cd6 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
009cd8 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
009cda 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
009cdc bf6c     +OUT EIND , R22
009cdd 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
009cde 01fe      	MOVW R30,R28
009cdf 9633      	ADIW R30,3
009ce0 940e c08e 	CALL SUBOPT_0x24B
009ce2 01de      	MOVW R26,R28
009ce3 9614      	ADIW R26,4
                +
009ce4 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
009ce6 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
009ce8 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
009cea bf6c     +OUT EIND , R22
009ceb 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
009cec 81e8      	LD   R30,Y
009ced 81f9      	LDD  R31,Y+1
009cee 5bec      	SUBI R30,LOW(1980)
009cef 40f7      	SBCI R31,HIGH(1980)
009cf0 2766      	CLR  R22
009cf1 2777      	CLR  R23
009cf2 01df      	MOVW R26,R30
009cf3 01cb      	MOVW R24,R22
009cf4 e1e9      	LDI  R30,LOW(25)
009cf5 940e cd6b 	CALL __LSLD12
009cf7 937f      	PUSH R23
009cf8 936f      	PUSH R22
009cf9 93ff      	PUSH R31
009cfa 93ef      	PUSH R30
009cfb 81ea      	LDD  R30,Y+2
009cfc 940e c7cd 	CALL SUBOPT_0x330
009cfe 01df      	MOVW R26,R30
009cff 01cb      	MOVW R24,R22
009d00 e1e5      	LDI  R30,LOW(21)
009d01 940e cd6b 	CALL __LSLD12
009d03 91af      	POP  R26
009d04 91bf      	POP  R27
009d05 918f      	POP  R24
009d06 919f      	POP  R25
009d07 940e cd51 	CALL __ORD12
009d09 01df      	MOVW R26,R30
009d0a 01cb      	MOVW R24,R22
009d0b 81eb      	LDD  R30,Y+3
009d0c 940e c7cd 	CALL SUBOPT_0x330
009d0e 940e cdb2 	CALL __LSLD16
009d10 940e cd51 	CALL __ORD12
009d12 937f      	PUSH R23
009d13 936f      	PUSH R22
009d14 93ff      	PUSH R31
009d15 93ef      	PUSH R30
009d16 81ee      	LDD  R30,Y+6
009d17 940e c7cd 	CALL SUBOPT_0x330
009d19 01df      	MOVW R26,R30
009d1a 01cb      	MOVW R24,R22
009d1b e0eb      	LDI  R30,LOW(11)
009d1c 940e cd6b 	CALL __LSLD12
009d1e 91af      	POP  R26
009d1f 91bf      	POP  R27
009d20 918f      	POP  R24
009d21 919f      	POP  R25
009d22 940e cd51 	CALL __ORD12
009d24 937f      	PUSH R23
009d25 936f      	PUSH R22
009d26 93ff      	PUSH R31
009d27 93ef      	PUSH R30
009d28 81ed      	LDD  R30,Y+5
009d29 940e c7cd 	CALL SUBOPT_0x330
009d2b 01df      	MOVW R26,R30
009d2c 01cb      	MOVW R24,R22
009d2d e0e5      	LDI  R30,LOW(5)
009d2e 940e cd6b 	CALL __LSLD12
009d30 91af      	POP  R26
009d31 91bf      	POP  R27
009d32 918f      	POP  R24
009d33 919f      	POP  R25
009d34 940e cd51 	CALL __ORD12
009d36 01df      	MOVW R26,R30
009d37 01cb      	MOVW R24,R22
009d38 81ec      	LDD  R30,Y+4
009d39 e0f0      	LDI  R31,0
009d3a 95f5      	ASR  R31
009d3b 95e7      	ROR  R30
009d3c 940e cdbd 	CALL __CWD1
009d3e 940e cd51 	CALL __ORD12
                 _0x20E0021:
009d40 9627      	ADIW R28,7
009d41 9508      	RET
                 _mem_cpy_G103:
009d42 940e b589 	CALL SUBOPT_0x7F
                +
009d44 8508     +LDD R16 , Y + 8
009d45 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
009d46 812e     +LDD R18 , Y + 6
009d47 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
009d48 81ec      	LDD  R30,Y+4
009d49 81fd      	LDD  R31,Y+4+1
009d4a 9731      	SBIW R30,1
009d4b 83ec      	STD  Y+4,R30
009d4c 83fd      	STD  Y+4+1,R31
009d4d 9631      	ADIW R30,1
009d4e f061      	BREQ _0x2060008
009d4f 931f      	PUSH R17
009d50 930f      	PUSH R16
                +
009d51 5f0f     +SUBI R16 , LOW ( - 1 )
009d52 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009d53 01d9      	MOVW R26,R18
                +
009d54 5f2f     +SUBI R18 , LOW ( - 1 )
009d55 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009d56 91ec      	LD   R30,X
009d57 91af      	POP  R26
009d58 91bf      	POP  R27
009d59 93ec      	ST   X,R30
009d5a cfed      	RJMP _0x2060006
                 _0x2060008:
009d5b 940e cf41 	CALL __LOADLOCR4
009d5d c42b      	RJMP _0x20E0018
                 _mem_set_G103:
009d5e 940e b595 	CALL SUBOPT_0x81
                +
009d60 810e     +LDD R16 , Y + 6
009d61 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
009d62 81ea      	LDD  R30,Y+2
009d63 81fb      	LDD  R31,Y+2+1
009d64 9731      	SBIW R30,1
009d65 83ea      	STD  Y+2,R30
009d66 83fb      	STD  Y+2+1,R31
009d67 9631      	ADIW R30,1
009d68 f049      	BREQ _0x206000E
009d69 931f      	PUSH R17
009d6a 930f      	PUSH R16
                +
009d6b 5f0f     +SUBI R16 , LOW ( - 1 )
009d6c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009d6d 81ec      	LDD  R30,Y+4
009d6e 91af      	POP  R26
009d6f 91bf      	POP  R27
009d70 93ec      	ST   X,R30
009d71 cff0      	RJMP _0x206000C
                 _0x206000E:
009d72 8119      	LDD  R17,Y+1
009d73 8108      	LDD  R16,Y+0
                 _0x20E0020:
009d74 9628      	ADIW R28,8
009d75 9508      	RET
                 _mem_cmp_G103:
009d76 940e bc65 	CALL SUBOPT_0x1A1
                +
009d78 850a     +LDD R16 , Y + 10
009d79 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009d7a 8528     +LDD R18 , Y + 8
009d7b 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
009d7c e040     +LDI R20 , LOW ( 0 )
009d7d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
009d7e 81ee      	LDD  R30,Y+6
009d7f 81ff      	LDD  R31,Y+6+1
009d80 9731      	SBIW R30,1
009d81 83ee      	STD  Y+6,R30
009d82 83ff      	STD  Y+6+1,R31
009d83 9631      	ADIW R30,1
009d84 f081      	BREQ _0x2060012
009d85 01d8      	MOVW R26,R16
                +
009d86 5f0f     +SUBI R16 , LOW ( - 1 )
009d87 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009d88 900c      	LD   R0,X
009d89 2411      	CLR  R1
009d8a 01d9      	MOVW R26,R18
                +
009d8b 5f2f     +SUBI R18 , LOW ( - 1 )
009d8c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009d8d 91ac      	LD   R26,X
009d8e 27bb      	CLR  R27
009d8f 01f0      	MOVW R30,R0
009d90 1bea      	SUB  R30,R26
009d91 0bfb      	SBC  R31,R27
009d92 01af      	MOVW R20,R30
009d93 9730      	SBIW R30,0
009d94 f009      	BREQ _0x2060013
                 _0x2060012:
009d95 c001      	RJMP _0x2060011
                 _0x2060013:
009d96 cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
009d97 01fa      	MOVW R30,R20
                 _0x20E001E:
009d98 940e cf3f 	CALL __LOADLOCR6
009d9a 962c      	ADIW R28,12
009d9b 9508      	RET
                 _chk_chrf_G103:
009d9c 93ba      	ST   -Y,R27
009d9d 93aa      	ST   -Y,R26
                 _0x2060014:
009d9e 940e b6db 	CALL SUBOPT_0xB4
                +
009da0 bf6b     +OUT RAMPZ , R22
009da1 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
009da2 30e0      	CPI  R30,0
009da3 f051      	BREQ _0x2060017
009da4 940e b6db 	CALL SUBOPT_0xB4
                +
009da6 bf6b     +OUT RAMPZ , R22
009da7 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
009da8 81e8      	LD   R30,Y
009da9 81f9      	LDD  R31,Y+1
009daa e0b0      	LDI  R27,0
009dab 17ea      	CP   R30,R26
009dac 07fb      	CPC  R31,R27
009dad f409      	BRNE _0x2060018
                 _0x2060017:
009dae c005      	RJMP _0x2060016
                 _0x2060018:
009daf 01de      	MOVW R26,R28
009db0 9612      	ADIW R26,2
009db1 940e c7d1 	CALL SUBOPT_0x331
009db3 cfea      	RJMP _0x2060014
                 _0x2060016:
009db4 940e b6db 	CALL SUBOPT_0xB4
                +
009db6 bf6b     +OUT RAMPZ , R22
009db7 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
009db8 e0f0      	LDI  R31,0
                 _0x20E001D:
009db9 9626      	ADIW R28,6
009dba 9508      	RET
                 _move_window_G103:
009dbb 940e cecd 	CALL __PUTPARD2
009dbd 9724      	SBIW R28,4
009dbe 931a      	ST   -Y,R17
009dbf 85a9      	LDD  R26,Y+9
009dc0 85ba      	LDD  R27,Y+9+1
009dc1 969e      	ADIW R26,46
009dc2 940e c7d9 	CALL SUBOPT_0x332
009dc4 940e c7e0 	CALL SUBOPT_0x333
009dc6 940e c07f 	CALL SUBOPT_0x248
009dc8 940e cf2e 	CALL __CPD12
009dca f411      	BRNE PC+3
009dcb 940c 9e1d 	JMP _0x2060019
009dcd 85e9      	LDD  R30,Y+9
009dce 85fa      	LDD  R31,Y+9+1
009dcf 81e4      	LDD  R30,Z+4
009dd0 30e0      	CPI  R30,0
009dd1 f199      	BREQ _0x206001A
009dd2 940e c7e5 	CALL SUBOPT_0x334
009dd4 30e0      	CPI  R30,0
009dd5 f011      	BREQ _0x206001B
009dd6 e0e1      	LDI  R30,LOW(1)
009dd7 c046      	RJMP _0x20E001C
                 _0x206001B:
009dd8 85a9      	LDD  R26,Y+9
009dd9 85ba      	LDD  R27,Y+9+1
009dda 9614      	ADIW R26,4
009ddb e0e0      	LDI  R30,LOW(0)
009ddc 93ec      	ST   X,R30
009ddd 85e9      	LDD  R30,Y+9
009dde 85fa      	LDD  R31,Y+9+1
009ddf 940e c7f5 	CALL SUBOPT_0x335
009de1 010d      	MOVW R0,R26
009de2 85a9      	LDD  R26,Y+9
009de3 85ba      	LDD  R27,Y+9+1
009de4 965a      	ADIW R26,26
009de5 940e ce98 	CALL __GETD1P
009de7 01d0      	MOVW R26,R0
009de8 940e cd38 	CALL __ADDD12
009dea 940e c07f 	CALL SUBOPT_0x248
009dec 940e cf33 	CALL __CPD21
009dee f4b0      	BRSH _0x206001C
009def 85e9      	LDD  R30,Y+9
009df0 85fa      	LDD  R31,Y+9+1
009df1 8113      	LDD  R17,Z+3
                 _0x206001E:
009df2 3012      	CPI  R17,2
009df3 f088      	BRLO _0x206001F
009df4 85a9      	LDD  R26,Y+9
009df5 85ba      	LDD  R27,Y+9+1
009df6 965a      	ADIW R26,26
009df7 940e ce98 	CALL __GETD1P
009df9 940e c07f 	CALL SUBOPT_0x248
009dfb 940e cd38 	CALL __ADDD12
                +
009dfd 83e9     +STD Y + 1 , R30
009dfe 83fa     +STD Y + 1 + 1 , R31
009dff 836b     +STD Y + 1 + 2 , R22
009e00 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
009e01 940e c7e5 	CALL SUBOPT_0x334
009e03 5011      	SUBI R17,1
009e04 cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
009e05 940e c7e0 	CALL SUBOPT_0x333
009e07 940e cf1c 	CALL __CPD10
009e09 f099      	BREQ _0x2060020
009e0a 85e9      	LDD  R30,Y+9
009e0b 85fa      	LDD  R31,Y+9+1
009e0c 81a1      	LDD  R26,Z+1
009e0d 93aa      	ST   -Y,R26
009e0e 85ea      	LDD  R30,Y+10
009e0f 85fb      	LDD  R31,Y+10+1
009e10 96f2      	ADIW R30,50
009e11 940e c7fa 	CALL SUBOPT_0x336
009e13 f011      	BREQ _0x2060021
009e14 e0e1      	LDI  R30,LOW(1)
009e15 c008      	RJMP _0x20E001C
                 _0x2060021:
009e16 940e c7e0 	CALL SUBOPT_0x333
                +
009e18 85a9     +LDD R26 , Y + 9
009e19 85ba     +LDD R27 , Y + 9 + 1
009e1a 969e     +ADIW R26 , 46
009e1b 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
009e1d e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
009e1e 8118      	LDD  R17,Y+0
009e1f 962b      	ADIW R28,11
009e20 9508      	RET
                 _sync_G103:
009e21 93ba      	ST   -Y,R27
009e22 93aa      	ST   -Y,R26
009e23 931a      	ST   -Y,R17
009e24 81e9      	LDD  R30,Y+1
009e25 81fa      	LDD  R31,Y+1+1
009e26 93fa      	ST   -Y,R31
009e27 93ea      	ST   -Y,R30
009e28 940e c805 	CALL SUBOPT_0x337
009e2a 2f1e      	MOV  R17,R30
009e2b 3010      	CPI  R17,0
009e2c f011      	BREQ PC+3
009e2d 940c 9e91 	JMP _0x2060022
009e2f 81a9      	LDD  R26,Y+1
009e30 81ba      	LDD  R27,Y+1+1
009e31 91ac      	LD   R26,X
009e32 30a3      	CPI  R26,LOW(0x3)
009e33 f429      	BRNE _0x2060024
009e34 81e9      	LDD  R30,Y+1
009e35 81fa      	LDD  R31,Y+1+1
009e36 81e5      	LDD  R30,Z+5
009e37 30e0      	CPI  R30,0
009e38 f409      	BRNE _0x2060025
                 _0x2060024:
009e39 c04b      	RJMP _0x2060023
                 _0x2060025:
009e3a 81a9      	LDD  R26,Y+1
009e3b 81ba      	LDD  R27,Y+1+1
009e3c 969e      	ADIW R26,46
009e3d 940e b5e4 	CALL SUBOPT_0x8E
009e3f 81e9      	LDD  R30,Y+1
009e40 81fa      	LDD  R31,Y+1+1
009e41 940e c809 	CALL SUBOPT_0x338
009e43 81e9      	LDD  R30,Y+1
009e44 81fa      	LDD  R31,Y+1+1
009e45 96f2      	ADIW R30,50
009e46 50e2      	SUBI R30,LOW(-510)
009e47 4ffe      	SBCI R31,HIGH(-510)
009e48 e5a5      	LDI  R26,LOW(43605)
009e49 eaba      	LDI  R27,HIGH(43605)
009e4a 83a0      	STD  Z+0,R26
009e4b 83b1      	STD  Z+1,R27
009e4c 81e9      	LDD  R30,Y+1
009e4d 81fa      	LDD  R31,Y+1+1
009e4e 96f2      	ADIW R30,50
                +
009e4f e5a2     +LDI R26 , LOW ( 0x41615252 )
009e50 e5b2     +LDI R27 , HIGH ( 0x41615252 )
009e51 e681     +LDI R24 , BYTE3 ( 0x41615252 )
009e52 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
009e53 940e bee0 	CALL SUBOPT_0x208
009e55 81e9      	LDD  R30,Y+1
009e56 81fa      	LDD  R31,Y+1+1
009e57 96f2      	ADIW R30,50
009e58 51ec      	SUBI R30,LOW(-484)
009e59 4ffe      	SBCI R31,HIGH(-484)
                +
009e5a e7a2     +LDI R26 , LOW ( 0x61417272 )
009e5b e7b2     +LDI R27 , HIGH ( 0x61417272 )
009e5c e481     +LDI R24 , BYTE3 ( 0x61417272 )
009e5d e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
009e5e 940e bee0 	CALL SUBOPT_0x208
009e60 81e9      	LDD  R30,Y+1
009e61 81fa      	LDD  R31,Y+1+1
009e62 96f2      	ADIW R30,50
009e63 51e8      	SUBI R30,LOW(-488)
009e64 4ffe      	SBCI R31,HIGH(-488)
009e65 010f      	MOVW R0,R30
009e66 81a9      	LDD  R26,Y+1
009e67 81ba      	LDD  R27,Y+1+1
009e68 961e      	ADIW R26,14
009e69 940e c814 	CALL SUBOPT_0x339
009e6b 96f2      	ADIW R30,50
009e6c 51e4      	SUBI R30,LOW(-492)
009e6d 4ffe      	SBCI R31,HIGH(-492)
009e6e 010f      	MOVW R0,R30
009e6f 81a9      	LDD  R26,Y+1
009e70 81ba      	LDD  R27,Y+1+1
009e71 961a      	ADIW R26,10
009e72 940e c814 	CALL SUBOPT_0x339
009e74 81a1      	LDD  R26,Z+1
009e75 93aa      	ST   -Y,R26
009e76 81ea      	LDD  R30,Y+2
009e77 81fb      	LDD  R31,Y+2+1
009e78 96f2      	ADIW R30,50
009e79 93fa      	ST   -Y,R31
009e7a 93ea      	ST   -Y,R30
009e7b 81ec      	LDD  R30,Y+4
009e7c 81fd      	LDD  R31,Y+4+1
009e7d 940e c81c 	CALL SUBOPT_0x33A
009e7f dbfe      	RCALL _disk_write
009e80 81a9      	LDD  R26,Y+1
009e81 81ba      	LDD  R27,Y+1+1
009e82 9615      	ADIW R26,5
009e83 e0e0      	LDI  R30,LOW(0)
009e84 93ec      	ST   X,R30
                 _0x2060023:
009e85 81e9      	LDD  R30,Y+1
009e86 81fa      	LDD  R31,Y+1+1
009e87 81a1      	LDD  R26,Z+1
009e88 93aa      	ST   -Y,R26
009e89 e0e0      	LDI  R30,LOW(0)
009e8a 93ea      	ST   -Y,R30
009e8b e0a0      	LDI  R26,LOW(0)
009e8c e0b0      	LDI  R27,HIGH(0)
009e8d dc67      	RCALL _disk_ioctl
009e8e 30e0      	CPI  R30,0
009e8f f009      	BREQ _0x2060026
009e90 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
009e91 2fe1      	MOV  R30,R17
                 _0x20E001B:
009e92 8118      	LDD  R17,Y+0
009e93 9623      	ADIW R28,3
009e94 9508      	RET
                 _get_fat:
009e95 940e cecd 	CALL __PUTPARD2
009e97 9724      	SBIW R28,4
009e98 940e cf3a 	CALL __SAVELOCR4
009e9a 940e b7af 	CALL SUBOPT_0xD6
009e9c 940e c824 	CALL SUBOPT_0x33B
009e9e f050      	BRLO _0x2060028
009e9f 85ac      	LDD  R26,Y+12
009ea0 85bd      	LDD  R27,Y+12+1
009ea1 965e      	ADIW R26,30
009ea2 940e ce98 	CALL __GETD1P
009ea4 940e b7af 	CALL SUBOPT_0xD6
009ea6 940e cf33 	CALL __CPD21
009ea8 f018      	BRLO _0x2060027
                 _0x2060028:
009ea9 940e c82c 	CALL SUBOPT_0x33C
009eab c069      	RJMP _0x20E001A
                 _0x2060027:
009eac 85ac      	LDD  R26,Y+12
009ead 85bd      	LDD  R27,Y+12+1
009eae 9692      	ADIW R26,34
009eaf 940e c831 	CALL SUBOPT_0x33D
009eb1 85ac      	LDD  R26,Y+12
009eb2 85bd      	LDD  R27,Y+12+1
009eb3 91ec      	LD   R30,X
009eb4 940e bff7 	CALL SUBOPT_0x234
009eb6 f561      	BRNE _0x206002D
                +
009eb7 8528     +LDD R18 , Y + 8
009eb8 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
009eb9 01f9      	MOVW R30,R18
009eba 95f6      	LSR  R31
009ebb 95e7      	ROR  R30
                +
009ebc 0f2e     +ADD R18 , R30
009ebd 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
009ebe 940e bc94 	CALL SUBOPT_0x1A9
009ec0 940e c835 	CALL SUBOPT_0x33E
009ec2 f009      	BREQ _0x206002E
009ec3 c04f      	RJMP _0x206002C
                 _0x206002E:
009ec4 940e c844 	CALL SUBOPT_0x33F
009ec6 910c      	LD   R16,X
009ec7 2711      	CLR  R17
                +
009ec8 5f2f     +SUBI R18 , LOW ( - 1 )
009ec9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009eca 940e bc94 	CALL SUBOPT_0x1A9
009ecc 940e c835 	CALL SUBOPT_0x33E
009ece f009      	BREQ _0x206002F
009ecf c043      	RJMP _0x206002C
                 _0x206002F:
009ed0 940e c844 	CALL SUBOPT_0x33F
009ed2 91ec      	LD   R30,X
009ed3 2ffe      	MOV  R31,R30
009ed4 e0e0      	LDI  R30,0
                +
009ed5 2b0e     +OR R16 , R30
009ed6 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
009ed7 85e8      	LDD  R30,Y+8
009ed8 70e1      	ANDI R30,LOW(0x1)
009ed9 f021      	BREQ _0x2060030
009eda 01f8      	MOVW R30,R16
009edb 940e cd95 	CALL __LSRW4
009edd c002      	RJMP _0x206022B
                 _0x2060030:
009ede 01f8      	MOVW R30,R16
009edf 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
009ee0 2766      	CLR  R22
009ee1 2777      	CLR  R23
009ee2 c032      	RJMP _0x20E001A
                 _0x206002D:
009ee3 30e2      	CPI  R30,LOW(0x2)
009ee4 e0a0      	LDI  R26,HIGH(0x2)
009ee5 07fa      	CPC  R31,R26
009ee6 f499      	BRNE _0x2060033
009ee7 940e bc94 	CALL SUBOPT_0x1A9
009ee9 940e b45c 	CALL SUBOPT_0x52
009eeb 940e c84c 	CALL SUBOPT_0x340
009eed 940e c853 	CALL SUBOPT_0x341
009eef f519      	BRNE _0x206002C
009ef0 85a8      	LDD  R26,Y+8
009ef1 85b9      	LDD  R27,Y+8+1
009ef2 e0e2      	LDI  R30,LOW(2)
009ef3 940e c85b 	CALL SUBOPT_0x342
009ef5 0fae      	ADD  R26,R30
009ef6 1fbf      	ADC  R27,R31
009ef7 940e b2f1 	CALL SUBOPT_0x1E
009ef9 c01b      	RJMP _0x20E001A
                 _0x2060033:
009efa 30e3      	CPI  R30,LOW(0x3)
009efb e0a0      	LDI  R26,HIGH(0x3)
009efc 07fa      	CPC  R31,R26
009efd f4a9      	BRNE _0x206002C
009efe 940e bc94 	CALL SUBOPT_0x1A9
009f00 940e b45c 	CALL SUBOPT_0x52
009f02 940e c862 	CALL SUBOPT_0x343
009f04 940e c853 	CALL SUBOPT_0x341
009f06 f461      	BRNE _0x206002C
009f07 85a8      	LDD  R26,Y+8
009f08 85b9      	LDD  R27,Y+8+1
009f09 e0e4      	LDI  R30,LOW(4)
009f0a 940e c85b 	CALL SUBOPT_0x342
009f0c 940e b2e1 	CALL SUBOPT_0x1B
                +
009f0e 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
009f0f 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
009f10 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
009f11 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
009f12 c002      	RJMP _0x20E001A
                 _0x206002C:
009f13 940e b31c 	CALL SUBOPT_0x25
                 _0x20E001A:
009f15 940e cf41 	CALL __LOADLOCR4
009f17 962e      	ADIW R28,14
009f18 9508      	RET
                 _put_fat:
009f19 940e cecd 	CALL __PUTPARD2
009f1b 9724      	SBIW R28,4
009f1c 940e cf38 	CALL __SAVELOCR6
009f1e 940e bedb 	CALL SUBOPT_0x207
009f20 940e c824 	CALL SUBOPT_0x33B
009f22 f050      	BRLO _0x2060038
009f23 89aa      	LDD  R26,Y+18
009f24 89bb      	LDD  R27,Y+18+1
009f25 965e      	ADIW R26,30
009f26 940e ce98 	CALL __GETD1P
009f28 940e bedb 	CALL SUBOPT_0x207
009f2a 940e cf33 	CALL __CPD21
009f2c f010      	BRLO _0x2060037
                 _0x2060038:
009f2d e052      	LDI  R21,LOW(2)
009f2e c08a      	RJMP _0x206003A
                 _0x2060037:
009f2f 89aa      	LDD  R26,Y+18
009f30 89bb      	LDD  R27,Y+18+1
009f31 9692      	ADIW R26,34
009f32 940e ce98 	CALL __GETD1P
009f34 940e b6ea 	CALL SUBOPT_0xB7
009f36 89aa      	LDD  R26,Y+18
009f37 89bb      	LDD  R27,Y+18+1
009f38 91ec      	LD   R30,X
009f39 940e bff7 	CALL SUBOPT_0x234
009f3b f011      	BREQ PC+3
009f3c 940c 9f85 	JMP _0x206003E
                +
009f3e 850e     +LDD R16 , Y + 14
009f3f 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
009f40 01f8      	MOVW R30,R16
009f41 95f6      	LSR  R31
009f42 95e7      	ROR  R30
                +
009f43 0f0e     +ADD R16 , R30
009f44 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
009f45 940e c117 	CALL SUBOPT_0x25F
009f47 940e c869 	CALL SUBOPT_0x344
009f49 f009      	BREQ _0x206003F
009f4a c069      	RJMP _0x206003D
                 _0x206003F:
009f4b 940e c879 	CALL SUBOPT_0x345
009f4d f051      	BREQ _0x2060040
009f4e 01d9      	MOVW R26,R18
009f4f 91ec      	LD   R30,X
009f50 70ef      	ANDI R30,LOW(0xF)
009f51 2fae      	MOV  R26,R30
009f52 85ea      	LDD  R30,Y+10
009f53 e0f0      	LDI  R31,0
009f54 940e cd83 	CALL __LSLW4
009f56 2bea      	OR   R30,R26
009f57 c001      	RJMP _0x2060041
                 _0x2060040:
009f58 85ea      	LDD  R30,Y+10
                 _0x2060041:
009f59 01d9      	MOVW R26,R18
009f5a 93ec      	ST   X,R30
                +
009f5b 5f0f     +SUBI R16 , LOW ( - 1 )
009f5c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f5d 89aa      	LDD  R26,Y+18
009f5e 89bb      	LDD  R27,Y+18+1
009f5f 9614      	ADIW R26,4
009f60 e0e1      	LDI  R30,LOW(1)
009f61 93ec      	ST   X,R30
009f62 940e c117 	CALL SUBOPT_0x25F
009f64 940e c869 	CALL SUBOPT_0x344
009f66 f009      	BREQ _0x2060043
009f67 c04c      	RJMP _0x206003D
                 _0x2060043:
009f68 940e c879 	CALL SUBOPT_0x345
009f6a f049      	BREQ _0x2060044
009f6b 940e b45c 	CALL SUBOPT_0x52
009f6d e0e4      	LDI  R30,LOW(4)
009f6e 940e cd77 	CALL __LSRD12
009f70 27ff      	CLR  R31
009f71 2766      	CLR  R22
009f72 2777      	CLR  R23
009f73 c00e      	RJMP _0x2060045
                 _0x2060044:
009f74 01d9      	MOVW R26,R18
009f75 91ec      	LD   R30,X
009f76 7fe0      	ANDI R30,LOW(0xF0)
009f77 2e1e      	MOV  R1,R30
009f78 940e b45c 	CALL SUBOPT_0x52
009f7a e0e8      	LDI  R30,LOW(8)
009f7b 940e cd77 	CALL __LSRD12
009f7d 27ff      	CLR  R31
009f7e 2766      	CLR  R22
009f7f 2777      	CLR  R23
009f80 70ef      	ANDI R30,LOW(0xF)
009f81 29e1      	OR   R30,R1
                 _0x2060045:
009f82 01d9      	MOVW R26,R18
009f83 93ec      	ST   X,R30
009f84 c02f      	RJMP _0x206003D
                 _0x206003E:
009f85 30e2      	CPI  R30,LOW(0x2)
009f86 e0a0      	LDI  R26,HIGH(0x2)
009f87 07fa      	CPC  R31,R26
009f88 f4a9      	BRNE _0x2060047
009f89 940e c117 	CALL SUBOPT_0x25F
009f8b 940e c884 	CALL SUBOPT_0x346
009f8d 940e c84c 	CALL SUBOPT_0x340
009f8f 940e c889 	CALL SUBOPT_0x347
009f91 f511      	BRNE _0x206003D
009f92 85ae      	LDD  R26,Y+14
009f93 85bf      	LDD  R27,Y+14+1
009f94 e0e2      	LDI  R30,LOW(2)
009f95 940e c892 	CALL SUBOPT_0x348
009f97 0fea      	ADD  R30,R26
009f98 1ffb      	ADC  R31,R27
009f99 85aa      	LDD  R26,Y+10
009f9a 85bb      	LDD  R27,Y+10+1
009f9b 83a0      	STD  Z+0,R26
009f9c 83b1      	STD  Z+1,R27
009f9d c016      	RJMP _0x206003D
                 _0x2060047:
009f9e 30e3      	CPI  R30,LOW(0x3)
009f9f e0a0      	LDI  R26,HIGH(0x3)
009fa0 07fa      	CPC  R31,R26
009fa1 f489      	BRNE _0x206004B
009fa2 940e c117 	CALL SUBOPT_0x25F
009fa4 940e c884 	CALL SUBOPT_0x346
009fa6 940e c862 	CALL SUBOPT_0x343
009fa8 940e c889 	CALL SUBOPT_0x347
009faa f449      	BRNE _0x206003D
009fab 85ae      	LDD  R26,Y+14
009fac 85bf      	LDD  R27,Y+14+1
009fad e0e4      	LDI  R30,LOW(4)
009fae 940e c892 	CALL SUBOPT_0x348
009fb0 940e beca 	CALL SUBOPT_0x204
009fb2 c001      	RJMP _0x206003D
                 _0x206004B:
009fb3 e052      	LDI  R21,LOW(2)
                 _0x206003D:
009fb4 89aa      	LDD  R26,Y+18
009fb5 89bb      	LDD  R27,Y+18+1
009fb6 9614      	ADIW R26,4
009fb7 e0e1      	LDI  R30,LOW(1)
009fb8 93ec      	ST   X,R30
                 _0x206003A:
009fb9 2fe5      	MOV  R30,R21
009fba 940e cf3f 	CALL __LOADLOCR6
009fbc 9664      	ADIW R28,20
009fbd 9508      	RET
                 _remove_chain_G103:
009fbe 940e cecd 	CALL __PUTPARD2
009fc0 9724      	SBIW R28,4
009fc1 931a      	ST   -Y,R17
009fc2 940e c899 	CALL SUBOPT_0x349
009fc4 940e c824 	CALL SUBOPT_0x33B
009fc6 f018      	BRLO _0x206004D
009fc7 940e c89e 	CALL SUBOPT_0x34A
009fc9 f010      	BRLO _0x206004C
                 _0x206004D:
009fca e012      	LDI  R17,LOW(2)
009fcb c03e      	RJMP _0x206004F
                 _0x206004C:
009fcc e010      	LDI  R17,LOW(0)
                 _0x2060050:
009fcd 940e c89e 	CALL SUBOPT_0x34A
009fcf f5d0      	BRSH _0x2060052
009fd0 940e bbf6 	CALL SUBOPT_0x18C
009fd2 940e b4e0 	CALL SUBOPT_0x67
009fd4 dec0      	RCALL _get_fat
                +
009fd5 83e9     +STD Y + 1 , R30
009fd6 83fa     +STD Y + 1 + 1 , R31
009fd7 836b     +STD Y + 1 + 2 , R22
009fd8 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
009fd9 940e c8a7 	CALL SUBOPT_0x34B
009fdb 940e cf1c 	CALL __CPD10
009fdd f161      	BREQ _0x2060052
009fde 940e c07f 	CALL SUBOPT_0x248
009fe0 940e c8ac 	CALL SUBOPT_0x34C
009fe2 f411      	BRNE _0x2060054
009fe3 e012      	LDI  R17,LOW(2)
009fe4 c025      	RJMP _0x2060052
                 _0x2060054:
009fe5 940e c07f 	CALL SUBOPT_0x248
009fe7 940e b3ae 	CALL SUBOPT_0x3A
009fe9 f411      	BRNE _0x2060055
009fea e011      	LDI  R17,LOW(1)
009feb c01e      	RJMP _0x2060052
                 _0x2060055:
009fec 940e bbf6 	CALL SUBOPT_0x18C
009fee 940e b3e2 	CALL SUBOPT_0x3F
009ff0 940e b350 	CALL SUBOPT_0x2D
009ff2 df26      	RCALL _put_fat
009ff3 2f1e      	MOV  R17,R30
009ff4 3010      	CPI  R17,0
009ff5 f4a1      	BRNE _0x2060052
009ff6 85e9      	LDD  R30,Y+9
009ff7 85fa      	LDD  R31,Y+9+1
009ff8 940e c8b4 	CALL SUBOPT_0x34D
009ffa f051      	BREQ _0x2060057
009ffb 85a9      	LDD  R26,Y+9
009ffc 85ba      	LDD  R27,Y+9+1
009ffd 961e      	ADIW R26,14
009ffe 940e b60b 	CALL SUBOPT_0x92
00a000 85a9      	LDD  R26,Y+9
00a001 85ba      	LDD  R27,Y+9+1
00a002 9615      	ADIW R26,5
00a003 e0e1      	LDI  R30,LOW(1)
00a004 93ec      	ST   X,R30
                 _0x2060057:
00a005 940e c8a7 	CALL SUBOPT_0x34B
00a007 940e c8ba 	CALL SUBOPT_0x34E
00a009 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00a00a 2fe1      	MOV  R30,R17
00a00b 8118      	LDD  R17,Y+0
00a00c c26f      	RJMP _0x20E0016
                 _create_chain_G103:
00a00d 940e cecd 	CALL __PUTPARD2
00a00f 9760      	SBIW R28,16
00a010 89ac      	LDD  R26,Y+20
00a011 89bd      	LDD  R27,Y+20+1
00a012 965e      	ADIW R26,30
00a013 940e ce98 	CALL __GETD1P
00a015 940e b67e 	CALL SUBOPT_0xA2
00a017 940e b272 	CALL SUBOPT_0xC
00a019 940e cf1c 	CALL __CPD10
00a01b f4b1      	BRNE _0x2060058
00a01c 89ac      	LDD  R26,Y+20
00a01d 89bd      	LDD  R27,Y+20+1
00a01e 961a      	ADIW R26,10
00a01f 940e c831 	CALL SUBOPT_0x33D
00a021 940e b6a7 	CALL SUBOPT_0xAA
00a023 940e cf28 	CALL __CPD02
00a025 f039      	BREQ _0x206005A
00a026 940e b5bb 	CALL SUBOPT_0x87
00a028 940e b6a7 	CALL SUBOPT_0xAA
00a02a 940e cf33 	CALL __CPD21
00a02c f020      	BRLO _0x2060059
                 _0x206005A:
00a02d 940e c82c 	CALL SUBOPT_0x33C
00a02f 940e b6a2 	CALL SUBOPT_0xA9
                 _0x2060059:
00a031 c01d      	RJMP _0x206005C
                 _0x2060058:
00a032 940e c8bf 	CALL SUBOPT_0x34F
00a034 940e c8c4 	CALL SUBOPT_0x350
00a036 de5e      	RCALL _get_fat
00a037 940e b820 	CALL SUBOPT_0xE7
00a039 940e b26d 	CALL SUBOPT_0xB
00a03b 940e c824 	CALL SUBOPT_0x33B
00a03d f418      	BRSH _0x206005D
00a03e 940e c82c 	CALL SUBOPT_0x33C
00a040 c083      	RJMP _0x20E0019
                 _0x206005D:
00a041 940e b5bb 	CALL SUBOPT_0x87
00a043 940e b26d 	CALL SUBOPT_0xB
00a045 940e cf33 	CALL __CPD21
00a047 f418      	BRSH _0x206005E
00a048 940e b7b4 	CALL SUBOPT_0xD7
00a04a c079      	RJMP _0x20E0019
                 _0x206005E:
00a04b 940e b272 	CALL SUBOPT_0xC
00a04d 940e b6a2 	CALL SUBOPT_0xA9
                 _0x206005C:
00a04f 940e b5c7 	CALL SUBOPT_0x89
00a051 940e c6e1 	CALL SUBOPT_0x309
                 _0x2060060:
00a053 940e b443 	CALL SUBOPT_0x4F
00a055 940e b707 	CALL SUBOPT_0xBC
00a057 940e c6e1 	CALL SUBOPT_0x309
00a059 940e b5bb 	CALL SUBOPT_0x87
00a05b 940e b7af 	CALL SUBOPT_0xD6
00a05d 940e cf33 	CALL __CPD21
00a05f f050      	BRLO _0x2060062
00a060 940e c8c9 	CALL SUBOPT_0x351
00a062 940e c6e1 	CALL SUBOPT_0x309
00a064 940e c8ce 	CALL SUBOPT_0x352
00a066 f418      	BRSH _0x2060063
00a067 940e c8d5 	CALL SUBOPT_0x353
00a069 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00a06a 940e c8bf 	CALL SUBOPT_0x34F
00a06c 940e b45c 	CALL SUBOPT_0x52
00a06e de26      	RCALL _get_fat
00a06f 940e b82a 	CALL SUBOPT_0xE9
00a071 940e cf1c 	CALL __CPD10
00a073 f091      	BREQ _0x2060061
00a074 940e b49c 	CALL SUBOPT_0x5C
00a076 f029      	BREQ _0x2060066
00a077 940e b26d 	CALL SUBOPT_0xB
00a079 940e c8ac 	CALL SUBOPT_0x34C
00a07b f419      	BRNE _0x2060065
                 _0x2060066:
00a07c 940e b7b4 	CALL SUBOPT_0xD7
00a07e c045      	RJMP _0x20E0019
                 _0x2060065:
00a07f 940e c8ce 	CALL SUBOPT_0x352
00a081 f419      	BRNE _0x2060068
00a082 940e c8d5 	CALL SUBOPT_0x353
00a084 c03f      	RJMP _0x20E0019
                 _0x2060068:
00a085 cfcd      	RJMP _0x2060060
                 _0x2060061:
00a086 940e c8bf 	CALL SUBOPT_0x34F
00a088 940e c64f 	CALL SUBOPT_0x2F3
                +
00a08a efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00a08b efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00a08c ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00a08d e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00a08e de8a      	RCALL _put_fat
00a08f 30e0      	CPI  R30,0
00a090 f019      	BREQ _0x2060069
00a091 940e b31c 	CALL SUBOPT_0x25
00a093 c030      	RJMP _0x20E0019
                 _0x2060069:
00a094 940e b272 	CALL SUBOPT_0xC
00a096 940e cf1c 	CALL __CPD10
00a098 f071      	BREQ _0x206006A
00a099 940e c8bf 	CALL SUBOPT_0x34F
00a09b 940e b7a3 	CALL SUBOPT_0xD3
00a09d 940e cec8 	CALL __PUTPARD1
00a09f 940e bedb 	CALL SUBOPT_0x207
00a0a1 de77      	RCALL _put_fat
00a0a2 30e0      	CPI  R30,0
00a0a3 f019      	BREQ _0x206006B
00a0a4 940e b31c 	CALL SUBOPT_0x25
00a0a6 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00a0a7 940e b443 	CALL SUBOPT_0x4F
                +
00a0a9 89ac     +LDD R26 , Y + 20
00a0aa 89bd     +LDD R27 , Y + 20 + 1
00a0ab 961a     +ADIW R26 , 10
00a0ac 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00a0ae 89ec      	LDD  R30,Y+20
00a0af 89fd      	LDD  R31,Y+20+1
00a0b0 940e c8b4 	CALL SUBOPT_0x34D
00a0b2 f079      	BREQ _0x206006C
00a0b3 89ac      	LDD  R26,Y+20
00a0b4 89bd      	LDD  R27,Y+20+1
00a0b5 961e      	ADIW R26,14
00a0b6 940e ce9e 	CALL __GETD1P_INC
00a0b8 9731      	SBIW R30,1
00a0b9 4060      	SBCI R22,0
00a0ba 4070      	SBCI R23,0
00a0bb 940e cea8 	CALL __PUTDP1_DEC
00a0bd 89ac      	LDD  R26,Y+20
00a0be 89bd      	LDD  R27,Y+20+1
00a0bf 9615      	ADIW R26,5
00a0c0 e0e1      	LDI  R30,LOW(1)
00a0c1 93ec      	ST   X,R30
                 _0x206006C:
00a0c2 940e b443 	CALL SUBOPT_0x4F
                 _0x20E0019:
00a0c4 9666      	ADIW R28,22
00a0c5 9508      	RET
                 _clust2sect:
00a0c6 940e cecd 	CALL __PUTPARD2
00a0c8 940e b5bb 	CALL SUBOPT_0x87
                +
00a0ca 50e2     +SUBI R30 , LOW ( 2 )
00a0cb 40f0     +SBCI R31 , HIGH ( 2 )
00a0cc 4060     +SBCI R22 , BYTE3 ( 2 )
00a0cd 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00a0ce 940e b67e 	CALL SUBOPT_0xA2
00a0d0 81ec      	LDD  R30,Y+4
00a0d1 81fd      	LDD  R31,Y+4+1
                +
00a0d2 8da6     +LDD R26 , Z + 30
00a0d3 8db7     +LDD R27 , Z + 30 + 1
00a0d4 a180     +LDD R24 , Z + 30 + 2
00a0d5 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00a0d6 940e c8c9 	CALL SUBOPT_0x351
00a0d8 940e b718 	CALL SUBOPT_0xBF
00a0da 940e b5da 	CALL SUBOPT_0x8C
00a0dc 940e cf33 	CALL __CPD21
00a0de f018      	BRLO _0x206006D
00a0df 940e c8d5 	CALL SUBOPT_0x353
00a0e1 c38f      	RJMP _0x20E0012
                 _0x206006D:
00a0e2 81ec      	LDD  R30,Y+4
00a0e3 81fd      	LDD  R31,Y+4+1
00a0e4 940e c07c 	CALL SUBOPT_0x247
00a0e6 940e b5da 	CALL SUBOPT_0x8C
00a0e8 940e c084 	CALL SUBOPT_0x249
00a0ea 937f      	PUSH R23
00a0eb 936f      	PUSH R22
00a0ec 93ff      	PUSH R31
00a0ed 93ef      	PUSH R30
00a0ee 81ac      	LDD  R26,Y+4
00a0ef 81bd      	LDD  R27,Y+4+1
00a0f0 969a      	ADIW R26,42
00a0f1 940e ce98 	CALL __GETD1P
00a0f3 91af      	POP  R26
00a0f4 91bf      	POP  R27
00a0f5 918f      	POP  R24
00a0f6 919f      	POP  R25
00a0f7 940e cd38 	CALL __ADDD12
00a0f9 c377      	RJMP _0x20E0012
                 _dir_seek_G103:
00a0fa 940e b835 	CALL SUBOPT_0xEB
00a0fc 930a      	ST   -Y,R16
00a0fd 81ee      	LDD  R30,Y+6
00a0fe 81ff      	LDD  R31,Y+6+1
                +
00a0ff 85a8     +LDD R26 , Y + 8
00a100 85b9     +LDD R27 , Y + 8 + 1
00a101 9614     +ADIW R26 , 4
00a102 93ed     +ST X + , R30
00a103 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00a104 85a8      	LDD  R26,Y+8
00a105 85b9      	LDD  R27,Y+8+1
00a106 9616      	ADIW R26,6
00a107 940e ce98 	CALL __GETD1P
00a109 940e b83a 	CALL SUBOPT_0xEC
00a10b 940e c8ac 	CALL SUBOPT_0x34C
00a10d f029      	BREQ _0x206006F
00a10e 940e c8da 	CALL SUBOPT_0x354
00a110 940e c8df 	CALL SUBOPT_0x355
00a112 f010      	BRLO _0x206006E
                 _0x206006F:
00a113 e0e2      	LDI  R30,LOW(2)
00a114 c072      	RJMP _0x20E0017
                 _0x206006E:
00a115 940e be2e 	CALL SUBOPT_0x1EC
00a117 f429      	BRNE _0x2060072
00a118 940e c8da 	CALL SUBOPT_0x354
00a11a 81a0      	LD   R26,Z
00a11b 30a3      	CPI  R26,LOW(0x3)
00a11c f009      	BREQ _0x2060073
                 _0x2060072:
00a11d c008      	RJMP _0x2060071
                 _0x2060073:
00a11e 940e c8da 	CALL SUBOPT_0x354
00a120 96b6      	ADIW R30,38
00a121 01df      	MOVW R26,R30
00a122 940e ce98 	CALL __GETD1P
00a124 940e b6d6 	CALL SUBOPT_0xB3
                 _0x2060071:
00a126 940e be2e 	CALL SUBOPT_0x1EC
00a128 f491      	BRNE _0x2060074
00a129 940e c8e8 	CALL SUBOPT_0x356
00a12b 940e c8da 	CALL SUBOPT_0x354
00a12d 9638      	ADIW R30,8
00a12e 01df      	MOVW R26,R30
00a12f 940e bb93 	CALL SUBOPT_0x17A
00a131 f010      	BRLO _0x2060075
00a132 e0e2      	LDI  R30,LOW(2)
00a133 c053      	RJMP _0x20E0017
                 _0x2060075:
00a134 940e c8da 	CALL SUBOPT_0x354
00a136 96b6      	ADIW R30,38
00a137 01df      	MOVW R26,R30
00a138 940e ce98 	CALL __GETD1P
00a13a c031      	RJMP _0x206022C
                 _0x2060074:
00a13b 940e c8da 	CALL SUBOPT_0x354
00a13d 81e2      	LDD  R30,Z+2
00a13e e1a0      	LDI  R26,LOW(16)
00a13f 9fea      	MUL  R30,R26
00a140 0180      	MOVW R16,R0
                 _0x2060077:
00a141 81ae      	LDD  R26,Y+6
00a142 81bf      	LDD  R27,Y+6+1
00a143 17a0      	CP   R26,R16
00a144 07b1      	CPC  R27,R17
00a145 f0f8      	BRLO _0x2060079
00a146 940e c8f0 	CALL SUBOPT_0x357
00a148 940e b6a7 	CALL SUBOPT_0xAA
00a14a dd4a      	RCALL _get_fat
00a14b 940e b83a 	CALL SUBOPT_0xEC
00a14d 940e b3ae 	CALL SUBOPT_0x3A
00a14f f411      	BRNE _0x206007A
00a150 e0e1      	LDI  R30,LOW(1)
00a151 c035      	RJMP _0x20E0017
                 _0x206007A:
00a152 940e b6e0 	CALL SUBOPT_0xB5
00a154 940e c824 	CALL SUBOPT_0x33B
00a156 f028      	BRLO _0x206007C
00a157 940e c8da 	CALL SUBOPT_0x354
00a159 940e c8df 	CALL SUBOPT_0x355
00a15b f010      	BRLO _0x206007B
                 _0x206007C:
00a15c e0e2      	LDI  R30,LOW(2)
00a15d c029      	RJMP _0x20E0017
                 _0x206007B:
00a15e 81ee      	LDD  R30,Y+6
00a15f 81ff      	LDD  R31,Y+6+1
00a160 1be0      	SUB  R30,R16
00a161 0bf1      	SBC  R31,R17
00a162 83ee      	STD  Y+6,R30
00a163 83ff      	STD  Y+6+1,R31
00a164 cfdc      	RJMP _0x2060077
                 _0x2060079:
00a165 940e c8e8 	CALL SUBOPT_0x356
00a167 940e c8f0 	CALL SUBOPT_0x357
00a169 940e b6a7 	CALL SUBOPT_0xAA
00a16b df5a      	RCALL _clust2sect
                 _0x206022C:
00a16c 01df      	MOVW R26,R30
00a16d 01cb      	MOVW R24,R22
00a16e 81ee      	LDD  R30,Y+6
00a16f 81ff      	LDD  R31,Y+6+1
00a170 940e cd95 	CALL __LSRW4
00a172 940e c8f3 	CALL SUBOPT_0x358
                +
00a174 85a8     +LDD R26 , Y + 8
00a175 85b9     +LDD R27 , Y + 8 + 1
00a176 961e     +ADIW R26 , 14
00a177 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00a179 940e c8da 	CALL SUBOPT_0x354
00a17b 96f2      	ADIW R30,50
00a17c 01df      	MOVW R26,R30
00a17d 81ee      	LDD  R30,Y+6
00a17e 81ff      	LDD  R31,Y+6+1
00a17f 940e c8f8 	CALL SUBOPT_0x359
                +
00a181 85a8     +LDD R26 , Y + 8
00a182 85b9     +LDD R27 , Y + 8 + 1
00a183 9652     +ADIW R26 , 18
00a184 93ed     +ST X + , R30
00a185 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00a186 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00a187 8119      	LDD  R17,Y+1
00a188 8108      	LDD  R16,Y+0
                 _0x20E0018:
00a189 962a      	ADIW R28,10
00a18a 9508      	RET
                 _dir_next_G103:
00a18b 93aa      	ST   -Y,R26
00a18c 9724      	SBIW R28,4
00a18d 940e cf3a 	CALL __SAVELOCR4
00a18f 85a9      	LDD  R26,Y+9
00a190 85ba      	LDD  R27,Y+9+1
00a191 9614      	ADIW R26,4
00a192 940e ce94 	CALL __GETW1P
00a194 9631      	ADIW R30,1
00a195 018f      	MOVW R16,R30
00a196 2e00      	MOV  R0,R16
00a197 2a01      	OR   R0,R17
00a198 f031      	BREQ _0x206007F
00a199 85a9      	LDD  R26,Y+9
00a19a 85ba      	LDD  R27,Y+9+1
00a19b 961e      	ADIW R26,14
00a19c 940e c900 	CALL SUBOPT_0x35A
00a19e f411      	BRNE _0x206007E
                 _0x206007F:
00a19f e0e4      	LDI  R30,LOW(4)
00a1a0 c0d9      	RJMP _0x20E0015
                 _0x206007E:
00a1a1 01f8      	MOVW R30,R16
00a1a2 70ef      	ANDI R30,LOW(0xF)
00a1a3 f011      	BREQ PC+3
00a1a4 940c a267 	JMP _0x2060081
00a1a6 85a9      	LDD  R26,Y+9
00a1a7 85ba      	LDD  R27,Y+9+1
00a1a8 961e      	ADIW R26,14
00a1a9 940e b60b 	CALL SUBOPT_0x92
00a1ab 85a9      	LDD  R26,Y+9
00a1ac 85ba      	LDD  R27,Y+9+1
00a1ad 961a      	ADIW R26,10
00a1ae 940e c900 	CALL SUBOPT_0x35A
00a1b0 f451      	BRNE _0x2060082
00a1b1 940e c905 	CALL SUBOPT_0x35B
00a1b3 9638      	ADIW R30,8
00a1b4 01df      	MOVW R26,R30
00a1b5 940e bd82 	CALL SUBOPT_0x1CC
00a1b7 f010      	BRLO _0x2060083
00a1b8 e0e4      	LDI  R30,LOW(4)
00a1b9 c0c0      	RJMP _0x20E0015
                 _0x2060083:
00a1ba c0ac      	RJMP _0x2060084
                 _0x2060082:
00a1bb 01f8      	MOVW R30,R16
00a1bc 940e cd95 	CALL __LSRW4
00a1be 010f      	MOVW R0,R30
00a1bf 940e c905 	CALL SUBOPT_0x35B
00a1c1 940e c07c 	CALL SUBOPT_0x247
00a1c3 9731      	SBIW R30,1
00a1c4 21e0      	AND  R30,R0
00a1c5 21f1      	AND  R31,R1
00a1c6 9730      	SBIW R30,0
00a1c7 f011      	BREQ PC+3
00a1c8 940c a267 	JMP _0x2060085
00a1ca 940e c90a 	CALL SUBOPT_0x35C
00a1cc 940e c90d 	CALL SUBOPT_0x35D
00a1ce dcc6      	RCALL _get_fat
00a1cf 940e b6a2 	CALL SUBOPT_0xA9
00a1d1 940e b6a7 	CALL SUBOPT_0xAA
00a1d3 940e c824 	CALL SUBOPT_0x33B
00a1d5 f410      	BRSH _0x2060086
00a1d6 e0e2      	LDI  R30,LOW(2)
00a1d7 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00a1d8 940e b6a7 	CALL SUBOPT_0xAA
00a1da 940e b3ae 	CALL SUBOPT_0x3A
00a1dc f411      	BRNE _0x2060087
00a1dd e0e1      	LDI  R30,LOW(1)
00a1de c09b      	RJMP _0x20E0015
                 _0x2060087:
00a1df 940e c905 	CALL SUBOPT_0x35B
00a1e1 940e c914 	CALL SUBOPT_0x35E
00a1e3 940e b6a7 	CALL SUBOPT_0xAA
00a1e5 940e cf33 	CALL __CPD21
00a1e7 f410      	BRSH PC+3
00a1e8 940c a256 	JMP _0x2060088
00a1ea 85e8      	LDD  R30,Y+8
00a1eb 30e0      	CPI  R30,0
00a1ec f411      	BRNE _0x2060089
00a1ed e0e4      	LDI  R30,LOW(4)
00a1ee c08b      	RJMP _0x20E0015
                 _0x2060089:
00a1ef 940e c90a 	CALL SUBOPT_0x35C
00a1f1 940e c90d 	CALL SUBOPT_0x35D
00a1f3 de19      	RCALL _create_chain_G103
00a1f4 940e b6c1 	CALL SUBOPT_0xAF
00a1f6 940e cf1c 	CALL __CPD10
00a1f8 f411      	BRNE _0x206008A
00a1f9 e0e7      	LDI  R30,LOW(7)
00a1fa c07f      	RJMP _0x20E0015
                 _0x206008A:
00a1fb 940e b6a7 	CALL SUBOPT_0xAA
00a1fd 940e c8ac 	CALL SUBOPT_0x34C
00a1ff f411      	BRNE _0x206008B
00a200 e0e2      	LDI  R30,LOW(2)
00a201 c078      	RJMP _0x20E0015
                 _0x206008B:
00a202 940e b6a7 	CALL SUBOPT_0xAA
00a204 940e b3ae 	CALL SUBOPT_0x3A
00a206 f411      	BRNE _0x206008C
00a207 e0e1      	LDI  R30,LOW(1)
00a208 c071      	RJMP _0x20E0015
                 _0x206008C:
00a209 940e c90a 	CALL SUBOPT_0x35C
00a20b 940e c805 	CALL SUBOPT_0x337
00a20d 30e0      	CPI  R30,0
00a20e f011      	BREQ _0x206008D
00a20f e0e1      	LDI  R30,LOW(1)
00a210 c069      	RJMP _0x20E0015
                 _0x206008D:
00a211 940e c905 	CALL SUBOPT_0x35B
00a213 940e c809 	CALL SUBOPT_0x338
00a215 940e c905 	CALL SUBOPT_0x35B
00a217 01df      	MOVW R26,R30
00a218 96be      	ADIW R30,46
00a219 93ff      	PUSH R31
00a21a 93ef      	PUSH R30
00a21b 01fd      	MOVW R30,R26
00a21c 93fa      	ST   -Y,R31
00a21d 93ea      	ST   -Y,R30
00a21e 940e b48c 	CALL SUBOPT_0x59
00a220 dea5      	RCALL _clust2sect
00a221 91af      	POP  R26
00a222 91bf      	POP  R27
00a223 940e cea3 	CALL __PUTDP1
00a225 e030      	LDI  R19,LOW(0)
                 _0x206008F:
00a226 940e c905 	CALL SUBOPT_0x35B
00a228 81e2      	LDD  R30,Z+2
00a229 173e      	CP   R19,R30
00a22a f4c0      	BRSH _0x2060090
00a22b 940e c905 	CALL SUBOPT_0x35B
00a22d 9634      	ADIW R30,4
00a22e e0a1      	LDI  R26,LOW(1)
00a22f 83a0      	STD  Z+0,R26
00a230 940e c90a 	CALL SUBOPT_0x35C
00a232 940e c805 	CALL SUBOPT_0x337
00a234 30e0      	CPI  R30,0
00a235 f011      	BREQ _0x2060091
00a236 e0e1      	LDI  R30,LOW(1)
00a237 c042      	RJMP _0x20E0015
                 _0x2060091:
00a238 940e c905 	CALL SUBOPT_0x35B
00a23a 96be      	ADIW R30,46
00a23b 01df      	MOVW R26,R30
00a23c 940e b60b 	CALL SUBOPT_0x92
00a23e 9731      	SBIW R30,1
00a23f 4060      	SBCI R22,0
00a240 4070      	SBCI R23,0
00a241 5f3f      	SUBI R19,-1
00a242 cfe3      	RJMP _0x206008F
                 _0x2060090:
00a243 940e c905 	CALL SUBOPT_0x35B
00a245 96be      	ADIW R30,46
00a246 93ff      	PUSH R31
00a247 93ef      	PUSH R30
00a248 01df      	MOVW R26,R30
00a249 940e ce98 	CALL __GETD1P
00a24b 01df      	MOVW R26,R30
00a24c 01cb      	MOVW R24,R22
00a24d 2fe3      	MOV  R30,R19
00a24e 940e c7cd 	CALL SUBOPT_0x330
00a250 940e b718 	CALL SUBOPT_0xBF
00a252 91af      	POP  R26
00a253 91bf      	POP  R27
00a254 940e cea3 	CALL __PUTDP1
                 _0x2060088:
00a256 940e b5c7 	CALL SUBOPT_0x89
                +
00a258 85a9     +LDD R26 , Y + 9
00a259 85ba     +LDD R27 , Y + 9 + 1
00a25a 961a     +ADIW R26 , 10
00a25b 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00a25d 940e c90a 	CALL SUBOPT_0x35C
00a25f 940e b48c 	CALL SUBOPT_0x59
00a261 de64      	RCALL _clust2sect
                +
00a262 85a9     +LDD R26 , Y + 9
00a263 85ba     +LDD R27 , Y + 9 + 1
00a264 961e     +ADIW R26 , 14
00a265 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00a267 01f8      	MOVW R30,R16
                +
00a268 85a9     +LDD R26 , Y + 9
00a269 85ba     +LDD R27 , Y + 9 + 1
00a26a 9614     +ADIW R26 , 4
00a26b 93ed     +ST X + , R30
00a26c 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00a26d 940e c905 	CALL SUBOPT_0x35B
00a26f 96f2      	ADIW R30,50
00a270 01df      	MOVW R26,R30
00a271 01f8      	MOVW R30,R16
00a272 940e c8f8 	CALL SUBOPT_0x359
                +
00a274 85a9     +LDD R26 , Y + 9
00a275 85ba     +LDD R27 , Y + 9 + 1
00a276 9652     +ADIW R26 , 18
00a277 93ed     +ST X + , R30
00a278 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00a279 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00a27a 940e cf41 	CALL __LOADLOCR4
                 _0x20E0016:
00a27c 962b      	ADIW R28,11
00a27d 9508      	RET
                 _dir_find_G103:
00a27e 940e b589 	CALL SUBOPT_0x7F
00a280 940e c13c 	CALL SUBOPT_0x263
00a282 940e b84c 	CALL SUBOPT_0xF0
00a284 de75      	RCALL _dir_seek_G103
00a285 2f1e      	MOV  R17,R30
00a286 3010      	CPI  R17,0
00a287 f021      	BREQ _0x2060092
00a288 2fe1      	MOV  R30,R17
00a289 940e cf41 	CALL __LOADLOCR4
00a28b c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00a28c 940e c919 	CALL SUBOPT_0x35F
00a28e 940e c91c 	CALL SUBOPT_0x360
00a290 f4e9      	BRNE _0x2060095
00a291 81ac      	LDD  R26,Y+4
00a292 81bd      	LDD  R27,Y+4+1
00a293 9652      	ADIW R26,18
00a294 912d      	LD   R18,X+
00a295 913c      	LD   R19,X
00a296 01d9      	MOVW R26,R18
00a297 910c      	LD   R16,X
00a298 3000      	CPI  R16,0
00a299 f411      	BRNE _0x2060097
00a29a e014      	LDI  R17,LOW(4)
00a29b c012      	RJMP _0x2060095
                 _0x2060097:
00a29c 01f9      	MOVW R30,R18
00a29d 85e3      	LDD  R30,Z+11
00a29e 70e8      	ANDI R30,LOW(0x8)
00a29f f429      	BRNE _0x2060099
00a2a0 940e c927 	CALL SUBOPT_0x361
00a2a2 dad3      	RCALL _mem_cmp_G103
00a2a3 9730      	SBIW R30,0
00a2a4 f009      	BREQ _0x206009A
                 _0x2060099:
00a2a5 c001      	RJMP _0x2060098
                 _0x206009A:
00a2a6 c007      	RJMP _0x2060095
                 _0x2060098:
00a2a7 940e c13c 	CALL SUBOPT_0x263
00a2a9 e0a0      	LDI  R26,LOW(0)
00a2aa dee0      	RCALL _dir_next_G103
00a2ab 2f1e      	MOV  R17,R30
00a2ac 3010      	CPI  R17,0
00a2ad f2f1      	BREQ _0x2060094
                 _0x2060095:
00a2ae 2fe1      	MOV  R30,R17
00a2af 940e cf41 	CALL __LOADLOCR4
00a2b1 c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00a2b2 940e b589 	CALL SUBOPT_0x7F
00a2b4 940e c13c 	CALL SUBOPT_0x263
00a2b6 940e b84c 	CALL SUBOPT_0xF0
00a2b8 de41      	RCALL _dir_seek_G103
00a2b9 2f1e      	MOV  R17,R30
00a2ba 3010      	CPI  R17,0
00a2bb f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00a2bc 940e c919 	CALL SUBOPT_0x35F
00a2be 940e c91c 	CALL SUBOPT_0x360
00a2c0 f489      	BRNE _0x20600AA
00a2c1 81ec      	LDD  R30,Y+4
00a2c2 81fd      	LDD  R31,Y+4+1
00a2c3 89a2      	LDD  R26,Z+18
00a2c4 89b3      	LDD  R27,Z+19
00a2c5 910c      	LD   R16,X
00a2c6 3e05      	CPI  R16,229
00a2c7 f011      	BREQ _0x20600AD
00a2c8 3000      	CPI  R16,0
00a2c9 f409      	BRNE _0x20600AC
                 _0x20600AD:
00a2ca c007      	RJMP _0x20600AA
                 _0x20600AC:
00a2cb 940e c13c 	CALL SUBOPT_0x263
00a2cd e0a1      	LDI  R26,LOW(1)
00a2ce debc      	RCALL _dir_next_G103
00a2cf 2f1e      	MOV  R17,R30
00a2d0 3010      	CPI  R17,0
00a2d1 f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00a2d2 3010      	CPI  R17,0
00a2d3 f539      	BRNE _0x20600AF
00a2d4 940e c919 	CALL SUBOPT_0x35F
00a2d6 940e c91c 	CALL SUBOPT_0x360
00a2d8 f511      	BRNE _0x20600B0
00a2d9 81ac      	LDD  R26,Y+4
00a2da 81bd      	LDD  R27,Y+4+1
00a2db 9652      	ADIW R26,18
00a2dc 912d      	LD   R18,X+
00a2dd 913c      	LD   R19,X
00a2de 933a      	ST   -Y,R19
00a2df 932a      	ST   -Y,R18
00a2e0 e0e0      	LDI  R30,LOW(0)
00a2e1 e0f0      	LDI  R31,HIGH(0)
00a2e2 93fa      	ST   -Y,R31
00a2e3 93ea      	ST   -Y,R30
00a2e4 e2a0      	LDI  R26,LOW(32)
00a2e5 e0b0      	LDI  R27,0
00a2e6 da77      	RCALL _mem_set_G103
00a2e7 940e c927 	CALL SUBOPT_0x361
00a2e9 da58      	RCALL _mem_cpy_G103
00a2ea 81ac      	LDD  R26,Y+4
00a2eb 81bd      	LDD  R27,Y+4+1
00a2ec 9654      	ADIW R26,20
00a2ed 940e ce94 	CALL __GETW1P
00a2ef 85e3      	LDD  R30,Z+11
00a2f0 71e8      	ANDI R30,LOW(0x18)
                +
00a2f1 01d9     +MOVW R26 , R18
00a2f2 961c     +ADIW R26 , 12
00a2f3 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00a2f4 81ac      	LDD  R26,Y+4
00a2f5 81bd      	LDD  R27,Y+4+1
00a2f6 940e ce94 	CALL __GETW1P
00a2f8 9634      	ADIW R30,4
00a2f9 e0a1      	LDI  R26,LOW(1)
00a2fa 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00a2fb 2fe1      	MOV  R30,R17
00a2fc 940e cf41 	CALL __LOADLOCR4
00a2fe c172      	RJMP _0x20E0012
                 _create_name_G103:
00a2ff 93ba      	ST   -Y,R27
00a300 93aa      	ST   -Y,R26
00a301 9725      	SBIW R28,5
00a302 940e cf38 	CALL __SAVELOCR6
00a304 85ad      	LDD  R26,Y+13
00a305 85be      	LDD  R27,Y+13+1
00a306 9654      	ADIW R26,20
00a307 914d      	LD   R20,X+
00a308 915c      	LD   R21,X
00a309 935a      	ST   -Y,R21
00a30a 934a      	ST   -Y,R20
00a30b e2e0      	LDI  R30,LOW(32)
00a30c e0f0      	LDI  R31,HIGH(32)
00a30d 93fa      	ST   -Y,R31
00a30e 93ea      	ST   -Y,R30
00a30f 940e b419 	CALL SUBOPT_0x48
00a311 da4c      	RCALL _mem_set_G103
00a312 e0e0      	LDI  R30,LOW(0)
00a313 87e8      	STD  Y+8,R30
00a314 87e9      	STD  Y+8+1,R30
00a315 2f1e      	MOV  R17,R30
00a316 2f2e      	MOV  R18,R30
00a317 e0e8      	LDI  R30,LOW(8)
00a318 87ea      	STD  Y+10,R30
00a319 85ab      	LDD  R26,Y+11
00a31a 85bc      	LDD  R27,Y+11+1
00a31b 940e c7c8 	CALL SUBOPT_0x32F
00a31d 85e8      	LDD  R30,Y+8
00a31e 85f9      	LDD  R31,Y+8+1
00a31f 940e c6cb 	CALL SUBOPT_0x305
00a321 91ac      	LD   R26,X
00a322 32ae      	CPI  R26,LOW(0x2E)
00a323 f549      	BRNE _0x20600B3
                 _0x20600B5:
00a324 940e b58e 	CALL SUBOPT_0x80
00a326 940e c6cb 	CALL SUBOPT_0x305
00a328 910c      	LD   R16,X
00a329 320e      	CPI  R16,46
00a32a f421      	BRNE _0x20600B8
00a32b 85a8      	LDD  R26,Y+8
00a32c 85b9      	LDD  R27,Y+8+1
00a32d 9713      	SBIW R26,3
00a32e f00c      	BRLT _0x20600B7
                 _0x20600B8:
00a32f c003      	RJMP _0x20600B6
                 _0x20600B7:
00a330 940e c931 	CALL SUBOPT_0x362
00a332 cff1      	RJMP _0x20600B5
                 _0x20600B6:
00a333 320f      	CPI  R16,47
00a334 f021      	BREQ _0x20600BB
00a335 350c      	CPI  R16,92
00a336 f011      	BREQ _0x20600BB
00a337 3201      	CPI  R16,33
00a338 f408      	BRSH _0x20600BC
                 _0x20600BB:
00a339 c002      	RJMP _0x20600BA
                 _0x20600BC:
00a33a e0e6      	LDI  R30,LOW(6)
00a33b c07d      	RJMP _0x20E0013
                 _0x20600BA:
00a33c 85e8      	LDD  R30,Y+8
00a33d 85f9      	LDD  R31,Y+8+1
00a33e 940e bc5b 	CALL SUBOPT_0x19F
00a340 85ab      	LDD  R26,Y+11
00a341 85bc      	LDD  R27,Y+11+1
00a342 93ed      	ST   X+,R30
00a343 93fc      	ST   X,R31
00a344 3201      	CPI  R16,33
00a345 f410      	BRSH _0x20600BD
00a346 e2e4      	LDI  R30,LOW(36)
00a347 c001      	RJMP _0x20600BE
                 _0x20600BD:
00a348 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00a349 01da     +MOVW R26 , R20
00a34a 961b     +ADIW R26 , 11
00a34b 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00a34c c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00a34d 940e b58e 	CALL SUBOPT_0x80
00a34f 940e c6cb 	CALL SUBOPT_0x305
00a351 910c      	LD   R16,X
00a352 3201      	CPI  R16,33
00a353 f020      	BRLO _0x20600C4
00a354 320f      	CPI  R16,47
00a355 f011      	BREQ _0x20600C4
00a356 350c      	CPI  R16,92
00a357 f409      	BRNE _0x20600C3
                 _0x20600C4:
00a358 c035      	RJMP _0x20600C2
                 _0x20600C3:
00a359 320e      	CPI  R16,46
00a35a f019      	BREQ _0x20600C7
00a35b 85ea      	LDD  R30,Y+10
00a35c 172e      	CP   R18,R30
00a35d f068      	BRLO _0x20600C6
                 _0x20600C7:
00a35e 85aa      	LDD  R26,Y+10
00a35f 30a8      	CPI  R26,LOW(0x8)
00a360 f411      	BRNE _0x20600CA
00a361 320e      	CPI  R16,46
00a362 f011      	BREQ _0x20600C9
                 _0x20600CA:
00a363 e0e6      	LDI  R30,LOW(6)
00a364 c054      	RJMP _0x20E0013
                 _0x20600C9:
00a365 e028      	LDI  R18,LOW(8)
00a366 e0eb      	LDI  R30,LOW(11)
00a367 87ea      	STD  Y+10,R30
00a368 0f11      	LSL  R17
00a369 0f11      	LSL  R17
00a36a c022      	RJMP _0x20600C0
                 _0x20600C6:
00a36b 3800      	CPI  R16,128
00a36c f018      	BRLO _0x20600CC
00a36d 6013      	ORI  R17,LOW(3)
00a36e e0e6      	LDI  R30,LOW(6)
00a36f c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00a370 e7ee     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00a371 e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00a372 e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00a373 e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00a374 940e cec8 	CALL __PUTPARD1
00a376 2fa0      	MOV  R26,R16
00a377 27bb      	CLR  R27
00a378 da23      	RCALL _chk_chrf_G103
00a379 9730      	SBIW R30,0
00a37a f011      	BREQ _0x20600D2
00a37b e0e6      	LDI  R30,LOW(6)
00a37c c03c      	RJMP _0x20E0013
                 _0x20600D2:
00a37d 3401      	CPI  R16,65
00a37e f010      	BRLO _0x20600D4
00a37f 350b      	CPI  R16,91
00a380 f008      	BRLO _0x20600D5
                 _0x20600D4:
00a381 c002      	RJMP _0x20600D3
                 _0x20600D5:
00a382 6012      	ORI  R17,LOW(2)
00a383 c007      	RJMP _0x20600D6
                 _0x20600D3:
00a384 3601      	CPI  R16,97
00a385 f010      	BRLO _0x20600D8
00a386 370b      	CPI  R16,123
00a387 f008      	BRLO _0x20600D9
                 _0x20600D8:
00a388 c002      	RJMP _0x20600D7
                 _0x20600D9:
00a389 6011      	ORI  R17,LOW(1)
00a38a 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00a38b 940e c931 	CALL SUBOPT_0x362
                 _0x20600C0:
00a38d cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00a38e 85e8      	LDD  R30,Y+8
00a38f 85f9      	LDD  R31,Y+8+1
00a390 940e bc5b 	CALL SUBOPT_0x19F
00a392 85ab      	LDD  R26,Y+11
00a393 85bc      	LDD  R27,Y+11+1
00a394 93ed      	ST   X+,R30
00a395 93fc      	ST   X,R31
00a396 3201      	CPI  R16,33
00a397 f410      	BRSH _0x20600DA
00a398 e0e4      	LDI  R30,LOW(4)
00a399 c001      	RJMP _0x20600DB
                 _0x20600DA:
00a39a e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00a39b 2f0e      	MOV  R16,R30
00a39c 3020      	CPI  R18,0
00a39d f411      	BRNE _0x20600DD
00a39e e0e6      	LDI  R30,LOW(6)
00a39f c019      	RJMP _0x20E0013
                 _0x20600DD:
00a3a0 01da      	MOVW R26,R20
00a3a1 91ac      	LD   R26,X
00a3a2 3ea5      	CPI  R26,LOW(0xE5)
00a3a3 f419      	BRNE _0x20600DE
00a3a4 01da      	MOVW R26,R20
00a3a5 e0e5      	LDI  R30,LOW(5)
00a3a6 93ec      	ST   X,R30
                 _0x20600DE:
00a3a7 85aa      	LDD  R26,Y+10
00a3a8 30a8      	CPI  R26,LOW(0x8)
00a3a9 f411      	BRNE _0x20600DF
00a3aa 0f11      	LSL  R17
00a3ab 0f11      	LSL  R17
                 _0x20600DF:
00a3ac 2fe1      	MOV  R30,R17
00a3ad 70e3      	ANDI R30,LOW(0x3)
00a3ae 30e1      	CPI  R30,LOW(0x1)
00a3af f409      	BRNE _0x20600E0
00a3b0 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00a3b1 2fe1      	MOV  R30,R17
00a3b2 70ec      	ANDI R30,LOW(0xC)
00a3b3 30e4      	CPI  R30,LOW(0x4)
00a3b4 f409      	BRNE _0x20600E1
00a3b5 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00a3b6 01fa      	MOVW R30,R20
                +
00a3b7 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00a3b8 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00a3b9 940e cf3f 	CALL __LOADLOCR6
00a3bb 962f      	ADIW R28,15
00a3bc 9508      	RET
                 _follow_path_G103:
00a3bd 940e b589 	CALL SUBOPT_0x7F
                 _0x20600F7:
00a3bf e0e1      	LDI  R30,LOW(1)
00a3c0 30e0      	CPI  R30,0
00a3c1 f029      	BREQ _0x20600FA
00a3c2 81ac      	LDD  R26,Y+4
00a3c3 81bd      	LDD  R27,Y+4+1
00a3c4 91ac      	LD   R26,X
00a3c5 32a0      	CPI  R26,LOW(0x20)
00a3c6 f009      	BREQ _0x20600FB
                 _0x20600FA:
00a3c7 c006      	RJMP _0x20600F9
                 _0x20600FB:
00a3c8 81ec      	LDD  R30,Y+4
00a3c9 81fd      	LDD  R31,Y+4+1
00a3ca 9631      	ADIW R30,1
00a3cb 83ec      	STD  Y+4,R30
00a3cc 83fd      	STD  Y+4+1,R31
00a3cd cff1      	RJMP _0x20600F7
                 _0x20600F9:
00a3ce 81ac      	LDD  R26,Y+4
00a3cf 81bd      	LDD  R27,Y+4+1
00a3d0 91ac      	LD   R26,X
00a3d1 32af      	CPI  R26,LOW(0x2F)
00a3d2 f029      	BREQ _0x20600FD
00a3d3 81ac      	LDD  R26,Y+4
00a3d4 81bd      	LDD  R27,Y+4+1
00a3d5 91ac      	LD   R26,X
00a3d6 35ac      	CPI  R26,LOW(0x5C)
00a3d7 f459      	BRNE _0x20600FC
                 _0x20600FD:
00a3d8 81ec      	LDD  R30,Y+4
00a3d9 81fd      	LDD  R31,Y+4+1
00a3da 9631      	ADIW R30,1
00a3db 83ec      	STD  Y+4,R30
00a3dc 83fd      	STD  Y+4+1,R31
00a3dd 81ae      	LDD  R26,Y+6
00a3de 81bf      	LDD  R27,Y+6+1
00a3df 9616      	ADIW R26,6
00a3e0 940e b5e4 	CALL SUBOPT_0x8E
00a3e2 c00a      	RJMP _0x20600FF
                 _0x20600FC:
00a3e3 81ae      	LDD  R26,Y+6
00a3e4 81bf      	LDD  R27,Y+6+1
00a3e5 940e ce94 	CALL __GETW1P
00a3e7 9676      	ADIW R30,22
00a3e8 01df      	MOVW R26,R30
00a3e9 940e ce98 	CALL __GETD1P
00a3eb 940e c93c 	CALL SUBOPT_0x364
                 _0x20600FF:
00a3ed 81ac      	LDD  R26,Y+4
00a3ee 81bd      	LDD  R27,Y+4+1
00a3ef 91ac      	LD   R26,X
00a3f0 27bb      	CLR  R27
00a3f1 9790      	SBIW R26,32
00a3f2 f460      	BRSH _0x2060100
00a3f3 940e ba9b 	CALL SUBOPT_0x154
00a3f5 940e b84c 	CALL SUBOPT_0xF0
00a3f7 dd02      	RCALL _dir_seek_G103
00a3f8 2f1e      	MOV  R17,R30
00a3f9 81ae      	LDD  R26,Y+6
00a3fa 81bf      	LDD  R27,Y+6+1
00a3fb 9652      	ADIW R26,18
00a3fc 940e b8f4 	CALL SUBOPT_0x10D
00a3fe c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00a3ff 940e ba9b 	CALL SUBOPT_0x154
00a401 01de      	MOVW R26,R28
00a402 9616      	ADIW R26,6
00a403 defb      	RCALL _create_name_G103
00a404 2f1e      	MOV  R17,R30
00a405 3010      	CPI  R17,0
00a406 f5a9      	BRNE _0x2060104
00a407 81ae      	LDD  R26,Y+6
00a408 81bf      	LDD  R27,Y+6+1
00a409 de74      	RCALL _dir_find_G103
00a40a 2f1e      	MOV  R17,R30
00a40b 81ae      	LDD  R26,Y+6
00a40c 81bf      	LDD  R27,Y+6+1
00a40d 9654      	ADIW R26,20
00a40e 940e ce94 	CALL __GETW1P
00a410 85e3      	LDD  R30,Z+11
00a411 70e4      	ANDI R30,LOW(0x4)
00a412 2f0e      	MOV  R16,R30
00a413 3010      	CPI  R17,0
00a414 f039      	BREQ _0x2060106
00a415 3014      	CPI  R17,4
00a416 f411      	BRNE _0x2060108
00a417 3000      	CPI  R16,0
00a418 f009      	BREQ _0x2060109
                 _0x2060108:
00a419 c001      	RJMP _0x2060107
                 _0x2060109:
00a41a e015      	LDI  R17,LOW(5)
                 _0x2060107:
00a41b c020      	RJMP _0x2060104
                 _0x2060106:
00a41c 3000      	CPI  R16,0
00a41d f4f1      	BRNE _0x2060104
00a41e 81ae      	LDD  R26,Y+6
00a41f 81bf      	LDD  R27,Y+6+1
00a420 9652      	ADIW R26,18
00a421 912d      	LD   R18,X+
00a422 913c      	LD   R19,X
00a423 01f9      	MOVW R30,R18
00a424 85e3      	LDD  R30,Z+11
00a425 71e0      	ANDI R30,LOW(0x10)
00a426 f411      	BRNE _0x206010B
00a427 e015      	LDI  R17,LOW(5)
00a428 c013      	RJMP _0x2060104
                 _0x206010B:
00a429 940e c942 	CALL SUBOPT_0x365
00a42b 940e cdb2 	CALL __LSLD16
00a42d 937f      	PUSH R23
00a42e 936f      	PUSH R22
00a42f 93ff      	PUSH R31
00a430 93ef      	PUSH R30
00a431 940e c946 	CALL SUBOPT_0x366
00a433 91af      	POP  R26
00a434 91bf      	POP  R27
00a435 918f      	POP  R24
00a436 919f      	POP  R25
00a437 940e c94b 	CALL SUBOPT_0x367
00a439 940e c93c 	CALL SUBOPT_0x364
00a43b cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00a43c 2fe1      	MOV  R30,R17
00a43d 940e cf41 	CALL __LOADLOCR4
00a43f 9628      	ADIW R28,8
00a440 9508      	RET
                 _check_fs_G103:
00a441 940e cecd 	CALL __PUTPARD2
00a443 81ec      	LDD  R30,Y+4
00a444 81fd      	LDD  R31,Y+4+1
00a445 81a1      	LDD  R26,Z+1
00a446 93aa      	ST   -Y,R26
00a447 81ed      	LDD  R30,Y+5
00a448 81fe      	LDD  R31,Y+5+1
00a449 96f2      	ADIW R30,50
00a44a 93fa      	ST   -Y,R31
00a44b 93ea      	ST   -Y,R30
                +
00a44c 81eb     +LDD R30 , Y + 3
00a44d 81fc     +LDD R31 , Y + 3 + 1
00a44e 816d     +LDD R22 , Y + 3 + 2
00a44f 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00a450 940e c950 	CALL SUBOPT_0x368
00a452 f011      	BREQ _0x206010C
00a453 e0e3      	LDI  R30,LOW(3)
00a454 c01c      	RJMP _0x20E0012
                 _0x206010C:
00a455 81ec      	LDD  R30,Y+4
00a456 81fd      	LDD  R31,Y+4+1
00a457 940e c957 	CALL SUBOPT_0x369
00a459 f011      	BREQ _0x206010D
00a45a e0e2      	LDI  R30,LOW(2)
00a45b c015      	RJMP _0x20E0012
                 _0x206010D:
00a45c 81ac      	LDD  R26,Y+4
00a45d 81bd      	LDD  R27,Y+4+1
00a45e 59a8      	SUBI R26,LOW(-104)
00a45f 4fbf      	SBCI R27,HIGH(-104)
00a460 940e c961 	CALL SUBOPT_0x36A
00a462 f411      	BRNE _0x206010E
00a463 e0e0      	LDI  R30,LOW(0)
00a464 c00c      	RJMP _0x20E0012
                 _0x206010E:
00a465 81ec      	LDD  R30,Y+4
00a466 81fd      	LDD  R31,Y+4+1
00a467 96f2      	ADIW R30,50
00a468 5aee      	SUBI R30,LOW(-82)
00a469 4fff      	SBCI R31,HIGH(-82)
00a46a 01df      	MOVW R26,R30
00a46b 940e c961 	CALL SUBOPT_0x36A
00a46d f411      	BRNE _0x206010F
00a46e e0e0      	LDI  R30,LOW(0)
00a46f c001      	RJMP _0x20E0012
                 _0x206010F:
00a470 e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00a471 9626      	ADIW R28,6
00a472 9508      	RET
                 _chk_mounted:
00a473 93aa      	ST   -Y,R26
00a474 9764      	SBIW R28,20
00a475 940e cf38 	CALL __SAVELOCR6
00a477 8dad      	LDD  R26,Y+29
00a478 8dbe      	LDD  R27,Y+29+1
00a479 940e ce94 	CALL __GETW1P
00a47b 87e8      	STD  Y+8,R30
00a47c 87f9      	STD  Y+8+1,R31
00a47d 85a8      	LDD  R26,Y+8
00a47e 85b9      	LDD  R27,Y+8+1
00a47f 91ec      	LD   R30,X
00a480 53e0      	SUBI R30,LOW(48)
00a481 2f0e      	MOV  R16,R30
00a482 300a      	CPI  R16,10
00a483 f420      	BRSH _0x2060111
00a484 9611      	ADIW R26,1
00a485 91ac      	LD   R26,X
00a486 33aa      	CPI  R26,LOW(0x3A)
00a487 f009      	BREQ _0x2060112
                 _0x2060111:
00a488 c00a      	RJMP _0x2060110
                 _0x2060112:
00a489 85e8      	LDD  R30,Y+8
00a48a 85f9      	LDD  R31,Y+8+1
00a48b 9632      	ADIW R30,2
00a48c 940e bbee 	CALL SUBOPT_0x18A
00a48e 8dad      	LDD  R26,Y+29
00a48f 8dbe      	LDD  R27,Y+29+1
00a490 93ed      	ST   X+,R30
00a491 93fc      	ST   X,R31
00a492 c002      	RJMP _0x2060113
                 _0x2060110:
00a493 9100 1a96 	LDS  R16,_Drive_G103
                 _0x2060113:
00a495 3001      	CPI  R16,1
00a496 f010      	BRLO _0x2060114
00a497 e0eb      	LDI  R30,LOW(11)
00a498 c1c5      	RJMP _0x20E0010
                 _0x2060114:
00a499 2fe0      	MOV  R30,R16
00a49a 940e c96f 	CALL SUBOPT_0x36B
00a49c 940e c777 	CALL SUBOPT_0x321
00a49e 83ee      	STD  Y+6,R30
00a49f 83ff      	STD  Y+6+1,R31
00a4a0 8dab      	LDD  R26,Y+27
00a4a1 8dbc      	LDD  R27,Y+27+1
00a4a2 93ed      	ST   X+,R30
00a4a3 93fc      	ST   X,R31
00a4a4 9730      	SBIW R30,0
00a4a5 f411      	BRNE _0x2060115
00a4a6 e0ec      	LDI  R30,LOW(12)
00a4a7 c1b6      	RJMP _0x20E0010
                 _0x2060115:
00a4a8 81ae      	LDD  R26,Y+6
00a4a9 81bf      	LDD  R27,Y+6+1
00a4aa 91ec      	LD   R30,X
00a4ab 30e0      	CPI  R30,0
00a4ac f089      	BREQ _0x2060116
00a4ad 81ee      	LDD  R30,Y+6
00a4ae 81ff      	LDD  R31,Y+6+1
00a4af 81a1      	LDD  R26,Z+1
00a4b0 940e 9a0f 	CALL _disk_status
00a4b2 2f5e      	MOV  R21,R30
00a4b3 fd50      	SBRC R21,0
00a4b4 c009      	RJMP _0x2060117
00a4b5 8dea      	LDD  R30,Y+26
00a4b6 30e0      	CPI  R30,0
00a4b7 f011      	BREQ _0x2060119
00a4b8 fd52      	SBRC R21,2
00a4b9 c001      	RJMP _0x206011A
                 _0x2060119:
00a4ba c002      	RJMP _0x2060118
                 _0x206011A:
00a4bb e0ea      	LDI  R30,LOW(10)
00a4bc c1a1      	RJMP _0x20E0010
                 _0x2060118:
00a4bd c19f      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00a4be 81ae      	LDD  R26,Y+6
00a4bf 81bf      	LDD  R27,Y+6+1
00a4c0 e0e0      	LDI  R30,LOW(0)
00a4c1 93ec      	ST   X,R30
00a4c2 2fe0      	MOV  R30,R16
                +
00a4c3 81ae     +LDD R26 , Y + 6
00a4c4 81bf     +LDD R27 , Y + 6 + 1
00a4c5 9611     +ADIW R26 , 1
00a4c6 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00a4c7 81ee      	LDD  R30,Y+6
00a4c8 81ff      	LDD  R31,Y+6+1
00a4c9 81a1      	LDD  R26,Z+1
00a4ca 940e 993e 	CALL _disk_initialize
00a4cc 2f5e      	MOV  R21,R30
00a4cd ff50      	SBRS R21,0
00a4ce c002      	RJMP _0x206011B
00a4cf e0e3      	LDI  R30,LOW(3)
00a4d0 c18d      	RJMP _0x20E0010
                 _0x206011B:
00a4d1 8dea      	LDD  R30,Y+26
00a4d2 30e0      	CPI  R30,0
00a4d3 f011      	BREQ _0x206011D
00a4d4 fd52      	SBRC R21,2
00a4d5 c001      	RJMP _0x206011E
                 _0x206011D:
00a4d6 c002      	RJMP _0x206011C
                 _0x206011E:
00a4d7 e0ea      	LDI  R30,LOW(10)
00a4d8 c185      	RJMP _0x20E0010
                 _0x206011C:
00a4d9 940e ba9b 	CALL SUBOPT_0x154
00a4db 940e c8d5 	CALL SUBOPT_0x353
                +
00a4dd 8fe8     +STD Y + 24 , R30
00a4de 8ff9     +STD Y + 24 + 1 , R31
00a4df 8f6a     +STD Y + 24 + 2 , R22
00a4e0 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00a4e1 01df      	MOVW R26,R30
00a4e2 01cb      	MOVW R24,R22
00a4e3 df5d      	RCALL _check_fs_G103
00a4e4 2f1e      	MOV  R17,R30
00a4e5 3011      	CPI  R17,1
00a4e6 f4c1      	BRNE _0x206011F
00a4e7 81ee      	LDD  R30,Y+6
00a4e8 81ff      	LDD  R31,Y+6+1
00a4e9 96f2      	ADIW R30,50
00a4ea 54e2      	SUBI R30,LOW(-446)
00a4eb 4ffe      	SBCI R31,HIGH(-446)
00a4ec 019f      	MOVW R18,R30
00a4ed 01f9      	MOVW R30,R18
00a4ee 81e4      	LDD  R30,Z+4
00a4ef 30e0      	CPI  R30,0
00a4f0 f071      	BREQ _0x2060120
00a4f1 01d9      	MOVW R26,R18
00a4f2 9618      	ADIW R26,8
00a4f3 940e ce98 	CALL __GETD1P
00a4f5 940e b71d 	CALL SUBOPT_0xC0
00a4f7 940e ba9b 	CALL SUBOPT_0x154
                +
00a4f9 8da8     +LDD R26 , Y + 24
00a4fa 8db9     +LDD R27 , Y + 24 + 1
00a4fb 8d8a     +LDD R24 , Y + 24 + 2
00a4fc 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00a4fd df43      	RCALL _check_fs_G103
00a4fe 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00a4ff 3013      	CPI  R17,3
00a500 f411      	BRNE _0x2060121
00a501 e0e1      	LDI  R30,LOW(1)
00a502 c15b      	RJMP _0x20E0010
                 _0x2060121:
00a503 3010      	CPI  R17,0
00a504 f449      	BRNE _0x2060123
00a505 81ae      	LDD  R26,Y+6
00a506 81bf      	LDD  R27,Y+6+1
00a507 96dd      	ADIW R26,61
00a508 940e ce94 	CALL __GETW1P
00a50a 30e0      	CPI  R30,LOW(0x200)
00a50b e0a2      	LDI  R26,HIGH(0x200)
00a50c 07fa      	CPC  R31,R26
00a50d f011      	BREQ _0x2060122
                 _0x2060123:
00a50e e0ed      	LDI  R30,LOW(13)
00a50f c14e      	RJMP _0x20E0010
                 _0x2060122:
00a510 81ae      	LDD  R26,Y+6
00a511 81bf      	LDD  R27,Y+6+1
00a512 5ba8      	SUBI R26,LOW(-72)
00a513 4fbf      	SBCI R27,HIGH(-72)
00a514 940e b2f1 	CALL SUBOPT_0x1E
00a516 940e c975 	CALL SUBOPT_0x36C
00a518 940e b7a3 	CALL SUBOPT_0xD3
00a51a 940e cf1c 	CALL __CPD10
00a51c f441      	BRNE _0x2060125
00a51d 81ae      	LDD  R26,Y+6
00a51e 81bf      	LDD  R27,Y+6+1
00a51f 5aaa      	SUBI R26,LOW(-86)
00a520 4fbf      	SBCI R27,HIGH(-86)
00a521 940e ce98 	CALL __GETD1P
00a523 940e c975 	CALL SUBOPT_0x36C
                 _0x2060125:
00a525 940e b7a3 	CALL SUBOPT_0xD3
                +
00a527 81ae     +LDD R26 , Y + 6
00a528 81bf     +LDD R27 , Y + 6 + 1
00a529 965a     +ADIW R26 , 26
00a52a 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00a52c 81ee      	LDD  R30,Y+6
00a52d 81ff      	LDD  R31,Y+6+1
00a52e 5bee      	SUBI R30,LOW(-66)
00a52f 4fff      	SBCI R31,HIGH(-66)
00a530 81e0      	LD   R30,Z
                +
00a531 81ae     +LDD R26 , Y + 6
00a532 81bf     +LDD R27 , Y + 6 + 1
00a533 9613     +ADIW R26 , 3
00a534 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00a535 81ee      	LDD  R30,Y+6
00a536 81ff      	LDD  R31,Y+6+1
00a537 81e3      	LDD  R30,Z+3
00a538 e0f0      	LDI  R31,0
00a539 940e c8c4 	CALL SUBOPT_0x350
00a53b 940e c084 	CALL SUBOPT_0x249
00a53d 940e c975 	CALL SUBOPT_0x36C
00a53f 940e c97a 	CALL SUBOPT_0x36D
00a541 940e b799 	CALL SUBOPT_0xD1
00a543 940e c8f3 	CALL SUBOPT_0x358
                +
00a545 81ae     +LDD R26 , Y + 6
00a546 81bf     +LDD R27 , Y + 6 + 1
00a547 9692     +ADIW R26 , 34
00a548 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00a54a 81ee      	LDD  R30,Y+6
00a54b 81ff      	LDD  R31,Y+6+1
00a54c ade7      	LDD  R30,Z+63
                +
00a54d 81ae     +LDD R26 , Y + 6
00a54e 81bf     +LDD R27 , Y + 6 + 1
00a54f 9612     +ADIW R26 , 2
00a550 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00a551 81ae      	LDD  R26,Y+6
00a552 81bf      	LDD  R27,Y+6+1
00a553 5bad      	SUBI R26,LOW(-67)
00a554 4fbf      	SBCI R27,HIGH(-67)
00a555 940e ce94 	CALL __GETW1P
                +
00a557 81ae     +LDD R26 , Y + 6
00a558 81bf     +LDD R27 , Y + 6 + 1
00a559 9618     +ADIW R26 , 8
00a55a 93ed     +ST X + , R30
00a55b 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00a55c 81ae      	LDD  R26,Y+6
00a55d 81bf      	LDD  R27,Y+6+1
00a55e 5bab      	SUBI R26,LOW(-69)
00a55f 4fbf      	SBCI R27,HIGH(-69)
00a560 940e b2f1 	CALL SUBOPT_0x1E
00a562 940e bed6 	CALL SUBOPT_0x206
00a564 940e b4b3 	CALL SUBOPT_0x60
00a566 940e cf1c 	CALL __CPD10
00a568 f441      	BRNE _0x2060126
00a569 81ae      	LDD  R26,Y+6
00a56a 81bf      	LDD  R27,Y+6+1
00a56b 5aae      	SUBI R26,LOW(-82)
00a56c 4fbf      	SBCI R27,HIGH(-82)
00a56d 940e ce98 	CALL __GETD1P
00a56f 940e bed6 	CALL SUBOPT_0x206
                 _0x2060126:
00a571 940e c97a 	CALL SUBOPT_0x36D
00a573 940e bedb 	CALL SUBOPT_0x207
00a575 2766      	CLR  R22
00a576 2777      	CLR  R23
00a577 940e b718 	CALL SUBOPT_0xBF
00a579 940e c8c4 	CALL SUBOPT_0x350
00a57b 940e cd42 	CALL __SUBD12
00a57d 937f      	PUSH R23
00a57e 936f      	PUSH R22
00a57f 93ff      	PUSH R31
00a580 93ef      	PUSH R30
00a581 940e c981 	CALL SUBOPT_0x36E
00a583 91af      	POP  R26
00a584 91bf      	POP  R27
00a585 918f      	POP  R24
00a586 919f      	POP  R25
00a587 2766      	CLR  R22
00a588 2777      	CLR  R23
00a589 940e cd47 	CALL __SUBD21
00a58b 81ee      	LDD  R30,Y+6
00a58c 81ff      	LDD  R31,Y+6+1
00a58d 940e c07c 	CALL SUBOPT_0x247
00a58f 940e cdbd 	CALL __CWD1
00a591 940e ce34 	CALL __DIVD21U
                +
00a593 5fee     +SUBI R30 , LOW ( - 2 )
00a594 4fff     +SBCI R31 , HIGH ( - 2 )
00a595 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00a596 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00a597 940e bec5 	CALL SUBOPT_0x203
                +
00a599 81ae     +LDD R26 , Y + 6
00a59a 81bf     +LDD R27 , Y + 6 + 1
00a59b 965e     +ADIW R26 , 30
00a59c 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00a59e e011      	LDI  R17,LOW(1)
00a59f 940e b45c 	CALL SUBOPT_0x52
                +
00a5a1 3fa7     +CPI R26 , LOW ( 0xFF7 )
00a5a2 e0ef     +LDI R30 , HIGH ( 0xFF7 )
00a5a3 07be     +CPC R27 , R30
00a5a4 e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00a5a5 078e     +CPC R24 , R30
00a5a6 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00a5a7 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00a5a8 f008      	BRLO _0x2060127
00a5a9 e012      	LDI  R17,LOW(2)
                 _0x2060127:
00a5aa 940e b45c 	CALL SUBOPT_0x52
                +
00a5ac 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00a5ad efef     +LDI R30 , HIGH ( 0xFFF7 )
00a5ae 07be     +CPC R27 , R30
00a5af e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00a5b0 078e     +CPC R24 , R30
00a5b1 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00a5b2 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00a5b3 f008      	BRLO _0x2060128
00a5b4 e013      	LDI  R17,LOW(3)
                 _0x2060128:
00a5b5 3013      	CPI  R17,3
00a5b6 f439      	BRNE _0x2060129
00a5b7 81ae      	LDD  R26,Y+6
00a5b8 81bf      	LDD  R27,Y+6+1
00a5b9 5aa2      	SUBI R26,LOW(-94)
00a5ba 4fbf      	SBCI R27,HIGH(-94)
00a5bb 940e ce98 	CALL __GETD1P
00a5bd c002      	RJMP _0x206022D
                 _0x2060129:
00a5be 940e c989 	CALL SUBOPT_0x36F
                 _0x206022D:
                +
00a5c0 81ae     +LDD R26 , Y + 6
00a5c1 81bf     +LDD R27 , Y + 6 + 1
00a5c2 9696     +ADIW R26 , 38
00a5c3 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00a5c5 940e c989 	CALL SUBOPT_0x36F
00a5c7 937f      	PUSH R23
00a5c8 936f      	PUSH R22
00a5c9 93ff      	PUSH R31
00a5ca 93ef      	PUSH R30
00a5cb 940e c981 	CALL SUBOPT_0x36E
00a5cd 91af      	POP  R26
00a5ce 91bf      	POP  R27
00a5cf 918f      	POP  R24
00a5d0 919f      	POP  R25
00a5d1 940e c8f3 	CALL SUBOPT_0x358
                +
00a5d3 81ae     +LDD R26 , Y + 6
00a5d4 81bf     +LDD R27 , Y + 6 + 1
00a5d5 969a     +ADIW R26 , 42
00a5d6 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00a5d8 81ae      	LDD  R26,Y+6
00a5d9 81bf      	LDD  R27,Y+6+1
00a5da 961e      	ADIW R26,14
00a5db 940e b31c 	CALL SUBOPT_0x25
00a5dd 940e cea3 	CALL __PUTDP1
00a5df 81ae      	LDD  R26,Y+6
00a5e0 81bf      	LDD  R27,Y+6+1
00a5e1 9614      	ADIW R26,4
00a5e2 e0e0      	LDI  R30,LOW(0)
00a5e3 93ec      	ST   X,R30
00a5e4 3013      	CPI  R17,3
00a5e5 f011      	BREQ PC+3
00a5e6 940c a649 	JMP _0x206012B
00a5e8 81ae      	LDD  R26,Y+6
00a5e9 81bf      	LDD  R27,Y+6+1
00a5ea 9615      	ADIW R26,5
00a5eb 93ec      	ST   X,R30
00a5ec 81ae      	LDD  R26,Y+6
00a5ed 81bf      	LDD  R27,Y+6+1
00a5ee 59ae      	SUBI R26,LOW(-98)
00a5ef 4fbf      	SBCI R27,HIGH(-98)
00a5f0 940e ce94 	CALL __GETW1P
00a5f2 940e b799 	CALL SUBOPT_0xD1
00a5f4 940e c8f3 	CALL SUBOPT_0x358
                +
00a5f6 81ae     +LDD R26 , Y + 6
00a5f7 81bf     +LDD R27 , Y + 6 + 1
00a5f8 9652     +ADIW R26 , 18
00a5f9 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00a5fb 81ee      	LDD  R30,Y+6
00a5fc 81ff      	LDD  R31,Y+6+1
00a5fd 81a1      	LDD  R26,Z+1
00a5fe 93aa      	ST   -Y,R26
00a5ff 81ef      	LDD  R30,Y+7
00a600 85f8      	LDD  R31,Y+7+1
00a601 96f2      	ADIW R30,50
00a602 93fa      	ST   -Y,R31
00a603 93ea      	ST   -Y,R30
00a604 85e9      	LDD  R30,Y+9
00a605 85fa      	LDD  R31,Y+9+1
00a606 940e c81c 	CALL SUBOPT_0x33A
00a608 940e 9a19 	CALL _disk_read
00a60a 30e0      	CPI  R30,0
00a60b f511      	BRNE _0x206012D
00a60c 81ee      	LDD  R30,Y+6
00a60d 81ff      	LDD  R31,Y+6+1
00a60e 940e c957 	CALL SUBOPT_0x369
00a610 f4e9      	BRNE _0x206012D
00a611 81ae      	LDD  R26,Y+6
00a612 81bf      	LDD  R27,Y+6+1
00a613 96d2      	ADIW R26,50
00a614 940e ce98 	CALL __GETD1P
                +
00a616 35e2     +CPI R30 , LOW ( 0x41615252 )
00a617 e5a2     +LDI R26 , HIGH ( 0x41615252 )
00a618 07fa     +CPC R31 , R26
00a619 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00a61a 076a     +CPC R22 , R26
00a61b e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00a61c 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00a61d f481      	BRNE _0x206012D
00a61e 81ee      	LDD  R30,Y+6
00a61f 81ff      	LDD  R31,Y+6+1
00a620 96f2      	ADIW R30,50
00a621 51ec      	SUBI R30,LOW(-484)
00a622 4ffe      	SBCI R31,HIGH(-484)
00a623 01df      	MOVW R26,R30
00a624 940e ce98 	CALL __GETD1P
                +
00a626 37e2     +CPI R30 , LOW ( 0x61417272 )
00a627 e7a2     +LDI R26 , HIGH ( 0x61417272 )
00a628 07fa     +CPC R31 , R26
00a629 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00a62a 076a     +CPC R22 , R26
00a62b e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00a62c 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00a62d f009      	BREQ _0x206012E
                 _0x206012D:
00a62e c01a      	RJMP _0x206012C
                 _0x206012E:
00a62f 81ee      	LDD  R30,Y+6
00a630 81ff      	LDD  R31,Y+6+1
00a631 96f2      	ADIW R30,50
00a632 51e4      	SUBI R30,LOW(-492)
00a633 4ffe      	SBCI R31,HIGH(-492)
00a634 01df      	MOVW R26,R30
00a635 940e ce98 	CALL __GETD1P
                +
00a637 81ae     +LDD R26 , Y + 6
00a638 81bf     +LDD R27 , Y + 6 + 1
00a639 961a     +ADIW R26 , 10
00a63a 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00a63c 81ee      	LDD  R30,Y+6
00a63d 81ff      	LDD  R31,Y+6+1
00a63e 96f2      	ADIW R30,50
00a63f 51e8      	SUBI R30,LOW(-488)
00a640 4ffe      	SBCI R31,HIGH(-488)
00a641 01df      	MOVW R26,R30
00a642 940e ce98 	CALL __GETD1P
                +
00a644 81ae     +LDD R26 , Y + 6
00a645 81bf     +LDD R27 , Y + 6 + 1
00a646 961e     +ADIW R26 , 14
00a647 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00a649 81ae      	LDD  R26,Y+6
00a64a 81bf      	LDD  R27,Y+6+1
00a64b 931c      	ST   X,R17
00a64c 969e      	ADIW R26,46
00a64d 940e b5e4 	CALL SUBOPT_0x8E
00a64f 81ae      	LDD  R26,Y+6
00a650 81bf      	LDD  R27,Y+6+1
00a651 9656      	ADIW R26,22
00a652 940e b5e4 	CALL SUBOPT_0x8E
00a654 e9a4      	LDI  R26,LOW(_Fsid_G103)
00a655 e1ba      	LDI  R27,HIGH(_Fsid_G103)
00a656 940e b578 	CALL SUBOPT_0x7C
                +
00a658 81ae     +LDD R26 , Y + 6
00a659 81bf     +LDD R27 , Y + 6 + 1
00a65a 9616     +ADIW R26 , 6
00a65b 93ed     +ST X + , R30
00a65c 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00a65d e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00a65e 940e cf3f 	CALL __LOADLOCR6
00a660 966f      	ADIW R28,31
00a661 9508      	RET
                 _validate_G103:
00a662 940e bfd8 	CALL SUBOPT_0x22E
00a664 9730      	SBIW R30,0
00a665 f071      	BREQ _0x2060130
00a666 81aa      	LDD  R26,Y+2
00a667 81bb      	LDD  R27,Y+2+1
00a668 91ec      	LD   R30,X
00a669 30e0      	CPI  R30,0
00a66a f049      	BREQ _0x2060130
00a66b 81ea      	LDD  R30,Y+2
00a66c 81fb      	LDD  R31,Y+2+1
00a66d 81a6      	LDD  R26,Z+6
00a66e 81b7      	LDD  R27,Z+7
00a66f 81e8      	LD   R30,Y
00a670 81f9      	LDD  R31,Y+1
00a671 17ea      	CP   R30,R26
00a672 07fb      	CPC  R31,R27
00a673 f011      	BREQ _0x206012F
                 _0x2060130:
00a674 e0e9      	LDI  R30,LOW(9)
00a675 c00a      	RJMP _0x20E000F
                 _0x206012F:
00a676 81ea      	LDD  R30,Y+2
00a677 81fb      	LDD  R31,Y+2+1
00a678 81a1      	LDD  R26,Z+1
00a679 940e 9a0f 	CALL _disk_status
00a67b 70e1      	ANDI R30,LOW(0x1)
00a67c f011      	BREQ _0x2060132
00a67d e0e3      	LDI  R30,LOW(3)
00a67e c001      	RJMP _0x20E000F
                 _0x2060132:
00a67f e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00a680 9624      	ADIW R28,4
00a681 9508      	RET
                 _f_mount:
00a682 940e b595 	CALL SUBOPT_0x81
00a684 81ac      	LDD  R26,Y+4
00a685 30a1      	CPI  R26,LOW(0x1)
00a686 f010      	BRLO _0x2060133
00a687 e0eb      	LDI  R30,LOW(11)
00a688 c01f      	RJMP _0x20E000E
                 _0x2060133:
00a689 81ec      	LDD  R30,Y+4
00a68a 940e c96f 	CALL SUBOPT_0x36B
00a68c 0fae      	ADD  R26,R30
00a68d 1fbf      	ADC  R27,R31
00a68e 910d      	LD   R16,X+
00a68f 911c      	LD   R17,X
00a690 2e00      	MOV  R0,R16
00a691 2a01      	OR   R0,R17
00a692 f019      	BREQ _0x2060134
00a693 01d8      	MOVW R26,R16
00a694 e0e0      	LDI  R30,LOW(0)
00a695 93ec      	ST   X,R30
                 _0x2060134:
00a696 81ea      	LDD  R30,Y+2
00a697 81fb      	LDD  R31,Y+2+1
00a698 9730      	SBIW R30,0
00a699 f021      	BREQ _0x2060135
00a69a 81aa      	LDD  R26,Y+2
00a69b 81bb      	LDD  R27,Y+2+1
00a69c e0e0      	LDI  R30,LOW(0)
00a69d 93ec      	ST   X,R30
                 _0x2060135:
00a69e 81ec      	LDD  R30,Y+4
00a69f 940e c96f 	CALL SUBOPT_0x36B
00a6a1 0fea      	ADD  R30,R26
00a6a2 1ffb      	ADC  R31,R27
00a6a3 81aa      	LDD  R26,Y+2
00a6a4 81bb      	LDD  R27,Y+2+1
00a6a5 83a0      	STD  Z+0,R26
00a6a6 83b1      	STD  Z+1,R27
00a6a7 e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00a6a8 8119      	LDD  R17,Y+1
00a6a9 8108      	LDD  R16,Y+0
00a6aa 9625      	ADIW R28,5
00a6ab 9508      	RET
                 _f_open:
00a6ac 93aa      	ST   -Y,R26
00a6ad 97a2      	SBIW R28,34
00a6ae 940e cf3a 	CALL __SAVELOCR4
00a6b0 a5a9      	LDD  R26,Y+41
00a6b1 a5ba      	LDD  R27,Y+41+1
00a6b2 940e b8f4 	CALL SUBOPT_0x10D
00a6b4 a1ee      	LDD  R30,Y+38
00a6b5 71ef      	ANDI R30,LOW(0x1F)
00a6b6 a3ee      	STD  Y+38,R30
00a6b7 01fe      	MOVW R30,R28
00a6b8 96b7      	ADIW R30,39
00a6b9 93fa      	ST   -Y,R31
00a6ba 93ea      	ST   -Y,R30
00a6bb 940e b4ff 	CALL SUBOPT_0x6C
00a6bd a5ea      	LDD  R30,Y+42
00a6be 71ee      	ANDI R30,LOW(0x1E)
00a6bf 2fae      	MOV  R26,R30
00a6c0 ddb2      	RCALL _chk_mounted
00a6c1 2f1e      	MOV  R17,R30
00a6c2 3010      	CPI  R17,0
00a6c3 f011      	BREQ _0x2060136
00a6c4 2fe1      	MOV  R30,R17
00a6c5 c10f      	RJMP _0x20E000D
                 _0x2060136:
00a6c6 01fe      	MOVW R30,R28
00a6c7 9634      	ADIW R30,4
00a6c8 a3ec      	STD  Y+36,R30
00a6c9 a3fd      	STD  Y+36+1,R31
00a6ca 940e b49e 	CALL SUBOPT_0x5D
00a6cc a5a9      	LDD  R26,Y+41
00a6cd a5ba      	LDD  R27,Y+41+1
00a6ce dcee      	RCALL _follow_path_G103
00a6cf 2f1e      	MOV  R17,R30
00a6d0 a1ee      	LDD  R30,Y+38
00a6d1 71ec      	ANDI R30,LOW(0x1C)
00a6d2 f411      	BRNE PC+3
00a6d3 940c a768 	JMP _0x2060137
00a6d5 9728      	SBIW R28,8
00a6d6 3010      	CPI  R17,0
00a6d7 f089      	BREQ _0x2060138
00a6d8 3014      	CPI  R17,4
00a6d9 f421      	BRNE _0x2060139
00a6da 01de      	MOVW R26,R28
00a6db 9658      	ADIW R26,24
00a6dc dbd5      	RCALL _dir_register_G103
00a6dd 2f1e      	MOV  R17,R30
                 _0x2060139:
00a6de 3010      	CPI  R17,0
00a6df f019      	BREQ _0x206013A
00a6e0 2fe1      	MOV  R30,R17
00a6e1 9628      	ADIW R28,8
00a6e2 c0f2      	RJMP _0x20E000D
                 _0x206013A:
00a6e3 a5ee      	LDD  R30,Y+46
00a6e4 60e8      	ORI  R30,8
00a6e5 a7ee      	STD  Y+46,R30
                +
00a6e6 a52a     +LDD R18 , Y + 42
00a6e7 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00a6e8 c066      	RJMP _0x206013B
                 _0x2060138:
00a6e9 a5ee      	LDD  R30,Y+46
00a6ea 70e4      	ANDI R30,LOW(0x4)
00a6eb f019      	BREQ _0x206013C
00a6ec e0e8      	LDI  R30,LOW(8)
00a6ed 9628      	ADIW R28,8
00a6ee c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
00a6ef a52a     +LDD R18 , Y + 42
00a6f0 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00a6f1 2e02      	MOV  R0,R18
00a6f2 2a03      	OR   R0,R19
00a6f3 f021      	BREQ _0x206013E
00a6f4 01f9      	MOVW R30,R18
00a6f5 85e3      	LDD  R30,Z+11
00a6f6 71e1      	ANDI R30,LOW(0x11)
00a6f7 f019      	BREQ _0x206013D
                 _0x206013E:
00a6f8 e0e7      	LDI  R30,LOW(7)
00a6f9 9628      	ADIW R28,8
00a6fa c0da      	RJMP _0x20E000D
                 _0x206013D:
00a6fb a5ee      	LDD  R30,Y+46
00a6fc 70e8      	ANDI R30,LOW(0x8)
00a6fd f411      	BRNE PC+3
00a6fe 940c a74f 	JMP _0x2060140
00a700 940e c942 	CALL SUBOPT_0x365
00a702 940e cdb2 	CALL __LSLD16
00a704 937f      	PUSH R23
00a705 936f      	PUSH R22
00a706 93ff      	PUSH R31
00a707 93ef      	PUSH R30
00a708 940e c946 	CALL SUBOPT_0x366
00a70a 91af      	POP  R26
00a70b 91bf      	POP  R27
00a70c 918f      	POP  R24
00a70d 919f      	POP  R25
00a70e 940e c94b 	CALL SUBOPT_0x367
00a710 940e b67e 	CALL SUBOPT_0xA2
00a712 01f9      	MOVW R30,R18
00a713 9674      	ADIW R30,20
00a714 e0a0      	LDI  R26,LOW(0)
00a715 e0b0      	LDI  R27,HIGH(0)
00a716 83a0      	STD  Z+0,R26
00a717 83b1      	STD  Z+1,R27
00a718 01f9      	MOVW R30,R18
00a719 967a      	ADIW R30,26
00a71a 83a0      	STD  Z+0,R26
00a71b 83b1      	STD  Z+1,R27
00a71c 01f9      	MOVW R30,R18
00a71d 967c      	ADIW R30,28
00a71e 940e b350 	CALL SUBOPT_0x2D
00a720 940e bee0 	CALL SUBOPT_0x208
00a722 8da8      	LDD  R26,Y+24
00a723 8db9      	LDD  R27,Y+24+1
00a724 9614      	ADIW R26,4
00a725 e0e1      	LDI  R30,LOW(1)
00a726 93ec      	ST   X,R30
00a727 8da8      	LDD  R26,Y+24
00a728 8db9      	LDD  R27,Y+24+1
00a729 969e      	ADIW R26,46
00a72a 940e c831 	CALL SUBOPT_0x33D
00a72c 940e b5bb 	CALL SUBOPT_0x87
00a72e 940e cf1c 	CALL __CPD10
00a730 f0a1      	BREQ _0x2060141
00a731 940e c0db 	CALL SUBOPT_0x257
00a733 940e b6e0 	CALL SUBOPT_0xB5
00a735 d888      	RCALL _remove_chain_G103
00a736 2f1e      	MOV  R17,R30
00a737 3010      	CPI  R17,0
00a738 f019      	BREQ _0x2060142
00a739 2fe1      	MOV  R30,R17
00a73a 9628      	ADIW R28,8
00a73b c099      	RJMP _0x20E000D
                 _0x2060142:
00a73c 940e b5bb 	CALL SUBOPT_0x87
00a73e 940e b7b9 	CALL SUBOPT_0xD8
                +
00a740 8da8     +LDD R26 , Y + 24
00a741 8db9     +LDD R27 , Y + 24 + 1
00a742 961a     +ADIW R26 , 10
00a743 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00a745 940e c0db 	CALL SUBOPT_0x257
00a747 940e b48c 	CALL SUBOPT_0x59
00a749 940e c991 	CALL SUBOPT_0x370
00a74b f019      	BREQ _0x2060143
00a74c 2fe1      	MOV  R30,R17
00a74d 9628      	ADIW R28,8
00a74e c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00a74f a5ee      	LDD  R30,Y+46
00a750 70e8      	ANDI R30,LOW(0x8)
00a751 f0a1      	BREQ _0x2060144
00a752 01f9      	MOVW R30,R18
00a753 963b      	ADIW R30,11
00a754 e0a0      	LDI  R26,LOW(0)
00a755 83a0      	STD  Z+0,R26
00a756 940e 9cb4 	CALL _get_fattime
00a758 940e b6c1 	CALL SUBOPT_0xAF
                +
00a75a 01d9     +MOVW R26 , R18
00a75b 961e     +ADIW R26 , 14
00a75c 940e cea3+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00a75e 8da8      	LDD  R26,Y+24
00a75f 8db9      	LDD  R27,Y+24+1
00a760 9614      	ADIW R26,4
00a761 e0e1      	LDI  R30,LOW(1)
00a762 93ec      	ST   X,R30
00a763 a5ee      	LDD  R30,Y+46
00a764 62e0      	ORI  R30,0x20
00a765 a7ee      	STD  Y+46,R30
                 _0x2060144:
00a766 9628      	ADIW R28,8
00a767 c019      	RJMP _0x2060145
                 _0x2060137:
00a768 3010      	CPI  R17,0
00a769 f011      	BREQ _0x2060146
00a76a 2fe1      	MOV  R30,R17
00a76b c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00a76c a12a     +LDD R18 , Y + 34
00a76d a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00a76e 2e02      	MOV  R0,R18
00a76f 2a03      	OR   R0,R19
00a770 f021      	BREQ _0x2060148
00a771 01f9      	MOVW R30,R18
00a772 85e3      	LDD  R30,Z+11
00a773 71e0      	ANDI R30,LOW(0x10)
00a774 f011      	BREQ _0x2060147
                 _0x2060148:
00a775 e0e4      	LDI  R30,LOW(4)
00a776 c05e      	RJMP _0x20E000D
                 _0x2060147:
00a777 a1ee      	LDD  R30,Y+38
00a778 70e2      	ANDI R30,LOW(0x2)
00a779 f021      	BREQ _0x206014B
00a77a 01f9      	MOVW R30,R18
00a77b 85e3      	LDD  R30,Z+11
00a77c 70e1      	ANDI R30,LOW(0x1)
00a77d f409      	BRNE _0x206014C
                 _0x206014B:
00a77e c002      	RJMP _0x206014A
                 _0x206014C:
00a77f e0e7      	LDI  R30,LOW(7)
00a780 c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00a781 89a8      	LDD  R26,Y+16
00a782 89b9      	LDD  R27,Y+16+1
00a783 969e      	ADIW R26,46
00a784 940e ce98 	CALL __GETD1P
                +
00a786 a5a9     +LDD R26 , Y + 41
00a787 a5ba     +LDD R27 , Y + 41 + 1
00a788 965a     +ADIW R26 , 26
00a789 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00a78b a1ea      	LDD  R30,Y+34
00a78c a1fb      	LDD  R31,Y+34+1
                +
00a78d a5a9     +LDD R26 , Y + 41
00a78e a5ba     +LDD R27 , Y + 41 + 1
00a78f 965e     +ADIW R26 , 30
00a790 93ed     +ST X + , R30
00a791 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00a792 a1ee      	LDD  R30,Y+38
                +
00a793 a5a9     +LDD R26 , Y + 41
00a794 a5ba     +LDD R27 , Y + 41 + 1
00a795 9614     +ADIW R26 , 4
00a796 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00a797 940e c942 	CALL SUBOPT_0x365
00a799 940e cdb2 	CALL __LSLD16
00a79b 937f      	PUSH R23
00a79c 936f      	PUSH R22
00a79d 93ff      	PUSH R31
00a79e 93ef      	PUSH R30
00a79f 940e c946 	CALL SUBOPT_0x366
00a7a1 91af      	POP  R26
00a7a2 91bf      	POP  R27
00a7a3 918f      	POP  R24
00a7a4 919f      	POP  R25
00a7a5 940e c94b 	CALL SUBOPT_0x367
                +
00a7a7 a5a9     +LDD R26 , Y + 41
00a7a8 a5ba     +LDD R27 , Y + 41 + 1
00a7a9 961e     +ADIW R26 , 14
00a7aa 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00a7ac 01d9      	MOVW R26,R18
00a7ad 965c      	ADIW R26,28
00a7ae 940e ce98 	CALL __GETD1P
                +
00a7b0 a5a9     +LDD R26 , Y + 41
00a7b1 a5ba     +LDD R27 , Y + 41 + 1
00a7b2 961a     +ADIW R26 , 10
00a7b3 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00a7b5 a5a9      	LDD  R26,Y+41
00a7b6 a5ba      	LDD  R27,Y+41+1
00a7b7 9616      	ADIW R26,6
00a7b8 940e b5e4 	CALL SUBOPT_0x8E
00a7ba a5a9      	LDD  R26,Y+41
00a7bb a5ba      	LDD  R27,Y+41+1
00a7bc 9615      	ADIW R26,5
00a7bd efef      	LDI  R30,LOW(255)
00a7be 93ec      	ST   X,R30
00a7bf a5a9      	LDD  R26,Y+41
00a7c0 a5ba      	LDD  R27,Y+41+1
00a7c1 9656      	ADIW R26,22
00a7c2 940e b5e4 	CALL SUBOPT_0x8E
00a7c4 89e8      	LDD  R30,Y+16
00a7c5 89f9      	LDD  R31,Y+16+1
00a7c6 a5a9      	LDD  R26,Y+41
00a7c7 a5ba      	LDD  R27,Y+41+1
00a7c8 93ed      	ST   X+,R30
00a7c9 93fc      	ST   X,R31
00a7ca 89a8      	LDD  R26,Y+16
00a7cb 89b9      	LDD  R27,Y+16+1
00a7cc 9616      	ADIW R26,6
00a7cd 940e ce94 	CALL __GETW1P
                +
00a7cf a5a9     +LDD R26 , Y + 41
00a7d0 a5ba     +LDD R27 , Y + 41 + 1
00a7d1 9612     +ADIW R26 , 2
00a7d2 93ed     +ST X + , R30
00a7d3 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00a7d4 e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00a7d5 940e cf41 	CALL __LOADLOCR4
00a7d7 96ab      	ADIW R28,43
00a7d8 9508      	RET
                 _f_read:
00a7d9 93ba      	ST   -Y,R27
00a7da 93aa      	ST   -Y,R26
00a7db 972e      	SBIW R28,14
00a7dc 940e cf38 	CALL __SAVELOCR6
00a7de 8de8      	LDD  R30,Y+24
00a7df 8df9      	LDD  R31,Y+24+1
00a7e0 83ee      	STD  Y+6,R30
00a7e1 83ff      	STD  Y+6+1,R31
00a7e2 89ac      	LDD  R26,Y+20
00a7e3 89bd      	LDD  R27,Y+20+1
00a7e4 940e b8f4 	CALL SUBOPT_0x10D
00a7e6 940e c996 	CALL SUBOPT_0x371
00a7e8 8dec      	LDD  R30,Y+28
00a7e9 8dfd      	LDD  R31,Y+28+1
00a7ea 940e c999 	CALL SUBOPT_0x372
00a7ec f011      	BREQ _0x206014D
00a7ed 2fe1      	MOV  R30,R17
00a7ee c14b      	RJMP _0x20E000C
                 _0x206014D:
00a7ef 8dea      	LDD  R30,Y+26
00a7f0 8dfb      	LDD  R31,Y+26+1
00a7f1 81a4      	LDD  R26,Z+4
00a7f2 78a0      	ANDI R26,LOW(0x80)
00a7f3 f011      	BREQ _0x206014E
00a7f4 e0e2      	LDI  R30,LOW(2)
00a7f5 c144      	RJMP _0x20E000C
                 _0x206014E:
00a7f6 8dea      	LDD  R30,Y+26
00a7f7 8dfb      	LDD  R31,Y+26+1
00a7f8 81a4      	LDD  R26,Z+4
00a7f9 70a1      	ANDI R26,LOW(0x1)
00a7fa f411      	BRNE _0x206014F
00a7fb e0e7      	LDI  R30,LOW(7)
00a7fc c13d      	RJMP _0x20E000C
                 _0x206014F:
00a7fd 8dea      	LDD  R30,Y+26
00a7fe 8dfb      	LDD  R31,Y+26+1
                +
00a7ff 85a2     +LDD R26 , Z + 10
00a800 85b3     +LDD R27 , Z + 10 + 1
00a801 8584     +LDD R24 , Z + 10 + 2
00a802 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00a803 939f      	PUSH R25
00a804 938f      	PUSH R24
00a805 93bf      	PUSH R27
00a806 93af      	PUSH R26
00a807 940e c9a0 	CALL SUBOPT_0x373
00a809 91ef      	POP  R30
00a80a 91ff      	POP  R31
00a80b 916f      	POP  R22
00a80c 917f      	POP  R23
00a80d 940e cd42 	CALL __SUBD12
00a80f 940e c6e1 	CALL SUBOPT_0x309
00a811 940e b443 	CALL SUBOPT_0x4F
00a813 89ae      	LDD  R26,Y+22
00a814 89bf      	LDD  R27,Y+22+1
00a815 2788      	CLR  R24
00a816 2799      	CLR  R25
00a817 940e cf2e 	CALL __CPD12
00a819 f420      	BRSH _0x2060150
00a81a 85e8      	LDD  R30,Y+8
00a81b 85f9      	LDD  R31,Y+8+1
00a81c 8bee      	STD  Y+22,R30
00a81d 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00a81e 89ee      	LDD  R30,Y+22
00a81f 89ff      	LDD  R31,Y+22+1
00a820 9730      	SBIW R30,0
00a821 f411      	BRNE PC+3
00a822 940c a939 	JMP _0x2060153
00a824 940e c9a0 	CALL SUBOPT_0x373
00a826 940e c9a7 	CALL SUBOPT_0x374
00a828 f011      	BREQ PC+3
00a829 940c a904 	JMP _0x2060154
00a82b 8dea      	LDD  R30,Y+26
00a82c 8dfb      	LDD  R31,Y+26+1
00a82d 8005      	LDD  R0,Z+5
00a82e 8daa      	LDD  R26,Y+26
00a82f 8dbb      	LDD  R27,Y+26+1
00a830 940e ce94 	CALL __GETW1P
00a832 81e2      	LDD  R30,Z+2
00a833 160e      	CP   R0,R30
00a834 f188      	BRLO _0x2060155
00a835 940e c9a0 	CALL SUBOPT_0x373
00a837 940e cf28 	CALL __CPD02
00a839 f431      	BRNE _0x2060156
00a83a 8daa      	LDD  R26,Y+26
00a83b 8dbb      	LDD  R27,Y+26+1
00a83c 961e      	ADIW R26,14
00a83d 940e ce98 	CALL __GETD1P
00a83f c006      	RJMP _0x2060157
                 _0x2060156:
00a840 940e c996 	CALL SUBOPT_0x371
00a842 940e c9ac 	CALL SUBOPT_0x375
00a844 940e 9e95 	CALL _get_fat
                 _0x2060157:
00a846 940e c6e6 	CALL SUBOPT_0x30A
00a848 940e c884 	CALL SUBOPT_0x346
00a84a 940e c824 	CALL SUBOPT_0x33B
00a84c f420      	BRSH _0x2060159
00a84d 940e c9b3 	CALL SUBOPT_0x376
00a84f e0e2      	LDI  R30,LOW(2)
00a850 c0e9      	RJMP _0x20E000C
                 _0x2060159:
00a851 940e c884 	CALL SUBOPT_0x346
00a853 940e b3ae 	CALL SUBOPT_0x3A
00a855 f421      	BRNE _0x206015A
00a856 940e c9b3 	CALL SUBOPT_0x376
00a858 e0e1      	LDI  R30,LOW(1)
00a859 c0e0      	RJMP _0x20E000C
                 _0x206015A:
00a85a 940e b272 	CALL SUBOPT_0xC
                +
00a85c 8daa     +LDD R26 , Y + 26
00a85d 8dbb     +LDD R27 , Y + 26 + 1
00a85e 9652     +ADIW R26 , 18
00a85f 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00a861 8daa      	LDD  R26,Y+26
00a862 8dbb      	LDD  R27,Y+26+1
00a863 9615      	ADIW R26,5
00a864 e0e0      	LDI  R30,LOW(0)
00a865 93ec      	ST   X,R30
                 _0x2060155:
00a866 940e c996 	CALL SUBOPT_0x371
00a868 940e c9ac 	CALL SUBOPT_0x375
00a86a d85b      	RCALL _clust2sect
00a86b 940e b82a 	CALL SUBOPT_0xE9
00a86d 940e cf1c 	CALL __CPD10
00a86f f421      	BRNE _0x206015B
00a870 940e c9b3 	CALL SUBOPT_0x376
00a872 e0e2      	LDI  R30,LOW(2)
00a873 c0c6      	RJMP _0x20E000C
                 _0x206015B:
00a874 940e c9ba 	CALL SUBOPT_0x377
00a876 940e b26d 	CALL SUBOPT_0xB
00a878 940e b6bc 	CALL SUBOPT_0xAE
00a87a 940e b820 	CALL SUBOPT_0xE7
00a87c 89ae      	LDD  R26,Y+22
00a87d 89bf      	LDD  R27,Y+22+1
00a87e 940e c9bf 	CALL SUBOPT_0x378
00a880 f411      	BRNE PC+3
00a881 940c a8cf 	JMP _0x206015C
00a883 8dea      	LDD  R30,Y+26
00a884 8dfb      	LDD  R31,Y+26+1
00a885 81e5      	LDD  R30,Z+5
00a886 940e c938 	CALL SUBOPT_0x363
00a888 010f      	MOVW R0,R30
00a889 940e c9c7 	CALL SUBOPT_0x379
00a88b 81e2      	LDD  R30,Z+2
00a88c 940e bc60 	CALL SUBOPT_0x1A0
00a88e f450      	BRSH _0x206015D
00a88f 940e c9c7 	CALL SUBOPT_0x379
00a891 940e c07c 	CALL SUBOPT_0x247
00a893 01df      	MOVW R26,R30
00a894 940e c9ba 	CALL SUBOPT_0x377
00a896 1bae      	SUB  R26,R30
00a897 0bbf      	SBC  R27,R31
00a898 01ad      	MOVW R20,R26
                 _0x206015D:
00a899 940e c9c7 	CALL SUBOPT_0x379
00a89b 940e c9cc 	CALL SUBOPT_0x37A
                +
00a89d 85ef     +LDD R30 , Y + 15
00a89e 89f8     +LDD R31 , Y + 15 + 1
00a89f 8969     +LDD R22 , Y + 15 + 2
00a8a0 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00a8a1 940e cec8 	CALL __PUTPARD1
00a8a3 2fa4      	MOV  R26,R20
00a8a4 940e 9a19 	CALL _disk_read
00a8a6 30e0      	CPI  R30,0
00a8a7 f021      	BREQ _0x206015E
00a8a8 940e c9b3 	CALL SUBOPT_0x376
00a8aa e0e1      	LDI  R30,LOW(1)
00a8ab c08e      	RJMP _0x20E000C
                 _0x206015E:
00a8ac 8dea      	LDD  R30,Y+26
00a8ad 8dfb      	LDD  R31,Y+26+1
00a8ae 81a4      	LDD  R26,Z+4
00a8af 74a0      	ANDI R26,LOW(0x40)
00a8b0 f029      	BREQ _0x2060160
00a8b1 940e c9d3 	CALL SUBOPT_0x37B
00a8b3 940e c9db 	CALL SUBOPT_0x37C
00a8b5 f008      	BRLO _0x2060161
                 _0x2060160:
00a8b6 c013      	RJMP _0x206015F
                 _0x2060161:
00a8b7 940e c9d3 	CALL SUBOPT_0x37B
00a8b9 940e c9e3 	CALL SUBOPT_0x37D
00a8bb 81ae      	LDD  R26,Y+6
00a8bc 81bf      	LDD  R27,Y+6+1
00a8bd 2788      	CLR  R24
00a8be 2799      	CLR  R25
00a8bf 940e b2ec 	CALL SUBOPT_0x1D
00a8c1 8dec      	LDD  R30,Y+28
00a8c2 8dfd      	LDD  R31,Y+28+1
00a8c3 96b0      	ADIW R30,32
00a8c4 93fa      	ST   -Y,R31
00a8c5 93ea      	ST   -Y,R30
00a8c6 e0a0      	LDI  R26,LOW(512)
00a8c7 e0b2      	LDI  R27,HIGH(512)
00a8c8 940e 9d42 	CALL _mem_cpy_G103
                 _0x206015F:
00a8ca 8daa      	LDD  R26,Y+26
00a8cb 8dbb      	LDD  R27,Y+26+1
00a8cc 940e c9ec 	CALL SUBOPT_0x37E
00a8ce c053      	RJMP _0x2060151
                 _0x206015C:
00a8cf 8dea      	LDD  R30,Y+26
00a8d0 8dfb      	LDD  R31,Y+26+1
00a8d1 81a4      	LDD  R26,Z+4
00a8d2 74a0      	ANDI R26,LOW(0x40)
00a8d3 f089      	BREQ _0x2060162
00a8d4 940e c9c7 	CALL SUBOPT_0x379
00a8d6 940e c9f7 	CALL SUBOPT_0x37F
00a8d8 8ded      	LDD  R30,Y+29
00a8d9 8dfe      	LDD  R31,Y+29+1
00a8da 940e c9ff 	CALL SUBOPT_0x380
00a8dc f021      	BREQ _0x2060163
00a8dd 940e c9b3 	CALL SUBOPT_0x376
00a8df e0e1      	LDI  R30,LOW(1)
00a8e0 c059      	RJMP _0x20E000C
                 _0x2060163:
00a8e1 8daa      	LDD  R26,Y+26
00a8e2 8dbb      	LDD  R27,Y+26+1
00a8e3 940e ca0a 	CALL SUBOPT_0x381
                 _0x2060162:
00a8e5 940e c9d3 	CALL SUBOPT_0x37B
00a8e7 940e cf2e 	CALL __CPD12
00a8e9 f079      	BREQ _0x2060164
00a8ea 940e c9c7 	CALL SUBOPT_0x379
00a8ec 940e c9f7 	CALL SUBOPT_0x37F
                +
00a8ee 85ef     +LDD R30 , Y + 15
00a8ef 89f8     +LDD R31 , Y + 15 + 1
00a8f0 8969     +LDD R22 , Y + 15 + 2
00a8f1 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00a8f2 940e c950 	CALL SUBOPT_0x368
00a8f4 f021      	BREQ _0x2060165
00a8f5 940e c9b3 	CALL SUBOPT_0x376
00a8f7 e0e1      	LDI  R30,LOW(1)
00a8f8 c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00a8f9 940e b7b4 	CALL SUBOPT_0xD7
                +
00a8fb 8daa     +LDD R26 , Y + 26
00a8fc 8dbb     +LDD R27 , Y + 26 + 1
00a8fd 9656     +ADIW R26 , 22
00a8fe 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00a900 8daa      	LDD  R26,Y+26
00a901 8dbb      	LDD  R27,Y+26+1
00a902 940e ca0f 	CALL SUBOPT_0x382
                 _0x2060154:
00a904 8daa      	LDD  R26,Y+26
00a905 8dbb      	LDD  R27,Y+26+1
00a906 940e ca14 	CALL SUBOPT_0x383
00a908 e0a0      	LDI  R26,LOW(512)
00a909 e0b2      	LDI  R27,HIGH(512)
00a90a 1bae      	SUB  R26,R30
00a90b 0bbf      	SBC  R27,R31
00a90c 019d      	MOVW R18,R26
00a90d 89ee      	LDD  R30,Y+22
00a90e 89ff      	LDD  R31,Y+22+1
00a90f 17e2      	CP   R30,R18
00a910 07f3      	CPC  R31,R19
00a911 f410      	BRSH _0x2060166
                +
00a912 892e     +LDD R18 , Y + 22
00a913 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00a914 940e ba9b 	CALL SUBOPT_0x154
00a916 8dac      	LDD  R26,Y+28
00a917 8dbd      	LDD  R27,Y+28+1
00a918 940e ca14 	CALL SUBOPT_0x383
00a91a 8dac      	LDD  R26,Y+28
00a91b 8dbd      	LDD  R27,Y+28+1
00a91c 9690      	ADIW R26,32
00a91d 940e b2ec 	CALL SUBOPT_0x1D
00a91f 01d9      	MOVW R26,R18
00a920 940e 9d42 	CALL _mem_cpy_G103
                 _0x2060151:
00a922 01f9      	MOVW R30,R18
00a923 940e bc5b 	CALL SUBOPT_0x19F
00a925 83ee      	STD  Y+6,R30
00a926 83ff      	STD  Y+6+1,R31
00a927 8dea      	LDD  R30,Y+26
00a928 8dfb      	LDD  R31,Y+26+1
00a929 940e ca19 	CALL SUBOPT_0x384
00a92b 01d0      	MOVW R26,R0
00a92c 940e cea3 	CALL __PUTDP1
00a92e 89ac      	LDD  R26,Y+20
00a92f 89bd      	LDD  R27,Y+20+1
00a930 940e ca22 	CALL SUBOPT_0x385
00a932 89ee      	LDD  R30,Y+22
00a933 89ff      	LDD  R31,Y+22+1
00a934 1be2      	SUB  R30,R18
00a935 0bf3      	SBC  R31,R19
00a936 8bee      	STD  Y+22,R30
00a937 8bff      	STD  Y+22+1,R31
00a938 cee5      	RJMP _0x2060152
                 _0x2060153:
00a939 e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00a93a 940e cf3f 	CALL __LOADLOCR6
00a93c 966c      	ADIW R28,28
00a93d 9508      	RET
                 _f_write:
00a93e 93ba      	ST   -Y,R27
00a93f 93aa      	ST   -Y,R26
00a940 972a      	SBIW R28,10
00a941 940e cf38 	CALL __SAVELOCR6
00a943 89ec      	LDD  R30,Y+20
00a944 89fd      	LDD  R31,Y+20+1
00a945 83ee      	STD  Y+6,R30
00a946 83ff      	STD  Y+6+1,R31
00a947 89a8      	LDD  R26,Y+16
00a948 89b9      	LDD  R27,Y+16+1
00a949 940e b8f4 	CALL SUBOPT_0x10D
00a94b 940e ca29 	CALL SUBOPT_0x386
00a94d 8de8      	LDD  R30,Y+24
00a94e 8df9      	LDD  R31,Y+24+1
00a94f 940e c999 	CALL SUBOPT_0x372
00a951 f011      	BREQ _0x2060167
00a952 2fe1      	MOV  R30,R17
00a953 c182      	RJMP _0x20E000B
                 _0x2060167:
00a954 89ee      	LDD  R30,Y+22
00a955 89ff      	LDD  R31,Y+22+1
00a956 81a4      	LDD  R26,Z+4
00a957 78a0      	ANDI R26,LOW(0x80)
00a958 f011      	BREQ _0x2060168
00a959 e0e2      	LDI  R30,LOW(2)
00a95a c17b      	RJMP _0x20E000B
                 _0x2060168:
00a95b 89ee      	LDD  R30,Y+22
00a95c 89ff      	LDD  R31,Y+22+1
00a95d 81a4      	LDD  R26,Z+4
00a95e 70a2      	ANDI R26,LOW(0x2)
00a95f f411      	BRNE _0x2060169
00a960 e0e7      	LDI  R30,LOW(7)
00a961 c174      	RJMP _0x20E000B
                 _0x2060169:
00a962 89ee      	LDD  R30,Y+22
00a963 89ff      	LDD  R31,Y+22+1
                +
00a964 85a2     +LDD R26 , Z + 10
00a965 85b3     +LDD R27 , Z + 10 + 1
00a966 8584     +LDD R24 , Z + 10 + 2
00a967 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00a968 89ea      	LDD  R30,Y+18
00a969 89fb      	LDD  R31,Y+18+1
00a96a 940e c8f3 	CALL SUBOPT_0x358
00a96c 937f      	PUSH R23
00a96d 936f      	PUSH R22
00a96e 93ff      	PUSH R31
00a96f 93ef      	PUSH R30
00a970 940e ca2c 	CALL SUBOPT_0x387
00a972 91af      	POP  R26
00a973 91bf      	POP  R27
00a974 918f      	POP  R24
00a975 919f      	POP  R25
00a976 940e cf33 	CALL __CPD21
00a978 f418      	BRSH _0x206016A
00a979 e0e0      	LDI  R30,LOW(0)
00a97a 8bea      	STD  Y+18,R30
00a97b 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00a97c 89ea      	LDD  R30,Y+18
00a97d 89fb      	LDD  R31,Y+18+1
00a97e 9730      	SBIW R30,0
00a97f f411      	BRNE PC+3
00a980 940c aabc 	JMP _0x206016D
00a982 940e ca32 	CALL SUBOPT_0x388
00a984 940e c9a7 	CALL SUBOPT_0x374
00a986 f011      	BREQ PC+3
00a987 940c aa81 	JMP _0x206016E
00a989 89ee      	LDD  R30,Y+22
00a98a 89ff      	LDD  R31,Y+22+1
00a98b 8005      	LDD  R0,Z+5
00a98c 940e ca39 	CALL SUBOPT_0x389
00a98e 81e2      	LDD  R30,Z+2
00a98f 160e      	CP   R0,R30
00a990 f410      	BRSH PC+3
00a991 940c a9db 	JMP _0x206016F
00a993 89ae      	LDD  R26,Y+22
00a994 89bf      	LDD  R27,Y+22+1
00a995 9616      	ADIW R26,6
00a996 940e c900 	CALL SUBOPT_0x35A
00a998 f4c1      	BRNE _0x2060170
00a999 89ae      	LDD  R26,Y+22
00a99a 89bf      	LDD  R27,Y+22+1
00a99b 961e      	ADIW R26,14
00a99c 940e ce98 	CALL __GETD1P
00a99e 940e b82a 	CALL SUBOPT_0xE9
00a9a0 940e cf1c 	CALL __CPD10
00a9a2 f469      	BRNE _0x2060171
00a9a3 940e ca29 	CALL SUBOPT_0x386
00a9a5 940e b350 	CALL SUBOPT_0x2D
00a9a7 940e a00d 	CALL _create_chain_G103
00a9a9 940e b820 	CALL SUBOPT_0xE7
                +
00a9ab 89ae     +LDD R26 , Y + 22
00a9ac 89bf     +LDD R27 , Y + 22 + 1
00a9ad 961e     +ADIW R26 , 14
00a9ae 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00a9b0 c008      	RJMP _0x2060172
                 _0x2060170:
00a9b1 940e ca29 	CALL SUBOPT_0x386
00a9b3 940e ca3e 	CALL SUBOPT_0x38A
00a9b5 940e a00d 	CALL _create_chain_G103
00a9b7 940e b820 	CALL SUBOPT_0xE7
                 _0x2060172:
00a9b9 940e b7b4 	CALL SUBOPT_0xD7
00a9bb 940e cf1c 	CALL __CPD10
00a9bd f409      	BRNE _0x2060173
00a9be c0fd      	RJMP _0x206016D
                 _0x2060173:
00a9bf 940e b26d 	CALL SUBOPT_0xB
00a9c1 940e c8ac 	CALL SUBOPT_0x34C
00a9c3 f421      	BRNE _0x2060174
00a9c4 940e ca45 	CALL SUBOPT_0x38B
00a9c6 e0e2      	LDI  R30,LOW(2)
00a9c7 c10e      	RJMP _0x20E000B
                 _0x2060174:
00a9c8 940e b49c 	CALL SUBOPT_0x5C
00a9ca f421      	BRNE _0x2060175
00a9cb 940e ca45 	CALL SUBOPT_0x38B
00a9cd e0e1      	LDI  R30,LOW(1)
00a9ce c107      	RJMP _0x20E000B
                 _0x2060175:
00a9cf 940e b7b4 	CALL SUBOPT_0xD7
                +
00a9d1 89ae     +LDD R26 , Y + 22
00a9d2 89bf     +LDD R27 , Y + 22 + 1
00a9d3 9652     +ADIW R26 , 18
00a9d4 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00a9d6 89ae      	LDD  R26,Y+22
00a9d7 89bf      	LDD  R27,Y+22+1
00a9d8 9615      	ADIW R26,5
00a9d9 e0e0      	LDI  R30,LOW(0)
00a9da 93ec      	ST   X,R30
                 _0x206016F:
00a9db 89ee      	LDD  R30,Y+22
00a9dc 89ff      	LDD  R31,Y+22+1
00a9dd 81a4      	LDD  R26,Z+4
00a9de 74a0      	ANDI R26,LOW(0x40)
00a9df f089      	BREQ _0x2060176
00a9e0 940e ca39 	CALL SUBOPT_0x389
00a9e2 940e ca4c 	CALL SUBOPT_0x38C
00a9e4 8de9      	LDD  R30,Y+25
00a9e5 8dfa      	LDD  R31,Y+25+1
00a9e6 940e c9ff 	CALL SUBOPT_0x380
00a9e8 f021      	BREQ _0x2060177
00a9e9 940e ca45 	CALL SUBOPT_0x38B
00a9eb e0e1      	LDI  R30,LOW(1)
00a9ec c0e9      	RJMP _0x20E000B
                 _0x2060177:
00a9ed 89ae      	LDD  R26,Y+22
00a9ee 89bf      	LDD  R27,Y+22+1
00a9ef 940e ca0a 	CALL SUBOPT_0x381
                 _0x2060176:
00a9f1 940e ca29 	CALL SUBOPT_0x386
00a9f3 940e ca3e 	CALL SUBOPT_0x38A
00a9f5 940e a0c6 	CALL _clust2sect
00a9f7 940e c6e1 	CALL SUBOPT_0x309
00a9f9 940e b443 	CALL SUBOPT_0x4F
00a9fb 940e cf1c 	CALL __CPD10
00a9fd f421      	BRNE _0x2060178
00a9fe 940e ca45 	CALL SUBOPT_0x38B
00aa00 e0e2      	LDI  R30,LOW(2)
00aa01 c0d4      	RJMP _0x20E000B
                 _0x2060178:
00aa02 940e ca54 	CALL SUBOPT_0x38D
00aa04 940e b7af 	CALL SUBOPT_0xD6
00aa06 940e b6bc 	CALL SUBOPT_0xAE
00aa08 940e c6e1 	CALL SUBOPT_0x309
00aa0a 89aa      	LDD  R26,Y+18
00aa0b 89bb      	LDD  R27,Y+18+1
00aa0c 940e c9bf 	CALL SUBOPT_0x378
00aa0e f411      	BRNE PC+3
00aa0f 940c aa58 	JMP _0x2060179
00aa11 89ee      	LDD  R30,Y+22
00aa12 89ff      	LDD  R31,Y+22+1
00aa13 81e5      	LDD  R30,Z+5
00aa14 940e c938 	CALL SUBOPT_0x363
00aa16 010f      	MOVW R0,R30
00aa17 940e ca39 	CALL SUBOPT_0x389
00aa19 81e2      	LDD  R30,Z+2
00aa1a 940e bc60 	CALL SUBOPT_0x1A0
00aa1c f450      	BRSH _0x206017A
00aa1d 940e ca39 	CALL SUBOPT_0x389
00aa1f 940e c07c 	CALL SUBOPT_0x247
00aa21 01df      	MOVW R26,R30
00aa22 940e ca54 	CALL SUBOPT_0x38D
00aa24 1bae      	SUB  R26,R30
00aa25 0bbf      	SBC  R27,R31
00aa26 01ad      	MOVW R20,R26
                 _0x206017A:
00aa27 940e ca39 	CALL SUBOPT_0x389
00aa29 940e c9cc 	CALL SUBOPT_0x37A
00aa2b 940e b4ce 	CALL SUBOPT_0x64
00aa2d 2fa4      	MOV  R26,R20
00aa2e 940e 9a7e 	CALL _disk_write
00aa30 30e0      	CPI  R30,0
00aa31 f021      	BREQ _0x206017B
00aa32 940e ca45 	CALL SUBOPT_0x38B
00aa34 e0e1      	LDI  R30,LOW(1)
00aa35 c0a0      	RJMP _0x20E000B
                 _0x206017B:
00aa36 940e ca59 	CALL SUBOPT_0x38E
00aa38 940e c9db 	CALL SUBOPT_0x37C
00aa3a f4c0      	BRSH _0x206017C
00aa3b 940e ca61 	CALL SUBOPT_0x38F
                +
00aa3d 89a6     +LDD R26 , Z + 22
00aa3e 89b7     +LDD R27 , Z + 22 + 1
00aa3f 8d80     +LDD R24 , Z + 22 + 2
00aa40 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00aa41 940e b476 	CALL SUBOPT_0x57
00aa43 940e c9e3 	CALL SUBOPT_0x37D
00aa45 85a8      	LDD  R26,Y+8
00aa46 85b9      	LDD  R27,Y+8+1
00aa47 2788      	CLR  R24
00aa48 2799      	CLR  R25
00aa49 940e b2ec 	CALL SUBOPT_0x1D
00aa4b e0a0      	LDI  R26,LOW(512)
00aa4c e0b2      	LDI  R27,HIGH(512)
00aa4d 940e 9d42 	CALL _mem_cpy_G103
00aa4f 89ae      	LDD  R26,Y+22
00aa50 89bf      	LDD  R27,Y+22+1
00aa51 940e ca0a 	CALL SUBOPT_0x381
                 _0x206017C:
00aa53 89ae      	LDD  R26,Y+22
00aa54 89bf      	LDD  R27,Y+22+1
00aa55 940e c9ec 	CALL SUBOPT_0x37E
00aa57 c04d      	RJMP _0x206016B
                 _0x2060179:
00aa58 940e ca59 	CALL SUBOPT_0x38E
00aa5a 940e cf2e 	CALL __CPD12
00aa5c f0c9      	BREQ _0x206017D
00aa5d 940e ca32 	CALL SUBOPT_0x388
00aa5f 010d      	MOVW R0,R26
00aa60 940e ca2c 	CALL SUBOPT_0x387
00aa62 01d0      	MOVW R26,R0
00aa63 940e cf33 	CALL __CPD21
00aa65 f458      	BRSH _0x206017F
00aa66 940e ca39 	CALL SUBOPT_0x389
00aa68 940e ca4c 	CALL SUBOPT_0x38C
00aa6a 940e b4ce 	CALL SUBOPT_0x64
00aa6c e0a1      	LDI  R26,LOW(1)
00aa6d 940e 9a19 	CALL _disk_read
00aa6f 30e0      	CPI  R30,0
00aa70 f409      	BRNE _0x2060180
                 _0x206017F:
00aa71 c004      	RJMP _0x206017E
                 _0x2060180:
00aa72 940e ca45 	CALL SUBOPT_0x38B
00aa74 e0e1      	LDI  R30,LOW(1)
00aa75 c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00aa76 940e b443 	CALL SUBOPT_0x4F
                +
00aa78 89ae     +LDD R26 , Y + 22
00aa79 89bf     +LDD R27 , Y + 22 + 1
00aa7a 9656     +ADIW R26 , 22
00aa7b 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00aa7d 89ae      	LDD  R26,Y+22
00aa7e 89bf      	LDD  R27,Y+22+1
00aa7f 940e ca0f 	CALL SUBOPT_0x382
                 _0x206016E:
00aa81 89ae      	LDD  R26,Y+22
00aa82 89bf      	LDD  R27,Y+22+1
00aa83 940e ca14 	CALL SUBOPT_0x383
00aa85 e0a0      	LDI  R26,LOW(512)
00aa86 e0b2      	LDI  R27,HIGH(512)
00aa87 1bae      	SUB  R26,R30
00aa88 0bbf      	SBC  R27,R31
00aa89 019d      	MOVW R18,R26
00aa8a 89ea      	LDD  R30,Y+18
00aa8b 89fb      	LDD  R31,Y+18+1
00aa8c 17e2      	CP   R30,R18
00aa8d 07f3      	CPC  R31,R19
00aa8e f410      	BRSH _0x2060181
                +
00aa8f 892a     +LDD R18 , Y + 18
00aa90 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00aa91 89ae      	LDD  R26,Y+22
00aa92 89bf      	LDD  R27,Y+22+1
00aa93 940e ca14 	CALL SUBOPT_0x383
00aa95 89ae      	LDD  R26,Y+22
00aa96 89bf      	LDD  R27,Y+22+1
00aa97 9690      	ADIW R26,32
00aa98 940e b2ec 	CALL SUBOPT_0x1D
00aa9a 940e bbf1 	CALL SUBOPT_0x18B
00aa9c 01d9      	MOVW R26,R18
00aa9d 940e 9d42 	CALL _mem_cpy_G103
00aa9f 89ae      	LDD  R26,Y+22
00aaa0 89bf      	LDD  R27,Y+22+1
00aaa1 9614      	ADIW R26,4
00aaa2 91ec      	LD   R30,X
00aaa3 64e0      	ORI  R30,0x40
00aaa4 93ec      	ST   X,R30
                 _0x206016B:
00aaa5 01f9      	MOVW R30,R18
00aaa6 940e bc5b 	CALL SUBOPT_0x19F
00aaa8 83ee      	STD  Y+6,R30
00aaa9 83ff      	STD  Y+6+1,R31
00aaaa 89ee      	LDD  R30,Y+22
00aaab 89ff      	LDD  R31,Y+22+1
00aaac 940e ca19 	CALL SUBOPT_0x384
00aaae 01d0      	MOVW R26,R0
00aaaf 940e cea3 	CALL __PUTDP1
00aab1 89a8      	LDD  R26,Y+16
00aab2 89b9      	LDD  R27,Y+16+1
00aab3 940e ca22 	CALL SUBOPT_0x385
00aab5 89ea      	LDD  R30,Y+18
00aab6 89fb      	LDD  R31,Y+18+1
00aab7 1be2      	SUB  R30,R18
00aab8 0bf3      	SBC  R31,R19
00aab9 8bea      	STD  Y+18,R30
00aaba 8bfb      	STD  Y+18+1,R31
00aabb cec0      	RJMP _0x206016C
                 _0x206016D:
00aabc 940e ca32 	CALL SUBOPT_0x388
00aabe 010d      	MOVW R0,R26
00aabf 940e ca2c 	CALL SUBOPT_0x387
00aac1 01d0      	MOVW R26,R0
00aac2 940e cf2e 	CALL __CPD12
00aac4 f450      	BRSH _0x2060182
00aac5 89ae      	LDD  R26,Y+22
00aac6 89bf      	LDD  R27,Y+22+1
00aac7 9616      	ADIW R26,6
00aac8 940e ce98 	CALL __GETD1P
                +
00aaca 89ae     +LDD R26 , Y + 22
00aacb 89bf     +LDD R27 , Y + 22 + 1
00aacc 961a     +ADIW R26 , 10
00aacd 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00aacf 89ae      	LDD  R26,Y+22
00aad0 89bf      	LDD  R27,Y+22+1
00aad1 9614      	ADIW R26,4
00aad2 91ec      	LD   R30,X
00aad3 62e0      	ORI  R30,0x20
00aad4 93ec      	ST   X,R30
00aad5 e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00aad6 940e cf3f 	CALL __LOADLOCR6
00aad8 9668      	ADIW R28,24
00aad9 9508      	RET
                 _f_sync:
00aada 93ba      	ST   -Y,R27
00aadb 93aa      	ST   -Y,R26
00aadc 9724      	SBIW R28,4
00aadd 940e cf3a 	CALL __SAVELOCR4
00aadf 940e c8f0 	CALL SUBOPT_0x357
00aae1 85ea      	LDD  R30,Y+10
00aae2 85fb      	LDD  R31,Y+10+1
00aae3 940e c999 	CALL SUBOPT_0x372
00aae5 f011      	BREQ PC+3
00aae6 940c ab56 	JMP _0x2060183
00aae8 85e8      	LDD  R30,Y+8
00aae9 85f9      	LDD  R31,Y+8+1
00aaea 81a4      	LDD  R26,Z+4
00aaeb 72a0      	ANDI R26,LOW(0x20)
00aaec f411      	BRNE PC+3
00aaed 940c ab56 	JMP _0x2060184
00aaef 81a4      	LDD  R26,Z+4
00aaf0 74a0      	ANDI R26,LOW(0x40)
00aaf1 f0a1      	BREQ _0x2060185
00aaf2 940e c8da 	CALL SUBOPT_0x354
00aaf4 81e1      	LDD  R30,Z+1
00aaf5 93ea      	ST   -Y,R30
00aaf6 85e9      	LDD  R30,Y+9
00aaf7 85fa      	LDD  R31,Y+9+1
00aaf8 96b0      	ADIW R30,32
00aaf9 93fa      	ST   -Y,R31
00aafa 93ea      	ST   -Y,R30
00aafb 85eb      	LDD  R30,Y+11
00aafc 85fc      	LDD  R31,Y+11+1
00aafd 940e c9ff 	CALL SUBOPT_0x380
00aaff f011      	BREQ _0x2060186
00ab00 e0e1      	LDI  R30,LOW(1)
00ab01 c055      	RJMP _0x20E000A
                 _0x2060186:
00ab02 85a8      	LDD  R26,Y+8
00ab03 85b9      	LDD  R27,Y+8+1
00ab04 940e ca0a 	CALL SUBOPT_0x381
                 _0x2060185:
00ab06 940e c8f0 	CALL SUBOPT_0x357
00ab08 85ea      	LDD  R30,Y+10
00ab09 85fb      	LDD  R31,Y+10+1
                +
00ab0a 8da2     +LDD R26 , Z + 26
00ab0b 8db3     +LDD R27 , Z + 26 + 1
00ab0c 8d84     +LDD R24 , Z + 26 + 2
00ab0d 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00ab0e 940e c991 	CALL SUBOPT_0x370
00ab10 f011      	BREQ PC+3
00ab11 940c ab56 	JMP _0x2060187
00ab13 85a8      	LDD  R26,Y+8
00ab14 85b9      	LDD  R27,Y+8+1
00ab15 965e      	ADIW R26,30
00ab16 912d      	LD   R18,X+
00ab17 913c      	LD   R19,X
00ab18 01d9      	MOVW R26,R18
00ab19 961b      	ADIW R26,11
00ab1a 91ec      	LD   R30,X
00ab1b 62e0      	ORI  R30,0x20
00ab1c 93ec      	ST   X,R30
00ab1d 85a8      	LDD  R26,Y+8
00ab1e 85b9      	LDD  R27,Y+8+1
00ab1f 961a      	ADIW R26,10
00ab20 940e ce98 	CALL __GETD1P
                +
00ab22 01d9     +MOVW R26 , R18
00ab23 965c     +ADIW R26 , 28
00ab24 940e cea3+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00ab26 85a8      	LDD  R26,Y+8
00ab27 85b9      	LDD  R27,Y+8+1
00ab28 961e      	ADIW R26,14
00ab29 940e ce94 	CALL __GETW1P
                +
00ab2b 01d9     +MOVW R26 , R18
00ab2c 965a     +ADIW R26 , 26
00ab2d 93ed     +ST X + , R30
00ab2e 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00ab2f 85e8      	LDD  R30,Y+8
00ab30 85f9      	LDD  R31,Y+8+1
                +
00ab31 85a6     +LDD R26 , Z + 14
00ab32 85b7     +LDD R27 , Z + 14 + 1
00ab33 8980     +LDD R24 , Z + 14 + 2
00ab34 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00ab35 01fd      	MOVW R30,R26
00ab36 01bc      	MOVW R22,R24
00ab37 940e cdad 	CALL __LSRD16
                +
00ab39 01d9     +MOVW R26 , R18
00ab3a 9654     +ADIW R26 , 20
00ab3b 93ed     +ST X + , R30
00ab3c 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00ab3d 940e 9cb4 	CALL _get_fattime
00ab3f 940e b6c1 	CALL SUBOPT_0xAF
                +
00ab41 01d9     +MOVW R26 , R18
00ab42 9656     +ADIW R26 , 22
00ab43 940e cea3+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00ab45 85a8      	LDD  R26,Y+8
00ab46 85b9      	LDD  R27,Y+8+1
00ab47 9614      	ADIW R26,4
00ab48 91ec      	LD   R30,X
00ab49 7def      	ANDI R30,0xDF
00ab4a 93ec      	ST   X,R30
00ab4b 940e c8da 	CALL SUBOPT_0x354
00ab4d 9634      	ADIW R30,4
00ab4e e0a1      	LDI  R26,LOW(1)
00ab4f 83a0      	STD  Z+0,R26
00ab50 940e c8da 	CALL SUBOPT_0x354
00ab52 01df      	MOVW R26,R30
00ab53 940e 9e21 	CALL _sync_G103
00ab55 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00ab56 2fe1      	MOV  R30,R17
                 _0x20E000A:
00ab57 940e cf41 	CALL __LOADLOCR4
00ab59 962a      	ADIW R28,10
00ab5a 9508      	RET
                 _f_close:
00ab5b 93ba      	ST   -Y,R27
00ab5c 93aa      	ST   -Y,R26
00ab5d 931a      	ST   -Y,R17
00ab5e 81a9      	LDD  R26,Y+1
00ab5f 81ba      	LDD  R27,Y+1+1
00ab60 df79      	RCALL _f_sync
00ab61 2f1e      	MOV  R17,R30
00ab62 3010      	CPI  R17,0
00ab63 f421      	BRNE _0x2060188
00ab64 81a9      	LDD  R26,Y+1
00ab65 81ba      	LDD  R27,Y+1+1
00ab66 940e b8f4 	CALL SUBOPT_0x10D
                 _0x2060188:
00ab68 2fe1      	MOV  R30,R17
00ab69 c296      	RJMP _0x20E0005
                 _f_lseek:
00ab6a 940e cecd 	CALL __PUTPARD2
00ab6c 9760      	SBIW R28,16
00ab6d 931a      	ST   -Y,R17
00ab6e 940e ca69 	CALL SUBOPT_0x390
00ab70 89ef      	LDD  R30,Y+23
00ab71 8df8      	LDD  R31,Y+23+1
00ab72 940e c999 	CALL SUBOPT_0x372
00ab74 f009      	BREQ _0x2060191
00ab75 c18c      	RJMP _0x20E0009
                 _0x2060191:
00ab76 89ed      	LDD  R30,Y+21
00ab77 89fe      	LDD  R31,Y+21+1
00ab78 81a4      	LDD  R26,Z+4
00ab79 78a0      	ANDI R26,LOW(0x80)
00ab7a f011      	BREQ _0x2060192
00ab7b e0e2      	LDI  R30,LOW(2)
00ab7c c186      	RJMP _0x20E0008
                 _0x2060192:
00ab7d 940e ca6c 	CALL SUBOPT_0x391
00ab7f 940e ca72 	CALL SUBOPT_0x392
00ab81 940e cf2e 	CALL __CPD12
00ab83 f428      	BRSH _0x2060194
00ab84 89ed      	LDD  R30,Y+21
00ab85 89fe      	LDD  R31,Y+21+1
00ab86 81a4      	LDD  R26,Z+4
00ab87 70a2      	ANDI R26,LOW(0x2)
00ab88 f009      	BREQ _0x2060195
                 _0x2060194:
00ab89 c004      	RJMP _0x2060193
                 _0x2060195:
00ab8a 940e ca6c 	CALL SUBOPT_0x391
00ab8c 940e ca77 	CALL SUBOPT_0x393
                 _0x2060193:
00ab8e 89ad      	LDD  R26,Y+21
00ab8f 89be      	LDD  R27,Y+21+1
00ab90 9616      	ADIW R26,6
00ab91 940e c7d9 	CALL SUBOPT_0x332
00ab93 940e c8d5 	CALL SUBOPT_0x353
00ab95 940e c8ba 	CALL SUBOPT_0x34E
00ab97 940e ca7c 	CALL SUBOPT_0x394
00ab99 9615      	ADIW R26,5
00ab9a efef      	LDI  R30,LOW(255)
00ab9b 93ec      	ST   X,R30
00ab9c 940e ca72 	CALL SUBOPT_0x392
00ab9e 940e cf28 	CALL __CPD02
00aba0 f010      	BRLO PC+3
00aba1 940c acae 	JMP _0x2060196
00aba3 940e ca84 	CALL SUBOPT_0x395
00aba5 940e c07c 	CALL SUBOPT_0x247
00aba7 940e cdbd 	CALL __CWD1
                +
00aba9 e0a0     +LDI R26 , LOW ( 0x200 )
00abaa e0b2     +LDI R27 , HIGH ( 0x200 )
00abab e080     +LDI R24 , BYTE3 ( 0x200 )
00abac e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00abad 940e cdde 	CALL __MULD12U
00abaf 940e c77c 	CALL SUBOPT_0x322
00abb1 940e c07f 	CALL SUBOPT_0x248
00abb3 940e cf28 	CALL __CPD02
00abb5 f498      	BRSH _0x2060198
00abb6 940e ca89 	CALL SUBOPT_0x396
00abb8 940e ca8e 	CALL SUBOPT_0x397
00abba 937f      	PUSH R23
00abbb 936f      	PUSH R22
00abbc 93ff      	PUSH R31
00abbd 93ef      	PUSH R30
00abbe 940e c8a7 	CALL SUBOPT_0x34B
00abc0 940e ca8e 	CALL SUBOPT_0x397
00abc2 91af      	POP  R26
00abc3 91bf      	POP  R27
00abc4 918f      	POP  R24
00abc5 919f      	POP  R25
00abc6 940e cf33 	CALL __CPD21
00abc8 f408      	BRSH _0x2060199
                 _0x2060198:
00abc9 c021      	RJMP _0x2060197
                 _0x2060199:
00abca 940e c8a7 	CALL SUBOPT_0x34B
00abcc 940e b7b9 	CALL SUBOPT_0xD8
00abce 01df      	MOVW R26,R30
00abcf 01cb      	MOVW R24,R22
00abd0 940e b4fa 	CALL SUBOPT_0x6B
00abd2 940e b7b9 	CALL SUBOPT_0xD8
00abd4 940e cdc2 	CALL __COMD1
00abd6 940e cd4c 	CALL __ANDD12
00abd8 940e ca7c 	CALL SUBOPT_0x394
00abda 9616      	ADIW R26,6
00abdb 940e ce98 	CALL __GETD1P
00abdd 940e ca72 	CALL SUBOPT_0x392
00abdf 940e cd47 	CALL __SUBD21
                +
00abe1 8ba9     +STD Y + 17 , R26
00abe2 8bba     +STD Y + 17 + 1 , R27
00abe3 8b8b     +STD Y + 17 + 2 , R24
00abe4 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00abe5 89ad      	LDD  R26,Y+21
00abe6 89be      	LDD  R27,Y+21+1
00abe7 9652      	ADIW R26,18
00abe8 940e ca97 	CALL SUBOPT_0x398
00abea c02b      	RJMP _0x206019A
                 _0x2060197:
00abeb 89ad      	LDD  R26,Y+21
00abec 89be      	LDD  R27,Y+21+1
00abed 961e      	ADIW R26,14
00abee 940e ca97 	CALL SUBOPT_0x398
00abf0 940e ca9e 	CALL SUBOPT_0x399
00abf2 940e cf1c 	CALL __CPD10
00abf4 f4f9      	BRNE _0x206019B
00abf5 940e ca69 	CALL SUBOPT_0x390
00abf7 940e b350 	CALL SUBOPT_0x2D
00abf9 940e caa3 	CALL SUBOPT_0x39A
00abfb 940e caaa 	CALL SUBOPT_0x39B
00abfd 940e c8ac 	CALL SUBOPT_0x34C
00abff f421      	BRNE _0x206019C
00ac00 940e caaf 	CALL SUBOPT_0x39C
00ac02 e0e2      	LDI  R30,LOW(2)
00ac03 c0ff      	RJMP _0x20E0008
                 _0x206019C:
00ac04 940e caaa 	CALL SUBOPT_0x39B
00ac06 940e b3ae 	CALL SUBOPT_0x3A
00ac08 f421      	BRNE _0x206019D
00ac09 940e caaf 	CALL SUBOPT_0x39C
00ac0b e0e1      	LDI  R30,LOW(1)
00ac0c c0f6      	RJMP _0x20E0008
                 _0x206019D:
00ac0d 940e ca9e 	CALL SUBOPT_0x399
                +
00ac0f 89ad     +LDD R26 , Y + 21
00ac10 89be     +LDD R27 , Y + 21 + 1
00ac11 961e     +ADIW R26 , 14
00ac12 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00ac14 940e cab6 	CALL SUBOPT_0x39D
                 _0x206019A:
00ac16 940e ca9e 	CALL SUBOPT_0x399
00ac18 940e cf1c 	CALL __CPD10
00ac1a f411      	BRNE PC+3
00ac1b 940c acae 	JMP _0x206019E
                 _0x206019F:
00ac1d 940e b4fa 	CALL SUBOPT_0x6B
00ac1f 940e ca72 	CALL SUBOPT_0x392
00ac21 940e cf2e 	CALL __CPD12
00ac23 f010      	BRLO PC+3
00ac24 940c ac75 	JMP _0x20601A1
00ac26 89ed      	LDD  R30,Y+21
00ac27 89fe      	LDD  R31,Y+21+1
00ac28 81a4      	LDD  R26,Z+4
00ac29 70a2      	ANDI R26,LOW(0x2)
00ac2a f089      	BREQ _0x20601A2
00ac2b 940e ca69 	CALL SUBOPT_0x390
00ac2d 940e cabd 	CALL SUBOPT_0x39E
00ac2f 940e caa3 	CALL SUBOPT_0x39A
00ac31 940e ca9e 	CALL SUBOPT_0x399
00ac33 940e cf1c 	CALL __CPD10
00ac35 f429      	BRNE _0x20601A3
00ac36 940e b4fa 	CALL SUBOPT_0x6B
00ac38 940e ca77 	CALL SUBOPT_0x393
00ac3a c03a      	RJMP _0x20601A1
                 _0x20601A3:
00ac3b c00a      	RJMP _0x20601A4
                 _0x20601A2:
00ac3c 940e ca69 	CALL SUBOPT_0x390
00ac3e 940e cabd 	CALL SUBOPT_0x39E
00ac40 940e 9e95 	CALL _get_fat
                +
00ac42 87ed     +STD Y + 13 , R30
00ac43 87fe     +STD Y + 13 + 1 , R31
00ac44 876f     +STD Y + 13 + 2 , R22
00ac45 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00ac46 940e caaa 	CALL SUBOPT_0x39B
00ac48 940e b3ae 	CALL SUBOPT_0x3A
00ac4a f421      	BRNE _0x20601A5
00ac4b 940e caaf 	CALL SUBOPT_0x39C
00ac4d e0e1      	LDI  R30,LOW(1)
00ac4e c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00ac4f 940e caaa 	CALL SUBOPT_0x39B
00ac51 940e c824 	CALL SUBOPT_0x33B
00ac53 f048      	BRLO _0x20601A7
00ac54 940e ca84 	CALL SUBOPT_0x395
00ac56 940e c914 	CALL SUBOPT_0x35E
00ac58 940e caaa 	CALL SUBOPT_0x39B
00ac5a 940e cf33 	CALL __CPD21
00ac5c f020      	BRLO _0x20601A6
                 _0x20601A7:
00ac5d 940e caaf 	CALL SUBOPT_0x39C
00ac5f e0e2      	LDI  R30,LOW(2)
00ac60 c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00ac61 940e cab6 	CALL SUBOPT_0x39D
00ac63 940e cac2 	CALL SUBOPT_0x39F
00ac65 940e c7ad 	CALL SUBOPT_0x32A
00ac67 940e cd38 	CALL __ADDD12
00ac69 01d0      	MOVW R26,R0
00ac6a 940e cea3 	CALL __PUTDP1
00ac6c 940e c7ad 	CALL SUBOPT_0x32A
00ac6e 940e ca89 	CALL SUBOPT_0x396
00ac70 940e cd42 	CALL __SUBD12
00ac72 940e ca77 	CALL SUBOPT_0x393
00ac74 cfa8      	RJMP _0x206019F
                 _0x20601A1:
00ac75 940e cac2 	CALL SUBOPT_0x39F
00ac77 940e ca72 	CALL SUBOPT_0x392
00ac79 940e cd38 	CALL __ADDD12
00ac7b 01d0      	MOVW R26,R0
00ac7c 940e cea3 	CALL __PUTDP1
00ac7e 940e ca72 	CALL SUBOPT_0x392
                +
00ac80 e0e0     +LDI R30 , LOW ( 0x200 )
00ac81 e0f2     +LDI R31 , HIGH ( 0x200 )
00ac82 e060     +LDI R22 , BYTE3 ( 0x200 )
00ac83 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00ac84 940e ce34 	CALL __DIVD21U
                +
00ac86 89ad     +LDD R26 , Y + 21
00ac87 89be     +LDD R27 , Y + 21 + 1
00ac88 9615     +ADIW R26 , 5
00ac89 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00ac8a 940e ca89 	CALL SUBOPT_0x396
00ac8c 70f1      	ANDI R31,HIGH(0x1FF)
00ac8d 9730      	SBIW R30,0
00ac8e f0f9      	BREQ _0x20601A9
00ac8f 940e ca69 	CALL SUBOPT_0x390
00ac91 940e cabd 	CALL SUBOPT_0x39E
00ac93 940e a0c6 	CALL _clust2sect
00ac95 940e c8ba 	CALL SUBOPT_0x34E
00ac97 940e c7e0 	CALL SUBOPT_0x333
00ac99 940e cf1c 	CALL __CPD10
00ac9b f421      	BRNE _0x20601AA
00ac9c 940e caaf 	CALL SUBOPT_0x39C
00ac9e e0e2      	LDI  R30,LOW(2)
00ac9f c063      	RJMP _0x20E0008
                 _0x20601AA:
00aca0 89ed      	LDD  R30,Y+21
00aca1 89fe      	LDD  R31,Y+21+1
00aca2 81e5      	LDD  R30,Z+5
00aca3 e0f0      	LDI  R31,0
00aca4 940e c899 	CALL SUBOPT_0x349
00aca6 940e b6bc 	CALL SUBOPT_0xAE
00aca8 940e c8ba 	CALL SUBOPT_0x34E
00acaa 89ad      	LDD  R26,Y+21
00acab 89be      	LDD  R27,Y+21+1
00acac 940e ca0f 	CALL SUBOPT_0x382
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00acae 940e caca 	CALL SUBOPT_0x3A0
00acb0 940e c9a7 	CALL SUBOPT_0x374
00acb2 f051      	BREQ _0x20601AC
00acb3 89ad      	LDD  R26,Y+21
00acb4 89be      	LDD  R27,Y+21+1
00acb5 9656      	ADIW R26,22
00acb6 940e ce98 	CALL __GETD1P
00acb8 940e c899 	CALL SUBOPT_0x349
00acba 940e cf2e 	CALL __CPD12
00acbc f409      	BRNE _0x20601AD
                 _0x20601AC:
00acbd c02b      	RJMP _0x20601AB
                 _0x20601AD:
00acbe 89ed      	LDD  R30,Y+21
00acbf 89fe      	LDD  R31,Y+21+1
00acc0 81a4      	LDD  R26,Z+4
00acc1 74a0      	ANDI R26,LOW(0x40)
00acc2 f089      	BREQ _0x20601AE
00acc3 940e ca84 	CALL SUBOPT_0x395
00acc5 81e1      	LDD  R30,Z+1
00acc6 93ea      	ST   -Y,R30
00acc7 940e ca61 	CALL SUBOPT_0x38F
00acc9 940e c9ff 	CALL SUBOPT_0x380
00accb f021      	BREQ _0x20601AF
00accc 940e caaf 	CALL SUBOPT_0x39C
00acce e0e1      	LDI  R30,LOW(1)
00accf c033      	RJMP _0x20E0008
                 _0x20601AF:
00acd0 89ad      	LDD  R26,Y+21
00acd1 89be      	LDD  R27,Y+21+1
00acd2 940e ca0a 	CALL SUBOPT_0x381
                 _0x20601AE:
00acd4 940e ca84 	CALL SUBOPT_0x395
00acd6 81e1      	LDD  R30,Z+1
00acd7 93ea      	ST   -Y,R30
00acd8 89ee      	LDD  R30,Y+22
00acd9 89ff      	LDD  R31,Y+22+1
00acda 96b0      	ADIW R30,32
00acdb 940e c7fa 	CALL SUBOPT_0x336
00acdd f021      	BREQ _0x20601B0
00acde 940e caaf 	CALL SUBOPT_0x39C
00ace0 e0e1      	LDI  R30,LOW(1)
00ace1 c021      	RJMP _0x20E0008
                 _0x20601B0:
00ace2 940e c7e0 	CALL SUBOPT_0x333
                +
00ace4 89ad     +LDD R26 , Y + 21
00ace5 89be     +LDD R27 , Y + 21 + 1
00ace6 9656     +ADIW R26 , 22
00ace7 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00ace9 940e caca 	CALL SUBOPT_0x3A0
00aceb 010d      	MOVW R0,R26
00acec 940e ca6c 	CALL SUBOPT_0x391
00acee 01d0      	MOVW R26,R0
00acef 940e cf2e 	CALL __CPD12
00acf1 f480      	BRSH _0x20601B1
00acf2 89ad      	LDD  R26,Y+21
00acf3 89be      	LDD  R27,Y+21+1
00acf4 9616      	ADIW R26,6
00acf5 940e ce98 	CALL __GETD1P
                +
00acf7 89ad     +LDD R26 , Y + 21
00acf8 89be     +LDD R27 , Y + 21 + 1
00acf9 961a     +ADIW R26 , 10
00acfa 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00acfc 89ad      	LDD  R26,Y+21
00acfd 89be      	LDD  R27,Y+21+1
00acfe 9614      	ADIW R26,4
00acff 91ec      	LD   R30,X
00ad00 62e0      	ORI  R30,0x20
00ad01 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00ad02 2fe1      	MOV  R30,R17
                 _0x20E0008:
00ad03 8118      	LDD  R17,Y+0
00ad04 9667      	ADIW R28,23
00ad05 9508      	RET
                 _f_getfree:
00ad06 93ba      	ST   -Y,R27
00ad07 93aa      	ST   -Y,R26
00ad08 9760      	SBIW R28,16
00ad09 940e cf38 	CALL __SAVELOCR6
00ad0b 01fe      	MOVW R30,R28
00ad0c 967a      	ADIW R30,26
00ad0d 93fa      	ST   -Y,R31
00ad0e 93ea      	ST   -Y,R30
00ad0f 940e c0db 	CALL SUBOPT_0x257
00ad11 e0a0      	LDI  R26,LOW(0)
00ad12 940e a473 	CALL _chk_mounted
00ad14 2f1e      	MOV  R17,R30
00ad15 3010      	CPI  R17,0
00ad16 f011      	BREQ _0x20601C3
00ad17 2fe1      	MOV  R30,R17
00ad18 c0c9      	RJMP _0x20E0006
                 _0x20601C3:
00ad19 940e ca39 	CALL SUBOPT_0x389
00ad1b 010f      	MOVW R0,R30
00ad1c 963e      	ADIW R30,14
00ad1d 01df      	MOVW R26,R30
00ad1e 940e ce98 	CALL __GETD1P
00ad20 937f      	PUSH R23
00ad21 936f      	PUSH R22
00ad22 93ff      	PUSH R31
00ad23 93ef      	PUSH R30
00ad24 01d0      	MOVW R26,R0
00ad25 965e      	ADIW R26,30
00ad26 940e ce98 	CALL __GETD1P
                +
00ad28 50e2     +SUBI R30 , LOW ( 2 )
00ad29 40f0     +SBCI R31 , HIGH ( 2 )
00ad2a 4060     +SBCI R22 , BYTE3 ( 2 )
00ad2b 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00ad2c 91af      	POP  R26
00ad2d 91bf      	POP  R27
00ad2e 918f      	POP  R24
00ad2f 919f      	POP  R25
00ad30 940e cf2e 	CALL __CPD12
00ad32 f038      	BRLO _0x20601C4
00ad33 940e ca39 	CALL SUBOPT_0x389
00ad35 963e      	ADIW R30,14
00ad36 01df      	MOVW R26,R30
00ad37 940e ce98 	CALL __GETD1P
00ad39 c0a3      	RJMP _0x20E0007
                 _0x20601C4:
00ad3a 940e ca39 	CALL SUBOPT_0x389
00ad3c 8100      	LD   R16,Z
00ad3d e0e0      	LDI  R30,LOW(0)
                +
00ad3e 8bea     +STD Y + 18 , R30
00ad3f 8beb     +STD Y + 18 + 1 , R30
00ad40 8bec     +STD Y + 18 + 2 , R30
00ad41 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00ad42 3001      	CPI  R16,1
00ad43 f5b9      	BRNE _0x20601C5
00ad44 940e c8c9 	CALL SUBOPT_0x351
00ad46 940e bed6 	CALL SUBOPT_0x206
                 _0x20601C7:
00ad48 940e ca29 	CALL SUBOPT_0x386
00ad4a 940e c884 	CALL SUBOPT_0x346
00ad4c 940e 9e95 	CALL _get_fat
00ad4e 940e b6ea 	CALL SUBOPT_0xB7
00ad50 940e b48c 	CALL SUBOPT_0x59
00ad52 940e b3ae 	CALL SUBOPT_0x3A
00ad54 f411      	BRNE _0x20601C9
00ad55 e0e1      	LDI  R30,LOW(1)
00ad56 c08b      	RJMP _0x20E0006
                 _0x20601C9:
00ad57 940e b48c 	CALL SUBOPT_0x59
00ad59 940e c8ac 	CALL SUBOPT_0x34C
00ad5b f411      	BRNE _0x20601CA
00ad5c e0e2      	LDI  R30,LOW(2)
00ad5d c084      	RJMP _0x20E0006
                 _0x20601CA:
00ad5e 940e b6e5 	CALL SUBOPT_0xB6
00ad60 940e cf1c 	CALL __CPD10
00ad62 f411      	BRNE _0x20601CB
00ad63 940e cad1 	CALL SUBOPT_0x3A1
                 _0x20601CB:
00ad65 940e b4b3 	CALL SUBOPT_0x60
00ad67 940e b707 	CALL SUBOPT_0xBC
00ad69 940e bed6 	CALL SUBOPT_0x206
00ad6b 937f      	PUSH R23
00ad6c 936f      	PUSH R22
00ad6d 93ff      	PUSH R31
00ad6e 93ef      	PUSH R30
00ad6f 940e ca39 	CALL SUBOPT_0x389
00ad71 940e c914 	CALL SUBOPT_0x35E
00ad73 91af      	POP  R26
00ad74 91bf      	POP  R27
00ad75 918f      	POP  R24
00ad76 919f      	POP  R25
00ad77 940e cf33 	CALL __CPD21
00ad79 f270      	BRLO _0x20601C7
00ad7a c052      	RJMP _0x20601CC
                 _0x20601C5:
00ad7b 940e ca39 	CALL SUBOPT_0x389
00ad7d 940e c914 	CALL SUBOPT_0x35E
00ad7f 940e bed6 	CALL SUBOPT_0x206
00ad81 940e ca39 	CALL SUBOPT_0x389
00ad83 96b2      	ADIW R30,34
00ad84 01df      	MOVW R26,R30
00ad85 940e ce98 	CALL __GETD1P
00ad87 940e bec5 	CALL SUBOPT_0x203
00ad89 940e b216 	CALL SUBOPT_0x0
                 _0x20601CE:
00ad8b 2e02      	MOV  R0,R18
00ad8c 2a03      	OR   R0,R19
00ad8d f4c1      	BRNE _0x20601D0
00ad8e 940e ca29 	CALL SUBOPT_0x386
00ad90 940e b7b4 	CALL SUBOPT_0xD7
00ad92 940e b707 	CALL SUBOPT_0xBC
00ad94 940e b820 	CALL SUBOPT_0xE7
00ad96 9731      	SBIW R30,1
00ad97 4060      	SBCI R22,0
00ad98 4070      	SBCI R23,0
00ad99 01df      	MOVW R26,R30
00ad9a 01cb      	MOVW R24,R22
00ad9b 940e c991 	CALL SUBOPT_0x370
00ad9d f011      	BREQ _0x20601D1
00ad9e 2fe1      	MOV  R30,R17
00ad9f c042      	RJMP _0x20E0006
                 _0x20601D1:
00ada0 940e ca39 	CALL SUBOPT_0x389
00ada2 96f2      	ADIW R30,50
00ada3 01af      	MOVW R20,R30
                +
00ada4 e020     +LDI R18 , LOW ( 512 )
00ada5 e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00ada6 3002      	CPI  R16,2
00ada7 f461      	BRNE _0x20601D2
00ada8 01da      	MOVW R26,R20
00ada9 940e ce94 	CALL __GETW1P
00adab 9730      	SBIW R30,0
00adac f411      	BRNE _0x20601D3
00adad 940e cad1 	CALL SUBOPT_0x3A1
                 _0x20601D3:
                +
00adaf 5f4e     +SUBI R20 , LOW ( - 2 )
00adb0 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00adb1 5022     +SUBI R18 , LOW ( 2 )
00adb2 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00adb3 c010      	RJMP _0x20601D4
                 _0x20601D2:
00adb4 01da      	MOVW R26,R20
00adb5 940e ce98 	CALL __GETD1P
                +
00adb7 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00adb8 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00adb9 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00adba 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00adbb 940e cf1c 	CALL __CPD10
00adbd f411      	BRNE _0x20601D5
00adbe 940e cad1 	CALL SUBOPT_0x3A1
                 _0x20601D5:
                +
00adc0 5f4c     +SUBI R20 , LOW ( - 4 )
00adc1 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00adc2 5024     +SUBI R18 , LOW ( 4 )
00adc3 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00adc4 940e b4b3 	CALL SUBOPT_0x60
00adc6 9731      	SBIW R30,1
00adc7 4060      	SBCI R22,0
00adc8 4070      	SBCI R23,0
00adc9 940e bed6 	CALL SUBOPT_0x206
00adcb f009      	BREQ _0x20601CF
00adcc cfbe      	RJMP _0x20601CE
                 _0x20601CF:
                 _0x20601CC:
00adcd 940e ca39 	CALL SUBOPT_0x389
00adcf 963e      	ADIW R30,14
00add0 940e c8c4 	CALL SUBOPT_0x350
00add2 940e bee0 	CALL SUBOPT_0x208
00add4 3003      	CPI  R16,3
00add5 f429      	BRNE _0x20601D6
00add6 940e ca39 	CALL SUBOPT_0x389
00add8 9635      	ADIW R30,5
00add9 e0a1      	LDI  R26,LOW(1)
00adda 83a0      	STD  Z+0,R26
                 _0x20601D6:
00addb 940e b7a3 	CALL SUBOPT_0xD3
                 _0x20E0007:
00addd 8da8      	LDD  R26,Y+24
00adde 8db9      	LDD  R27,Y+24+1
00addf 940e cea3 	CALL __PUTDP1
00ade1 e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00ade2 940e cf3f 	CALL __LOADLOCR6
00ade4 966c      	ADIW R28,28
00ade5 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00ade6 93aa      	ST   -Y,R26
                 _0x2080003:
00ade7 91e0 00c0 	LDS  R30,192
00ade9 72e0      	ANDI R30,LOW(0x20)
00adea f3e1      	BREQ _0x2080003
00adeb 81e8      	LD   R30,Y
00adec 93e0 00c6 	STS  198,R30
00adee 9621      	ADIW R28,1
00adef 9508      	RET
                 _puts:
00adf0 93ba      	ST   -Y,R27
00adf1 93aa      	ST   -Y,R26
00adf2 931a      	ST   -Y,R17
                 _0x2080006:
00adf3 81a9      	LDD  R26,Y+1
00adf4 81ba      	LDD  R27,Y+1+1
00adf5 91ed      	LD   R30,X+
00adf6 83a9      	STD  Y+1,R26
00adf7 83ba      	STD  Y+1+1,R27
00adf8 2f1e      	MOV  R17,R30
00adf9 30e0      	CPI  R30,0
00adfa f019      	BREQ _0x2080008
00adfb 2fa1      	MOV  R26,R17
00adfc dfe9      	RCALL _putchar
00adfd cff5      	RJMP _0x2080006
                 _0x2080008:
00adfe e0aa      	LDI  R26,LOW(10)
00adff dfe6      	RCALL _putchar
                 _0x20E0005:
00ae00 8118      	LDD  R17,Y+0
00ae01 9623      	ADIW R28,3
00ae02 9508      	RET
                 _put_buff_G104:
00ae03 940e b595 	CALL SUBOPT_0x81
00ae05 81aa      	LDD  R26,Y+2
00ae06 81bb      	LDD  R27,Y+2+1
00ae07 9612      	ADIW R26,2
00ae08 940e ce94 	CALL __GETW1P
00ae0a 9730      	SBIW R30,0
00ae0b f129      	BREQ _0x208002A
00ae0c 81aa      	LDD  R26,Y+2
00ae0d 81bb      	LDD  R27,Y+2+1
00ae0e 9614      	ADIW R26,4
00ae0f 940e ce94 	CALL __GETW1P
00ae11 018f      	MOVW R16,R30
00ae12 9730      	SBIW R30,0
00ae13 f061      	BREQ _0x208002C
                +
00ae14 3002     +CPI R16 , LOW ( 2 )
00ae15 e0e0     +LDI R30 , HIGH ( 2 )
00ae16 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00ae17 f0c0      	BRLO _0x208002D
00ae18 01f8      	MOVW R30,R16
00ae19 9731      	SBIW R30,1
00ae1a 018f      	MOVW R16,R30
                +
00ae1b 81aa     +LDD R26 , Y + 2
00ae1c 81bb     +LDD R27 , Y + 2 + 1
00ae1d 9614     +ADIW R26 , 4
00ae1e 93ed     +ST X + , R30
00ae1f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00ae20 81aa      	LDD  R26,Y+2
00ae21 81bb      	LDD  R27,Y+2+1
00ae22 9612      	ADIW R26,2
00ae23 940e b578 	CALL SUBOPT_0x7C
00ae25 9731      	SBIW R30,1
00ae26 81ac      	LDD  R26,Y+4
00ae27 83a0      	STD  Z+0,R26
00ae28 81aa      	LDD  R26,Y+2
00ae29 81bb      	LDD  R27,Y+2+1
00ae2a 940e ce94 	CALL __GETW1P
00ae2c 23ff      	TST  R31
00ae2d f012      	BRMI _0x208002E
00ae2e 940e b578 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00ae30 c006      	RJMP _0x208002F
                 _0x208002A:
00ae31 81aa      	LDD  R26,Y+2
00ae32 81bb      	LDD  R27,Y+2+1
00ae33 efef      	LDI  R30,LOW(65535)
00ae34 efff      	LDI  R31,HIGH(65535)
00ae35 93ed      	ST   X+,R30
00ae36 93fc      	ST   X,R31
                 _0x208002F:
00ae37 8119      	LDD  R17,Y+1
00ae38 8108      	LDD  R16,Y+0
00ae39 9625      	ADIW R28,5
00ae3a 9508      	RET
                 __ftoe_G104:
00ae3b 93ba      	ST   -Y,R27
00ae3c 93aa      	ST   -Y,R26
00ae3d 9724      	SBIW R28,4
00ae3e e0e0      	LDI  R30,LOW(0)
00ae3f 83e8      	ST   Y,R30
00ae40 83e9      	STD  Y+1,R30
00ae41 e8e0      	LDI  R30,LOW(128)
00ae42 83ea      	STD  Y+2,R30
00ae43 e3ef      	LDI  R30,LOW(63)
00ae44 83eb      	STD  Y+3,R30
00ae45 940e cf3a 	CALL __SAVELOCR4
00ae47 85ee      	LDD  R30,Y+14
00ae48 85ff      	LDD  R31,Y+14+1
00ae49 3fef      	CPI  R30,LOW(0xFFFF)
00ae4a efaf      	LDI  R26,HIGH(0xFFFF)
00ae4b 07fa      	CPC  R31,R26
00ae4c f459      	BRNE _0x2080037
00ae4d 940e bbf1 	CALL SUBOPT_0x18B
                +
00ae4f e7aa     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00ae50 e6b4     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00ae51 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00ae52 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00ae53 940e 979f 	CALL _strcpyf
00ae55 940e cf41 	CALL __LOADLOCR4
00ae57 c340      	RJMP _0x20E0003
                 _0x2080037:
00ae58 3fef      	CPI  R30,LOW(0x7FFF)
00ae59 e7af      	LDI  R26,HIGH(0x7FFF)
00ae5a 07fa      	CPC  R31,R26
00ae5b f459      	BRNE _0x2080036
00ae5c 940e bbf1 	CALL SUBOPT_0x18B
                +
00ae5e e7ab     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00ae5f e6b4     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00ae60 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00ae61 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00ae62 940e 979f 	CALL _strcpyf
00ae64 940e cf41 	CALL __LOADLOCR4
00ae66 c331      	RJMP _0x20E0003
                 _0x2080036:
00ae67 85ab      	LDD  R26,Y+11
00ae68 30a7      	CPI  R26,LOW(0x7)
00ae69 f010      	BRLO _0x2080039
00ae6a e0e6      	LDI  R30,LOW(6)
00ae6b 87eb      	STD  Y+11,R30
                 _0x2080039:
00ae6c 851b      	LDD  R17,Y+11
                 _0x208003A:
00ae6d 2fe1      	MOV  R30,R17
00ae6e 5011      	SUBI R17,1
00ae6f 30e0      	CPI  R30,0
00ae70 f029      	BREQ _0x208003C
00ae71 940e cad6 	CALL SUBOPT_0x3A2
00ae73 940e b6a2 	CALL SUBOPT_0xA9
00ae75 cff7      	RJMP _0x208003A
                 _0x208003C:
00ae76 940e b7b4 	CALL SUBOPT_0xD7
00ae78 940e cf1c 	CALL __CPD10
00ae7a f431      	BRNE _0x208003D
00ae7b e030      	LDI  R19,LOW(0)
00ae7c 940e cad6 	CALL SUBOPT_0x3A2
00ae7e 940e b6a2 	CALL SUBOPT_0xA9
00ae80 c02e      	RJMP _0x208003E
                 _0x208003D:
00ae81 853b      	LDD  R19,Y+11
00ae82 940e cad9 	CALL SUBOPT_0x3A3
00ae84 f009      	BREQ PC+2
00ae85 f410      	BRCC PC+3
00ae86 940c ae94 	JMP  _0x208003F
00ae88 940e cad6 	CALL SUBOPT_0x3A2
00ae8a 940e b6a2 	CALL SUBOPT_0xA9
                 _0x2080040:
00ae8c 940e cad9 	CALL SUBOPT_0x3A3
00ae8e f020      	BRLO _0x2080042
00ae8f 940e cae0 	CALL SUBOPT_0x3A4
00ae91 5f3f      	SUBI R19,-LOW(1)
00ae92 cff9      	RJMP _0x2080040
                 _0x2080042:
00ae93 c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00ae94 940e cad9 	CALL SUBOPT_0x3A3
00ae96 f430      	BRSH _0x2080046
00ae97 940e c7b8 	CALL SUBOPT_0x32C
00ae99 940e b820 	CALL SUBOPT_0xE7
00ae9b 5031      	SUBI R19,LOW(1)
00ae9c cff7      	RJMP _0x2080044
                 _0x2080046:
00ae9d 940e cad6 	CALL SUBOPT_0x3A2
00ae9f 940e b6a2 	CALL SUBOPT_0xA9
                 _0x2080043:
00aea1 940e b7b4 	CALL SUBOPT_0xD7
00aea3 940e c7a2 	CALL SUBOPT_0x328
00aea5 940e cc31 	CALL __ADDF12
00aea7 940e b820 	CALL SUBOPT_0xE7
00aea9 940e cad9 	CALL SUBOPT_0x3A3
00aeab f018      	BRLO _0x2080047
00aeac 940e cae0 	CALL SUBOPT_0x3A4
00aeae 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00aeaf e010      	LDI  R17,LOW(0)
                 _0x2080048:
00aeb0 85eb      	LDD  R30,Y+11
00aeb1 17e1      	CP   R30,R17
00aeb2 f1a8      	BRLO _0x208004A
00aeb3 940e b6a7 	CALL SUBOPT_0xAA
                +
00aeb5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00aeb6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00aeb7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00aeb8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00aeb9 940e cc81 	CALL __MULF12
00aebb 940e c7a2 	CALL SUBOPT_0x328
00aebd 940e b674 	CALL SUBOPT_0xA0
00aebf 940e b1ff 	CALL _floor
00aec1 940e b6c1 	CALL SUBOPT_0xAF
00aec3 940e b26d 	CALL SUBOPT_0xB
00aec5 940e cccf 	CALL __DIVF21
00aec7 940e cbbe 	CALL __CFD1U
00aec9 2f0e      	MOV  R16,R30
00aeca 940e cae7 	CALL SUBOPT_0x3A5
00aecc 2fe0      	MOV  R30,R16
00aecd 5de0      	SUBI R30,-LOW(48)
00aece 93ec      	ST   X,R30
00aecf 2fe0      	MOV  R30,R16
00aed0 27ff      	CLR  R31
00aed1 2766      	CLR  R22
00aed2 2777      	CLR  R23
00aed3 940e cbf7 	CALL __CDF1
00aed5 940e b6a7 	CALL SUBOPT_0xAA
00aed7 940e cc81 	CALL __MULF12
00aed9 940e b26d 	CALL SUBOPT_0xB
00aedb 940e bed1 	CALL SUBOPT_0x205
00aedd 940e b820 	CALL SUBOPT_0xE7
00aedf 2fe1      	MOV  R30,R17
00aee0 5f1f      	SUBI R17,-1
00aee1 30e0      	CPI  R30,0
00aee2 f669      	BRNE _0x2080048
00aee3 940e cae7 	CALL SUBOPT_0x3A5
00aee5 e2ee      	LDI  R30,LOW(46)
00aee6 93ec      	ST   X,R30
00aee7 cfc8      	RJMP _0x2080048
                 _0x208004A:
00aee8 940e b58e 	CALL SUBOPT_0x80
00aeea 85aa      	LDD  R26,Y+10
00aeeb 83a0      	STD  Z+0,R26
00aeec 3030      	CPI  R19,0
00aeed f42c      	BRGE _0x208004C
00aeee 9531      	NEG  R19
00aeef 85a8      	LDD  R26,Y+8
00aef0 85b9      	LDD  R27,Y+8+1
00aef1 e2ed      	LDI  R30,LOW(45)
00aef2 c003      	RJMP _0x2080137
                 _0x208004C:
00aef3 85a8      	LDD  R26,Y+8
00aef4 85b9      	LDD  R27,Y+8+1
00aef5 e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00aef6 93ec      	ST   X,R30
00aef7 85e8      	LDD  R30,Y+8
00aef8 85f9      	LDD  R31,Y+8+1
00aef9 9631      	ADIW R30,1
00aefa 940e bbee 	CALL SUBOPT_0x18A
00aefc 9631      	ADIW R30,1
00aefd 87e8      	STD  Y+8,R30
00aefe 87f9      	STD  Y+8+1,R31
00aeff 9731      	SBIW R30,1
00af00 01bf      	MOVW R22,R30
00af01 2fa3      	MOV  R26,R19
00af02 e0ea      	LDI  R30,LOW(10)
00af03 940e ce17 	CALL __DIVB21
00af05 5de0      	SUBI R30,-LOW(48)
00af06 01db      	MOVW R26,R22
00af07 93ec      	ST   X,R30
00af08 940e b58e 	CALL SUBOPT_0x80
00af0a 01bf      	MOVW R22,R30
00af0b 2fa3      	MOV  R26,R19
00af0c e0ea      	LDI  R30,LOW(10)
00af0d 940e ce59 	CALL __MODB21
00af0f 5de0      	SUBI R30,-LOW(48)
00af10 01db      	MOVW R26,R22
00af11 93ec      	ST   X,R30
00af12 85a8      	LDD  R26,Y+8
00af13 85b9      	LDD  R27,Y+8+1
00af14 e0e0      	LDI  R30,LOW(0)
00af15 93ec      	ST   X,R30
00af16 940e cf41 	CALL __LOADLOCR4
00af18 c27f      	RJMP _0x20E0003
                 __print_G104:
00af19 93ba      	ST   -Y,R27
00af1a 93aa      	ST   -Y,R26
00af1b 97ef      	SBIW R28,63
00af1c 9765      	SBIW R28,21
00af1d 940e cf38 	CALL __SAVELOCR6
00af1f e010      	LDI  R17,0
                +
00af20 01fe     +MOVW R30 , R28
00af21 5ae4     +SUBI R30 , LOW ( - 92 )
00af22 4fff     +SBCI R31 , HIGH ( - 92 )
00af23 9001     +LD R0 , Z +
00af24 9011     +LD R1 , Z +
00af25 9161     +LD R22 , Z +
00af26 8170     +LD R23 , Z
00af27 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00af28 940e c6e1 	CALL SUBOPT_0x309
                +
00af2a 01fe     +MOVW R30 , R28
00af2b 5ae6     +SUBI R30 , LOW ( - 90 )
00af2c 4fff     +SBCI R31 , HIGH ( - 90 )
00af2d 9001     +LD R0 , Z +
00af2e 81f0     +LD R31 , Z
00af2f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00af30 83ee      	STD  Y+6,R30
00af31 83ff      	STD  Y+6+1,R31
00af32 81ae      	LDD  R26,Y+6
00af33 81bf      	LDD  R27,Y+6+1
00af34 940e b8f4 	CALL SUBOPT_0x10D
                 _0x208004E:
00af36 01de      	MOVW R26,R28
00af37 59ae      	SUBI R26,LOW(-(98))
00af38 4fbf      	SBCI R27,HIGH(-(98))
00af39 940e c7d1 	CALL SUBOPT_0x331
                +
00af3b bf6b     +OUT RAMPZ , R22
00af3c 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00af3d 2f2e      	MOV  R18,R30
00af3e 30e0      	CPI  R30,0
00af3f f411      	BRNE PC+3
00af40 940c b133 	JMP _0x2080050
00af42 2fe1      	MOV  R30,R17
00af43 30e0      	CPI  R30,0
00af44 f439      	BRNE _0x2080054
00af45 3225      	CPI  R18,37
00af46 f411      	BRNE _0x2080055
00af47 e011      	LDI  R17,LOW(1)
00af48 c002      	RJMP _0x2080056
                 _0x2080055:
00af49 940e caee 	CALL SUBOPT_0x3A6
                 _0x2080056:
00af4b c1e6      	RJMP _0x2080053
                 _0x2080054:
00af4c 30e1      	CPI  R30,LOW(0x1)
00af4d f4c1      	BRNE _0x2080057
00af4e 3225      	CPI  R18,37
00af4f f419      	BRNE _0x2080058
00af50 940e caee 	CALL SUBOPT_0x3A6
00af52 c1de      	RJMP _0x2080138
                 _0x2080058:
00af53 e012      	LDI  R17,LOW(2)
00af54 e0e0      	LDI  R30,LOW(0)
00af55 8fe9      	STD  Y+25,R30
00af56 e000      	LDI  R16,LOW(0)
00af57 322d      	CPI  R18,45
00af58 f411      	BRNE _0x2080059
00af59 e001      	LDI  R16,LOW(1)
00af5a c1d7      	RJMP _0x2080053
                 _0x2080059:
00af5b 322b      	CPI  R18,43
00af5c f419      	BRNE _0x208005A
00af5d e2eb      	LDI  R30,LOW(43)
00af5e 8fe9      	STD  Y+25,R30
00af5f c1d2      	RJMP _0x2080053
                 _0x208005A:
00af60 3220      	CPI  R18,32
00af61 f419      	BRNE _0x208005B
00af62 e2e0      	LDI  R30,LOW(32)
00af63 8fe9      	STD  Y+25,R30
00af64 c1cd      	RJMP _0x2080053
                 _0x208005B:
00af65 c002      	RJMP _0x208005C
                 _0x2080057:
00af66 30e2      	CPI  R30,LOW(0x2)
00af67 f439      	BRNE _0x208005D
                 _0x208005C:
00af68 e050      	LDI  R21,LOW(0)
00af69 e013      	LDI  R17,LOW(3)
00af6a 3320      	CPI  R18,48
00af6b f411      	BRNE _0x208005E
00af6c 6800      	ORI  R16,LOW(128)
00af6d c1c4      	RJMP _0x2080053
                 _0x208005E:
00af6e c002      	RJMP _0x208005F
                 _0x208005D:
00af6f 30e3      	CPI  R30,LOW(0x3)
00af70 f491      	BRNE _0x2080060
                 _0x208005F:
00af71 3320      	CPI  R18,48
00af72 f010      	BRLO _0x2080062
00af73 332a      	CPI  R18,58
00af74 f008      	BRLO _0x2080063
                 _0x2080062:
00af75 c007      	RJMP _0x2080061
                 _0x2080063:
00af76 e0aa      	LDI  R26,LOW(10)
00af77 9f5a      	MUL  R21,R26
00af78 2d50      	MOV  R21,R0
00af79 2fe2      	MOV  R30,R18
00af7a 53e0      	SUBI R30,LOW(48)
00af7b 0f5e      	ADD  R21,R30
00af7c c1b5      	RJMP _0x2080053
                 _0x2080061:
00af7d e040      	LDI  R20,LOW(0)
00af7e 322e      	CPI  R18,46
00af7f f411      	BRNE _0x2080064
00af80 e014      	LDI  R17,LOW(4)
00af81 c1b0      	RJMP _0x2080053
                 _0x2080064:
00af82 c00f      	RJMP _0x2080065
                 _0x2080060:
00af83 30e4      	CPI  R30,LOW(0x4)
00af84 f499      	BRNE _0x2080067
00af85 3320      	CPI  R18,48
00af86 f010      	BRLO _0x2080069
00af87 332a      	CPI  R18,58
00af88 f008      	BRLO _0x208006A
                 _0x2080069:
00af89 c008      	RJMP _0x2080068
                 _0x208006A:
00af8a 6200      	ORI  R16,LOW(32)
00af8b e0aa      	LDI  R26,LOW(10)
00af8c 9f4a      	MUL  R20,R26
00af8d 2d40      	MOV  R20,R0
00af8e 2fe2      	MOV  R30,R18
00af8f 53e0      	SUBI R30,LOW(48)
00af90 0f4e      	ADD  R20,R30
00af91 c1a0      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00af92 362c      	CPI  R18,108
00af93 f419      	BRNE _0x208006B
00af94 6002      	ORI  R16,LOW(2)
00af95 e015      	LDI  R17,LOW(5)
00af96 c19b      	RJMP _0x2080053
                 _0x208006B:
00af97 c004      	RJMP _0x208006C
                 _0x2080067:
00af98 30e5      	CPI  R30,LOW(0x5)
00af99 f011      	BREQ PC+3
00af9a 940c b132 	JMP _0x2080053
                 _0x208006C:
00af9c 2fe2      	MOV  R30,R18
00af9d 36e3      	CPI  R30,LOW(0x63)
00af9e f459      	BRNE _0x2080071
00af9f 940e caf6 	CALL SUBOPT_0x3A7
00afa1 940e cafd 	CALL SUBOPT_0x3A8
00afa3 940e caf6 	CALL SUBOPT_0x3A7
00afa5 81a4      	LDD  R26,Z+4
00afa6 93aa      	ST   -Y,R26
00afa7 940e cb04 	CALL SUBOPT_0x3A9
00afa9 c187      	RJMP _0x2080072
                 _0x2080071:
00afaa 34e5      	CPI  R30,LOW(0x45)
00afab f011      	BREQ _0x2080075
00afac 36e5      	CPI  R30,LOW(0x65)
00afad f409      	BRNE _0x2080076
                 _0x2080075:
00afae c004      	RJMP _0x2080077
                 _0x2080076:
00afaf 36e6      	CPI  R30,LOW(0x66)
00afb0 f011      	BREQ PC+3
00afb1 940c aff5 	JMP _0x2080078
                 _0x2080077:
00afb3 01fe      	MOVW R30,R28
00afb4 967a      	ADIW R30,26
00afb5 8be8      	STD  Y+16,R30
00afb6 8bf9      	STD  Y+16+1,R31
00afb7 940e cb0b 	CALL SUBOPT_0x3AA
00afb9 940e ce98 	CALL __GETD1P
00afbb 940e b820 	CALL SUBOPT_0xE7
00afbd 940e cb12 	CALL SUBOPT_0x3AB
00afbf 85af      	LDD  R26,Y+15
00afc0 23aa      	TST  R26
00afc1 f022      	BRMI _0x2080079
00afc2 8da9      	LDD  R26,Y+25
00afc3 32ab      	CPI  R26,LOW(0x2B)
00afc4 f049      	BREQ _0x208007B
00afc5 c014      	RJMP _0x208007C
                 _0x2080079:
00afc6 940e b7b4 	CALL SUBOPT_0xD7
00afc8 940e cb8b 	CALL __ANEGF1
00afca 940e b820 	CALL SUBOPT_0xE7
00afcc e2ed      	LDI  R30,LOW(45)
00afcd 8fe9      	STD  Y+25,R30
                 _0x208007B:
00afce ff07      	SBRS R16,7
00afcf c005      	RJMP _0x208007D
00afd0 8de9      	LDD  R30,Y+25
00afd1 93ea      	ST   -Y,R30
00afd2 940e cb04 	CALL SUBOPT_0x3A9
00afd4 c005      	RJMP _0x208007E
                 _0x208007D:
00afd5 940e c7b2 	CALL SUBOPT_0x32B
00afd7 9731      	SBIW R30,1
00afd8 8da9      	LDD  R26,Y+25
00afd9 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00afda ff05      	SBRS R16,5
00afdb e046      	LDI  R20,LOW(6)
00afdc 3626      	CPI  R18,102
00afdd f441      	BRNE _0x2080080
00afde 940e bae6 	CALL SUBOPT_0x162
00afe0 934a      	ST   -Y,R20
00afe1 89ad      	LDD  R26,Y+21
00afe2 89be      	LDD  R27,Y+21+1
00afe3 940e 9497 	CALL _ftoa
00afe5 c007      	RJMP _0x2080081
                 _0x2080080:
00afe6 940e bae6 	CALL SUBOPT_0x162
00afe8 934a      	ST   -Y,R20
00afe9 932a      	ST   -Y,R18
00afea 89ae      	LDD  R26,Y+22
00afeb 89bf      	LDD  R27,Y+22+1
00afec de4e      	RCALL __ftoe_G104
                 _0x2080081:
00afed 01fe      	MOVW R30,R28
00afee 967a      	ADIW R30,26
00afef 940e c76c 	CALL SUBOPT_0x31F
00aff1 940e 97c5 	CALL _strlen
00aff3 2f1e      	MOV  R17,R30
00aff4 c027      	RJMP _0x2080082
                 _0x2080078:
00aff5 37e3      	CPI  R30,LOW(0x73)
00aff6 f469      	BRNE _0x2080084
00aff7 940e cb12 	CALL SUBOPT_0x3AB
00aff9 940e cb0b 	CALL SUBOPT_0x3AA
00affb 9614      	ADIW R26,4
00affc 940e ce94 	CALL __GETW1P
00affe 940e c76c 	CALL SUBOPT_0x31F
00b000 940e 97c5 	CALL _strlen
00b002 2f1e      	MOV  R17,R30
00b003 c011      	RJMP _0x2080085
                 _0x2080084:
00b004 37e0      	CPI  R30,LOW(0x70)
00b005 f4d9      	BRNE _0x2080087
00b006 940e cb12 	CALL SUBOPT_0x3AB
00b008 940e cb0b 	CALL SUBOPT_0x3AA
00b00a 9614      	ADIW R26,4
00b00b 940e ce98 	CALL __GETD1P
00b00d 940e c6e6 	CALL SUBOPT_0x30A
00b00f 940e c884 	CALL SUBOPT_0x346
00b011 940e 97d1 	CALL _strlenf
00b013 2f1e      	MOV  R17,R30
00b014 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00b015 770f      	ANDI R16,LOW(127)
00b016 3040      	CPI  R20,0
00b017 f011      	BREQ _0x2080089
00b018 1741      	CP   R20,R17
00b019 f008      	BRLO _0x208008A
                 _0x2080089:
00b01a c001      	RJMP _0x2080088
                 _0x208008A:
00b01b 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00b01c e040      	LDI  R20,LOW(0)
00b01d e0e0      	LDI  R30,LOW(0)
00b01e 8fe8      	STD  Y+24,R30
00b01f e030      	LDI  R19,LOW(0)
00b020 c072      	RJMP _0x208008B
                 _0x2080087:
00b021 36e4      	CPI  R30,LOW(0x64)
00b022 f011      	BREQ _0x208008E
00b023 36e9      	CPI  R30,LOW(0x69)
00b024 f411      	BRNE _0x208008F
                 _0x208008E:
00b025 6004      	ORI  R16,LOW(4)
00b026 c002      	RJMP _0x2080090
                 _0x208008F:
00b027 37e5      	CPI  R30,LOW(0x75)
00b028 f4a1      	BRNE _0x2080091
                 _0x2080090:
00b029 e0ea      	LDI  R30,LOW(10)
00b02a 8fe8      	STD  Y+24,R30
00b02b ff01      	SBRS R16,1
00b02c c008      	RJMP _0x2080092
                +
00b02d e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00b02e ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00b02f e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00b030 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00b031 940e c6eb 	CALL SUBOPT_0x30B
00b033 e01a      	LDI  R17,LOW(10)
00b034 c023      	RJMP _0x2080093
                 _0x2080092:
                +
00b035 e1e0     +LDI R30 , LOW ( 0x2710 )
00b036 e2f7     +LDI R31 , HIGH ( 0x2710 )
00b037 e060     +LDI R22 , BYTE3 ( 0x2710 )
00b038 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00b039 940e c6eb 	CALL SUBOPT_0x30B
00b03b e015      	LDI  R17,LOW(5)
00b03c c01b      	RJMP _0x2080093
                 _0x2080091:
00b03d 35e8      	CPI  R30,LOW(0x58)
00b03e f411      	BRNE _0x2080095
00b03f 6008      	ORI  R16,LOW(8)
00b040 c004      	RJMP _0x2080096
                 _0x2080095:
00b041 37e8      	CPI  R30,LOW(0x78)
00b042 f011      	BREQ PC+3
00b043 940c b131 	JMP _0x20800D4
                 _0x2080096:
00b045 e1e0      	LDI  R30,LOW(16)
00b046 8fe8      	STD  Y+24,R30
00b047 ff01      	SBRS R16,1
00b048 c008      	RJMP _0x2080098
                +
00b049 e0e0     +LDI R30 , LOW ( 0x10000000 )
00b04a e0f0     +LDI R31 , HIGH ( 0x10000000 )
00b04b e060     +LDI R22 , BYTE3 ( 0x10000000 )
00b04c e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00b04d 940e c6eb 	CALL SUBOPT_0x30B
00b04f e018      	LDI  R17,LOW(8)
00b050 c007      	RJMP _0x2080093
                 _0x2080098:
                +
00b051 e0e0     +LDI R30 , LOW ( 0x1000 )
00b052 e1f0     +LDI R31 , HIGH ( 0x1000 )
00b053 e060     +LDI R22 , BYTE3 ( 0x1000 )
00b054 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00b055 940e c6eb 	CALL SUBOPT_0x30B
00b057 e014      	LDI  R17,LOW(4)
                 _0x2080093:
00b058 3040      	CPI  R20,0
00b059 f011      	BREQ _0x2080099
00b05a 770f      	ANDI R16,LOW(127)
00b05b c001      	RJMP _0x208009A
                 _0x2080099:
00b05c e041      	LDI  R20,LOW(1)
                 _0x208009A:
00b05d ff01      	SBRS R16,1
00b05e c008      	RJMP _0x208009B
00b05f 940e cb12 	CALL SUBOPT_0x3AB
00b061 940e cb0b 	CALL SUBOPT_0x3AA
00b063 9614      	ADIW R26,4
00b064 940e ce98 	CALL __GETD1P
00b066 c013      	RJMP _0x2080139
                 _0x208009B:
00b067 ff02      	SBRS R16,2
00b068 c00a      	RJMP _0x208009D
00b069 940e cb12 	CALL SUBOPT_0x3AB
00b06b 940e cb0b 	CALL SUBOPT_0x3AA
00b06d 9614      	ADIW R26,4
00b06e 940e ce94 	CALL __GETW1P
00b070 940e cdbd 	CALL __CWD1
00b072 c007      	RJMP _0x2080139
                 _0x208009D:
00b073 940e cb12 	CALL SUBOPT_0x3AB
00b075 940e cb0b 	CALL SUBOPT_0x3AA
00b077 9614      	ADIW R26,4
00b078 940e b2f1 	CALL SUBOPT_0x1E
                 _0x2080139:
                +
00b07a 87ec     +STD Y + 12 , R30
00b07b 87fd     +STD Y + 12 + 1 , R31
00b07c 876e     +STD Y + 12 + 2 , R22
00b07d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00b07e ff02      	SBRS R16,2
00b07f c012      	RJMP _0x208009F
00b080 85af      	LDD  R26,Y+15
00b081 23aa      	TST  R26
00b082 f442      	BRPL _0x20800A0
00b083 940e b7b4 	CALL SUBOPT_0xD7
00b085 940e cd5a 	CALL __ANEGD1
00b087 940e b820 	CALL SUBOPT_0xE7
00b089 e2ed      	LDI  R30,LOW(45)
00b08a 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00b08b 8de9      	LDD  R30,Y+25
00b08c 30e0      	CPI  R30,0
00b08d f019      	BREQ _0x20800A1
00b08e 5f1f      	SUBI R17,-LOW(1)
00b08f 5f4f      	SUBI R20,-LOW(1)
00b090 c001      	RJMP _0x20800A2
                 _0x20800A1:
00b091 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00b092 2f34      	MOV  R19,R20
                 _0x208008B:
00b093 fd00      	SBRC R16,0
00b094 c014      	RJMP _0x20800A3
                 _0x20800A4:
00b095 1715      	CP   R17,R21
00b096 f410      	BRSH _0x20800A7
00b097 1735      	CP   R19,R21
00b098 f008      	BRLO _0x20800A8
                 _0x20800A7:
00b099 c00f      	RJMP _0x20800A6
                 _0x20800A8:
00b09a ff07      	SBRS R16,7
00b09b c008      	RJMP _0x20800A9
00b09c ff02      	SBRS R16,2
00b09d c004      	RJMP _0x20800AA
00b09e 7f0b      	ANDI R16,LOW(251)
00b09f 8d29      	LDD  R18,Y+25
00b0a0 5011      	SUBI R17,LOW(1)
00b0a1 c001      	RJMP _0x20800AB
                 _0x20800AA:
00b0a2 e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00b0a3 c001      	RJMP _0x20800AC
                 _0x20800A9:
00b0a4 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00b0a5 940e caee 	CALL SUBOPT_0x3A6
00b0a7 5051      	SUBI R21,LOW(1)
00b0a8 cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00b0a9 1714      	CP   R17,R20
00b0aa f490      	BRSH _0x20800AF
00b0ab 6100      	ORI  R16,LOW(16)
00b0ac ff02      	SBRS R16,2
00b0ad c006      	RJMP _0x20800B0
00b0ae 940e cb14 	CALL SUBOPT_0x3AC
00b0b0 f009      	BREQ _0x20800B1
00b0b1 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00b0b2 5011      	SUBI R17,LOW(1)
00b0b3 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00b0b4 e3e0      	LDI  R30,LOW(48)
00b0b5 93ea      	ST   -Y,R30
00b0b6 940e cb04 	CALL SUBOPT_0x3A9
00b0b8 3050      	CPI  R21,0
00b0b9 f009      	BREQ _0x20800B2
00b0ba 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00b0bb 5041      	SUBI R20,LOW(1)
00b0bc cfec      	RJMP _0x20800AD
                 _0x20800AF:
00b0bd 2f31      	MOV  R19,R17
00b0be 8de8      	LDD  R30,Y+24
00b0bf 30e0      	CPI  R30,0
00b0c0 f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00b0c1 3030      	CPI  R19,0
00b0c2 f0a9      	BREQ _0x20800B6
00b0c3 ff03      	SBRS R16,3
00b0c4 c007      	RJMP _0x20800B7
00b0c5 01de      	MOVW R26,R28
00b0c6 9650      	ADIW R26,16
00b0c7 940e c7d1 	CALL SUBOPT_0x331
                +
00b0c9 bf6b     +OUT RAMPZ , R22
00b0ca 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00b0cb c005      	RJMP _0x20800B8
                 _0x20800B7:
00b0cc 89a8      	LDD  R26,Y+16
00b0cd 89b9      	LDD  R27,Y+16+1
00b0ce 912d      	LD   R18,X+
00b0cf 8ba8      	STD  Y+16,R26
00b0d0 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00b0d1 940e caee 	CALL SUBOPT_0x3A6
00b0d3 3050      	CPI  R21,0
00b0d4 f009      	BREQ _0x20800B9
00b0d5 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00b0d6 5031      	SUBI R19,LOW(1)
00b0d7 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00b0d8 c04e      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00b0d9 940e b7c6 	CALL SUBOPT_0xDA
00b0db 940e b26d 	CALL SUBOPT_0xB
00b0dd 940e ce34 	CALL __DIVD21U
00b0df 2f2e      	MOV  R18,R30
00b0e0 302a      	CPI  R18,10
00b0e1 f030      	BRLO _0x20800BE
00b0e2 ff03      	SBRS R16,3
00b0e3 c002      	RJMP _0x20800BF
00b0e4 5c29      	SUBI R18,-LOW(55)
00b0e5 c001      	RJMP _0x20800C0
                 _0x20800BF:
00b0e6 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00b0e7 c001      	RJMP _0x20800C1
                 _0x20800BE:
00b0e8 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00b0e9 fd04      	SBRC R16,4
00b0ea c01c      	RJMP _0x20800C3
00b0eb 3321      	CPI  R18,49
00b0ec f438      	BRSH _0x20800C5
                +
00b0ed 89ac     +LDD R26 , Y + 20
00b0ee 89bd     +LDD R27 , Y + 20 + 1
00b0ef 898e     +LDD R24 , Y + 20 + 2
00b0f0 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00b0f1 940e c8ac 	CALL SUBOPT_0x34C
00b0f3 f409      	BRNE _0x20800C4
                 _0x20800C5:
00b0f4 c00b      	RJMP _0x20800C7
                 _0x20800C4:
00b0f5 1743      	CP   R20,R19
00b0f6 f440      	BRSH _0x208013A
00b0f7 1753      	CP   R21,R19
00b0f8 f010      	BRLO _0x20800CA
00b0f9 ff00      	SBRS R16,0
00b0fa c001      	RJMP _0x20800CB
                 _0x20800CA:
00b0fb c010      	RJMP _0x20800C9
                 _0x20800CB:
00b0fc e220      	LDI  R18,LOW(32)
00b0fd ff07      	SBRS R16,7
00b0fe c008      	RJMP _0x20800CC
                 _0x208013A:
00b0ff e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00b100 6100      	ORI  R16,LOW(16)
00b101 ff02      	SBRS R16,2
00b102 c004      	RJMP _0x20800CD
00b103 940e cb14 	CALL SUBOPT_0x3AC
00b105 f009      	BREQ _0x20800CE
00b106 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00b107 940e caee 	CALL SUBOPT_0x3A6
00b109 3050      	CPI  R21,0
00b10a f009      	BREQ _0x20800CF
00b10b 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00b10c 5031      	SUBI R19,LOW(1)
00b10d 940e b7c6 	CALL SUBOPT_0xDA
00b10f 940e b26d 	CALL SUBOPT_0xB
00b111 940e ce76 	CALL __MODD21U
00b113 940e b820 	CALL SUBOPT_0xE7
00b115 8de8      	LDD  R30,Y+24
                +
00b116 89ac     +LDD R26 , Y + 20
00b117 89bd     +LDD R27 , Y + 20 + 1
00b118 898e     +LDD R24 , Y + 20 + 2
00b119 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00b11a 27ff      	CLR  R31
00b11b 2766      	CLR  R22
00b11c 2777      	CLR  R23
00b11d 940e ce34 	CALL __DIVD21U
00b11f 940e c6eb 	CALL SUBOPT_0x30B
00b121 940e b7c6 	CALL SUBOPT_0xDA
00b123 940e cf1c 	CALL __CPD10
00b125 f009      	BREQ _0x20800BD
00b126 cfb2      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00b127 ff00      	SBRS R16,0
00b128 c008      	RJMP _0x20800D0
                 _0x20800D1:
00b129 3050      	CPI  R21,0
00b12a f031      	BREQ _0x20800D3
00b12b 5051      	SUBI R21,LOW(1)
00b12c e2e0      	LDI  R30,LOW(32)
00b12d 93ea      	ST   -Y,R30
00b12e 940e cb04 	CALL SUBOPT_0x3A9
00b130 cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00b131 e010      	LDI  R17,LOW(0)
                 _0x2080053:
00b132 ce03      	RJMP _0x208004E
                 _0x2080050:
00b133 81ae      	LDD  R26,Y+6
00b134 81bf      	LDD  R27,Y+6+1
00b135 940e ce94 	CALL __GETW1P
00b137 940e cf3f 	CALL __LOADLOCR6
00b139 96ef      	ADIW R28,63
00b13a 96a7      	ADIW R28,39
00b13b 9508      	RET
                 _sprintf:
00b13c 92ff      	PUSH R15
00b13d 2ef8      	MOV  R15,R24
00b13e 9726      	SBIW R28,6
00b13f 940e cf3a 	CALL __SAVELOCR4
00b141 01de      	MOVW R26,R28
00b142 961e      	ADIW R26,14
00b143 940e cd34 	CALL __ADDW2R15
00b145 940e ce94 	CALL __GETW1P
00b147 9730      	SBIW R30,0
00b148 f419      	BRNE _0x20800D5
00b149 efef      	LDI  R30,LOW(65535)
00b14a efff      	LDI  R31,HIGH(65535)
00b14b c023      	RJMP _0x20E0004
                 _0x20800D5:
00b14c 01de      	MOVW R26,R28
00b14d 9616      	ADIW R26,6
00b14e 940e cd34 	CALL __ADDW2R15
00b150 018d      	MOVW R16,R26
00b151 01de      	MOVW R26,R28
00b152 961e      	ADIW R26,14
00b153 940e cd34 	CALL __ADDW2R15
00b155 940e c7c8 	CALL SUBOPT_0x32F
00b157 e0e0      	LDI  R30,LOW(0)
00b158 87e8      	STD  Y+8,R30
00b159 87e9      	STD  Y+8+1,R30
00b15a 01de      	MOVW R26,R28
00b15b 961a      	ADIW R26,10
00b15c 940e cd34 	CALL __ADDW2R15
00b15e 940e ce98 	CALL __GETD1P
00b160 940e cec8 	CALL __PUTPARD1
00b162 931a      	ST   -Y,R17
00b163 930a      	ST   -Y,R16
00b164 940e cb29 	CALL SUBOPT_0x3AD
00b166 01de      	MOVW R26,R28
00b167 961e      	ADIW R26,14
00b168 ddb0      	RCALL __print_G104
00b169 019f      	MOVW R18,R30
00b16a 81ae      	LDD  R26,Y+6
00b16b 81bf      	LDD  R27,Y+6+1
00b16c e0e0      	LDI  R30,LOW(0)
00b16d 93ec      	ST   X,R30
00b16e 01f9      	MOVW R30,R18
                 _0x20E0004:
00b16f 940e cf41 	CALL __LOADLOCR4
00b171 962a      	ADIW R28,10
00b172 90ff      	POP  R15
00b173 9508      	RET
                 _vsprintf:
00b174 93ba      	ST   -Y,R27
00b175 93aa      	ST   -Y,R26
00b176 9726      	SBIW R28,6
00b177 931a      	ST   -Y,R17
00b178 930a      	ST   -Y,R16
00b179 85ee      	LDD  R30,Y+14
00b17a 85ff      	LDD  R31,Y+14+1
00b17b 9730      	SBIW R30,0
00b17c f419      	BRNE _0x20800D8
00b17d efef      	LDI  R30,LOW(65535)
00b17e efff      	LDI  R31,HIGH(65535)
00b17f c016      	RJMP _0x20E0002
                 _0x20800D8:
00b180 85ee      	LDD  R30,Y+14
00b181 85ff      	LDD  R31,Y+14+1
00b182 83ec      	STD  Y+4,R30
00b183 83fd      	STD  Y+4+1,R31
00b184 e0e0      	LDI  R30,LOW(0)
00b185 83ee      	STD  Y+6,R30
00b186 83ef      	STD  Y+6+1,R30
00b187 940e c64f 	CALL SUBOPT_0x2F3
00b189 940e bc94 	CALL SUBOPT_0x1A9
00b18b 940e cb29 	CALL SUBOPT_0x3AD
00b18d 01de      	MOVW R26,R28
00b18e 961c      	ADIW R26,12
00b18f dd89      	RCALL __print_G104
00b190 018f      	MOVW R16,R30
00b191 81ac      	LDD  R26,Y+4
00b192 81bd      	LDD  R27,Y+4+1
00b193 e0e0      	LDI  R30,LOW(0)
00b194 93ec      	ST   X,R30
00b195 01f8      	MOVW R30,R16
                 _0x20E0002:
00b196 8119      	LDD  R17,Y+1
00b197 8108      	LDD  R16,Y+0
                 _0x20E0003:
00b198 9660      	ADIW R28,16
00b199 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00b19a 93aa      	ST   -Y,R26
00b19b e0e1          ldi  r30,1
00b19c 91f9          ld   r31,y+
00b19d 33f0          cpi  r31,'0'
00b19e f010          brlo isdigit0
00b19f 33fa          cpi  r31,'9'+1
00b1a0 f008          brlo isdigit1
                 isdigit0:
00b1a1 27ee          clr  r30
                 isdigit1:
00b1a2 9508          ret
                 _isprint:
00b1a3 93aa      	ST   -Y,R26
00b1a4 e0e1          ldi  r30,1
00b1a5 91f9          ld   r31,y+
00b1a6 32f0          cpi  r31,32
00b1a7 f010          brlo isprint0
00b1a8 38f0          cpi  r31,128
00b1a9 f008          brlo isprint1
                 isprint0:
00b1aa 27ee          clr  r30
                 isprint1:
00b1ab 9508          ret
                 _isspace:
00b1ac 93aa      	ST   -Y,R26
00b1ad e0e1          ldi  r30,1
00b1ae 91f9          ld   r31,y+
00b1af 32f0          cpi  r31,' '
00b1b0 f029          breq isspace1
00b1b1 30f9          cpi  r31,9
00b1b2 f010          brlo isspace0
00b1b3 30fe          cpi  r31,13+1
00b1b4 f008          brlo isspace1
                 isspace0:
00b1b5 27ee          clr  r30
                 isspace1:
00b1b6 9508          ret
                 _isxdigit:
00b1b7 93aa      	ST   -Y,R26
00b1b8 e0e1          ldi  r30,1
00b1b9 91f9          ld   r31,y+
00b1ba 53f0          subi r31,0x30
00b1bb f040          brcs isxdigit0
00b1bc 30fa          cpi  r31,10
00b1bd f038          brcs isxdigit1
00b1be 75ff          andi r31,0x5f
00b1bf 50f7          subi r31,7
00b1c0 30fa          cpi  r31,10
00b1c1 f010          brcs isxdigit0
00b1c2 31f0          cpi  r31,16
00b1c3 f008          brcs isxdigit1
                 isxdigit0:
00b1c4 27ee          clr  r30
                 isxdigit1:
00b1c5 9508          ret
                 _tolower:
00b1c6 93aa      	ST   -Y,R26
00b1c7 91e9          ld   r30,y+
00b1c8 34e1          cpi  r30,'A'
00b1c9 f018          brlo tolower1
00b1ca 35eb          cpi  r30,'Z'+1
00b1cb f408          brcc tolower1
00b1cc 5ee0          subi r30,-32
                 tolower1:
00b1cd 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00b1ce 940e cecd 	CALL __PUTPARD2
00b1d0 817b         ldd  r23,y+3
00b1d1 816a         ldd  r22,y+2
00b1d2 81f9         ldd  r31,y+1
00b1d3 81e8         ld   r30,y
00b1d4 fb77         bst  r23,7
00b1d5 0f77         lsl  r23
00b1d6 fd67         sbrc r22,7
00b1d7 6071         sbr  r23,1
00b1d8 2f97         mov  r25,r23
00b1d9 579e         subi r25,0x7e
00b1da f081         breq __ftrunc0
00b1db f078         brcs __ftrunc0
00b1dc 3198         cpi  r25,24
00b1dd f490         brsh __ftrunc1
00b1de 27aa         clr  r26
00b1df 27bb         clr  r27
00b1e0 2788         clr  r24
                 __ftrunc2:
00b1e1 9408         sec
00b1e2 9587         ror  r24
00b1e3 95b7         ror  r27
00b1e4 95a7         ror  r26
00b1e5 959a         dec  r25
00b1e6 f7d1         brne __ftrunc2
00b1e7 23ea         and  r30,r26
00b1e8 23fb         and  r31,r27
00b1e9 2368         and  r22,r24
00b1ea c005         rjmp __ftrunc1
                 __ftrunc0:
00b1eb 94e8         clt
00b1ec 2777         clr  r23
00b1ed 27ee         clr  r30
00b1ee 27ff         clr  r31
00b1ef 2766         clr  r22
                 __ftrunc1:
00b1f0 776f         cbr  r22,0x80
00b1f1 9576         lsr  r23
00b1f2 f408         brcc __ftrunc3
00b1f3 6860         sbr  r22,0x80
                 __ftrunc3:
00b1f4 f977         bld  r23,7
00b1f5 91a9         ld   r26,y+
00b1f6 91b9         ld   r27,y+
00b1f7 9189         ld   r24,y+
00b1f8 9199         ld   r25,y+
00b1f9 17ea         cp   r30,r26
00b1fa 07fb         cpc  r31,r27
00b1fb 0768         cpc  r22,r24
00b1fc 0779         cpc  r23,r25
00b1fd fb97         bst  r25,7
00b1fe 9508         ret
                 _floor:
00b1ff 940e cecd 	CALL __PUTPARD2
00b201 940e b5da 	CALL SUBOPT_0x8C
00b203 940e b1ce 	CALL _ftrunc
00b205 940e b67e 	CALL SUBOPT_0xA2
00b207 f419          brne __floor1
                 __floor0:
00b208 940e b5bb 	CALL SUBOPT_0x87
00b20a c009      	RJMP _0x20E0001
                 __floor1:
00b20b f7e6          brtc __floor0
00b20c 940e b5bb 	CALL SUBOPT_0x87
                +
00b20e e0a0     +LDI R26 , LOW ( 0x3F800000 )
00b20f e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00b210 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00b211 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00b212 940e cc2a 	CALL __SUBF12
                 _0x20E0001:
00b214 9624      	ADIW R28,4
00b215 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 _dhtDevice:
001550           	.BYTE 0xA
                 _dataQ:
00155a           	.BYTE 0x64
                 _dataQ_len:
0015be           	.BYTE 0x2
                 _t_S00F0001000:
0015c0           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015c4           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015c5           	.BYTE 0x1
                 _t_S00F0005000:
0015c6           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015da           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015df           	.BYTE 0x5
                 _t_S00F0006000:
0015e4           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
0015ec           	.BYTE 0x2
                 _steadyState_S00F0006000:
0015ee           	.BYTE 0x2
                 _eventQ:
0015f0           	.BYTE 0x78
                 _last_wr_eventQ:
001668           	.BYTE 0x2
                 _last_rd_eventQ:
00166a           	.BYTE 0x2
                 _eventQ_len:
00166c           	.BYTE 0x2
                 _ainAlarm:
00166e           	.BYTE 0x10
                 _mtncAlarm:
00167e           	.BYTE 0x1
                 _powerSrcAlarm:
00167f           	.BYTE 0x1
                 _communicationAlarm:
001680           	.BYTE 0x1
                 _gsmAlarm:
001681           	.BYTE 0x1
                 _gsmBalanceAlarm:
001682           	.BYTE 0x1
                 _t_S0110003000:
001683           	.BYTE 0x4
                 _t_flag_S0110003000:
001687           	.BYTE 0x1
                 _lastCheck_S0110003000:
001688           	.BYTE 0x1
                 _t_S0110004000:
001689           	.BYTE 0x4
                 _t_flag_S0110004000:
00168d           	.BYTE 0x1
                 _lastCheck_S0110004000:
00168e           	.BYTE 0x1
                 _t_S0110005000:
00168f           	.BYTE 0x4
                 _t_flag_S0110005000:
001693           	.BYTE 0x1
                 _t_S0110006000:
001694           	.BYTE 0x8
                 _t_flag_S0110006000:
00169c           	.BYTE 0x2
                 _lastCheck_S0110006000:
00169e           	.BYTE 0x2
                 _t_S0110007000:
0016a0           	.BYTE 0x14
                 _t_flag_S0110007000:
0016b4           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016b9           	.BYTE 0x5
                 _t_S0110008000:
0016be           	.BYTE 0x14
                 _t_flag_S0110008000:
0016d2           	.BYTE 0x5
                 _fat:
0016d7           	.BYTE 0x232
                 _pfat:
001909           	.BYTE 0x2
                 _root_path:
00190b           	.BYTE 0x4
                 _eventLogQueue:
00190f           	.BYTE 0x8C
                 _eventLogQCount:
00199b           	.BYTE 0x1
                 _dataLogQueue:
00199c           	.BYTE 0x6E
                 _dataLogQCount:
001a0a           	.BYTE 0x1
                 _cursor_S0160000000:
001a0b           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a0c           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a0d           	.BYTE 0x1
                 _entPwd_S0160000000:
001a0e           	.BYTE 0x4
                 _newPwd_S0160000000:
001a12           	.BYTE 0x4
                 _confPwd_S0160000000:
001a16           	.BYTE 0x4
                 _setIp_S0160000000:
001a1a           	.BYTE 0xC
                 _setMask_S0160000000:
001a26           	.BYTE 0xC
                 _setGw_S0160000000:
001a32           	.BYTE 0xC
                 _setServer_S0160000000:
001a3e           	.BYTE 0xC
                 _devEn_S0160000000:
001a4a           	.BYTE 0x1
                 _almEn_S0160000000:
001a4b           	.BYTE 0x1
                 _prbEn_S0160000000:
001a4c           	.BYTE 0x5
                 _mute_S0160000000:
001a51           	.BYTE 0x1
                 _vRef_S0160000000:
001a52           	.BYTE 0x3
                 _prb1_S0160000000:
001a55           	.BYTE 0x1
                 _prb2_S0160000000:
001a56           	.BYTE 0x1
                 _n:
001a57           	.BYTE 0x2
                 _a:
001a59           	.BYTE 0x30
                 __seed_G100:
001a89           	.BYTE 0x4
                 _status_G102:
001a8d           	.BYTE 0x1
                 _timer1_G102:
001a8e           	.BYTE 0x1
                 _timer2_G102:
001a8f           	.BYTE 0x1
                 _card_type_G102:
001a90           	.BYTE 0x1
                 _pv_S102000B000:
001a91           	.BYTE 0x1
                 _FatFs_G103:
001a92           	.BYTE 0x2
                 _Fsid_G103:
001a94           	.BYTE 0x2
                 _Drive_G103:
001a96           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
                +
00b216 e020     +LDI R18 , LOW ( 0 )
00b217 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00b218 e040     +LDI R20 , LOW ( 0 )
00b219 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00b21a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00b21b 935a      	ST   -Y,R21
00b21c 934a      	ST   -Y,R20
                +
00b21d e2a6     +LDI R26 , 38
00b21e 9fa4     +MUL R26 , R20
00b21f 01f0     +MOVW R30 , R0
00b220 9fa5     +MUL R26 , R21
00b221 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00b222 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00b223 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00b224 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00b225 81e0      	LD   R30,Z
00b226 940e cdcc 	CALL __LNEGB1
00b228 2fae      	MOV  R26,R30
00b229 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 275 TIMES, CODE SIZE REDUCTION:1093 WORDS
                 SUBOPT_0x3:
00b22a 940e cec8 	CALL __PUTPARD1
00b22c e080      	LDI  R24,0
00b22d 940e 9245 	CALL _printDebug
00b22f 9624      	ADIW R28,4
00b230 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00b231 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00b232 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00b233 0fe2      	ADD  R30,R18
00b234 1ff3      	ADC  R31,R19
00b235 81e0      	LD   R30,Z
00b236 30e0      	CPI  R30,0
00b237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
00b238 01f9      	MOVW R30,R18
00b239 01de      	MOVW R26,R28
00b23a 5baf      	SUBI R26,LOW(-(65))
00b23b 4fbf      	SBCI R27,HIGH(-(65))
00b23c 940e cd87 	CALL __LSLW2
00b23e 0fea      	ADD  R30,R26
00b23f 1ffb      	ADC  R31,R27
00b240 93fa      	ST   -Y,R31
00b241 93ea      	ST   -Y,R30
                +
00b242 e0a5     +LDI R26 , LOW ( 0x5 )
00b243 e0b0     +LDI R27 , HIGH ( 0x5 )
00b244 e080     +LDI R24 , BYTE3 ( 0x5 )
00b245 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00b246 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00b248 01fe      	MOVW R30,R28
00b249 96fd      	ADIW R30,61
00b24a 93fa      	ST   -Y,R31
00b24b 93ea      	ST   -Y,R30
                +
00b24c e0a7     +LDI R26 , LOW ( 0x7 )
00b24d e0b0     +LDI R27 , HIGH ( 0x7 )
00b24e e080     +LDI R24 , BYTE3 ( 0x7 )
00b24f e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00b250 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
00b252 01fe      	MOVW R30,R28
00b253 96f9      	ADIW R30,57
00b254 93fa      	ST   -Y,R31
00b255 93ea      	ST   -Y,R30
                +
00b256 e3ac     +LDI R26 , LOW ( 0x3C )
00b257 e0b0     +LDI R27 , HIGH ( 0x3C )
00b258 e080     +LDI R24 , BYTE3 ( 0x3C )
00b259 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00b25a 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
00b25c 01fe      	MOVW R30,R28
00b25d 96f5      	ADIW R30,53
00b25e 93fa      	ST   -Y,R31
00b25f 93ea      	ST   -Y,R30
                +
00b260 e2ac     +LDI R26 , LOW ( 0x12C )
00b261 e0b1     +LDI R27 , HIGH ( 0x12C )
00b262 e080     +LDI R24 , BYTE3 ( 0x12C )
00b263 e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00b264 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00b266 01fe      	MOVW R30,R28
00b267 93fa      	ST   -Y,R31
00b268 93ea      	ST   -Y,R30
00b269 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00b26a e0a7      	LDI  R26,LOW(7)
00b26b e0b0      	LDI  R27,0
00b26c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0xB:
                +
00b26d 85ac     +LDD R26 , Y + 12
00b26e 85bd     +LDD R27 , Y + 12 + 1
00b26f 858e     +LDD R24 , Y + 12 + 2
00b270 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00b271 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
                +
00b272 89e8     +LDD R30 , Y + 16
00b273 89f9     +LDD R31 , Y + 16 + 1
00b274 896a     +LDD R22 , Y + 16 + 2
00b275 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00b276 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00b277 e1a5      	LDI  R26,LOW(_properties_config)
00b278 e1b1      	LDI  R27,HIGH(_properties_config)
00b279 940e 4665 	CALL _getPropertiesConfig
00b27b e0e0      	LDI  R30,LOW(0)
00b27c 93e0 10f6 	STS  _is_properties_config_update,R30
00b27e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00b27f eba6      	LDI  R26,LOW(_operating_config)
00b280 e1b1      	LDI  R27,HIGH(_operating_config)
00b281 940e 46fa 	CALL _getOperatingConfig
00b283 e0e0      	LDI  R30,LOW(0)
00b284 93e0 10f7 	STS  _is_operating_config_update,R30
00b286 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00b287 0fa2      	ADD  R26,R18
00b288 1fb3      	ADC  R27,R19
00b289 91ec      	LD   R30,X
00b28a 30e0      	CPI  R30,0
00b28b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00b28c e1ad     +LDI R26 , 29
00b28d 9fa2     +MUL R26 , R18
00b28e 01f0     +MOVW R30 , R0
00b28f 9fa3     +MUL R26 , R19
00b290 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00b291 54e2      	SUBI R30,LOW(-_sensor_config)
00b292 4efe      	SBCI R31,HIGH(-_sensor_config)
00b293 01df      	MOVW R26,R30
00b294 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00b295 940e cec8 	CALL __PUTPARD1
00b297 01f9      	MOVW R30,R18
00b298 940e cdbd 	CALL __CWD1
00b29a 940e cec8 	CALL __PUTPARD1
00b29c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 287 TIMES, CODE SIZE REDUCTION:569 WORDS
                 SUBOPT_0x12:
00b29d e084      	LDI  R24,4
00b29e 940e 9245 	CALL _printDebug
00b2a0 9628      	ADIW R28,8
00b2a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00b2a2 0fa2      	ADD  R26,R18
00b2a3 1fb3      	ADC  R27,R19
00b2a4 e0e0      	LDI  R30,LOW(0)
00b2a5 93ec      	ST   X,R30
00b2a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00b2a7 e3ad      	LDI  R26,LOW(_buzz_config)
00b2a8 e1b3      	LDI  R27,HIGH(_buzz_config)
00b2a9 940e 49e0 	CALL _getBuzzerConfig
00b2ab e0e0      	LDI  R30,LOW(0)
00b2ac 93e0 1112 	STS  _is_buzzer_config_update,R30
00b2ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00b2af e0a3     +LDI R26 , 3
00b2b0 9fa2     +MUL R26 , R18
00b2b1 01f0     +MOVW R30 , R0
00b2b2 9fa3     +MUL R26 , R19
00b2b3 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00b2b4 5be1      	SUBI R30,LOW(-_din_config)
00b2b5 4efd      	SBCI R31,HIGH(-_din_config)
00b2b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00b2b7 58e1      	SUBI R30,LOW(-_dout_config)
00b2b8 4efd      	SBCI R31,HIGH(-_dout_config)
00b2b9 01df      	MOVW R26,R30
00b2ba 940e 4886 	CALL _getAuxDoutConfig
00b2bc e0ad      	LDI  R26,LOW(_is_dout_config_update)
00b2bd e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00b2be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00b2bf e6a2      	LDI  R26,LOW(_status_config)
00b2c0 e1b3      	LDI  R27,HIGH(_status_config)
00b2c1 940e 4b0a 	CALL _getStatusReportConfig
00b2c3 e0e0      	LDI  R30,LOW(0)
00b2c4 93e0 1113 	STS  _is_status_config_update,R30
00b2c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00b2c7 e6a5      	LDI  R26,LOW(_env_config)
00b2c8 e1b3      	LDI  R27,HIGH(_env_config)
00b2c9 940e 4a77 	CALL _getEnvAlarmConfig
00b2cb e0e0      	LDI  R30,LOW(0)
00b2cc 93e0 1114 	STS  _is_env_config_update,R30
00b2ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00b2cf 933a      	ST   -Y,R19
00b2d0 932a      	ST   -Y,R18
                +
00b2d1 e0a5     +LDI R26 , 5
00b2d2 9fa2     +MUL R26 , R18
00b2d3 01f0     +MOVW R30 , R0
00b2d4 9fa3     +MUL R26 , R19
00b2d5 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00b2d6 5be6      	SUBI R30,LOW(-_sensor)
00b2d7 4efb      	SBCI R31,HIGH(-_sensor)
00b2d8 01df      	MOVW R26,R30
00b2d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00b2da 01f9      	MOVW R30,R18
00b2db 01de      	MOVW R26,R28
00b2dc 5baf      	SUBI R26,LOW(-(65))
00b2dd 4fbf      	SBCI R27,HIGH(-(65))
00b2de 940e cd87 	CALL __LSLW2
00b2e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1B:
00b2e1 0fae      	ADD  R26,R30
00b2e2 1fbf      	ADC  R27,R31
00b2e3 940e ce98 	CALL __GETD1P
00b2e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1C:
00b2e6 01df      	MOVW R26,R30
00b2e7 01cb      	MOVW R24,R22
00b2e8 940e 3edb 	CALL _TIMER_checkTimerExceed
00b2ea 9730      	SBIW R30,0
00b2eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x1D:
00b2ec 0fea      	ADD  R30,R26
00b2ed 1ffb      	ADC  R31,R27
00b2ee 93fa      	ST   -Y,R31
00b2ef 93ea      	ST   -Y,R30
00b2f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1E:
00b2f1 940e ce94 	CALL __GETW1P
00b2f3 2766      	CLR  R22
00b2f4 2777      	CLR  R23
00b2f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
00b2f6 01df      	MOVW R26,R30
00b2f7 01cb      	MOVW R24,R22
00b2f8 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x20:
00b2fa 5be6      	SUBI R30,LOW(-_sensor)
00b2fb 4efb      	SBCI R31,HIGH(-_sensor)
00b2fc 01df      	MOVW R26,R30
00b2fd 940e ce98 	CALL __GETD1P
00b2ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:133 WORDS
                 SUBOPT_0x21:
00b300 940e cec8 	CALL __PUTPARD1
00b302 e088      	LDI  R24,8
00b303 940e 9245 	CALL _printDebug
00b305 962c      	ADIW R28,12
00b306 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
00b307 940e 6e31 	CALL _checkAlarm
                +
00b309 01de     +MOVW R26 , R28
00b30a 5aa9     +SUBI R26 , LOW ( - 87 )
00b30b 4fbf     +SBCI R27 , HIGH ( - 87 )
00b30c 93ed     +ST X + , R30
00b30d 93fc     +ST X , R31
                 	__PUTW1SX 87
00b30e 9730      	SBIW R30,0
00b30f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00b310 e2a6     +LDI R26 , 38
00b311 9fa4     +MUL R26 , R20
00b312 01f0     +MOVW R30 , R0
00b313 9fa5     +MUL R26 , R21
00b314 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00b315 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
00b316 01de     +MOVW R26 , R28
00b317 5aa9     +SUBI R26 , LOW ( - 87 )
00b318 4fbf     +SBCI R27 , HIGH ( - 87 )
00b319 93ed     +ST X + , R30
00b31a 93fc     +ST X , R31
                 	__PUTW1SX 87
00b31b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
                +
00b31c efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00b31d efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00b31e ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00b31f ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00b320 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
00b321 93e0 1487 	STS  _muteAlarmExpired,R30
00b323 93f0 1488 	STS  _muteAlarmExpired+1,R31
00b325 9360 1489 	STS  _muteAlarmExpired+2,R22
00b327 9370 148a 	STS  _muteAlarmExpired+3,R23
00b329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
00b32a 01fe     +MOVW R30 , R28
00b32b 5ae9     +SUBI R30 , LOW ( - 87 )
00b32c 4fff     +SBCI R31 , HIGH ( - 87 )
00b32d 9001     +LD R0 , Z +
00b32e 81f0     +LD R31 , Z
00b32f 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00b330 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x28:
00b331 93fa      	ST   -Y,R31
00b332 93ea      	ST   -Y,R30
                +
00b333 e0aa     +LDI R26 , LOW ( 0xA )
00b334 e0b0     +LDI R27 , HIGH ( 0xA )
00b335 e080     +LDI R24 , BYTE3 ( 0xA )
00b336 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00b337 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29:
00b339 91a0 146b 	LDS  R26,_sdFreeSpace
00b33b 91b0 146c 	LDS  R27,_sdFreeSpace+1
00b33d 9180 146d 	LDS  R24,_sdFreeSpace+2
00b33f 9190 146e 	LDS  R25,_sdFreeSpace+3
00b341 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x2A:
00b342 27ff      	CLR  R31
00b343 2766      	CLR  R22
00b344 2777      	CLR  R23
00b345 940e cec8 	CALL __PUTPARD1
00b347 cf55      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
00b348 e7ac      	LDI  R26,LOW(_dinStatus)
00b349 e1b4      	LDI  R27,HIGH(_dinStatus)
00b34a 0fa2      	ADD  R26,R18
00b34b 1fb3      	ADC  R27,R19
00b34c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
00b34d e0f0      	LDI  R31,0
00b34e 9730      	SBIW R30,0
00b34f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2D:
                +
00b350 e0a0     +LDI R26 , LOW ( 0x0 )
00b351 e0b0     +LDI R27 , HIGH ( 0x0 )
00b352 e080     +LDI R24 , BYTE3 ( 0x0 )
00b353 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00b354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E:
00b355 91a0 1483 	LDS  R26,_batteryVolt
00b357 91b0 1484 	LDS  R27,_batteryVolt+1
00b359 9180 1485 	LDS  R24,_batteryVolt+2
00b35b 9190 1486 	LDS  R25,_batteryVolt+3
00b35d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:127 WORDS
                 SUBOPT_0x2F:
00b35e b1e6      	IN   R30,0x6
00b35f 7ce0      	ANDI R30,LOW(0xC0)
00b360 e0f0      	LDI  R31,0
00b361 940e cd90 	CALL __ASRW2
00b363 940e cd8c 	CALL __ASRW4
00b365 95e0      	COM  R30
00b366 95f0      	COM  R31
00b367 70e3      	ANDI R30,LOW(0x3)
00b368 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x30:
00b369 71e0      	ANDI R30,LOW(0x10)
00b36a e0f0      	LDI  R31,0
00b36b 940e cd8c 	CALL __ASRW4
00b36d 9730      	SBIW R30,0
00b36e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x31:
00b36f 940e cec8 	CALL __PUTPARD1
00b371 91e0 10f4 	LDS  R30,_hwCalId
00b373 91f0 10f5 	LDS  R31,_hwCalId+1
00b375 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x32:
00b376 e3a6      	LDI  R26,LOW(_adcData)
00b377 e1b4      	LDI  R27,HIGH(_adcData)
00b378 940e cd87 	CALL __LSLW2
00b37a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x33:
00b37b e8a9      	LDI  R26,LOW(_eep_vref_val)
00b37c e0b5      	LDI  R27,HIGH(_eep_vref_val)
00b37d 940e cee7 	CALL __EEPROMRDD
00b37f 01df      	MOVW R26,R30
00b380 01cb      	MOVW R24,R22
                +
00b381 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00b382 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00b383 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00b384 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00b385 940e cccf 	CALL __DIVF21
00b387 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 81 TIMES, CODE SIZE REDUCTION:157 WORDS
                 SUBOPT_0x34:
00b388 2766      	CLR  R22
00b389 2777      	CLR  R23
00b38a 940e cec8 	CALL __PUTPARD1
00b38c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x35:
00b38d eca8      	LDI  R26,LOW(200)
00b38e e0b0      	LDI  R27,0
00b38f 940c cb81 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00b391 e080      	LDI  R24,0
00b392 940e 9245 	CALL _printDebug
00b394 9624      	ADIW R28,4
00b395 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x37:
00b396 940e cf38 	CALL __SAVELOCR6
                +
00b398 e000     +LDI R16 , LOW ( 0 )
00b399 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00b39a ce7b      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00b39b e1ad     +LDI R26 , 29
00b39c 9fa2     +MUL R26 , R18
00b39d 01f0     +MOVW R30 , R0
00b39e 9fa3     +MUL R26 , R19
00b39f 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00b3a0 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00b3a1 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00b3a2 81e0      	LD   R30,Z
00b3a3 30e0      	CPI  R30,0
00b3a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00b3a5 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00b3a7 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00b3a9 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00b3ab 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00b3ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00b3ae 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00b3af efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00b3b0 07be     +CPC R27 , R30
00b3b1 efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00b3b2 078e     +CPC R24 , R30
00b3b3 efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00b3b4 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00b3b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00b3b6 93fa      	ST   -Y,R31
00b3b7 93ea      	ST   -Y,R30
                +
00b3b8 e0af     +LDI R26 , LOW ( 0xF )
00b3b9 e0b0     +LDI R27 , HIGH ( 0xF )
00b3ba e080     +LDI R24 , BYTE3 ( 0xF )
00b3bb e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00b3bc 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00b3be 940e cec8 	CALL __PUTPARD1
00b3c0 91a0 1377 	LDS  R26,_baseCounter
00b3c2 91b0 1378 	LDS  R27,_baseCounter+1
00b3c4 9180 1379 	LDS  R24,_baseCounter+2
00b3c6 9190 137a 	LDS  R25,_baseCounter+3
00b3c8 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00b3ca 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00b3cc 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00b3ce 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00b3d0 940e cd42 	CALL __SUBD12
00b3d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00b3d3 01af      	MOVW R20,R30
                +
00b3d4 2b04     +OR R16 , R20
00b3d5 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00b3d6 2e04      	MOV  R0,R20
00b3d7 2a05      	OR   R0,R21
00b3d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00b3d9 940e 426e 	CALL _DS1672_read
                +
00b3db 83ef     +STD Y + 7 , R30
00b3dc 87f8     +STD Y + 7 + 1 , R31
00b3dd 8769     +STD Y + 7 + 2 , R22
00b3de 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00b3df 81ee      	LDD  R30,Y+6
00b3e0 30e0      	CPI  R30,0
00b3e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00b3e2 81ef     +LDD R30 , Y + 7
00b3e3 85f8     +LDD R31 , Y + 7 + 1
00b3e4 8569     +LDD R22 , Y + 7 + 2
00b3e5 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00b3e6 940e cec8 	CALL __PUTPARD1
00b3e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00b3e9 93ea      	ST   -Y,R30
00b3ea 85ab      	LDD  R26,Y+11
00b3eb 940e 6dc9 	CALL _addEventQueue
00b3ed 01af      	MOVW R20,R30
00b3ee 2355      	TST  R21
00b3ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00b3f0 efef     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00b3f1 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00b3f2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00b3f3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00b3f4 ce35      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00b3f5 933a      	ST   -Y,R19
00b3f6 932a      	ST   -Y,R18
00b3f7 01de      	MOVW R26,R28
00b3f8 9618      	ADIW R26,8
00b3f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00b3fa 01f9      	MOVW R30,R18
00b3fb 9631      	ADIW R30,1
00b3fc 940e cdbd 	CALL __CWD1
00b3fe 940e cec8 	CALL __PUTPARD1
00b400 ce9c      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00b401 940e cec8 	CALL __PUTPARD1
00b403 cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00b404 01f9      	MOVW R30,R18
00b405 9631      	ADIW R30,1
00b406 940e cdbd 	CALL __CWD1
00b408 940e cec8 	CALL __PUTPARD1
00b40a e084      	LDI  R24,4
00b40b 940e 75ba 	CALL _printOLED
00b40d 9628      	ADIW R28,8
00b40e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x46:
00b40f 940e cf38 	CALL __SAVELOCR6
                +
00b411 e000     +LDI R16 , LOW ( 0 )
00b412 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00b413 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00b414 e0f0      	LDI  R31,0
00b415 31e0      	CPI  R30,LOW(0x10)
00b416 e0a0      	LDI  R26,HIGH(0x10)
00b417 07fa      	CPC  R31,R26
00b418 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00b419 e0ab      	LDI  R26,LOW(11)
00b41a e0b0      	LDI  R27,0
00b41b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00b41c 940e cec8 	CALL __PUTPARD1
00b41e 01fa      	MOVW R30,R20
00b41f 940e cdbd 	CALL __CWD1
00b421 940e cec8 	CALL __PUTPARD1
00b423 ce79      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00b424 940e 9717 	CALL _free
00b426 efef      	LDI  R30,LOW(65535)
00b427 efff      	LDI  R31,HIGH(65535)
00b428 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00b429 01fa      	MOVW R30,R20
                +
00b42a 5f4f     +SUBI R20 , LOW ( - 1 )
00b42b 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00b42c 0fe2      	ADD  R30,R18
00b42d 1ff3      	ADC  R31,R19
00b42e 01df      	MOVW R26,R30
00b42f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00b430 01fa      	MOVW R30,R20
                +
00b431 5f4f     +SUBI R20 , LOW ( - 1 )
00b432 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00b433 0fe2      	ADD  R30,R18
00b434 1ff3      	ADC  R31,R19
00b435 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00b436 93fa      	ST   -Y,R31
00b437 93ea      	ST   -Y,R30
00b438 e0a4      	LDI  R26,LOW(4)
00b439 e0b0      	LDI  R27,0
00b43a 940c 9739 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00b43c 940e 426e 	CALL _DS1672_read
                +
00b43e 87e8     +STD Y + 8 , R30
00b43f 87f9     +STD Y + 8 + 1 , R31
00b440 876a     +STD Y + 8 + 2 , R22
00b441 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00b442 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x4F:
                +
00b443 85e8     +LDD R30 , Y + 8
00b444 85f9     +LDD R31 , Y + 8 + 1
00b445 856a     +LDD R22 , Y + 8 + 2
00b446 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00b447 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x50:
00b448 940e cec8 	CALL __PUTPARD1
                +
00b44a 85ee     +LDD R30 , Y + 14
00b44b 85ff     +LDD R31 , Y + 14 + 1
00b44c 8968     +LDD R22 , Y + 14 + 2
00b44d 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00b44e 940e cec8 	CALL __PUTPARD1
00b450 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x51:
                +
00b451 89ea     +LDD R30 , Y + 18
00b452 89fb     +LDD R31 , Y + 18 + 1
00b453 896c     +LDD R22 , Y + 18 + 2
00b454 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00b455 940e cec8 	CALL __PUTPARD1
00b457 e08c      	LDI  R24,12
00b458 940e 9245 	CALL _printDebug
00b45a 9660      	ADIW R28,16
00b45b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x52:
                +
00b45c 85aa     +LDD R26 , Y + 10
00b45d 85bb     +LDD R27 , Y + 10 + 1
00b45e 858c     +LDD R24 , Y + 10 + 2
00b45f 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00b460 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00b461 dffa      	RCALL SUBOPT_0x52
00b462 cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00b463 93ea      	ST   -Y,R30
                +
00b464 85eb     +LDD R30 , Y + 11
00b465 85fc     +LDD R31 , Y + 11 + 1
00b466 856d     +LDD R22 , Y + 11 + 2
00b467 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00b468 940e cec8 	CALL __PUTPARD1
00b46a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00b46b 85ad     +LDD R26 , Y + 13
00b46c 85be     +LDD R27 , Y + 13 + 1
00b46d 858f     +LDD R24 , Y + 13 + 2
00b46e 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00b46f 940c 52cd 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x56:
00b471 01fe      	MOVW R30,R28
00b472 9636      	ADIW R30,6
00b473 93fa      	ST   -Y,R31
00b474 93ea      	ST   -Y,R30
00b475 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x57:
                +
00b476 85ea     +LDD R30 , Y + 10
00b477 85fb     +LDD R31 , Y + 10 + 1
00b478 856c     +LDD R22 , Y + 10 + 2
00b479 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00b47a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00b47b 2fe5      	MOV  R30,R21
00b47c 27ff      	CLR  R31
00b47d 2766      	CLR  R22
00b47e 2777      	CLR  R23
00b47f 940e cec8 	CALL __PUTPARD1
00b481 2fe4      	MOV  R30,R20
00b482 27ff      	CLR  R31
00b483 2766      	CLR  R22
00b484 2777      	CLR  R23
00b485 940e cec8 	CALL __PUTPARD1
00b487 e08c      	LDI  R24,12
00b488 940e 9245 	CALL _printDebug
00b48a 9660      	ADIW R28,16
00b48b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x59:
                +
00b48c 81ae     +LDD R26 , Y + 6
00b48d 81bf     +LDD R27 , Y + 6 + 1
00b48e 8588     +LDD R24 , Y + 6 + 2
00b48f 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00b490 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00b491 01fe      	MOVW R30,R28
00b492 963c      	ADIW R30,12
00b493 93fa      	ST   -Y,R31
00b494 93ea      	ST   -Y,R30
00b495 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x5B:
00b496 940e cec8 	CALL __PUTPARD1
00b498 ddd9      	RCALL SUBOPT_0xC
00b499 940e cec8 	CALL __PUTPARD1
00b49b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00b49c ddd0      	RCALL SUBOPT_0xB
00b49d cf10      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00b49e 01fe      	MOVW R30,R28
00b49f 9670      	ADIW R30,16
00b4a0 93fa      	ST   -Y,R31
00b4a1 93ea      	ST   -Y,R30
00b4a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00b4a3 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00b4a4 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00b4a5 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00b4a7 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00b4a9 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00b4ab bf6c     +OUT EIND , R22
00b4ac 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00b4ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00b4ae 940e cec8 	CALL __PUTPARD1
00b4b0 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00b4b1 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00b4b2 ced5      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x60:
                +
00b4b3 85ee     +LDD R30 , Y + 14
00b4b4 85ff     +LDD R31 , Y + 14 + 1
00b4b5 8968     +LDD R22 , Y + 14 + 2
00b4b6 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00b4b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00b4b8 85ae     +LDD R26 , Y + 14
00b4b9 85bf     +LDD R27 , Y + 14 + 1
00b4ba 8988     +LDD R24 , Y + 14 + 2
00b4bb 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00b4bc 940c 784b 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00b4be 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00b4c0 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00b4c2 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00b4c4 bf6c     +OUT EIND , R22
00b4c5 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00b4c6 01af      	MOVW R20,R30
00b4c7 2355      	TST  R21
00b4c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00b4c9 01fe      	MOVW R30,R28
00b4ca 9637      	ADIW R30,7
00b4cb 93fa      	ST   -Y,R31
00b4cc 93ea      	ST   -Y,R30
00b4cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00b4ce 85eb     +LDD R30 , Y + 11
00b4cf 85fc     +LDD R31 , Y + 11 + 1
00b4d0 856d     +LDD R22 , Y + 11 + 2
00b4d1 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00b4d2 940e cec8 	CALL __PUTPARD1
00b4d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 81 TIMES, CODE SIZE REDUCTION:237 WORDS
                 SUBOPT_0x65:
00b4d5 27ff      	CLR  R31
00b4d6 2766      	CLR  R22
00b4d7 2777      	CLR  R23
00b4d8 940e cec8 	CALL __PUTPARD1
00b4da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x66:
00b4db e08c      	LDI  R24,12
00b4dc 940e 9245 	CALL _printDebug
00b4de 9660      	ADIW R28,16
00b4df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00b4e0 81af     +LDD R26 , Y + 7
00b4e1 85b8     +LDD R27 , Y + 7 + 1
00b4e2 8589     +LDD R24 , Y + 7 + 2
00b4e3 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00b4e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00b4e5 01fe      	MOVW R30,R28
00b4e6 963b      	ADIW R30,11
00b4e7 93fa      	ST   -Y,R31
00b4e8 93ea      	ST   -Y,R30
00b4e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00b4ea eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00b4eb e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00b4ec 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00b4ee 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00b4f0 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00b4f2 bf6c     +OUT EIND , R22
00b4f3 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00b4f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00b4f5 940e cec8 	CALL __PUTPARD1
00b4f7 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00b4f8 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00b4f9 ce8e      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00b4fa 85e9     +LDD R30 , Y + 9
00b4fb 85fa     +LDD R31 , Y + 9 + 1
00b4fc 856b     +LDD R22 , Y + 9 + 2
00b4fd 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00b4fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00b4ff 01fe      	MOVW R30,R28
00b500 9672      	ADIW R30,18
00b501 93fa      	ST   -Y,R31
00b502 93ea      	ST   -Y,R30
00b503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00b504 df57      	RCALL SUBOPT_0x52
00b505 940e cf28 	CALL __CPD02
00b507 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00b508 e0e0      	LDI  R30,LOW(0)
00b509 93e0 1426 	STS  _logDataWait,R30
                +
00b50b e0e0     +LDI R30 , LOW ( 0x0 )
00b50c e0f0     +LDI R31 , HIGH ( 0x0 )
00b50d e060     +LDI R22 , BYTE3 ( 0x0 )
00b50e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00b50f 93e0 1427+STS _logDataWait + ( 1 ) , R30
00b511 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00b513 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00b515 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00b517 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00b518 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00b51a 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00b51c 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00b51e 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00b520 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00b521 01de      	MOVW R26,R28
00b522 9652      	ADIW R26,18
                +
00b523 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00b525 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00b527 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00b529 bf6c     +OUT EIND , R22
00b52a 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00b52b 018f      	MOVW R16,R30
00b52c 2311      	TST  R17
00b52d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00b52e e0e0      	LDI  R30,LOW(0)
00b52f 93e0 142b 	STS  _logEventWait,R30
                +
00b531 e0e0     +LDI R30 , LOW ( 0x0 )
00b532 e0f0     +LDI R31 , HIGH ( 0x0 )
00b533 e060     +LDI R22 , BYTE3 ( 0x0 )
00b534 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00b535 93e0 142c+STS _logEventWait + ( 1 ) , R30
00b537 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00b539 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00b53b 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00b53d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00b53e 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00b540 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00b542 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00b544 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00b546 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x73:
00b547 e0a2      	LDI  R26,LOW(2)
00b548 e0b0      	LDI  R27,0
00b549 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00b54a e6a4      	LDI  R26,LOW(100)
00b54b e0b0      	LDI  R27,0
00b54c 940c cb81 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x75:
00b54e e0a1      	LDI  R26,LOW(1)
00b54f e0b0      	LDI  R27,0
00b550 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00b551 e0a3      	LDI  R26,LOW(3)
00b552 e0b0      	LDI  R27,0
00b553 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:59 WORDS
                 SUBOPT_0x77:
00b554 e0a4      	LDI  R26,LOW(4)
00b555 e0b0      	LDI  R27,0
00b556 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x78:
00b557 01df      	MOVW R26,R30
00b558 940e ce98 	CALL __GETD1P
00b55a 940e cec8 	CALL __PUTPARD1
00b55c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00b55d 93e0 0102 	STS  258,R30
00b55f ce2d      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00b560 e3a2      	LDI  R26,LOW(50)
00b561 e0b0      	LDI  R27,0
00b562 940c cb81 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00b564 920a      	ST   -Y,R0
00b565 921a      	ST   -Y,R1
00b566 92fa      	ST   -Y,R15
00b567 936a      	ST   -Y,R22
00b568 937a      	ST   -Y,R23
00b569 938a      	ST   -Y,R24
00b56a 939a      	ST   -Y,R25
00b56b 93aa      	ST   -Y,R26
00b56c 93ba      	ST   -Y,R27
00b56d 93ea      	ST   -Y,R30
00b56e 93fa      	ST   -Y,R31
00b56f b7eb      	IN   R30,RAMPZ
00b570 93ea      	ST   -Y,R30
00b571 b7ec      	IN   R30,EIND
00b572 93ea      	ST   -Y,R30
00b573 b7ef      	IN   R30,SREG
00b574 93ea      	ST   -Y,R30
00b575 931a      	ST   -Y,R17
00b576 930a      	ST   -Y,R16
00b577 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00b578 91ed      	LD   R30,X+
00b579 91fd      	LD   R31,X+
00b57a 9631      	ADIW R30,1
00b57b 93fe      	ST   -X,R31
00b57c 93ee      	ST   -X,R30
00b57d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00b57e 91a0 10ee 	LDS  R26,_configLen
00b580 91b0 10ef 	LDS  R27,_configLen+1
00b582 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00b583 e0e0      	LDI  R30,LOW(0)
00b584 93e0 10ee 	STS  _configLen,R30
00b586 93e0 10ef 	STS  _configLen+1,R30
00b588 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x7F:
00b589 93ba      	ST   -Y,R27
00b58a 93aa      	ST   -Y,R26
00b58b 940e cf3a 	CALL __SAVELOCR4
00b58d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00b58e 85e8      	LDD  R30,Y+8
00b58f 85f9      	LDD  R31,Y+8+1
00b590 9631      	ADIW R30,1
00b591 87e8      	STD  Y+8,R30
00b592 87f9      	STD  Y+8+1,R31
00b593 9731      	SBIW R30,1
00b594 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x81:
00b595 93ba      	ST   -Y,R27
00b596 93aa      	ST   -Y,R26
00b597 931a      	ST   -Y,R17
00b598 930a      	ST   -Y,R16
00b599 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00b59a 81ea      	LDD  R30,Y+2
00b59b 81fb      	LDD  R31,Y+2+1
00b59c 170e      	CP   R16,R30
00b59d 071f      	CPC  R17,R31
00b59e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00b59f 01f8      	MOVW R30,R16
00b5a0 81ac      	LDD  R26,Y+4
00b5a1 81bd      	LDD  R27,Y+4+1
00b5a2 0fae      	ADD  R26,R30
00b5a3 1fbf      	ADC  R27,R31
00b5a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00b5a5 81a9      	LDD  R26,Y+1
00b5a6 81ba      	LDD  R27,Y+1+1
00b5a7 27ee      	CLR  R30
00b5a8 0fa1      	ADD  R26,R17
00b5a9 1fbe      	ADC  R27,R30
00b5aa 91ec      	LD   R30,X
00b5ab 30e0      	CPI  R30,0
00b5ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00b5ad 81a9      	LDD  R26,Y+1
00b5ae 81ba      	LDD  R27,Y+1+1
00b5af 27ee      	CLR  R30
00b5b0 0fa1      	ADD  R26,R17
00b5b1 1fbe      	ADC  R27,R30
00b5b2 91ac      	LD   R26,X
00b5b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00b5b4 940e cecd 	CALL __PUTPARD2
00b5b6 940e ceb4 	CALL __GETD1S0
00b5b8 940e cf1c 	CALL __CPD10
00b5ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x87:
00b5bb 940e ceb4 	CALL __GETD1S0
00b5bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00b5be 91a0 1377 	LDS  R26,_baseCounter
00b5c0 91b0 1378 	LDS  R27,_baseCounter+1
00b5c2 9180 1379 	LDS  R24,_baseCounter+2
00b5c4 9190 137a 	LDS  R25,_baseCounter+3
00b5c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x89:
                +
00b5c7 81ec     +LDD R30 , Y + 4
00b5c8 81fd     +LDD R31 , Y + 4 + 1
00b5c9 816e     +LDD R22 , Y + 4 + 2
00b5ca 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00b5cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00b5cc 940e cd38 	CALL __ADDD12
00b5ce 940e cebe 	CALL __PUTD1S0
00b5d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00b5d1 91e0 1377 	LDS  R30,_baseCounter
00b5d3 91f0 1378 	LDS  R31,_baseCounter+1
00b5d5 9160 1379 	LDS  R22,_baseCounter+2
00b5d7 9170 137a 	LDS  R23,_baseCounter+3
00b5d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x8C:
00b5da 940e ceb9 	CALL __GETD2S0
00b5dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8D:
00b5dd 940e cec8 	CALL __PUTPARD1
                +
00b5df 85ec     +LDD R30 , Y + 12
00b5e0 85fd     +LDD R31 , Y + 12 + 1
00b5e1 856e     +LDD R22 , Y + 12 + 2
00b5e2 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00b5e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x8E:
                +
00b5e4 e0e0     +LDI R30 , LOW ( 0x0 )
00b5e5 e0f0     +LDI R31 , HIGH ( 0x0 )
00b5e6 e060     +LDI R22 , BYTE3 ( 0x0 )
00b5e7 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00b5e8 940e cea3 	CALL __PUTDP1
00b5ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x8F:
00b5eb 920a      	ST   -Y,R0
00b5ec 921a      	ST   -Y,R1
00b5ed 92fa      	ST   -Y,R15
00b5ee 936a      	ST   -Y,R22
00b5ef 937a      	ST   -Y,R23
00b5f0 938a      	ST   -Y,R24
00b5f1 939a      	ST   -Y,R25
00b5f2 93aa      	ST   -Y,R26
00b5f3 93ba      	ST   -Y,R27
00b5f4 93ea      	ST   -Y,R30
00b5f5 93fa      	ST   -Y,R31
00b5f6 b7eb      	IN   R30,RAMPZ
00b5f7 93ea      	ST   -Y,R30
00b5f8 b7ec      	IN   R30,EIND
00b5f9 93ea      	ST   -Y,R30
00b5fa b7ef      	IN   R30,SREG
00b5fb 93ea      	ST   -Y,R30
00b5fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x90:
00b5fd efee      	LDI  R30,LOW(254)
00b5fe 93e0 0085 	STS  133,R30
00b600 e7e9      	LDI  R30,LOW(121)
00b601 93e0 0084 	STS  132,R30
00b603 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00b604 e8e5      	LDI  R30,LOW(133)
00b605 93e0 0095 	STS  149,R30
00b607 eeed      	LDI  R30,LOW(237)
00b608 93e0 0094 	STS  148,R30
00b60a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x92:
00b60b 940e ce9e 	CALL __GETD1P_INC
                +
00b60d 5fef     +SUBI R30 , LOW ( - 1 )
00b60e 4fff     +SBCI R31 , HIGH ( - 1 )
00b60f 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00b610 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00b611 940e cea8 	CALL __PUTDP1_DEC
00b613 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x93:
00b614 e8e5      	LDI  R30,LOW(133)
00b615 93e0 00a5 	STS  165,R30
00b617 eeed      	LDI  R30,LOW(237)
00b618 93e0 00a4 	STS  164,R30
00b61a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x94:
00b61b 93e0 0121 	STS  289,R30
00b61d e0e0      	LDI  R30,LOW(0)
00b61e 93e0 0125 	STS  293,R30
00b620 93e0 0124 	STS  292,R30
00b622 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x95:
00b623 93ba      	ST   -Y,R27
00b624 93aa      	ST   -Y,R26
00b625 81e8      	LD   R30,Y
00b626 81f9      	LDD  R31,Y+1
00b627 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x96:
00b628 b1e6      	IN   R30,0x6
00b629 7ce0      	ANDI R30,LOW(0xC0)
00b62a e0f0      	LDI  R31,0
00b62b 940e cd90 	CALL __ASRW2
00b62d 940e cd8c 	CALL __ASRW4
00b62f 95e0      	COM  R30
00b630 95f0      	COM  R31
00b631 70e3      	ANDI R30,LOW(0x3)
00b632 70f0      	ANDI R31,HIGH(0x3)
00b633 9731      	SBIW R30,1
00b634 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x97:
00b635 e0a5      	LDI  R26,LOW(5)
00b636 e0b0      	LDI  R27,0
00b637 940e cb81 	CALL _delay_ms
00b639 b1e3      	IN   R30,0x3
00b63a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x98:
00b63b b1e3      	IN   R30,0x3
00b63c 72e0      	ANDI R30,LOW(0x20)
00b63d e0f0      	LDI  R31,0
00b63e 95f5      	ASR  R31
00b63f 95e7      	ROR  R30
00b640 940e cd8c 	CALL __ASRW4
00b642 9730      	SBIW R30,0
00b643 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x99:
00b644 b1e3      	IN   R30,0x3
00b645 74e0      	ANDI R30,LOW(0x40)
00b646 e0f0      	LDI  R31,0
00b647 940e cd90 	CALL __ASRW2
00b649 940e cd8c 	CALL __ASRW4
00b64b 9730      	SBIW R30,0
00b64c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9A:
00b64d b1e3      	IN   R30,0x3
00b64e 78e0      	ANDI R30,LOW(0x80)
00b64f e0f0      	LDI  R31,0
00b650 940e cd8e 	CALL __ASRW3
00b652 940e cd8c 	CALL __ASRW4
00b654 9730      	SBIW R30,0
00b655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9B:
00b656 78e0      	ANDI R30,LOW(0x80)
00b657 e0f0      	LDI  R31,0
00b658 940e cd8e 	CALL __ASRW3
00b65a 940e cd8c 	CALL __ASRW4
00b65c 9730      	SBIW R30,0
00b65d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x9C:
00b65e 931a      	ST   -Y,R17
00b65f 930a      	ST   -Y,R16
                +
00b660 e000     +LDI R16 , LOW ( 0 )
00b661 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00b662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9D:
00b663 e0f0      	LDI  R31,0
00b664 70f0      	ANDI R31,HIGH(0xFF)
00b665 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9E:
00b666 91a0 14e8 	LDS  R26,_adcBatt
00b668 91b0 14e9 	LDS  R27,_adcBatt+1
00b66a 9180 14ea 	LDS  R24,_adcBatt+2
00b66c 9190 14eb 	LDS  R25,_adcBatt+3
00b66e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x9F:
00b66f 2766      	CLR  R22
00b670 2777      	CLR  R23
00b671 940e cbf7 	CALL __CDF1
00b673 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA0:
00b674 940e cc31 	CALL __ADDF12
00b676 01df      	MOVW R26,R30
00b677 01cb      	MOVW R24,R22
00b678 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xA1:
                +
00b679 e0e0     +LDI R30 , LOW ( 0x41200000 )
00b67a e0f0     +LDI R31 , HIGH ( 0x41200000 )
00b67b e260     +LDI R22 , BYTE3 ( 0x41200000 )
00b67c e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00b67d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA2:
00b67e 940e cebe 	CALL __PUTD1S0
00b680 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA3:
00b681 91e0 0108 	LDS  R30,264
00b683 7fe1      	ANDI R30,LOW(0xF1)
00b684 93e0 0108 	STS  264,R30
00b686 e0a8      	LDI  R26,LOW(264)
00b687 e0b1      	LDI  R27,HIGH(264)
00b688 2e0a      	MOV  R0,R26
00b689 91ac      	LD   R26,X
00b68a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA4:
00b68b e1a4      	LDI  R26,LOW(20)
00b68c e0b0      	LDI  R27,0
00b68d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xA5:
00b68e dfe0      	RCALL SUBOPT_0x9F
00b68f 940e cea3 	CALL __PUTDP1
00b691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA6:
00b692 940e cb35 	CALL _i2c_start
00b694 eda0      	LDI  R26,LOW(208)
00b695 940c cb69 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA7:
00b697 940e cb69 	CALL _i2c_write
00b699 940c cb44 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA8:
00b69b e0aa      	LDI  R26,LOW(10)
00b69c e0b0      	LDI  R27,0
00b69d 940e cb81 	CALL _delay_ms
00b69f e0e0      	LDI  R30,LOW(0)
00b6a0 e0f0      	LDI  R31,HIGH(0)
00b6a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0xA9:
                +
00b6a2 83ec     +STD Y + 4 , R30
00b6a3 83fd     +STD Y + 4 + 1 , R31
00b6a4 836e     +STD Y + 4 + 2 , R22
00b6a5 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00b6a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xAA:
                +
00b6a7 81ac     +LDD R26 , Y + 4
00b6a8 81bd     +LDD R27 , Y + 4 + 1
00b6a9 818e     +LDD R24 , Y + 4 + 2
00b6aa 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00b6ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAB:
00b6ac e0e8      	LDI  R30,LOW(8)
00b6ad 940e cd6b 	CALL __LSLD12
00b6af cff2      	RJMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAC:
00b6b0 e0f0      	LDI  R31,0
00b6b1 dff5      	RCALL SUBOPT_0xAA
00b6b2 940e cdbd 	CALL __CWD1
00b6b4 940e cd38 	CALL __ADDD12
00b6b6 dfeb      	RCALL SUBOPT_0xA9
00b6b7 dfef      	RCALL SUBOPT_0xAA
00b6b8 cff3      	RJMP SUBOPT_0xAB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAD:
00b6b9 2fe1      	MOV  R30,R17
00b6ba e0f0      	LDI  R31,0
00b6bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAE:
00b6bc 940e cdbd 	CALL __CWD1
00b6be 940e cd38 	CALL __ADDD12
00b6c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xAF:
00b6c1 dfe0      	RCALL SUBOPT_0xA9
00b6c2 cf04      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB0:
                +
00b6c3 e3ec     +LDI R30 , LOW ( 0x3C )
00b6c4 e0f0     +LDI R31 , HIGH ( 0x3C )
00b6c5 e060     +LDI R22 , BYTE3 ( 0x3C )
00b6c6 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00b6c7 940e ce34 	CALL __DIVD21U
00b6c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB1:
                +
00b6ca 83ee     +STD Y + 6 , R30
00b6cb 83ff     +STD Y + 6 + 1 , R31
00b6cc 8768     +STD Y + 6 + 2 , R22
00b6cd 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00b6ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB2:
                +
00b6cf e3ac     +LDI R26 , LOW ( 0x3C )
00b6d0 e0b0     +LDI R27 , HIGH ( 0x3C )
00b6d1 e080     +LDI R24 , BYTE3 ( 0x3C )
00b6d2 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00b6d3 940e cdde 	CALL __MULD12U
00b6d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0xB3:
                +
00b6d6 83ea     +STD Y + 2 , R30
00b6d7 83fb     +STD Y + 2 + 1 , R31
00b6d8 836c     +STD Y + 2 + 2 , R22
00b6d9 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00b6da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0xB4:
                +
00b6db 81ea     +LDD R30 , Y + 2
00b6dc 81fb     +LDD R31 , Y + 2 + 1
00b6dd 816c     +LDD R22 , Y + 2 + 2
00b6de 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00b6df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0xB5:
                +
00b6e0 81aa     +LDD R26 , Y + 2
00b6e1 81bb     +LDD R27 , Y + 2 + 1
00b6e2 818c     +LDD R24 , Y + 2 + 2
00b6e3 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00b6e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xB6:
                +
00b6e5 81ee     +LDD R30 , Y + 6
00b6e6 81ff     +LDD R31 , Y + 6 + 1
00b6e7 8568     +LDD R22 , Y + 6 + 2
00b6e8 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00b6e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB7:
                +
00b6ea 83ee     +STD Y + 6 , R30
00b6eb 83ff     +STD Y + 6 + 1 , R31
00b6ec 8768     +STD Y + 6 + 2 , R22
00b6ed 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00b6ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB8:
00b6ef dd9c      	RCALL SUBOPT_0x59
                +
00b6f0 ebe5     +LDI R30 , LOW ( 0x5B5 )
00b6f1 e0f5     +LDI R31 , HIGH ( 0x5B5 )
00b6f2 e060     +LDI R22 , BYTE3 ( 0x5B5 )
00b6f3 e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00b6f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB9:
                +
00b6f5 8fee     +STD Y + 30 , R30
00b6f6 8fff     +STD Y + 30 + 1 , R31
00b6f7 a368     +STD Y + 30 + 2 , R22
00b6f8 a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00b6f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBA:
                +
00b6fa 8daa     +LDD R26 , Y + 26
00b6fb 8dbb     +LDD R27 , Y + 26 + 1
00b6fc 8d8c     +LDD R24 , Y + 26 + 2
00b6fd 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00b6fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBB:
                +
00b6ff 33ac     +CPI R26 , LOW ( 0x3C )
00b700 e0e0     +LDI R30 , HIGH ( 0x3C )
00b701 07be     +CPC R27 , R30
00b702 e0e0     +LDI R30 , BYTE3 ( 0x3C )
00b703 078e     +CPC R24 , R30
00b704 e0e0     +LDI R30 , BYTE4 ( 0x3C )
00b705 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00b706 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBC:
                +
00b707 5fef     +SUBI R30 , LOW ( - 1 )
00b708 4fff     +SBCI R31 , HIGH ( - 1 )
00b709 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00b70a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00b70b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBD:
                +
00b70c a1ee     +LDD R30 , Y + 38
00b70d a1ff     +LDD R31 , Y + 38 + 1
00b70e a568     +LDD R22 , Y + 38 + 2
00b70f a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00b710 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBE:
                +
00b711 e6ad     +LDI R26 , LOW ( 0x16D )
00b712 e0b1     +LDI R27 , HIGH ( 0x16D )
00b713 e080     +LDI R24 , BYTE3 ( 0x16D )
00b714 e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00b715 940e cdde 	CALL __MULD12U
00b717 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBF:
00b718 940e ceda 	CALL __SWAPD12
00b71a 940e cd42 	CALL __SUBD12
00b71c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC0:
                +
00b71d 8bee     +STD Y + 22 , R30
00b71e 8bff     +STD Y + 22 + 1 , R31
00b71f 8f68     +STD Y + 22 + 2 , R22
00b720 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00b721 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
00b722 89ee     +LDD R30 , Y + 22
00b723 89ff     +LDD R31 , Y + 22 + 1
00b724 8d68     +LDD R22 , Y + 22 + 2
00b725 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00b726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC2:
                +
00b727 a1ea     +LDD R30 , Y + 34
00b728 a1fb     +LDD R31 , Y + 34 + 1
00b729 a16c     +LDD R22 , Y + 34 + 2
00b72a a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00b72b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC3:
                +
00b72c 30e1     +CPI R30 , LOW ( 0x1 )
00b72d e0a0     +LDI R26 , HIGH ( 0x1 )
00b72e 07fa     +CPC R31 , R26
00b72f e0a0     +LDI R26 , BYTE3 ( 0x1 )
00b730 076a     +CPC R22 , R26
00b731 e0a0     +LDI R26 , BYTE4 ( 0x1 )
00b732 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00b733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC4:
                +
00b734 30e2     +CPI R30 , LOW ( 0x2 )
00b735 e0a0     +LDI R26 , HIGH ( 0x2 )
00b736 07fa     +CPC R31 , R26
00b737 e0a0     +LDI R26 , BYTE3 ( 0x2 )
00b738 076a     +CPC R22 , R26
00b739 e0a0     +LDI R26 , BYTE4 ( 0x2 )
00b73a 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00b73b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC5:
                +
00b73c 30e3     +CPI R30 , LOW ( 0x3 )
00b73d e0a0     +LDI R26 , HIGH ( 0x3 )
00b73e 07fa     +CPC R31 , R26
00b73f e0a0     +LDI R26 , BYTE3 ( 0x3 )
00b740 076a     +CPC R22 , R26
00b741 e0a0     +LDI R26 , BYTE4 ( 0x3 )
00b742 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00b743 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00b744 30e4     +CPI R30 , LOW ( 0x4 )
00b745 e0a0     +LDI R26 , HIGH ( 0x4 )
00b746 07fa     +CPC R31 , R26
00b747 e0a0     +LDI R26 , BYTE3 ( 0x4 )
00b748 076a     +CPC R22 , R26
00b749 e0a0     +LDI R26 , BYTE4 ( 0x4 )
00b74a 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00b74b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00b74c 30e5     +CPI R30 , LOW ( 0x5 )
00b74d e0a0     +LDI R26 , HIGH ( 0x5 )
00b74e 07fa     +CPC R31 , R26
00b74f e0a0     +LDI R26 , BYTE3 ( 0x5 )
00b750 076a     +CPC R22 , R26
00b751 e0a0     +LDI R26 , BYTE4 ( 0x5 )
00b752 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00b753 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00b754 30e6     +CPI R30 , LOW ( 0x6 )
00b755 e0a0     +LDI R26 , HIGH ( 0x6 )
00b756 07fa     +CPC R31 , R26
00b757 e0a0     +LDI R26 , BYTE3 ( 0x6 )
00b758 076a     +CPC R22 , R26
00b759 e0a0     +LDI R26 , BYTE4 ( 0x6 )
00b75a 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00b75b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00b75c 30e7     +CPI R30 , LOW ( 0x7 )
00b75d e0a0     +LDI R26 , HIGH ( 0x7 )
00b75e 07fa     +CPC R31 , R26
00b75f e0a0     +LDI R26 , BYTE3 ( 0x7 )
00b760 076a     +CPC R22 , R26
00b761 e0a0     +LDI R26 , BYTE4 ( 0x7 )
00b762 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00b763 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00b764 30e8     +CPI R30 , LOW ( 0x8 )
00b765 e0a0     +LDI R26 , HIGH ( 0x8 )
00b766 07fa     +CPC R31 , R26
00b767 e0a0     +LDI R26 , BYTE3 ( 0x8 )
00b768 076a     +CPC R22 , R26
00b769 e0a0     +LDI R26 , BYTE4 ( 0x8 )
00b76a 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00b76b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00b76c 30e9     +CPI R30 , LOW ( 0x9 )
00b76d e0a0     +LDI R26 , HIGH ( 0x9 )
00b76e 07fa     +CPC R31 , R26
00b76f e0a0     +LDI R26 , BYTE3 ( 0x9 )
00b770 076a     +CPC R22 , R26
00b771 e0a0     +LDI R26 , BYTE4 ( 0x9 )
00b772 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00b773 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00b774 30ea     +CPI R30 , LOW ( 0xA )
00b775 e0a0     +LDI R26 , HIGH ( 0xA )
00b776 07fa     +CPC R31 , R26
00b777 e0a0     +LDI R26 , BYTE3 ( 0xA )
00b778 076a     +CPC R22 , R26
00b779 e0a0     +LDI R26 , BYTE4 ( 0xA )
00b77a 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00b77b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00b77c 30eb     +CPI R30 , LOW ( 0xB )
00b77d e0a0     +LDI R26 , HIGH ( 0xB )
00b77e 07fa     +CPC R31 , R26
00b77f e0a0     +LDI R26 , BYTE3 ( 0xB )
00b780 076a     +CPC R22 , R26
00b781 e0a0     +LDI R26 , BYTE4 ( 0xB )
00b782 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00b783 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00b784 30ec     +CPI R30 , LOW ( 0xC )
00b785 e0a0     +LDI R26 , HIGH ( 0xC )
00b786 07fa     +CPC R31 , R26
00b787 e0a0     +LDI R26 , BYTE3 ( 0xC )
00b788 076a     +CPC R22 , R26
00b789 e0a0     +LDI R26 , BYTE4 ( 0xC )
00b78a 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00b78b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00b78c 30a3     +CPI R26 , LOW ( 0x3 )
00b78d e0e0     +LDI R30 , HIGH ( 0x3 )
00b78e 07be     +CPC R27 , R30
00b78f e0e0     +LDI R30 , BYTE3 ( 0x3 )
00b790 078e     +CPC R24 , R30
00b791 e0e0     +LDI R30 , BYTE4 ( 0x3 )
00b792 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00b793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD0:
                +
00b794 8dea     +LDD R30 , Y + 26
00b795 8dfb     +LDD R31 , Y + 26 + 1
00b796 8d6c     +LDD R22 , Y + 26 + 2
00b797 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00b798 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD1:
                +
00b799 89ae     +LDD R26 , Y + 22
00b79a 89bf     +LDD R27 , Y + 22 + 1
00b79b 8d88     +LDD R24 , Y + 22 + 2
00b79c 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00b79d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD2:
                +
00b79e 5fef     +SUBI R30 , LOW ( - 1 )
00b79f 4fff     +SBCI R31 , HIGH ( - 1 )
00b7a0 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00b7a1 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00b7a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xD3:
                +
00b7a3 89ea     +LDD R30 , Y + 18
00b7a4 89fb     +LDD R31 , Y + 18 + 1
00b7a5 896c     +LDD R22 , Y + 18 + 2
00b7a6 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00b7a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD4:
00b7a8 e0e0      	LDI  R30,LOW(0)
00b7a9 e0f0      	LDI  R31,HIGH(0)
00b7aa 8119      	LDD  R17,Y+1
00b7ab 8108      	LDD  R16,Y+0
00b7ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD5:
00b7ad de2c      	RCALL SUBOPT_0x8C
00b7ae ce1d      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xD6:
                +
00b7af 85a8     +LDD R26 , Y + 8
00b7b0 85b9     +LDD R27 , Y + 8 + 1
00b7b1 858a     +LDD R24 , Y + 8 + 2
00b7b2 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00b7b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 33 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xD7:
                +
00b7b4 85ec     +LDD R30 , Y + 12
00b7b5 85fd     +LDD R31 , Y + 12 + 1
00b7b6 856e     +LDD R22 , Y + 12 + 2
00b7b7 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00b7b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xD8:
                +
00b7b9 50e1     +SUBI R30 , LOW ( 1 )
00b7ba 40f0     +SBCI R31 , HIGH ( 1 )
00b7bb 4060     +SBCI R22 , BYTE3 ( 1 )
00b7bc 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00b7bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD9:
00b7be dab3      	RCALL SUBOPT_0xC
                +
00b7bf e0a8     +LDI R26 , LOW ( 0x708 )
00b7c0 e0b7     +LDI R27 , HIGH ( 0x708 )
00b7c1 e080     +LDI R24 , BYTE3 ( 0x708 )
00b7c2 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00b7c3 940e cdde 	CALL __MULD12U
00b7c5 cfe7      	RJMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDA:
                +
00b7c6 89ec     +LDD R30 , Y + 20
00b7c7 89fd     +LDD R31 , Y + 20 + 1
00b7c8 896e     +LDD R22 , Y + 20 + 2
00b7c9 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00b7ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDB:
                +
00b7cb 8de8     +LDD R30 , Y + 24
00b7cc 8df9     +LDD R31 , Y + 24 + 1
00b7cd 8d6a     +LDD R22 , Y + 24 + 2
00b7ce 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00b7cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDC:
00b7d0 dfe3      	RCALL SUBOPT_0xD7
00b7d1 dfdd      	RCALL SUBOPT_0xD6
00b7d2 940e cf2e 	CALL __CPD12
00b7d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDD:
00b7d5 da97      	RCALL SUBOPT_0xB
00b7d6 dc6c      	RCALL SUBOPT_0x4F
00b7d7 940e cd42 	CALL __SUBD12
00b7d9 cec8      	RJMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDE:
00b7da dc68      	RCALL SUBOPT_0x4F
00b7db da91      	RCALL SUBOPT_0xB
00b7dc 940e cf2e 	CALL __CPD12
00b7de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDF:
00b7df dfcf      	RCALL SUBOPT_0xD6
00b7e0 dfd3      	RCALL SUBOPT_0xD7
00b7e1 940e cd42 	CALL __SUBD12
00b7e3 cebe      	RJMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE0:
00b7e4 dec2      	RCALL SUBOPT_0xAA
                +
00b7e5 30aa     +CPI R26 , LOW ( 0xA )
00b7e6 e0e0     +LDI R30 , HIGH ( 0xA )
00b7e7 07be     +CPC R27 , R30
00b7e8 e0e0     +LDI R30 , BYTE3 ( 0xA )
00b7e9 078e     +CPC R24 , R30
00b7ea e0e0     +LDI R30 , BYTE4 ( 0xA )
00b7eb 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00b7ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE1:
                +
00b7ed e7e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00b7ee e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00b7ef e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00b7f0 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00b7f1 cdeb      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE2:
00b7f2 940e cec8 	CALL __PUTPARD1
00b7f4 dfd1      	RCALL SUBOPT_0xDA
00b7f5 cca0      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE3:
00b7f6 85ec      	LDD  R30,Y+12
00b7f7 2f1e      	MOV  R17,R30
00b7f8 da74      	RCALL SUBOPT_0xB
00b7f9 e0e8      	LDI  R30,LOW(8)
00b7fa 940e cd77 	CALL __LSRD12
00b7fc 2f0e      	MOV  R16,R30
00b7fd dfb6      	RCALL SUBOPT_0xD7
00b7fe 940e cdad 	CALL __LSRD16
00b800 2f3e      	MOV  R19,R30
00b801 da6b      	RCALL SUBOPT_0xB
00b802 e1e8      	LDI  R30,LOW(24)
00b803 940e cd77 	CALL __LSRD12
00b805 2f2e      	MOV  R18,R30
00b806 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE4:
00b807 e0a0      	LDI  R26,LOW(0)
00b808 940e cb69 	CALL _i2c_write
00b80a 2fa1      	MOV  R26,R17
00b80b 940e cb69 	CALL _i2c_write
00b80d 2fa0      	MOV  R26,R16
00b80e 940e cb69 	CALL _i2c_write
00b810 2fa3      	MOV  R26,R19
00b811 940e cb69 	CALL _i2c_write
00b813 2fa2      	MOV  R26,R18
00b814 ce82      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE5:
00b815 93ba      	ST   -Y,R27
00b816 93aa      	ST   -Y,R26
00b817 972c      	SBIW R28,12
00b818 940e cf3a 	CALL __SAVELOCR4
00b81a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 38 TIMES, CODE SIZE REDUCTION:145 WORDS
                 SUBOPT_0xE6:
00b81b 940e cdbd 	CALL __CWD1
00b81d 940e cec8 	CALL __PUTPARD1
00b81f ca7d      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xE7:
                +
00b820 87ec     +STD Y + 12 , R30
00b821 87fd     +STD Y + 12 + 1 , R31
00b822 876e     +STD Y + 12 + 2 , R22
00b823 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00b824 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE8:
00b825 e3ac      	LDI  R26,LOW(60)
00b826 e0b0      	LDI  R27,HIGH(60)
00b827 940e ce04 	CALL __MULW12
00b829 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE9:
00b82a dff5      	RCALL SUBOPT_0xE7
00b82b cf88      	RJMP SUBOPT_0xD7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEA:
00b82c 93e0 1430 	STS  _raw_rtc,R30
00b82e 93f0 1431 	STS  _raw_rtc+1,R31
00b830 9360 1432 	STS  _raw_rtc+2,R22
00b832 9370 1433 	STS  _raw_rtc+3,R23
00b834 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEB:
00b835 93ba      	ST   -Y,R27
00b836 93aa      	ST   -Y,R26
00b837 9724      	SBIW R28,4
00b838 931a      	ST   -Y,R17
00b839 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEC:
00b83a de9b      	RCALL SUBOPT_0xB3
00b83b cea4      	RJMP SUBOPT_0xB5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xED:
00b83c 940e cec8 	CALL __PUTPARD1
00b83e 8dec      	LDD  R30,Y+28
00b83f 8dfd      	LDD  R31,Y+28+1
00b840 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEE:
00b841 df89      	RCALL SUBOPT_0xDB
00b842 940e cec8 	CALL __PUTPARD1
00b844 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEF:
                +
00b845 a5e8     +LDD R30 , Y + 40
00b846 a5f9     +LDD R31 , Y + 40 + 1
00b847 a56a     +LDD R22 , Y + 40 + 2
00b848 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00b849 940e cec8 	CALL __PUTPARD1
00b84b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xF0:
00b84c e0a0      	LDI  R26,LOW(0)
00b84d e0b0      	LDI  R27,0
00b84e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF1:
00b84f 93fa      	ST   -Y,R31
00b850 93ea      	ST   -Y,R30
00b851 e0e0      	LDI  R30,LOW(0)
00b852 93ea      	ST   -Y,R30
00b853 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF2:
00b854 eaa1      	LDI  R26,LOW(161)
00b855 e0b0      	LDI  R27,0
00b856 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF3:
00b857 0fa0      	ADD  R26,R16
00b858 1fb1      	ADC  R27,R17
00b859 940e ceef 	CALL __EEPROMRDB
00b85b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xF4:
00b85c 0fe0      	ADD  R30,R16
00b85d 1ff1      	ADC  R31,R17
00b85e 01df      	MOVW R26,R30
00b85f 940e ceef 	CALL __EEPROMRDB
00b861 01d0      	MOVW R26,R0
00b862 93ec      	ST   X,R30
00b863 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF5:
00b864 81ea      	LDD  R30,Y+2
00b865 81fb      	LDD  R31,Y+2+1
00b866 5be0      	SUBI R30,LOW(-80)
00b867 4fff      	SBCI R31,HIGH(-80)
00b868 0fe0      	ADD  R30,R16
00b869 1ff1      	ADC  R31,R17
00b86a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF6:
00b86b 81ea      	LDD  R30,Y+2
00b86c 81fb      	LDD  R31,Y+2+1
00b86d 59ec      	SUBI R30,LOW(-100)
00b86e 4fff      	SBCI R31,HIGH(-100)
00b86f 0fe0      	ADD  R30,R16
00b870 1ff1      	ADC  R31,R17
00b871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF7:
00b872 81ea      	LDD  R30,Y+2
00b873 81fb      	LDD  R31,Y+2+1
00b874 57e4      	SUBI R30,LOW(-140)
00b875 4fff      	SBCI R31,HIGH(-140)
00b876 0fe0      	ADD  R30,R16
00b877 1ff1      	ADC  R31,R17
00b878 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF8:
00b879 93ec      	ST   X,R30
00b87a 81aa      	LDD  R26,Y+2
00b87b 81bb      	LDD  R27,Y+2+1
00b87c 9611      	ADIW R26,1
00b87d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF9:
00b87e 93ec      	ST   X,R30
00b87f 81aa      	LDD  R26,Y+2
00b880 81bb      	LDD  R27,Y+2+1
00b881 9612      	ADIW R26,2
00b882 e0e0      	LDI  R30,LOW(0)
00b883 93ec      	ST   X,R30
                +
00b884 e000     +LDI R16 , LOW ( 0 )
00b885 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00b886 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xFA:
00b887 81ea      	LDD  R30,Y+2
00b888 81fb      	LDD  R31,Y+2+1
00b889 9633      	ADIW R30,3
00b88a 0fe0      	ADD  R30,R16
00b88b 1ff1      	ADC  R31,R17
00b88c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFB:
00b88d 940e ceef 	CALL __EEPROMRDB
00b88f 81aa      	LDD  R26,Y+2
00b890 81bb      	LDD  R27,Y+2+1
00b891 93ec      	ST   X,R30
00b892 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00b893 940e ceef 	CALL __EEPROMRDB
                +
00b895 81aa     +LDD R26 , Y + 2
00b896 81bb     +LDD R27 , Y + 2 + 1
00b897 9611     +ADIW R26 , 1
00b898 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00b899 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFD:
00b89a 940e ceef 	CALL __EEPROMRDB
                +
00b89c 81aa     +LDD R26 , Y + 2
00b89d 81bb     +LDD R27 , Y + 2 + 1
00b89e 9612     +ADIW R26 , 2
00b89f 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00b8a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xFE:
00b8a1 940e cec8 	CALL __PUTPARD1
00b8a3 81ae      	LDD  R26,Y+6
00b8a4 81bf      	LDD  R27,Y+6+1
00b8a5 91ec      	LD   R30,X
00b8a6 ca9b      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xFF:
00b8a7 940e cec8 	CALL __PUTPARD1
00b8a9 81ee      	LDD  R30,Y+6
00b8aa 81ff      	LDD  R31,Y+6+1
00b8ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x100:
                +
00b8ac eae3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00b8ad e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00b8ae e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00b8af e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00b8b0 cff6      	RJMP SUBOPT_0xFF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x101:
00b8b1 9633      	ADIW R30,3
00b8b2 0fe0      	ADD  R30,R16
00b8b3 1ff1      	ADC  R31,R17
00b8b4 81e0      	LD   R30,Z
00b8b5 ca8c      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x102:
                +
00b8b6 eaef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00b8b7 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00b8b8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00b8b9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00b8ba c96f      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x103:
00b8bb 93ba      	ST   -Y,R27
00b8bc 93aa      	ST   -Y,R26
00b8bd 81ab      	LDD  R26,Y+3
00b8be 23aa      	TST  R26
00b8bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x104:
00b8c0 93ed      	ST   X+,R30
00b8c1 93fc      	ST   X,R31
00b8c2 81a8      	LD   R26,Y
00b8c3 81b9      	LDD  R27,Y+1
00b8c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x105:
00b8c5 e0e0      	LDI  R30,LOW(0)
00b8c6 93ec      	ST   X,R30
00b8c7 81a8      	LD   R26,Y
00b8c8 81b9      	LDD  R27,Y+1
00b8c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x106:
00b8ca 81aa      	LDD  R26,Y+2
00b8cb 81bb      	LDD  R27,Y+2+1
00b8cc e1ed      	LDI  R30,LOW(29)
00b8cd 940e cdfe 	CALL __MULB1W2U
00b8cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x107:
                +
00b8d0 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00b8d1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00b8d2 01df      	MOVW R26,R30
00b8d3 940e cee7 	CALL __EEPROMRDD
00b8d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x108:
                +
00b8d6 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00b8d7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00b8d8 01df      	MOVW R26,R30
00b8d9 940e ceeb 	CALL __EEPROMRDW
00b8db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x109:
                +
00b8dc 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00b8dd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00b8de 01df      	MOVW R26,R30
00b8df 940e cee7 	CALL __EEPROMRDD
00b8e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10A:
                +
00b8e2 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00b8e3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00b8e4 01df      	MOVW R26,R30
00b8e5 940e cee7 	CALL __EEPROMRDD
00b8e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10B:
                +
00b8e8 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00b8e9 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00b8ea 01df      	MOVW R26,R30
00b8eb 940e ceeb 	CALL __EEPROMRDW
00b8ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10C:
                +
00b8ee 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00b8ef 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00b8f0 01df      	MOVW R26,R30
00b8f1 940e cee7 	CALL __EEPROMRDD
00b8f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x10D:
00b8f4 e0e0      	LDI  R30,LOW(0)
00b8f5 e0f0      	LDI  R31,HIGH(0)
00b8f6 93ed      	ST   X+,R30
00b8f7 93fc      	ST   X,R31
00b8f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10E:
00b8f9 81aa      	LDD  R26,Y+2
00b8fa 81bb      	LDD  R27,Y+2+1
00b8fb e0e3      	LDI  R30,LOW(3)
00b8fc 940e cdfe 	CALL __MULB1W2U
00b8fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10F:
00b8ff 01df      	MOVW R26,R30
00b900 940e ceef 	CALL __EEPROMRDB
00b902 81a8      	LD   R26,Y
00b903 81b9      	LDD  R27,Y+1
00b904 93ec      	ST   X,R30
00b905 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x110:
00b906 940e ceeb 	CALL __EEPROMRDW
                +
00b908 81a8     +LDD R26 , Y + 0
00b909 81b9     +LDD R27 , Y + 0 + 1
00b90a 9611     +ADIW R26 , 1
00b90b 93ed     +ST X + , R30
00b90c 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00b90d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x111:
00b90e 940e cec8 	CALL __PUTPARD1
00b910 85e8      	LDD  R30,Y+8
00b911 85f9      	LDD  R31,Y+8+1
00b912 cf08      	RJMP SUBOPT_0xE6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x112:
00b913 81ac      	LDD  R26,Y+4
00b914 81bd      	LDD  R27,Y+4+1
00b915 e2e6      	LDI  R30,LOW(38)
00b916 940e cdfe 	CALL __MULB1W2U
00b918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x113:
00b919 940e cec8 	CALL __PUTPARD1
00b91b 85a8      	LDD  R26,Y+8
00b91c 85b9      	LDD  R27,Y+8+1
00b91d e2e6      	LDI  R30,LOW(38)
00b91e 940e cdfe 	CALL __MULB1W2U
00b920 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x114:
00b921 59e6      	SUBI R30,LOW(-_config_dout)
00b922 4ffe      	SBCI R31,HIGH(-_config_dout)
00b923 01df      	MOVW R26,R30
00b924 940e ceef 	CALL __EEPROMRDB
00b926 ca1b      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x115:
                +
00b927 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00b928 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00b929 01df      	MOVW R26,R30
00b92a 940e ceef 	CALL __EEPROMRDB
00b92c ca15      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x116:
                +
00b92d 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00b92e 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00b92f 01df      	MOVW R26,R30
00b930 940e ceef 	CALL __EEPROMRDB
00b932 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x117:
00b933 01d8      	MOVW R26,R16
00b934 e0f0      	LDI  R31,0
00b935 17ae      	CP   R26,R30
00b936 07bf      	CPC  R27,R31
00b937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x118:
                +
00b938 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00b939 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00b93a 0fe0      	ADD  R30,R16
00b93b 1ff1      	ADC  R31,R17
00b93c 01df      	MOVW R26,R30
00b93d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x119:
00b93e 81aa      	LDD  R26,Y+2
00b93f 81bb      	LDD  R27,Y+2+1
00b940 e0e5      	LDI  R30,LOW(5)
00b941 940e cdfe 	CALL __MULB1W2U
00b943 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11A:
00b944 81ea      	LDD  R30,Y+2
00b945 81fb      	LDD  R31,Y+2+1
00b946 9636      	ADIW R30,6
00b947 0fe0      	ADD  R30,R16
00b948 1ff1      	ADC  R31,R17
00b949 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x11B:
00b94a 81ac      	LDD  R26,Y+4
00b94b 81bd      	LDD  R27,Y+4+1
00b94c e2e9      	LDI  R30,LOW(41)
00b94d 940e cdfe 	CALL __MULB1W2U
00b94f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11C:
                +
00b950 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00b951 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00b952 01df      	MOVW R26,R30
00b953 940e ceef 	CALL __EEPROMRDB
00b955 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11D:
                +
00b956 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00b957 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00b958 0fe0      	ADD  R30,R16
00b959 1ff1      	ADC  R31,R17
00b95a 01df      	MOVW R26,R30
00b95b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11E:
00b95c 81ee      	LDD  R30,Y+6
00b95d 81ff      	LDD  R31,Y+6+1
00b95e 9632      	ADIW R30,2
00b95f 0fe0      	ADD  R30,R16
00b960 1ff1      	ADC  R31,R17
00b961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11F:
00b962 01de      	MOVW R26,R28
00b963 9612      	ADIW R26,2
00b964 0fa0      	ADD  R26,R16
00b965 1fb1      	ADC  R27,R17
00b966 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x120:
                +
00b967 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00b968 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00b969 940e ceef 	CALL __EEPROMRDB
00b96b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x121:
00b96c 940e cec8 	CALL __PUTPARD1
00b96e 85aa      	LDD  R26,Y+10
00b96f 85bb      	LDD  R27,Y+10+1
00b970 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x122:
00b971 940e cec8 	CALL __PUTPARD1
00b973 85ea      	LDD  R30,Y+10
00b974 85fb      	LDD  R31,Y+10+1
00b975 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x123:
                +
00b976 eae3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00b977 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00b978 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00b979 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00b97a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x124:
00b97b 9632      	ADIW R30,2
00b97c 0fe0      	ADD  R30,R16
00b97d 1ff1      	ADC  R31,R17
00b97e 81e0      	LD   R30,Z
00b97f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x125:
00b980 940e cec8 	CALL __PUTPARD1
00b982 81ac      	LDD  R26,Y+4
00b983 81bd      	LDD  R27,Y+4+1
00b984 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x126:
00b985 940e ce98 	CALL __GETD1P
00b987 940e cec8 	CALL __PUTPARD1
00b989 c913      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x127:
00b98a 940e ce94 	CALL __GETW1P
00b98c ce8e      	RJMP SUBOPT_0xE6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x128:
00b98d 940e cec8 	CALL __PUTPARD1
00b98f 81ec      	LDD  R30,Y+4
00b990 81fd      	LDD  R31,Y+4+1
00b991 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x129:
                +
00b992 81a6     +LDD R26 , Z + 6
00b993 81b7     +LDD R27 , Z + 6 + 1
00b994 8580     +LDD R24 , Z + 6 + 2
00b995 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00b996 940e cecd 	CALL __PUTPARD2
00b998 c904      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12A:
                +
00b999 85a2     +LDD R26 , Z + 10
00b99a 85b3     +LDD R27 , Z + 10 + 1
00b99b 8584     +LDD R24 , Z + 10 + 2
00b99c 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b99d 940e cecd 	CALL __PUTPARD2
00b99f c8fd      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12B:
00b9a0 0fae      	ADD  R26,R30
00b9a1 1fbf      	ADC  R27,R31
00b9a2 91ec      	LD   R30,X
00b9a3 01d0      	MOVW R26,R0
00b9a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12C:
00b9a5 91ec      	LD   R30,X
00b9a6 01d0      	MOVW R26,R0
00b9a7 940e cf0b 	CALL __EEPROMWRB
00b9a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12D:
00b9aa e0e1      	LDI  R30,LOW(1)
00b9ab 940e cf0b 	CALL __EEPROMWRB
00b9ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x12E:
00b9ae 940e ceef 	CALL __EEPROMRDB
00b9b0 c991      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12F:
                +
00b9b1 e8e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00b9b2 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00b9b3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00b9b4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00b9b5 940e cec8 	CALL __PUTPARD1
00b9b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x130:
00b9b8 81a8      	LD   R26,Y
00b9b9 81b9      	LDD  R27,Y+1
00b9ba 940e ce94 	CALL __GETW1P
00b9bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x131:
00b9bd 01d0      	MOVW R26,R0
00b9be 940e cf03 	CALL __EEPROMWRW
00b9c0 cf09      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x132:
00b9c1 940e ce94 	CALL __GETW1P
00b9c3 cff9      	RJMP SUBOPT_0x131
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x133:
00b9c4 940e cf0b 	CALL __EEPROMWRB
00b9c6 cf03      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x134:
00b9c7 940e ce98 	CALL __GETD1P
00b9c9 01d0      	MOVW R26,R0
00b9ca 940e cefb 	CALL __EEPROMWRD
00b9cc cefd      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x135:
00b9cd 940e ce98 	CALL __GETD1P
00b9cf 01d0      	MOVW R26,R0
00b9d0 940e cefb 	CALL __EEPROMWRD
00b9d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x136:
00b9d3 940e cec8 	CALL __PUTPARD1
00b9d5 81ae      	LDD  R26,Y+6
00b9d6 81bf      	LDD  R27,Y+6+1
00b9d7 e1ed      	LDI  R30,LOW(29)
00b9d8 940e cdfe 	CALL __MULB1W2U
00b9da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x137:
00b9db 01df      	MOVW R26,R30
00b9dc 940e ceeb 	CALL __EEPROMRDW
00b9de c9a9      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x138:
00b9df 2766      	CLR  R22
00b9e0 2777      	CLR  R23
00b9e1 c91e      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x139:
00b9e2 010f      	MOVW R0,R30
00b9e3 81a8      	LD   R26,Y
00b9e4 81b9      	LDD  R27,Y+1
00b9e5 9611      	ADIW R26,1
00b9e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13A:
00b9e7 940e ce94 	CALL __GETW1P
00b9e9 01d0      	MOVW R26,R0
00b9ea 940e cf03 	CALL __EEPROMWRW
00b9ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13B:
                +
00b9ed e9e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00b9ee e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00b9ef e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00b9f0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00b9f1 ceb5      	RJMP SUBOPT_0xFF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13C:
                +
00b9f2 ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00b9f3 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00b9f4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00b9f5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00b9f6 940e cec8 	CALL __PUTPARD1
00b9f8 81ae      	LDD  R26,Y+6
00b9f9 81bf      	LDD  R27,Y+6+1
00b9fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13D:
00b9fb 940e cec8 	CALL __PUTPARD1
00b9fd 81ae      	LDD  R26,Y+6
00b9fe 81bf      	LDD  R27,Y+6+1
00b9ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13E:
00ba00 940e cf0b 	CALL __EEPROMWRB
00ba02 cf10      	RJMP SUBOPT_0x112
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13F:
00ba03 940e cf0b 	CALL __EEPROMWRB
                +
00ba05 e4ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00ba06 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00ba07 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00ba08 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00ba09 cf04      	RJMP SUBOPT_0x111
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x140:
                +
00ba0a eae7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00ba0b e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00ba0c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00ba0d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00ba0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x141:
                +
00ba0f ece2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00ba10 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00ba11 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00ba12 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00ba13 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x142:
00ba15 01df      	MOVW R26,R30
00ba16 940e cee7 	CALL __EEPROMRDD
00ba18 940e cec8 	CALL __PUTPARD1
00ba1a c882      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x143:
00ba1b 940e cec8 	CALL __PUTPARD1
00ba1d 85a8      	LDD  R26,Y+8
00ba1e 85b9      	LDD  R27,Y+8+1
00ba1f e2e9      	LDI  R30,LOW(41)
00ba20 940e cdfe 	CALL __MULB1W2U
00ba22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x144:
                +
00ba23 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00ba24 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00ba25 0fe0      	ADD  R30,R16
00ba26 1ff1      	ADC  R31,R17
00ba27 01df      	MOVW R26,R30
00ba28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x145:
00ba29 940e cee7 	CALL __EEPROMRDD
00ba2b 940e cec8 	CALL __PUTPARD1
00ba2d c86f      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x146:
00ba2e 0fa0      	ADD  R26,R16
00ba2f 1fb1      	ADC  R27,R17
00ba30 e0e0      	LDI  R30,LOW(0)
00ba31 93ec      	ST   X,R30
00ba32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x147:
00ba33 e0e0      	LDI  R30,LOW(0)
00ba34 e0f0      	LDI  R31,HIGH(0)
00ba35 940e cf41 	CALL __LOADLOCR4
00ba37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x148:
00ba38 972a      	SBIW R28,10
00ba39 940e cf3a 	CALL __SAVELOCR4
                +
00ba3b e000     +LDI R16 , LOW ( 0 )
00ba3c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00ba3d e020     +LDI R18 , LOW ( 0 )
00ba3e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00ba3f 01f8      	MOVW R30,R16
                +
00ba40 5f0f     +SUBI R16 , LOW ( - 1 )
00ba41 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ba42 01de      	MOVW R26,R28
00ba43 9614      	ADIW R26,4
00ba44 0fae      	ADD  R26,R30
00ba45 1fbf      	ADC  R27,R31
00ba46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x149:
00ba47 01f8      	MOVW R30,R16
                +
00ba48 5f0f     +SUBI R16 , LOW ( - 1 )
00ba49 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ba4a 01de      	MOVW R26,R28
00ba4b 9614      	ADIW R26,4
00ba4c 0fea      	ADD  R30,R26
00ba4d 1ffb      	ADC  R31,R27
00ba4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x14A:
00ba4f 010f      	MOVW R0,R30
00ba50 e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00ba51 e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00ba52 0fa2      	ADD  R26,R18
00ba53 1fb3      	ADC  R27,R19
00ba54 940e ceef 	CALL __EEPROMRDB
00ba56 01d0      	MOVW R26,R0
00ba57 93ec      	ST   X,R30
00ba58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14B:
00ba59 01fe      	MOVW R30,R28
00ba5a 9634      	ADIW R30,4
00ba5b 93fa      	ST   -Y,R31
00ba5c 93ea      	ST   -Y,R30
00ba5d 931a      	ST   -Y,R17
00ba5e 930a      	ST   -Y,R16
00ba5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14C:
00ba60 940e 5b13 	CALL _ETH_send
00ba62 cfd0      	RJMP SUBOPT_0x147
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x14D:
00ba63 940e cf3a 	CALL __SAVELOCR4
                +
00ba65 e000     +LDI R16 , LOW ( 0 )
00ba66 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00ba67 e020     +LDI R18 , LOW ( 0 )
00ba68 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00ba69 01f8      	MOVW R30,R16
                +
00ba6a 5f0f     +SUBI R16 , LOW ( - 1 )
00ba6b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ba6c 01de      	MOVW R26,R28
00ba6d 9614      	ADIW R26,4
00ba6e 0fae      	ADD  R26,R30
00ba6f 1fbf      	ADC  R27,R31
00ba70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14E:
00ba71 85e8      	LDD  R30,Y+8
00ba72 85f9      	LDD  R31,Y+8+1
00ba73 963f      	ADIW R30,15
00ba74 01af      	MOVW R20,R30
                +
00ba75 3f4b     +CPI R20 , LOW ( 251 )
00ba76 e0e0     +LDI R30 , HIGH ( 251 )
00ba77 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00ba78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14F:
00ba79 01da      	MOVW R26,R20
00ba7a 940e 96fc 	CALL _malloc
00ba7c 83ee      	STD  Y+6,R30
00ba7d 83ff      	STD  Y+6+1,R31
00ba7e 9730      	SBIW R30,0
00ba7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x150:
00ba80 01f8      	MOVW R30,R16
                +
00ba81 5f0f     +SUBI R16 , LOW ( - 1 )
00ba82 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ba83 81ae      	LDD  R26,Y+6
00ba84 81bf      	LDD  R27,Y+6+1
00ba85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x151:
00ba86 0fea      	ADD  R30,R26
00ba87 1ffb      	ADC  R31,R27
00ba88 cfc6      	RJMP SUBOPT_0x14A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x152:
00ba89 01f8      	MOVW R30,R16
00ba8a 81ae      	LDD  R26,Y+6
00ba8b 81bf      	LDD  R27,Y+6+1
00ba8c 940c b2ec 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x153:
00ba8e 85ec      	LDD  R30,Y+12
00ba8f 85fd      	LDD  R31,Y+12+1
00ba90 93fa      	ST   -Y,R31
00ba91 93ea      	ST   -Y,R30
00ba92 85ac      	LDD  R26,Y+12
00ba93 85bd      	LDD  R27,Y+12+1
00ba94 940e 9739 	CALL _memcpy
00ba96 85e8      	LDD  R30,Y+8
00ba97 85f9      	LDD  R31,Y+8+1
                +
00ba98 0f0e     +ADD R16 , R30
00ba99 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00ba9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x154:
00ba9b 81ee      	LDD  R30,Y+6
00ba9c 81ff      	LDD  R31,Y+6+1
00ba9d 93fa      	ST   -Y,R31
00ba9e 93ea      	ST   -Y,R30
00ba9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x155:
00baa0 93ea      	ST   -Y,R30
00baa1 e0ac      	LDI  R26,LOW(12)
00baa2 e0b0      	LDI  R27,0
00baa3 940c 5b13 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x156:
00baa5 81ae      	LDD  R26,Y+6
00baa6 81bf      	LDD  R27,Y+6+1
00baa7 940c 9717 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x157:
00baa9 01f8      	MOVW R30,R16
                +
00baaa 5f0f     +SUBI R16 , LOW ( - 1 )
00baab 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00baac 01de      	MOVW R26,R28
00baad 9616      	ADIW R26,6
00baae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x158:
                +
00baaf a1e9     +LDD R30 , Y + 33
00bab0 a1fa     +LDD R31 , Y + 33 + 1
00bab1 a16b     +LDD R22 , Y + 33 + 2
00bab2 a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00bab3 940e cec8 	CALL __PUTPARD1
00bab5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x159:
00bab6 e180      	LDI  R24,16
00bab7 940e 9245 	CALL _printDebug
00bab9 9664      	ADIW R28,20
00baba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15A:
00babb 85ef      	LDD  R30,Y+15
00babc 93ea      	ST   -Y,R30
00babd 85ef      	LDD  R30,Y+15
00babe 93ea      	ST   -Y,R30
00babf 85ef      	LDD  R30,Y+15
00bac0 93ea      	ST   -Y,R30
00bac1 e0a1      	LDI  R26,LOW(1)
00bac2 940e 5238 	CALL _ETH_sendConfigManageNack
00bac4 efef      	LDI  R30,LOW(65535)
00bac5 efff      	LDI  R31,HIGH(65535)
00bac6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15B:
00bac7 940e 92cc 	CALL _print_payload
00bac9 cfd1      	RJMP SUBOPT_0x154
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15C:
00baca 01f8      	MOVW R30,R16
                +
00bacb 5f0f     +SUBI R16 , LOW ( - 1 )
00bacc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00bacd 01de      	MOVW R26,R28
00bace 9617      	ADIW R26,7
00bacf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15D:
00bad0 93aa      	ST   -Y,R26
00bad1 972b      	SBIW R28,11
00bad2 cf90      	RJMP SUBOPT_0x14D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15E:
00bad3 89a8      	LDD  R26,Y+16
00bad4 83a0      	STD  Z+0,R26
00bad5 cf71      	RJMP SUBOPT_0x149
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15F:
00bad6 01de      	MOVW R26,R28
00bad7 9614      	ADIW R26,4
00bad8 0fae      	ADD  R26,R30
00bad9 1fbf      	ADC  R27,R31
00bada 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x160:
                +
00badb 01fe     +MOVW R30 , R28
00badc 5de2     +SUBI R30 , LOW ( - 558 )
00badd 4ffd     +SBCI R31 , HIGH ( - 558 )
00bade 81e0     +LD R30 , Z
                 	__GETB1SX 558
00badf 93ea      	ST   -Y,R30
00bae0 ca04      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x161:
00bae1 01fe      	MOVW R30,R28
00bae2 963e      	ADIW R30,14
00bae3 93fa      	ST   -Y,R31
00bae4 93ea      	ST   -Y,R30
00bae5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x162:
00bae6 dccd      	RCALL SUBOPT_0xD7
00bae7 940e cec8 	CALL __PUTPARD1
00bae9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x163:
                +
00baea efe3     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00baeb e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00baec e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00baed e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00baee 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x164:
00baf0 01de      	MOVW R26,R28
00baf1 961e      	ADIW R26,14
                +
00baf2 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00baf4 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00baf6 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00baf8 bf6c     +OUT EIND , R22
00baf9 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00bafa 018f      	MOVW R16,R30
00bafb 2311      	TST  R17
00bafc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x165:
                +
00bafd e2e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00bafe e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00baff e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00bb00 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00bb01 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x166:
                +
00bb03 e0ab     +LDI R26 , 11
00bb04 9fa0     +MUL R26 , R16
00bb05 01f0     +MOVW R30 , R0
00bb06 9fa1     +MUL R26 , R17
00bb07 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00bb08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x167:
00bb09 940e cec8 	CALL __PUTPARD1
00bb0b 91e0 1421 	LDS  R30,_commLostTimer
00bb0d 91f0 1422 	LDS  R31,_commLostTimer+1
00bb0f 9160 1423 	LDS  R22,_commLostTimer+2
00bb11 9170 1424 	LDS  R23,_commLostTimer+3
00bb13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x168:
00bb14 91a0 1421 	LDS  R26,_commLostTimer
00bb16 91b0 1422 	LDS  R27,_commLostTimer+1
00bb18 9180 1423 	LDS  R24,_commLostTimer+2
00bb1a 9190 1424 	LDS  R25,_commLostTimer+3
00bb1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x169:
00bb1d 93fa      	ST   -Y,R31
00bb1e 93ea      	ST   -Y,R30
                +
00bb1f e1ae     +LDI R26 , LOW ( 0x1E )
00bb20 e0b0     +LDI R27 , HIGH ( 0x1E )
00bb21 e080     +LDI R24 , BYTE3 ( 0x1E )
00bb22 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00bb23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x16A:
00bb24 940e cec8 	CALL __PUTPARD1
00bb26 da97      	RCALL SUBOPT_0x88
00bb27 91e0 1421 	LDS  R30,_commLostTimer
00bb29 91f0 1422 	LDS  R31,_commLostTimer+1
00bb2b 9160 1423 	LDS  R22,_commLostTimer+2
00bb2d 9170 1424 	LDS  R23,_commLostTimer+3
00bb2f 940e cd42 	CALL __SUBD12
00bb31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16B:
                +
00bb32 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00bb33 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00bb34 93fa      	ST   -Y,R31
00bb35 93ea      	ST   -Y,R30
00bb36 cfcc      	RJMP SUBOPT_0x166
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x16C:
                +
00bb37 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00bb38 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00bb39 01df      	MOVW R26,R30
00bb3a 940e ce94 	CALL __GETW1P
00bb3c 940e cdbd 	CALL __CWD1
00bb3e 940c b2f6 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16D:
                +
00bb40 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00bb41 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00bb42 01df      	MOVW R26,R30
00bb43 940e ce94 	CALL __GETW1P
00bb45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16E:
                +
00bb46 01de     +MOVW R26 , R28
00bb47 5da2     +SUBI R26 , LOW ( - 558 )
00bb48 4fbd     +SBCI R27 , HIGH ( - 558 )
00bb49 900d     +LD R0 , X +
00bb4a 91bc     +LD R27 , X
00bb4b 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00bb4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x16F:
                +
00bb4d 01de     +MOVW R26 , R28
00bb4e 5da4     +SUBI R26 , LOW ( - 556 )
00bb4f 4fbd     +SBCI R27 , HIGH ( - 556 )
00bb50 900d     +LD R0 , X +
00bb51 91bc     +LD R27 , X
00bb52 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00bb53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x170:
00bb54 940e cec8 	CALL __PUTPARD1
                +
00bb56 01fe     +MOVW R30 , R28
00bb57 5de0     +SUBI R30 , LOW ( - 560 )
00bb58 4ffd     +SBCI R31 , HIGH ( - 560 )
00bb59 9001     +LD R0 , Z +
00bb5a 81f0     +LD R31 , Z
00bb5b 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00bb5c ccbe      	RJMP SUBOPT_0xE6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x171:
00bb5d 930a      	ST   -Y,R16
00bb5e e1a0      	LDI  R26,LOW(16)
00bb5f 940c 5105 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x172:
00bb61 940e 96fc 	CALL _malloc
00bb63 01af      	MOVW R20,R30
00bb64 2e04      	MOV  R0,R20
00bb65 2a05      	OR   R0,R21
00bb66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x173:
00bb67 930a      	ST   -Y,R16
00bb68 e5a0      	LDI  R26,LOW(80)
00bb69 940c 5105 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x174:
                +
00bb6b 01fe     +MOVW R30 , R28
00bb6c 5de2     +SUBI R30 , LOW ( - 558 )
00bb6d 4ffd     +SBCI R31 , HIGH ( - 558 )
00bb6e 9001     +LD R0 , Z +
00bb6f 81f0     +LD R31 , Z
00bb70 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00bb71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x175:
00bb72 9632      	ADIW R30,2
00bb73 93fa      	ST   -Y,R31
00bb74 93ea      	ST   -Y,R30
00bb75 dff5      	RCALL SUBOPT_0x174
00bb76 9732      	SBIW R30,2
00bb77 93fa      	ST   -Y,R31
00bb78 93ea      	ST   -Y,R30
00bb79 01da      	MOVW R26,R20
00bb7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x176:
00bb7b 01da      	MOVW R26,R20
00bb7c 940e 9717 	CALL _free
00bb7e 930a      	ST   -Y,R16
00bb7f e3a0      	LDI  R26,LOW(48)
00bb80 940c 5105 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x177:
00bb82 940e cec8 	CALL __PUTPARD1
00bb84 2fe0      	MOV  R30,R16
00bb85 940c b342 	JMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x178:
00bb87 940e cec8 	CALL __PUTPARD1
00bb89 01fa      	MOVW R30,R20
00bb8a 85e0      	LDD  R30,Z+8
00bb8b 940c b342 	JMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x179:
00bb8d 940e cec8 	CALL __PUTPARD1
00bb8f 01da      	MOVW R26,R20
00bb90 9619      	ADIW R26,9
00bb91 940c b2f1 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17A:
00bb93 940e ce94 	CALL __GETW1P
00bb95 81ae      	LDD  R26,Y+6
00bb96 81bf      	LDD  R27,Y+6+1
00bb97 17ae      	CP   R26,R30
00bb98 07bf      	CPC  R27,R31
00bb99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17B:
00bb9a 0fae      	ADD  R26,R30
00bb9b 1fbf      	ADC  R27,R31
00bb9c 91ec      	LD   R30,X
00bb9d 940c b342 	JMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17C:
00bb9f 930a      	ST   -Y,R16
00bba0 01fa      	MOVW R30,R20
00bba1 85a0      	LDD  R26,Z+8
00bba2 93aa      	ST   -Y,R26
00bba3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17D:
00bba4 dbf9      	RCALL SUBOPT_0xD2
00bba5 01df      	MOVW R26,R30
00bba6 01cb      	MOVW R24,R22
00bba7 940e 7b01 	CALL _LOG_setLastSend
00bba9 019f      	MOVW R18,R30
00bbaa 2333      	TST  R19
00bbab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17E:
                +
00bbac e9e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00bbad e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00bbae e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00bbaf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00bbb0 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x17F:
00bbb2 01de      	MOVW R26,R28
00bbb3 961c      	ADIW R26,12
                +
00bbb4 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00bbb6 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00bbb8 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00bbba bf6c     +OUT EIND , R22
00bbbb 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00bbbc 019f      	MOVW R18,R30
00bbbd 2333      	TST  R19
00bbbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x180:
00bbbf e0b0      	LDI  R27,0
00bbc0 cfa0      	RJMP SUBOPT_0x172
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x181:
                +
00bbc1 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00bbc2 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00bbc3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00bbc4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00bbc5 940e cec8 	CALL __PUTPARD1
00bbc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:83 WORDS
                 SUBOPT_0x182:
00bbc8 940e cec8 	CALL __PUTPARD1
00bbca 940c b29d 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x183:
00bbcc df9e      	RCALL SUBOPT_0x174
00bbcd cfa4      	RJMP SUBOPT_0x175
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x184:
                +
00bbce e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00bbcf e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00bbd0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00bbd1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00bbd2 cfb4      	RJMP SUBOPT_0x178
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x185:
00bbd3 940e cec8 	CALL __PUTPARD1
00bbd5 01fa      	MOVW R30,R20
00bbd6 85e1      	LDD  R30,Z+9
00bbd7 940c b342 	JMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x186:
00bbd9 01fa      	MOVW R30,R20
00bbda 85e0      	LDD  R30,Z+8
00bbdb 940c b414 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x187:
00bbdd 01fa      	MOVW R30,R20
00bbde 85a1      	LDD  R26,Z+9
00bbdf 93aa      	ST   -Y,R26
00bbe0 e0a1      	LDI  R26,LOW(1)
00bbe1 940c 5238 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x188:
00bbe3 01fa      	MOVW R30,R20
00bbe4 85a1      	LDD  R26,Z+9
00bbe5 93aa      	ST   -Y,R26
00bbe6 e0e0      	LDI  R30,LOW(0)
00bbe7 93ea      	ST   -Y,R30
00bbe8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x189:
00bbe9 940e 5267 	CALL _ETH_sendConfigManageAck
00bbeb 019f      	MOVW R18,R30
00bbec 2333      	TST  R19
00bbed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18A:
00bbee 87e8      	STD  Y+8,R30
00bbef 87f9      	STD  Y+8+1,R31
00bbf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x18B:
00bbf1 85e8      	LDD  R30,Y+8
00bbf2 85f9      	LDD  R31,Y+8+1
00bbf3 93fa      	ST   -Y,R31
00bbf4 93ea      	ST   -Y,R30
00bbf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18C:
00bbf6 85e9      	LDD  R30,Y+9
00bbf7 85fa      	LDD  R31,Y+9+1
00bbf8 93fa      	ST   -Y,R31
00bbf9 93ea      	ST   -Y,R30
00bbfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18D:
00bbfb e0e0      	LDI  R30,LOW(0)
00bbfc e0f0      	LDI  R31,HIGH(0)
00bbfd 93fa      	ST   -Y,R31
00bbfe 93ea      	ST   -Y,R30
00bbff cc4c      	RJMP SUBOPT_0xF0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18E:
                +
00bc00 e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00bc01 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00bc02 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00bc03 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00bc04 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18F:
                +
00bc06 ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00bc07 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00bc08 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00bc09 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00bc0a cf7c      	RJMP SUBOPT_0x178
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x190:
                +
00bc0b ece6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00bc0c e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00bc0d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00bc0e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00bc0f 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x191:
00bc11 940e cec8 	CALL __PUTPARD1
00bc13 01fa      	MOVW R30,R20
                +
00bc14 85a1     +LDD R26 , Z + 9
00bc15 85b2     +LDD R27 , Z + 9 + 1
00bc16 8583     +LDD R24 , Z + 9 + 2
00bc17 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00bc18 940e cecd 	CALL __PUTPARD2
00bc1a 940c b29d 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x192:
00bc1c 940e cecd 	CALL __PUTPARD2
00bc1e 940c b29d 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x193:
                +
00bc20 85a1     +LDD R26 , Z + 9
00bc21 85b2     +LDD R27 , Z + 9 + 1
00bc22 8583     +LDD R24 , Z + 9 + 2
00bc23 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00bc24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x194:
                +
00bc25 e0ea     +LDI R30 , LOW ( 0xA )
00bc26 e0f0     +LDI R31 , HIGH ( 0xA )
00bc27 e060     +LDI R22 , BYTE3 ( 0xA )
00bc28 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00bc29 cf9e      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x195:
00bc2a df40      	RCALL SUBOPT_0x174
00bc2b 9632      	ADIW R30,2
00bc2c 93fa      	ST   -Y,R31
00bc2d 93ea      	ST   -Y,R30
00bc2e 01da      	MOVW R26,R20
00bc2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x196:
                +
00bc30 e0ed     +LDI R30 , LOW ( 0xD )
00bc31 e0f0     +LDI R31 , HIGH ( 0xD )
00bc32 e060     +LDI R22 , BYTE3 ( 0xD )
00bc33 e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00bc34 cf93      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x197:
                +
00bc35 ebed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00bc36 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00bc37 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00bc38 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00bc39 cf4d      	RJMP SUBOPT_0x178
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x198:
00bc3a 85a1      	LDD  R26,Z+9
00bc3b 85b2      	LDD  R27,Z+10
00bc3c 940e cf20 	CALL __CPW02
00bc3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x199:
00bc3f 930a      	ST   -Y,R16
00bc40 e3a0      	LDI  R26,LOW(48)
00bc41 940c 5105 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19A:
00bc43 85e0      	LDD  R30,Z+8
00bc44 e0f0      	LDI  R31,0
00bc45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x19B:
00bc46 9724      	SBIW R28,4
00bc47 e0e0      	LDI  R30,LOW(0)
00bc48 83e8      	ST   Y,R30
00bc49 83e9      	STD  Y+1,R30
00bc4a 83ea      	STD  Y+2,R30
00bc4b 83eb      	STD  Y+3,R30
00bc4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19C:
00bc4d 93fa      	ST   -Y,R31
00bc4e 93ea      	ST   -Y,R30
00bc4f e0aa      	LDI  R26,LOW(10)
00bc50 e0b0      	LDI  R27,0
00bc51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19D:
00bc52 0fe0      	ADD  R30,R16
00bc53 1ff1      	ADC  R31,R17
00bc54 93fa      	ST   -Y,R31
00bc55 93ea      	ST   -Y,R30
00bc56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19E:
00bc57 e0f0      	LDI  R31,0
00bc58 2bea      	OR   R30,R26
00bc59 2bfb      	OR   R31,R27
00bc5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x19F:
00bc5b 81ae      	LDD  R26,Y+6
00bc5c 81bf      	LDD  R27,Y+6+1
00bc5d 0fea      	ADD  R30,R26
00bc5e 1ffb      	ADC  R31,R27
00bc5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A0:
00bc60 01d0      	MOVW R26,R0
00bc61 e0f0      	LDI  R31,0
00bc62 17ea      	CP   R30,R26
00bc63 07fb      	CPC  R31,R27
00bc64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A1:
00bc65 93ba      	ST   -Y,R27
00bc66 93aa      	ST   -Y,R26
00bc67 940e cf38 	CALL __SAVELOCR6
00bc69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1A2:
00bc6a 81ae      	LDD  R26,Y+6
00bc6b 81bf      	LDD  R27,Y+6+1
00bc6c 0fae      	ADD  R26,R30
00bc6d 1fbf      	ADC  R27,R31
00bc6e 91ec      	LD   R30,X
00bc6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A3:
00bc70 e0a5      	LDI  R26,LOW(5)
00bc71 e0b0      	LDI  R27,0
00bc72 940c cb81 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A4:
00bc74 eaa9      	LDI  R26,LOW(_configRd)
00bc75 e0bf      	LDI  R27,HIGH(_configRd)
00bc76 cdb7      	RJMP SUBOPT_0x146
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A5:
00bc77 e0e0      	LDI  R30,LOW(0)
00bc78 93e0 10f0 	STS  _config_start,R30
00bc7a 93e0 10f1 	STS  _config_ready,R30
00bc7c 93e0 10f2 	STS  _config_end,R30
00bc7e 93e0 10f3 	STS  _config_response,R30
00bc80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A6:
00bc81 01de      	MOVW R26,R28
00bc82 9612      	ADIW R26,2
00bc83 940e 97c5 	CALL _strlen
00bc85 170e      	CP   R16,R30
00bc86 071f      	CPC  R17,R31
00bc87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A7:
                +
00bc88 e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00bc89 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00bc8a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00bc8b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00bc8c 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A8:
                +
00bc8e e0a7     +LDI R26 , LOW ( 0x7 )
00bc8f e0b0     +LDI R27 , HIGH ( 0x7 )
00bc90 e080     +LDI R24 , BYTE3 ( 0x7 )
00bc91 e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00bc92 940c 3ef1 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1A9:
00bc94 85ec      	LDD  R30,Y+12
00bc95 85fd      	LDD  R31,Y+12+1
00bc96 93fa      	ST   -Y,R31
00bc97 93ea      	ST   -Y,R30
00bc98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1AA:
00bc99 eae9      	LDI  R30,LOW(_configRd)
00bc9a e0ff      	LDI  R31,HIGH(_configRd)
00bc9b 93fa      	ST   -Y,R31
00bc9c 93ea      	ST   -Y,R30
00bc9d d8e0      	RCALL SUBOPT_0x7D
00bc9e 940c 9739 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AB:
00bca0 01de      	MOVW R26,R28
00bca1 9697      	ADIW R26,39
00bca2 940e 97c5 	CALL _strlen
00bca4 170e      	CP   R16,R30
00bca5 071f      	CPC  R17,R31
00bca6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1AC:
                +
00bca7 a5ab     +LDD R26 , Y + 43
00bca8 a5bc     +LDD R27 , Y + 43 + 1
00bca9 a58d     +LDD R24 , Y + 43 + 2
00bcaa a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00bcab 940e 3edb 	CALL _TIMER_checkTimerExceed
00bcad 9730      	SBIW R30,0
00bcae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1AD:
00bcaf 91ec      	LD   R30,X
00bcb0 e6a4      	LDI  R26,LOW(100)
00bcb1 9fea      	MUL  R30,R26
00bcb2 01b0      	MOVW R22,R0
00bcb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1AE:
00bcb4 81e1      	LDD  R30,Z+1
00bcb5 e0aa      	LDI  R26,LOW(10)
00bcb6 9fea      	MUL  R30,R26
00bcb7 01f0      	MOVW R30,R0
00bcb8 01db      	MOVW R26,R22
00bcb9 0fae      	ADD  R26,R30
00bcba 1fbf      	ADC  R27,R31
00bcbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1AF:
00bcbc 81e2      	LDD  R30,Z+2
00bcbd e0f0      	LDI  R31,0
00bcbe 0fea      	ADD  R30,R26
00bcbf 1ffb      	ADC  R31,R27
00bcc0 940e cdbd 	CALL __CWD1
00bcc2 940e cec8 	CALL __PUTPARD1
00bcc4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B0:
                +
00bcc5 01fe     +MOVW R30 , R28
00bcc6 5ce1     +SUBI R30 , LOW ( - 63 )
00bcc7 4fff     +SBCI R31 , HIGH ( - 63 )
00bcc8 9001     +LD R0 , Z +
00bcc9 81f0     +LD R31 , Z
00bcca 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00bccb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B1:
00bccc 81e3      	LDD  R30,Z+3
00bccd e6a4      	LDI  R26,LOW(100)
00bcce 9fea      	MUL  R30,R26
00bccf 01b0      	MOVW R22,R0
00bcd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B2:
00bcd1 81e4      	LDD  R30,Z+4
00bcd2 e0aa      	LDI  R26,LOW(10)
00bcd3 9fea      	MUL  R30,R26
00bcd4 01f0      	MOVW R30,R0
00bcd5 01db      	MOVW R26,R22
00bcd6 0fae      	ADD  R26,R30
00bcd7 1fbf      	ADC  R27,R31
00bcd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B3:
00bcd9 81e5      	LDD  R30,Z+5
00bcda e0f0      	LDI  R31,0
00bcdb 0fea      	ADD  R30,R26
00bcdc 1ffb      	ADC  R31,R27
00bcdd 940e cdbd 	CALL __CWD1
00bcdf 940e cec8 	CALL __PUTPARD1
00bce1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B4:
                +
00bce2 01fe     +MOVW R30 , R28
00bce3 5bed     +SUBI R30 , LOW ( - 67 )
00bce4 4fff     +SBCI R31 , HIGH ( - 67 )
00bce5 9001     +LD R0 , Z +
00bce6 81f0     +LD R31 , Z
00bce7 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00bce8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B5:
00bce9 81e6      	LDD  R30,Z+6
00bcea e6a4      	LDI  R26,LOW(100)
00bceb 9fea      	MUL  R30,R26
00bcec 01b0      	MOVW R22,R0
00bced 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B6:
00bcee 81e7      	LDD  R30,Z+7
00bcef e0aa      	LDI  R26,LOW(10)
00bcf0 9fea      	MUL  R30,R26
00bcf1 01f0      	MOVW R30,R0
00bcf2 01db      	MOVW R26,R22
00bcf3 0fae      	ADD  R26,R30
00bcf4 1fbf      	ADC  R27,R31
00bcf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1B7:
00bcf6 0fea      	ADD  R30,R26
00bcf7 1ffb      	ADC  R31,R27
00bcf8 940e cdbd 	CALL __CWD1
00bcfa 940e cec8 	CALL __PUTPARD1
00bcfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B8:
                +
00bcfd 01fe     +MOVW R30 , R28
00bcfe 5be9     +SUBI R30 , LOW ( - 71 )
00bcff 4fff     +SBCI R31 , HIGH ( - 71 )
00bd00 9001     +LD R0 , Z +
00bd01 81f0     +LD R31 , Z
00bd02 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00bd03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B9:
00bd04 85e1      	LDD  R30,Z+9
00bd05 e6a4      	LDI  R26,LOW(100)
00bd06 9fea      	MUL  R30,R26
00bd07 01b0      	MOVW R22,R0
00bd08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BA:
00bd09 85e2      	LDD  R30,Z+10
00bd0a e0aa      	LDI  R26,LOW(10)
00bd0b 9fea      	MUL  R30,R26
00bd0c 01f0      	MOVW R30,R0
00bd0d 01db      	MOVW R26,R22
00bd0e 0fae      	ADD  R26,R30
00bd0f 1fbf      	ADC  R27,R31
00bd10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1BB:
00bd11 85e3      	LDD  R30,Z+11
00bd12 e0f0      	LDI  R31,0
00bd13 cfe2      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1BC:
                +
00bd14 01fe     +MOVW R30 , R28
00bd15 5be7     +SUBI R30 , LOW ( - 73 )
00bd16 4fff     +SBCI R31 , HIGH ( - 73 )
00bd17 9001     +LD R0 , Z +
00bd18 81f0     +LD R31 , Z
00bd19 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00bd1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BD:
                +
00bd1b 01fe     +MOVW R30 , R28
00bd1c 5be3     +SUBI R30 , LOW ( - 77 )
00bd1d 4fff     +SBCI R31 , HIGH ( - 77 )
00bd1e 9001     +LD R0 , Z +
00bd1f 81f0     +LD R31 , Z
00bd20 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00bd21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BE:
                +
00bd22 01fe     +MOVW R30 , R28
00bd23 5aef     +SUBI R30 , LOW ( - 81 )
00bd24 4fff     +SBCI R31 , HIGH ( - 81 )
00bd25 9001     +LD R0 , Z +
00bd26 81f0     +LD R31 , Z
00bd27 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00bd28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BF:
                +
00bd29 01fe     +MOVW R30 , R28
00bd2a 5aeb     +SUBI R30 , LOW ( - 85 )
00bd2b 4fff     +SBCI R31 , HIGH ( - 85 )
00bd2c 9001     +LD R0 , Z +
00bd2d 81f0     +LD R31 , Z
00bd2e 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00bd2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C0:
                +
00bd30 01fe     +MOVW R30 , R28
00bd31 5ae5     +SUBI R30 , LOW ( - 91 )
00bd32 4fff     +SBCI R31 , HIGH ( - 91 )
00bd33 9001     +LD R0 , Z +
00bd34 81f0     +LD R31 , Z
00bd35 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00bd36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C1:
                +
00bd37 01fe     +MOVW R30 , R28
00bd38 5ae1     +SUBI R30 , LOW ( - 95 )
00bd39 4fff     +SBCI R31 , HIGH ( - 95 )
00bd3a 9001     +LD R0 , Z +
00bd3b 81f0     +LD R31 , Z
00bd3c 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00bd3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C2:
                +
00bd3e 01fe     +MOVW R30 , R28
00bd3f 59ed     +SUBI R30 , LOW ( - 99 )
00bd40 4fff     +SBCI R31 , HIGH ( - 99 )
00bd41 9001     +LD R0 , Z +
00bd42 81f0     +LD R31 , Z
00bd43 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00bd44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C3:
                +
00bd45 e1e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5421 ) )
00bd46 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5421 ) )
00bd47 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5421 ) )
00bd48 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5421 ) )
                 	__POINTD1FN _0x120000,5421
00bd49 940e cec8 	CALL __PUTPARD1
00bd4b 01fe      	MOVW R30,R28
00bd4c 963a      	ADIW R30,10
00bd4d 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C4:
00bd4f 93fa      	ST   -Y,R31
00bd50 93ea      	ST   -Y,R30
00bd51 01fe      	MOVW R30,R28
00bd52 9638      	ADIW R30,8
00bd53 93fa      	ST   -Y,R31
00bd54 93ea      	ST   -Y,R30
00bd55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C5:
00bd56 e0b0      	LDI  R27,0
00bd57 940c 9739 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C6:
                +
00bd59 01fe     +MOVW R30 , R28
00bd5a 5bef     +SUBI R30 , LOW ( - 65 )
00bd5b 4fff     +SBCI R31 , HIGH ( - 65 )
00bd5c 9001     +LD R0 , Z +
00bd5d 81f0     +LD R31 , Z
00bd5e 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00bd5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C7:
                +
00bd60 e020     +LDI R18 , LOW ( 0 )
00bd61 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00bd62 e000     +LDI R16 , LOW ( 0 )
00bd63 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bd64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1C8:
00bd65 01f9      	MOVW R30,R18
                +
00bd66 5f2f     +SUBI R18 , LOW ( - 1 )
00bd67 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00bd68 85a8      	LDD  R26,Y+8
00bd69 85b9      	LDD  R27,Y+8+1
00bd6a 0fae      	ADD  R26,R30
00bd6b 1fbf      	ADC  R27,R31
00bd6c 91ec      	LD   R30,X
00bd6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C9:
                +
00bd6e 81ac     +LDD R26 , Y + 4
00bd6f 81bd     +LDD R27 , Y + 4 + 1
00bd70 9618     +ADIW R26 , 8
00bd71 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00bd72 cff2      	RJMP SUBOPT_0x1C8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1CA:
                +
00bd73 81ac     +LDD R26 , Y + 4
00bd74 81bd     +LDD R27 , Y + 4 + 1
00bd75 9619     +ADIW R26 , 9
00bd76 93ed     +ST X + , R30
00bd77 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00bd78 81ec      	LDD  R30,Y+4
00bd79 81fd      	LDD  R31,Y+4+1
00bd7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CB:
00bd7b e0e1      	LDI  R30,LOW(1)
00bd7c e0f0      	LDI  R31,HIGH(1)
00bd7d 940e cdd6 	CALL __MULW12U
00bd7f 01df      	MOVW R26,R30
00bd80 940c 96fc 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1CC:
00bd82 940e ce94 	CALL __GETW1P
00bd84 170e      	CP   R16,R30
00bd85 071f      	CPC  R17,R31
00bd86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1CD:
00bd87 01f8      	MOVW R30,R16
00bd88 0fea      	ADD  R30,R26
00bd89 1ffb      	ADC  R31,R27
00bd8a 010f      	MOVW R0,R30
00bd8b 01f9      	MOVW R30,R18
00bd8c 0fe0      	ADD  R30,R16
00bd8d 1ff1      	ADC  R31,R17
00bd8e 85a8      	LDD  R26,Y+8
00bd8f 85b9      	LDD  R27,Y+8+1
00bd90 cc0f      	RJMP SUBOPT_0x12B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1CE:
                +
00bd91 81ac     +LDD R26 , Y + 4
00bd92 81bd     +LDD R27 , Y + 4 + 1
00bd93 9618     +ADIW R26 , 8
00bd94 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00bd95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1CF:
00bd96 e0f0      	LDI  R31,0
00bd97 940e cdbd 	CALL __CWD1
                +
00bd99 7fef     +ANDI R30 , LOW ( 0xFF )
00bd9a 70f0     +ANDI R31 , HIGH ( 0xFF )
00bd9b 7060     +ANDI R22 , BYTE3 ( 0xFF )
00bd9c 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00bd9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D0:
00bd9e 01df      	MOVW R26,R30
00bd9f 01cb      	MOVW R24,R22
00bda0 e1e8      	LDI  R30,LOW(24)
00bda1 940e cd6b 	CALL __LSLD12
00bda3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D1:
00bda4 01df      	MOVW R26,R30
00bda5 01cb      	MOVW R24,R22
00bda6 e0e8      	LDI  R30,LOW(8)
00bda7 940e cd6b 	CALL __LSLD12
00bda9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D2:
00bdaa 940e cd51 	CALL __ORD12
                +
00bdac 81ac     +LDD R26 , Y + 4
00bdad 81bd     +LDD R27 , Y + 4 + 1
00bdae 9619     +ADIW R26 , 9
00bdaf 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00bdb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D3:
00bdb2 01f9      	MOVW R30,R18
                +
00bdb3 5f2f     +SUBI R18 , LOW ( - 1 )
00bdb4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00bdb5 ceb4      	RJMP SUBOPT_0x1A2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D4:
00bdb6 93ba      	ST   -Y,R27
00bdb7 93aa      	ST   -Y,R26
00bdb8 ce8d      	RJMP SUBOPT_0x19B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1D5:
00bdb9 940e 96fc 	CALL _malloc
00bdbb 83ee      	STD  Y+6,R30
00bdbc 83ff      	STD  Y+6+1,R31
00bdbd 9730      	SBIW R30,0
00bdbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1D6:
                +
00bdbf e4ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00bdc0 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00bdc1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00bdc2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00bdc3 cbad      	RJMP SUBOPT_0x122
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1D7:
00bdc4 85ea      	LDD  R30,Y+10
00bdc5 85fb      	LDD  R31,Y+10+1
00bdc6 93fa      	ST   -Y,R31
00bdc7 93ea      	ST   -Y,R30
00bdc8 ce28      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D8:
00bdc9 940e 9739 	CALL _memcpy
00bdcb ccd9      	RJMP SUBOPT_0x156
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D9:
00bdcc e0a8      	LDI  R26,LOW(8)
00bdcd e0b0      	LDI  R27,0
00bdce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DA:
                +
00bdcf e0ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00bdd0 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00bdd1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00bdd2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00bdd3 cb9d      	RJMP SUBOPT_0x122
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1DB:
                +
00bdd4 e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00bdd5 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00bdd6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00bdd7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00bdd8 cb98      	RJMP SUBOPT_0x122
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1DC:
                +
00bdd9 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00bdda e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00bddb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00bddc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00bddd 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1DD:
00bddf 85ec      	LDD  R30,Y+12
00bde0 e0f0      	LDI  R31,0
00bde1 70ef      	ANDI R30,LOW(0xF)
00bde2 70f0      	ANDI R31,HIGH(0xF)
00bde3 87e8      	STD  Y+8,R30
00bde4 87f9      	STD  Y+8+1,R31
00bde5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1DE:
00bde6 e0b0      	LDI  R27,0
00bde7 cfd1      	RJMP SUBOPT_0x1D5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1DF:
00bde8 940e cec8 	CALL __PUTPARD1
00bdea 85ec      	LDD  R30,Y+12
00bdeb 85fd      	LDD  R31,Y+12+1
00bdec ca2e      	RJMP SUBOPT_0xE6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E0:
00bded 940e cec8 	CALL __PUTPARD1
                +
00bdef e0e3     +LDI R30 , LOW ( 0x3 )
00bdf0 e0f0     +LDI R31 , HIGH ( 0x3 )
00bdf1 e060     +LDI R22 , BYTE3 ( 0x3 )
00bdf2 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00bdf3 cdd4      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E1:
                +
00bdf4 e5e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00bdf5 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00bdf6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00bdf7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00bdf8 cb73      	RJMP SUBOPT_0x121
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E2:
                +
00bdf9 e0e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00bdfa e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00bdfb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00bdfc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00bdfd cb6e      	RJMP SUBOPT_0x121
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E3:
                +
00bdfe e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00bdff e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00be00 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00be01 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00be02 cb6e      	RJMP SUBOPT_0x122
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E4:
                +
00be03 e5e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00be04 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00be05 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00be06 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00be07 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E5:
00be09 e2e2      	LDI  R30,LOW(34)
00be0a e0f0      	LDI  R31,HIGH(34)
00be0b 17e0      	CP   R30,R16
00be0c 07f1      	CPC  R31,R17
00be0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E6:
                +
00be0e 81a1     +LDD R26 , Z + 1
00be0f 81b2     +LDD R27 , Z + 1 + 1
00be10 8183     +LDD R24 , Z + 1 + 2
00be11 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00be12 ce09      	RJMP SUBOPT_0x192
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E7:
                +
00be13 eeed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00be14 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00be15 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00be16 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00be17 940e cec8 	CALL __PUTPARD1
00be19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1E8:
00be1a 85ea      	LDD  R30,Y+10
00be1b e0f0      	LDI  R31,0
00be1c 70ef      	ANDI R30,LOW(0xF)
00be1d 70f0      	ANDI R31,HIGH(0xF)
00be1e 01af      	MOVW R20,R30
00be1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E9:
00be20 935a      	ST   -Y,R21
00be21 934a      	ST   -Y,R20
00be22 85aa      	LDD  R26,Y+10
00be23 85bb      	LDD  R27,Y+10+1
00be24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EA:
00be25 940e cec8 	CALL __PUTPARD1
00be27 940c b443 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1EB:
00be29 01fe      	MOVW R30,R28
00be2a 9632      	ADIW R30,2
00be2b 93fa      	ST   -Y,R31
00be2c 93ea      	ST   -Y,R30
00be2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1EC:
00be2e d8ac      	RCALL SUBOPT_0xB4
00be2f 940e cf1c 	CALL __CPD10
00be31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1ED:
00be32 940e cec8 	CALL __PUTPARD1
00be34 d8b0      	RCALL SUBOPT_0xB6
00be35 cd92      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1EE:
00be36 940e cecd 	CALL __PUTPARD2
00be38 931a      	ST   -Y,R17
00be39 930a      	ST   -Y,R16
00be3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EF:
00be3b 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00be3c 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00be3d e0a0      	LDI  R26,LOW(0)
00be3e 83a0      	STD  Z+0,R26
00be3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F0:
00be40 940e cec8 	CALL __PUTPARD1
00be42 85ec      	LDD  R30,Y+12
00be43 940c b4d5 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F1:
00be45 e0ab      	LDI  R26,LOW(11)
00be46 9f1a      	MUL  R17,R26
00be47 01f0      	MOVW R30,R0
                +
00be48 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00be49 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00be4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1F2:
00be4b 01df      	MOVW R26,R30
00be4c 940e 9717 	CALL _free
00be4e e0ab      	LDI  R26,LOW(11)
00be4f 9f1a      	MUL  R17,R26
00be50 01f0      	MOVW R30,R0
                +
00be51 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00be52 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00be53 e0a0      	LDI  R26,LOW(0)
00be54 e0b0      	LDI  R27,HIGH(0)
00be55 83a0      	STD  Z+0,R26
00be56 83b1      	STD  Z+1,R27
00be57 e0ab      	LDI  R26,LOW(11)
00be58 9f1a      	MUL  R17,R26
00be59 01f0      	MOVW R30,R0
                +
00be5a 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00be5b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00be5c e0a0      	LDI  R26,LOW(0)
00be5d 83a0      	STD  Z+0,R26
00be5e cfe6      	RJMP SUBOPT_0x1F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1F3:
00be5f e0a0      	LDI  R26,LOW(0)
00be60 83a0      	STD  Z+0,R26
00be61 e0ab      	LDI  R26,LOW(11)
00be62 9f1a      	MUL  R17,R26
00be63 01f0      	MOVW R30,R0
00be64 cfd6      	RJMP SUBOPT_0x1EF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F4:
00be65 e0ab      	LDI  R26,LOW(11)
00be66 9f1a      	MUL  R17,R26
00be67 01f0      	MOVW R30,R0
                +
00be68 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00be69 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00be6a e0a0      	LDI  R26,LOW(0)
00be6b e0b0      	LDI  R27,HIGH(0)
00be6c 83a0      	STD  Z+0,R26
00be6d 83b1      	STD  Z+1,R27
00be6e e0ab      	LDI  R26,LOW(11)
00be6f 9f1a      	MUL  R17,R26
00be70 01f0      	MOVW R30,R0
                +
00be71 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00be72 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00be73 940e b350 	CALL SUBOPT_0x2D
00be75 940e cec3 	CALL __PUTDZ20
00be77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F5:
00be78 940e cec8 	CALL __PUTPARD1
00be7a 81ed      	LDD  R30,Y+5
00be7b 940c b4d5 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F6:
00be7d 2fe1      	MOV  R30,R17
00be7e 27ff      	CLR  R31
00be7f 2766      	CLR  R22
00be80 2777      	CLR  R23
00be81 940c b300 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F7:
00be83 e6e4      	LDI  R30,LOW(100)
00be84 e0f0      	LDI  R31,HIGH(100)
00be85 940e ce68 	CALL __MODW21
00be87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F8:
00be88 81ec      	LDD  R30,Y+4
00be89 81fd      	LDD  R31,Y+4+1
00be8a 940c b376 	JMP SUBOPT_0x32
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F9:
00be8c 81aa      	LDD  R26,Y+2
00be8d 81bb      	LDD  R27,Y+2+1
00be8e 940e cea3 	CALL __PUTDP1
00be90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1FA:
                +
00be91 01de     +MOVW R26 , R28
00be92 5fa2     +SUBI R26 , LOW ( - 526 )
00be93 4fbd     +SBCI R27 , HIGH ( - 526 )
00be94 91ac     +LD R26 , X
                 	__GETB2SX 526
00be95 5fa8      	SUBI R26,-LOW(8)
00be96 940c 4155 	JMP  _read_adc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1FB:
                +
00be98 01fe     +MOVW R30 , R28
00be99 5fe2     +SUBI R30 , LOW ( - 526 )
00be9a 4ffd     +SBCI R31 , HIGH ( - 526 )
00be9b 9001     +LD R0 , Z +
00be9c 81f0     +LD R31 , Z
00be9d 2de0     +MOV R30 , R0
                 	__GETW1SX 526
00be9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FC:
00be9f 940e cd87 	CALL __LSLW2
00bea1 0fea      	ADD  R30,R26
00bea2 1ffb      	ADC  R31,R27
00bea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FD:
00bea4 940e 6a3a 	CALL _average
                +
00bea6 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00bea7 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00bea8 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00bea9 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00beaa 940c b674 	JMP SUBOPT_0xA0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FE:
                +
00beac e0e0     +LDI R30 , LOW ( 0x447FC000 )
00bead ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00beae e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00beaf e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00beb0 940e cccf 	CALL __DIVF21
00beb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1FF:
00beb3 dfe4      	RCALL SUBOPT_0x1FB
00beb4 940c b376 	JMP SUBOPT_0x32
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x200:
00beb6 940e b48c 	CALL SUBOPT_0x59
00beb8 940e cec3 	CALL __PUTDZ20
00beba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x201:
                +
00bebb 01de     +MOVW R26 , R28
00bebc 5fa2     +SUBI R26 , LOW ( - 526 )
00bebd 4fbd     +SBCI R27 , HIGH ( - 526 )
00bebe 900d     +LD R0 , X +
00bebf 91bc     +LD R27 , X
00bec0 2da0     +MOV R26 , R0
                 	__GETW2SX 526
00bec1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x202:
00bec2 e3a2      	LDI  R26,LOW(50)
00bec3 e0b0      	LDI  R27,0
00bec4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x203:
                +
00bec5 87ea     +STD Y + 10 , R30
00bec6 87fb     +STD Y + 10 + 1 , R31
00bec7 876c     +STD Y + 10 + 2 , R22
00bec8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00bec9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x204:
00beca 0fea      	ADD  R30,R26
00becb 1ffb      	ADC  R31,R27
00becc 940e b45c 	CALL SUBOPT_0x52
00bece 940e cec3 	CALL __PUTDZ20
00bed0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x205:
00bed1 940e ceda 	CALL __SWAPD12
00bed3 940e cc2a 	CALL __SUBF12
00bed5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x206:
                +
00bed6 87ee     +STD Y + 14 , R30
00bed7 87ff     +STD Y + 14 + 1 , R31
00bed8 8b68     +STD Y + 14 + 2 , R22
00bed9 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00beda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x207:
                +
00bedb 85ae     +LDD R26 , Y + 14
00bedc 85bf     +LDD R27 , Y + 14 + 1
00bedd 8988     +LDD R24 , Y + 14 + 2
00bede 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00bedf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x208:
00bee0 940e cec3 	CALL __PUTDZ20
00bee2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x209:
00bee3 93fa      	ST   -Y,R31
00bee4 93ea      	ST   -Y,R30
00bee5 940c b547 	JMP SUBOPT_0x73
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20A:
00bee7 93fa      	ST   -Y,R31
00bee8 93ea      	ST   -Y,R30
00bee9 940c b54e 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20B:
00beeb 01f8      	MOVW R30,R16
00beec 81ae      	LDD  R26,Y+6
00beed 81bf      	LDD  R27,Y+6+1
00beee 940e cd87 	CALL __LSLW2
00bef0 940c b2e1 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20C:
00bef2 e0e0      	LDI  R30,LOW(0)
00bef3 83e8      	ST   Y,R30
00bef4 83e9      	STD  Y+1,R30
00bef5 83ea      	STD  Y+2,R30
00bef6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20D:
00bef7 940e cd87 	CALL __LSLW2
00bef9 940c b2e1 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20E:
00befb 940e b6e0 	CALL SUBOPT_0xB5
00befd 940e cdbd 	CALL __CWD1
00beff 940e cbf7 	CALL __CDF1
00bf01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20F:
00bf02 01f5      	MOVW R30,R10
00bf03 e0aa      	LDI  R26,LOW(10)
00bf04 e0b0      	LDI  R27,HIGH(10)
00bf05 940e cdd6 	CALL __MULW12U
00bf07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x210:
00bf08 e0ea      	LDI  R30,LOW(10)
00bf09 e0f0      	LDI  R31,HIGH(10)
00bf0a 940e ce68 	CALL __MODW21
00bf0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x211:
00bf0d 01f6      	MOVW R30,R12
00bf0e e0aa      	LDI  R26,LOW(10)
00bf0f e0b0      	LDI  R27,HIGH(10)
00bf10 940e cdd6 	CALL __MULW12U
00bf12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x212:
00bf13 01df      	MOVW R26,R30
00bf14 940e ce98 	CALL __GETD1P
00bf16 81ac      	LDD  R26,Y+4
00bf17 81bd      	LDD  R27,Y+4+1
00bf18 940e cea3 	CALL __PUTDP1
00bf1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x213:
00bf1b 93e0 1483 	STS  _batteryVolt,R30
00bf1d 93f0 1484 	STS  _batteryVolt+1,R31
00bf1f 9360 1485 	STS  _batteryVolt+2,R22
00bf21 9370 1486 	STS  _batteryVolt+3,R23
00bf23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x214:
                +
00bf24 91e0 136b+LDS R30 , _env_config + ( 6 )
00bf26 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00bf28 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00bf2a 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00bf2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x215:
00bf2d 70e4      	ANDI R30,LOW(0x4)
00bf2e e0f0      	LDI  R31,0
00bf2f 940e cd90 	CALL __ASRW2
00bf31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x216:
00bf32 91e0 146b 	LDS  R30,_sdFreeSpace
00bf34 91f0 146c 	LDS  R31,_sdFreeSpace+1
00bf36 9160 146d 	LDS  R22,_sdFreeSpace+2
00bf38 9170 146e 	LDS  R23,_sdFreeSpace+3
00bf3a 940e cf1c 	CALL __CPD10
00bf3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x217:
00bf3d 81e8      	LD   R30,Y
00bf3e 81f9      	LDD  R31,Y+1
00bf3f 59e1      	SUBI R30,LOW(-_sensorStatus)
00bf40 4efb      	SBCI R31,HIGH(-_sensorStatus)
00bf41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x218:
00bf42 81ea      	LDD  R30,Y+2
00bf43 81fb      	LDD  R31,Y+2+1
00bf44 52e6      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00bf45 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00bf46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x219:
00bf47 81ea      	LDD  R30,Y+2
00bf48 81fb      	LDD  R31,Y+2+1
00bf49 eca6      	LDI  R26,LOW(_t_S00F0005000)
00bf4a e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00bf4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21A:
00bf4c 940e cd87 	CALL __LSLW2
00bf4e 940c b2ec 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21B:
00bf50 e1ed      	LDI  R30,LOW(29)
00bf51 940e cdfe 	CALL __MULB1W2U
                +
00bf53 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00bf54 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00bf55 01df      	MOVW R26,R30
00bf56 940c b2f1 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x21C:
00bf58 81aa      	LDD  R26,Y+2
00bf59 81bb      	LDD  R27,Y+2+1
00bf5a 58ac      	SUBI R26,LOW(-_dataStatus)
00bf5b 4ebb      	SBCI R27,HIGH(-_dataStatus)
00bf5c 91ec      	LD   R30,X
00bf5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21D:
00bf5e 81ea      	LDD  R30,Y+2
00bf5f 81fb      	LDD  R31,Y+2+1
00bf60 52e1      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00bf61 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00bf62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21E:
00bf63 e1ed      	LDI  R30,LOW(29)
00bf64 940e cdfe 	CALL __MULB1W2U
                +
00bf66 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00bf67 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00bf68 01df      	MOVW R26,R30
00bf69 940c b2f1 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21F:
                +
00bf6b ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00bf6c e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00bf6d 0fe0      	ADD  R30,R16
00bf6e 1ff1      	ADC  R31,R17
00bf6f 81e0      	LD   R30,Z
00bf70 30e0      	CPI  R30,0
00bf71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x220:
00bf72 81aa      	LDD  R26,Y+2
00bf73 81bb      	LDD  R27,Y+2+1
00bf74 01cd      	MOVW R24,R26
00bf75 916d      	LD   R22,X+
00bf76 917c      	LD   R23,X
00bf77 e0e4      	LDI  R30,LOW(4)
00bf78 e0f0      	LDI  R31,HIGH(4)
00bf79 1be0      	SUB  R30,R16
00bf7a 0bf1      	SBC  R31,R17
00bf7b e0a1      	LDI  R26,LOW(1)
00bf7c e0b0      	LDI  R27,HIGH(1)
00bf7d 940e cd62 	CALL __LSLW12
00bf7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x221:
00bf80 91a0 1668 	LDS  R26,_last_wr_eventQ
00bf82 91b0 1669 	LDS  R27,_last_wr_eventQ+1
00bf84 e0e6      	LDI  R30,LOW(6)
00bf85 940e cdfe 	CALL __MULB1W2U
00bf87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x222:
00bf88 91a0 166a 	LDS  R26,_last_rd_eventQ
00bf8a 91b0 166b 	LDS  R27,_last_rd_eventQ+1
00bf8c e0e6      	LDI  R30,LOW(6)
00bf8d 940e cdfe 	CALL __MULB1W2U
00bf8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x223:
00bf90 81e0      	LD   R30,Z
00bf91 81a8      	LD   R26,Y
00bf92 81b9      	LDD  R27,Y+1
00bf93 93ec      	ST   X,R30
00bf94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x224:
00bf95 940e cf3a 	CALL __SAVELOCR4
                +
00bf97 e000     +LDI R16 , LOW ( 0 )
00bf98 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bf99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x225:
00bf9a 0fa0      	ADD  R26,R16
00bf9b 1fb1      	ADC  R27,R17
00bf9c 91ec      	LD   R30,X
00bf9d 30e0      	CPI  R30,0
00bf9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x226:
00bf9f 93fa      	ST   -Y,R31
00bfa0 93ea      	ST   -Y,R30
                +
00bfa1 e0a3     +LDI R26 , LOW ( 0x3 )
00bfa2 e0b0     +LDI R27 , HIGH ( 0x3 )
00bfa3 e080     +LDI R24 , BYTE3 ( 0x3 )
00bfa4 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00bfa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x227:
00bfa6 81a8      	LD   R26,Y
00bfa7 81b9      	LDD  R27,Y+1
00bfa8 93ec      	ST   X,R30
00bfa9 e0e0      	LDI  R30,LOW(0)
00bfaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x228:
                +
00bfab 91a0 136b+LDS R26 , _env_config + ( 6 )
00bfad 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00bfaf 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00bfb1 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00bfb3 940e cf28 	CALL __CPD02
00bfb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x229:
00bfb6 81a8      	LD   R26,Y
00bfb7 81b9      	LDD  R27,Y+1
00bfb8 e0e0      	LDI  R30,LOW(0)
00bfb9 93ec      	ST   X,R30
00bfba e0e1      	LDI  R30,LOW(1)
00bfbb e0f0      	LDI  R31,HIGH(1)
00bfbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22A:
                +
00bfbd 91a0 1375+LDS R26 , _env_config + ( 16 )
00bfbf 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00bfc1 940e cf20 	CALL __CPW02
00bfc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x22B:
00bfc4 81ea      	LDD  R30,Y+2
00bfc5 81fb      	LDD  R31,Y+2+1
00bfc6 58e4      	SUBI R30,LOW(-_dinStatus)
00bfc7 4efb      	SBCI R31,HIGH(-_dinStatus)
00bfc8 81a0      	LD   R26,Z
00bfc9 81ea      	LDD  R30,Y+2
00bfca 81fb      	LDD  R31,Y+2+1
00bfcb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22C:
00bfcc 81ea      	LDD  R30,Y+2
00bfcd 81fb      	LDD  R31,Y+2+1
00bfce 56e4      	SUBI R30,LOW(-_t_flag_S0110006000)
00bfcf 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00bfd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22D:
00bfd1 81ea      	LDD  R30,Y+2
00bfd2 81fb      	LDD  R31,Y+2+1
00bfd3 58e4      	SUBI R30,LOW(-_dinStatus)
00bfd4 4efb      	SBCI R31,HIGH(-_dinStatus)
00bfd5 81e0      	LD   R30,Z
00bfd6 93ec      	ST   X,R30
00bfd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22E:
00bfd8 93ba      	ST   -Y,R27
00bfd9 93aa      	ST   -Y,R26
00bfda 81ea      	LDD  R30,Y+2
00bfdb 81fb      	LDD  R31,Y+2+1
00bfdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22F:
00bfdd 81ea      	LDD  R30,Y+2
00bfde 81fb      	LDD  R31,Y+2+1
00bfdf 59e1      	SUBI R30,LOW(-_sensorStatus)
00bfe0 4efb      	SBCI R31,HIGH(-_sensorStatus)
00bfe1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x230:
00bfe2 81ea      	LDD  R30,Y+2
00bfe3 81fb      	LDD  R31,Y+2+1
00bfe4 54ec      	SUBI R30,LOW(-_t_flag_S0110007000)
00bfe5 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00bfe6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x231:
00bfe7 81ea      	LDD  R30,Y+2
00bfe8 81fb      	LDD  R31,Y+2+1
00bfe9 eaa0      	LDI  R26,LOW(_t_S0110007000)
00bfea e1b6      	LDI  R27,HIGH(_t_S0110007000)
00bfeb cf60      	RJMP SUBOPT_0x21A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x232:
00bfec 81ea      	LDD  R30,Y+2
00bfed 81fb      	LDD  R31,Y+2+1
00bfee 52ee      	SUBI R30,LOW(-_t_flag_S0110008000)
00bfef 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00bff0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x233:
00bff1 81e0      	LD   R30,Z
00bff2 27ff      	CLR  R31
00bff3 2766      	CLR  R22
00bff4 2777      	CLR  R23
00bff5 940c b300 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x234:
00bff7 e0f0      	LDI  R31,0
00bff8 30e1      	CPI  R30,LOW(0x1)
00bff9 e0a0      	LDI  R26,HIGH(0x1)
00bffa 07fa      	CPC  R31,R26
00bffb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x235:
00bffc e088      	LDI  R24,8
00bffd 940e 75ba 	CALL _printOLED
00bfff 962c      	ADIW R28,12
00c000 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x236:
                +
00c001 e0a5     +LDI R26 , 5
00c002 9fa0     +MUL R26 , R16
00c003 01f0     +MOVW R30 , R0
00c004 9fa1     +MUL R26 , R17
00c005 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00c006 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x237:
00c007 940e cec8 	CALL __PUTPARD1
00c009 01f8      	MOVW R30,R16
00c00a 9631      	ADIW R30,1
00c00b 940e cdbd 	CALL __CWD1
00c00d 940e cec8 	CALL __PUTPARD1
00c00f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x238:
00c010 940e cec8 	CALL __PUTPARD1
00c012 cfe9      	RJMP SUBOPT_0x235
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 109 TIMES, CODE SIZE REDUCTION:213 WORDS
                 SUBOPT_0x239:
00c013 e084      	LDI  R24,4
00c014 940e 75ba 	CALL _printOLED
00c016 9628      	ADIW R28,8
00c017 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23A:
00c018 940e b5da 	CALL SUBOPT_0x8C
                +
00c01a e0e0     +LDI R30 , LOW ( 0x40400000 )
00c01b e0f0     +LDI R31 , HIGH ( 0x40400000 )
00c01c e460     +LDI R22 , BYTE3 ( 0x40400000 )
00c01d e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00c01e 940e cd14 	CALL __CMPF12
00c020 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23B:
00c021 940e b5da 	CALL SUBOPT_0x8C
                +
00c023 e3e3     +LDI R30 , LOW ( 0x40533333 )
00c024 e3f3     +LDI R31 , HIGH ( 0x40533333 )
00c025 e563     +LDI R22 , BYTE3 ( 0x40533333 )
00c026 e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00c027 940e cd14 	CALL __CMPF12
00c029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23C:
00c02a 940e b5da 	CALL SUBOPT_0x8C
                +
00c02c eced     +LDI R30 , LOW ( 0x406CCCCD )
00c02d ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00c02e e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00c02f e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00c030 940e cd14 	CALL __CMPF12
00c032 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23D:
00c033 940e b5da 	CALL SUBOPT_0x8C
                +
00c035 e0e0     +LDI R30 , LOW ( 0x40800000 )
00c036 e0f0     +LDI R31 , HIGH ( 0x40800000 )
00c037 e860     +LDI R22 , BYTE3 ( 0x40800000 )
00c038 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00c039 940e cd14 	CALL __CMPF12
00c03b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x23E:
00c03c e080      	LDI  R24,0
00c03d 940e 75ba 	CALL _printOLED
00c03f 9624      	ADIW R28,4
00c040 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x23F:
00c041 940e cdbd 	CALL __CWD1
00c043 940e cec8 	CALL __PUTPARD1
00c045 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x240:
00c046 940e cec8 	CALL __PUTPARD1
00c048 81ec      	LDD  R30,Y+4
00c049 940c b4d5 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x241:
00c04b 940e cd34 	CALL __ADDW2R15
00c04d 940e ce98 	CALL __GETD1P
00c04f 940e cec8 	CALL __PUTPARD1
00c051 01d8      	MOVW R26,R16
00c052 940c b174 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x242:
00c054 940e b45c 	CALL SUBOPT_0x52
00c056 940e ab6a 	CALL _f_lseek
00c058 2f1e      	MOV  R17,R30
00c059 3010      	CPI  R17,0
00c05a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x243:
00c05b 2fa1      	MOV  R26,R17
00c05c 940e 761b 	CALL _error
00c05e efef      	LDI  R30,LOW(65535)
00c05f efff      	LDI  R31,HIGH(65535)
00c060 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x244:
00c061 93fa      	ST   -Y,R31
00c062 93ea      	ST   -Y,R30
00c063 01fe      	MOVW R30,R28
00c064 9633      	ADIW R30,3
00c065 93fa      	ST   -Y,R31
00c066 93ea      	ST   -Y,R30
00c067 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x245:
00c068 940e cec8 	CALL __PUTPARD1
00c06a e0eb      	LDI  R30,LOW(_root_path)
00c06b e1f9      	LDI  R31,HIGH(_root_path)
00c06c 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x246:
00c06e 940e 761b 	CALL _error
00c070 e0e0      	LDI  R30,LOW(0)
00c071 93e0 146b 	STS  _sdFreeSpace,R30
00c073 93e0 146c 	STS  _sdFreeSpace+1,R30
00c075 93e0 146d 	STS  _sdFreeSpace+2,R30
00c077 93e0 146e 	STS  _sdFreeSpace+3,R30
00c079 efef      	LDI  R30,LOW(65535)
00c07a efff      	LDI  R31,HIGH(65535)
00c07b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x247:
00c07c 81e2      	LDD  R30,Z+2
00c07d e0f0      	LDI  R31,0
00c07e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x248:
                +
00c07f 81a9     +LDD R26 , Y + 1
00c080 81ba     +LDD R27 , Y + 1 + 1
00c081 818b     +LDD R24 , Y + 1 + 2
00c082 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00c083 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x249:
00c084 940e cdbd 	CALL __CWD1
00c086 940e cdde 	CALL __MULD12U
00c088 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24A:
                +
00c089 e1ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00c08a e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00c08b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00c08c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00c08d cfda      	RJMP SUBOPT_0x245
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24B:
00c08e 93fa      	ST   -Y,R31
00c08f 93ea      	ST   -Y,R30
00c090 01fe      	MOVW R30,R28
00c091 9634      	ADIW R30,4
00c092 93fa      	ST   -Y,R31
00c093 93ea      	ST   -Y,R30
00c094 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24C:
00c095 89ee      	LDD  R30,Y+22
00c096 89ff      	LDD  R31,Y+22+1
00c097 93fa      	ST   -Y,R31
00c098 93ea      	ST   -Y,R30
00c099 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24D:
00c09a 01de      	MOVW R26,R28
00c09b 961a      	ADIW R26,10
00c09c 940e 7a9f 	CALL _LOG_getLastInsert
00c09e 018f      	MOVW R16,R30
00c09f 2311      	TST  R17
00c0a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24E:
00c0a1 940e b443 	CALL SUBOPT_0x4F
00c0a3 940e cec8 	CALL __PUTPARD1
00c0a5 940c b419 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24F:
00c0a7 940e 7b27 	CALL _index2Addr
00c0a9 940c b6a2 	JMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x250:
00c0ab 940e b6e5 	CALL SUBOPT_0xB6
00c0ad 940e cec8 	CALL __PUTPARD1
00c0af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x251:
00c0b0 940e b6e5 	CALL SUBOPT_0xB6
00c0b2 940c b79e 	JMP SUBOPT_0xD2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x252:
00c0b4 93fa      	ST   -Y,R31
00c0b5 93ea      	ST   -Y,R30
00c0b6 940c b554 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x253:
00c0b8 940e 763b 	CALL _SD_writeData
00c0ba 018f      	MOVW R16,R30
00c0bb 2311      	TST  R17
00c0bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x254:
00c0bd 940e b6e5 	CALL SUBOPT_0xB6
                +
00c0bf 5feb     +SUBI R30 , LOW ( - 5 )
00c0c0 4fff     +SBCI R31 , HIGH ( - 5 )
00c0c1 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00c0c2 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00c0c3 940e cec8 	CALL __PUTPARD1
00c0c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x255:
00c0c6 940e b6e5 	CALL SUBOPT_0xB6
                +
00c0c8 5fe9     +SUBI R30 , LOW ( - 7 )
00c0c9 4fff     +SBCI R31 , HIGH ( - 7 )
00c0ca 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00c0cb 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00c0cc 940e cec8 	CALL __PUTPARD1
00c0ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x256:
00c0cf 940e b476 	CALL SUBOPT_0x57
00c0d1 940e b707 	CALL SUBOPT_0xBC
00c0d3 ddf1      	RCALL SUBOPT_0x203
00c0d4 01df      	MOVW R26,R30
00c0d5 01cb      	MOVW R24,R22
00c0d6 940e 7aba 	CALL _LOG_setLastInsert
00c0d8 018f      	MOVW R16,R30
00c0d9 2311      	TST  R17
00c0da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x257:
00c0db 8de8      	LDD  R30,Y+24
00c0dc 8df9      	LDD  R31,Y+24+1
00c0dd 93fa      	ST   -Y,R31
00c0de 93ea      	ST   -Y,R30
00c0df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x258:
00c0e0 01de      	MOVW R26,R28
00c0e1 961e      	ADIW R26,14
00c0e2 940e 7a9f 	CALL _LOG_getLastInsert
00c0e4 018f      	MOVW R16,R30
00c0e5 2311      	TST  R17
00c0e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x259:
00c0e7 01de      	MOVW R26,R28
00c0e8 961a      	ADIW R26,10
00c0e9 940e 7adb 	CALL _LOG_getLastSend
00c0eb 018f      	MOVW R16,R30
00c0ec 2311      	TST  R17
00c0ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25A:
                +
00c0ee e7ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00c0ef e5f0     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00c0f0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00c0f1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00c0f2 940c b5dd 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25B:
00c0f4 940e cec8 	CALL __PUTPARD1
00c0f6 940e b7c6 	CALL SUBOPT_0xDA
00c0f8 940c b300 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25C:
00c0fa 940e b7b4 	CALL SUBOPT_0xD7
00c0fc 940e b7af 	CALL SUBOPT_0xD6
00c0fe 940e cf33 	CALL __CPD21
00c100 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25D:
00c101 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00c102 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00c103 93fa      	ST   -Y,R31
00c104 93ea      	ST   -Y,R30
00c105 e0e1      	LDI  R30,LOW(1)
00c106 93ea      	ST   -Y,R30
00c107 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00c108 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00c109 93fa      	ST   -Y,R31
00c10a 93ea      	ST   -Y,R30
00c10b e1a0      	LDI  R26,LOW(16)
00c10c e0b0      	LDI  R27,0
00c10d 940e 7b39 	CALL _LOG_createFile
00c10f 018f      	MOVW R16,R30
00c110 2311      	TST  R17
00c111 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x25E:
00c112 940e 7692 	CALL _SD_readData
00c114 018f      	MOVW R16,R30
00c115 2311      	TST  R17
00c116 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x25F:
00c117 89ea      	LDD  R30,Y+18
00c118 89fb      	LDD  R31,Y+18+1
00c119 93fa      	ST   -Y,R31
00c11a 93ea      	ST   -Y,R30
00c11b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x260:
00c11c 940e b443 	CALL SUBOPT_0x4F
00c11e 940e cec8 	CALL __PUTPARD1
00c120 940c b26a 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x261:
00c122 940e b6e5 	CALL SUBOPT_0xB6
                +
00c124 5fe6     +SUBI R30 , LOW ( - 10 )
00c125 4fff     +SBCI R31 , HIGH ( - 10 )
00c126 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00c127 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00c128 940e cec8 	CALL __PUTPARD1
00c12a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x262:
00c12b ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00c12c e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00c12d 93fa      	ST   -Y,R31
00c12e 93ea      	ST   -Y,R30
00c12f e0e1      	LDI  R30,LOW(1)
00c130 93ea      	ST   -Y,R30
00c131 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00c132 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00c133 93fa      	ST   -Y,R31
00c134 93ea      	ST   -Y,R30
00c135 e1a0      	LDI  R26,LOW(16)
00c136 e0b0      	LDI  R27,0
00c137 940e 7b39 	CALL _LOG_createFile
00c139 018f      	MOVW R16,R30
00c13a 2311      	TST  R17
00c13b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x263:
00c13c 81ec      	LDD  R30,Y+4
00c13d 81fd      	LDD  R31,Y+4+1
00c13e 93fa      	ST   -Y,R31
00c13f 93ea      	ST   -Y,R30
00c140 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x264:
                +
00c141 e0e0     +LDI R30 , LOW ( 0x0 )
00c142 e0f0     +LDI R31 , HIGH ( 0x0 )
00c143 e060     +LDI R22 , BYTE3 ( 0x0 )
00c144 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c145 940e cec8 	CALL __PUTPARD1
00c147 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x265:
                +
00c148 e0e4     +LDI R30 , LOW ( 0x4 )
00c149 e0f0     +LDI R31 , HIGH ( 0x4 )
00c14a e060     +LDI R22 , BYTE3 ( 0x4 )
00c14b e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00c14c 940e cec8 	CALL __PUTPARD1
00c14e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x266:
00c14f 940e cec8 	CALL __PUTPARD1
                +
00c151 01fe     +MOVW R30 , R28
00c152 5de5     +SUBI R30 , LOW ( - 555 )
00c153 4ffd     +SBCI R31 , HIGH ( - 555 )
00c154 9001     +LD R0 , Z +
00c155 81f0     +LD R31 , Z
00c156 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00c157 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x267:
                +
00c159 01fe     +MOVW R30 , R28
00c15a 5dec     +SUBI R30 , LOW ( - 548 )
00c15b 4ffd     +SBCI R31 , HIGH ( - 548 )
00c15c 9001     +LD R0 , Z +
00c15d 81f0     +LD R31 , Z
00c15e 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00c15f 93fa      	ST   -Y,R31
00c160 93ea      	ST   -Y,R30
                +
00c161 01de     +MOVW R26 , R28
00c162 5dac     +SUBI R26 , LOW ( - 548 )
00c163 4fbd     +SBCI R27 , HIGH ( - 548 )
00c164 900d     +LD R0 , X +
00c165 91bc     +LD R27 , X
00c166 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00c167 940c 92cc 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x268:
00c169 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00c16a e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00c16b 93fa      	ST   -Y,R31
00c16c 93ea      	ST   -Y,R30
00c16d e1a0      	LDI  R26,LOW(16)
00c16e e0b0      	LDI  R27,0
00c16f 940e 7b39 	CALL _LOG_createFile
00c171 018f      	MOVW R16,R30
00c172 2311      	TST  R17
00c173 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x269:
                +
00c174 e8e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00c175 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00c176 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00c177 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00c178 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26A:
00c179 940e cec8 	CALL __PUTPARD1
00c17b ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00c17c e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00c17d 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x26B:
00c17f 01df      	MOVW R26,R30
00c180 940e ce98 	CALL __GETD1P
00c182 81ae      	LDD  R26,Y+6
00c183 81bf      	LDD  R27,Y+6+1
00c184 940e cea3 	CALL __PUTDP1
00c186 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x26C:
00c187 e0ab      	LDI  R26,LOW(11)
00c188 9f1a      	MUL  R17,R26
00c189 01f0      	MOVW R30,R0
00c18a 56e4      	SUBI R30,LOW(-_dataLogQueue)
00c18b 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00c18c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x26D:
00c18d e0a0      	LDI  R26,LOW(0)
00c18e 83a0      	STD  Z+0,R26
00c18f e0ab      	LDI  R26,LOW(11)
00c190 9f1a      	MUL  R17,R26
00c191 01f0      	MOVW R30,R0
                +
00c192 56e3     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00c193 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00c194 940e b350 	CALL SUBOPT_0x2D
00c196 dd49      	RCALL SUBOPT_0x208
00c197 e0ab      	LDI  R26,LOW(11)
00c198 9f1a      	MUL  R17,R26
00c199 01f0      	MOVW R30,R0
                +
00c19a 55ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00c19b 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00c19c e0a0      	LDI  R26,LOW(0)
00c19d e0b0      	LDI  R27,HIGH(0)
00c19e 83a0      	STD  Z+0,R26
00c19f 83b1      	STD  Z+1,R27
00c1a0 e0ab      	LDI  R26,LOW(11)
00c1a1 9f1a      	MUL  R17,R26
00c1a2 01f0      	MOVW R30,R0
                +
00c1a3 55ed     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00c1a4 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00c1a5 940e b350 	CALL SUBOPT_0x2D
00c1a7 cd38      	RJMP SUBOPT_0x208
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x26E:
                +
00c1a8 e0a7     +LDI R26 , 7
00c1a9 9fa0     +MUL R26 , R16
00c1aa 01f0     +MOVW R30 , R0
00c1ab 9fa1     +MUL R26 , R17
00c1ac 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00c1ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x26F:
00c1ae e0a7      	LDI  R26,LOW(7)
00c1af 9f1a      	MUL  R17,R26
00c1b0 01f0      	MOVW R30,R0
00c1b1 5fe1      	SUBI R30,LOW(-_eventLogQueue)
00c1b2 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00c1b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x270:
00c1b4 e0a0      	LDI  R26,LOW(0)
00c1b5 83a0      	STD  Z+0,R26
00c1b6 e0a7      	LDI  R26,LOW(7)
00c1b7 9f1a      	MUL  R17,R26
00c1b8 01f0      	MOVW R30,R0
00c1b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x271:
                +
00c1ba 5fe0     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00c1bb 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00c1bc 940e b350 	CALL SUBOPT_0x2D
00c1be dd21      	RCALL SUBOPT_0x208
00c1bf e0a7      	LDI  R26,LOW(7)
00c1c0 9f1a      	MUL  R17,R26
00c1c1 01f0      	MOVW R30,R0
                +
00c1c2 5eec     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00c1c3 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00c1c4 cfef      	RJMP SUBOPT_0x270
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x272:
00c1c5 e0e1      	LDI  R30,LOW(1)
00c1c6 93e0 14df 	STS  _currentPage,R30
00c1c8 e0e0      	LDI  R30,LOW(0)
00c1c9 93e0 1a0b 	STS  _cursor_S0160000000,R30
                +
00c1cb e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00c1cc e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00c1cd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00c1ce e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00c1cf 940e cec8 	CALL __PUTPARD1
00c1d1 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c1d3 940e cdb7 	CALL __CBD1
00c1d5 940e cec8 	CALL __PUTPARD1
00c1d7 ce3b      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:101 WORDS
                 SUBOPT_0x273:
                +
00c1d8 01fe     +MOVW R30 , R28
00c1d9 5aea     +SUBI R30 , LOW ( - 86 )
00c1da 4fff     +SBCI R31 , HIGH ( - 86 )
00c1db 81e0     +LD R30 , Z
                 	__GETB1SX 86
00c1dc ce1a      	RJMP SUBOPT_0x234
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:85 WORDS
                 SUBOPT_0x274:
00c1dd 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c1df 50a1      	SUBI R26,LOW(1)
00c1e0 93a0 1a0b 	STS  _cursor_S0160000000,R26
00c1e2 30a0      	CPI  R26,0
00c1e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:192 WORDS
                 SUBOPT_0x275:
                +
00c1e4 e5e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00c1e5 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00c1e6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00c1e7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00c1e8 940e cec8 	CALL __PUTPARD1
00c1ea 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c1ec 940e cdb7 	CALL __CBD1
00c1ee 940e cec8 	CALL __PUTPARD1
00c1f0 ce22      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x276:
00c1f1 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c1f3 5faf      	SUBI R26,-LOW(1)
00c1f4 93a0 1a0b 	STS  _cursor_S0160000000,R26
00c1f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x277:
00c1f7 e0e2      	LDI  R30,LOW(2)
00c1f8 93e0 14df 	STS  _currentPage,R30
00c1fa e0e0      	LDI  R30,LOW(0)
00c1fb 93e0 1a0b 	STS  _cursor_S0160000000,R30
                +
00c1fd e5e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00c1fe e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00c1ff e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00c200 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00c201 940e cec8 	CALL __PUTPARD1
00c203 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c205 940e cdb7 	CALL __CBD1
00c207 940e cec8 	CALL __PUTPARD1
00c209 ce09      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 52 TIMES, CODE SIZE REDUCTION:150 WORDS
                 SUBOPT_0x278:
00c20a 93e0 14df 	STS  _currentPage,R30
00c20c e0e0      	LDI  R30,LOW(0)
00c20d 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c20f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x279:
                +
00c210 e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00c211 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00c212 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00c213 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00c214 940e cec8 	CALL __PUTPARD1
00c216 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c218 940e cdb7 	CALL __CBD1
00c21a 940e cec8 	CALL __PUTPARD1
00c21c cdf6      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x27A:
                +
00c21d e6e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00c21e e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00c21f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00c220 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00c221 940e cec8 	CALL __PUTPARD1
00c223 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c225 940e cdb7 	CALL __CBD1
00c227 940e cec8 	CALL __PUTPARD1
00c229 cde9      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27B:
00c22a 93e0 14df 	STS  _currentPage,R30
00c22c e1e5      	LDI  R30,LOW(21)
00c22d 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
00c22f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x27C:
00c230 93e0 1a0d 	STS  _tmpPrevPage_S0160000000,R30
00c232 e0ee      	LDI  R30,LOW(_entPwd_S0160000000)
00c233 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00c234 93fa      	ST   -Y,R31
00c235 93ea      	ST   -Y,R30
00c236 efef      	LDI  R30,LOW(255)
00c237 93ea      	ST   -Y,R30
00c238 940c b554 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x27D:
00c23a 940e 977e 	CALL _memset
00c23c e0e0      	LDI  R30,LOW(0)
00c23d 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c23f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x27E:
                +
00c240 e4ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00c241 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00c242 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00c243 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00c244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x27F:
                +
00c245 e6ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00c246 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00c247 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00c248 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00c249 940e cec8 	CALL __PUTPARD1
00c24b 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c24d 940e cdb7 	CALL __CBD1
00c24f 940e cec8 	CALL __PUTPARD1
00c251 cdc1      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x280:
00c252 93e0 14df 	STS  _currentPage,R30
00c254 e0e7      	LDI  R30,LOW(7)
00c255 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
00c257 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x281:
                +
00c258 e7e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00c259 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00c25a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00c25b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00c25c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x282:
00c25d 940e cec8 	CALL __PUTPARD1
                +
00c25f e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00c260 e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00c261 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x283:
00c263 940e 977e 	CALL _memset
00c265 01fe      	MOVW R30,R28
00c266 9638      	ADIW R30,8
00c267 93fa      	ST   -Y,R31
00c268 93ea      	ST   -Y,R30
                +
00c269 e4ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00c26a e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00c26b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00c26c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00c26d 940e cec8 	CALL __PUTPARD1
00c26f e080      	LDI  R24,0
00c270 940e b13c 	CALL _sprintf
00c272 9626      	ADIW R28,6
00c273 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x284:
00c274 01fe      	MOVW R30,R28
00c275 96fa      	ADIW R30,58
00c276 940c b84f 	JMP SUBOPT_0xF1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x285:
00c278 01fe      	MOVW R30,R28
00c279 96fa      	ADIW R30,58
00c27a 93fa      	ST   -Y,R31
00c27b 93ea      	ST   -Y,R30
00c27c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x286:
00c27d e080      	LDI  R24,0
00c27e 940e b13c 	CALL _sprintf
00c280 9626      	ADIW R28,6
00c281 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x287:
00c282 01fe      	MOVW R30,R28
00c283 9638      	ADIW R30,8
00c284 93fa      	ST   -Y,R31
00c285 93ea      	ST   -Y,R30
00c286 01de      	MOVW R26,R28
00c287 96dc      	ADIW R26,60
00c288 940e 978e 	CALL _strcat
00c28a cfe9      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x288:
                +
00c28b ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00c28c e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00c28d 0fe0      	ADD  R30,R16
00c28e 1ff1      	ADC  R31,R17
00c28f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x289:
00c290 01f9      	MOVW R30,R18
                +
00c291 5f2f     +SUBI R18 , LOW ( - 1 )
00c292 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00c293 01de      	MOVW R26,R28
00c294 96da      	ADIW R26,58
00c295 0fae      	ADD  R26,R30
00c296 1fbf      	ADC  R27,R31
00c297 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28A:
00c298 940e cec8 	CALL __PUTPARD1
00c29a 01fe      	MOVW R30,R28
00c29b 963c      	ADIW R30,12
00c29c 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28B:
                +
00c29e 01fe     +MOVW R30 , R28
00c29f 5aec     +SUBI R30 , LOW ( - 84 )
00c2a0 4fff     +SBCI R31 , HIGH ( - 84 )
00c2a1 9001     +LD R0 , Z +
00c2a2 81f0     +LD R31 , Z
00c2a3 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00c2a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28C:
                +
00c2a5 01fe     +MOVW R30 , R28
00c2a6 5aee     +SUBI R30 , LOW ( - 82 )
00c2a7 4fff     +SBCI R31 , HIGH ( - 82 )
00c2a8 9001     +LD R0 , Z +
00c2a9 81f0     +LD R31 , Z
00c2aa 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00c2ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28D:
                +
00c2ac 01de     +MOVW R26 , R28
00c2ad 5aac     +SUBI R26 , LOW ( - 84 )
00c2ae 4fbf     +SBCI R27 , HIGH ( - 84 )
00c2af 900d     +LD R0 , X +
00c2b0 91bc     +LD R27 , X
00c2b1 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00c2b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28E:
00c2b3 e1ea      	LDI  R30,LOW(_setIp_S0160000000)
00c2b4 e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00c2b5 93fa      	ST   -Y,R31
00c2b6 93ea      	ST   -Y,R30
00c2b7 e2e6      	LDI  R30,LOW(_setMask_S0160000000)
00c2b8 e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00c2b9 93fa      	ST   -Y,R31
00c2ba 93ea      	ST   -Y,R30
00c2bb e3e2      	LDI  R30,LOW(_setGw_S0160000000)
00c2bc e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00c2bd 93fa      	ST   -Y,R31
00c2be 93ea      	ST   -Y,R30
00c2bf e3ae      	LDI  R26,LOW(_setServer_S0160000000)
00c2c0 e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00c2c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x28F:
00c2c2 940e cec8 	CALL __PUTPARD1
00c2c4 91a0 1a1a 	LDS  R26,_setIp_S0160000000
00c2c6 e6e4      	LDI  R30,LOW(100)
00c2c7 9fea      	MUL  R30,R26
00c2c8 01b0      	MOVW R22,R0
                +
00c2c9 91a0 1a1b+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00c2cb e0ea      	LDI  R30,LOW(10)
00c2cc 9fea      	MUL  R30,R26
00c2cd 01f0      	MOVW R30,R0
00c2ce 01db      	MOVW R26,R22
00c2cf 0fae      	ADD  R26,R30
00c2d0 1fbf      	ADC  R27,R31
                +
00c2d1 91e0 1a1c+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00c2d3 e0f0      	LDI  R31,0
00c2d4 ca21      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x290:
                +
00c2d5 91a0 1a1d+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00c2d7 e6e4      	LDI  R30,LOW(100)
00c2d8 9fea      	MUL  R30,R26
00c2d9 01b0      	MOVW R22,R0
                +
00c2da 91a0 1a1e+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00c2dc e0ea      	LDI  R30,LOW(10)
00c2dd 9fea      	MUL  R30,R26
00c2de 01f0      	MOVW R30,R0
00c2df 01db      	MOVW R26,R22
00c2e0 0fae      	ADD  R26,R30
00c2e1 1fbf      	ADC  R27,R31
                +
00c2e2 91e0 1a1f+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00c2e4 e0f0      	LDI  R31,0
00c2e5 ca10      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x291:
                +
00c2e6 91a0 1a20+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00c2e8 e6e4      	LDI  R30,LOW(100)
00c2e9 9fea      	MUL  R30,R26
00c2ea 01b0      	MOVW R22,R0
                +
00c2eb 91a0 1a21+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00c2ed e0ea      	LDI  R30,LOW(10)
00c2ee 9fea      	MUL  R30,R26
00c2ef 01f0      	MOVW R30,R0
00c2f0 01db      	MOVW R26,R22
00c2f1 0fae      	ADD  R26,R30
00c2f2 1fbf      	ADC  R27,R31
                +
00c2f3 91e0 1a22+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00c2f5 e0f0      	LDI  R31,0
00c2f6 c9ff      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x292:
                +
00c2f7 91a0 1a23+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00c2f9 e6e4      	LDI  R30,LOW(100)
00c2fa 9fea      	MUL  R30,R26
00c2fb 01b0      	MOVW R22,R0
                +
00c2fc 91a0 1a24+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00c2fe e0ea      	LDI  R30,LOW(10)
00c2ff 9fea      	MUL  R30,R26
00c300 01f0      	MOVW R30,R0
00c301 01db      	MOVW R26,R22
00c302 0fae      	ADD  R26,R30
00c303 1fbf      	ADC  R27,R31
                +
00c304 91e0 1a25+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00c306 e0f0      	LDI  R31,0
00c307 c9ee      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x293:
00c308 91a0 1a26 	LDS  R26,_setMask_S0160000000
00c30a e6e4      	LDI  R30,LOW(100)
00c30b 9fea      	MUL  R30,R26
00c30c 01b0      	MOVW R22,R0
                +
00c30d 91a0 1a27+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00c30f e0ea      	LDI  R30,LOW(10)
00c310 9fea      	MUL  R30,R26
00c311 01f0      	MOVW R30,R0
00c312 01db      	MOVW R26,R22
00c313 0fae      	ADD  R26,R30
00c314 1fbf      	ADC  R27,R31
                +
00c315 91e0 1a28+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00c317 e0f0      	LDI  R31,0
00c318 c9dd      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x294:
                +
00c319 91a0 1a29+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00c31b e6e4      	LDI  R30,LOW(100)
00c31c 9fea      	MUL  R30,R26
00c31d 01b0      	MOVW R22,R0
                +
00c31e 91a0 1a2a+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00c320 e0ea      	LDI  R30,LOW(10)
00c321 9fea      	MUL  R30,R26
00c322 01f0      	MOVW R30,R0
00c323 01db      	MOVW R26,R22
00c324 0fae      	ADD  R26,R30
00c325 1fbf      	ADC  R27,R31
                +
00c326 91e0 1a2b+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00c328 e0f0      	LDI  R31,0
00c329 c9cc      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x295:
                +
00c32a 91a0 1a2c+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00c32c e6e4      	LDI  R30,LOW(100)
00c32d 9fea      	MUL  R30,R26
00c32e 01b0      	MOVW R22,R0
                +
00c32f 91a0 1a2d+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00c331 e0ea      	LDI  R30,LOW(10)
00c332 9fea      	MUL  R30,R26
00c333 01f0      	MOVW R30,R0
00c334 01db      	MOVW R26,R22
00c335 0fae      	ADD  R26,R30
00c336 1fbf      	ADC  R27,R31
                +
00c337 91e0 1a2e+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00c339 e0f0      	LDI  R31,0
00c33a c9bb      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x296:
                +
00c33b 91a0 1a2f+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00c33d e6e4      	LDI  R30,LOW(100)
00c33e 9fea      	MUL  R30,R26
00c33f 01b0      	MOVW R22,R0
                +
00c340 91a0 1a30+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00c342 e0ea      	LDI  R30,LOW(10)
00c343 9fea      	MUL  R30,R26
00c344 01f0      	MOVW R30,R0
00c345 01db      	MOVW R26,R22
00c346 0fae      	ADD  R26,R30
00c347 1fbf      	ADC  R27,R31
                +
00c348 91e0 1a31+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00c34a e0f0      	LDI  R31,0
00c34b c9aa      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x297:
00c34c 91a0 1a32 	LDS  R26,_setGw_S0160000000
00c34e e6e4      	LDI  R30,LOW(100)
00c34f 9fea      	MUL  R30,R26
00c350 01b0      	MOVW R22,R0
                +
00c351 91a0 1a33+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00c353 e0ea      	LDI  R30,LOW(10)
00c354 9fea      	MUL  R30,R26
00c355 01f0      	MOVW R30,R0
00c356 01db      	MOVW R26,R22
00c357 0fae      	ADD  R26,R30
00c358 1fbf      	ADC  R27,R31
                +
00c359 91e0 1a34+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00c35b e0f0      	LDI  R31,0
00c35c c999      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x298:
                +
00c35d 91a0 1a35+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00c35f e6e4      	LDI  R30,LOW(100)
00c360 9fea      	MUL  R30,R26
00c361 01b0      	MOVW R22,R0
                +
00c362 91a0 1a36+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00c364 e0ea      	LDI  R30,LOW(10)
00c365 9fea      	MUL  R30,R26
00c366 01f0      	MOVW R30,R0
00c367 01db      	MOVW R26,R22
00c368 0fae      	ADD  R26,R30
00c369 1fbf      	ADC  R27,R31
                +
00c36a 91e0 1a37+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00c36c e0f0      	LDI  R31,0
00c36d c988      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x299:
                +
00c36e 91a0 1a38+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00c370 e6e4      	LDI  R30,LOW(100)
00c371 9fea      	MUL  R30,R26
00c372 01b0      	MOVW R22,R0
                +
00c373 91a0 1a39+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00c375 e0ea      	LDI  R30,LOW(10)
00c376 9fea      	MUL  R30,R26
00c377 01f0      	MOVW R30,R0
00c378 01db      	MOVW R26,R22
00c379 0fae      	ADD  R26,R30
00c37a 1fbf      	ADC  R27,R31
                +
00c37b 91e0 1a3a+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00c37d e0f0      	LDI  R31,0
00c37e c977      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29A:
                +
00c37f 91a0 1a3b+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00c381 e6e4      	LDI  R30,LOW(100)
00c382 9fea      	MUL  R30,R26
00c383 01b0      	MOVW R22,R0
                +
00c384 91a0 1a3c+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00c386 e0ea      	LDI  R30,LOW(10)
00c387 9fea      	MUL  R30,R26
00c388 01f0      	MOVW R30,R0
00c389 01db      	MOVW R26,R22
00c38a 0fae      	ADD  R26,R30
00c38b 1fbf      	ADC  R27,R31
                +
00c38c 91e0 1a3d+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00c38e e0f0      	LDI  R31,0
00c38f c966      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29B:
00c390 91a0 1a3e 	LDS  R26,_setServer_S0160000000
00c392 e6e4      	LDI  R30,LOW(100)
00c393 9fea      	MUL  R30,R26
00c394 01b0      	MOVW R22,R0
                +
00c395 91a0 1a3f+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00c397 e0ea      	LDI  R30,LOW(10)
00c398 9fea      	MUL  R30,R26
00c399 01f0      	MOVW R30,R0
00c39a 01db      	MOVW R26,R22
00c39b 0fae      	ADD  R26,R30
00c39c 1fbf      	ADC  R27,R31
                +
00c39d 91e0 1a40+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00c39f e0f0      	LDI  R31,0
00c3a0 c955      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29C:
                +
00c3a1 91a0 1a41+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00c3a3 e6e4      	LDI  R30,LOW(100)
00c3a4 9fea      	MUL  R30,R26
00c3a5 01b0      	MOVW R22,R0
                +
00c3a6 91a0 1a42+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00c3a8 e0ea      	LDI  R30,LOW(10)
00c3a9 9fea      	MUL  R30,R26
00c3aa 01f0      	MOVW R30,R0
00c3ab 01db      	MOVW R26,R22
00c3ac 0fae      	ADD  R26,R30
00c3ad 1fbf      	ADC  R27,R31
                +
00c3ae 91e0 1a43+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00c3b0 e0f0      	LDI  R31,0
00c3b1 c944      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29D:
                +
00c3b2 91a0 1a44+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00c3b4 e6e4      	LDI  R30,LOW(100)
00c3b5 9fea      	MUL  R30,R26
00c3b6 01b0      	MOVW R22,R0
                +
00c3b7 91a0 1a45+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00c3b9 e0ea      	LDI  R30,LOW(10)
00c3ba 9fea      	MUL  R30,R26
00c3bb 01f0      	MOVW R30,R0
00c3bc 01db      	MOVW R26,R22
00c3bd 0fae      	ADD  R26,R30
00c3be 1fbf      	ADC  R27,R31
                +
00c3bf 91e0 1a46+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00c3c1 e0f0      	LDI  R31,0
00c3c2 c933      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29E:
                +
00c3c3 91a0 1a47+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00c3c5 e6e4      	LDI  R30,LOW(100)
00c3c6 9fea      	MUL  R30,R26
00c3c7 01b0      	MOVW R22,R0
                +
00c3c8 91a0 1a48+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00c3ca e0ea      	LDI  R30,LOW(10)
00c3cb 9fea      	MUL  R30,R26
00c3cc 01f0      	MOVW R30,R0
00c3cd 01db      	MOVW R26,R22
00c3ce 0fae      	ADD  R26,R30
00c3cf 1fbf      	ADC  R27,R31
                +
00c3d0 91e0 1a49+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00c3d2 e0f0      	LDI  R31,0
00c3d3 c922      	RJMP SUBOPT_0x1B7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x29F:
00c3d4 940e cec8 	CALL __PUTPARD1
00c3d6 cc65      	RJMP SUBOPT_0x23E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2A0:
                +
00c3d7 01fe     +MOVW R30 , R28
00c3d8 5aea     +SUBI R30 , LOW ( - 86 )
00c3d9 4fff     +SBCI R31 , HIGH ( - 86 )
00c3da 81e0     +LD R30 , Z
                 	__GETB1SX 86
00c3db e0f0      	LDI  R31,0
00c3dc 30e2      	CPI  R30,LOW(0x2)
00c3dd e0a0      	LDI  R26,HIGH(0x2)
00c3de 07fa      	CPC  R31,R26
00c3df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x2A1:
00c3e0 93e0 14df 	STS  _currentPage,R30
00c3e2 e0e1      	LDI  R30,LOW(1)
00c3e3 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c3e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A2:
00c3e6 93e0 14df 	STS  _currentPage,R30
00c3e8 e0e2      	LDI  R30,LOW(2)
00c3e9 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c3eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A3:
                +
00c3ec e5e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00c3ed e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00c3ee e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00c3ef e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00c3f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 53 TIMES, CODE SIZE REDUCTION:465 WORDS
                 SUBOPT_0x2A4:
00c3f1 940e cec8 	CALL __PUTPARD1
00c3f3 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c3f5 940e cdb7 	CALL __CBD1
00c3f7 940e cec8 	CALL __PUTPARD1
00c3f9 cc19      	RJMP SUBOPT_0x239
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A5:
00c3fa 940e cec8 	CALL __PUTPARD1
00c3fc 91e0 1a4a 	LDS  R30,_devEn_S0160000000
00c3fe 940c b4d5 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2A6:
00c400 91e0 1a4b 	LDS  R30,_almEn_S0160000000
00c402 27ff      	CLR  R31
00c403 2766      	CLR  R22
00c404 2777      	CLR  R23
00c405 940c b300 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A7:
                +
00c407 e5e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00c408 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00c409 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00c40a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00c40b cfe5      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2A8:
                +
00c40c e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00c40d e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00c40e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00c40f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00c410 940e cec8 	CALL __PUTPARD1
00c412 01f8      	MOVW R30,R16
00c413 cc2d      	RJMP SUBOPT_0x23F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2A9:
00c414 0fa0      	ADD  R26,R16
00c415 1fb1      	ADC  R27,R17
00c416 91ec      	LD   R30,X
00c417 940c b4d5 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2AA:
                +
00c419 e7e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00c41a e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00c41b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00c41c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00c41d cfd3      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2AB:
00c41e 940e cec8 	CALL __PUTPARD1
00c420 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c422 e0f0      	LDI  R31,0
00c423 fde7      	SBRC R30,7
00c424 efff      	SER  R31
00c425 9632      	ADIW R30,2
00c426 cc1a      	RJMP SUBOPT_0x23F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2AC:
                +
00c427 e9e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00c428 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00c429 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00c42a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00c42b cff2      	RJMP SUBOPT_0x2AB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AD:
00c42c eba6      	LDI  R26,LOW(_operating_config)
00c42d e1b1      	LDI  R27,HIGH(_operating_config)
00c42e 940e 4bbe 	CALL _setOperatingConfig
00c430 01af      	MOVW R20,R30
00c431 2355      	TST  R21
00c432 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AE:
                +
00c433 ece4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00c434 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00c435 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00c436 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00c437 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AF:
00c439 e0e8      	LDI  R30,LOW(8)
00c43a 93e0 1a0d 	STS  _tmpPrevPage_S0160000000,R30
00c43c e0e0      	LDI  R30,LOW(0)
00c43d 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c43f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B0:
                +
00c440 efe4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00c441 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00c442 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00c443 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00c444 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B1:
                +
00c445 efe7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00c446 e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00c447 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00c448 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00c449 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2B2:
                +
00c44a efea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00c44b e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00c44c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00c44d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00c44e cfa2      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2B3:
00c44f 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c451 e0b0      	LDI  R27,0
00c452 fda7      	SBRC R26,7
00c453 efbf      	SER  R27
00c454 e0e3      	LDI  R30,LOW(3)
00c455 e0f0      	LDI  R31,HIGH(3)
00c456 940e ce68 	CALL __MODW21
00c458 9730      	SBIW R30,0
00c459 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B4:
00c45a 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c45c e0b0      	LDI  R27,0
00c45d 5ea6      	SUBI R26,LOW(-_setIp_S0160000000)
00c45e 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00c45f 91ec      	LD   R30,X
00c460 5fef      	SUBI R30,-LOW(1)
00c461 93ec      	ST   X,R30
00c462 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2B5:
00c463 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c465 e0f0      	LDI  R31,0
00c466 5ee6      	SUBI R30,LOW(-_setIp_S0160000000)
00c467 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00c468 e0a0      	LDI  R26,LOW(0)
00c469 83a0      	STD  Z+0,R26
00c46a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2B6:
                +
00c46b e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00c46c e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00c46d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00c46e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00c46f 940e cec8 	CALL __PUTPARD1
00c471 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c473 940e cdb7 	CALL __CBD1
00c475 940e cec8 	CALL __PUTPARD1
00c477 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c479 e0f0      	LDI  R31,0
00c47a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B7:
00c47b 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c47d e0b0      	LDI  R27,0
00c47e 5daa      	SUBI R26,LOW(-_setMask_S0160000000)
00c47f 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00c480 91ec      	LD   R30,X
00c481 5fef      	SUBI R30,-LOW(1)
00c482 93ec      	ST   X,R30
00c483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2B8:
00c484 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c486 e0f0      	LDI  R31,0
00c487 5dea      	SUBI R30,LOW(-_setMask_S0160000000)
00c488 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00c489 e0a0      	LDI  R26,LOW(0)
00c48a 83a0      	STD  Z+0,R26
00c48b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B9:
00c48c 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c48e e0b0      	LDI  R27,0
00c48f 5cae      	SUBI R26,LOW(-_setGw_S0160000000)
00c490 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00c491 91ec      	LD   R30,X
00c492 5fef      	SUBI R30,-LOW(1)
00c493 93ec      	ST   X,R30
00c494 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2BA:
00c495 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c497 e0f0      	LDI  R31,0
00c498 5cee      	SUBI R30,LOW(-_setGw_S0160000000)
00c499 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00c49a e0a0      	LDI  R26,LOW(0)
00c49b 83a0      	STD  Z+0,R26
00c49c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2BB:
00c49d 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c49f e0b0      	LDI  R27,0
00c4a0 5ca2      	SUBI R26,LOW(-_setServer_S0160000000)
00c4a1 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00c4a2 91ec      	LD   R30,X
00c4a3 5fef      	SUBI R30,-LOW(1)
00c4a4 93ec      	ST   X,R30
00c4a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2BC:
00c4a6 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c4a8 e0f0      	LDI  R31,0
00c4a9 5ce2      	SUBI R30,LOW(-_setServer_S0160000000)
00c4aa 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00c4ab e0a0      	LDI  R26,LOW(0)
00c4ac 83a0      	STD  Z+0,R26
00c4ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2BD:
00c4ae 93e0 1a0d 	STS  _tmpPrevPage_S0160000000,R30
00c4b0 e0e0      	LDI  R30,LOW(0)
00c4b1 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c4b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2BE:
                +
00c4b4 e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00c4b5 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00c4b6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00c4b7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00c4b8 cf38      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2BF:
00c4b9 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c4bb e0b0      	LDI  R27,0
00c4bc fda7      	SBRC R26,7
00c4bd efbf      	SER  R27
00c4be 940c 8b5b 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2C0:
00c4c0 91a0 1a0b 	LDS  R26,_cursor_S0160000000
00c4c2 e0b0      	LDI  R27,0
00c4c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C1:
00c4c4 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c4c6 e0f0      	LDI  R31,0
00c4c7 5be4      	SUBI R30,LOW(-_prbEn_S0160000000)
00c4c8 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00c4c9 81e0      	LD   R30,Z
00c4ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2C2:
00c4cb 93ec      	ST   X,R30
                +
00c4cc e9e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00c4cd e5fc     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00c4ce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00c4cf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00c4d0 940e cec8 	CALL __PUTPARD1
00c4d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x2C3:
00c4d3 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c4d5 940e cdb7 	CALL __CBD1
00c4d7 940e cec8 	CALL __PUTPARD1
00c4d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C4:
00c4da e2e4      	LDI  R30,LOW(36)
00c4db 93e0 14df 	STS  _currentPage,R30
00c4dd e0ee      	LDI  R30,LOW(14)
00c4de 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
00c4e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C5:
                +
00c4e1 e6e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00c4e2 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00c4e3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00c4e4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00c4e5 cf0b      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C6:
00c4e6 e2e4      	LDI  R30,LOW(36)
00c4e7 93e0 14df 	STS  _currentPage,R30
00c4e9 e1e1      	LDI  R30,LOW(17)
00c4ea 93e0 1a0c 	STS  _tmpNextPage_S0160000000,R30
00c4ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2C7:
                +
00c4ed e6ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00c4ee e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00c4ef e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00c4f0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00c4f1 ceff      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2C8:
                +
00c4f2 e7e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00c4f3 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00c4f4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00c4f5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00c4f6 cefa      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C9:
00c4f7 e1e6      	LDI  R30,LOW(_confPwd_S0160000000)
00c4f8 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00c4f9 93fa      	ST   -Y,R31
00c4fa 93ea      	ST   -Y,R30
00c4fb efef      	LDI  R30,LOW(255)
00c4fc 93ea      	ST   -Y,R30
00c4fd 940c b554 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2CA:
00c4ff 91ec      	LD   R30,X
00c500 5fef      	SUBI R30,-LOW(1)
00c501 93ec      	ST   X,R30
00c502 30ea      	CPI  R30,LOW(0xA)
00c503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2CB:
00c504 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c506 e0f0      	LDI  R31,0
00c507 5eee      	SUBI R30,LOW(-_newPwd_S0160000000)
00c508 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00c509 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2CC:
                +
00c50a e7ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00c50b e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00c50c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00c50d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00c50e 940e cec8 	CALL __PUTPARD1
00c510 cfc2      	RJMP SUBOPT_0x2C3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2CD:
00c511 81e0      	LD   R30,Z
00c512 940e cdb7 	CALL __CBD1
00c514 cafb      	RJMP SUBOPT_0x238
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CE:
00c515 e1e2      	LDI  R30,LOW(_newPwd_S0160000000)
00c516 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00c517 93fa      	ST   -Y,R31
00c518 93ea      	ST   -Y,R30
00c519 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2CF:
00c51a efef      	LDI  R30,LOW(255)
00c51b 93ea      	ST   -Y,R30
00c51c 940c b554 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D0:
                +
00c51e 01fe     +MOVW R30 , R28
00c51f 5be0     +SUBI R30 , LOW ( - 80 )
00c520 4fff     +SBCI R31 , HIGH ( - 80 )
00c521 9001     +LD R0 , Z +
00c522 81f0     +LD R31 , Z
00c523 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00c524 93fa      	ST   -Y,R31
00c525 93ea      	ST   -Y,R30
00c526 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2D1:
00c527 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c529 e0f0      	LDI  R31,0
00c52a 5eea      	SUBI R30,LOW(-_confPwd_S0160000000)
00c52b 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00c52c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D2:
00c52d e0e1      	LDI  R30,LOW(1)
00c52e 93e0 14df 	STS  _currentPage,R30
00c530 e0e3      	LDI  R30,LOW(3)
00c531 93e0 1a0b 	STS  _cursor_S0160000000,R30
00c533 cf80      	RJMP SUBOPT_0x2BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D3:
                +
00c534 ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00c535 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00c536 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00c537 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00c538 940e cec8 	CALL __PUTPARD1
00c53a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D4:
                +
00c53b ece2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00c53c e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00c53d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00c53e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00c53f 940e cec8 	CALL __PUTPARD1
00c541 91e0 1a55 	LDS  R30,_prb1_S0160000000
00c543 e0f0      	LDI  R31,0
00c544 9631      	ADIW R30,1
00c545 cafb      	RJMP SUBOPT_0x23F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D5:
                +
00c546 ece8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00c547 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00c548 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00c549 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00c54a 940e cec8 	CALL __PUTPARD1
00c54c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D6:
00c54d 91e0 1a55 	LDS  R30,_prb1_S0160000000
00c54f e0f0      	LDI  R31,0
00c550 9631      	ADIW R30,1
00c551 caef      	RJMP SUBOPT_0x23F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D7:
                +
00c552 ede1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00c553 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00c554 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00c555 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00c556 ce9a      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D8:
                +
00c557 ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00c558 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00c559 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00c55a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00c55b ce95      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2D9:
00c55c 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c55e e0f0      	LDI  R31,0
00c55f 5aee      	SUBI R30,LOW(-_vRef_S0160000000)
00c560 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00c561 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2DA:
                +
00c562 eded     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00c563 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00c564 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00c565 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00c566 ce8a      	RJMP SUBOPT_0x2A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DB:
00c567 91a0 1a55 	LDS  R26,_prb1_S0160000000
00c569 5faf      	SUBI R26,-LOW(1)
00c56a 93a0 1a55 	STS  _prb1_S0160000000,R26
00c56c 30a5      	CPI  R26,LOW(0x5)
00c56d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2DC:
                +
00c56e eee3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00c56f e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00c570 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00c571 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00c572 940e cec8 	CALL __PUTPARD1
00c574 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2DD:
00c575 91e0 1a56 	LDS  R30,_prb2_S0160000000
00c577 e0f0      	LDI  R31,0
00c578 9631      	ADIW R30,1
00c579 cac7      	RJMP SUBOPT_0x23F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DE:
                +
00c57a e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00c57b e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00c57c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00c57d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00c57e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DF:
                +
00c57f e6e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00c580 e5fa     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00c581 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00c582 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00c583 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2E0:
00c584 e0ee      	LDI  R30,LOW(_entPwd_S0160000000)
00c585 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00c586 93fa      	ST   -Y,R31
00c587 93ea      	ST   -Y,R30
00c588 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E1:
                +
00c589 efe5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
00c58a e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
00c58b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
00c58c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
00c58d ce46      	RJMP SUBOPT_0x29F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E2:
00c58e 91e0 1a0c 	LDS  R30,_tmpNextPage_S0160000000
00c590 e0f0      	LDI  R31,0
00c591 30e7      	CPI  R30,LOW(0x7)
00c592 e0a0      	LDI  R26,HIGH(0x7)
00c593 07fa      	CPC  R31,R26
00c594 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2E3:
00c595 91e0 1a0b 	LDS  R30,_cursor_S0160000000
00c597 e0f0      	LDI  R31,0
00c598 5fe2      	SUBI R30,LOW(-_entPwd_S0160000000)
00c599 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00c59a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E4:
00c59b 93e0 14df 	STS  _currentPage,R30
00c59d 91a0 1a0d 	LDS  R26,_tmpPrevPage_S0160000000
00c59f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x2E5:
00c5a0 940e ce94 	CALL __GETW1P
00c5a2 93fa      	ST   -Y,R31
00c5a3 93ea      	ST   -Y,R30
00c5a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E6:
00c5a5 8def      	LDD  R30,Y+31
00c5a6 940e cdb7 	CALL __CBD1
00c5a8 940c b295 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E7:
00c5aa a9a8      	LDD  R26,Y+48
00c5ab a9b9      	LDD  R27,Y+48+1
00c5ac e1ed      	LDI  R30,LOW(29)
00c5ad 940e cdfe 	CALL __MULB1W2U
                +
00c5af 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00c5b0 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00c5b1 940c b557 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2E8:
00c5b3 940e cec8 	CALL __PUTPARD1
00c5b5 ada8      	LDD  R26,Y+56
00c5b6 adb9      	LDD  R27,Y+56+1
00c5b7 e1ed      	LDI  R30,LOW(29)
00c5b8 940e cdfe 	CALL __MULB1W2U
                +
00c5ba 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00c5bb 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00c5bc 940c b557 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E9:
00c5be adac      	LDD  R26,Y+60
00c5bf adbd      	LDD  R27,Y+60+1
00c5c0 e1ed      	LDI  R30,LOW(29)
00c5c1 940e cdfe 	CALL __MULB1W2U
                +
00c5c3 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00c5c4 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00c5c5 940c b557 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EA:
                +
00c5c7 01de     +MOVW R26 , R28
00c5c8 5ca0     +SUBI R26 , LOW ( - 64 )
00c5c9 4fbf     +SBCI R27 , HIGH ( - 64 )
00c5ca 900d     +LD R0 , X +
00c5cb 91bc     +LD R27 , X
00c5cc 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00c5cd c995      	RJMP SUBOPT_0x21E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2EB:
00c5ce 940e cec8 	CALL __PUTPARD1
                +
00c5d0 01de     +MOVW R26 , R28
00c5d1 5bac     +SUBI R26 , LOW ( - 68 )
00c5d2 4fbf     +SBCI R27 , HIGH ( - 68 )
00c5d3 900d     +LD R0 , X +
00c5d4 91bc     +LD R27 , X
00c5d5 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00c5d6 e1ed      	LDI  R30,LOW(29)
00c5d7 940e cdfe 	CALL __MULB1W2U
                +
00c5d9 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00c5da 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00c5db 940c b557 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EC:
00c5dd 93ba      	ST   -Y,R27
00c5de 93aa      	ST   -Y,R26
00c5df 9722      	SBIW R28,2
00c5e0 940e cf38 	CALL __SAVELOCR6
00c5e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2ED:
00c5e3 940e cec8 	CALL __PUTPARD1
00c5e5 01fa      	MOVW R30,R20
00c5e6 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x2EE:
00c5e8 01da      	MOVW R26,R20
00c5e9 e6e4      	LDI  R30,LOW(100)
00c5ea e0f0      	LDI  R31,HIGH(100)
00c5eb 940e ce1c 	CALL __DIVW21U
00c5ed 85a8      	LDD  R26,Y+8
00c5ee 85b9      	LDD  R27,Y+8+1
00c5ef 93ec      	ST   X,R30
00c5f0 01da      	MOVW R26,R20
00c5f1 e6e4      	LDI  R30,LOW(100)
00c5f2 e0f0      	LDI  R31,HIGH(100)
00c5f3 940e ce65 	CALL __MODW21U
00c5f5 01df      	MOVW R26,R30
00c5f6 e0ea      	LDI  R30,LOW(10)
00c5f7 e0f0      	LDI  R31,HIGH(10)
00c5f8 940e ce1c 	CALL __DIVW21U
                +
00c5fa 85a8     +LDD R26 , Y + 8
00c5fb 85b9     +LDD R27 , Y + 8 + 1
00c5fc 9611     +ADIW R26 , 1
00c5fd 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00c5fe 01da      	MOVW R26,R20
00c5ff e6e4      	LDI  R30,LOW(100)
00c600 e0f0      	LDI  R31,HIGH(100)
00c601 940e ce65 	CALL __MODW21U
00c603 01df      	MOVW R26,R30
00c604 e0ea      	LDI  R30,LOW(10)
00c605 e0f0      	LDI  R31,HIGH(10)
00c606 940e ce65 	CALL __MODW21U
                +
00c608 85a8     +LDD R26 , Y + 8
00c609 85b9     +LDD R27 , Y + 8 + 1
00c60a 9612     +ADIW R26 , 2
00c60b 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00c60c 85a8      	LDD  R26,Y+8
00c60d 85b9      	LDD  R27,Y+8+1
00c60e 9613      	ADIW R26,3
00c60f e0e2      	LDI  R30,LOW(2)
00c610 93ec      	ST   X,R30
00c611 e0e0      	LDI  R30,LOW(0)
00c612 e0f0      	LDI  R31,HIGH(0)
00c613 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EF:
00c614 940e cec8 	CALL __PUTPARD1
00c616 01f8      	MOVW R30,R16
00c617 940c b388 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x2F0:
00c619 01d8      	MOVW R26,R16
00c61a e6e4      	LDI  R30,LOW(100)
00c61b e0f0      	LDI  R31,HIGH(100)
00c61c 940e ce1c 	CALL __DIVW21U
00c61e 85a8      	LDD  R26,Y+8
00c61f 85b9      	LDD  R27,Y+8+1
00c620 93ec      	ST   X,R30
00c621 01d8      	MOVW R26,R16
00c622 e6e4      	LDI  R30,LOW(100)
00c623 e0f0      	LDI  R31,HIGH(100)
00c624 940e ce65 	CALL __MODW21U
00c626 01df      	MOVW R26,R30
00c627 e0ea      	LDI  R30,LOW(10)
00c628 e0f0      	LDI  R31,HIGH(10)
00c629 940e ce1c 	CALL __DIVW21U
                +
00c62b 85a8     +LDD R26 , Y + 8
00c62c 85b9     +LDD R27 , Y + 8 + 1
00c62d 9611     +ADIW R26 , 1
00c62e 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00c62f 01d8      	MOVW R26,R16
00c630 e6e4      	LDI  R30,LOW(100)
00c631 e0f0      	LDI  R31,HIGH(100)
00c632 940e ce65 	CALL __MODW21U
00c634 01df      	MOVW R26,R30
00c635 e0ea      	LDI  R30,LOW(10)
00c636 e0f0      	LDI  R31,HIGH(10)
00c637 940e ce65 	CALL __MODW21U
                +
00c639 85a8     +LDD R26 , Y + 8
00c63a 85b9     +LDD R27 , Y + 8 + 1
00c63b 9612     +ADIW R26 , 2
00c63c 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00c63d 85a8      	LDD  R26,Y+8
00c63e 85b9      	LDD  R27,Y+8+1
00c63f 9613      	ADIW R26,3
00c640 e0e1      	LDI  R30,LOW(1)
00c641 93ec      	ST   X,R30
00c642 e0e0      	LDI  R30,LOW(0)
00c643 e0f0      	LDI  R31,HIGH(0)
00c644 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F1:
00c645 85aa      	LDD  R26,Y+10
00c646 85bb      	LDD  R27,Y+10+1
00c647 e6e4      	LDI  R30,LOW(100)
00c648 e0f0      	LDI  R31,HIGH(100)
00c649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F2:
00c64a e8a9      	LDI  R26,LOW(_eep_vref_val)
00c64b e0b5      	LDI  R27,HIGH(_eep_vref_val)
00c64c 940e cee7 	CALL __EEPROMRDD
00c64e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F3:
00c64f 940e b476 	CALL SUBOPT_0x57
00c651 940e cec8 	CALL __PUTPARD1
00c653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F4:
00c654 01f9      	MOVW R30,R18
00c655 9634      	ADIW R30,4
00c656 170e      	CP   R16,R30
00c657 071f      	CPC  R17,R31
00c658 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2F5:
00c659 01f8      	MOVW R30,R16
00c65a 1be2      	SUB  R30,R18
00c65b 0bf3      	SBC  R31,R19
00c65c 01de      	MOVW R26,R28
00c65d 9650      	ADIW R26,16
00c65e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2F6:
00c65f 01f8      	MOVW R30,R16
00c660 0fee      	LSL  R30
00c661 1fff      	ROL  R31
00c662 8dac      	LDD  R26,Y+28
00c663 8dbd      	LDD  R27,Y+28+1
00c664 0fae      	ADD  R26,R30
00c665 1fbf      	ADC  R27,R31
00c666 91ac      	LD   R26,X
00c667 940e 8ee7 	CALL _h2i
00c669 e1a0      	LDI  R26,LOW(16)
00c66a 02ea      	MULS R30,R26
00c66b 01f0      	MOVW R30,R0
00c66c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x2F7:
00c66d 01f8      	MOVW R30,R16
00c66e 0fee      	LSL  R30
00c66f 1fff      	ROL  R31
00c670 9631      	ADIW R30,1
00c671 8dac      	LDD  R26,Y+28
00c672 8dbd      	LDD  R27,Y+28+1
00c673 0fae      	ADD  R26,R30
00c674 1fbf      	ADC  R27,R31
00c675 91ac      	LD   R26,X
00c676 940c 8ee7 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x2F8:
00c678 93ec      	ST   X,R30
00c679 01d8      	MOVW R26,R16
00c67a 1ba2      	SUB  R26,R18
00c67b 0bb3      	SBC  R27,R19
00c67c e0e3      	LDI  R30,LOW(3)
00c67d e0f0      	LDI  R31,HIGH(3)
00c67e 940e ce04 	CALL __MULW12
00c680 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2F9:
00c681 8daa      	LDD  R26,Y+26
00c682 8dbb      	LDD  R27,Y+26+1
00c683 0fea      	ADD  R30,R26
00c684 1ffb      	ADC  R31,R27
00c685 01bf      	MOVW R22,R30
00c686 cfd2      	RJMP SUBOPT_0x2F5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2FA:
00c687 0fae      	ADD  R26,R30
00c688 1fbf      	ADC  R27,R31
00c689 91ec      	LD   R30,X
00c68a e0f0      	LDI  R31,0
00c68b 01df      	MOVW R26,R30
00c68c e6e4      	LDI  R30,LOW(100)
00c68d e0f0      	LDI  R31,HIGH(100)
00c68e 940e ce2f 	CALL __DIVW21
00c690 01db      	MOVW R26,R22
00c691 cfe6      	RJMP SUBOPT_0x2F8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2FB:
00c692 0fae      	ADD  R26,R30
00c693 1fbf      	ADC  R27,R31
00c694 91ac      	LD   R26,X
00c695 27bb      	CLR  R27
00c696 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2FC:
00c697 01df      	MOVW R26,R30
00c698 e0ea      	LDI  R30,LOW(10)
00c699 e0f0      	LDI  R31,HIGH(10)
00c69a 940e ce2f 	CALL __DIVW21
00c69c 01db      	MOVW R26,R22
00c69d cfda      	RJMP SUBOPT_0x2F8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2FD:
00c69e 01f8      	MOVW R30,R16
00c69f 1be2      	SUB  R30,R18
00c6a0 0bf3      	SBC  R31,R19
00c6a1 01de      	MOVW R26,R28
00c6a2 961c      	ADIW R26,12
00c6a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2FE:
00c6a4 8da8      	LDD  R26,Y+24
00c6a5 8db9      	LDD  R27,Y+24+1
00c6a6 0fea      	ADD  R30,R26
00c6a7 1ffb      	ADC  R31,R27
00c6a8 01bf      	MOVW R22,R30
00c6a9 cff4      	RJMP SUBOPT_0x2FD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2FF:
00c6aa 01f8      	MOVW R30,R16
00c6ab 1be2      	SUB  R30,R18
00c6ac 0bf3      	SBC  R31,R19
00c6ad 01de      	MOVW R26,R28
00c6ae 9618      	ADIW R26,8
00c6af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x300:
00c6b0 89ae      	LDD  R26,Y+22
00c6b1 89bf      	LDD  R27,Y+22+1
00c6b2 0fea      	ADD  R30,R26
00c6b3 1ffb      	ADC  R31,R27
00c6b4 01bf      	MOVW R22,R30
00c6b5 cff4      	RJMP SUBOPT_0x2FF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x301:
00c6b6 89ac      	LDD  R26,Y+20
00c6b7 89bd      	LDD  R27,Y+20+1
00c6b8 0fea      	ADD  R30,R26
00c6b9 1ffb      	ADC  R31,R27
00c6ba 01bf      	MOVW R22,R30
00c6bb 01f8      	MOVW R30,R16
00c6bc 1be2      	SUB  R30,R18
00c6bd 0bf3      	SBC  R31,R19
00c6be 940c bad6 	JMP SUBOPT_0x15F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x302:
00c6c0 91ec      	LD   R30,X
00c6c1 e0f0      	LDI  R31,0
00c6c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x303:
00c6c3 940e cdbd 	CALL __CWD1
00c6c5 940e cbf7 	CALL __CDF1
00c6c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x304:
00c6c8 81e8      	LD   R30,Y
00c6c9 e0f0      	LDI  R31,0
00c6ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x305:
00c6cb 81ae      	LDD  R26,Y+6
00c6cc 81bf      	LDD  R27,Y+6+1
00c6cd 0fae      	ADD  R26,R30
00c6ce 1fbf      	ADC  R27,R31
00c6cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x306:
00c6d0 01de      	MOVW R26,R28
00c6d1 965e      	ADIW R26,30
00c6d2 0fae      	ADD  R26,R30
00c6d3 1fbf      	ADC  R27,R31
00c6d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x307:
00c6d5 e0e0      	LDI  R30,LOW(0)
00c6d6 a3ea      	STD  Y+34,R30
00c6d7 01de      	MOVW R26,R28
00c6d8 965e      	ADIW R26,30
00c6d9 940c 9451 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x308:
00c6db e0e0      	LDI  R30,LOW(0)
00c6dc a3e8      	STD  Y+32,R30
00c6dd 01de      	MOVW R26,R28
00c6de 965e      	ADIW R26,30
00c6df 940c 9451 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x309:
                +
00c6e1 87e8     +STD Y + 8 , R30
00c6e2 87f9     +STD Y + 8 + 1 , R31
00c6e3 876a     +STD Y + 8 + 2 , R22
00c6e4 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00c6e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30A:
                +
00c6e6 8be8     +STD Y + 16 , R30
00c6e7 8bf9     +STD Y + 16 + 1 , R31
00c6e8 8b6a     +STD Y + 16 + 2 , R22
00c6e9 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00c6ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30B:
                +
00c6eb 8bec     +STD Y + 20 , R30
00c6ec 8bfd     +STD Y + 20 + 1 , R31
00c6ed 8b6e     +STD Y + 20 + 2 , R22
00c6ee 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00c6ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30C:
                +
00c6f0 e7ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 195 ) )
00c6f1 e6f1     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 195 ) )
00c6f2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 195 ) )
00c6f3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 195 ) )
                 	__POINTD1FN _0x2E0000,195
00c6f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30D:
00c6f5 01de      	MOVW R26,R28
00c6f6 9611      	ADIW R26,1
00c6f7 0fae      	ADD  R26,R30
00c6f8 1fbf      	ADC  R27,R31
00c6f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30E:
00c6fa e0e9      	LDI  R30,LOW(9)
00c6fb e0f0      	LDI  R31,HIGH(9)
00c6fc 93e0 10f4 	STS  _hwCalId,R30
00c6fe 93f0 10f5 	STS  _hwCalId+1,R31
00c700 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30F:
00c701 940e cec8 	CALL __PUTPARD1
00c703 940c b6b9 	JMP SUBOPT_0xAD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x310:
00c705 2fa1      	MOV  R26,R17
00c706 27bb      	CLR  R27
00c707 e0e3      	LDI  R30,LOW(3)
00c708 e0f0      	LDI  R31,HIGH(3)
00c709 940e ce68 	CALL __MODW21
00c70b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x311:
00c70c 2fa1      	MOV  R26,R17
00c70d e0b0      	LDI  R27,0
00c70e e0e3      	LDI  R30,LOW(3)
00c70f e0f0      	LDI  R31,HIGH(3)
00c710 940e ce2f 	CALL __DIVW21
00c712 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00c713 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00c714 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x312:
00c715 91ac      	LD   R26,X
00c716 940e b19a 	CALL _isdigit
00c718 30e0      	CPI  R30,0
00c719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x313:
00c71a 01bf      	MOVW R22,R30
00c71b 01df      	MOVW R26,R30
00c71c 940e ceef 	CALL __EEPROMRDB
00c71e 2e0e      	MOV  R0,R30
00c71f 940c b6b9 	JMP SUBOPT_0xAD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x314:
                +
00c721 e9ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00c722 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00c723 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00c724 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00c725 940e cec8 	CALL __PUTPARD1
00c727 2fa1      	MOV  R26,R17
00c728 e0b0      	LDI  R27,0
00c729 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00c72a 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00c72b 940c b9ae 	JMP SUBOPT_0x12E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x315:
                +
00c72d ece7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 13 ) )
00c72e e6f0     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 13 ) )
00c72f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 13 ) )
00c730 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 13 ) )
                 	__POINTD1FN _0x2E0000,13
00c731 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x316:
00c733 e6ef      	LDI  R30,LOW(_rxPackage3)
00c734 e0fd      	LDI  R31,HIGH(_rxPackage3)
00c735 93fa      	ST   -Y,R31
00c736 93ea      	ST   -Y,R30
00c737 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x317:
00c738 940e cec8 	CALL __PUTPARD1
00c73a e0a7      	LDI  R26,LOW(7)
00c73b 940e 97e1 	CALL _strncmpf
00c73d 30e0      	CPI  R30,0
00c73e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x318:
00c73f 940e cec8 	CALL __PUTPARD1
00c741 01da      	MOVW R26,R20
00c742 91ec      	LD   R30,X
00c743 940c b342 	JMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x319:
                +
00c745 e6e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 681 ) )
00c746 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 681 ) )
00c747 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 681 ) )
00c748 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 681 ) )
                 	__POINTD1FN _0x2E0000,681
00c749 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31A:
                +
00c74b eee3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 809 ) )
00c74c e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 809 ) )
00c74d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 809 ) )
00c74e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 809 ) )
                 	__POINTD1FN _0x2E0000,809
00c74f 940c b22a 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31B:
00c751 85ac      	LDD  R26,Y+12
00c752 85bd      	LDD  R27,Y+12+1
00c753 940c 9263 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x31C:
00c755 89ac      	LDD  R26,Y+20
00c756 89bd      	LDD  R27,Y+20+1
00c757 9618      	ADIW R26,8
00c758 e0e3      	LDI  R30,LOW(3)
00c759 e0f0      	LDI  R31,HIGH(3)
00c75a 93ed      	ST   X+,R30
00c75b 93fc      	ST   X,R31
00c75c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x31D:
00c75d 91e0 0125 	LDS  R30,293
00c75f 2ffe      	MOV  R31,R30
00c760 e0e0      	LDI  R30,0
00c761 01df      	MOVW R26,R30
00c762 91e0 0124 	LDS  R30,292
00c764 940c bc57 	JMP SUBOPT_0x19E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31E:
00c766 e0e0      	LDI  R30,LOW(0)
00c767 93e0 0125 	STS  293,R30
00c769 93e0 0124 	STS  292,R30
00c76b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31F:
00c76c 8be8      	STD  Y+16,R30
00c76d 8bf9      	STD  Y+16+1,R31
00c76e 89a8      	LDD  R26,Y+16
00c76f 89b9      	LDD  R27,Y+16+1
00c770 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x320:
00c771 01f9      	MOVW R30,R18
00c772 01de      	MOVW R26,R28
00c773 9616      	ADIW R26,6
00c774 0fee      	LSL  R30
00c775 1fff      	ROL  R31
00c776 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x321:
00c777 0fae      	ADD  R26,R30
00c778 1fbf      	ADC  R27,R31
00c779 940e ce94 	CALL __GETW1P
00c77b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x322:
                +
00c77c 87e9     +STD Y + 9 , R30
00c77d 87fa     +STD Y + 9 + 1 , R31
00c77e 876b     +STD Y + 9 + 2 , R22
00c77f 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00c780 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x323:
00c781 81ae      	LDD  R26,Y+6
00c782 81bf      	LDD  R27,Y+6+1
00c783 9611      	ADIW R26,1
00c784 83ae      	STD  Y+6,R26
00c785 83bf      	STD  Y+6+1,R27
00c786 9711      	SBIW R26,1
00c787 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x324:
00c788 940e b6e0 	CALL SUBOPT_0xB5
                +
00c78a eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00c78b ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00c78c ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00c78d e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00c78e 940e cc81 	CALL __MULF12
00c790 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x325:
00c791 940e b6db 	CALL SUBOPT_0xB4
                +
00c793 85a9     +LDD R26 , Y + 9
00c794 85ba     +LDD R27 , Y + 9 + 1
00c795 858b     +LDD R24 , Y + 9 + 2
00c796 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00c797 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x326:
                +
00c798 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00c799 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00c79a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00c79b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00c79c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x327:
00c79d 940e b679 	CALL SUBOPT_0xA1
00c79f 940e cc81 	CALL __MULF12
00c7a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x328:
                +
00c7a2 e0a0     +LDI R26 , LOW ( 0x3F000000 )
00c7a3 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00c7a4 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00c7a5 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00c7a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x329:
00c7a7 2fe0      	MOV  R30,R16
00c7a8 5de0      	SUBI R30,-LOW(48)
00c7a9 93ec      	ST   X,R30
00c7aa 2fe0      	MOV  R30,R16
00c7ab e0f0      	LDI  R31,0
00c7ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32A:
                +
00c7ad 85a9     +LDD R26 , Y + 9
00c7ae 85ba     +LDD R27 , Y + 9 + 1
00c7af 858b     +LDD R24 , Y + 9 + 2
00c7b0 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00c7b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32B:
00c7b2 89e8      	LDD  R30,Y+16
00c7b3 89f9      	LDD  R31,Y+16+1
00c7b4 9631      	ADIW R30,1
00c7b5 8be8      	STD  Y+16,R30
00c7b6 8bf9      	STD  Y+16+1,R31
00c7b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32C:
00c7b8 940e b26d 	CALL SUBOPT_0xB
00c7ba cfe2      	RJMP SUBOPT_0x327
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32D:
00c7bb 940e cc81 	CALL __MULF12
00c7bd 940c b820 	JMP SUBOPT_0xE7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32E:
00c7bf 93e0 1a89 	STS  __seed_G100,R30
00c7c1 93f0 1a8a 	STS  __seed_G100+1,R31
00c7c3 9360 1a8b 	STS  __seed_G100+2,R22
00c7c5 9370 1a8c 	STS  __seed_G100+3,R23
00c7c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32F:
00c7c8 940e ce94 	CALL __GETW1P
00c7ca 83ee      	STD  Y+6,R30
00c7cb 83ff      	STD  Y+6+1,R31
00c7cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x330:
00c7cd e0f0      	LDI  R31,0
00c7ce 940e cdbd 	CALL __CWD1
00c7d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x331:
00c7d1 940e ce9e 	CALL __GETD1P_INC
00c7d3 940e b79e 	CALL SUBOPT_0xD2
00c7d5 940e cea8 	CALL __PUTDP1_DEC
00c7d7 940c b7b9 	JMP SUBOPT_0xD8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x332:
00c7d9 940e ce98 	CALL __GETD1P
                +
00c7db 83e9     +STD Y + 1 , R30
00c7dc 83fa     +STD Y + 1 + 1 , R31
00c7dd 836b     +STD Y + 1 + 2 , R22
00c7de 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00c7df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x333:
                +
00c7e0 81ed     +LDD R30 , Y + 5
00c7e1 81fe     +LDD R31 , Y + 5 + 1
00c7e2 816f     +LDD R22 , Y + 5 + 2
00c7e3 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00c7e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x334:
00c7e5 85e9      	LDD  R30,Y+9
00c7e6 85fa      	LDD  R31,Y+9+1
00c7e7 81a1      	LDD  R26,Z+1
00c7e8 93aa      	ST   -Y,R26
00c7e9 85ea      	LDD  R30,Y+10
00c7ea 85fb      	LDD  R31,Y+10+1
00c7eb 96f2      	ADIW R30,50
00c7ec 93fa      	ST   -Y,R31
00c7ed 93ea      	ST   -Y,R30
00c7ee 940e b5c7 	CALL SUBOPT_0x89
00c7f0 940e cec8 	CALL __PUTPARD1
00c7f2 e0a1      	LDI  R26,LOW(1)
00c7f3 940c 9a7e 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x335:
                +
00c7f5 a1a2     +LDD R26 , Z + 34
00c7f6 a1b3     +LDD R27 , Z + 34 + 1
00c7f7 a184     +LDD R24 , Z + 34 + 2
00c7f8 a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00c7f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x336:
00c7fa 93fa      	ST   -Y,R31
00c7fb 93ea      	ST   -Y,R30
00c7fc 940e b443 	CALL SUBOPT_0x4F
00c7fe 940e cec8 	CALL __PUTPARD1
00c800 e0a1      	LDI  R26,LOW(1)
00c801 940e 9a19 	CALL _disk_read
00c803 30e0      	CPI  R30,0
00c804 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x337:
00c805 940e b350 	CALL SUBOPT_0x2D
00c807 940c 9dbb 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x338:
00c809 96f2      	ADIW R30,50
00c80a 93fa      	ST   -Y,R31
00c80b 93ea      	ST   -Y,R30
00c80c e0e0      	LDI  R30,LOW(0)
00c80d e0f0      	LDI  R31,HIGH(0)
00c80e 93fa      	ST   -Y,R31
00c80f 93ea      	ST   -Y,R30
00c810 e0a0      	LDI  R26,LOW(512)
00c811 e0b2      	LDI  R27,HIGH(512)
00c812 940c 9d5e 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x339:
00c814 940e ce98 	CALL __GETD1P
00c816 01d0      	MOVW R26,R0
00c817 940e cea3 	CALL __PUTDP1
00c819 81e9      	LDD  R30,Y+1
00c81a 81fa      	LDD  R31,Y+1+1
00c81b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x33A:
                +
00c81c 89a2     +LDD R26 , Z + 18
00c81d 89b3     +LDD R27 , Z + 18 + 1
00c81e 8984     +LDD R24 , Z + 18 + 2
00c81f 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00c820 940e cecd 	CALL __PUTPARD2
00c822 e0a1      	LDI  R26,LOW(1)
00c823 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x33B:
                +
00c824 30a2     +CPI R26 , LOW ( 0x2 )
00c825 e0e0     +LDI R30 , HIGH ( 0x2 )
00c826 07be     +CPC R27 , R30
00c827 e0e0     +LDI R30 , BYTE3 ( 0x2 )
00c828 078e     +CPC R24 , R30
00c829 e0e0     +LDI R30 , BYTE4 ( 0x2 )
00c82a 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00c82b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33C:
                +
00c82c e0e1     +LDI R30 , LOW ( 0x1 )
00c82d e0f0     +LDI R31 , HIGH ( 0x1 )
00c82e e060     +LDI R22 , BYTE3 ( 0x1 )
00c82f e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00c830 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33D:
00c831 940e ce98 	CALL __GETD1P
00c833 940c b6a2 	JMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x33E:
00c835 01d9      	MOVW R26,R18
00c836 e0e0      	LDI  R30,LOW(512)
00c837 e0f2      	LDI  R31,HIGH(512)
00c838 940e ce1c 	CALL __DIVW21U
00c83a 940e b48c 	CALL SUBOPT_0x59
00c83c 2766      	CLR  R22
00c83d 2777      	CLR  R23
00c83e 940e cd3d 	CALL __ADDD21
00c840 940e 9dbb 	CALL _move_window_G103
00c842 30e0      	CPI  R30,0
00c843 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x33F:
00c844 85ac      	LDD  R26,Y+12
00c845 85bd      	LDD  R27,Y+12+1
00c846 96d2      	ADIW R26,50
00c847 01f9      	MOVW R30,R18
00c848 70f1      	ANDI R31,HIGH(0x1FF)
00c849 0fae      	ADD  R26,R30
00c84a 1fbf      	ADC  R27,R31
00c84b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x340:
                +
00c84c e0e0     +LDI R30 , LOW ( 0x100 )
00c84d e0f1     +LDI R31 , HIGH ( 0x100 )
00c84e e060     +LDI R22 , BYTE3 ( 0x100 )
00c84f e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00c850 940e ce34 	CALL __DIVD21U
00c852 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x341:
00c853 940e b48c 	CALL SUBOPT_0x59
00c855 940e cd3d 	CALL __ADDD21
00c857 940e 9dbb 	CALL _move_window_G103
00c859 30e0      	CPI  R30,0
00c85a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x342:
00c85b 940e cdfe 	CALL __MULB1W2U
00c85d 70f1      	ANDI R31,HIGH(0x1FF)
00c85e 85ac      	LDD  R26,Y+12
00c85f 85bd      	LDD  R27,Y+12+1
00c860 96d2      	ADIW R26,50
00c861 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x343:
                +
00c862 e8e0     +LDI R30 , LOW ( 0x80 )
00c863 e0f0     +LDI R31 , HIGH ( 0x80 )
00c864 e060     +LDI R22 , BYTE3 ( 0x80 )
00c865 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00c866 940e ce34 	CALL __DIVD21U
00c868 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x344:
00c869 01d8      	MOVW R26,R16
00c86a e0e0      	LDI  R30,LOW(512)
00c86b e0f2      	LDI  R31,HIGH(512)
00c86c 940e ce1c 	CALL __DIVW21U
00c86e 940e b7af 	CALL SUBOPT_0xD6
00c870 2766      	CLR  R22
00c871 2777      	CLR  R23
00c872 940e cd3d 	CALL __ADDD21
00c874 940e 9dbb 	CALL _move_window_G103
00c876 2f5e      	MOV  R21,R30
00c877 3050      	CPI  R21,0
00c878 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x345:
00c879 89aa      	LDD  R26,Y+18
00c87a 89bb      	LDD  R27,Y+18+1
00c87b 96d2      	ADIW R26,50
00c87c 01f8      	MOVW R30,R16
00c87d 70f1      	ANDI R31,HIGH(0x1FF)
00c87e 0fea      	ADD  R30,R26
00c87f 1ffb      	ADC  R31,R27
00c880 019f      	MOVW R18,R30
00c881 85ee      	LDD  R30,Y+14
00c882 70e1      	ANDI R30,LOW(0x1)
00c883 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x346:
                +
00c884 89a8     +LDD R26 , Y + 16
00c885 89b9     +LDD R27 , Y + 16 + 1
00c886 898a     +LDD R24 , Y + 16 + 2
00c887 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00c888 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x347:
00c889 940e b7af 	CALL SUBOPT_0xD6
00c88b 940e cd3d 	CALL __ADDD21
00c88d 940e 9dbb 	CALL _move_window_G103
00c88f 2f5e      	MOV  R21,R30
00c890 3050      	CPI  R21,0
00c891 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x348:
00c892 940e cdfe 	CALL __MULB1W2U
00c894 70f1      	ANDI R31,HIGH(0x1FF)
00c895 89aa      	LDD  R26,Y+18
00c896 89bb      	LDD  R27,Y+18+1
00c897 96d2      	ADIW R26,50
00c898 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x349:
                +
00c899 81ad     +LDD R26 , Y + 5
00c89a 81be     +LDD R27 , Y + 5 + 1
00c89b 818f     +LDD R24 , Y + 5 + 2
00c89c 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00c89d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34A:
00c89e 85a9      	LDD  R26,Y+9
00c89f 85ba      	LDD  R27,Y+9+1
00c8a0 965e      	ADIW R26,30
00c8a1 940e ce98 	CALL __GETD1P
00c8a3 dff5      	RCALL SUBOPT_0x349
00c8a4 940e cf33 	CALL __CPD21
00c8a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34B:
                +
00c8a7 81e9     +LDD R30 , Y + 1
00c8a8 81fa     +LDD R31 , Y + 1 + 1
00c8a9 816b     +LDD R22 , Y + 1 + 2
00c8aa 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00c8ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x34C:
                +
00c8ac 30a1     +CPI R26 , LOW ( 0x1 )
00c8ad e0e0     +LDI R30 , HIGH ( 0x1 )
00c8ae 07be     +CPC R27 , R30
00c8af e0e0     +LDI R30 , BYTE3 ( 0x1 )
00c8b0 078e     +CPC R24 , R30
00c8b1 e0e0     +LDI R30 , BYTE4 ( 0x1 )
00c8b2 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00c8b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34D:
                +
00c8b4 85a6     +LDD R26 , Z + 14
00c8b5 85b7     +LDD R27 , Z + 14 + 1
00c8b6 8980     +LDD R24 , Z + 14 + 2
00c8b7 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00c8b8 940c b3ae 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34E:
                +
00c8ba 83ed     +STD Y + 5 , R30
00c8bb 83fe     +STD Y + 5 + 1 , R31
00c8bc 836f     +STD Y + 5 + 2 , R22
00c8bd 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00c8be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34F:
00c8bf 89ec      	LDD  R30,Y+20
00c8c0 89fd      	LDD  R31,Y+20+1
00c8c1 93fa      	ST   -Y,R31
00c8c2 93ea      	ST   -Y,R30
00c8c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x350:
                +
00c8c4 89aa     +LDD R26 , Y + 18
00c8c5 89bb     +LDD R27 , Y + 18 + 1
00c8c6 898c     +LDD R24 , Y + 18 + 2
00c8c7 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00c8c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x351:
                +
00c8c9 e0e2     +LDI R30 , LOW ( 0x2 )
00c8ca e0f0     +LDI R31 , HIGH ( 0x2 )
00c8cb e060     +LDI R22 , BYTE3 ( 0x2 )
00c8cc e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00c8cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x352:
00c8ce 940e b5c7 	CALL SUBOPT_0x89
00c8d0 940e b7af 	CALL SUBOPT_0xD6
00c8d2 940e cf2e 	CALL __CPD12
00c8d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x353:
                +
00c8d5 e0e0     +LDI R30 , LOW ( 0x0 )
00c8d6 e0f0     +LDI R31 , HIGH ( 0x0 )
00c8d7 e060     +LDI R22 , BYTE3 ( 0x0 )
00c8d8 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c8d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x354:
00c8da 85a8      	LDD  R26,Y+8
00c8db 85b9      	LDD  R27,Y+8+1
00c8dc 940e ce94 	CALL __GETW1P
00c8de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x355:
00c8df 967e      	ADIW R30,30
00c8e0 01df      	MOVW R26,R30
00c8e1 940e ce98 	CALL __GETD1P
00c8e3 940e b6e0 	CALL SUBOPT_0xB5
00c8e5 940e cf33 	CALL __CPD21
00c8e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x356:
00c8e8 940e b6db 	CALL SUBOPT_0xB4
                +
00c8ea 85a8     +LDD R26 , Y + 8
00c8eb 85b9     +LDD R27 , Y + 8 + 1
00c8ec 961a     +ADIW R26 , 10
00c8ed 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00c8ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x357:
00c8f0 85a8      	LDD  R26,Y+8
00c8f1 85b9      	LDD  R27,Y+8+1
00c8f2 ccad      	RJMP SUBOPT_0x2E5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x358:
00c8f3 2766      	CLR  R22
00c8f4 2777      	CLR  R23
00c8f5 940e cd38 	CALL __ADDD12
00c8f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x359:
00c8f8 70ef      	ANDI R30,LOW(0xF)
00c8f9 70f0      	ANDI R31,HIGH(0xF)
00c8fa 0fee      	LSL  R30
00c8fb 940e cd83 	CALL __LSLW4
00c8fd 0fea      	ADD  R30,R26
00c8fe 1ffb      	ADC  R31,R27
00c8ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35A:
00c900 940e ce98 	CALL __GETD1P
00c902 940e cf1c 	CALL __CPD10
00c904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x35B:
00c905 85a9      	LDD  R26,Y+9
00c906 85ba      	LDD  R27,Y+9+1
00c907 940e ce94 	CALL __GETW1P
00c909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35C:
00c90a 85a9      	LDD  R26,Y+9
00c90b 85ba      	LDD  R27,Y+9+1
00c90c cc93      	RJMP SUBOPT_0x2E5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35D:
00c90d 85eb      	LDD  R30,Y+11
00c90e 85fc      	LDD  R31,Y+11+1
                +
00c90f 85a2     +LDD R26 , Z + 10
00c910 85b3     +LDD R27 , Z + 10 + 1
00c911 8584     +LDD R24 , Z + 10 + 2
00c912 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00c913 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35E:
00c914 967e      	ADIW R30,30
00c915 01df      	MOVW R26,R30
00c916 940e ce98 	CALL __GETD1P
00c918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35F:
00c919 81ac      	LDD  R26,Y+4
00c91a 81bd      	LDD  R27,Y+4+1
00c91b cc84      	RJMP SUBOPT_0x2E5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x360:
00c91c 81ee      	LDD  R30,Y+6
00c91d 81ff      	LDD  R31,Y+6+1
                +
00c91e 85a6     +LDD R26 , Z + 14
00c91f 85b7     +LDD R27 , Z + 14 + 1
00c920 8980     +LDD R24 , Z + 14 + 2
00c921 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00c922 940e 9dbb 	CALL _move_window_G103
00c924 2f1e      	MOV  R17,R30
00c925 3010      	CPI  R17,0
00c926 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x361:
00c927 933a      	ST   -Y,R19
00c928 932a      	ST   -Y,R18
00c929 81ee      	LDD  R30,Y+6
00c92a 81ff      	LDD  R31,Y+6+1
00c92b 89a4      	LDD  R26,Z+20
00c92c 89b5      	LDD  R27,Z+21
00c92d 93ba      	ST   -Y,R27
00c92e 93aa      	ST   -Y,R26
00c92f 940c b419 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x362:
00c931 2fe2      	MOV  R30,R18
00c932 5f2f      	SUBI R18,-1
00c933 e0f0      	LDI  R31,0
00c934 0fe4      	ADD  R30,R20
00c935 1ff5      	ADC  R31,R21
00c936 8300      	ST   Z,R16
00c937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x363:
00c938 e0f0      	LDI  R31,0
00c939 0fe4      	ADD  R30,R20
00c93a 1ff5      	ADC  R31,R21
00c93b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x364:
                +
00c93c 81ae     +LDD R26 , Y + 6
00c93d 81bf     +LDD R27 , Y + 6 + 1
00c93e 9616     +ADIW R26 , 6
00c93f 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00c941 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x365:
00c942 01d9      	MOVW R26,R18
00c943 9654      	ADIW R26,20
00c944 940c b2f1 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x366:
00c946 01d9      	MOVW R26,R18
00c947 965a      	ADIW R26,26
00c948 940e ce94 	CALL __GETW1P
00c94a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x367:
00c94b 2766      	CLR  R22
00c94c 2777      	CLR  R23
00c94d 940e cd51 	CALL __ORD12
00c94f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x368:
00c950 940e cec8 	CALL __PUTPARD1
00c952 e0a1      	LDI  R26,LOW(1)
00c953 940e 9a19 	CALL _disk_read
00c955 30e0      	CPI  R30,0
00c956 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x369:
00c957 96f2      	ADIW R30,50
00c958 50e2      	SUBI R30,LOW(-510)
00c959 4ffe      	SBCI R31,HIGH(-510)
00c95a 01df      	MOVW R26,R30
00c95b 940e ce94 	CALL __GETW1P
00c95d 35e5      	CPI  R30,LOW(0xAA55)
00c95e eaaa      	LDI  R26,HIGH(0xAA55)
00c95f 07fa      	CPC  R31,R26
00c960 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x36A:
00c961 940e ce98 	CALL __GETD1P
                +
00c963 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00c964 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00c965 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00c966 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00c967 34e6     +CPI R30 , LOW ( 0x544146 )
00c968 e4a1     +LDI R26 , HIGH ( 0x544146 )
00c969 07fa     +CPC R31 , R26
00c96a e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00c96b 076a     +CPC R22 , R26
00c96c e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00c96d 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00c96e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x36B:
00c96f e9a2      	LDI  R26,LOW(_FatFs_G103)
00c970 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00c971 e0f0      	LDI  R31,0
00c972 0fee      	LSL  R30
00c973 1fff      	ROL  R31
00c974 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x36C:
                +
00c975 8bea     +STD Y + 18 , R30
00c976 8bfb     +STD Y + 18 + 1 , R31
00c977 8b6c     +STD Y + 18 + 2 , R22
00c978 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00c979 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36D:
00c97a 81ae      	LDD  R26,Y+6
00c97b 81bf      	LDD  R27,Y+6+1
00c97c 5ca0      	SUBI R26,LOW(-64)
00c97d 4fbf      	SBCI R27,HIGH(-64)
00c97e 940e ce94 	CALL __GETW1P
00c980 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36E:
00c981 81ee      	LDD  R30,Y+6
00c982 81ff      	LDD  R31,Y+6+1
00c983 85a0      	LDD  R26,Z+8
00c984 85b1      	LDD  R27,Z+9
00c985 01fd      	MOVW R30,R26
00c986 940e cd95 	CALL __LSRW4
00c988 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36F:
00c989 81ee      	LDD  R30,Y+6
00c98a 81ff      	LDD  R31,Y+6+1
00c98b de69      	RCALL SUBOPT_0x335
00c98c 940e b7a3 	CALL SUBOPT_0xD3
00c98e 940e cd38 	CALL __ADDD12
00c990 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x370:
00c991 940e 9dbb 	CALL _move_window_G103
00c993 2f1e      	MOV  R17,R30
00c994 3010      	CPI  R17,0
00c995 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x371:
00c996 8daa      	LDD  R26,Y+26
00c997 8dbb      	LDD  R27,Y+26+1
00c998 cc07      	RJMP SUBOPT_0x2E5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x372:
00c999 81a2      	LDD  R26,Z+2
00c99a 81b3      	LDD  R27,Z+3
00c99b 940e a662 	CALL _validate_G103
00c99d 2f1e      	MOV  R17,R30
00c99e 3010      	CPI  R17,0
00c99f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x373:
00c9a0 8dea      	LDD  R30,Y+26
00c9a1 8dfb      	LDD  R31,Y+26+1
                +
00c9a2 81a6     +LDD R26 , Z + 6
00c9a3 81b7     +LDD R27 , Z + 6 + 1
00c9a4 8580     +LDD R24 , Z + 6 + 2
00c9a5 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00c9a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x374:
00c9a7 01fd      	MOVW R30,R26
00c9a8 01bc      	MOVW R22,R24
00c9a9 70f1      	ANDI R31,HIGH(0x1FF)
00c9aa 9730      	SBIW R30,0
00c9ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x375:
00c9ac 8dec      	LDD  R30,Y+28
00c9ad 8dfd      	LDD  R31,Y+28+1
                +
00c9ae 89a2     +LDD R26 , Z + 18
00c9af 89b3     +LDD R27 , Z + 18 + 1
00c9b0 8984     +LDD R24 , Z + 18 + 2
00c9b1 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00c9b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x376:
00c9b3 8daa      	LDD  R26,Y+26
00c9b4 8dbb      	LDD  R27,Y+26+1
00c9b5 9614      	ADIW R26,4
00c9b6 91ec      	LD   R30,X
00c9b7 68e0      	ORI  R30,0x80
00c9b8 93ec      	ST   X,R30
00c9b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x377:
00c9ba 8dea      	LDD  R30,Y+26
00c9bb 8dfb      	LDD  R31,Y+26+1
00c9bc 81e5      	LDD  R30,Z+5
00c9bd e0f0      	LDI  R31,0
00c9be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x378:
00c9bf e0e0      	LDI  R30,LOW(512)
00c9c0 e0f2      	LDI  R31,HIGH(512)
00c9c1 940e ce1c 	CALL __DIVW21U
00c9c3 01af      	MOVW R20,R30
00c9c4 2e04      	MOV  R0,R20
00c9c5 2a05      	OR   R0,R21
00c9c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x379:
00c9c7 8daa      	LDD  R26,Y+26
00c9c8 8dbb      	LDD  R27,Y+26+1
00c9c9 940e ce94 	CALL __GETW1P
00c9cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37A:
00c9cc 81e1      	LDD  R30,Z+1
00c9cd 93ea      	ST   -Y,R30
00c9ce 81ef      	LDD  R30,Y+7
00c9cf 85f8      	LDD  R31,Y+7+1
00c9d0 93fa      	ST   -Y,R31
00c9d1 93ea      	ST   -Y,R30
00c9d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37B:
00c9d3 8dea      	LDD  R30,Y+26
00c9d4 8dfb      	LDD  R31,Y+26+1
                +
00c9d5 89a6     +LDD R26 , Z + 22
00c9d6 89b7     +LDD R27 , Z + 22 + 1
00c9d7 8d80     +LDD R24 , Z + 22 + 2
00c9d8 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00c9d9 940c b7b4 	JMP SUBOPT_0xD7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37C:
00c9db 940e cd47 	CALL __SUBD21
00c9dd 01fa      	MOVW R30,R20
00c9de 2766      	CLR  R22
00c9df 2777      	CLR  R23
00c9e0 940e cf33 	CALL __CPD21
00c9e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x37D:
00c9e3 940e cd47 	CALL __SUBD21
                +
00c9e5 e0e0     +LDI R30 , LOW ( 0x200 )
00c9e6 e0f2     +LDI R31 , HIGH ( 0x200 )
00c9e7 e060     +LDI R22 , BYTE3 ( 0x200 )
00c9e8 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00c9e9 940e cdde 	CALL __MULD12U
00c9eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37E:
00c9ec 9615      	ADIW R26,5
00c9ed 91ec      	LD   R30,X
00c9ee 0fe4      	ADD  R30,R20
00c9ef 93ec      	ST   X,R30
00c9f0 01fa      	MOVW R30,R20
00c9f1 0fee      	LSL  R30
00c9f2 1fff      	ROL  R31
00c9f3 2ffe      	MOV  R31,R30
00c9f4 e0e0      	LDI  R30,0
00c9f5 019f      	MOVW R18,R30
00c9f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37F:
00c9f7 81e1      	LDD  R30,Z+1
00c9f8 93ea      	ST   -Y,R30
00c9f9 8deb      	LDD  R30,Y+27
00c9fa 8dfc      	LDD  R31,Y+27+1
00c9fb 96b0      	ADIW R30,32
00c9fc 93fa      	ST   -Y,R31
00c9fd 93ea      	ST   -Y,R30
00c9fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x380:
                +
00c9ff 89a6     +LDD R26 , Z + 22
00ca00 89b7     +LDD R27 , Z + 22 + 1
00ca01 8d80     +LDD R24 , Z + 22 + 2
00ca02 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00ca03 940e cecd 	CALL __PUTPARD2
00ca05 e0a1      	LDI  R26,LOW(1)
00ca06 940e 9a7e 	CALL _disk_write
00ca08 30e0      	CPI  R30,0
00ca09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x381:
00ca0a 9614      	ADIW R26,4
00ca0b 91ec      	LD   R30,X
00ca0c 7bef      	ANDI R30,0xBF
00ca0d 93ec      	ST   X,R30
00ca0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x382:
00ca0f 9615      	ADIW R26,5
00ca10 91ec      	LD   R30,X
00ca11 5fef      	SUBI R30,-LOW(1)
00ca12 93ec      	ST   X,R30
00ca13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x383:
00ca14 9616      	ADIW R26,6
00ca15 940e ce94 	CALL __GETW1P
00ca17 70f1      	ANDI R31,HIGH(0x1FF)
00ca18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x384:
00ca19 9636      	ADIW R30,6
00ca1a 010f      	MOVW R0,R30
00ca1b 01df      	MOVW R26,R30
00ca1c 940e ce98 	CALL __GETD1P
00ca1e 01df      	MOVW R26,R30
00ca1f 01cb      	MOVW R24,R22
00ca20 01f9      	MOVW R30,R18
00ca21 ced1      	RJMP SUBOPT_0x358
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x385:
00ca22 91ed      	LD   R30,X+
00ca23 91fd      	LD   R31,X+
00ca24 0fe2      	ADD  R30,R18
00ca25 1ff3      	ADC  R31,R19
00ca26 93fe      	ST   -X,R31
00ca27 93ee      	ST   -X,R30
00ca28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x386:
00ca29 89ae      	LDD  R26,Y+22
00ca2a 89bf      	LDD  R27,Y+22+1
00ca2b cb74      	RJMP SUBOPT_0x2E5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x387:
00ca2c 89ae      	LDD  R26,Y+22
00ca2d 89bf      	LDD  R27,Y+22+1
00ca2e 961a      	ADIW R26,10
00ca2f 940e ce98 	CALL __GETD1P
00ca31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x388:
00ca32 89ee      	LDD  R30,Y+22
00ca33 89ff      	LDD  R31,Y+22+1
                +
00ca34 81a6     +LDD R26 , Z + 6
00ca35 81b7     +LDD R27 , Z + 6 + 1
00ca36 8580     +LDD R24 , Z + 6 + 2
00ca37 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00ca38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x389:
00ca39 89ae      	LDD  R26,Y+22
00ca3a 89bf      	LDD  R27,Y+22+1
00ca3b 940e ce94 	CALL __GETW1P
00ca3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38A:
00ca3e 8de8      	LDD  R30,Y+24
00ca3f 8df9      	LDD  R31,Y+24+1
                +
00ca40 89a2     +LDD R26 , Z + 18
00ca41 89b3     +LDD R27 , Z + 18 + 1
00ca42 8984     +LDD R24 , Z + 18 + 2
00ca43 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00ca44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x38B:
00ca45 89ae      	LDD  R26,Y+22
00ca46 89bf      	LDD  R27,Y+22+1
00ca47 9614      	ADIW R26,4
00ca48 91ec      	LD   R30,X
00ca49 68e0      	ORI  R30,0x80
00ca4a 93ec      	ST   X,R30
00ca4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x38C:
00ca4c 81e1      	LDD  R30,Z+1
00ca4d 93ea      	ST   -Y,R30
00ca4e 89ef      	LDD  R30,Y+23
00ca4f 8df8      	LDD  R31,Y+23+1
00ca50 96b0      	ADIW R30,32
00ca51 93fa      	ST   -Y,R31
00ca52 93ea      	ST   -Y,R30
00ca53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38D:
00ca54 89ee      	LDD  R30,Y+22
00ca55 89ff      	LDD  R31,Y+22+1
00ca56 81e5      	LDD  R30,Z+5
00ca57 e0f0      	LDI  R31,0
00ca58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38E:
00ca59 89ee      	LDD  R30,Y+22
00ca5a 89ff      	LDD  R31,Y+22+1
                +
00ca5b 89a6     +LDD R26 , Z + 22
00ca5c 89b7     +LDD R27 , Z + 22 + 1
00ca5d 8d80     +LDD R24 , Z + 22 + 2
00ca5e 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00ca5f 940c b443 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x38F:
00ca61 89ee      	LDD  R30,Y+22
00ca62 89ff      	LDD  R31,Y+22+1
00ca63 96b0      	ADIW R30,32
00ca64 93fa      	ST   -Y,R31
00ca65 93ea      	ST   -Y,R30
00ca66 8de8      	LDD  R30,Y+24
00ca67 8df9      	LDD  R31,Y+24+1
00ca68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x390:
00ca69 89ad      	LDD  R26,Y+21
00ca6a 89be      	LDD  R27,Y+21+1
00ca6b cb34      	RJMP SUBOPT_0x2E5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x391:
00ca6c 89ad      	LDD  R26,Y+21
00ca6d 89be      	LDD  R27,Y+21+1
00ca6e 961a      	ADIW R26,10
00ca6f 940e ce98 	CALL __GETD1P
00ca71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x392:
                +
00ca72 89a9     +LDD R26 , Y + 17
00ca73 89ba     +LDD R27 , Y + 17 + 1
00ca74 898b     +LDD R24 , Y + 17 + 2
00ca75 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00ca76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x393:
                +
00ca77 8be9     +STD Y + 17 , R30
00ca78 8bfa     +STD Y + 17 + 1 , R31
00ca79 8b6b     +STD Y + 17 + 2 , R22
00ca7a 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00ca7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x394:
                +
00ca7c 89ad     +LDD R26 , Y + 21
00ca7d 89be     +LDD R27 , Y + 21 + 1
00ca7e 9616     +ADIW R26 , 6
00ca7f 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00ca81 89ad      	LDD  R26,Y+21
00ca82 89be      	LDD  R27,Y+21+1
00ca83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x395:
00ca84 89ad      	LDD  R26,Y+21
00ca85 89be      	LDD  R27,Y+21+1
00ca86 940e ce94 	CALL __GETW1P
00ca88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x396:
                +
00ca89 89e9     +LDD R30 , Y + 17
00ca8a 89fa     +LDD R31 , Y + 17 + 1
00ca8b 896b     +LDD R22 , Y + 17 + 2
00ca8c 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00ca8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x397:
00ca8e 940e b7b9 	CALL SUBOPT_0xD8
00ca90 01df      	MOVW R26,R30
00ca91 01cb      	MOVW R24,R22
00ca92 940e b4fa 	CALL SUBOPT_0x6B
00ca94 940e ce34 	CALL __DIVD21U
00ca96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x398:
00ca97 940e ce98 	CALL __GETD1P
                +
00ca99 87ed     +STD Y + 13 , R30
00ca9a 87fe     +STD Y + 13 + 1 , R31
00ca9b 876f     +STD Y + 13 + 2 , R22
00ca9c 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00ca9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x399:
                +
00ca9e 85ed     +LDD R30 , Y + 13
00ca9f 85fe     +LDD R31 , Y + 13 + 1
00caa0 856f     +LDD R22 , Y + 13 + 2
00caa1 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00caa2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39A:
00caa3 940e a00d 	CALL _create_chain_G103
                +
00caa5 87ed     +STD Y + 13 , R30
00caa6 87fe     +STD Y + 13 + 1 , R31
00caa7 876f     +STD Y + 13 + 2 , R22
00caa8 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00caa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39B:
                +
00caaa 85ad     +LDD R26 , Y + 13
00caab 85be     +LDD R27 , Y + 13 + 1
00caac 858f     +LDD R24 , Y + 13 + 2
00caad 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00caae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x39C:
00caaf 89ad      	LDD  R26,Y+21
00cab0 89be      	LDD  R27,Y+21+1
00cab1 9614      	ADIW R26,4
00cab2 91ec      	LD   R30,X
00cab3 68e0      	ORI  R30,0x80
00cab4 93ec      	ST   X,R30
00cab5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39D:
00cab6 dfe7      	RCALL SUBOPT_0x399
                +
00cab7 89ad     +LDD R26 , Y + 21
00cab8 89be     +LDD R27 , Y + 21 + 1
00cab9 9652     +ADIW R26 , 18
00caba 940e cea3+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00cabc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39E:
                +
00cabd 85af     +LDD R26 , Y + 15
00cabe 89b8     +LDD R27 , Y + 15 + 1
00cabf 8989     +LDD R24 , Y + 15 + 2
00cac0 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00cac1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39F:
00cac2 89ed      	LDD  R30,Y+21
00cac3 89fe      	LDD  R31,Y+21+1
00cac4 9636      	ADIW R30,6
00cac5 010f      	MOVW R0,R30
00cac6 01df      	MOVW R26,R30
00cac7 940e ce98 	CALL __GETD1P
00cac9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A0:
00caca 89ed      	LDD  R30,Y+21
00cacb 89fe      	LDD  R31,Y+21+1
                +
00cacc 81a6     +LDD R26 , Z + 6
00cacd 81b7     +LDD R27 , Z + 6 + 1
00cace 8580     +LDD R24 , Z + 6 + 2
00cacf 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00cad0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3A1:
00cad1 940e b7a3 	CALL SUBOPT_0xD3
00cad3 940e b707 	CALL SUBOPT_0xBC
00cad5 ce9f      	RJMP SUBOPT_0x36C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A2:
00cad6 940e b6a7 	CALL SUBOPT_0xAA
00cad8 ccc4      	RJMP SUBOPT_0x327
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A3:
00cad9 940e b5c7 	CALL SUBOPT_0x89
00cadb 940e b26d 	CALL SUBOPT_0xB
00cadd 940e cd14 	CALL __CMPF12
00cadf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A4:
00cae0 940e b26d 	CALL SUBOPT_0xB
                +
00cae2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00cae3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00cae4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00cae5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00cae6 ccd4      	RJMP SUBOPT_0x32D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A5:
00cae7 85a8      	LDD  R26,Y+8
00cae8 85b9      	LDD  R27,Y+8+1
00cae9 9611      	ADIW R26,1
00caea 87a8      	STD  Y+8,R26
00caeb 87b9      	STD  Y+8+1,R27
00caec 9711      	SBIW R26,1
00caed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3A6:
00caee 932a      	ST   -Y,R18
00caef 81af      	LDD  R26,Y+7
00caf0 85b8      	LDD  R27,Y+7+1
00caf1 940e b4fa 	CALL SUBOPT_0x6B
00caf3 bf6c      	OUT  EIND,R22
00caf4 9519      	EICALL
00caf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3A7:
                +
00caf6 01fe     +MOVW R30 , R28
00caf7 5ae0     +SUBI R30 , LOW ( - 96 )
00caf8 4fff     +SBCI R31 , HIGH ( - 96 )
00caf9 9001     +LD R0 , Z +
00cafa 81f0     +LD R31 , Z
00cafb 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00cafc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3A8:
00cafd 9734      	SBIW R30,4
                +
00cafe 01de     +MOVW R26 , R28
00caff 5aa0     +SUBI R26 , LOW ( - 96 )
00cb00 4fbf     +SBCI R27 , HIGH ( - 96 )
00cb01 93ed     +ST X + , R30
00cb02 93fc     +ST X , R31
                 	__PUTW1SX 96
00cb03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A9:
00cb04 81af      	LDD  R26,Y+7
00cb05 85b8      	LDD  R27,Y+7+1
00cb06 940e b4fa 	CALL SUBOPT_0x6B
00cb08 bf6c      	OUT  EIND,R22
00cb09 9519      	EICALL
00cb0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3AA:
                +
00cb0b 01de     +MOVW R26 , R28
00cb0c 5aa0     +SUBI R26 , LOW ( - 96 )
00cb0d 4fbf     +SBCI R27 , HIGH ( - 96 )
00cb0e 900d     +LD R0 , X +
00cb0f 91bc     +LD R27 , X
00cb10 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00cb11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3AB:
00cb12 dfe3      	RCALL SUBOPT_0x3A7
00cb13 cfe9      	RJMP SUBOPT_0x3A8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3AC:
00cb14 7f0b      	ANDI R16,LOW(251)
00cb15 8de9      	LDD  R30,Y+25
00cb16 93ea      	ST   -Y,R30
                +
00cb17 01de     +MOVW R26 , R28
00cb18 5aa5     +SUBI R26 , LOW ( - 91 )
00cb19 4fbf     +SBCI R27 , HIGH ( - 91 )
00cb1a 900d     +LD R0 , X +
00cb1b 91bc     +LD R27 , X
00cb1c 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00cb1d 01fe     +MOVW R30 , R28
00cb1e 5ae3     +SUBI R30 , LOW ( - 93 )
00cb1f 4fff     +SBCI R31 , HIGH ( - 93 )
00cb20 9001     +LD R0 , Z +
00cb21 9011     +LD R1 , Z +
00cb22 9161     +LD R22 , Z +
00cb23 8170     +LD R23 , Z
00cb24 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00cb25 bf6c      	OUT  EIND,R22
00cb26 9519      	EICALL
00cb27 3050      	CPI  R21,0
00cb28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AD:
                +
00cb29 e0e3     +LDI R30 , LOW ( _put_buff_G104 )
00cb2a eafe     +LDI R31 , HIGH ( _put_buff_G104 )
00cb2b e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00cb2c e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00cb2d 940e cec8 	CALL __PUTPARD1
00cb2f 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00cb30 9858      	cbi  __i2c_port,__scl_bit
00cb31 9859      	cbi  __i2c_port,__sda_bit
00cb32 9a50      	sbi  __i2c_dir,__scl_bit
00cb33 9851      	cbi  __i2c_dir,__sda_bit
00cb34 c015      	rjmp __i2c_delay2
                 _i2c_start:
00cb35 9851      	cbi  __i2c_dir,__sda_bit
00cb36 9850      	cbi  __i2c_dir,__scl_bit
00cb37 27ee      	clr  r30
00cb38 0000      	nop
00cb39 9b49      	sbis __i2c_pin,__sda_bit
00cb3a 9508      	ret
00cb3b 9b48      	sbis __i2c_pin,__scl_bit
00cb3c 9508      	ret
00cb3d d004      	rcall __i2c_delay1
00cb3e 9a51      	sbi  __i2c_dir,__sda_bit
00cb3f d002      	rcall __i2c_delay1
00cb40 9a50      	sbi  __i2c_dir,__scl_bit
00cb41 e0e1      	ldi  r30,1
                 __i2c_delay1:
00cb42 e06d      	ldi  r22,13
00cb43 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00cb44 9a51      	sbi  __i2c_dir,__sda_bit
00cb45 9a50      	sbi  __i2c_dir,__scl_bit
00cb46 d003      	rcall __i2c_delay2
00cb47 9850      	cbi  __i2c_dir,__scl_bit
00cb48 dff9      	rcall __i2c_delay1
00cb49 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00cb4a e16b      	ldi  r22,27
                 __i2c_delay2l:
00cb4b 956a      	dec  r22
00cb4c f7f1      	brne __i2c_delay2l
00cb4d 9508      	ret
                 _i2c_read:
00cb4e e078      	ldi  r23,8
                 __i2c_read0:
00cb4f 9850      	cbi  __i2c_dir,__scl_bit
00cb50 dff1      	rcall __i2c_delay1
                 __i2c_read3:
00cb51 9b48      	sbis __i2c_pin,__scl_bit
00cb52 cffe      	rjmp __i2c_read3
00cb53 dfee      	rcall __i2c_delay1
00cb54 9488      	clc
00cb55 9949      	sbic __i2c_pin,__sda_bit
00cb56 9408      	sec
00cb57 9a50      	sbi  __i2c_dir,__scl_bit
00cb58 dff1      	rcall __i2c_delay2
00cb59 1fee      	rol  r30
00cb5a 957a      	dec  r23
00cb5b f799      	brne __i2c_read0
00cb5c 2f7a      	mov  r23,r26
00cb5d 2377      	tst  r23
00cb5e f411      	brne __i2c_read1
00cb5f 9851      	cbi  __i2c_dir,__sda_bit
00cb60 c001      	rjmp __i2c_read2
                 __i2c_read1:
00cb61 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00cb62 dfdf      	rcall __i2c_delay1
00cb63 9850      	cbi  __i2c_dir,__scl_bit
00cb64 dfe5      	rcall __i2c_delay2
00cb65 9a50      	sbi  __i2c_dir,__scl_bit
00cb66 dfdb      	rcall __i2c_delay1
00cb67 9851      	cbi  __i2c_dir,__sda_bit
00cb68 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00cb69 e078      	ldi  r23,8
                 __i2c_write0:
00cb6a 0faa      	lsl  r26
00cb6b f410      	brcc __i2c_write1
00cb6c 9851      	cbi  __i2c_dir,__sda_bit
00cb6d c001      	rjmp __i2c_write2
                 __i2c_write1:
00cb6e 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00cb6f dfda      	rcall __i2c_delay2
00cb70 9850      	cbi  __i2c_dir,__scl_bit
00cb71 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00cb72 9b48      	sbis __i2c_pin,__scl_bit
00cb73 cffe      	rjmp __i2c_write3
00cb74 dfcd      	rcall __i2c_delay1
00cb75 9a50      	sbi  __i2c_dir,__scl_bit
00cb76 957a      	dec  r23
00cb77 f791      	brne __i2c_write0
00cb78 9851      	cbi  __i2c_dir,__sda_bit
00cb79 dfc8      	rcall __i2c_delay1
00cb7a 9850      	cbi  __i2c_dir,__scl_bit
00cb7b dfce      	rcall __i2c_delay2
00cb7c e0e1      	ldi  r30,1
00cb7d 9949      	sbic __i2c_pin,__sda_bit
00cb7e 27ee      	clr  r30
00cb7f 9a50      	sbi  __i2c_dir,__scl_bit
00cb80 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00cb81 9610      	adiw r26,0
00cb82 f039      	breq __delay_ms1
                 __delay_ms0:
                +
00cb83 ed80     +LDI R24 , LOW ( 0x7D0 )
00cb84 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00cb85 9701     +SBIW R24 , 1
00cb86 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00cb87 95a8      	wdr
00cb88 9711      	sbiw r26,1
00cb89 f7c9      	brne __delay_ms0
                 __delay_ms1:
00cb8a 9508      	ret
                 
                 __ANEGF1:
00cb8b 9730      	SBIW R30,0
00cb8c 4060      	SBCI R22,0
00cb8d 4070      	SBCI R23,0
00cb8e f009      	BREQ __ANEGF10
00cb8f 5870      	SUBI R23,0x80
                 __ANEGF10:
00cb90 9508      	RET
                 
                 __ROUND_REPACK:
00cb91 2355      	TST  R21
00cb92 f442      	BRPL __REPACK
00cb93 3850      	CPI  R21,0x80
00cb94 f411      	BRNE __ROUND_REPACK0
00cb95 ffe0      	SBRS R30,0
00cb96 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00cb97 9631      	ADIW R30,1
00cb98 1f69      	ADC  R22,R25
00cb99 1f79      	ADC  R23,R25
00cb9a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00cb9b e850      	LDI  R21,0x80
00cb9c 2757      	EOR  R21,R23
00cb9d f411      	BRNE __REPACK0
00cb9e 935f      	PUSH R21
00cb9f c0cf      	RJMP __ZERORES
                 __REPACK0:
00cba0 3f5f      	CPI  R21,0xFF
00cba1 f031      	BREQ __REPACK1
00cba2 0f66      	LSL  R22
00cba3 0c00      	LSL  R0
00cba4 9557      	ROR  R21
00cba5 9567      	ROR  R22
00cba6 2f75      	MOV  R23,R21
00cba7 9508      	RET
                 __REPACK1:
00cba8 935f      	PUSH R21
00cba9 2000      	TST  R0
00cbaa f00a      	BRMI __REPACK2
00cbab c0cf      	RJMP __MAXRES
                 __REPACK2:
00cbac c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00cbad e850      	LDI  R21,0x80
00cbae 2e19      	MOV  R1,R25
00cbaf 2215      	AND  R1,R21
00cbb0 0f88      	LSL  R24
00cbb1 1f99      	ROL  R25
00cbb2 2795      	EOR  R25,R21
00cbb3 0f55      	LSL  R21
00cbb4 9587      	ROR  R24
                 
                 __UNPACK1:
00cbb5 e850      	LDI  R21,0x80
00cbb6 2e07      	MOV  R0,R23
00cbb7 2205      	AND  R0,R21
00cbb8 0f66      	LSL  R22
00cbb9 1f77      	ROL  R23
00cbba 2775      	EOR  R23,R21
00cbbb 0f55      	LSL  R21
00cbbc 9567      	ROR  R22
00cbbd 9508      	RET
                 
                 __CFD1U:
00cbbe 9468      	SET
00cbbf c001      	RJMP __CFD1U0
                 __CFD1:
00cbc0 94e8      	CLT
                 __CFD1U0:
00cbc1 935f      	PUSH R21
00cbc2 dff2      	RCALL __UNPACK1
00cbc3 3870      	CPI  R23,0x80
00cbc4 f018      	BRLO __CFD10
00cbc5 3f7f      	CPI  R23,0xFF
00cbc6 f408      	BRCC __CFD10
00cbc7 c0a7      	RJMP __ZERORES
                 __CFD10:
00cbc8 e156      	LDI  R21,22
00cbc9 1b57      	SUB  R21,R23
00cbca f4aa      	BRPL __CFD11
00cbcb 9551      	NEG  R21
00cbcc 3058      	CPI  R21,8
00cbcd f40e      	BRTC __CFD19
00cbce 3059      	CPI  R21,9
                 __CFD19:
00cbcf f030      	BRLO __CFD17
00cbd0 efef      	SER  R30
00cbd1 efff      	SER  R31
00cbd2 ef6f      	SER  R22
00cbd3 e77f      	LDI  R23,0x7F
00cbd4 f977      	BLD  R23,7
00cbd5 c01a      	RJMP __CFD15
                 __CFD17:
00cbd6 2777      	CLR  R23
00cbd7 2355      	TST  R21
00cbd8 f0b9      	BREQ __CFD15
                 __CFD18:
00cbd9 0fee      	LSL  R30
00cbda 1fff      	ROL  R31
00cbdb 1f66      	ROL  R22
00cbdc 1f77      	ROL  R23
00cbdd 955a      	DEC  R21
00cbde f7d1      	BRNE __CFD18
00cbdf c010      	RJMP __CFD15
                 __CFD11:
00cbe0 2777      	CLR  R23
                 __CFD12:
00cbe1 3058      	CPI  R21,8
00cbe2 f028      	BRLO __CFD13
00cbe3 2fef      	MOV  R30,R31
00cbe4 2ff6      	MOV  R31,R22
00cbe5 2f67      	MOV  R22,R23
00cbe6 5058      	SUBI R21,8
00cbe7 cff9      	RJMP __CFD12
                 __CFD13:
00cbe8 2355      	TST  R21
00cbe9 f031      	BREQ __CFD15
                 __CFD14:
00cbea 9576      	LSR  R23
00cbeb 9567      	ROR  R22
00cbec 95f7      	ROR  R31
00cbed 95e7      	ROR  R30
00cbee 955a      	DEC  R21
00cbef f7d1      	BRNE __CFD14
                 __CFD15:
00cbf0 2000      	TST  R0
00cbf1 f40a      	BRPL __CFD16
00cbf2 d167      	RCALL __ANEGD1
                 __CFD16:
00cbf3 915f      	POP  R21
00cbf4 9508      	RET
                 
                 __CDF1U:
00cbf5 9468      	SET
00cbf6 c001      	RJMP __CDF1U0
                 __CDF1:
00cbf7 94e8      	CLT
                 __CDF1U0:
00cbf8 9730      	SBIW R30,0
00cbf9 4060      	SBCI R22,0
00cbfa 4070      	SBCI R23,0
00cbfb f0b1      	BREQ __CDF10
00cbfc 2400      	CLR  R0
00cbfd f026      	BRTS __CDF11
00cbfe 2377      	TST  R23
00cbff f412      	BRPL __CDF11
00cc00 9400      	COM  R0
00cc01 d158      	RCALL __ANEGD1
                 __CDF11:
00cc02 2e17      	MOV  R1,R23
00cc03 e17e      	LDI  R23,30
00cc04 2011      	TST  R1
                 __CDF12:
00cc05 f032      	BRMI __CDF13
00cc06 957a      	DEC  R23
00cc07 0fee      	LSL  R30
00cc08 1fff      	ROL  R31
00cc09 1f66      	ROL  R22
00cc0a 1c11      	ROL  R1
00cc0b cff9      	RJMP __CDF12
                 __CDF13:
00cc0c 2fef      	MOV  R30,R31
00cc0d 2ff6      	MOV  R31,R22
00cc0e 2d61      	MOV  R22,R1
00cc0f 935f      	PUSH R21
00cc10 df8a      	RCALL __REPACK
00cc11 915f      	POP  R21
                 __CDF10:
00cc12 9508      	RET
                 
                 __SWAPACC:
00cc13 934f      	PUSH R20
00cc14 01af      	MOVW R20,R30
00cc15 01fd      	MOVW R30,R26
00cc16 01da      	MOVW R26,R20
00cc17 01ab      	MOVW R20,R22
00cc18 01bc      	MOVW R22,R24
00cc19 01ca      	MOVW R24,R20
00cc1a 2d40      	MOV  R20,R0
00cc1b 2c01      	MOV  R0,R1
00cc1c 2e14      	MOV  R1,R20
00cc1d 914f      	POP  R20
00cc1e 9508      	RET
                 
                 __UADD12:
00cc1f 0fea      	ADD  R30,R26
00cc20 1ffb      	ADC  R31,R27
00cc21 1f68      	ADC  R22,R24
00cc22 9508      	RET
                 
                 __NEGMAN1:
00cc23 95e0      	COM  R30
00cc24 95f0      	COM  R31
00cc25 9560      	COM  R22
00cc26 5fef      	SUBI R30,-1
00cc27 4fff      	SBCI R31,-1
00cc28 4f6f      	SBCI R22,-1
00cc29 9508      	RET
                 
                 __SUBF12:
00cc2a 935f      	PUSH R21
00cc2b df81      	RCALL __UNPACK
00cc2c 3890      	CPI  R25,0x80
00cc2d f171      	BREQ __ADDF129
00cc2e e850      	LDI  R21,0x80
00cc2f 2615      	EOR  R1,R21
                 
00cc30 c004      	RJMP __ADDF120
                 
                 __ADDF12:
00cc31 935f      	PUSH R21
00cc32 df7a      	RCALL __UNPACK
00cc33 3890      	CPI  R25,0x80
00cc34 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00cc35 3870      	CPI  R23,0x80
00cc36 f121      	BREQ __ADDF128
                 __ADDF121:
00cc37 2f57      	MOV  R21,R23
00cc38 1b59      	SUB  R21,R25
00cc39 f12b      	BRVS __ADDF1211
00cc3a f412      	BRPL __ADDF122
00cc3b dfd7      	RCALL __SWAPACC
00cc3c cffa      	RJMP __ADDF121
                 __ADDF122:
00cc3d 3158      	CPI  R21,24
00cc3e f018      	BRLO __ADDF123
00cc3f 27aa      	CLR  R26
00cc40 27bb      	CLR  R27
00cc41 2788      	CLR  R24
                 __ADDF123:
00cc42 3058      	CPI  R21,8
00cc43 f028      	BRLO __ADDF124
00cc44 2fab      	MOV  R26,R27
00cc45 2fb8      	MOV  R27,R24
00cc46 2788      	CLR  R24
00cc47 5058      	SUBI R21,8
00cc48 cff9      	RJMP __ADDF123
                 __ADDF124:
00cc49 2355      	TST  R21
00cc4a f029      	BREQ __ADDF126
                 __ADDF125:
00cc4b 9586      	LSR  R24
00cc4c 95b7      	ROR  R27
00cc4d 95a7      	ROR  R26
00cc4e 955a      	DEC  R21
00cc4f f7d9      	BRNE __ADDF125
                 __ADDF126:
00cc50 2d50      	MOV  R21,R0
00cc51 2551      	EOR  R21,R1
00cc52 f072      	BRMI __ADDF127
00cc53 dfcb      	RCALL __UADD12
00cc54 f438      	BRCC __ADDF129
00cc55 9567      	ROR  R22
00cc56 95f7      	ROR  R31
00cc57 95e7      	ROR  R30
00cc58 9573      	INC  R23
00cc59 f413      	BRVC __ADDF129
00cc5a c020      	RJMP __MAXRES
                 __ADDF128:
00cc5b dfb7      	RCALL __SWAPACC
                 __ADDF129:
00cc5c df3e      	RCALL __REPACK
00cc5d 915f      	POP  R21
00cc5e 9508      	RET
                 __ADDF1211:
00cc5f f7d8      	BRCC __ADDF128
00cc60 cffb      	RJMP __ADDF129
                 __ADDF127:
00cc61 1bea      	SUB  R30,R26
00cc62 0bfb      	SBC  R31,R27
00cc63 0b68      	SBC  R22,R24
00cc64 f051      	BREQ __ZERORES
00cc65 f410      	BRCC __ADDF1210
00cc66 9400      	COM  R0
00cc67 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00cc68 2366      	TST  R22
00cc69 f392      	BRMI __ADDF129
00cc6a 0fee      	LSL  R30
00cc6b 1fff      	ROL  R31
00cc6c 1f66      	ROL  R22
00cc6d 957a      	DEC  R23
00cc6e f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00cc6f 27ee      	CLR  R30
00cc70 27ff      	CLR  R31
00cc71 2766      	CLR  R22
00cc72 2777      	CLR  R23
00cc73 915f      	POP  R21
00cc74 9508      	RET
                 
                 __MINRES:
00cc75 efef      	SER  R30
00cc76 efff      	SER  R31
00cc77 e76f      	LDI  R22,0x7F
00cc78 ef7f      	SER  R23
00cc79 915f      	POP  R21
00cc7a 9508      	RET
                 
                 __MAXRES:
00cc7b efef      	SER  R30
00cc7c efff      	SER  R31
00cc7d e76f      	LDI  R22,0x7F
00cc7e e77f      	LDI  R23,0x7F
00cc7f 915f      	POP  R21
00cc80 9508      	RET
                 
                 __MULF12:
00cc81 935f      	PUSH R21
00cc82 df2a      	RCALL __UNPACK
00cc83 3870      	CPI  R23,0x80
00cc84 f351      	BREQ __ZERORES
00cc85 3890      	CPI  R25,0x80
00cc86 f341      	BREQ __ZERORES
00cc87 2401      	EOR  R0,R1
00cc88 9408      	SEC
00cc89 1f79      	ADC  R23,R25
00cc8a f423      	BRVC __MULF124
00cc8b f31c      	BRLT __ZERORES
                 __MULF125:
00cc8c 2000      	TST  R0
00cc8d f33a      	BRMI __MINRES
00cc8e cfec      	RJMP __MAXRES
                 __MULF124:
00cc8f 920f      	PUSH R0
00cc90 931f      	PUSH R17
00cc91 932f      	PUSH R18
00cc92 933f      	PUSH R19
00cc93 934f      	PUSH R20
00cc94 2711      	CLR  R17
00cc95 2722      	CLR  R18
00cc96 2799      	CLR  R25
00cc97 9f68      	MUL  R22,R24
00cc98 01a0      	MOVW R20,R0
00cc99 9f8f      	MUL  R24,R31
00cc9a 2d30      	MOV  R19,R0
00cc9b 0d41      	ADD  R20,R1
00cc9c 1f59      	ADC  R21,R25
00cc9d 9f6b      	MUL  R22,R27
00cc9e 0d30      	ADD  R19,R0
00cc9f 1d41      	ADC  R20,R1
00cca0 1f59      	ADC  R21,R25
00cca1 9f8e      	MUL  R24,R30
00cca2 d027      	RCALL __MULF126
00cca3 9fbf      	MUL  R27,R31
00cca4 d025      	RCALL __MULF126
00cca5 9f6a      	MUL  R22,R26
00cca6 d023      	RCALL __MULF126
00cca7 9fbe      	MUL  R27,R30
00cca8 d01d      	RCALL __MULF127
00cca9 9faf      	MUL  R26,R31
00ccaa d01b      	RCALL __MULF127
00ccab 9fae      	MUL  R26,R30
00ccac 0d11      	ADD  R17,R1
00ccad 1f29      	ADC  R18,R25
00ccae 1f39      	ADC  R19,R25
00ccaf 1f49      	ADC  R20,R25
00ccb0 1f59      	ADC  R21,R25
00ccb1 2fe3      	MOV  R30,R19
00ccb2 2ff4      	MOV  R31,R20
00ccb3 2f65      	MOV  R22,R21
00ccb4 2f52      	MOV  R21,R18
00ccb5 914f      	POP  R20
00ccb6 913f      	POP  R19
00ccb7 912f      	POP  R18
00ccb8 911f      	POP  R17
00ccb9 900f      	POP  R0
00ccba 2366      	TST  R22
00ccbb f02a      	BRMI __MULF122
00ccbc 0f55      	LSL  R21
00ccbd 1fee      	ROL  R30
00ccbe 1fff      	ROL  R31
00ccbf 1f66      	ROL  R22
00ccc0 c002      	RJMP __MULF123
                 __MULF122:
00ccc1 9573      	INC  R23
00ccc2 f24b      	BRVS __MULF125
                 __MULF123:
00ccc3 decd      	RCALL __ROUND_REPACK
00ccc4 915f      	POP  R21
00ccc5 9508      	RET
                 
                 __MULF127:
00ccc6 0d10      	ADD  R17,R0
00ccc7 1d21      	ADC  R18,R1
00ccc8 1f39      	ADC  R19,R25
00ccc9 c002      	RJMP __MULF128
                 __MULF126:
00ccca 0d20      	ADD  R18,R0
00cccb 1d31      	ADC  R19,R1
                 __MULF128:
00cccc 1f49      	ADC  R20,R25
00cccd 1f59      	ADC  R21,R25
00ccce 9508      	RET
                 
                 __DIVF21:
00cccf 935f      	PUSH R21
00ccd0 dedc      	RCALL __UNPACK
00ccd1 3870      	CPI  R23,0x80
00ccd2 f421      	BRNE __DIVF210
00ccd3 2011      	TST  R1
                 __DIVF211:
00ccd4 f40a      	BRPL __DIVF219
00ccd5 cf9f      	RJMP __MINRES
                 __DIVF219:
00ccd6 cfa4      	RJMP __MAXRES
                 __DIVF210:
00ccd7 3890      	CPI  R25,0x80
00ccd8 f409      	BRNE __DIVF218
                 __DIVF217:
00ccd9 cf95      	RJMP __ZERORES
                 __DIVF218:
00ccda 2401      	EOR  R0,R1
00ccdb 9408      	SEC
00ccdc 0b97      	SBC  R25,R23
00ccdd f41b      	BRVC __DIVF216
00ccde f3d4      	BRLT __DIVF217
00ccdf 2000      	TST  R0
00cce0 cff3      	RJMP __DIVF211
                 __DIVF216:
00cce1 2f79      	MOV  R23,R25
00cce2 931f      	PUSH R17
00cce3 932f      	PUSH R18
00cce4 933f      	PUSH R19
00cce5 934f      	PUSH R20
00cce6 2411      	CLR  R1
00cce7 2711      	CLR  R17
00cce8 2722      	CLR  R18
00cce9 2733      	CLR  R19
00ccea 2744      	CLR  R20
00cceb 2755      	CLR  R21
00ccec e290      	LDI  R25,32
                 __DIVF212:
00cced 17ae      	CP   R26,R30
00ccee 07bf      	CPC  R27,R31
00ccef 0786      	CPC  R24,R22
00ccf0 0741      	CPC  R20,R17
00ccf1 f030      	BRLO __DIVF213
00ccf2 1bae      	SUB  R26,R30
00ccf3 0bbf      	SBC  R27,R31
00ccf4 0b86      	SBC  R24,R22
00ccf5 0b41      	SBC  R20,R17
00ccf6 9408      	SEC
00ccf7 c001      	RJMP __DIVF214
                 __DIVF213:
00ccf8 9488      	CLC
                 __DIVF214:
00ccf9 1f55      	ROL  R21
00ccfa 1f22      	ROL  R18
00ccfb 1f33      	ROL  R19
00ccfc 1c11      	ROL  R1
00ccfd 1faa      	ROL  R26
00ccfe 1fbb      	ROL  R27
00ccff 1f88      	ROL  R24
00cd00 1f44      	ROL  R20
00cd01 959a      	DEC  R25
00cd02 f751      	BRNE __DIVF212
00cd03 01f9      	MOVW R30,R18
00cd04 2d61      	MOV  R22,R1
00cd05 914f      	POP  R20
00cd06 913f      	POP  R19
00cd07 912f      	POP  R18
00cd08 911f      	POP  R17
00cd09 2366      	TST  R22
00cd0a f032      	BRMI __DIVF215
00cd0b 0f55      	LSL  R21
00cd0c 1fee      	ROL  R30
00cd0d 1fff      	ROL  R31
00cd0e 1f66      	ROL  R22
00cd0f 957a      	DEC  R23
00cd10 f243      	BRVS __DIVF217
                 __DIVF215:
00cd11 de7f      	RCALL __ROUND_REPACK
00cd12 915f      	POP  R21
00cd13 9508      	RET
                 
                 __CMPF12:
00cd14 2399      	TST  R25
00cd15 f09a      	BRMI __CMPF120
00cd16 2377      	TST  R23
00cd17 f042      	BRMI __CMPF121
00cd18 1797      	CP   R25,R23
00cd19 f048      	BRLO __CMPF122
00cd1a f429      	BRNE __CMPF121
00cd1b 17ae      	CP   R26,R30
00cd1c 07bf      	CPC  R27,R31
00cd1d 0786      	CPC  R24,R22
00cd1e f020      	BRLO __CMPF122
00cd1f f031      	BREQ __CMPF123
                 __CMPF121:
00cd20 9498      	CLZ
00cd21 9488      	CLC
00cd22 9508      	RET
                 __CMPF122:
00cd23 9498      	CLZ
00cd24 9408      	SEC
00cd25 9508      	RET
                 __CMPF123:
00cd26 9418      	SEZ
00cd27 9488      	CLC
00cd28 9508      	RET
                 __CMPF120:
00cd29 2377      	TST  R23
00cd2a f7c2      	BRPL __CMPF122
00cd2b 1797      	CP   R25,R23
00cd2c f398      	BRLO __CMPF121
00cd2d f7a9      	BRNE __CMPF122
00cd2e 17ea      	CP   R30,R26
00cd2f 07fb      	CPC  R31,R27
00cd30 0768      	CPC  R22,R24
00cd31 f388      	BRLO __CMPF122
00cd32 f399      	BREQ __CMPF123
00cd33 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00cd34 2400      	CLR  R0
00cd35 0daf      	ADD  R26,R15
00cd36 1db0      	ADC  R27,R0
00cd37 9508      	RET
                 
                 __ADDD12:
00cd38 0fea      	ADD  R30,R26
00cd39 1ffb      	ADC  R31,R27
00cd3a 1f68      	ADC  R22,R24
00cd3b 1f79      	ADC  R23,R25
00cd3c 9508      	RET
                 
                 __ADDD21:
00cd3d 0fae      	ADD  R26,R30
00cd3e 1fbf      	ADC  R27,R31
00cd3f 1f86      	ADC  R24,R22
00cd40 1f97      	ADC  R25,R23
00cd41 9508      	RET
                 
                 __SUBD12:
00cd42 1bea      	SUB  R30,R26
00cd43 0bfb      	SBC  R31,R27
00cd44 0b68      	SBC  R22,R24
00cd45 0b79      	SBC  R23,R25
00cd46 9508      	RET
                 
                 __SUBD21:
00cd47 1bae      	SUB  R26,R30
00cd48 0bbf      	SBC  R27,R31
00cd49 0b86      	SBC  R24,R22
00cd4a 0b97      	SBC  R25,R23
00cd4b 9508      	RET
                 
                 __ANDD12:
00cd4c 23ea      	AND  R30,R26
00cd4d 23fb      	AND  R31,R27
00cd4e 2368      	AND  R22,R24
00cd4f 2379      	AND  R23,R25
00cd50 9508      	RET
                 
                 __ORD12:
00cd51 2bea      	OR   R30,R26
00cd52 2bfb      	OR   R31,R27
00cd53 2b68      	OR   R22,R24
00cd54 2b79      	OR   R23,R25
00cd55 9508      	RET
                 
                 __ANEGW1:
00cd56 95f1      	NEG  R31
00cd57 95e1      	NEG  R30
00cd58 40f0      	SBCI R31,0
00cd59 9508      	RET
                 
                 __ANEGD1:
00cd5a 95f0      	COM  R31
00cd5b 9560      	COM  R22
00cd5c 9570      	COM  R23
00cd5d 95e1      	NEG  R30
00cd5e 4fff      	SBCI R31,-1
00cd5f 4f6f      	SBCI R22,-1
00cd60 4f7f      	SBCI R23,-1
00cd61 9508      	RET
                 
                 __LSLW12:
00cd62 23ee      	TST  R30
00cd63 2e0e      	MOV  R0,R30
00cd64 01fd      	MOVW R30,R26
00cd65 f021      	BREQ __LSLW12R
                 __LSLW12L:
00cd66 0fee      	LSL  R30
00cd67 1fff      	ROL  R31
00cd68 940a      	DEC  R0
00cd69 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00cd6a 9508      	RET
                 
                 __LSLD12:
00cd6b 23ee      	TST  R30
00cd6c 2e0e      	MOV  R0,R30
00cd6d 01fd      	MOVW R30,R26
00cd6e 01bc      	MOVW R22,R24
00cd6f f031      	BREQ __LSLD12R
                 __LSLD12L:
00cd70 0fee      	LSL  R30
00cd71 1fff      	ROL  R31
00cd72 1f66      	ROL  R22
00cd73 1f77      	ROL  R23
00cd74 940a      	DEC  R0
00cd75 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00cd76 9508      	RET
                 
                 __LSRD12:
00cd77 23ee      	TST  R30
00cd78 2e0e      	MOV  R0,R30
00cd79 01fd      	MOVW R30,R26
00cd7a 01bc      	MOVW R22,R24
00cd7b f031      	BREQ __LSRD12R
                 __LSRD12L:
00cd7c 9576      	LSR  R23
00cd7d 9567      	ROR  R22
00cd7e 95f7      	ROR  R31
00cd7f 95e7      	ROR  R30
00cd80 940a      	DEC  R0
00cd81 f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00cd82 9508      	RET
                 
                 __LSLW4:
00cd83 0fee      	LSL  R30
00cd84 1fff      	ROL  R31
                 __LSLW3:
00cd85 0fee      	LSL  R30
00cd86 1fff      	ROL  R31
                 __LSLW2:
00cd87 0fee      	LSL  R30
00cd88 1fff      	ROL  R31
00cd89 0fee      	LSL  R30
00cd8a 1fff      	ROL  R31
00cd8b 9508      	RET
                 
                 __ASRW4:
00cd8c 95f5      	ASR  R31
00cd8d 95e7      	ROR  R30
                 __ASRW3:
00cd8e 95f5      	ASR  R31
00cd8f 95e7      	ROR  R30
                 __ASRW2:
00cd90 95f5      	ASR  R31
00cd91 95e7      	ROR  R30
00cd92 95f5      	ASR  R31
00cd93 95e7      	ROR  R30
00cd94 9508      	RET
                 
                 __LSRW4:
00cd95 95f6      	LSR  R31
00cd96 95e7      	ROR  R30
                 __LSRW3:
00cd97 95f6      	LSR  R31
00cd98 95e7      	ROR  R30
                 __LSRW2:
00cd99 95f6      	LSR  R31
00cd9a 95e7      	ROR  R30
00cd9b 95f6      	LSR  R31
00cd9c 95e7      	ROR  R30
00cd9d 9508      	RET
                 
                 __LSRD1:
00cd9e 9576      	LSR  R23
00cd9f 9567      	ROR  R22
00cda0 95f7      	ROR  R31
00cda1 95e7      	ROR  R30
00cda2 9508      	RET
                 
                 __LSLD1:
00cda3 0fee      	LSL  R30
00cda4 1fff      	ROL  R31
00cda5 1f66      	ROL  R22
00cda6 1f77      	ROL  R23
00cda7 9508      	RET
                 
                 __ASRW8:
00cda8 2fef      	MOV  R30,R31
00cda9 27ff      	CLR  R31
00cdaa fde7      	SBRC R30,7
00cdab efff      	SER  R31
00cdac 9508      	RET
                 
                 __LSRD16:
00cdad 2fe6      	MOV  R30,R22
00cdae 2ff7      	MOV  R31,R23
00cdaf e060      	LDI  R22,0
00cdb0 e070      	LDI  R23,0
00cdb1 9508      	RET
                 
                 __LSLD16:
00cdb2 2f6e      	MOV  R22,R30
00cdb3 2f7f      	MOV  R23,R31
00cdb4 e0e0      	LDI  R30,0
00cdb5 e0f0      	LDI  R31,0
00cdb6 9508      	RET
                 
                 __CBD1:
00cdb7 2ffe      	MOV  R31,R30
00cdb8 0fff      	ADD  R31,R31
00cdb9 0bff      	SBC  R31,R31
00cdba 2f6f      	MOV  R22,R31
00cdbb 2f7f      	MOV  R23,R31
00cdbc 9508      	RET
                 
                 __CWD1:
00cdbd 2f6f      	MOV  R22,R31
00cdbe 0f66      	ADD  R22,R22
00cdbf 0b66      	SBC  R22,R22
00cdc0 2f76      	MOV  R23,R22
00cdc1 9508      	RET
                 
                 __COMD1:
00cdc2 95e0      	COM  R30
00cdc3 95f0      	COM  R31
00cdc4 9560      	COM  R22
00cdc5 9570      	COM  R23
00cdc6 9508      	RET
                 
                 __EQB12:
00cdc7 17ea      	CP   R30,R26
00cdc8 e0e1      	LDI  R30,1
00cdc9 f009      	BREQ __EQB12T
00cdca 27ee      	CLR  R30
                 __EQB12T:
00cdcb 9508      	RET
                 
                 __LNEGB1:
00cdcc 23ee      	TST  R30
00cdcd e0e1      	LDI  R30,1
00cdce f009      	BREQ __LNEGB1F
00cdcf 27ee      	CLR  R30
                 __LNEGB1F:
00cdd0 9508      	RET
                 
                 __LNEGW1:
00cdd1 2bef      	OR   R30,R31
00cdd2 e0e1      	LDI  R30,1
00cdd3 f009      	BREQ __LNEGW1F
00cdd4 e0e0      	LDI  R30,0
                 __LNEGW1F:
00cdd5 9508      	RET
                 
                 __MULW12U:
00cdd6 9ffa      	MUL  R31,R26
00cdd7 2df0      	MOV  R31,R0
00cdd8 9feb      	MUL  R30,R27
00cdd9 0df0      	ADD  R31,R0
00cdda 9fea      	MUL  R30,R26
00cddb 2de0      	MOV  R30,R0
00cddc 0df1      	ADD  R31,R1
00cddd 9508      	RET
                 
                 __MULD12U:
00cdde 9f7a      	MUL  R23,R26
00cddf 2d70      	MOV  R23,R0
00cde0 9f6b      	MUL  R22,R27
00cde1 0d70      	ADD  R23,R0
00cde2 9ff8      	MUL  R31,R24
00cde3 0d70      	ADD  R23,R0
00cde4 9fe9      	MUL  R30,R25
00cde5 0d70      	ADD  R23,R0
00cde6 9f6a      	MUL  R22,R26
00cde7 2d60      	MOV  R22,R0
00cde8 0d71      	ADD  R23,R1
00cde9 9ffb      	MUL  R31,R27
00cdea 0d60      	ADD  R22,R0
00cdeb 1d71      	ADC  R23,R1
00cdec 9fe8      	MUL  R30,R24
00cded 0d60      	ADD  R22,R0
00cdee 1d71      	ADC  R23,R1
00cdef 2788      	CLR  R24
00cdf0 9ffa      	MUL  R31,R26
00cdf1 2df0      	MOV  R31,R0
00cdf2 0d61      	ADD  R22,R1
00cdf3 1f78      	ADC  R23,R24
00cdf4 9feb      	MUL  R30,R27
00cdf5 0df0      	ADD  R31,R0
00cdf6 1d61      	ADC  R22,R1
00cdf7 1f78      	ADC  R23,R24
00cdf8 9fea      	MUL  R30,R26
00cdf9 2de0      	MOV  R30,R0
00cdfa 0df1      	ADD  R31,R1
00cdfb 1f68      	ADC  R22,R24
00cdfc 1f78      	ADC  R23,R24
00cdfd 9508      	RET
                 
                 __MULB1W2U:
00cdfe 2f6e      	MOV  R22,R30
00cdff 9f6a      	MUL  R22,R26
00ce00 01f0      	MOVW R30,R0
00ce01 9f6b      	MUL  R22,R27
00ce02 0df0      	ADD  R31,R0
00ce03 9508      	RET
                 
                 __MULW12:
00ce04 d081      	RCALL __CHKSIGNW
00ce05 dfd0      	RCALL __MULW12U
00ce06 f40e      	BRTC __MULW121
00ce07 df4e      	RCALL __ANEGW1
                 __MULW121:
00ce08 9508      	RET
                 
                 __DIVB21U:
00ce09 2400      	CLR  R0
00ce0a e098      	LDI  R25,8
                 __DIVB21U1:
00ce0b 0faa      	LSL  R26
00ce0c 1c00      	ROL  R0
00ce0d 1a0e      	SUB  R0,R30
00ce0e f410      	BRCC __DIVB21U2
00ce0f 0e0e      	ADD  R0,R30
00ce10 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00ce11 60a1      	SBR  R26,1
                 __DIVB21U3:
00ce12 959a      	DEC  R25
00ce13 f7b9      	BRNE __DIVB21U1
00ce14 2fea      	MOV  R30,R26
00ce15 2da0      	MOV  R26,R0
00ce16 9508      	RET
                 
                 __DIVB21:
00ce17 d062      	RCALL __CHKSIGNB
00ce18 dff0      	RCALL __DIVB21U
00ce19 f40e      	BRTC __DIVB211
00ce1a 95e1      	NEG  R30
                 __DIVB211:
00ce1b 9508      	RET
                 
                 __DIVW21U:
00ce1c 2400      	CLR  R0
00ce1d 2411      	CLR  R1
00ce1e e190      	LDI  R25,16
                 __DIVW21U1:
00ce1f 0faa      	LSL  R26
00ce20 1fbb      	ROL  R27
00ce21 1c00      	ROL  R0
00ce22 1c11      	ROL  R1
00ce23 1a0e      	SUB  R0,R30
00ce24 0a1f      	SBC  R1,R31
00ce25 f418      	BRCC __DIVW21U2
00ce26 0e0e      	ADD  R0,R30
00ce27 1e1f      	ADC  R1,R31
00ce28 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00ce29 60a1      	SBR  R26,1
                 __DIVW21U3:
00ce2a 959a      	DEC  R25
00ce2b f799      	BRNE __DIVW21U1
00ce2c 01fd      	MOVW R30,R26
00ce2d 01d0      	MOVW R26,R0
00ce2e 9508      	RET
                 
                 __DIVW21:
00ce2f d056      	RCALL __CHKSIGNW
00ce30 dfeb      	RCALL __DIVW21U
00ce31 f40e      	BRTC __DIVW211
00ce32 df23      	RCALL __ANEGW1
                 __DIVW211:
00ce33 9508      	RET
                 
                 __DIVD21U:
00ce34 933f      	PUSH R19
00ce35 934f      	PUSH R20
00ce36 935f      	PUSH R21
00ce37 2400      	CLR  R0
00ce38 2411      	CLR  R1
00ce39 2744      	CLR  R20
00ce3a 2755      	CLR  R21
00ce3b e230      	LDI  R19,32
                 __DIVD21U1:
00ce3c 0faa      	LSL  R26
00ce3d 1fbb      	ROL  R27
00ce3e 1f88      	ROL  R24
00ce3f 1f99      	ROL  R25
00ce40 1c00      	ROL  R0
00ce41 1c11      	ROL  R1
00ce42 1f44      	ROL  R20
00ce43 1f55      	ROL  R21
00ce44 1a0e      	SUB  R0,R30
00ce45 0a1f      	SBC  R1,R31
00ce46 0b46      	SBC  R20,R22
00ce47 0b57      	SBC  R21,R23
00ce48 f428      	BRCC __DIVD21U2
00ce49 0e0e      	ADD  R0,R30
00ce4a 1e1f      	ADC  R1,R31
00ce4b 1f46      	ADC  R20,R22
00ce4c 1f57      	ADC  R21,R23
00ce4d c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00ce4e 60a1      	SBR  R26,1
                 __DIVD21U3:
00ce4f 953a      	DEC  R19
00ce50 f759      	BRNE __DIVD21U1
00ce51 01fd      	MOVW R30,R26
00ce52 01bc      	MOVW R22,R24
00ce53 01d0      	MOVW R26,R0
00ce54 01ca      	MOVW R24,R20
00ce55 915f      	POP  R21
00ce56 914f      	POP  R20
00ce57 913f      	POP  R19
00ce58 9508      	RET
                 
                 __MODB21:
00ce59 94e8      	CLT
00ce5a ffa7      	SBRS R26,7
00ce5b c002      	RJMP __MODB211
00ce5c 95a1      	NEG  R26
00ce5d 9468      	SET
                 __MODB211:
00ce5e fde7      	SBRC R30,7
00ce5f 95e1      	NEG  R30
00ce60 dfa8      	RCALL __DIVB21U
00ce61 2fea      	MOV  R30,R26
00ce62 f40e      	BRTC __MODB212
00ce63 95e1      	NEG  R30
                 __MODB212:
00ce64 9508      	RET
                 
                 __MODW21U:
00ce65 dfb6      	RCALL __DIVW21U
00ce66 01fd      	MOVW R30,R26
00ce67 9508      	RET
                 
                 __MODW21:
00ce68 94e8      	CLT
00ce69 ffb7      	SBRS R27,7
00ce6a c004      	RJMP __MODW211
00ce6b 95a0      	COM  R26
00ce6c 95b0      	COM  R27
00ce6d 9611      	ADIW R26,1
00ce6e 9468      	SET
                 __MODW211:
00ce6f fdf7      	SBRC R31,7
00ce70 dee5      	RCALL __ANEGW1
00ce71 dfaa      	RCALL __DIVW21U
00ce72 01fd      	MOVW R30,R26
00ce73 f40e      	BRTC __MODW212
00ce74 dee1      	RCALL __ANEGW1
                 __MODW212:
00ce75 9508      	RET
                 
                 __MODD21U:
00ce76 dfbd      	RCALL __DIVD21U
00ce77 01fd      	MOVW R30,R26
00ce78 01bc      	MOVW R22,R24
00ce79 9508      	RET
                 
                 __CHKSIGNB:
00ce7a 94e8      	CLT
00ce7b ffe7      	SBRS R30,7
00ce7c c002      	RJMP __CHKSB1
00ce7d 95e1      	NEG  R30
00ce7e 9468      	SET
                 __CHKSB1:
00ce7f ffa7      	SBRS R26,7
00ce80 c004      	RJMP __CHKSB2
00ce81 95a1      	NEG  R26
00ce82 f800      	BLD  R0,0
00ce83 9403      	INC  R0
00ce84 fa00      	BST  R0,0
                 __CHKSB2:
00ce85 9508      	RET
                 
                 __CHKSIGNW:
00ce86 94e8      	CLT
00ce87 fff7      	SBRS R31,7
00ce88 c002      	RJMP __CHKSW1
00ce89 decc      	RCALL __ANEGW1
00ce8a 9468      	SET
                 __CHKSW1:
00ce8b ffb7      	SBRS R27,7
00ce8c c006      	RJMP __CHKSW2
00ce8d 95a0      	COM  R26
00ce8e 95b0      	COM  R27
00ce8f 9611      	ADIW R26,1
00ce90 f800      	BLD  R0,0
00ce91 9403      	INC  R0
00ce92 fa00      	BST  R0,0
                 __CHKSW2:
00ce93 9508      	RET
                 
                 __GETW1P:
00ce94 91ed      	LD   R30,X+
00ce95 91fc      	LD   R31,X
00ce96 9711      	SBIW R26,1
00ce97 9508      	RET
                 
                 __GETD1P:
00ce98 91ed      	LD   R30,X+
00ce99 91fd      	LD   R31,X+
00ce9a 916d      	LD   R22,X+
00ce9b 917c      	LD   R23,X
00ce9c 9713      	SBIW R26,3
00ce9d 9508      	RET
                 
                 __GETD1P_INC:
00ce9e 91ed      	LD   R30,X+
00ce9f 91fd      	LD   R31,X+
00cea0 916d      	LD   R22,X+
00cea1 917d      	LD   R23,X+
00cea2 9508      	RET
                 
                 __PUTDP1:
00cea3 93ed      	ST   X+,R30
00cea4 93fd      	ST   X+,R31
00cea5 936d      	ST   X+,R22
00cea6 937c      	ST   X,R23
00cea7 9508      	RET
                 
                 __PUTDP1_DEC:
00cea8 937e      	ST   -X,R23
00cea9 936e      	ST   -X,R22
00ceaa 93fe      	ST   -X,R31
00ceab 93ee      	ST   -X,R30
00ceac 9508      	RET
                 
                 __GETD1PF:
00cead bf6b      	OUT  RAMPZ,R22
00ceae 9007      	ELPM R0,Z+
00ceaf 9017      	ELPM R1,Z+
00ceb0 9167      	ELPM R22,Z+
00ceb1 9176      	ELPM R23,Z
00ceb2 01f0      	MOVW R30,R0
00ceb3 9508      	RET
                 
                 __GETD1S0:
00ceb4 81e8      	LD   R30,Y
00ceb5 81f9      	LDD  R31,Y+1
00ceb6 816a      	LDD  R22,Y+2
00ceb7 817b      	LDD  R23,Y+3
00ceb8 9508      	RET
                 
                 __GETD2S0:
00ceb9 81a8      	LD   R26,Y
00ceba 81b9      	LDD  R27,Y+1
00cebb 818a      	LDD  R24,Y+2
00cebc 819b      	LDD  R25,Y+3
00cebd 9508      	RET
                 
                 __PUTD1S0:
00cebe 83e8      	ST   Y,R30
00cebf 83f9      	STD  Y+1,R31
00cec0 836a      	STD  Y+2,R22
00cec1 837b      	STD  Y+3,R23
00cec2 9508      	RET
                 
                 __PUTDZ20:
00cec3 83a0      	ST   Z,R26
00cec4 83b1      	STD  Z+1,R27
00cec5 8382      	STD  Z+2,R24
00cec6 8393      	STD  Z+3,R25
00cec7 9508      	RET
                 
                 __PUTPARD1:
00cec8 937a      	ST   -Y,R23
00cec9 936a      	ST   -Y,R22
00ceca 93fa      	ST   -Y,R31
00cecb 93ea      	ST   -Y,R30
00cecc 9508      	RET
                 
                 __PUTPARD2:
00cecd 939a      	ST   -Y,R25
00cece 938a      	ST   -Y,R24
00cecf 93ba      	ST   -Y,R27
00ced0 93aa      	ST   -Y,R26
00ced1 9508      	RET
                 
                 __PUTPARL:
00ced2 27bb      	CLR  R27
                 __PUTPAR:
00ced3 0fea      	ADD  R30,R26
00ced4 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00ced5 9002      	LD   R0,-Z
00ced6 920a      	ST   -Y,R0
00ced7 9711      	SBIW R26,1
00ced8 f7e1      	BRNE __PUTPAR0
00ced9 9508      	RET
                 
                 __SWAPD12:
00ceda 2e18      	MOV  R1,R24
00cedb 2f86      	MOV  R24,R22
00cedc 2d61      	MOV  R22,R1
00cedd 2e19      	MOV  R1,R25
00cede 2f97      	MOV  R25,R23
00cedf 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00cee0 2e1b      	MOV  R1,R27
00cee1 2fbf      	MOV  R27,R31
00cee2 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00cee3 2e1a      	MOV  R1,R26
00cee4 2fae      	MOV  R26,R30
00cee5 2de1      	MOV  R30,R1
00cee6 9508      	RET
                 
                 __EEPROMRDD:
00cee7 9612      	ADIW R26,2
00cee8 d002      	RCALL __EEPROMRDW
00cee9 01bf      	MOVW R22,R30
00ceea 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00ceeb 9611      	ADIW R26,1
00ceec d002      	RCALL __EEPROMRDB
00ceed 2ffe      	MOV  R31,R30
00ceee 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00ceef 99f9      	SBIC EECR,EEWE
00cef0 cffe      	RJMP __EEPROMRDB
00cef1 93ff      	PUSH R31
00cef2 b7ff      	IN   R31,SREG
00cef3 94f8      	CLI
00cef4 bda1      	OUT  EEARL,R26
00cef5 bdb2      	OUT  EEARH,R27
00cef6 9af8      	SBI  EECR,EERE
00cef7 b5e0      	IN   R30,EEDR
00cef8 bfff      	OUT  SREG,R31
00cef9 91ff      	POP  R31
00cefa 9508      	RET
                 
                 __EEPROMWRD:
00cefb d007      	RCALL __EEPROMWRW
00cefc 9612      	ADIW R26,2
00cefd 010f      	MOVW R0,R30
00cefe 01fb      	MOVW R30,R22
00ceff d003      	RCALL __EEPROMWRW
00cf00 01f0      	MOVW R30,R0
00cf01 9712      	SBIW R26,2
00cf02 9508      	RET
                 
                 __EEPROMWRW:
00cf03 d007      	RCALL __EEPROMWRB
00cf04 9611      	ADIW R26,1
00cf05 93ef      	PUSH R30
00cf06 2fef      	MOV  R30,R31
00cf07 d003      	RCALL __EEPROMWRB
00cf08 91ef      	POP  R30
00cf09 9711      	SBIW R26,1
00cf0a 9508      	RET
                 
                 __EEPROMWRB:
00cf0b 9bf9      	SBIS EECR,EEWE
00cf0c c002      	RJMP __EEPROMWRB1
00cf0d 95a8      	WDR
00cf0e cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00cf0f b79f      	IN   R25,SREG
00cf10 94f8      	CLI
00cf11 bda1      	OUT  EEARL,R26
00cf12 bdb2      	OUT  EEARH,R27
00cf13 9af8      	SBI  EECR,EERE
00cf14 b580      	IN   R24,EEDR
00cf15 17e8      	CP   R30,R24
00cf16 f019      	BREQ __EEPROMWRB0
00cf17 bde0      	OUT  EEDR,R30
00cf18 9afa      	SBI  EECR,EEMWE
00cf19 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00cf1a bf9f      	OUT  SREG,R25
00cf1b 9508      	RET
                 
                 __CPD10:
00cf1c 9730      	SBIW R30,0
00cf1d 4060      	SBCI R22,0
00cf1e 4070      	SBCI R23,0
00cf1f 9508      	RET
                 
                 __CPW02:
00cf20 2400      	CLR  R0
00cf21 160a      	CP   R0,R26
00cf22 060b      	CPC  R0,R27
00cf23 9508      	RET
                 
                 __CPD20:
00cf24 9710      	SBIW R26,0
00cf25 4080      	SBCI R24,0
00cf26 4090      	SBCI R25,0
00cf27 9508      	RET
                 
                 __CPD02:
00cf28 2400      	CLR  R0
00cf29 160a      	CP   R0,R26
00cf2a 060b      	CPC  R0,R27
00cf2b 0608      	CPC  R0,R24
00cf2c 0609      	CPC  R0,R25
00cf2d 9508      	RET
                 
                 __CPD12:
00cf2e 17ea      	CP   R30,R26
00cf2f 07fb      	CPC  R31,R27
00cf30 0768      	CPC  R22,R24
00cf31 0779      	CPC  R23,R25
00cf32 9508      	RET
                 
                 __CPD21:
00cf33 17ae      	CP   R26,R30
00cf34 07bf      	CPC  R27,R31
00cf35 0786      	CPC  R24,R22
00cf36 0797      	CPC  R25,R23
00cf37 9508      	RET
                 
                 __SAVELOCR6:
00cf38 935a      	ST   -Y,R21
                 __SAVELOCR5:
00cf39 934a      	ST   -Y,R20
                 __SAVELOCR4:
00cf3a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00cf3b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00cf3c 931a      	ST   -Y,R17
00cf3d 930a      	ST   -Y,R16
00cf3e 9508      	RET
                 
                 __LOADLOCR6:
00cf3f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00cf40 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00cf41 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00cf42 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00cf43 8119      	LDD  R17,Y+1
00cf44 8108      	LD   R16,Y
00cf45 9508      	RET
                 
                 __INITLOCB:
00cf46 2799      	CLR  R25
                 __INITLOCW:
00cf47 0fac      	ADD  R26,R28
00cf48 1fbd      	ADC  R27,R29
00cf49 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00cf4a 9007      	ELPM R0,Z+
00cf4b 920d      	ST   X+,R0
00cf4c 9701      	SBIW R24,1
00cf4d f7e1      	BRNE __INITLOC0
00cf4e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 476 r1 :  69 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 818 r17: 938 r18: 494 r19: 386 r20: 312 r21: 249 r22:1283 r23:1137 
r24: 395 r25: 278 r26:4224 r27:1482 r28: 518 r29:  25 r30:7567 r31:3095 
x  : 576 y  :3774 z  : 605 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 220 add   : 231 
adiw  : 773 and   :  14 andi  : 203 asr   :   7 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  17 brcs  :   5 break :   0 breq  : 595 
brge  : 179 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 127 
brlt  :  72 brmi  :  30 brne  : 822 brpl  : 152 brsh  :  97 brtc  :   9 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  :6140 
cbi   :  40 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 206 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  28 
cp    : 110 cpc   : 538 cpi   :1097 cpse  :   0 dec   :  25 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 111 inc   :   7 jmp   : 351 
ld    : 611 ldd   :2676 ldi   :6743 lds   : 656 lpm   :   0 lsl   :  41 
lsr   :  21 mov   : 378 movw  :1152 mul   : 113 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  65 ori   :  53 out   : 113 pop   : 228 
push  : 228 rcall : 293 ret   : 957 reti  :   5 rjmp  :1662 rol   :  61 
ror   :  34 sbc   :  39 sbci  : 657 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 282 sbr   :   5 sbrc  :  15 sbrs  :  59 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  15 ses   :   0 set   :   8 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1156 std   : 489 sts   : 458 
sub   :  32 subi  : 707 swap  :   7 tst   : 159 wdr   :  12 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x019e9e  80320  25822 106142  262144  40.5%
[.dseg] 0x000200 0x001a97      0   3495   3495    8703  40.2%
[.eseg] 0x000000 0x000595      0   1429   1429    4096  34.9%

Assembly complete, 0 errors, 42 warnings
